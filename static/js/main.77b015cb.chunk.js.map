{"version":3,"sources":["lib/web3js/factory/web3.js","utils/LoadableComponent.js","lib/web3js/config/chain.js","lib/web3js/config/contract.js","lib/web3js/config/rest_server.js","lib/web3js/utils.js","lib/web3js/v2/config/chain.js","lib/web3js/v2/config/contract.js","lib/web3js/v2/utils/convert.js","lib/web3js/v2/utils/network.js","lib/web3js/v2/utils/validate.js","lib/web3js/v2/utils/chain.js","lib/web3js/v2/utils/oracle.js","lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/factory.js","lib/web3js/v2/contract/contract_base.js","lib/web3js/v2/contract/abis.js","lib/web3js/v2/contract/perpetual_pool.js","lib/web3js/v2/contract/perpetual_pool_router.js","lib/web3js/v2/contract/b_token.js","lib/web3js/v2/contract/l_token.js","lib/web3js/v2/contract/p_token.js","lib/web3js/v2/api/mining_query_api.js","lib/web3js/v2/api/mining_transaction_api.js","lib/web3js/v2/api/api_globals.js","lib/web3js/v2/api/trade_query_api.js","lib/web3js/v2/api/trade_history_api.js","lib/web3js/v2/api/trade_transaction_api.js","lib/web3js/api/walletApi.js","lib/web3js/api/lpPoolApi.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js","lib/web3js/calculation/fundingRate.js","lib/web3js/calculation/index.js","lib/web3js/api/tradeHistoryApi.js","lib/web3js/api/restApi.js","lib/web3js/api/databaseApi.js","lib/web3js/api/contractTransactionApi.js","lib/web3js/indexV2.js","lib/web3js/api/contractTransactionApiV2.js","lib/web3js/api/apiGlobals.js","lib/polyfill/numberPolyfill.js","App.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Config.js","model/Trading.js","model/Version.js","index.js","lib/web3js/config/database.js","lib/web3js/api/contractQueryApi.js","lib/web3js/api/slpPoolApi.js","lib/web3js/api/clp2PoolApi.js","lib/web3js/api/clpPoolApi.js","utils/utils.js","lib/web3js/contract/contract.js","lib/web3js/contract/perpetual_pool.js","lib/web3js/contract/bToken.js","lib/web3js/contract/pToken.js","lib/web3js/contract/lToken.js","lib/web3js/contract/database.js","lib/web3js/contract/database_wormhole.js","lib/web3js/contract/database_airdrop.js","lib/web3js/contract/mining_vault_pool.js","lib/web3js/contract/mining_vault_router.js","lib/web3js/contract/slp_pool.js","lib/web3js/contract/clp_pool.js","lib/web3js/contract/clp2_pool.js","lib/web3js/contract/deri.js","lib/web3js/contract/wormhole.js","lib/web3js/factory/contracts.js","lib/web3js/config/env.js"],"names":["metaMaskWeb3","web3Instance","web3","undefined","window","ethereum","Error","Web3","web3Factory","web3InstanceMap","chainId","a","Object","keys","includes","console","log","getChainProviderUrl","providerUrl","providers","HttpProvider","LoadingPage","NProgress","start","done","React","Component","LoadableComponent","component","Loadable","loader","loading","ChainProviderUrls","provider_urls","getChainProviderUrlsConfig","res","filter","i","length","getContractAddressConfig","env","pool","bToken","pToken","lToken","dToken","MiningVault","initialBlock","bTokenSymbol","symbol","unit","version","getSlpContractAddressConfig","getClpContractAddressConfig","getClp2ContractAddressConfig","getLpContractAddressConfig","type","getMiningVaultRouterContractAddress","filteredConfig","MiningVaultRouter","getDeriContractAddressConfig","Deri","Wormhole","getAnnualBlockNumberConfig","1","56","128","3","97","256","getRestServerConfig","getRedisWorkerQueneConfig","BigNumber","config","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","bg","value","base","times","repeat","div","max","value1","value2","gte","min","lte","toChecksumAddress","utils","hexToString","hexToUtf8","hexToNumber","hexToNumberString","naturalToDeri","toFixed","naturalWithPercentage","sd","toString","deriToNatural","deriToString","deriToBool","toNumber","hasInvalidArgsValue","args","some","isNaN","checkHttpServerIsAlive","url","fetch","ok","getAliveHttpServer","urls","MAX_VALUE","getNetworkName","poolNetwork","normalizeChainId","getPoolContractAddress","poolAddress","DeriEnv","get","c","p","bTokenAddress","pTokenAddress","lTokenAddress","dTokenAdress","MinningVaultAddress","getMiningVaultContractAddress","pools","getAnnualBlockNumber","blockNumbers","parseInt","getSlpContractAddress","getClp2ContractAddress","getClpContractAddress","getLpContractAddress","getDeriContractAddress","deriAddress","wormholeAddress","getOracleUrl","addSymbolParam","getOracleInfo","retry","json","getBTCUSDPrice","responseJson","price","format","bigNumber","toFormat","replaceAll","getChainProviderUrls","getPoolConfigList","router","bTokenId","symbolId","getFilteredPoolConfigList","poolConfigList","check","getPoolConfig","validateArgs","every","parseFloat","getOraclePrice","calculateEntryPrice","volume","cost","multiplier","eq","calculateMarginHeld","minInitialMarginRatio","abs","calculatePnl","minus","calculateLiquidationPrice","margin","minMaintenanceMarginRatio","tmp","gt","plus","calculateLiquidityUsed","tradersNetVolume","liquidity","poolMarginRatio","calculateFundingRate","fundingRateCoefficient","processFundingRate","fundingRate","annualBlockCount","getOrSet","perpetualPoolFactory","instanceMap","address","useInfura","key","PerpetualPool","perpetualPoolRouterFactory","PerpetualPoolRouter","bTokenFactory","BToken","lTokenFactory","LToken","pTokenFactory","PToken","MAX_GAS_AMOUNT","ContractBase","contractAddress","this","method","_init","contract","methods","call","accountAddress","gas","estimateGas","from","tx","self","_transactionReceipt","resolve","reject","eth","getTransactionReceipt","error","receipt","setTimeout","status","errorMessage","txRaw","to","numberToHex","data","encodeABI","request","params","Promise","_getTransactionReceipt","perpetualPoolAbi","perpetualPoolRouterAbi","bTokenAbi","lTokenAbi","pTokenAbi","contractAbi","bTokenLength","symbolLength","routerAddress","protocolFeeCollector","protocolFeeAccrued","Contract","all","getLengths","getAddresses","getParameters","_call","decimals0","minBToken0Ratio","minPoolMarginRatio","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","protocolFeeCollectRatio","swapperAddress","oracleAddress","decimals","discount","pnl","cumulativePnl","feeRatio","cumulativeFundingRate","tradersNetCost","blockNumber","getBlock","eventName","fromBlock","events","amount","getPastEvents","toBlock","es","e","push","_transact","_balanceOf","allowance","processAsset","lastCumulativePnl","Array","isArray","map","processPosition","lastCumulativeFundingRate","getLiquidityInfo","perpetualPool","getBToken","getAsset","bTokenInfo","lTokenAsset","poolLiquidity","shares","maxRemovableShares","getPoolLiquidity","db","databaseFactory","getValues","catch","err","addLiquidity","perpetualPoolRouter","success","transaction","removeLiquidity","priceCache","_prices","split","update","set","val","timestamp","Date","now","fundingRateCache","resourceMap","resource","getSpecification","getSymbol","symbolInfo","parameterInfo","bSymbol","getPositionInfo","bTokenConfigList","bTokenIdList","getPosition","positionInfo","getMargins","margins","promises","bTokens","reduce","accum","index","averageEntryPrice","marginHeld","unrealizedPnl","liquidationPrice","getWalletBalance","balanceOf","balance","isUnlocked","getEstimatedFee","cache","_getFundingRate","getEstimatedMargin","leverage","getFundingRateCache","poolconfigList","promiseList","bTokenInfoList","fundingRatePerBlock","liquidityUsed","getFundingRate","fundingRate0","getEstimatedFundingRate","newNetVolume","fundingRate1","getLiquidityUsed","liquidityUsed0","getEstimatedLiquidityUsed","liquidityUsed1","getPoolBTokensBySymbolId","bTokensConfigList","symbolsConfigList","bTokenList","resultList","walletBalance","symbolIdList","getPositions","positions","symbols","availableBalance","fetchJson","resp","processTradeEvent","info","txHash","tradeVolume","_getTimeStamp","timeStamp","direction","time","transactionFee","_calculateFee","notional","transactionHash","getTradeHistoryOnline","symbolConfigList","_getBlockInfo","filters","owner","_getPastEvents","number","result","returnValues","item","unshift","getTradeHistory","tradeHistory","tradeFromBlock","tradeHistoryBlock","trim","tradeHistoryOnline","concat","sort","b","unlock","depositMargin","addMargin","withdrawMargin","removeMargin","tradeWithMargin","newVolume","trade","closePosition","negated","connectWallet","handleChainChanged","handleAccountChanged","accounts","account","on","location","reload","getUserWalletBalance","walletAddress","getBalance","fromWei","getLpLiquidityInfo","getSlpLiquidityInfo","getClpLiquidityInfo","getClp2LiquidityInfo","addLpLiquidity","addSlpLiquidity","addClpLiquidity","addClp2Liquidity","removeLpLiquidity","removeSlpLiquidity","removeClpLiquidity","removeClp2Liquidity","isLpUnlocked","isSlpUnlocked","isClpUnlocked","isClp2Unlocked","unlockLp","unlockSlp","unlockClp","unlockClp2","getLpWalletBalance","getSlpWalletBalance","getClpWalletBalance","getClp2WalletBalance","getContractAddressConfig2","require","getPoolConfigListV2","getLiquidityInfo2","getLiquidityInfoV2","getPoolLiquidity2","getPoolLiquidityV2","addLiquidity2","addLiquidityV2","removeLiquidity2","removeLiquidityV2","getSpecification2","getSpecificationV2","getPositionInfo2","getPositionInfoV2","getWalletBalance2","getWalletBalanceV2","isUnlocked2","isUnlockedV2","getEstimatedFee2","getEstimatedFeeV2","getFundingRate2","getFundingRateV2","getEstimatedFundingRate2","getEstimatedFundingRateV2","getLiquidityUsed2","getLiquidityUsedV2","getEstimatedLiquidityUsed2","getEstimatedLiquidityUsedV2","unlock2","unlockV2","depositMargin2","depositMarginV2","withdrawMargin2","withdrawMarginV2","tradeWithMargin2","tradeWithMarginV2","closePosition2","closePositionV2","getTradeHistory2","getTradeHistoryV2","calculateShareValue","lTokenTotalSupply","calculateMaxRemovableShares","lTokenBalance","shareValue","removable","calculateMaxWithdrawMargin","held","isOrderValid","minMargin","poolMaxVolume","message","baseToken","processLiquidateEvent","national","getLiquidateHistoryOnline","getHttpBase","getFundingRateCache2","liquidateFromBlock","liquidateHistoryBlock","liquidateHistoryOnline","getUserInfo","userAddress","deadline","nonce","v","r","s","valid","getUserInfoHarvest","harvestLp","harvestTrade","lp","getUserInfoTotal","total","getUserInfoAll","userInfo","userInfoHarvest","userInfoTotal","assign","getPoolInfoApy","apy","volume1h","volume24h","getLpPoolInfoApy","apy2","getUserInfoInPool","getUserInfoAllForAirDrop","databaseAirdropFactory","v1","r1","s1","v2","r2","s2","pPool","maxWithdrawMargin","_transactPool","totalSupply","getStateValues","orderValidation","mintDToken","miningVaultAddress","miningVault","miningVaultPoolFactory","wsOnPromise","ws","event","JSON","parse","sendTradeTxToWorkerQuene","methodCall","wsInstance","send","res2","addSlpLiquidity2","removeSlpLiquidity2","addClpLiquidity2","removeClpLiquidity2","addClp2Liquidity2","removeClp2Liquidity2","_accountAddress","_price","_interval","_update","setInterval","clear","clearInterval","PerpetualPoolParametersCache","_parameters","_ws","io","transports","path","id","Number","prototype","len","RangeError","Math","pow","round","numberArr","padNum","intNum","deciNum","lastNum","substr","changedInt","replace","num","dotPos","indexOf","need","j","DesktopApp","MobileApp","App","isBrowser","isMobile","Wallet","detail","isConnected","connect","loadWalletBalance","wallet","formatBalance","chainInfo","supported","setDetail","makeAutoObservable","observable","action","supportV2","computed","eqInNumber","Oracle","kData","paused","listeners","setIndex","initWebSocket","WebSocket","timeType","setSymbol","obj","toUpperCase","low","high","open","close","time_type","emit","listener","uid","bars","callback","history","el","setPause","Position","spec","position","interval","load","setInfo","History","Config","makeObservable","setAll","current","configs","isV2","cur","findIndex","Trading","userSelectedDirection","setWallet","setConfigs","setConfig","setContract","setPosition","setVolume","setUserSelectedDirection","setFundingRate","setHistory","setPaused","fundingRateTip","volumeDisplay","configInfo","oracle","contractInfo","historyInfo","defaultConfig","getDefaultConfig","onConfigChange","find","changed","isV1","pause","store","resume","symbolChanged","unsubscribeBars","addListener","loadFundingRate","fromStore","getFromStore","sessionStorageKey","sessionStorage","setItem","stringify","getItem","curVolume","originVolume","contractValue","dynBalance","available","exchanged","versionKey","Version","setCurrent","versionFromSession","notSave","trading","ReactDOM","render","StrictMode","document","getElementById","getDBProviderUrlsConfig","getDBAddressConfig","useProductionDB","getDBWormholeAddressConfig","getDBAirdropAddressConfig","parameters","slpPool","slpPoolFactory","getLiquidity","bTokenBalance","clp2Pool","clp2PoolFactory","clpPool","clpPoolFactory","formatAddress","str1","str2","isLP","isSushiLP","isCakeLP","isProvider","_estimatedGas","getGasPrice","POOL_ABI","defaultValue","cumuFundingRate","cumuFundingRateBlock","minAddLiquidity","redemptionFeeRatio","priceDelayAllowance","signed","gasPrice","args1","args2","CONTRACT_ABI","BTokenContract","_balance","PTokenContract","lastCumuFundingRate","lastUpdateTimestamp","LTokenContract","DB_CONTRACT_ABI","DatabaseContract","keyArray","updateProviderUrl","DatabaseWormholeContract","DatabaseAirdropContract","MiningVaultPool","SlpPool","ClpPool","Clp2Pool","DeriContract","useProvider","WormholeContract","toChainId","toWormholeAddress","fromChainId","fromWormhole","fromNonce","databaseInstanceMap","database","databaseWormholeFactory","perpetualPoolInstanceMap","bTokenInstanceMap","pTokenInstanceMap","lTokenInstanceMap","mVaultInstanceMap","mVault","slpPoolInstanceMap","clpPoolInstanceMap","clp2PoolInstanceMap","deriFactory","deriInstanceMap","deri","wormholeFactory","wormholeInstanceMap","wormhole","miningVaultRouterFactory","_deriEnv"],"mappings":"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","file":"static/js/main.77b015cb.chunk.js","sourcesContent":["import Web3 from 'web3';\nimport { getChainProviderUrl } from '../utils';\n\nexport const metaMaskWeb3 = (function () {\n  let web3Instance = null;\n  return () => {\n    if (web3Instance !== null) {\n      return web3Instance;\n    }\n    let web3;\n    if (typeof window.ethereum !== undefined) {\n      web3 = new Web3(window.ethereum);\n    } else {\n      // console.log(\"Please install MetaMask first\")\n      throw new Error('Please install MetaMask first');\n    }\n    web3Instance = web3;\n    return web3;\n  };\n})();\n\nexport const web3Factory = (function () {\n  const web3InstanceMap = {};\n  return async(chainId) => {\n    if (Object.keys(web3InstanceMap).includes(chainId)) {\n      return web3InstanceMap[chainId];\n    }\n    console.log(\n      `==== web3Factory(${chainId}), please caution the access limits ===`\n    );\n    const providerUrl = await getChainProviderUrl(chainId);\n    const web3 = new Web3(new Web3.providers.HttpProvider(providerUrl));\n    web3InstanceMap[chainId] = web3;\n    return web3;\n  };\n})();\n","import React from 'react'\nimport Loadable from 'react-loadable'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\n\nclass LoadingPage extends React.Component {\n  //类似github页面加载的那个加载条\n  componentWillMount(){\n    NProgress.start()\n  }\n  componentWillUnmount(){\n    NProgress.done()\n  }\n  render () {\n    return (\n      <div/>\n    )\n  }\n}\n\nconst LoadableComponent = (component) => {\n  return Loadable({\n    loader: component,\n    loading: ()=><LoadingPage/>\n  })\n}\n\nexport default LoadableComponent","export const ChainProviderUrls = [\n  {\n    provider_urls: [\n      'https://mainnet.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n    ],\n    chainId: '1',\n  },\n  {\n    provider_urls: [\n      'https://bsc-dataseed.binance.org',\n      'https://bsc-dataseed1.defibit.io/',\n      'https://bsc-dataseed1.ninicoin.io/',\n    ],\n    chainId: '56',\n  },\n  {\n    provider_urls: ['https://http-mainnet.hecochain.com'],\n    chainId: '128',\n  },\n  {\n    provider_urls: [\n      'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n    ],\n    chainId: '3',\n  },\n  {\n    provider_urls: [\n      'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n    ],\n    chainId: '42',\n  },\n  {\n    provider_urls: [\n      'https://data-seed-prebsc-2-s3.binance.org:8545/',\n      'https://data-seed-prebsc-1-s1.binance.org:8545/',\n      'https://data-seed-prebsc-2-s1.binance.org:8545/',\n      'https://data-seed-prebsc-1-s2.binance.org:8545/',\n      'https://data-seed-prebsc-2-s2.binance.org:8545/',\n      'https://data-seed-prebsc-1-s3.binance.org:8545/',\n    ],\n    chainId: '97',\n  },\n  {\n    provider_urls: ['https://http-testnet.hecochain.com'],\n    chainId: '256',\n  },\n];\n\nexport const getChainProviderUrlsConfig = (chainId) => {\n  const chainProviderUrls = [\n    {\n      provider_urls: [\n        'https://mainnet.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '1',\n    },\n    {\n      provider_urls: [\n        'https://bsc-dataseed.binance.org',\n        'https://bsc-dataseed1.defibit.io/',\n        'https://bsc-dataseed1.ninicoin.io/',\n      ],\n      chainId: '56',\n    },\n    {\n      provider_urls: ['https://http-mainnet.hecochain.com'],\n      chainId: '128',\n    },\n    {\n      provider_urls: [\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '3',\n    },\n    {\n      provider_urls: [\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '42',\n    },\n    {\n      provider_urls: [\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\n      ],\n      chainId: '97',\n    },\n    {\n      provider_urls: ['https://http-testnet.hecochain.com'],\n      chainId: '256',\n    },\n  ];\n  \n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\n  //console.log('res',res)\n  if (res.length > 0) {\n    return res[0].provider_urls\n  } else {\n    throw new Error(`getChainProviderUrlsConfig: no urls for chainId ${chainId}`)\n  }\n}\n","/** @module config */\n\n/**\n * Get the contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].pool - pool address\n * @returns {string} response[].bToken - base token address\n * @returns {string} response[].pToken - position token address\n * @returns {string} response[].lToken - liquidity token address\n * @returns {string} response[].initialBlock - initial block of the pool\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].symbol - symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getContractAddressConfig = (env = 'dev') => {\n  // production environment\n  if (env === 'prod') {\n    // console.log('!!! production !!!')\n    return [\n      {\n        pool: '0x639a9C2fAe976D089dCcc2ffAE51Ef1dd04B7985',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '5288684',\n        bTokenSymbol: 'BUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '56',\n        version: 'v1',\n      },\n      {\n        pool: '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '6753399',\n        bTokenSymbol: 'BUSD',\n        symbol: 'COIN',\n        unit: 'COIN',\n        chainId: '56',\n        version: 'v1',\n      },\n      {\n        pool: '0x919F97417857781f754e00CCCD9100f78B759818',\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '7475766',\n        bTokenSymbol: 'DERI',\n        symbol: 'iMEME',\n        unit: 'iMEME',\n        chainId: '56',\n        version: 'v1',\n      },\n      {\n        pool: '0x3C2970466635AAeFEd1cfe630D051Fa6D281aEbB',\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '11949433',\n        bTokenSymbol: 'USDT',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        version: 'v1',\n      },\n      {\n        pool: '0x7137cc9f252dc405dadc35F597dA8B32e8653603',\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '11860070',\n        bTokenSymbol: 'BAC',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        version: 'v1',\n      },\n      {\n        pool: '0x9b404BAB12CE0D5039e7313d9e24f4b5c8E8E8e3',\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        initialBlock: '2557914',\n        bTokenSymbol: 'HUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '128',\n        version: 'v1',\n      },\n    ];\n  }\n  // develop environment\n  // console.log('-- test ---')\n  return [\n    {\n      pool: '0x67eE8f0CB17e750219Bd58d433D52ab4B3d8A081',\n      bToken: '0x8F038C454B6E68B2988706a1a5f78dE2C4634097',\n      pToken: '0xad794Adc3Ed6085A79Ba3e2FCD13Df8d33d462Ec',\n      lToken: '0x37732230ac101f59490762Ef73Be43B5E5Ec4949',\n      initialBlock: '9986356',\n      bTokenSymbol: 'USDT',\n      symbol: 'BTCUSD',\n      unit: 'BTC',\n      chainId: '3',\n      version: 'v1',\n    },\n    {\n      pool: '0xFFe402106E8F73F0A44C7350C2b734e048f448f2',\n      bToken: '0xa0354a4bB59657ad9A2b3eeC4f53f7A6Fb171DD1',\n      pToken: '0x5FeF67FD24f37b90E0c96324380F63413dF22f78',\n      lToken: '0xCdDbf76F76B9F95135F5D531fefc344258ff322a',\n      initialBlock: '7796681',\n      bTokenSymbol: 'BUSD',\n      symbol: 'BTCUSD',\n      unit: 'BTC',\n      chainId: '97',\n      version: 'v1',\n    },\n    {\n      pool: '0x02A614844212f71049c469902F7A20F6540a2792',\n      bToken: '0xa0354a4bB59657ad9A2b3eeC4f53f7A6Fb171DD1',\n      pToken: '0x4396025914025F1C8B74788bF7c64f879064FbA6',\n      lToken: '0x2E80928a9eC105FE79cfC4B54c65d185AC3b7E9C',\n      initialBlock: '8108552',\n      bTokenSymbol: 'BUSD',\n      symbol: 'COIN',\n      unit: 'COIN',\n      chainId: '97',\n      version: 'v1',\n    },\n    {\n      pool: '0xE5a4fCd3CE3a824bF15D5FABd390cF44E83AbE8B',\n      bToken: '0x02c9840fD044abFd58E9674ecc232e8b1F323fE8',\n      pToken: '0xfa803C4528A1b9f91DFc5f8b4ff940f9FE4F4635',\n      lToken: '0xbD57300A178075F774b5F0F9f367B9A2912b7b5e',\n      initialBlock: '3663327',\n      bTokenSymbol: 'HUSD',\n      symbol: 'BTCUSD',\n      unit: 'BTC',\n      chainId: '256',\n      version: 'v1',\n    },\n  ];\n};\n\n/**\n * Get the Slp contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].pool - pool address\n * @returns {string} response[].bToken - base token address\n * @returns {string} response[].pToken - position token address\n * @returns {string} response[].lToken - liquidity token address\n * @returns {string} response[].initialBlock - initial block of the pool\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].symbol - symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getSlpContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        bTokenSymbol: 'DERI-USDT SLP',\n        symbol: '--',\n      },\n    ];\n  }\n  console.log('getSlpContractAddressConfig(): no config for dev environment');\n  return [];\n};\n\n/**\n * Get the Clp contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].pool - pool address\n * @returns {string} response[].bToken - base token address\n * @returns {string} response[].lToken - liquidity token address\n * @returns {string} response[].initialBlock - initial block of the pool\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getClpContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool: '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '6894880',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP',\n        symbol: '--',\n      },\n    ];\n  } else {\n    return [\n      {\n        pool: '0x7aad5ADF82d8B85c826c91924AcdACafAAA945f5',\n        bToken: '0x76340AB22aECAaa8f52D5341d2df404CBA966039',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xd2138766005FAB46E20e6F7e1C4C32A375CfAC56',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '8309032',\n        chainId: '97',\n        bTokenSymbol: 'CAKE-LP',\n        symbol: '--',\n      },\n    ];\n  }\n};\nexport const getClp2ContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '699498',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP ONSEN',\n        symbol: '--',\n      }\n    ]\n  } else {\n    return []\n  }\n}\n\nexport const getLpContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        bTokenSymbol: 'DERI-USDT SLP',\n        symbol: '--',\n        type: 'slp',\n      },\n      {\n        pool: '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '6894880',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP',\n        symbol: '--',\n        type: 'clp',\n      },\n      {\n        pool: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '699498',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP ONSEN',\n        symbol: '--',\n        type: 'clp2',\n      },\n    ];\n  } else {\n    return [\n      {\n        pool: '0x7aad5ADF82d8B85c826c91924AcdACafAAA945f5',\n        bToken: '0x76340AB22aECAaa8f52D5341d2df404CBA966039',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xd2138766005FAB46E20e6F7e1C4C32A375CfAC56',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '8309032',\n        chainId: '97',\n        bTokenSymbol: 'CAKE-LP',\n        symbol: '--',\n        type: 'clp',\n      },\n    ];\n  }\n};\n\nexport const getMiningVaultRouterContractAddress= (chainId) => {\n  const configs = [\n      {\n        MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\n        chainId: '56'\n      }\n    ]\n  const filteredConfig = configs.filter((i) => i.chainId === chainId)\n  if (filteredConfig.length > 0) {\n    return filteredConfig[0].MiningVaultRouter\n  } else {\n    throw new Error(`getMiningVaultRouterAddressConfig: no address for chainId ${chainId}`)\n  }\n\n}\n\n/**\n * Get the Deri contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].Deri - deri address\n * @returns {string} response[].Wormhole - wormhole token address\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getDeriContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\n        bTokenSymbol: 'DERI',\n        chainId: '1',\n      },\n      {\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\n        bTokenSymbol: 'DERI',\n        chainId: '56',\n      },\n      {\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\n        bTokenSymbol: 'DERI',\n        chainId: '128',\n      },\n    ];\n  }\n  return [\n    {\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\n      bTokenSymbol: 'DERI',\n      chainId: '3',\n    },\n    {\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\n      bTokenSymbol: 'DERI',\n      chainId: '97',\n    },\n    {\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\n      bTokenSymbol: 'DERI',\n      chainId: '256',\n    },\n  ];\n};\n\nexport const getAnnualBlockNumberConfig = () => ({\n  1: '2367422',\n  56: '10497304',\n  128: '10511369',\n  3: '2367422',\n  97: '10497304',\n  256: '10511369',\n});\n","/**\n * Get REST server config\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {string} server url\n */\nexport const getRestServerConfig = (env = 'dev') => {\n  if (env === 'prod' || env === 'production') {\n    // for production\n    return 'https://api.deri.finance';\n  } else {\n    // for test\n    //return 'https://apitest.deri.finance';\n    //return 'http://localhost:8082';\n    return 'http://47.52.225.179';\n  }\n};\n\nexport const getRedisWorkerQueneConfig = (env = \"dev\") => {\n  if (env === \"prod\") {\n    return ['trade_tx_quene', 'trade_worker_group']\n  } else {\n    return ['trade_tx_quene_dev', 'trade_worker_group_dev']\n  }\n};\n","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\nimport {\n  DeriEnv,\n  getChainProviderUrlsConfig,\n  getContractAddressConfig,\n  getSlpContractAddressConfig,\n  getClpContractAddressConfig,\n  getClp2ContractAddressConfig,\n  getLpContractAddressConfig,\n  getAnnualBlockNumberConfig,\n  getDeriContractAddressConfig,\n} from './config';\n\n/** @module utils */\n\nBigNumber.config({\n  DECIMAL_PLACES: 18,\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n  EXPONENTIAL_AT: 256,\n});\n\nexport { BigNumber };\n\n/**\n * Change the value to BigNumber type\n * @func\n * @param {string|number} value - the number that need to changed to BigNumber type\n * @param {string} base - base of the number\n * @returns {BigNumber}\n */\nexport const bg = (value, base = 0) => {\n  if (base === 0) {\n    return BigNumber(value);\n  }\n  if (base > 0) {\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\n  }\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\n};\n\n/**\n * Get the max value\n * @func\n * @param {BigNumber} value1\n * @param {BigNumber} value2\n * @returns {BigNumber}\n */\nexport const max = (value1, value2) => {\n  if (value1.gte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\n/**\n * Get the min value\n * @func\n * @param {BigNumber} value1\n * @param {BigNumber} value2\n * @returns {BigNumber}\n */\nexport const min = (value1, value2) => {\n  if (value1.lte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\n/**\n * Convert the number to a fixed precision\n * @func\n * @param {string} value - the number that need to convert\n * @param {number} num - the number for method toFixed()\n * @returns {string}\n */\nexport const toNatural = (value, num = 0) =>\n  BigNumber(value).toFixed(num).toString();\n\nexport const toHex = (value) => Web3.utils.toHex(value);\n\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\n\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\n\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\n\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\n\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\n\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\n\nexport const hexToNaturalWithPercentage = (value) =>\n  `${bg(hexToNumberString(value), -18)\n    .sd(4)\n    .times(100)\n    .toFixed(4)\n    .toString()}%`;\n\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\n\nexport const naturalWithPercentage = (value) =>\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\n\nexport const deriToNatural = (value) => bg(value, -18);\n\nexport const deriToNaturalWithPercentage = (value) =>\n  `${bg(value, -18).sd(4).times(100).toFixed(4).toString()}%`;\n\nexport const deriToString = (value) => bg(value).toString();\n\nexport const deriToBool = (value) => {\n  if (bg(value).toNumber() === 1) {\n    return true;\n  }\n  return false;\n};\n\nexport const hasInvalidArgsValue = (...args) =>\n  args.some(\n    (i) =>\n      // console.log(bg(i))\n      isNaN(i.toString()) || i.toString() === '0'\n  );\n\n// language\nexport const isObject = (obj) => typeof obj === 'object';\n\nconst np = () => {}\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\n// fetchWithTimeout\nconst fetchWithTimeout = (url, delay=2000, options={}, onTimeout=np) => {\n  const timer = new Promise((resolve) => {\n    setTimeout(resolve, delay, {\n      timeout: true,\n    });\n  });\n  return Promise.race([fetch(url, options), timer]).then((response) => {\n    if (response.timeout) {\n      onTimeout();\n    }\n    return response;\n  });\n};\n\n// http\nexport const checkHttpServerIsAlive = async (url) => {\n  try {\n    //const response = await fetch(url);\n    const response = await fetch(url);\n    if (response.ok) {\n      return true;\n    }\n  } catch (err) {\n    //console.log(err);\n  }\n  return false;\n};\nexport const getAliveHttpServer = async (urls = []) => {\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i];\n    if (await checkHttpServerIsAlive(url)) {\n      return url;\n    }\n  }\n  throw new Error('No alive http server in urls', urls);\n};\n\n// ethereum chain\nexport const MAX_VALUE =\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\nexport const getNetworkName = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let poolNetwork;\n  switch (chainId) {\n    case '1':\n      poolNetwork = 'ethereum';\n      break;\n    case '56':\n      poolNetwork = 'bsc';\n      break;\n    case '128':\n      poolNetwork = 'heco';\n      break;\n    case '3':\n      poolNetwork = 'ropsten';\n      break;\n    case '42':\n      poolNetwork = 'kovan';\n      break;\n    case '97':\n      poolNetwork = 'bsctestnet';\n      break;\n    case '256':\n      poolNetwork = 'hecotestnet';\n      break;\n    default:\n      throw new Error('The networkId is not valid');\n  }\n  return poolNetwork;\n};\n\nexport const getWalletBalanceUnit = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let index;\n  const unitNetworkIdsMap = {\n    ETH: ['1', '3', '42'],\n    BNB: ['56', '97'],\n    HT: ['128', '256'],\n  };\n  const networkIdsArray = Object.values(unitNetworkIdsMap);\n  for (let i = 0; i < networkIdsArray.length; i++) {\n    if (networkIdsArray[i].includes(chainId)) {\n      index = i;\n      break;\n    }\n  }\n  if (index !== undefined) {\n    return Object.keys(unitNetworkIdsMap)[index];\n  }\n  if (chainId === '') {\n    return '';\n  }\n  throw new Error('Invalid Network:', chainId);\n};\n\nexport const getPoolBaseSymbolList = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let result = [];\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  for (let i = 0; i < pools.length; i++) {\n    const { bTokenSymbol, symbol } = pools[i];\n    if (bTokenSymbol && symbol) {\n      result.push(`${symbol}/${bTokenSymbol}`);\n    }\n  }\n  return result;\n};\n\nexport const getPoolBaseTokenAddressObject = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let result = {};\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  for (let i = 0; i < pools.length; i++) {\n    const { bTokenSymbol, symbol, pool } = pools[i];\n    const key = `${symbol}/${bTokenSymbol}`;\n    if (bTokenSymbol && symbol) {\n      result[key] = pool;\n    }\n  }\n  return result;\n};\n\n// export const getPoolContractAddress = (chainId, bTokenSymbol) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getContractAddressConfig(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.bTokenSymbol === bTokenSymbol);\n//   if (pool.length > 0) {\n//     return [\n//       pool[0].pool,\n//       pool[0].bToken,\n//       pool[0].pToken,\n//       pool[0].lToken,\n//       pool[0].dToken,\n//       pool[0].MiningVault,\n//       pool[0].initialBlock,\n//     ];\n//   }\n//   console.log(\n//     `getPoolContractAddress(): contract address is not found: ${chainId} ${bTokenSymbol}`\n//   );\n//   return [];\n// };\n\n// get config by poolAddress\nexport const getPoolContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  // console.log('pool', pool)\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n      bTokenSymbol: pool[0].bTokenSymbol,\n      symbol: pool[0].symbol,\n      unit: pool[0].unit,\n      initialBlock: pool[0].initialBlock,\n    };\n  }\n  console.log(\n    `getPoolContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return [];\n};\n\nexport const getMiningVaultContractAddress = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pools.length > 0) {\n    if (pools[0].MiningVault) {\n      return pools[0].MiningVault;\n    }\n  }\n};\n\n// export const getMiningVaultRouterContractAddress = (chainId) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getContractAddressConfig(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   if (pools.length > 0) {\n//     if (pools[0].MiningVaultRouter) {\n//       return pools[0].MiningVaultRouter;\n//     }\n//   }\n// };\n\nexport const getAnnualBlockNumber = (chainId) => {\n  const blockNumbers = getAnnualBlockNumberConfig();\n  if (blockNumbers[chainId]) {\n    return parseInt(blockNumbers[chainId]);\n  }\n  console.log(`cannot find the annual block number with chainId: ${chainId}`);\n};\n\nexport const getSlpContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getSlpContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n    };\n  }\n  console.log(\n    `getSlpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getClp2ContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getClp2ContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n    };\n  }\n  console.log(\n    `getClp2ContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getClpContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getClpContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      lTokenAddress: pool[0].lToken,\n    };\n  }\n  console.log(\n    `getClpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getLpContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getLpContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      lTokenAddress: pool[0].lToken,\n      type: pool[0].type,\n    };\n  }\n  console.log(\n    `getLpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getDeriContractAddress = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pool = getDeriContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pool.length > 0) {\n    return {\n      deriAddress: pool[0].Deri,\n      wormholeAddress: pool[0].Wormhole,\n      bTokenSymbol: pool[0].bTokenSymbol,\n    };\n  }\n  console.log(\n    `getDeriContractAddress(): contract address is not found: ${chainId}`\n  );\n  return {};\n};\n\nexport const getOracleUrl = (chainId, poolAddress) => {\n  const env = DeriEnv.get()\n  const { symbol } = getPoolContractAddress(chainId, poolAddress);\n  const addSymbolParam = (url, symbol='BTCUSD') => `${url}?symbol=${symbol}`;\n  if (env === 'prod' || env === 'production') {\n    // for production\n    if (symbol) {\n      if (symbol !== 'BTCUSD') {\n        return addSymbolParam('https://oracle3.deri.finance/price', symbol);\n      } else {\n        return addSymbolParam('https://oracle.deri.finance/price', symbol);\n      }\n    }\n    return 'https://oracle.deri.finance/price';\n  } else {\n    if (symbol) {\n      return addSymbolParam('https://oracle2.deri.finance/price', symbol);\n    }\n    // for test\n    return 'https://oracle2.deri.finance/price';\n  }\n};\n\nexport const getOracleInfo = async (chainId, poolAddress) => {\n  let url = getOracleUrl(chainId, poolAddress);\n  //console.log('oracle url', url);\n  let retry = 5;\n  //let timeout = 1000;\n  let res;\n  while (retry > 0) {\n    res = await fetch(url);\n    //if (res && !res.timeout) {\n    if (res) {\n      break;\n    }\n    //console.log('get oracle info timeout')\n    retry -= 1;\n    //timeout += 800;\n  }\n  if (retry === 0 && !res) {\n    throw new Error(`fetch oracle info error: exceed max retry(5).`);\n  }\n  return await res.json();\n};\n\nexport const getBTCUSDPrice = async (chainId, poolAddress) => {\n  try {\n    const responseJson = await getOracleInfo(chainId, poolAddress)\n    let price = responseJson.price\n    if (!price) {\n      price = '0';\n    }\n    return deriToNatural(responseJson.price).toString();\n  } catch (err) {\n    throw err\n  }\n};\nexport const getOraclePrice = getBTCUSDPrice;\n\nexport const getChainProviderUrl = async(chainId) => {\n  chainId = normalizeChainId(chainId);\n  const urls = getChainProviderUrlsConfig(chainId)\n  if (urls.length > 0) {\n    return await getAliveHttpServer(urls)\n  } else {\n    throw new Error(\n      `Cannot find the chain provider url with chainId: ${chainId}`\n    );\n  }\n};\n\nexport const format = (bigNumber) =>\n  bigNumber.toFormat().replaceAll(',', '').toString();\n\nexport const normalizeChainId = (chainId) => {\n  const chainIds = ['1', '56', '128', '3', '42', '97', '256']\n  let res = chainId ? chainId.toString() : chainId;\n  if (chainId && chainIds.includes(res)) {\n    return res;\n  } else {\n    throw new Error(`invalid chainId: ${chainId}`)\n  }\n};\n\nexport const normalizeAddress = (address) => {\n  if (address && typeof address === 'string' && address.startsWith('0x')) {\n    return Web3.utils.toChecksumAddress(address);\n  } else {\n    throw new Error(`invalid address: ${address}`)\n  }\n};","export const getChainProviderUrls = (chainId) => {\n  const chainProviderUrls = [\n    {\n      provider_urls: [\n        \"https://mainnet.infura.io/v3/d0e6582644a845ee8d7c3c18683fec06\",\n      ],\n      chainId: '1',\n    },\n    {\n      provider_urls: [\n        'https://bsc-dataseed.binance.org',\n        'https://bsc-dataseed1.defibit.io/',\n        'https://bsc-dataseed1.ninicoin.io/',\n      ],\n      chainId: '56',\n    },\n    {\n      provider_urls: ['https://http-mainnet.hecochain.com'],\n      chainId: '128',\n    },\n    {\n      provider_urls: [\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '3',\n    },\n    {\n      provider_urls: [\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '42',\n    },\n    {\n      provider_urls: [\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\n      ],\n      chainId: '97',\n    },\n    {\n      provider_urls: ['https://http-testnet.hecochain.com'],\n      chainId: '256',\n    },\n  ];\n  \n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\n  //console.log('res',res)\n  if (res.length > 0) {\n    return res[0].provider_urls\n  } else {\n    throw new Error(`getChainProviderUrls: no urls for chainId ${chainId}`)\n  }\n}\n\nexport const getAnnualBlockNumberConfig = () => {\n  return {\n    1: '2367422',\n    56: '10497304',\n    128: '10511369',\n    3: '2367422',\n    97: '10497304',\n    256: '10511369',\n  };\n};\n","import { DeriEnv } from \"../../config\";\n\nexport const getPoolConfigList = (env = 'dev') => {\n  if (env === 'prod') {\n    return [];\n  } else {\n    return [\n      {\n        pool: '0x7dB32101081B17E105283820b2Ed3659DFE21470',\n        pToken: '0xeBA1c76F7A773B8210130f068798839F84392241',\n        lToken: '0x61162b0c9665Ce27a53b59E79C1B7A929cc3bB57',\n        router: '0xaDEe3A9149ee1FBa712aB081c5A6067D613571C1',\n        bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\n        bTokenId: '0',\n        initialBlock: '',\n        bTokenSymbol: 'BUSD',\n        symbol: 'BTCUSD',\n        symbolId: '0',\n        unit: 'BTC',\n        chainId: '97',\n        version: 'v2',\n      },\n      {\n        pool: '0x7dB32101081B17E105283820b2Ed3659DFE21470',\n        pToken: '0xeBA1c76F7A773B8210130f068798839F84392241',\n        lToken: '0x61162b0c9665Ce27a53b59E79C1B7A929cc3bB57',\n        router: '0xaDEe3A9149ee1FBa712aB081c5A6067D613571C1',\n        bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\n        bTokenId: '0',\n        initialBlock: '',\n        bTokenSymbol: 'BUSD',\n        symbol: 'ETHUSD',\n        symbolId: '1',\n        unit: 'ETH',\n        chainId: '97',\n        version: 'v2',\n      },\n      {\n        pool: '0x7dB32101081B17E105283820b2Ed3659DFE21470',\n        pToken: '0xeBA1c76F7A773B8210130f068798839F84392241',\n        lToken: '0x61162b0c9665Ce27a53b59E79C1B7A929cc3bB57',\n        router: '0xaDEe3A9149ee1FBa712aB081c5A6067D613571C1',\n        bToken: '0x5f59b256e411CB222D1790a08De492f4b6dA6E62',\n        bTokenId: '1',\n        initialBlock: '',\n        bTokenSymbol: 'BETH',\n        symbol: 'BTCUSD',\n        symbolId: '0',\n        unit: 'BTC',\n        chainId: '97',\n        version: 'v2',\n      },\n      {\n        pool: '0x7dB32101081B17E105283820b2Ed3659DFE21470',\n        pToken: '0xeBA1c76F7A773B8210130f068798839F84392241',\n        lToken: '0x61162b0c9665Ce27a53b59E79C1B7A929cc3bB57',\n        router: '0xaDEe3A9149ee1FBa712aB081c5A6067D613571C1',\n        bToken: '0x5f59b256e411CB222D1790a08De492f4b6dA6E62',\n        bTokenId: '1',\n        initialBlock: '',\n        bTokenSymbol: 'BETH',\n        symbol: 'ETHUSD',\n        symbolId: '1',\n        unit: 'ETH',\n        chainId: '97',\n        version: 'v2',\n      }\n    ];\n  }\n};\n\nexport const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId) => {\n  bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\n  symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\n  const poolConfigList = getPoolConfigList(DeriEnv.get())\n  const check = bTokenId != null\n    ? symbolId != null\n      ? (i) =>\n          i.pool === poolAddress &&\n          i.bTokenId === bTokenId &&\n          i.symbolId === symbolId\n      : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\n    : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\n  if (poolConfigList.length > 0) {\n    const res = poolConfigList.filter(check)\n    if (res && res.length > 0) {\n      return res\n    }\n  }\n  throw new Error(`Cannot find the pool config by poolAddress(${poolAddress}) bTokenId(${bTokenId}) and symbolId(${symbolId})`)\n}\n\nexport const getPoolConfig = (poolAddress, bTokenId, symbolId) => {\n  const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId)\n  return res[0]\n}","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\n\n// == bg\nBigNumber.config({\n  DECIMAL_PLACES: 18,\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n  EXPONENTIAL_AT: 256,\n});\n\nexport const bg = (value, base = 0) => {\n  if (base === 0) {\n    return BigNumber(value);\n  }\n  if (base > 0) {\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\n  }\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\n};\n\nexport const max = (value1, value2) => {\n  if (value1.gte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const min = (value1, value2) => {\n  if (value1.lte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const fromWei = (value, unit='ether') => Web3.utils.fromWei(value, unit)\n\nexport const toWei = (value, unit='ether') => Web3.utils.toWei(value, unit)\n\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\n\nexport const toHex = (value) => Web3.utils.toHex(value);\n\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\n\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\n\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\n\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\n\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\n\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\n\nexport const deriToNatural = (value) => bg(value, -18);\n\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\n\n// == convert\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);","// == func\nconst np = () => {}\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\nexport const fetchWithTimeout = (url, options = {}) => {\n  const { timeout = 1200, ...fetchOptions } = options\n\n  return Promise.race([\n    fetch(url, fetchOptions),\n    new Promise((resolve) => {\n      setTimeout(() => {\n        // reject(\n        //   new Error(\n        //     `Request for ${url} timed out after ${timeout} ms`,\n        //   ),\n        // )\n        resolve({timeout:true})\n      }, timeout)\n    }),\n  ])\n}\n\nexport const checkHttpServerIsAlive = async (url) => {\n  try {\n    const response = await fetch(url);\n    if (response.ok) {\n      return true;\n    }\n  } catch (err) {\n    console.log(err);\n  }\n  return false;\n};\n\nexport const getAliveHttpServer = async (urls = []) => {\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i];\n    //console.log(url)\n    if (await checkHttpServerIsAlive(url)) {\n      return url;\n    }\n  }\n  throw new Error('No alive http server in urls', urls);\n};\n","import Web3 from 'web3';\n\n// validate\nexport const normalizeChainId = (chainId) => {\n  const chainIds = ['1', '56', '128', '3', '42', '97', '256'];\n  let res = chainId ? chainId.toString() : chainId;\n  if (chainId && chainIds.includes(res)) {\n    return res;\n  } else {\n    throw new Error(`invalid chainId: ${chainId}`);\n  }\n};\n\nexport const normalizeAddress = (address) => {\n  if (address && typeof address === 'string' && address.startsWith('0x')) {\n    return Web3.utils.toChecksumAddress(address);\n  } else {\n    throw new Error(`invalid address: ${address}`);\n  }\n};\n\nexport const validateArgs = (...args) => args.every((i) => !isNaN(parseFloat(i)));","import {\n  getChainProviderUrls,\n  getAnnualBlockNumberConfig,\n} from '../config';\nimport { normalizeChainId } from './validate';\nimport { getAliveHttpServer } from './network';\n\nexport const getChainProviderUrl = async (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const urls = getChainProviderUrls(chainId);\n  if (urls.length > 0) {\n    return await getAliveHttpServer(urls);\n  } else {\n    throw new Error(\n      `Cannot find the chain provider url with chainId: ${chainId}`\n    );\n  }\n};\nexport const getAnnualBlockNumber = (chainId) => {\n  const blockNumbers = getAnnualBlockNumberConfig();\n  if (blockNumbers[chainId]) {\n    return parseInt(blockNumbers[chainId]);\n  } else {\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\n  }\n};\n","import { getPoolConfig } from '../config';\nimport { DeriEnv } from '../../config'\nimport { deriToNatural } from './convert';\n\nexport const getOracleUrl = (poolAddress, symbolId) => {\n  const env = DeriEnv.get();\n  const { symbol } = getPoolConfig(poolAddress, null, symbolId);\n  const addSymbolParam = (url, symbol = 'BTCUSD') => `${url}?symbol=${symbol}`;\n  if (env === 'prod' || env === 'production') {\n    // for production\n    if (symbol) {\n      if (symbol !== 'BTCUSD') {\n        return addSymbolParam('https://oracle3.deri.finance/price', symbol);\n      } else {\n        return addSymbolParam('https://oracle.deri.finance/price', symbol);\n      }\n    }\n    return 'https://oracle.deri.finance/price';\n  } else {\n    if (symbol === 'ETHUSD') {\n      return addSymbolParam('https://oracle4.deri.finance/price', symbol);\n    } else if (symbol) {\n      return addSymbolParam('https://oracle2.deri.finance/price', symbol);\n    }\n    // for test\n    return 'https://oracle2.deri.finance/price';\n  }\n};\n\nexport const getOracleInfo = async (poolAddress, symbolId) => {\n  let url = getOracleUrl(poolAddress, symbolId);\n  //console.log('oracle url', url);\n  let retry = 3;\n  //let timeout = 1000;\n  let res;\n  while (retry > 0) {\n    res = await fetch(url);\n    //if (res && !res.timeout) {\n    if (res) {\n      break;\n    }\n    //console.log('get oracle info timeout')\n    retry -= 1;\n    //timeout += 800;\n  }\n  if (retry === 0 && !res) {\n    throw new Error(`fetch oracle info error: exceed max retry(5).`);\n  }\n  return await res.json();\n};\n\nexport const getOraclePrice = async (poolAddress, symbolId) => {\n  try {\n    const responseJson = await getOracleInfo(poolAddress, symbolId);\n    let price = responseJson.price;\n    if (!price) {\n      price = '0';\n    }\n    return deriToNatural(responseJson.price).toString();\n  } catch (err) {\n    throw err;\n  }\n};\n","import { bg, max, min } from '../utils';\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return volume.times(price).times(multiplier).minus(cost);\n}\n\nexport const calculateMaxWithdrawMargin = (\n  price,\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  if (volume.eq(0)) {\n    return margin;\n  }\n  const held = calculateMarginHeld(\n    price,\n    volume,\n    multiplier,\n    minInitialMarginRatio\n  );\n  const pnl = calculatePnl(price, volume, multiplier, cost);\n  const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\n  return withdrawable;\n};\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = cost.minus(margin).div(volume).div(multiplier);\n  let res = volume.gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  price,\n  margin,\n  volume,\n  liquidity,\n  tradersNetVolume,\n  multiplier,\n  minPoolMarginRatio,\n  minInitialMarginRatio,\n  newVolume,\n  amount\n) => {\n  const minMargin = volume\n    .plus(newVolume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(minInitialMarginRatio);\n  const poolMaxVolume = liquidity\n    .div(minPoolMarginRatio)\n    .div(price)\n    .div(multiplier);\n  if (margin.plus(amount).gte(minMargin)) {\n    if (\n      newVolume.lte(poolMaxVolume.minus(tradersNetVolume)) &&\n      newVolume.gte(poolMaxVolume.negated().minus(tradersNetVolume))\n    ) {\n      return { success: true };\n    }\n    return { success: false, error: 'Pool insufficient liquidity' };\n  }\n  return { success: false, error: 'Trader insufficient margin' };\n};\n","import { bg, getAnnualBlockNumber, validateArgs } from '../utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio\n    )\n  ) {\n    return bg(tradersNetVolume)\n      .times(bg(price))\n      .times(bg(multiplier))\n      .times(bg(poolMarginRatio))\n      .div(bg(liquidity))\n      .abs();\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio,\n    ];\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\n  }\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    )\n  ) {\n    return bg(tradersNetVolume)\n      .times(price)\n      .times(price)\n      .times(multiplier)\n      .times(multiplier)\n      .times(fundingRateCoefficient)\n      .div(liquidity);\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    ];\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\n  }\n};\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getAnnualBlockNumber(chainId);\n  //console.log(annualBlockCount);\n  return bg(fundingRate).times(annualBlockCount);\n};\n","import Web3 from 'web3';\nimport {\n  PerpetualPool,\n  PerpetualPoolRouter,\n  BToken,\n  LToken,\n  PToken,\n} from './contract';\nimport { getChainProviderUrl } from './utils';\n\nexport const metaMaskWeb3 = (function () {\n  let web3Instance = null;\n  return () => {\n    if (web3Instance !== null) {\n      return web3Instance;\n    }\n    if (typeof window.ethereum !== undefined) {\n      web3Instance = new Web3(window.ethereum);\n      return web3Instance;\n    } else {\n      // console.log(\"Please install MetaMask first\")\n      throw new Error('Please install MetaMask first');\n    }\n  };\n})();\n\nexport const web3Factory = (function () {\n  const web3InstanceMap = {};\n  return {\n    async getOrSet(chainId) {\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\n        return web3InstanceMap[chainId];\n      }\n      console.log(\n        `==== web3Factory(${chainId}), please caution the access limits ===`\n      );\n      const providerUrl = await getChainProviderUrl(chainId);\n      web3InstanceMap[chainId] = new Web3(\n        new Web3.providers.HttpProvider(providerUrl)\n      );\n      return web3InstanceMap[chainId];\n    },\n  };\n})();\n\nexport const perpetualPoolFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, useInfura) => {\n    const key = useInfura ? `${address}.useInfura` : address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      instanceMap[key] = new PerpetualPool(chainId, address, useInfura);\n      return instanceMap[key];\n    }\n  };\n})();\n\nexport const perpetualPoolRouterFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, useInfura) => {\n    const key = useInfura ? `${address}.useInfura` : address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      instanceMap[key] = new PerpetualPoolRouter(chainId, address, useInfura);\n      return instanceMap[key];\n    }\n  };\n})();\n\nexport const bTokenFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, useInfura) => {\n    const key = useInfura ? `${address}.useInfura` : address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      instanceMap[key] = new BToken(chainId, address, useInfura);\n      return instanceMap[key];\n    }\n  };\n})();\n\nexport const lTokenFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, useInfura) => {\n    const key = useInfura ? `${address}.useInfura` : address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      instanceMap[key] = new LToken(chainId, address, useInfura);\n      return instanceMap[key];\n    }\n  };\n})();\n\nexport const pTokenFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, useInfura) => {\n    const key = useInfura ? `${address}.useInfura` : address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      instanceMap[key] = new PToken(chainId, address, useInfura);\n      return instanceMap[key];\n    }\n  };\n})();\n\n","import { metaMaskWeb3, web3Factory } from '../factory';\nimport { numberToHex } from '../utils';\n\nconst MAX_GAS_AMOUNT = 532731;\n\nexport class ContractBase {\n  constructor(chainId, contractAddress, useInfura) {\n    this.chainId = chainId;\n    this.contractAddress = contractAddress;\n    this.useInfura = useInfura\n  }\n\n  async _init() {\n    if (this.useInfura) {\n      this.web3 = await web3Factory.getOrSet(this.chainId);\n    } else {\n      this.web3 = metaMaskWeb3();\n    }\n  }\n\n  async _call(method, args = []) {\n    let res\n    let retry = 2\n    while (retry > 0) {\n      try {\n        await this._init()\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch(err) {\n        retry -= 1\n        this.web3 = null\n        console.log(err)\n      }\n    }\n    if (retry === 0 && !res) {\n      console.log(`method call '${method} ${args}' failed with max retry 3.`)\n    }\n    return res\n  }\n\n  async _estimatedGas(method, args = [], accountAddress) {\n    await this._init()\n    let gas = 0;\n    for (let i = 0; i < 20; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (err) {\n      }\n    }\n    if (gas == 0) gas = MAX_GAS_AMOUNT;\n    if (gas > MAX_GAS_AMOUNT) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt === null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _transact(method, args, accountAddress) {\n    await this._init()\n    //const gas = await this._estimatedGas(method, args, accountAddress)\n    console.log('account', accountAddress)\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        // gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods[method](...args).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\n  }\n\n}\n","\n/* eslint-disable */\nexport const perpetualPoolAbi = [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256[9]\",\n          \"name\": \"parameters\",\n          \"type\": \"uint256[9]\"\n        },\n        {\n          \"internalType\": \"address[4]\",\n          \"name\": \"addresses\",\n          \"type\": \"address[4]\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"AddLiquidity\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"AddMargin\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"liquidator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"reward\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Liquidate\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"collector\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"ProtocolFeeCollection\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"RemoveLiquidity\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"RemoveMargin\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"int256\",\n          \"name\": \"tradeVolume\",\n          \"type\": \"int256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"price\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Trade\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"bTokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"swapperAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"oracleAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"decimals\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"discount\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"price\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"liquidity\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"pnl\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"cumulativePnl\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPool.BTokenInfo\",\n          \"name\": \"info\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"name\": \"addBToken\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"blength\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"slength\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"addLiquidity\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"addMargin\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"string\",\n              \"name\": \"symbol\",\n              \"type\": \"string\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"oracleAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"multiplier\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"feeRatio\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"fundingRateCoefficient\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"price\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"cumulativeFundingRate\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"tradersNetVolume\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"tradersNetCost\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPool.SymbolInfo\",\n          \"name\": \"info\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"name\": \"addSymbol\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"targetPool\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"approvePoolMigration\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"collectProtocolFee\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"sourcePool\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"executePoolMigration\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getAddresses\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"lTokenAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"pTokenAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"routerAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"protocolFeeCollector\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getBToken\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"bTokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"swapperAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"oracleAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"decimals\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"discount\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"price\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"liquidity\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"pnl\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"cumulativePnl\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPool.BTokenInfo\",\n          \"name\": \"\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getBTokenOracle\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getLengths\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getParameters\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"decimals0\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"minBToken0Ratio\",\n          \"type\": \"int256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"minPoolMarginRatio\",\n          \"type\": \"int256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"minInitialMarginRatio\",\n          \"type\": \"int256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"minMaintenanceMarginRatio\",\n          \"type\": \"int256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"minLiquidationReward\",\n          \"type\": \"int256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"maxLiquidationReward\",\n          \"type\": \"int256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"liquidationCutRatio\",\n          \"type\": \"int256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"protocolFeeCollectRatio\",\n          \"type\": \"int256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getProtocolFeeAccrued\",\n      \"outputs\": [\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"\",\n          \"type\": \"int256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getSymbol\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"string\",\n              \"name\": \"symbol\",\n              \"type\": \"string\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"oracleAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"multiplier\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"feeRatio\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"fundingRateCoefficient\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"price\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"cumulativeFundingRate\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"tradersNetVolume\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"tradersNetCost\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPool.SymbolInfo\",\n          \"name\": \"\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getSymbolOracle\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"liquidator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"blength\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"slength\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"liquidate\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"blength\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"slength\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"removeLiquidity\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"blength\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"slength\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"removeMargin\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"swapperAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"oracleAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"discount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"setBTokenParameters\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"oracleAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"feeRatio\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"fundingRateCoefficient\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"setSymbolParameters\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"tradeVolume\",\n          \"type\": \"int256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"blength\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"slength\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"trade\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]\nexport const perpetualPoolRouterAbi = [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"lTokenAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"pTokenAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"liquidatorQualifierAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"migrationTimestamp\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"address\",\n          \"name\": \"source\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"address\",\n          \"name\": \"target\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"ExecuteMigration\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"migrationTimestamp\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"address\",\n          \"name\": \"source\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"address\",\n          \"name\": \"target\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"PrepareMigration\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"bTokenAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"swapperAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"oracleAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"discount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"addBToken\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"addLiquidity\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"symbolId\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"timestamp\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"price\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"v\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"r\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"s\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n          \"name\": \"infos\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"name\": \"addLiquidityWithPrices\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"addMargin\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"symbolId\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"timestamp\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"price\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"v\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"r\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"s\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n          \"name\": \"infos\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"name\": \"addMarginWithPrices\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"symbol\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"oracleAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"multiplier\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"feeRatio\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"fundingRateCoefficient\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"addSymbol\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"approveMigration\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"claimNewController\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"controller\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"sourceRouter\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"executeMigration\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"liquidate\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"symbolId\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"timestamp\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"price\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"v\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"r\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"s\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n          \"name\": \"infos\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"name\": \"liquidateWithPrices\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"liquidatorQualifier\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"migrationDestination\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"migrationTimestamp\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"pool\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"target\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"graceDays\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"prepareMigration\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"removeLiquidity\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"symbolId\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"timestamp\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"price\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"v\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"r\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"s\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n          \"name\": \"infos\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"name\": \"removeLiquidityWithPrices\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"removeMargin\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"symbolId\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"timestamp\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"price\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"v\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"r\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"s\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n          \"name\": \"infos\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"name\": \"removeMarginWithPrices\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"swapperAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"oracleAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"discount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"setBTokenParameters\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"qualifierAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"setLiquidatorQualifier\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"newController\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"setNewController\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"poolAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"setPool\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"oracleAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"feeRatio\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"fundingRateCoefficient\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"setSymbolParameters\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"tradeVolume\",\n          \"type\": \"int256\"\n        }\n      ],\n      \"name\": \"trade\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"tradeVolume\",\n          \"type\": \"int256\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"symbolId\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"timestamp\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"price\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"v\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"r\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"s\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n          \"name\": \"infos\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"name\": \"tradeWithPrices\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]\nexport const bTokenAbi = [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"name_\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"symbol_\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"spender\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Approval\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Transfer\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"spender\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"allowance\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"spender\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"approve\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"account\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"balanceOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"decimals\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint8\",\n          \"name\": \"\",\n          \"type\": \"uint8\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"name\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"symbol\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"totalSupply\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transfer\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transferFrom\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]\nexport const lTokenAbi = [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"name_\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"symbol_\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"numBTokens_\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Approval\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"ApprovalForAll\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Transfer\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"int256\",\n          \"name\": \"liquidity\",\n          \"type\": \"int256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"int256\",\n          \"name\": \"pnl\",\n          \"type\": \"int256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"int256\",\n          \"name\": \"lastCumulativePnl\",\n          \"type\": \"int256\"\n        }\n      ],\n      \"name\": \"UpdateAsset\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"approve\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"balanceOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"burn\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"exists\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getApproved\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getAsset\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"liquidity\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"pnl\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"lastCumulativePnl\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct ILToken.Asset\",\n          \"name\": \"\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"getAssets\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"liquidity\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"pnl\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"lastCumulativePnl\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct ILToken.Asset[]\",\n          \"name\": \"\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"isApprovedForAll\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"mint\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"name\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"numBTokens\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"ownerOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"pool\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"data\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"setApprovalForAll\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"num\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"setNumBTokens\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"newPool\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"setPool\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes4\",\n          \"name\": \"interfaceId\",\n          \"type\": \"bytes4\"\n        }\n      ],\n      \"name\": \"supportsInterface\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"symbol\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"totalMinted\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"totalSupply\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"liquidity\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"pnl\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"lastCumulativePnl\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct ILToken.Asset\",\n          \"name\": \"asset\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"name\": \"updateAsset\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]\nexport const pTokenAbi = [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"name_\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"symbol_\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"numSymbols_\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"numBTokens_\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Approval\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"ApprovalForAll\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Transfer\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"int256\",\n          \"name\": \"amount\",\n          \"type\": \"int256\"\n        }\n      ],\n      \"name\": \"UpdateMargin\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"int256\",\n          \"name\": \"volume\",\n          \"type\": \"int256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"int256\",\n          \"name\": \"cost\",\n          \"type\": \"int256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"int256\",\n          \"name\": \"lastCumulativeFundingRate\",\n          \"type\": \"int256\"\n        }\n      ],\n      \"name\": \"UpdatePosition\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"approve\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"balanceOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"burn\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"exists\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getApproved\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getMargin\",\n      \"outputs\": [\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"\",\n          \"type\": \"int256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"getMargins\",\n      \"outputs\": [\n        {\n          \"internalType\": \"int256[]\",\n          \"name\": \"\",\n          \"type\": \"int256[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getPosition\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"volume\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"cost\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"lastCumulativeFundingRate\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct IPToken.Position\",\n          \"name\": \"\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"getPositions\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"volume\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"cost\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"lastCumulativeFundingRate\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct IPToken.Position[]\",\n          \"name\": \"\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"isApprovedForAll\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"mint\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"name\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"numBTokens\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"numSymbols\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"ownerOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"pool\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"data\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"setApprovalForAll\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"num\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"setNumBTokens\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"num\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"setNumSymbols\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"newPool\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"setPool\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes4\",\n          \"name\": \"interfaceId\",\n          \"type\": \"bytes4\"\n        }\n      ],\n      \"name\": \"supportsInterface\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"symbol\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"totalMinted\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"totalSupply\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"amount\",\n          \"type\": \"int256\"\n        }\n      ],\n      \"name\": \"updateMargin\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"int256[]\",\n          \"name\": \"margins\",\n          \"type\": \"int256[]\"\n        }\n      ],\n      \"name\": \"updateMargins\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"volume\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"cost\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"lastCumulativeFundingRate\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct IPToken.Position\",\n          \"name\": \"position\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"name\": \"updatePosition\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]\n/* eslint-disable */","import { ContractBase } from './contract_base'\nimport { perpetualPoolAbi } from './abis';\nimport { deriToNatural, bg } from '../utils'\n\nexport class PerpetualPool extends ContractBase {\n  constructor(chainId, contractAddress, useInfura=false) {\n    super(chainId, contractAddress, useInfura)\n    this.contractAbi = perpetualPoolAbi\n\n    this.bTokenLength = 0\n    this.symbolLength = 0\n\n    this.lTokenAddress = ''\n    this.pTokenAddress = ''\n    this.routerAddress = ''\n    this.protocolFeeCollector = ''\n\n    this.protocolFeeAccrued = 0\n  }\n  async _init() {\n    if (!this.web3) {\n      await super._init()\n      this.contract = new this.web3.eth.Contract(this.contractAbi, this.contractAddress)\n    }\n  }\n\n  async _update() {\n    await Promise.all([\n      this.getLengths(),\n      this.getAddresses(),\n      this.getParameters(),\n    ]);\n  }\n\n  async getLengths() {\n    try {\n      const res = await this._call('getLengths')\n      //console.log(res[0])\n      if (res[0] && res[1]) {\n        this.bTokenLength = parseInt(res[0])\n        this.symbolLength = parseInt(res[1])\n      }\n    } catch(err) {\n      throw new Error(`PerpetualPool#_getLength error: ${err}`)\n    }\n  }\n  async getAddresses() {\n    try {\n      const res = await this._call('getAddresses')\n      this.lTokenAddress = res.lTokenAddress\n      this.pTokenAddress = res.pTokenAddress\n      this.routerAddress = res.routerAddress\n      this.protocolFeeCollector = res.protocolFeeCollector\n    } catch (err) {\n      throw new Error(`PerpetualPool#_getAddress error: ${err}`)\n    }\n  }\n  async getParameters() {\n    const res = await this._call('getParameters')\n    return {\n      decimals0: res.decimals0,\n      minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getProtocolFeeAccrued() {\n    const res =  await this._call('getProtocolFeeAccrued')\n    this.protocolFeeAccrued = deriToNatural(res)\n  }\n  async getBToken(bTokenId) {\n    try {\n      //bTokenId = parseInt(bTokenId)\n      const res = await this._call('getBToken', [bTokenId]);\n      return {\n        bTokenAddress: res.bTokenAddress,\n        swapperAddress: res.bTokenAddress,\n        oracleAddress: res.oracleAddress,\n        decimals: res.decimals,\n        discount: deriToNatural(res.discount),\n        price: deriToNatural(res.price),\n        liquidity: deriToNatural(res.liquidity),\n        pnl: deriToNatural(res.pnl),\n        cumulativePnl: deriToNatural(res.cumulativePnl),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getBToken error: ${err}`);\n    }\n  }\n  async getBTokenOracle(bTokenId) {\n    //bTokenId = parseInt(bTokenId)\n    return await this._call('getBTokenOracle', [bTokenId])\n  }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res =  await this._call('getSymbol', [symbolId])\n      return {\n        symbol: res.symbol,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n  async getSymbolOracle(symbolId) {\n    //symbolId = parseInt(symbolId)\n    return await this._call('getSymbolOracle', [symbolId])\n  }\n\n  // trade history query methods\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    let amount\n    if (['56', '97'].includes(this.chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }\n}","import { ContractBase } from './contract_base'\nimport { perpetualPoolRouterAbi} from './abis';\nimport { naturalToDeri, bg } from '../utils'\n\nexport class PerpetualPoolRouter extends ContractBase {\n  constructor(chainId, contractAddress, useInfura=false) {\n    super(chainId, contractAddress, useInfura)\n    this.contractAbi = perpetualPoolRouterAbi\n    this.poolAddress = ''\n  }\n  async _init() {\n    if (!this.web3) {\n      await super._init()\n      this.contract = new this.web3.eth.Contract(this.contractAbi, this.contractAddress)\n    }\n  }\n\n  // === query ===\n  async pool() {\n    this.poolAddress = await this._call('pool');\n    return this.poolAddress\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidity',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeLiquidity(accountAddress, bTokenId, amount) {\n    return await this._transact(\n      'removeLiquidity',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async addMargin(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMargin',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'removeMargin',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async trade(accountAddress, symbolId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  // async liquidate(acountAddress) {\n  //   if (!this.poolAddress) {\n  //     await this.pool()\n  //   }\n  //   return await this._transact(\n  //     'liquidate',\n  //     [accountAddress],\n  //     accountAddress\n  //   );\n  // }\n\n}","import { ContractBase } from './contract_base'\nimport { bTokenAbi } from './abis';\nimport { deriToNatural, bg } from '../utils'\n\nexport const MAX_VALUE =\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n\nexport class BToken extends ContractBase {\n  constructor(chainId, contractAddress, useInfura=false) {\n    super(chainId, contractAddress, useInfura);\n    this.contractAbi = bTokenAbi;\n  }\n  async _init() {\n    if (!this.web3) {\n      await super._init();\n      this.contract = new this.web3.eth.Contract(\n        this.contractAbi,\n        this.contractAddress\n      );\n    }\n  }\n\n  // === query ===\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n  async _balanceOf(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n\n  async isUnlocked(accountAddress, poolAddress) {\n    const allowance = await this._call('allowance', [\n      accountAddress,\n      poolAddress,\n    ]);\n    return bg(allowance).gt(0);\n  }\n\n  // === transaction ===\n  async unlock(accountAddress, poolAddress) {\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_VALUE],\n      accountAddress\n    );\n  }\n\n  // async transfer() {\n  // call transfer\n  // }\n}","import { ContractBase } from './contract_base'\nimport { bTokenAbi, lTokenAbi } from './abis';\nimport { deriToNatural, bg } from '../utils'\n\nconst processAsset = (res) => {\n  return {\n    liquidity: deriToNatural(res[0]),\n    pnl: deriToNatural(res[1]),\n    lastCumulativePnl: deriToNatural(res[2]),\n  }\n}\nexport class LToken extends ContractBase {\n  constructor(chainId, contractAddress, useInfura=false) {\n    super(chainId, contractAddress, useInfura)\n    this.contractAbi = lTokenAbi\n  }\n  async _init() {\n    if (!this.web3) {\n      await super._init()\n      this.contract = new this.web3.eth.Contract(this.contractAbi, this.contractAddress)\n    }\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getAsset(accountAddress, bTokenId) {\n    const res = await this._call('getAsset', [accountAddress, bTokenId]);\n    if (Array.isArray(res)) {\n      return processAsset(res)\n    } else {\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress} ${bTokenId})`)\n    }\n  }\n  async getAssets(accountAddress) {\n    const res = await this._call('getAssets', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map(i => processAsset(i))\n    } else {\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress})`)\n    }\n  }\n\n  // === transaction ===\n}","import { ContractBase } from './contract_base'\nimport { pTokenAbi } from './abis';\nimport { deriToNatural, bg } from '../utils'\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PToken extends ContractBase {\n  constructor(chainId, contractAddress, useInfura=false) {\n    super(chainId, contractAddress, useInfura)\n    this.contractAbi = pTokenAbi\n  }\n  async _init() {\n    if (!this.web3) {\n      await super._init()\n      this.contract = new this.web3.eth.Contract(this.contractAbi, this.contractAddress)\n    }\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getMargin(accountAddress, symbolId) {\n    const res = await this._call('getMargin', [accountAddress, symbolId]);\n    return deriToNatural(res)\n  }\n  async getMargins(accountAddress) {\n    const res = await this._call('getMargins', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => deriToNatural(i))\n    }\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getPositions(accountAddress) {\n    const res = await this._call('getPositions', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => processPosition(i))\n    }\n  }\n\n  // === transaction ===\n}","import { lTokenFactory, perpetualPoolFactory } from '../factory'\nimport { getPoolConfig } from '../config'\nimport { deriToNatural } from '../utils'\nimport { databaseFactory } from '../../factory/contracts';\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n  useInfura,\n) => {\n  const {lToken:lTokenAddress} = getPoolConfig(poolAddress, bTokenId)\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress, useInfura)\n  const lToken = lTokenFactory(chainId, lTokenAddress, useInfura);\n\n  const [bTokenInfo, lTokenAsset] = await Promise.all([\n    perpetualPool.getBToken(bTokenId),\n    lToken.getAsset(accountAddress, bTokenId),\n  ])\n  const { liquidity: poolLiquidity } = bTokenInfo;\n  const { liquidity } = lTokenAsset\n  return {\n    //totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: poolLiquidity.toString(),\n    // shares: liquidity.toString(),\n    // shareValue: '1',\n    // maxRemovableShares: liquidity.toString()\n    shares: liquidity.toString(),\n    maxRemovableShares: liquidity.toString()\n  };\n};\n\nexport const getPoolLiquidity = async (chainId, poolAddress, bTokenId, useInfura=false) => {\n  // const perpetualPool = perpetualPoolFactory(chainId, poolAddress, useInfura)\n  // const res = await perpetualPool.getBToken(bTokenId)\n  // return res.liquidity.toString()\n\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.${bTokenId}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol:'',\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};","import { getPoolConfig } from '../config'\nimport { perpetualPoolRouterFactory } from '../factory'\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const {router:routerAddress} = getPoolConfig(poolAddress, bTokenId)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   let res\n   try {\n     const tx = await perpetualPoolRouter.addLiquidity(accountAddress, bTokenId, amount);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err};\n   }\n   return res\n}\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const {router:routerAddress} = getPoolConfig(poolAddress, bTokenId)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   let res\n   try {\n     const tx = await perpetualPoolRouter.removeLiquidity(accountAddress, bTokenId, amount);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err};\n   }\n   return res\n}","export const priceCache = (function(){\n  let _prices = {}\n  return {\n    get(poolAddress, symbolId) {\n      const key = `${poolAddress}.${symbolId}`\n      if (Object.keys(_prices).includes(key)) {\n        const [price, timestamp] = _prices[key].split('|')\n        //if (parseInt(timestamp) - Date.now() < 10000) {\n          return price\n        //}\n      }\n      console.log('please init priceCache first')\n    },\n    update(chainId, poolAddress, symbolId) {\n      // place holder\n    },\n    set(poolAddress, symbolId, val) {\n      if (!isNaN(parseFloat(val))) {\n        const timestamp = Date.now().toString()\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\n      }\n    }\n  }\n})()\n\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress, symbolId) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, symbolId, resource) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();","import { perpetualPoolFactory, bTokenFactory, pTokenFactory } from '../factory';\nimport { getFilteredPoolConfigList, getPoolConfig} from '../config'\nimport {\n  calculateEntryPrice,\n  calculatePnl,\n  calculateMarginHeld,\n  calculateLiquidationPrice,\n  calculateLiquidityUsed,\n  calculateFundingRate,\n  processFundingRate,\n} from '../calculation';\nimport { getOraclePrice, bg } from '../utils'\nimport { fundingRateCache, priceCache } from '../api/api_globals';\n\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  bTokenId,\n  symbolId,\n  useInfura,\n) => {\n  const {symbol, bTokenSymbol } = getPoolConfig(poolAddress, bTokenId, symbolId)\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress, useInfura);\n  const [symbolInfo, parameterInfo] = await Promise.all([\n    perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n  ])\n  const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\n  const {\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n    minLiquidationReward,\n    maxLiquidationReward,\n    liquidationCutRatio,\n    protocolFeeCollectRatio,\n  } = parameterInfo\n  return {\n    symbol: symbol,\n    bSymbol: bTokenSymbol,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    minInitialMarginRatio: minInitialMarginRatio.toString(),\n    minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n    //minAddLiquidity: minAddLiquidity.toString(),\n    //redemptionFeeRatio: redemptionFeeRatio.toString(),\n    minLiquidationReward: minLiquidationReward.toString(),\n    maxLiquidationReward: maxLiquidationReward.toString(),\n    liquidationCutRatio: liquidationCutRatio.toString(),\n    protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n  }\n};\n\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId, useInfura) => {\n  const bTokenConfigList = getFilteredPoolConfigList(poolAddress, null, symbolId)\n  //const symbolConfigList = getFilteredPoolConfigList(poolAddress, '0')\n  let bTokenIdList = bTokenConfigList.map((i) => i.bTokenId)\n  //let symbolIdList = symbolConfigList.map((i) => i.symbolId)\n  //console.log('bTokenList', bTokenList)\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress, useInfura);\n  const {pToken: pTokenAddress } = getPoolConfig(poolAddress, null, symbolId)\n  const pToken = pTokenFactory(chainId, pTokenAddress, useInfura);\n  const [price, symbolInfo, parameterInfo, positionInfo ] = await Promise.all([\n    getOraclePrice(poolAddress, symbolId),\n    perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n    pToken.getPosition(accountAddress, symbolId),\n    //pToken.getMargin(accountAddress, symbolId),\n  ])\n  priceCache.set(poolAddress, symbolId, price)\n  const { volume, cost } = positionInfo\n  const { multiplier } = symbolInfo\n  const {\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n  } = parameterInfo\n  const margins = await pToken.getMargins(accountAddress)\n  let promises = []\n  for (let i=0; i<bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n  }\n  const bTokens = await Promise.all(promises)\n  const margin = bTokens.reduce((accum, a, index) => {\n    return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n  }, bg(0))\n\n  // promises = []\n  // for (let i=0; i<symbolIdList.length; i++) {\n  //   promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  // }\n  // const symbols = await Promise.all(promises)\n  // //console.log('symbols', symbols[0].price.toString(), symbols[0].multiplier.toString(), symbols[1].price.toString(), symbols[1].multiplier.toString())\n  // const marginHeld = symbols.reduce((accum, a, index) => {\n  //   return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n  // }, bg(0))\n return {\n   volume: volume.toString(),\n   averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n   margin: margin.toString(),\n   marginHeld: calculateMarginHeld(\n     price,\n     volume,\n     multiplier,\n     minInitialMarginRatio\n   ).toString(),\n   //marginHeld: marginHeld.toString(),\n   unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\n   liquidationPrice: calculateLiquidationPrice(\n     volume,\n     margin,\n     cost,\n     multiplier,\n     minMaintenanceMarginRatio\n   ).toString(),\n };\n}\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n  useInfura,\n) => {\n  const { bToken: bTokenAddress } = getPoolConfig(poolAddress, bTokenId);\n  const balance = await bTokenFactory(chainId, bTokenAddress, useInfura).balanceOf(accountAddress)\n  return balance.toString()\n}\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId, useInfura) => { \n  const { bToken: bTokenAddress } = getPoolConfig(poolAddress, bTokenId);\n  const bToken = await bTokenFactory(chainId, bTokenAddress, useInfura)\n  return bToken.isUnlocked(accountAddress, poolAddress)\n}\n\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId, useInfura) => {\n  let price = priceCache.get(poolAddress, symbolId)\n  if (!price) {\n    price = await getOraclePrice(poolAddress, symbolId)\n    priceCache.set(poolAddress, symbolId, price)\n  }\n  let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n  if (!cache || !cache.multiplier) {\n    await _getFundingRate(chainId, poolAddress, symbolId, useInfura)\n    cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n  }\n  const { multiplier, feeRatio } = cache;\n  //console.log(volume, price, multiplier, feeRatio)\n  return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n}\n\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n  useInfura,\n) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress, useInfura);\n  const [price, symbolInfo ] = await Promise.all([\n    getOraclePrice(poolAddress, symbolId),\n    perpetualPool.getSymbol(symbolId),\n  ])\n  priceCache.set(poolAddress, symbolId, price)\n  const {multiplier} = symbolInfo\n  //console.log('m',multiplier.toString())\n  return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId, useInfura) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress, useInfura)\n  const poolconfigList = getFilteredPoolConfigList(poolAddress, null, symbolId)\n  let bTokenIdList = poolconfigList.map((i) => i.bTokenId)\n  let promiseList = []\n  for (let i=0; i<bTokenIdList.length; i++) {\n    promiseList.push(perpetualPool.getBToken(i))\n  }\n  const bTokenInfoList = await Promise.all(promiseList)\n  //console.log('bTokenInfoList', bTokenInfoList[0].discount.toString(), bTokenInfoList[1].discount.toString())\n  const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.discount).plus(i.pnl)), bg(0))\n  //console.log('liquidity', liquidity.toString())\n\n  const [price, symbolInfo, parameterInfo] = await Promise.all([\n    getOraclePrice(poolAddress, symbolId),\n    perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n  ])\n  priceCache.set(poolAddress, symbolId, price)\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\n  const { minPoolMarginRatio } = parameterInfo;\n  const fundingRateArgs = [\n    tradersNetVolume,\n    price,\n    multiplier,\n    liquidity,\n    fundingRateCoefficient,\n  ]\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\n  const liquidityUsedArgs = [\n    tradersNetVolume,\n    price,\n    multiplier,\n    liquidity,\n    minPoolMarginRatio,\n  ]\n  const liquidityUsed = calculateLiquidityUsed(...liquidityUsedArgs)\n  const res = {\n    price,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    tradersNetVolume: tradersNetVolume.toString(),\n    liquidity: liquidity.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    fundingRatePerBlock: fundingRatePerBlock,\n    fundingRate: fundingRate,\n    liquidityUsed: liquidityUsed,\n  }\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\n  return res\n}\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId, useInfura) => {\n  const res = await _getFundingRate(chainId, poolAddress, symbolId, useInfura)\n  const { fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume } = res\n  return {\n    fundingRate0: fundingRate.toString(),\n    fundingRatePerBlock: fundingRatePerBlock.toString(),\n    liquidity: liquidity.toString(),\n    volume: '-',\n    tradersNetVolume: tradersNetVolume.toString()\n  };\n}\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n  useInfura,\n) => {\n  let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n  if (!res) {\n    res = _getFundingRate(chainId, poolAddress, symbolId, useInfura)\n  }\n  const args = [\n    bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n    res.price,\n    res.multiplier,\n    res.liquidity,\n    res.fundingRateCoefficient,\n  ]\n  let fundingRate1 = calculateFundingRate(...args)\n  fundingRate1 = processFundingRate(chainId, fundingRate1)\n  return {\n    fundingRate1: fundingRate1.toString()\n  }\n}\n\nexport const getLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  symbolId,\n  useInfura,\n) => {\n  let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n  if (!res) {\n    res = _getFundingRate(chainId, poolAddress, symbolId, useInfura)\n  }\n  return {\n    liquidityUsed0: res.liquidityUsed.toString(),\n  };\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n  useInfura,\n) => {\n  let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n  if (!res) {\n    res = _getFundingRate(chainId, poolAddress, symbolId, useInfura)\n  }\n  const args = [\n    bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n    res.price,\n    res.multiplier,\n    res.liquidity,\n    res.minPoolMarginRatio,\n  ]\n  const liquidityUsed1 = calculateLiquidityUsed(...args)\n  return {\n    liquidityUsed1: liquidityUsed1.toString()\n  }\n}\n\n\nexport const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId, useInfura) => {\n  const bTokensConfigList = getFilteredPoolConfigList(poolAddress, null, symbolId)\n  const symbolsConfigList = getFilteredPoolConfigList(poolAddress, '0')\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress, useInfura)\n  const {pToken: pTokenAddress } = getPoolConfig(poolAddress, null, symbolId)\n  const pToken = pTokenFactory(chainId, pTokenAddress, useInfura);\n  let bTokenList = bTokensConfigList.map((i) => {\n    return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\n  })\n  let promiseList = []\n  for (let i=0; i<bTokenList.length; i++) {\n    promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress, useInfura).balanceOf(accountAddress))\n  }\n  const resultList = await Promise.all(promiseList)\n  for (let i=0; i<bTokenList.length; i++) {\n    bTokenList[i].walletBalance = resultList[i].toString()\n  }\n\n  let bTokenIdList = bTokensConfigList.map((i) => i.bTokenId)\n  let symbolIdList = symbolsConfigList.map((i) => i.symbolId)\n  const [margins, positions, parameterInfo] = await Promise.all([\n    pToken.getMargins(accountAddress),\n    pToken.getPositions(accountAddress),\n    perpetualPool.getParameters(),\n  ]);\n  const { minInitialMarginRatio } = parameterInfo;\n  let promises = []\n  for (let i=0; i<bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n  }\n  const bTokens = await Promise.all(promises)\n  const margin = bTokens.reduce((accum, a, index) => {\n    return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n  }, bg(0))\n  //console.log('margin', margin.toString())\n  promises = []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  const symbols = await Promise.all(promises)\n  //console.log('symbols', symbols[0].price.toString(), symbols[0].multiplier.toString(), symbols[1].price.toString(), symbols[1].multiplier.toString())\n  const marginHeld = symbols.reduce((accum, a, index) => {\n    return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n  }, bg(0))\n  //console.log('marginHeld', marginHeld.toString())\n  bTokenList = bTokenList.map((i, index) => {\n    if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\n      i.availableBalance = margin.minus(marginHeld).div(bTokens[index].price).toString()\n    } else {\n      i.availableBalance = '-'\n    }\n    return i\n  })\n  return bTokenList\n}","import { deriToNatural } from '../utils';\nimport { perpetualPoolFactory } from '../factory';\nimport { getFilteredPoolConfigList, getPoolConfig} from '../config'\n\nimport { getRestServerConfig, DeriEnv } from '../../config';\n\nconst getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nconst fetchJson = async (url) => {\n  const resp = await fetch(url);\n  return await resp.json();\n};\n\nconst processTradeEvent = async (\n  perpetualPool,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier[parseInt(symbolId)],\n    feeRatio[parseInt(symbolId)]\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    //baseToken: bTokenSymbol,\n    symbolId,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  const symbolConfigList = getFilteredPoolConfigList(poolAddress, '0')\n  const symbolIdList = symbolConfigList.map((i) => i.symbolId)\n  //console.log('symbolIdList', symbolIdList);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\n\n  const filters = { owner: accountAddress };\n  let events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      perpetualPool,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  let tradeFromBlock, tradeHistory = [];\n  const res = await fetchJson(\n    `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n  );\n  if (res && res.success) {\n    tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n    if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n      tradeHistory = res.data.tradeHistory;\n    }\n  }\n  tradeHistory = tradeHistory\n    .filter((i) => i)\n    .map((i) => {\n      return {\n        direction: i.direction.trim(),\n        //baseToken: i.baseToken.trim(),\n        symbolId: i.symbolId,\n        price: deriToNatural(i.price).toString(),\n        notional: deriToNatural(i.notional).toString(),\n        volume: deriToNatural(i.volume).toString(),\n        transactionFee: deriToNatural(i.transactionFee).toString(),\n        transactionHash: i.transactionHash,\n        time: i.time.toString(),\n      };\n    });\n    //console.log('tradeHistory1',tradeHistory)\n  if (tradeFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [tradeHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        symbolId,\n        tradeFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline.concat(tradeHistory);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n\n    const {initialBlock} = getPoolConfig(poolAddress, null, symbolId)\n    tradeFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        symbolId,\n        tradeFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline;\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n","import { getPoolConfig } from '../config'\nimport { bTokenFactory, perpetualPoolRouterFactory, pTokenFactory } from '../factory'\n\nexport const unlock = async (chainId, poolAddress, accountAddress, bTokenId) => {\n   const { bToken: bTokenAddress } = getPoolConfig(poolAddress, bTokenId);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress)\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const { router: routerAddress } = getPoolConfig(poolAddress, bTokenId);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   let res;\n   try {\n     const tx = await perpetualPoolRouter.addMargin(accountAddress, bTokenId, amount);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err };\n   }\n   return res;\n}\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const { router: routerAddress } = getPoolConfig(poolAddress, bTokenId);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   let res;\n   try {\n     const tx = await perpetualPoolRouter.removeMargin(accountAddress, bTokenId, amount);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err };\n   }\n   return res;\n}\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId,\n) => {\n   const { router: routerAddress } = getPoolConfig(poolAddress);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   let res;\n   try {\n     const tx = await perpetualPoolRouter.trade(accountAddress, symbolId, newVolume);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err };\n   }\n   return res;\n}\n\nexport const closePosition = async (chainId, poolAddress, accountAddress, symbolId) => {\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig(poolAddress);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const pToken = pTokenFactory(chainId, pTokenAddress)\n   const { volume } = await pToken.getPosition(accountAddress, symbolId)\n   const newVolume = volume.negated()\n   let res;\n   if (!volume.eq(0)) {\n    try {\n      const tx = await perpetualPoolRouter.trade(accountAddress, symbolId, newVolume);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res\n}","import Web3 from 'web3';\nimport { metaMaskWeb3 } from '../factory/web3';\nimport { hexToNumber } from '../utils';\n\n/**\n * check ethereum client status for web browser\n * @function\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.isMetaMask - check if it is MetaMask client\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const hasWallet = () => {\n  if (window.ethereum && window.ethereum.isMetaMask) {\n    return { success: true, isMetaMask: true };\n  }\n  return {\n    success: false,\n    error:\n      'The browser is not support ethereum wallet, please install MetaMask to proceed.',\n  };\n};\n\n/**\n *  Connect wallet using MetaMask account\n * @async\n * @function\n * @param {function} [handleChainChanged] - Callback when chainId changed\n * @param {function} [handleAccountChanged]  - callback when account changed\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.chainId - chain Id\n * @returns {string} response.account - account address\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const connectWallet = async (\n  handleChainChanged,\n  handleAccountChanged\n) => {\n  if (typeof window.ethereum !== undefined) {\n    const accounts = await window.ethereum.request({\n      method: 'eth_requestAccounts',\n    });\n    const chainId = parseInt(\n      await window.ethereum.request({ method: 'net_version' })\n    );\n    // const chainId = hexToNumber(\n    //   await window.ethereum.request({ method: 'eth_chainId' })\n    // );\n    const account = Array.isArray(accounts) && accounts[0];\n\n    // await web3.eth.requestAccounts().then(console.log)\n    window.ethereum.on('accountsChanged', (accounts) => {\n      let account;\n      if (accounts.length > 0) {\n        account = accounts[0];\n      } else {\n        account = '';\n      }\n      if (typeof handleAccountChanged === 'function') {\n        handleAccountChanged(account);\n      } else {\n        window.location.reload();\n      }\n      //console.log('accountChanged', account);\n    });\n    window.ethereum.on('chainChanged', (chainId) => {\n      let res = hexToNumber(chainId);\n      if (typeof handleChainChanged === 'function') {\n        handleChainChanged(res);\n      } else {\n        window.location.reload();\n      }\n      //console.log('chainChanged', res);\n    });\n    return { success: true, account, chainId };\n  }\n  return {\n    success: false,\n    error: 'Cannot connect wallet, please install MetaMask.',\n  };\n};\n\n/**\n * Get balance of the connected account\n * @async\n * @method\n * @param {string} chainId - Id of the chain\n * @param {string} accountAddress - Address of the connected account\n * @returns {string} Account balance\n */\nexport const getUserWalletBalance = async (chainId, walletAddress) => {\n  //const web3 = web3Factory(chainId);\n  const web3 = metaMaskWeb3();\n  const balance = await web3.eth.getBalance(walletAddress);\n  const res = Web3.utils.fromWei(balance);\n  return res;\n};\n","import {\n  getSlpLiquidityInfo,\n  getSlpWalletBalance,\n  isSlpUnlocked,\n  unlockSlp,\n  // addSlpLiquidity,\n  // removeSlpLiquidity,\n} from './slpPoolApi';\nimport {\n  getClp2LiquidityInfo,\n  getClp2WalletBalance,\n  isClp2Unlocked,\n  unlockClp2,\n  // addSlpLiquidity,\n  // removeSlpLiquidity,\n} from './clp2PoolApi';\nimport {\n  getClpLiquidityInfo,\n  getClpWalletBalance,\n  isClpUnlocked,\n  unlockClp,\n  // addClpLiquidity,\n  // removeClpLiquidity,\n} from './clpPoolApi';\n\nimport {\n  addSlpLiquidity2 as addSlpLiquidity,\n  removeSlpLiquidity2 as removeSlpLiquidity,\n  addClpLiquidity2 as addClpLiquidity,\n  removeClpLiquidity2 as removeClpLiquidity,\n  addClp2Liquidity2 as addClp2Liquidity,\n  removeClp2Liquidity2 as removeClp2Liquidity,\n} from './contractTransactionApiV2'\nimport { getLpContractAddress } from '../utils';\n\n/**\n * Get liquidity info of LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getLpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpLiquidityInfo(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Add liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp') {\n    return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp2') {\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\n  } else {\n    console.log(`addLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Remove liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await removeSlpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp') {\n    return await removeClpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp2') {\n    return await removeClp2Liquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else {\n    console.log(`removeLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Check account is unlocked in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await isClpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`isLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Unlock the account in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await unlockSlp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await unlockClp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await unlockClp2(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`unlockLp(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Get account balance in lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getLpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpWalletBalance(): invalid lp type ${type}`);\n  }\n};\n","const { getContractAddressConfig:getContractAddressConfig2} = require(\"../config\");\nconst { getPoolConfigList:getPoolConfigListV2} = require(\"../v2/config\")\n\nexport const getContractAddressConfig = (env = 'dev', version) => {\n  if (!version || version === '1' || version === 'v1') {\n    return getContractAddressConfig2(env)\n  } else if (version === '2' || version === 'v2') {\n    return getPoolConfigListV2(env).concat(getContractAddressConfig2(env))\n  } else {\n    throw new Error(`getPoolContractAddress: invalid version: ${version}`)\n  }\n}","import { getLiquidityInfo2 } from '../api/restApi';\nimport { getPoolLiquidity as getPoolLiquidity2 } from '../api/databaseApi';\nimport { \n  getLiquidityInfo as getLiquidityInfoV2,\n  getPoolLiquidity as getPoolLiquidityV2,\n } from '../v2';\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  if (bTokenId === undefined) {\n    return getLiquidityInfo2(chainId, poolAddress, accountAddress)\n  } else {\n    return getLiquidityInfoV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n};\n\nexport const getPoolLiquidity = async (\n  chainId,\n  poolAddress,\n  bTokenId,\n) => {\n  if (bTokenId === undefined) {\n    return getPoolLiquidity2(chainId, poolAddress)\n  } else {\n    return getPoolLiquidityV2(chainId, poolAddress, bTokenId)\n  }\n};","import {addLiquidity2, removeLiquidity2 } from '../api/contractTransactionApiV2';\nimport { \n  addLiquidity as addLiquidityV2,\n  removeLiquidity as removeLiquidityV2\n } from '../v2';\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n  if (bTokenId === undefined) {\n    return addLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return addLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n}\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n  if (bTokenId === undefined) {\n    return removeLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return removeLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n    );\n  }\n}\n","import {\n  getPositionInfo as getPositionInfo2,\n  isUnlocked as isUnlocked2,\n  getEstimatedMargin as getEstimatedMargin2,\n  getEstimatedFee as getEstimatedFee2,\n  getEstimatedFundingRate as getEstimatedFundingRate2,\n  getEstimatedLiquidityUsed as getEstimatedLiquidityUsed2,\n} from '../api/contractQueryApi'\n\nimport {\n  getSpecification2,\n  getWalletBalance2,\n  getFundingRate2,\n  getLiquidityUsed2,\n  getFundingRateCache2,\n} from '../api/restApi'\n//import { bTokenFactory } from '../factory/contracts'\n\nimport {\n  getPositionInfo as getPositionInfoV2,\n  isUnlocked as isUnlockedV2,\n  getEstimatedMargin as getEstimatedMarginV2,\n  getEstimatedFee as getEstimatedFeeV2,\n  getEstimatedFundingRate as getEstimatedFundingRateV2,\n  getEstimatedLiquidityUsed as getEstimatedLiquidityUsedV2,\n  getSpecification as getSpecificationV2,\n  getWalletBalance as getWalletBalanceV2,\n  getFundingRate as getFundingRateV2,\n  getLiquidityUsed as getLiquidityUsedV2,\n  getFundingRateCache as getFundingRateCacheV2,\n} from '../v2'\n\n\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  bTokenId,\n  symbolId,\n) => {\n  if (symbolId === undefined) {\n    return getSpecification2(chainId, poolAddress)\n  } else {\n    return getSpecificationV2(chainId, poolAddress, bTokenId, symbolId)\n  }\n}\n\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\n  if (symbolId === undefined) {\n    return getPositionInfo2(chainId, poolAddress, accountAddress)\n  } else {\n    return getPositionInfoV2(chainId, poolAddress, accountAddress, symbolId)\n  }\n}\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  if (bTokenId === undefined) {\n    return getWalletBalance2(chainId, poolAddress, accountAddress)\n  } else {\n    return getWalletBalanceV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n}\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => { \n  if (bTokenId === undefined) {\n    return isUnlocked2(chainId, poolAddress, accountAddress)\n  } else {\n    return isUnlockedV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n}\n\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\n  if (symbolId === undefined) {\n    return getEstimatedFee2(chainId, poolAddress, volume)\n  } else {\n    return getEstimatedFeeV2(chainId, poolAddress, volume, symbolId)\n  }\n}\n\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  if (symbolId === undefined) {\n    return getEstimatedMargin2(chainId, poolAddress, accountAddress, volume, leverage)\n  } else {\n    return getEstimatedMarginV2(chainId, poolAddress, accountAddress, volume, leverage, symbolId)\n  }\n}\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  if (symbolId === undefined) {\n    return getFundingRate2(chainId, poolAddress)\n  } else {\n    return getFundingRateV2(chainId, poolAddress, symbolId)\n  }\n}\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  if (symbolId === undefined) {\n    return getEstimatedFundingRate2(chainId, poolAddress, newNetVolume)\n  } else {\n    return getEstimatedFundingRateV2(chainId, poolAddress, newNetVolume, symbolId)\n  }\n}\n\nexport const getLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  symbolId\n) => {\n  if (symbolId === undefined) {\n    return getLiquidityUsed2(chainId, poolAddress)\n  } else {\n    return getLiquidityUsedV2(chainId, poolAddress, symbolId)\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  if (symbolId === undefined) {\n    return getEstimatedLiquidityUsed2(chainId, poolAddress, newNetVolume)\n  } else {\n    return getEstimatedLiquidityUsedV2(chainId, poolAddress, newNetVolume, symbolId)\n  }\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  if (symbolId === undefined) {\n    return getFundingRateCache2(chainId, poolAddress)\n  } else {\n    return getFundingRateCacheV2(chainId, poolAddress, symbolId)\n  }\n}\n","import { unlock as unlock2 } from '../api/contractTransactionApi';\nimport {\n  tradeWithMargin2,\n  closePosition2,\n  depositMargin2,\n  withdrawMargin2,\n} from '../api/contractTransactionApiV2';\n\nimport {\n  unlock as unlockV2,\n  tradeWithMargin as tradeWithMarginV2,\n  closePosition as closePositionV2,\n  depositMargin as depositMarginV2,\n  withdrawMargin as withdrawMarginV2,\n} from '../v2';\n\nexport const unlock = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  if(bTokenId === undefined) {\n    return unlock2(chainId, poolAddress, accountAddress)\n  } else {\n    return unlockV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n  if(bTokenId === undefined) {\n    return depositMargin2(chainId, poolAddress, accountAddress, amount)\n  } else {\n    return depositMarginV2(chainId, poolAddress, accountAddress, amount, bTokenId)\n  }\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n  if(bTokenId === undefined) {\n    return withdrawMargin2(chainId, poolAddress, accountAddress, amount)\n  } else {\n    return withdrawMarginV2(chainId, poolAddress, accountAddress, amount, bTokenId)\n  }\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId,\n) => {\n  if(symbolId === undefined) {\n    return tradeWithMargin2(chainId, poolAddress, accountAddress, newVolume)\n  } else {\n    return tradeWithMarginV2(chainId, poolAddress, accountAddress, newVolume, symbolId)\n  }\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n) => {\n  if(symbolId === undefined) {\n    return closePosition2(chainId, poolAddress, accountAddress)\n  } else {\n    return closePositionV2(chainId, poolAddress, accountAddress, symbolId)\n  }\n};\n","\nimport {getTradeHistory2} from '../api/restApi';\nimport { \n  getTradeHistory as getTradeHistoryV2\n } from '../v2';\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n) => {\n  if (symbolId === undefined) {\n    return getTradeHistory2(chainId, poolAddress, accountAddress);\n  } else {\n    return getTradeHistoryV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      symbolId,\n    );\n  }\n}","import { bg, getAnnualBlockNumber } from '../utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  return bg(\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\n  ).abs();\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\n  fundingRateCoefficient;\n}\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getAnnualBlockNumber(chainId);\n  //console.log(annualBlockCount);\n  return bg(fundingRate).times(annualBlockCount);\n};\n","import { bg, max, min } from '../utils';\n\nexport * from './fundingRate';\n\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  lTokenTotalSupply.eq(0) ? bg(0) : liquidity.div(lTokenTotalSupply);\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  tradersNetVolume,\n  tradersNetCost,\n  multiplier,\n  minPoolMarginRatio,\n  price\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const value = tradersNetVolume.times(price).times(multiplier);\n  const removable = liquidity\n    .plus(tradersNetCost)\n    .minus(value)\n    .minus(value.abs().times(minPoolMarginRatio));\n  const shares = max(min(lTokenBalance, removable.div(shareValue)), bg(0));\n  return shares;\n};\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return volume.times(price).times(multiplier).minus(cost);\n}\n\nexport const calculateMaxWithdrawMargin = (\n  price,\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  if (volume.eq(0)) {\n    return margin;\n  }\n  const held = calculateMarginHeld(\n    price,\n    volume,\n    multiplier,\n    minInitialMarginRatio\n  );\n  const pnl = calculatePnl(price, volume, multiplier, cost);\n  const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\n  return withdrawable;\n};\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = cost.minus(margin).div(volume).div(multiplier);\n  let res = volume.gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  price,\n  margin,\n  volume,\n  liquidity,\n  tradersNetVolume,\n  multiplier,\n  minPoolMarginRatio,\n  minInitialMarginRatio,\n  newVolume,\n  amount\n) => {\n  const minMargin = volume\n    .plus(newVolume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(minInitialMarginRatio);\n  const poolMaxVolume = liquidity\n    .div(minPoolMarginRatio)\n    .div(price)\n    .div(multiplier);\n  if (margin.plus(amount).gte(minMargin)) {\n    if (\n      newVolume.lte(poolMaxVolume.minus(tradersNetVolume)) &&\n      newVolume.gte(poolMaxVolume.negated().minus(tradersNetVolume))\n    ) {\n      return { success: true };\n    }\n    return { success: false, message: 'Pool insufficient liquidity' };\n  }\n  return { success: false, message: 'Trader insufficient margin' };\n};\n","import {\n  getPoolContractAddress,\n  naturalToDeri,\n  deriToNatural,\n  hexToString,\n  toChecksumAddress,\n  hexToNumber,\n  hexToNumberString,\n} from '../utils';\nimport { databaseFactory, perpetualPoolFactory } from '../factory/contracts';\n\nconst processTradeEvent = async (\n  perpetualPool,\n  bTokenSymbol,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier,\n    feeRatio\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  // console.log(JSON.stringify(res))\n  return res;\n};\n\nconst processLiquidateEvent = async (\n  info,\n  txHash,\n  bTokenSymbol,\n  multiplier\n) => {\n  // console.log(info)\n  const volume = deriToNatural(info.volume).abs();\n  // const cost = deriToNatural(info.cost).abs()\n  // const margin = info.margin\n  const timestamp = `${info.timestamp}000`;\n  const price = deriToNatural(info.price);\n  // const liquidator = info.liquidator\n  // const reward = info.reward\n  const national = volume.times(price).times(multiplier);\n  // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\n\n  const res = {\n    direction: 'Liquidation',\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: national.toString(),\n    volume: volume.toString(),\n    transactionFee: '0',\n    transactionHash: txHash.toString(),\n    time: timestamp,\n    // cost: naturalToDeri(cost).toString(),\n    // margin: margin.toString(),\n    // liquidator,\n    // reward: reward.toString(),\n  };\n  return res;\n};\n\n/**\n * Get the user trade history\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n * @returns {string} response[].direction\n * @returns {string} response[].baseToken\n * @returns {string} response[].price\n * @returns {string} response[].notional\n * @returns {string} response[].volume\n * @returns {string} response[].transactionFee\n * @returns {string} response[].time - Timestamp of the trade\n */\n\nexport const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\n  const keyMeta = `${chainId}.${poolAddress}`;\n  const db = databaseFactory();\n  let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\n    db.getValues([`${keyMeta}.tradeHistoryBlock`]),\n    db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\n  ]);\n  tradeFromBlock = hexToNumber(tradeFromBlock[0]);\n  liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [\n      tradeHistoryOffline,\n      tradeHistoryOnline,\n      liquidateHistoryOffline,\n      liquidateHistoryOnline,\n    ] = await Promise.all([\n      getTradeHistoryOffline(chainId, poolAddress, accountAddress),\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n      .concat(liquidateHistoryOnline)\n      .concat(tradeHistoryOffline)\n      .concat(liquidateHistoryOffline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolContractAddress(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n\n// get trade history combined from cache and from online pull\nconst getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\n  // console.log(chainId, poolAddress, accountAddress)\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.trade`;\n  const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const tradeHistoryLength = keyArray.length / 8;\n      // console.log(`trade history length: ${tradeHistoryLength}`)\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < tradeHistoryLength; i++) {\n        const indexBase = i * 8;\n        //console.log(resp[indexBase + 6].trim());\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n\n// get trade history online from the Block number\nexport const getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolContractAddress(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  /// let { initialBlock:fromBlock} = getPoolContractAddress(chainId, poolAddress)\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const {\n    multiplier,\n    feeRatio,\n    minInitialMarginRatio,\n  } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processTradeEvent(\n      perpetualPool,\n      bTokenSymbol,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      minInitialMarginRatio\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get liquidate history online from the Block number\nexport const getLiquidateHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolContractAddress(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Liquidate',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const { multiplier } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processLiquidateEvent(\n      item.returnValues,\n      item.transactionHash,\n      bTokenSymbol,\n      multiplier\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get trade history combined from cache and from online pull\nconst getLiquidateHistoryOffline = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.liquidate`;\n  const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const liquidateHistoryLength = keyArray.length / 8;\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < liquidateHistoryLength; i++) {\n        const indexBase = i * 8;\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n","// const\nimport { getRestServerConfig, DeriEnv } from '../config';\nimport { bg, getPoolContractAddress, deriToNatural } from '../utils';\nimport {\n  getLiquidateHistoryOnline,\n  getTradeHistoryOnline,\n} from './tradeHistoryApi';\n\nconst getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nconst fetchJson = async (url) => {\n  const resp = await fetch(url);\n  return await resp.json();\n};\n\n/**\n * Get specification from REST API, please refer {@link getSpecification}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getSpecification2 = async (chainId, poolAddress) => {\n  console.log('hit');\n  const res = await fetchJson(`${getHttpBase()}/specification/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate from REST API, please refer {@link getFundingRate}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRate2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/funding_rate/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity used from REST API, please refer {@link getLiquidityUsed}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getLiquidityUsed2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/liquidity_used/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate cache from REST API, it used to 'fundingRateCache.update(chainId, poolAddress, result)'\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRateCache2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/funding_rate_cache/${poolAddress}`\n  );\n  if (res && res.success) {\n    let result = res.data;\n    result.price = bg(result.price);\n    result.fundingRate = bg(result.fundingRate);\n    result.liquidityUsed = bg(result.liquidityUsed);\n    return result;\n  }\n  return res;\n};\n\n/**\n * Get position info from REST API, please refer {@link getPositionInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getPositionInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/position_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity info from REST API, please refer {@link getLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance from REST API, please refer {@link getWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity of the slp pool from REST API, please refer {@link getSlpLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the slp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getClpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the deri pool from REST API, please refer {@link getDeriBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getDeriBalance2 = async (chainId, poolAddress, accountAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/deri_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get the user trade history from REST API, please refer {@link getTradeHistory}\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n */\nexport const getTradeHistory2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let tradeFromBlock, liquidateFromBlock, tradeHistory;\n  const res = await fetchJson(\n    `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n    liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\n    tradeHistory = res.data.tradeHistory;\n  }\n  tradeHistory = tradeHistory.filter((i) => i).map((i) => {\n    return {\n      direction: i.direction.trim(),\n      baseToken: i.baseToken.trim(),\n      price: deriToNatural(i.price).toString(),\n      notional: deriToNatural(i.notional).toString(),\n      volume: deriToNatural(i.volume).toString(),\n      transactionFee: deriToNatural(i.transactionFee).toString(),\n      transactionHash: i.transactionHash,\n      time: i.time.toString(),\n    };\n  });\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n      .concat(liquidateHistoryOnline)\n      .concat(tradeHistory);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolContractAddress(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n","import { databaseFactory, databaseAirdropFactory } from '../factory/contracts';\nimport {\n  toChecksumAddress,\n  getNetworkName,\n  deriToString,\n  deriToBool,\n  deriToNatural,\n  getPoolContractAddress,\n} from '../utils';\n// import { getLiquidityUsed } from \"./contractApi\";\n\nexport const getUserInfo = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v`,\n      `${userAddress}.claim.r`,\n      `${userAddress}.claim.s`,\n      `${userAddress}.claim.valid`,\n    ])\n    .catch((err) => console.log('getUserInfo', err));\n  if (res) {\n    const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v: deriToString(v),\n      r,\n      s,\n      valid: deriToBool(valid),\n    };\n  }\n};\n\nexport const getUserInfoHarvest = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.harvest.lp`,\n      `${userAddress}.claim.harvest.trade`,\n    ])\n    .catch((err) => console.log('getUserInfoHarvest', err));\n  if (res) {\n    const [harvestLp, harvestTrade] = res;\n    return {\n      lp: deriToNatural(harvestLp).toString(),\n      trade: deriToNatural(harvestTrade).toString(),\n    };\n  }\n};\n\nexport const getUserInfoTotal = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([`${userAddress}.claim.total`])\n    .catch((err) => console.log('getUserInfoTotal', err));\n  if (res) {\n    const [total] = res;\n    return {\n      total: deriToNatural(total).toString(),\n    };\n  }\n};\n\n/**\n * Get user claim info from database\n * @async\n * @method\n * @param {string} userAddress - account address\n * @returns {Object} response\n * @returns {string} resposne.chainId\n * @returns {BigNumber} response.amount\n * @returns {string} response.deadline\n * @returns {string} response.nonce\n * @returns {string} response.v\n * @returns {string} response.r\n * @returns {string} response.s\n * @returns {bool} response.valid\n * @returns {BigNumber} response.lp\n * @returns {BigNumber} response.trade\n * @returns {string} response.total\n */\nexport const getUserInfoAll = async (userAddress) => {\n  const userInfo = await getUserInfo(userAddress);\n  const userInfoHarvest = await getUserInfoHarvest(userAddress);\n  const userInfoTotal = await getUserInfoTotal(userAddress);\n  return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\n};\n\n/**\n * Get pool liquidity\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {symbol} response.symbol\n */\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    const { symbol } = getPoolContractAddress(chainId, poolAddress)\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol,\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get pool apy\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  //const [poolAddress] = getPoolContractAddress(chainId, bSymbol);\n  //console.log('getPoolInfoApy', chainId, poolAddress);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.apy2`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, apy2, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        apy2: deriToNatural(apy2).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\n// export const getClpPoolInfoApy = async (chainId, poolAddress) => {\n//   const db = databaseFactory(true);\n//   try {\n//     const poolNetwork = getNetworkName(chainId);\n//     const res = await db\n//       .getValues([\n//         `${poolNetwork}.${poolAddress}.apy`,\n//         `${poolNetwork}.${poolAddress}.apy2`,\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\n//       ])\n//       .catch((err) => console.log('getPoolInfoApy', err));\n//     if (res) {\n//       const [apy, apy2, volume1h, volume24h] = res;\n//       return {\n//         apy: deriToNatural(apy).toString(),\n//         apy2: deriToNatural(apy2).toString(),\n//         volume1h: deriToNatural(volume1h).toString(),\n//         volume24h: deriToNatural(volume24h).toString(),\n//       };\n//     }\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n\n/**\n * Get user info of the pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} userAddress\n * @returns {Object} response\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\n  const db = databaseFactory(true);\n  //const {poolAddress} = getPoolContractAddress(chainId, poolAddress);\n  userAddress = toChecksumAddress(userAddress);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getUserInfoInPool', err));\n    if (res) {\n      const [volume1h, volume24h] = res;\n      return {\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\n  const db = databaseAirdropFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v1`,\n      `${userAddress}.claim.r1`,\n      `${userAddress}.claim.s1`,\n      `${userAddress}.claim.v2`,\n      `${userAddress}.claim.r2`,\n      `${userAddress}.claim.s2`,\n      `${userAddress}.claim.valid`,\n      // `${userAddress}.claim.harvest.lp`,\n      // `${userAddress}.claim.harvest.trade`,\n      // `${userAddress}.claim.total`,\n    ])\n    .catch((err) => console.log('getUserInfoAllForAirDrop', err));\n  if (res) {\n    const [\n      chainId,\n      amount,\n      deadline,\n      nonce,\n      v1,\n      r1,\n      s1,\n      v2,\n      r2,\n      s2,\n      valid,\n      // harvestLp,\n      // harvestTrade,\n      // total,\n    ] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v1: deriToString(v1),\n      r1,\n      s1,\n      v2: deriToString(v2),\n      r2,\n      s2,\n      valid: deriToBool(valid),\n      // lp: deriToNatural(harvestLp),\n      // trade: deriToNatural(harvestTrade),\n      // total: deriToString(total),\n    };\n  }\n};\n","import {\n  bTokenFactory,\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n  miningVaultPoolFactory,\n  miningVaultRouterFactory,\n  wormholeFactory,\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory/contracts';\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from './databaseApi';\nimport {\n  getPoolContractAddress,\n  getMiningVaultContractAddress,\n  getBTCUSDPrice,\n  bg,\n  naturalToDeri,\n  BigNumber,\n  format,\n  getDeriContractAddress,\n} from '../utils';\nimport {\n  getMiningVaultRouterContractAddress\n} from '../config'\nimport {\n  calculateMaxRemovableShares,\n  calculateMaxWithdrawMargin,\n  isOrderValid,\n} from '../calculation';\n\n/**\n * Unlock the account in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Deposit margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string|number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\n};\n\n/**\n * Withdraw margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n  const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\n\n  const maxWithdrawMargin = calculateMaxWithdrawMargin(\n    price,\n    volume,\n    margin,\n    cost,\n    multiplier,\n    minInitialMarginRatio\n  );\n  if (bg(amount).lte(maxWithdrawMargin)) {\n    try {\n      const tx = await pPool._transactPool(\n        'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'amount exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Mint in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const decimals = await bToken.decimals();\n  const BONE = 10 ** decimals;\n  amount = format(new BigNumber(amount).multipliedBy(BONE));\n  let res;\n  try {\n    const tx = await bToken._transact('mint', [amount], accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Add liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await pPool._transactPool(\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n      [naturalToDeri(amount)],\n      accountAddress\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} shares\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares\n) => {\n  const { lTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const {\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n  } = await pPool.getStateValues();\n\n  const maxRemovableShares = calculateMaxRemovableShares(\n    lTokenBalance,\n    lTokenTotalSupply,\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n    multiplier,\n    minPoolMarginRatio,\n    price\n  );\n  let res;\n  if (bg(shares).lte(maxRemovableShares)) {\n    try {\n      const tx = await pPool._transactPool(\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(shares)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'shares exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Trade with margin in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} newVolume\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minPoolMarginRatio,\n  } = await pPool.getParameters();\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\n  let res;\n  const orderValidation = isOrderValid(\n    price,\n    margin,\n    volume,\n    liquidity,\n    tradersNetVolume,\n    multiplier,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    bg(newVolume),\n    bg(amount)\n  );\n  if (orderValidation.success) {\n    try {\n      const tx = await pPool._transactPool(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.message };\n  }\n  return res;\n};\n\n/**\n * Close position in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  let { volume } = await pToken.getPositionInfo(accountAddress);\n  volume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const tx = await pPool._transactPool(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(volume), '0'],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n\n/**\n * Mint DToken in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDToken = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAll(accountAddress);\n  const amount = naturalToDeri(userInfo.amount);\n  const { deadline } = userInfo;\n  const { nonce } = userInfo;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultContractAddress(chainId);\n    if (miningVaultAddress) {\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\n      //miningVault.setAccount(accountAddress);\n      try {\n        const tx = await miningVault.mintDToken(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * freeze Deri in current wormhole pool to the specified chain\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @param {string} toChainId\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\n  const { wormholeAddress } = getDeriContractAddress(chainId);\n  const wormhole = wormholeFactory(chainId, wormholeAddress);\n  //wormhole.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await wormhole.freeze(accountAddress, amount, toChainId);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Deri in wormhole pool\n * @async\n * @method\n * @param {string} toChainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDeri = async (toChainId, accountAddress) => {\n  let res;\n  const databaseWormhole = databaseWormholeFactory(true);\n  // const userInfo = await getUserInfoAll(accountAddress);\n  const userInfo = await databaseWormhole.signature(accountAddress);\n  // console.log(userInfo)\n  const { amount } = userInfo;\n  const { fromChainId } = userInfo;\n  const { fromWormhole } = userInfo;\n  const fromNonce = userInfo.nonce;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const { wormholeAddress } = getDeriContractAddress(toChainId);\n    if (wormholeAddress) {\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\n      //wormhole.setAccount(accountAddress);\n      try {\n        const tx = await wormhole.mintDeri(\n          accountAddress,\n          amount,\n          fromChainId,\n          fromWormhole,\n          fromNonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the wormhole address in chain ${fromChainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * Unlock the account in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockDeri = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriContractAddress(chainId);\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  let res;\n  try {\n    const tx = await deri.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Airdrop in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintAirdrop = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAllForAirDrop(accountAddress);\n  const amount = naturalToDeri(userInfo.amount).toString();\n  const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultRouterContractAddress(chainId);\n    // console.log(\"miningVaultAddress\", miningVaultAddress)\n    // console.log(\"userInfo\", userInfo)\n    if (miningVaultAddress) {\n      const miningVaultRouter = miningVaultRouterFactory(\n        chainId,\n        miningVaultAddress\n      );\n      try {\n        const tx = await miningVaultRouter.mint(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v1,\n          r1,\n          s1,\n          v2,\n          r2,\n          s2\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault router address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n","export {\n  DeriEnv,\n  //getContractAddressConfig,\n  getLpContractAddressConfig,\n  getSlpContractAddressConfig,\n} from './config';\nexport * from './utils';\nexport * from './calculation';\n\nexport * from './api/apiGlobals';\nexport * from './api/factoryApi';\nexport * from './api/walletApi';\nexport {\n  // isUnlocked,\n  // getEstimatedMargin,\n  // getEstimatedFee,\n  // getEstimatedFundingRate,\n  // getEstimatedLiquidityUsed,\n  isDeriUnlocked,\n  getUserWormholeSignature,\n  // getFundingRate,\n  //getPositionInfo,\n} from './api/contractQueryApi';\nexport {\n  //unlock,\n  //depositMargin,\n  //withdrawMargin,\n  //addLiquidity,\n  //removeLiquidity,\n  //tradeWithMargin,\n  //closePosition,\n  mint,\n  mintDToken,\n  freeze,\n  mintDeri,\n  unlockDeri,\n  mintAirdrop,\n} from './api/contractTransactionApi';\nexport {\n  getUserInfo,\n  getUserInfoHarvest,\n  getUserInfoTotal,\n  getUserInfoAll,\n  getPoolInfoApy,\n  getLpPoolInfoApy,\n  getUserInfoInPool,\n  getUserInfoAllForAirDrop,\n} from './api/databaseApi';\n\n// export * from './api/slpPoolApi';\n// export * from './api/clpPoolApi';\n\n// export * from './api/tradeHistoryApi';\nexport {\n//getSpecification2 as getSpecification,\n// getPositionInfo2 as getPositionInfo,\n//getLiquidityInfo2 as getLiquidityInfo,\n//getWalletBalance2 as getWalletBalance,\n//getFundingRate2 as getFundingRate,\n//getLiquidityUsed2 as getLiquidityUsed,\ngetFundingRateCache2 as getFundingRateCache,\ngetSlpLiquidityInfo2 as getSlpLiquidityInfo,\ngetSlpWalletBalance2 as getSlpWalletBalance,\ngetClpLiquidityInfo2 as getClpLiquidityInfo,\ngetClpWalletBalance2 as getClpWalletBalance,\ngetDeriBalance2 as getDeriBalance,\n//getTradeHistory2 as getTradeHistory,\n} from './api/restApi';\n\n// export {\n  //tradeWithMargin2 as tradeWithMargin,\n  //closePosition2 as closePosition,\n  //depositMargin2 as depositMargin,\n  //withdrawMargin2 as withdrawMargin,\n  //addLiquidity2 as addLiquidity,\n  //removeLiquidity2 as removeLiquidity,\n// } from './api/contractTransactionApiV2'\n\nexport * from './api/lpPoolApi';\n\nexport * from './api_wrapper';\n\nexport {\n  getPoolConfigList,\n  getFilteredPoolConfigList,\n  getPoolBTokensBySymbolId,\n} from './v2';\n","import {\n  addLiquidity,\n  removeLiquidity,\n  depositMargin,\n  withdrawMargin,\n  tradeWithMargin,\n  closePosition,\n} from './contractTransactionApi';\nimport {\n  addSlpLiquidity,\n  removeSlpLiquidity,\n} from './slpPoolApi'\nimport {\n  addClpLiquidity,\n  removeClpLiquidity,\n} from './clpPoolApi'\nimport {\n  addClp2Liquidity,\n  removeClp2Liquidity,\n} from './clp2PoolApi'\nimport { wsInstance } from './apiGlobals'\nimport { getRestServerConfig, DeriEnv, getRedisWorkerQueneConfig } from '../config'\n\nconst wsOnPromise = (ws, event) => {\n  return new Promise((resolve, reject) => {\n    ws.on(event, function(data){\n      resolve(JSON.parse(data))\n    })\n  })\n}\nconst sendTradeTxToWorkerQuene = async(methodCall) => {\n  const ws = wsInstance.getOrSet(getRestServerConfig(DeriEnv.get()))\n  await ws.send(methodCall)\n  const res = await wsOnPromise(ws, 'trade_tx_receipt')\n  //console.log('res', res)\n  return res\n}\n\nexport const tradeWithMargin2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const res = await tradeWithMargin(chainId, poolAddress, accountAddress, newVolume, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`trade_with_margin(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const closePosition2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const res = await closePosition(chainId, poolAddress, accountAddress, newVolume, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`close_position(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const depositMargin2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await depositMargin(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`deposit_margin(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const withdrawMargin2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await withdrawMargin(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`withdraw_margin(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const addLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addLiquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeLiquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const addSlpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addSlpLiquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_slp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeSlpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeSlpLiquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_slp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\nexport const addClpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addClpLiquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeClpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeClpLiquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const addClp2Liquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addClp2Liquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeClp2Liquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeClp2Liquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};","import { perpetualPoolFactory } from '../factory/contracts';\nimport { getBTCUSDPrice } from '../utils';\nimport { getUserWormholeSignature } from './contractQueryApi';\nimport { io } from 'socket.io-client';\n\n/** @module apiCache */\n/**\n * fundingRateCache Object\n * @name fundingRateCache\n * @property {function} get - Get the funding rate from cache\n * @property {function} set - set the funding rate cache\n */\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress) {\n      const key = `${chainId}.${contractAddress}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`Cache key is not in resouceMap: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, resource) {\n      const key = `${chainId}.${contractAddress}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();\n\nexport const accountAddressCache = (function () {\n  let _accountAddress = '';\n  return {\n    get() {\n      if (_accountAddress === '') {\n        console.log(\"please init 'accountAddress' first\");\n      }\n      return _accountAddress;\n    },\n    set(value) {\n      if (typeof value === 'string' && value !== '') {\n        _accountAddress = value;\n      }\n    },\n  };\n})();\n\n/**\n * priceCache Object\n * @name priceCache\n * @property {function} get - Get the price from cache\n * @property {function} update - Set the price to automatic update during a time interval\n * @property {function} clear - Clear the the automatic update of the price\n */\nexport const priceCache = (function () {\n  let _price = '';\n  let _interval = null;\n  return {\n    get() {\n      if (_price === '') {\n        console.log(\"please init 'price' first\");\n      }\n      return _price;\n    },\n    async _update(chainId, poolAddress) {\n      try {\n        const res = await getBTCUSDPrice(chainId, poolAddress);\n        if (res !== '') {\n          _price = res;\n        }\n      } catch (err) {\n        console.log(`priceCache.update: ${err}`)\n      }\n    },\n    update(chainId, poolAddress) {\n      const self = this;\n      _interval = setInterval(() => {\n        // console.log('tick')\n        self._update(chainId, poolAddress);\n      }, 3000);\n    },\n    clear() {\n      if (_interval) {\n        clearInterval(_interval);\n      }\n      _price = '';\n    },\n  };\n})();\n\n/**\n * PerpetualPoolParametersCache Object\n * @name PerpetualPoolParametersCache\n * @property {function} get - Get the perpetualPoolParameters from cache\n * @property {function} update - Set the perpetualPoolParameters\n */\n\nexport const PerpetualPoolParametersCache = (function () {\n  let _parameters = {};\n  return {\n    get() {\n      if (!_parameters.multiplier) {\n        console.log(\"please init 'perpetual pool parameters' first\");\n      }\n      return _parameters;\n    },\n    async update(chainId, poolAddress) {\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n      const res = await perpetualPool.getParameters();\n      if (res.multiplier) {\n        _parameters = res;\n      }\n      return res;\n    },\n  };\n})();\n\n// websocket instance\nexport const wsInstance = (function(){\n  let _ws = null;\n  return {\n    get() {\n      if (_ws) {\n        return _ws\n      } else {\n        console.log('wsInstance.get() error: ws instance is not init')\n      }\n    },\n    set(url) {\n      try {\n        const ws = io(url, {\n          transports: ['websocket'],\n          path: '/ws',\n        });\n        ws.on('connect', () => {\n          console.log('hello from ws:', ws.id);\n        })\n        if (ws) {\n          _ws = ws\n        } else {\n          console.log('wsInstance.get() error: ws instance is not init')\n        }\n      } catch (err) {\n        console.log('wsInstance.set():', err)\n      }\n    },\n    getOrSet(url) {\n      if (!_ws) {\n        this.set(url)\n      }\n      return _ws\n    }\n  }\n})();\n","// eslint-disable-next-line no-extend-native\nNumber.prototype.toFixed = function(len){\n  if(len>20 || len<0){\n      throw new RangeError('toFixed() digits argument must be between 0 and 20');\n  }\n  // .123转为0.123\n  var number = Number(this);\n  if (isNaN(number) || number >= Math.pow(10, 21)) {\n      return number.toString();\n  }\n  if (typeof (len) == 'undefined' || len == 0) {\n      return (Math.round(number)).toString();\n  }\n  var result = number.toString(),\n      numberArr = result.split('.');\n\n  if(numberArr.length<2){\n      //整数的情况\n      return padNum(result);\n  }\n  var intNum = numberArr[0], //整数部分\n      deciNum = numberArr[1],//小数部分\n      lastNum = deciNum.substr(len, 1);//最后一个数字\n  \n  if(deciNum.length == len){\n      //需要截取的长度等于当前长度\n      return result;\n  }\n  if(deciNum.length < len){\n      //需要截取的长度大于当前长度 1.3.toFixed(2)\n      return padNum(result)\n  }\n  //需要截取的长度小于当前长度，需要判断最后一位数字\n  result = intNum + '.' + deciNum.substr(0, len);\n  if(parseInt(lastNum, 10)>=5){\n      //最后一位数字大于5，要进位\n      var times = Math.pow(10, len); //需要放大的倍数\n      var changedInt = Number(result.replace('.',''));//截取后转为整数\n      changedInt++;//整数进位\n      changedInt /= times;//整数转为小数，注：有可能还是整数\n      result = padNum(changedInt+'');\n  }\n  return result;\n  //对数字末尾加0\n  function padNum(num){\n      var dotPos = num.indexOf('.');\n      if(dotPos === -1){\n          //整数的情况\n          num += '.';\n          for(var i = 0;i<len;i++){\n              num += '0';\n          }\n          return num;\n      } else {\n          //小数的情况\n          var need = len - (num.length - dotPos - 1);\n          for(var j = 0;j<need;j++){\n              num += '0';\n          }\n          return num;\n      }\n  }\n}","import {isBrowser,isMobile} from 'react-device-detect'\nimport LoadableComponent from './utils/LoadableComponent';\n\nconst DesktopApp = LoadableComponent(() => import('./desktop/index'))\nconst MobileApp = LoadableComponent(() => import('./mobile/index'))\n\nfunction App() {\n  \n  if(isBrowser){\n    return <DesktopApp/>\n  }\n  if(isMobile){\n    return <MobileApp/>\n  }\n}\n\nexport default App;\n","\nimport {getUserWalletBalance ,DeriEnv,connectWallet} from \"../lib/web3js/indexV2\";\nimport config from '../config.json'\nimport { formatBalance, eqInNumber } from \"../utils/utils\";\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\n\n\nclass Wallet {\n  \n  detail = {}\n  \n  constructor(){\n    makeAutoObservable(this,{\n      detail : observable,\n      setDetail : action,\n      supportV2 : computed   \n    })\n  }\n\n  isConnected = () => !!this.detail.account;\n\n  connect =  async () => {\n    const res = await connectWallet();\n    return new Promise(async (resolve,reject) => {\n      if(res.success){\n        const {chainId,account} = res\n        const wallet = await this.loadWalletBalance(chainId,account);        \n        resolve(wallet)\n      } else {\n        reject(null)\n      }\n    })\n  }\n\n  loadWalletBalance = async (chainId,account) => {\n    const balance = await getUserWalletBalance(chainId,account)\n    const detail = {chainId,account,balance,formatBalance : formatBalance(balance)}\n    const env = DeriEnv.get();\n    const {chainInfo} = config[env]\n    \n    if(chainInfo[chainId]){\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\n    }\n    this.setDetail(detail)\n    return detail;\n  }\n\n  get = () => {\n    return this.detail;\n  }\n\n  setDetail(detail){\n    this.detail = detail;\n  }\n\n  get supportV2() {\n    return eqInNumber(this.detail.chainId,56) || eqInNumber(this.detail.chainId,97)\n  }\n\n}\n\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\nimport WebSocket from \"socket.io-client\";\n\nclass Oracle {\n  symbol = 'BTCUSD'\n  index = 0.00\n  kData = []\n  ws = null\n  paused = false;\n  listeners = {}\n\n  constructor(){\n    makeAutoObservable(this,{\n      index : observable,\n      kData : observable,\n      setIndex : action,\n    })\n    this.initWebSocket()\n  }\n\n  initWebSocket(){\n    if(this.ws === null) {\n      this.ws = new WebSocket('wss://api.deri.finance', {\n        transports: ['websocket'],\n        path: '/kline'\n      })\n      this.ws.on('connect',() => console.log('ws is already connected'));\n    }    \n  }\n\n  // loadIndex(symbol){\n  //   this.resume();\n  //   this.setSymbol(symbol)\n  //   this.ws.emit('get_kline', {'symbol': symbol, 'time_type': 'min', 'bars': 10})\n  // }\n\n  load(symbol,timeType = 'min'){\n    this.setSymbol(symbol)\n    this.ws.on('kline_update',data => {\n      const obj = {}\n      let time = data.time\n      if (data.symbol.toUpperCase() === this.symbol.toUpperCase()) {\n        obj.time = time \n        obj.low = Number(data.low)\n        obj.high = Number(data.high)\n        obj.open = Number(data.open)\n        obj.close = Number(data.close)\n        obj.volume = Number(data.volume)\n        obj.time_type = data.time_type\n        obj.symbol = data.symbol\n        if(!this.paused) {\n          this.setIndex(obj.close)\n          for(const key of Object.keys(this.listeners)){\n            if(typeof this.listeners[key] === 'function'){\n              this.listeners[key](obj)\n            }\n          }\n        }\n      }\n    })\n    this.ws.emit('get_kline', {'symbol': symbol, 'time_type': timeType, 'bars': 1000})\n  }\n\n  addListener(id,listener){\n    if(!this.listeners[id]) {\n      this.listeners[id] = listener\n    }    \n  }\n\n\n\n  unsubscribeBars(uid){\n    this.ws.emit('un_get_kline', {\n      symbol : this.symbol, 'time_type' : 'min', bars : 1000\n    })\n  }\n\n\n  loadHistory(symbol,timeType,callback){\n    this.ws.on('kline_history', data => {\n      const history = data.map(el => {\n        return {\n          time: el.time,\n          low: Number(el.low),\n          high: Number(el.high),\n          open: Number(el.open),\n          close: Number(el.close),\n          volume: Number(el.volume)\n        }\n      })\n      if(callback){\n        console.log('history ->',history[history.length-1].time)\n        callback(history)\n      }\n    })\n    this.ws.emit('get_kline', {'symbol': symbol, 'time_type': timeType, 'bars': 1000})\n    // this.emit(symbol);\n  }\n\n  // start(symbol){\n  //   this.initWebSocket();\n  //   this.loadIndex(symbol);\n  //   this.ws.on('kline_update',data => {\n  //     const obj = {}\n  //     let time = data.time\n  //     if (data.symbol === this.symbol) {\n  //       obj.time = time \n  //       obj.low = Number(data.low)\n  //       obj.high = Number(data.high)\n  //       obj.open = Number(data.open)\n  //       obj.close = Number(data.close)\n  //       obj.volume = Number(data.volume)\n  //       this.setIndex(obj.close)\n  //     }\n  //   })\n  // }\n\n  resume(){\n    this.setPause(false)\n  }\n\n  pause(){\n    this.setPause(true)\n  }\n\n  setIndex(index){\n    if(!this.paused) {\n      this.index = index;\n    }\n  }\n\n  setSymbol(symbol){\n    this.symbol = symbol\n  }\n\n  setPause(paused){\n    this.paused = paused\n  }\n}\n\nexport default Oracle","import { getPositionInfo } from \"../lib/web3js/indexV2\"\n\nexport default class Position {\n\n  callback = () => {}\n   wallet = null;\n   spec = null\n \n\n   async load(wallet,spec,callback){\n     if(spec && spec.pool){\n      const position = await getPositionInfo(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\n      if(position){\n        if(callback){\n          callback(position)\n        }\n      }\n      this.start(wallet,spec,callback)\n      return position;\n     }\n   }\n\n   start(wallet,spec,callback){\n     if(!this.interval){\n      this.interval = window.setInterval(() => this.load(wallet,spec,callback),3000)      \n      if(wallet){\n        this.wallet= wallet; \n        }\n        if(spec){\n          this.spec = spec\n        }\n        if(callback){\n          this.callback = callback;\n        }\n     }\n   }\n\n   pause(){\n    clearInterval(this.interval);\n    this.interval = null;\n   }\n\n   resume(wallet,spec,callback){\n     this.start(wallet,spec,callback || this.callback)\n   }\n\n   \n\n\n \n}","import { getSpecification } from \"../lib/web3js/indexV2\";\n\nexport default class Contract {\n\n  async load(wallet,config){\n    if(!this.info || (this.info && config.pool !== this.info.pool)){\n      const info = await getSpecification(wallet.detail.chainId,config.pool,config.bTokenId,config.symbolId)\n      this.setInfo(info);\n    }\n    return this.info\n  }\n\n  setInfo(info){\n    // if(info.status == \"fail\"){\n    //   info = {\n    //      bSymbol:'BUSD',\n    //      symbol:'BTCUSD',\n    //      multiplier:'0.0001',\n    //      fundingRateCoefficient:'0.0000025',\n    //      minInitialMarginRatio:0.1,\n    //      minMaintenanceMarginRatio:0.05,\n    //      feeRatio:0.0005,\n    //  }\n    // }\n    this.info = info;\n  }\n\n}","import { getTradeHistory } from \"../lib/web3js/indexV2\";\n\n\nexport default class History {\n\n   async load(wallet,config){\n      if(wallet.detail.chainId && config && config.pool){\n         const all = await getTradeHistory(wallet.detail.chainId,config.pool,wallet.detail.account,config.symbolId);    \n         return all;\n      } else {\n         return []\n      }\n   }\n}","import { makeObservable, observable, action } from \"mobx\";\nimport { getContractAddressConfig, DeriEnv } from \"../lib/web3js/indexV2\";\n\nexport default class Config {\n  all = []\n\n  constructor(){\n    makeObservable(this,{\n      all : observable,\n      setAll : action\n    })\n  }\n\n  load(version){\n    const current = version && version.current;\n    let configs = getContractAddressConfig(DeriEnv.get(),current)\n    if(version){\n      configs = configs.filter(c => c.version === version.current)\n      //v2 不需要展示base token,需要合并相同的base token\n      if(version.isV2){\n        configs = configs.reduce((total,cur) => {\n          const pos = total.findIndex(c => c.symbolId === cur.symbolId);\n          if(pos === -1){\n            total.push(cur)\n          }\n          return total;\n        },[])\n      }\n    }\n    this.setAll(configs)\n    return configs;\n  }\n\n  setAll(all){\n    this.all = all;\n  }\n  \n}","import { observable, action, computed, makeObservable } from \"mobx\";\nimport Oracle from \"./Oracle\";\nimport Position from \"./Position\";\nimport Contract from \"./Contract\";\nimport History from './History'\nimport Config from \"./Config\";\nimport { eqInNumber } from \"../utils/utils\";\nimport { getFundingRate } from \"../lib/web3js/indexV2\";\n\n/**\n * 交易模型\n * 关联对象\n * 1. chain\n * 2. Oracle\n * 3. position\n * 4. contract\n * 5. history\n * 计算\n * 1. dynamic balance\n * 2. available blance\n * 响应事件\n * 1. chain change\n * 2. chain’s symbol changed\n * 3. index update\n * 4. volum change\n * 5. margin change\n * 输出\n * 1. dynamic balance\n * 2. margin\n * 3. available balance\n * 4. volume\n * 5. specs\n * 6. spec\n * 7. position\n * 8. contract\n * 9. fundingRate\n */\n\nexport default class Trading {\n  version = null;\n  wallet = null;\n  configs = [] \n  config = null;\n  fundingRate = '--' \n  index = null\n  volume = ''\n  paused = false\n  margin = ''\n  position = {}\n  contract = {}\n  fundingRate = {}\n  history = []\n  userSelectedDirection = 'long'\n\n  constructor(){\n    makeObservable(this,{\n      index : observable,\n      volume : observable,\n      margin : observable,\n      fundingRate : observable,\n      position : observable,\n      history : observable,\n      contract : observable,\n      paused : observable,\n      userSelectedDirection : observable,\n      setWallet :action,\n      setConfigs : action,\n      setConfig : action,\n      setIndex : action,\n      setContract : action,\n      setPosition : action,\n      setVolume : action,\n      setUserSelectedDirection : action,\n      setFundingRate : action,\n      setHistory : action,\n      setPaused : action,\n      amount : computed,\n      fundingRateTip : computed,\n      direction : computed,\n      volumeDisplay : computed\n    })\n    this.configInfo = new Config();\n    this.oracle = new Oracle();\n    this.positionInfo = new Position()\n    this.contractInfo = new Contract();\n    this.historyInfo = new History()\n  }\n\n  /**\n   * 初始化\n   */\n  async init(wallet,version){\n    //配置信息，如chainId、pool address、symbol、baseToken等\n    const all = await this.configInfo.load(version);\n    //version 可选项\n    if(version){\n      this.version = version\n    }\n    if(!this.wallet || wallet.detail.account !== this.wallet.detail.account){\n      this.setWallet(wallet);\n      this.setConfigs(all.filter(c => eqInNumber(wallet.detail.chainId,c.chainId)))\n      const defaultConfig = this.getDefaultConfig(this.configs,wallet);\n      this.setConfig(defaultConfig);\n      this.onConfigChange(this.wallet,this.config,true)\n    }\n    this.setVolume('')\n  }\n\n  async switch(spec){\n    const cur = this.configs.find(config => config.pool === spec.pool && config.symbolId === spec.symbolId)\n    //v1 只需要比较池子地址，v2 需要比较symbolId\n    let changed = false\n    if(this.version){\n      changed = this.version.isV1 ? spec.pool !== this.config.pool : spec.symbolId !== this.config.symbolId\n    }\n    if(cur){\n      this.setConfig(cur)\n      this.pause();\n      this.onConfigChange(this.wallet,cur,changed);  \n      if(changed){\n        this.store(cur)\n      }    \n      this.resume()\n      this.setVolume('')\n    }\n  }\n\n  async onConfigChange(wallet,config,symbolChanged){\n     //position\n     this.positionInfo.load(wallet,config,position => {       \n        this.setPosition(position);\n     })\n\n     //切换指数\n    if(symbolChanged){\n      this.oracle.unsubscribeBars();\n      this.oracle.addListener('trading',data => {\n        this.setIndex(data.close)\n      })\n      this.oracle.load(config.symbol)\n    }\n     //contract\n     const contract = await this.contractInfo.load(wallet,config)\n     this.setContract(contract)\n\n     //funding rate\n     const fundingRate = await this.loadFundingRate(wallet,config)\n     this.setFundingRate(fundingRate)\n\n     //history\n     const history = await this.historyInfo.load(wallet,config);\n     this.setHistory(history);\n  }\n\n\n  getDefaultConfig(all = [],wallet){\n    //优先使用session storage 的\n    if(all.length > 0){    \n      const fromStore = this.getFromStore();\n      if(fromStore && eqInNumber(wallet.detail.chainId,fromStore.chainId)){\n        return fromStore;\n      } else {\n        return all[0]\n      }\n    }\n    return {}    \n  }\n\n  sessionStorageKey(){\n    return `${this.version.current}-current-trading-pool`\n  }\n\n  //存起来\n  store(config){\n    if(config){\n      const key = this.sessionStorageKey();\n      sessionStorage.setItem(key,JSON.stringify(config))\n    }\n  }\n\n  getFromStore(){\n    return JSON.parse(sessionStorage.getItem(this.sessionStorageKey()))\n  }\n\n  async refresh(){\n    this.pause()\n    const position = await this.positionInfo.load(this.wallet,this.config);\n    this.setPosition(position)\n    this.wallet.loadWalletBalance(this.wallet.detail.chainId,this.wallet.detail.account)\n    const fundingRate = await this.loadFundingRate(this.wallet,this.config)\n    this.setFundingRate(fundingRate)\n    const history = await this.historyInfo.load(this.wallet,this.config)\n    if(history){\n      this.setHistory(history)\n    }\n    this.setVolume('')\n    this.resume();\n  }\n\n  /**\n   * 暂停实时读取index和定时读取position\n   */\n  pause(){\n    this.setPaused(true)\n    this.oracle.pause();\n    this.positionInfo.pause();\n  }\n\n  /**\n   * 恢复读取\n   */\n  resume(){\n    this.setPaused(false)\n    this.oracle.resume();\n    this.positionInfo.resume(this.wallet,this.config);\n  }\n\n  setWallet(wallet){\n    this.wallet = wallet;\n  }\n\n  setConfigs(configs){\n    this.configs = configs\n  }\n\n  setConfig(config){\n    this.config = config\n  }\n\n  setIndex(index){\n    this.index = index;\n  }\n\n  setPosition(position){\n    if(position){\n      this.position = position\n    }\n  }\n\n  setContract(contract){\n    this.contract = contract\n  }\n\n  setHistory(history){\n    this.history = history\n  }\n\n  setFundingRate(fundingRate){\n    this.fundingRate = fundingRate;\n  }\n\n  setVolume(volume){\n    this.volume = volume;\n  }\n\n  setPaused(paused){\n    this.paused = paused\n  }\n\n  setUserSelectedDirection(direction){\n    this.userSelectedDirection = direction\n  }\n\n  setMargin(margin){\n    this.margin = margin\n    if(this.contract){\n      const volume = (+margin) / ((+this.index) * (+this.contract.multiplier) * (+this.contract.minInitialMarginRatio))      \n      if(!isNaN(volume)){\n        this.setVolume(Math.abs(volume))\n        console.log('volume ',volume)\n      }\n    }\n  }\n\n  get volumeDisplay(){\n    if(this.volume === '' || this.volume === '-' || this.volume === 'e' || isNaN(this.volume)) {\n      return '';\n    } else if(this.margin !== '') {\n        if((+this.volume) > Math.abs(+this.position.volume)) {\n          const result = parseInt(Math.abs(this.volume) - Math.abs(this.position.volume))\n          return result\n        } else {\n          const result = parseInt(Math.abs(this.position.volume) - Math.abs(this.volume));          \n          return result\n        }\n    } else {\n      return this.volume\n    }\n  }\n\n  \n  //计算available balance、contract value、\n  get amount(){\n    if(this.index && this.position && this.contract && this.volume !== ''){\n      //合同价值\n      let curVolume = Math.abs(this.volume);\n      const originVolume = Math.abs(this.volumeDisplay);\n      //如果不是通过marge 算出来的volume\n      if(this.margin === '') {       \n        if(this.userSelectedDirection === 'long') {\n          if((+this.position.volume) > 0) {\n            curVolume = curVolume + (+this.position.volume)\n          } else {\n            curVolume = Math.abs(this.position.volume) - curVolume\n          }         \n        } else {\n          if((+this.position.volume) > 0){\n            curVolume =  (+this.position.volume) - curVolume\n          } else {\n            curVolume = Math.abs(this.position.volume) + (+curVolume)\n          }\n        }\n      }\n      const contractValue = Math.abs(curVolume) * this.index * this.contract.multiplier\n      const dynBalance = (+this.position.margin) + (+this.position.unrealizedPnl)\n      const margin = contractValue * this.contract.minInitialMarginRatio\n      const leverage = (+contractValue / +dynBalance).toFixed(1);\n      const balance = ((+dynBalance) - (+margin)).toFixed(2)\n      const available = balance > 0 ? balance : 0\n      const exchanged = (originVolume * (+this.contract.multiplier)).toFixed(4)\n      return {\n        dynBalance, //动态余额\n        margin,         //存入保证金\n        available,      //可用余额\n        exchanged,      //换算的值\n        leverage,        //杠杆\n      }\n    } else if(this.position && this.position.margin){\n      const dynBalance = ((+this.position.margin) + (+this.position.unrealizedPnl)).toFixed(2)\n      const margin = (+this.position.marginHeld).toFixed(2)\n      const available = ((+dynBalance) - (+margin)).toFixed(2)\n      return {\n        dynBalance,\n        margin,\n        available,\n      }\n    }\n    return {}\n  }\n\n  get direction(){    \n    // 正仓\n    if(this.margin !== ''){\n      if((+this.position.volume) > 0) {\n        if(Math.abs(this.volume) > Math.abs(this.position.volume)) {\n          return 'long'\n        } else {\n          return 'short'\n        }\n      } else if((+this.position.volume) < 0){\n        //负仓\n        if((+this.volume) > Math.abs(+this.position.volume)){\n          return 'short'\n        } else {\n          return 'long'\n        }\n      }\n    }\n    return 0\n  }\n\n  //资金费率\n  async loadFundingRate(wallet,config){\n    if(wallet && config){    \n      const res = await getFundingRate(wallet.detail.chainId,config.pool,config.symbolId)\n      return res;\n    }\n  }\n\n  get fundingRateTip(){\n    if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\n      return `Funding  Rate (per block) = ${this.fundingRate.fundingRatePerBlock}` +\n      `\\n(1 Long contract pays 1 short contract ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} per block)`        \n    }\n    return ''\n  }\n\n\n\n}","import { makeAutoObservable, observable, action, computed } from \"mobx\";\nconst versionKey = 'deri-current-version'\n\nexport default class Version {\n  current = null;\n\n  constructor(){\n    makeAutoObservable(this,{\n      current : observable,\n      setCurrent : action,\n      isV1 : computed,\n      isV2 : computed\n    })\n    const versionFromSession = sessionStorage.getItem(versionKey);\n    this.current = versionFromSession ? versionFromSession : null\n  }\n\n\n  setCurrent(version,notSave){\n    this.current = version;\n    if(!notSave){\n      sessionStorage.setItem(versionKey,version)\n    }\n  }\n\n  switch(){\n    if(this.current === 'v1'){\n      this.setCurrent('v2')\n    } else {\n      this.setCurrent('v1')\n    }\n  }\n\n  get isV1() {\n    return this.current === 'v1'\n  }\n\n  get isV2(){\n    return this.current === 'v2'\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom'\nimport App from './App';\nimport './assets/deri.less';\nimport { Provider } from 'mobx-react';\nimport Wallet from './model/Wallet';\n//note dont remove zhe line\nimport NumberPolyfill from './lib/polyfill/numberPolyfill'\nimport Trading from './model/Trading';\nimport { DeriEnv } from './lib/web3js/config';\nimport Version from './model/Version';\n\nconst wallet = new Wallet();\nconst trading = new Trading()\nconst version = new Version();\n\nif(process.env.NODE_ENV === 'production') {\n  DeriEnv.set('prod')\n} \nDeriEnv.set('dev')\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider wallet={wallet}  trading={trading} version={version}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","export const getDBProviderUrlsConfig = () => [\n  'https://data-seed-prebsc-1-s1.binance.org:8545/',\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\n];\n\nexport const getDBAddressConfig = (env = 'dev', useProductionDB) => {\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\n    // for production\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n\nexport const getDBWormholeAddressConfig = (env = 'dev', useProductionDB) => {\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\n    // for production\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\n  }\n  // for test\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\n};\n\nexport const getDBAirdropAddressConfig = (env = 'dev', useProductionDB) => {\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\n    // for production\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n","import {\n  bTokenFactory,\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory/contracts';\nimport { getPoolInfoApy } from './databaseApi';\nimport {\n  fundingRateCache,\n  PerpetualPoolParametersCache,\n  priceCache,\n} from './apiGlobals';\nimport {\n  hasInvalidArgsValue,\n  naturalWithPercentage,\n  deriToNatural,\n  getPoolContractAddress,\n  getBTCUSDPrice,\n  bg,\n  BigNumber,\n  getDeriContractAddress,\n} from '../utils';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  calculateShareValue,\n  calculateMaxRemovableShares,\n  calculateEntryPrice,\n  calculateMarginHeld,\n  calculatePnl,\n  calculateLiquidationPrice,\n  processFundingRate,\n} from '../calculation';\n\n/**\n * Get the contract information\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.addresses\n * @returns {string} response.symbol\n * @returns {string} response.bSymbol\n * @returns {string} response.multiplier\n * @returns {string} response.feeRatio\n * @returns {string} response.minPoo\n * @returns {string} response.minPoolMarginRatio\n * @returns {string} response.minInitialMarginRatio\n * @returns {string} response.minMaintenanceMarginRatio\n * @returns {string} response.minAddLiquidity\n * @returns {string} response.redemptionFeeRatio\n * @returns {string} response.fundingRateCoefficient\n * @returns {string} response.minLiquidationReward\n * @returns {string} response.maxLiquidationReward\n * @returns {string} response.liquidationCutRatio\n * @returns {string} response.priceDelayAllowance\n */\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    feeRatio,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n    minAddLiquidity,\n    redemptionFeeRatio,\n    fundingRateCoefficient,\n    minLiquidationReward,\n    maxLiquidationReward,\n    liquidationCutRatio,\n    priceDelayAllowance,\n  } = await pPool.getParameters();\n  const symbol = await pPool.symbol();\n  const bSymbolRaw = await bToken.symbol();\n\n  return {\n    addresses: poolAddress,\n    symbol,\n    bSymbol: bSymbolRaw,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    minInitialMarginRatio: minInitialMarginRatio.toString(),\n    minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n    minAddLiquidity: minAddLiquidity.toString(),\n    redemptionFeeRatio: redemptionFeeRatio.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minLiquidationReward: minLiquidationReward.toString(),\n    maxLiquidationReward: maxLiquidationReward.toString(),\n    liquidationCutRatio: liquidationCutRatio.toString(),\n    priceDelayAllowance: priceDelayAllowance.toString(),\n  };\n};\n\n/**\n * Get position Information of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.volume\n * @returns {string} response.averageEntryPrice\n * @returns {string} response.margin\n * @returns {string} response.marginHeld\n * @returns {string} response.unrealizedPnl\n * @returns {string} response.liquidationPrice\n */\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n  } = await pPool.getParameters();\n  //console.log('getPositionInfo', chainId, poolAddress, accountAddress, price);\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n\n  return {\n    volume: volume.toString(),\n    averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n    margin: margin.toString(),\n    marginHeld: calculateMarginHeld(\n      price,\n      volume,\n      multiplier,\n      minInitialMarginRatio\n    ).toString(),\n    unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\n    liquidationPrice: calculateLiquidationPrice(\n      volume,\n      margin,\n      cost,\n      multiplier,\n      minMaintenanceMarginRatio\n    ).toString(),\n  };\n};\n\n/**\n * Get liquidity Info of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const {\n    liquidity,\n    tradersNetCost,\n    tradersNetVolume,\n  } = await pPool.getStateValues();\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const poolDynamicEquity = liquidity.plus(\n    tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\n  );\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      tradersNetVolume,\n      tradersNetCost,\n      multiplier,\n      minPoolMarginRatio,\n      price\n    ).toString(),\n  };\n};\n\n/**\n * Get user balance in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {string} user balance\n */\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n\n/**\n * Check account is unlocked in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\n/**\n * Get estimate margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} volume\n * @param {string} leverage\n * @returns {string}\n */\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage\n) => {\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const { multiplier } = await pPool.getParameters();\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .div(bg(leverage))\n    .toString();\n};\n\n/**\n * Get estimate Fee in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} volume\n * @returns {string}\n */\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\n  // const price = await getBTCUSDPrice(chainId, poolAddress);\n  let price = priceCache.get();\n  let parameters = PerpetualPoolParametersCache.get();\n  if (price === '') {\n    await priceCache.update(chainId, poolAddress);\n    price = priceCache.get();\n  }\n  // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\n  // const { multiplier, feeRatio } = await pPool.getParameters();\n  if (!parameters.multiplier) {\n    parameters = await PerpetualPoolParametersCache.update(\n      chainId,\n      poolAddress\n    );\n  }\n  //console.log('price', price);\n  const { multiplier, feeRatio } = parameters;\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};\n\n/**\n * Get funding rate of the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.fundingRate0\n * @returns {string} response.fundingRatePerBlock\n * @returns {string} response.liquidity\n * @returns {string} response.volume\n * @returns {string} response.tradersNetVolume\n */\nexport const getFundingRate = async (chainId, poolAddress) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n\n  const res = await perpetualPool\n    .getFundingRate()\n    .catch((err) => console.log('getFundingRate', err));\n  fundingRateCache.set(chainId, poolAddress, res);\n  const poolInfo = await getPoolInfoApy(chainId, poolAddress);\n\n  if (res) {\n    // console.log(hexToNatural(res[0]));\n    const {\n      fundingRate,\n      fundingRatePerBlock,\n      liquidity,\n      tradersNetVolume,\n    } = res;\n    const volume = poolInfo.volume24h;\n    // fundingRate = processFundingRate(chainId, fundingRate);\n\n    return {\n      fundingRate0: naturalWithPercentage(fundingRate),\n      fundingRatePerBlock: BigNumber(fundingRatePerBlock).toExponential(10),\n      liquidity: liquidity.toString(),\n      volume: deriToNatural(volume).toString(),\n      tradersNetVolume: tradersNetVolume.toString(),\n    };\n  }\n};\n\n/**\n * Get estimate funding rate\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let fundingRate1;\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ];\n    if (hasInvalidArgsValue(...parameters)) {\n      return {\n        fundingRate1: '0',\n      };\n    }\n    // console.log(parameters)\n    fundingRate1 = calculateFundingRate(...parameters);\n    fundingRate1 = processFundingRate(chainId, fundingRate1);\n    return {\n      fundingRate1: naturalWithPercentage(fundingRate1),\n    };\n  }\n};\n\n/**\n * Get liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidityUsed0\n */\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const { liquidityUsed } = res;\n    return {\n      liquidityUsed0: naturalWithPercentage(liquidityUsed),\n    };\n  }\n};\n\n/**\n * Get estimate liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool\n      .getFundingRate()\n      .catch((err) => console.log('getLiquidityUsed', err));\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.poolMarginRatio,\n    ];\n    if (hasInvalidArgsValue(...parameters)) {\n      return {\n        liquidityUsed1: '0',\n      };\n    }\n    const liquidityUsed1 = calculateLiquidityUsed(...parameters);\n    return {\n      liquidityUsed1: naturalWithPercentage(liquidityUsed1),\n    };\n  }\n};\n\n/**\n * Get user signature of the wormhole pool\n * @async\n * @method\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getUserWormholeSignature = async (accountAddress) => {\n  const databaseWormhole = databaseWormholeFactory(true);\n  return await databaseWormhole.signature(accountAddress);\n};\n\n/**\n * Check account is unlocked in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriContractAddress(chainId);\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  let res;\n  try {\n    const tx = await deri.isUnlocked(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Get deri balance in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string}\n */\nexport const getDeriBalance = async (chainId, accountAddress) => {\n  const { deriAddress, wormholeAddress } = getDeriContractAddress(chainId);\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\n  return (await deri.balance(accountAddress)).toString();\n};\n","import { bTokenFactory, slpPoolFactory } from '../factory/contracts';\nimport { getSlpContractAddress } from '../utils';\n\n/**\n * Get liquidity info of SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getSlpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balance(poolAddress),\n      bToken.balance(accountAddress),\n      slpPool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n    };\n  }\n  console.log('no SlpPool address, please check');\n  return {};\n};\n\n/**\n * Add liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\n/**\n * Unlock the account in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getSlpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n","import { bTokenFactory, clp2PoolFactory } from '../factory/contracts';\nimport { getClp2ContractAddress } from '../utils';\n\nexport const getClp2LiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balance(poolAddress),\n      bToken.balance(accountAddress),\n      clp2Pool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n    };\n  }\n  console.log('no Clp2Pool address, please check');\n  return {};\n};\n\nexport const addClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const removeClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const getClp2WalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n","import {\n  bTokenFactory,\n  clpPoolFactory,\n  lTokenFactory,\n} from '../factory/contracts';\nimport { bg, getClpContractAddress } from '../utils';\n\n/**\n * Get liquidity Info of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getClpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const clpPool = clpPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { liquidity } = await clpPool.getStateValues();\n  //console.log(liquidity);\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: (lTokenTotalSupply.eq(0)\n      ? bg(0)\n      : liquidity.div(lTokenTotalSupply)\n    ).toString(),\n    maxRemovableShares: lTokenBalance.toString(),\n  };\n};\n\n/**\n * Add liquidity to the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clpPool.addLiquidity(accountAddress, amount);\n      console.log(tx, typeof tx);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    try {\n      const tx = await clpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isClpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\n/**\n * Unlock the account in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockClp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getClpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n","\n\nimport BigNumber from 'bignumber.js'\nexport function bg(value, base = 0) {\n  if (base == 0) {\n    return BigNumber(value);\n  } else if (base > 0) {\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\n  } else {\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\n  }\n}\n\nexport function deriNatural(value) {\n  return bg(value, -18);\n}\n\nexport function formatAddress(address){\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\n}\n\nexport function formatBalance(balance){\n  return balance && (+balance).toFixed(4)\n}\n\nexport function eqInNumber(str1,str2){\n  return (+str1) === (+str2)\n}\n\nexport function isLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\nexport function isSushiLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\n}\nexport function isCakeLP(address){\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\n\n","import Web3 from 'web3';\nimport { metaMaskWeb3, web3Factory } from '../factory/web3';\n\nconst MAX_GAS_AMOUNT = 532731;\n\nexport class Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    this.chainId = chainId;\n    this.contractAddress = contractAddress;\n    if (isProvider) {\n      this.web3 = web3Factory(chainId);\n    } else {\n      this.web3 = metaMaskWeb3();\n    }\n  }\n  setAccount(accountAddress) {\n    this.accountAddress = accountAddress;\n    return this;\n  }\n  setPool(poolAddress) {\n    this.poolAddress = poolAddress;\n    return this;\n  }\n  async _call(method, args = []) {\n    return await this.contract.methods[method](...args).call();\n  }\n\n  async _estimatedGas(method, args = [], accountAddress) {\n    let gas = 0;\n    for (let i = 0; i < 20; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (err) {\n        //console.log(\"err\", err);\n      }\n    }\n    if (gas == 0) gas = MAX_GAS_AMOUNT;\n    if (gas > MAX_GAS_AMOUNT) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt === null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _transact(method, args, accountAddress) {\n    const [gas, gasPrice] = await Promise.all([\n      this._estimatedGas(method, args, accountAddress),\n      this.web3.eth.getGasPrice(),\n    ]);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods[method](...args).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import Web3 from 'web3';\nimport { Contract } from './contract';\nimport {\n  hasInvalidArgsValue,\n  getBTCUSDPrice,\n  getOracleInfo,\n  deriToNatural,\n  bg,\n} from '../utils';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  processFundingRate,\n} from '../calculation';\n\n/* eslint-disable */\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PerpetualPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, isProvider);\n    this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\n  }\n\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async getStateValues() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getStateValues');\n      //console.log(\"getStateValues() raw:\", res)\n      result = {\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\n        liquidity: deriToNatural(res.liquidity),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      result = {\n        cumuFundingRate: defaultValue,\n        cumuFundingRateBlock: defaultValue,\n        liquidity: defaultValue,\n        tradersNetCost: defaultValue,\n        tradersNetVolume: defaultValue,\n      };\n      console.log(`getStateValues: ${err}`);\n    }\n    return result;\n  }\n\n  async getParameters() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getParameters');\n      // console.log(\"getParameters() raw: \", res)\n      result = {\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n        priceDelayAllowance: bg(res.priceDelayAllowance),\n      };\n    } catch (err) {\n      result = {\n        multiplier: defaultValue,\n        feeRatio: defaultValue,\n        minPoolMarginRatio: defaultValue,\n        minInitialMarginRatio: defaultValue,\n        minMaintenanceMarginRatio: defaultValue,\n        minAddLiquidity: defaultValue,\n        redemptionFeeRatio: defaultValue,\n        fundingRateCoefficient: defaultValue,\n        minLiquidationReward: defaultValue,\n        maxLiquidationReward: defaultValue,\n        liquidationCutRatio: defaultValue,\n        priceDelayAllowance: defaultValue,\n      };\n      console.log(`getParameters: ${err}`);\n    }\n    return result;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt == null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _estimatedGas(method, args, accountAddress) {\n    // !this.accountAddress &&\n    //   console.log('please do setAccount(accountAddress) first');\n    let gas = 0;\n    for (let i = 0; i < 20; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (err) {\n        //console.log(\"err\", err);\n      }\n    }\n    if (gas == 0) gas = 532731;\n    if (gas > 532731) gas = 532731;\n    return gas;\n  }\n\n  async _transactPool(method, args = [], accountAddress) {\n    // !this.accountAddress &&\n    //   console.log('please do setAccount(accountAddress) first');\n    const oracle = await getOracleInfo(this.chainId, this.contractAddress);\n    let signed = [oracle.timestamp, oracle.price, oracle.v, oracle.r, oracle.s];\n\n    const [gas, gasPrice] = await Promise.all([\n      this._estimatedGas(method, [...args, ...signed], accountAddress),\n      this.web3.eth.getGasPrice(),\n    ]);\n    console.log(`gasPrice ${gasPrice / 1000000000} GW`);\n\n    //gasPrice: Web3.utils.numberToHex(gasPrice),\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n\n  async getFundingRate() {\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\n    price = await getBTCUSDPrice(this.chainId, this.contractAddress);\n    try {\n      const { tradersNetVolume, liquidity } = await this.getStateValues();\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        minPoolMarginRatio,\n      } = await this.getParameters();\n      //console.log(\"minPoolMarginRatio\", minPoolMarginRatio.toString())\n      const args1 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        fundingRateCoefficient,\n      ];\n      if (hasInvalidArgsValue(...args1)) {\n        fundingRate = '0';\n        fundingRatePerBlock = '0';\n      } else {\n        fundingRatePerBlock = calculateFundingRate(...args1);\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\n      }\n      const args2 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        minPoolMarginRatio,\n      ];\n      if (hasInvalidArgsValue(...args2)) {\n        liquidityUsed = '0';\n      } else {\n        liquidityUsed = calculateLiquidityUsed(...args2);\n      }\n      return {\n        price,\n        multiplier: multiplier.toString(),\n        fundingRate: fundingRate,\n        fundingRatePerBlock: fundingRatePerBlock,\n        tradersNetVolume: tradersNetVolume.toString(),\n        liquidity: liquidity.toString(),\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\n        liquidityUsed: liquidityUsed,\n        poolMarginRatio: minPoolMarginRatio.toString(),\n      };\n    } catch (err) {\n      console.log('PerpetualPool#gerFundingRate():', err);\n      throw err;\n    }\n  }\n\n  async depositMargin(accountAddress, amount) {\n    //await this.web3.eth.getAccounts(console.log)\n    console.log('depositMargin');\n    let res;\n    try {\n      let tx = await this._transactPool(\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [amount],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      console.log('here');\n      res = { success: false, error: err };\n    }\n    return res;\n  }\n  async _getBlockInfo(blockNumber) {\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    //toBlock = toBlock.number;\n    let amount;\n    if (this.chainId === '56') {\n      amount = 1999;\n    } else {\n      amount = 4999;\n    }\n    if (fromBlock + amount > to) {\n      amount = to - fromBlock;\n    }\n    while (fromBlock <= to) {\n      //console.log('tick')\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if (fromBlock + amount > to) {\n        amount = to - fromBlock;\n      }\n    }\n    return events;\n  }\n  async _getTimeStamp(blockNumber) {\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n}\n","import { Contract } from './contract';\nimport { bg, deriToNatural, MAX_VALUE } from '../utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_upgradedAddress\",\"type\":\"address\"}],\"name\":\"deprecate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deprecated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_evilUser\",\"type\":\"address\"}],\"name\":\"addBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradedAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_maker\",\"type\":\"address\"}],\"name\":\"getBlackListStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBasisPoints\",\"type\":\"uint256\"},{\"name\":\"newMaxFee\",\"type\":\"uint256\"}],\"name\":\"setParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basisPointsRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlackListed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_clearedUser\",\"type\":\"address\"}],\"name\":\"removeBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blackListedUser\",\"type\":\"address\"}],\"name\":\"destroyBlackFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"Deprecate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"feeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"maxFee\",\"type\":\"uint256\"}],\"name\":\"Params\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_blackListedUser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"DestroyedBlackFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AddedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"RemovedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}]\n/* eslint-enable */\n\nexport class BTokenContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\n    super(chainId, contractAddress, isProvider);\n    this.poolAddress = poolAddress;\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n\n  async isUnlocked(accountAddress) {\n    let allowance = await this._call('allowance', [\n      accountAddress,\n      this.poolAddress,\n    ]);\n    allowance = deriToNatural(allowance);\n    return allowance.gt(0);\n  }\n\n  async unlock(accountAddress) {\n    return await this._transact(\n      'approve',\n      [this.poolAddress, MAX_VALUE],\n      accountAddress\n    );\n  }\n\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n  async _balance(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balance(address) {\n    const [res, decimals] = await Promise.all([\n      this._balance(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n\n  // for slp pool use\n  // async balanceOf(poolAddress) {\n  //   //const res = await this._call('balanceOf', [poolAddress])\n  //   let result\n  //   const [res, decimals] = await Promise.all([\n  //     this._balance(this.poolAddress),\n  //     this.decimals(),\n  //   ])\n  //   result = bg(res, -decimals)\n  //   return result\n  // }\n}\n","import { deriToNatural, bg } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PTokenContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\n    super(chainId, contractAddress, isProvider);\n    this.poolAddress = poolAddress;\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n\n  async getPositionInfo(accountAddress) {\n    let result = {};\n    try {\n      const res = await this._call('getPosition(address)', [accountAddress]);\n      //console.log(\"getPositionInfo() raw:\", res)\n      result = {\n        volume: deriToNatural(res[0]),\n        cost: deriToNatural(res[1]),\n        lastCumuFundingRate: deriToNatural(res[2]),\n        margin: deriToNatural(res[3]),\n        lastUpdateTimestamp: bg(res[4]),\n      };\n    } catch (err) {\n      result = {\n        volume: bg(0),\n        cost: bg(0),\n        lastCumuFundingRate: bg(0),\n        margin: bg(0),\n        lastUpdateTimestamp: bg(0),\n      };\n      console.log(`getPositionInfo: ${err}`);\n    }\n    return result;\n  }\n\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n}\n","import { deriToNatural } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class LTokenContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\n    super(chainId, contractAddress, isProvider);\n    this.poolAddress = poolAddress;\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n\n  async balance(accountAddress) {\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\n    //console.log(\"> lToken balance\", res.toString())\n    return res;\n  }\n\n  async totalSupply() {\n    const res = deriToNatural(await this._call('totalSupply'));\n    //console.log(\"> lToken totalSupply\", res.toString())\n    return res;\n  }\n}\n","import Web3 from 'web3';\nimport { getDBProviderUrlsConfig } from '../config/database';\nimport { getAliveHttpServer, checkHttpServerIsAlive } from '../utils';\n\n/* eslint-disable */\nconst DB_CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseContract {\n  constructor(contractAddress, providerUrl) {\n    this.providerUrl = providerUrl;\n    this.contractAddress = contractAddress;\n    if (this.providerUrl) {\n      this._init();\n    }\n  }\n  _init() {\n    // only use 'bsc testnet' with chainId 97\n    this.web3 = new Web3(new Web3.providers.HttpProvider(this.providerUrl));\n    this.contract = new this.web3.eth.Contract(\n      DB_CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n\n  async updateProviderUrl() {\n    if (!this.providerUrl) {\n      this.providerUrl = await getAliveHttpServer(getDBProviderUrlsConfig());\n      this._init();\n    } else if (\n      this.providerUrl &&\n      !(await checkHttpServerIsAlive(this.providerUrl))\n    ) {\n      this.providerUrl = await getAliveHttpServer(getDBProviderUrlsConfig());\n      this._init();\n    }\n  }\n\n  async getValues(keyArray) {\n    let res\n    let retry = 3\n    while(retry > 0) {\n      try {\n        await this.updateProviderUrl();\n        res = await this.contract.methods.getValues(keyArray).call();\n      } catch (err) {\n        this.providerUrl = null\n      }\n      if (res) {\n        break\n      }\n      retry -= 1\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`database getValues(): exceed max retry 3.`)\n    }\n    return res\n  }\n}\n","import { getDBProviderUrlsConfig } from '../config/database';\nimport Web3 from 'web3';\nimport { getAliveHttpServer, checkHttpServerIsAlive } from '../utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseWormholeContract {\n  constructor(contractAddress, providerUrl) {\n    this.providerUrl = providerUrl;\n    this.contractAddress = contractAddress;\n    if (this.providerUrl) {\n      this._init();\n    }\n  }\n\n  async updateProviderUrl() {\n    if (!this.providerUrl) {\n      this.providerUrl = await getAliveHttpServer(getDBProviderUrlsConfig());\n      this._init();\n    } else if (\n      this.providerUrl &&\n      !(await checkHttpServerIsAlive(this.providerUrl))\n    ) {\n      this.providerUrl = await getAliveHttpServer(getDBProviderUrlsConfig());\n      this._init();\n    }\n  }\n\n  _init() {\n    // only use 'bsc testnet' with chainId 97\n    this.web3 = new Web3(new Web3.providers.HttpProvider(this.providerUrl));\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n\n  async signature(accountAddress) {\n    let res\n    let retry = 3\n    while(retry > 0) {\n      try {\n        await this.updateProviderUrl();\n        res = await this.contract.methods['signature'](accountAddress).call();\n      } catch (err) {\n        this.providerUrl = null\n      }\n      if (res) {\n        break\n      }\n      retry -= 1\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`database getValues(): exceed max retry 3.`)\n    }\n    return res\n  }\n}\n","import { getDBProviderUrlsConfig } from '../config/database';\nimport Web3 from 'web3';\nimport { getAliveHttpServer, checkHttpServerIsAlive } from '../utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseAirdropContract {\n  constructor(contractAddress, providerUrl) {\n    this.providerUrl = providerUrl;\n    this.contractAddress = contractAddress;\n    if (this.providerUrl) {\n      this._init();\n    }\n  }\n\n  _init() {\n    // only use 'bsc testnet' with chainId 97\n    this.web3 = new Web3(new Web3.providers.HttpProvider(this.providerUrl));\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n\n  async updateProviderUrl() {\n    if (!this.providerUrl) {\n      this.providerUrl = await getAliveHttpServer(getDBProviderUrlsConfig());\n      this._init();\n    } else if (\n      this.providerUrl &&\n      !(await checkHttpServerIsAlive(this.providerUrl))\n    ) {\n      this.providerUrl = await getAliveHttpServer(getDBProviderUrlsConfig());\n      this._init();\n    }\n  }\n\n  async getValues(keyArray) {\n    let res\n    let retry = 3\n    while(retry > 0) {\n      try {\n        await this.updateProviderUrl();\n        res = await this.contract.methods.getValues(keyArray).call();\n      } catch (err) {\n        this.providerUrl = null\n      }\n      if (res) {\n        break\n      }\n      retry -= 1\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`database getValues(): exceed max retry 3.`)\n    }\n    return res\n  }\n}\n","import Web3 from 'web3';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"\",\"deployedBytecode\":\"\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\n/* eslint-enable */\n\nexport class MiningVaultPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, isProvider);\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI['abi'],\n      this.contractAddress\n    );\n  }\n  async mintDToken(accountAddress, ...args) {\n    //return this._transact('claim', args)\n    // !this.accountAddress &&\n    //   console.log('please do setAccount(accountAddress) first');\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import Web3 from 'web3';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class MiningVaultRouter extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, isProvider);\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n  async mint(accountAddress, ...args) {\n    //console.log(accountAddress, args)\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    //console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    //console.log('txRaw', txRaw)\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class SlpPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, isProvider);\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    const res = await this._call('userInfo', [152, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class ClpPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, isProvider);\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('addLiquidity', args, accountAddress);\n  }\n\n  async removeLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('removeLiquidity', args, accountAddress);\n  }\n\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n    };\n  }\n\n  async getStateValues() {\n    const res = await this._call('getStateValues');\n    return {\n      liquidity: deriToNatural(res),\n    };\n  }\n\n  async getLiquidity() {\n    const res = await this._call('getStateValues');\n    if (res && res.liquidity) {\n      return deriToNatural(res.liquidity);\n    }\n    throw new Error(\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\n    );\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class Clp2Pool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, isProvider);\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    //console.log('hit clp2')\n    const res = await this._call('userInfo', [391, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}","import { deriToNatural, MAX_VALUE, bg } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DeriContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, useProvider) {\n    super(chainId, contractAddress, useProvider);\n    this.poolAddress = poolAddress;\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n\n  async isUnlocked(accountAddress) {\n    let allowance = await this._call('allowance', [\n      accountAddress,\n      this.poolAddress,\n    ]);\n    return deriToNatural(allowance).gt(0);\n  }\n  async unlock(accountAddress) {\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\n    return await this._transact(\n      'approve',\n      [this.poolAddress, MAX_VALUE],\n      accountAddress\n    );\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n\n  async _balance(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balance(address) {\n    const [res, decimals] = await Promise.all([\n      this._balance(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n}\n","import { getDeriContractAddress, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class WormholeContract extends Contract {\n  constructor(chainId, contractAddress, useProvider) {\n    super(chainId, contractAddress, useProvider);\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n  async freeze(accountAddress, amount, toChainId) {\n    const { wormholeAddress: toWormholeAddress } = getDeriContractAddress(\n      toChainId\n    );\n    return this._transact(\n      'freeze',\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\n      accountAddress\n    );\n  }\n\n  async mintDeri(\n    accountAddress,\n    amount,\n    fromChainId,\n    fromWormhole,\n    fromNonce,\n    v,\n    r,\n    s\n  ) {\n    return this._transact(\n      'claim',\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\n      accountAddress\n    );\n  }\n}\n","import { PerpetualPool } from '../contract/perpetual_pool';\nimport { BTokenContract } from '../contract/bToken';\nimport { PTokenContract } from '../contract/pToken';\nimport { LTokenContract } from '../contract/lToken';\nimport { DatabaseContract } from '../contract/database';\nimport { DatabaseWormholeContract } from '../contract/database_wormhole';\nimport { DatabaseAirdropContract } from '../contract/database_airdrop';\nimport { MiningVaultPool } from '../contract/mining_vault_pool';\nimport { MiningVaultRouter } from '../contract/mining_vault_router';\n\nimport { DeriEnv } from '../config/env';\nimport { getDBAddressConfig, getDBWormholeAddressConfig, getDBAirdropAddressConfig } from '../config';\nimport { SlpPool } from '../contract/slp_pool';\nimport { ClpPool } from '../contract/clp_pool';\nimport { Clp2Pool } from '../contract/clp2_pool';\nimport { DeriContract } from '../contract/deri';\nimport { WormholeContract } from '../contract/wormhole';\nimport { getLpContractAddress } from '../utils';\n// import { getPoolBaseSymbolList } from '../utils'\n\nexport const databaseFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAddressConfig(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseWormholeFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBWormholeAddressConfig(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseWormholeContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseAirdropFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAirdropAddressConfig(DeriEnv.get(), useProductionDB);\n    const key = address;\n    //console.log('---airdrop key', key)\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseAirdropContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const perpetualPoolFactory = (() => {\n  const perpetualPoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\n      return perpetualPoolInstanceMap[key];\n    }\n    const perpetualPool = new PerpetualPool(\n      chainId,\n      contractAddress,\n      isProvider\n    );\n    // console.log(\"new PerpetualPoolContract\");\n    perpetualPoolInstanceMap[key] = perpetualPool;\n    return perpetualPool;\n  };\n})();\n\nexport const bTokenFactory = (function () {\n  const bTokenInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\n    }\n    if (Object.keys(bTokenInstanceMap).includes(key)) {\n      return bTokenInstanceMap[key];\n    }\n    const bToken = new BTokenContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    // console.log(\"new BTokenContract\")\n    bTokenInstanceMap[key] = bToken;\n    return bToken;\n  };\n})();\n\nexport const pTokenFactory = (function () {\n  const pTokenInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\n    }\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\n      return pTokenInstanceMap[key];\n    }\n    const pToken = new PTokenContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    // console.log(\"new PTokenContract\")\n    pTokenInstanceMap[key] = pToken;\n    return pToken;\n  };\n})();\n\nexport const lTokenFactory = (function () {\n  const lTokenInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\n    }\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\n      return lTokenInstanceMap[key];\n    }\n    const lToken = new LTokenContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    // console.log(\"new LTokenContract\")\n    lTokenInstanceMap[key] = lToken;\n    return lToken;\n  };\n})();\n\nexport const miningVaultPoolFactory = (function () {\n  const mVaultInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(mVaultInstanceMap).includes(key)) {\n      return mVaultInstanceMap[key];\n    }\n    const mVault = new MiningVaultPool(chainId, contractAddress, isProvider);\n    // console.log(\"new MiningValutPool\")\n    mVaultInstanceMap[key] = mVault;\n    return mVault;\n  };\n})();\n\nexport const slpPoolFactory = (function () {\n  const slpPoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\n      return slpPoolInstanceMap[key];\n    }\n    const slpPool = new SlpPool(chainId, contractAddress, isProvider);\n    slpPoolInstanceMap[key] = slpPool;\n    return slpPool;\n  };\n})();\n\nexport const clpPoolFactory = (function () {\n  const clpPoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\n      return clpPoolInstanceMap[key];\n    }\n    const clpPool = new ClpPool(chainId, contractAddress, isProvider);\n    clpPoolInstanceMap[key] = clpPool;\n    return clpPool;\n  };\n})();\n\nexport const clp2PoolFactory = (function () {\n  const clp2PoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\n      return clp2PoolInstanceMap[key];\n    }\n    const clp2Pool = new Clp2Pool(chainId, contractAddress, isProvider);\n    clp2PoolInstanceMap[key] = clp2Pool;\n    return clp2Pool;\n  };\n})();\n\n// export const lpPoolFactory = (function () {\n//   const lpPoolInstanceMap = {};\n//   return (chainId, contractAddress, isProvider = false) => {\n//     let key;\n//     if (isProvider) {\n//       key = `${chainId}.${contractAddress}.isProvider`;\n//     } else {\n//       key = `${chainId}.${contractAddress}`;\n//     }\n//     if (Object.keys(lpPoolInstanceMap).includes(key)) {\n//       return lpPoolInstanceMap[key];\n//     } else {\n//       let lpPool;\n//       const { type } = getLpContractAddress(chainId, contractAddress);\n//       console.log(`lp type: ${type}`);\n//       if (type === 'slp') {\n//         lpPool = new SlpPool(chainId, contractAddress, isProvider);\n//       } else if (type === 'clp') {\n//         lpPool = new ClpPool(chainId, contractAddress, isProvider);\n//       }\n//       lpPoolInstanceMap[key] = lpPool;\n//       return lpPool;\n//     }\n//   };\n// })();\n\nexport const deriFactory = (function () {\n  const deriInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(deriInstanceMap).includes(key)) {\n      return deriInstanceMap[key];\n    }\n    const deri = new DeriContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    deriInstanceMap[key] = deri;\n    return deri;\n  };\n})();\n\nexport const wormholeFactory = (function () {\n  const wormholeInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(wormholeInstanceMap).includes(key)) {\n      return wormholeInstanceMap[key];\n    }\n    const wormhole = new WormholeContract(chainId, contractAddress, isProvider);\n    wormholeInstanceMap[key] = wormhole;\n    return wormhole;\n  };\n})();\n\nexport const miningVaultRouterFactory = (function () {\n  const mVaultInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(mVaultInstanceMap).includes(key)) {\n      return mVaultInstanceMap[key];\n    }\n    const mVault = new MiningVaultRouter(chainId, contractAddress, isProvider);\n    mVaultInstanceMap[key] = mVault;\n    return mVault;\n  };\n})();\n","// export const DERI_ENV=\"dev\"\nexport const DeriEnv = (() => {\n  let _deriEnv = 'dev';\n  return {\n    get: () => _deriEnv,\n    set: (value) => {\n      if (value === 'dev' || value === 'prod' || value === 'production') {\n        _deriEnv = value;\n      } else {\n        throw new Error(\"please use 'dev' or 'prod' for DeriEnv\");\n      }\n    },\n  };\n})();\n"],"sourceRoot":""}