{"version":3,"sources":["lib/web3js/factory/web3.js","utils/LoadableComponent.js","lib/web3js/v2/config/chain.js","lib/web3js/v2/config/contract.js","lib/web3js/config/chain.js","lib/web3js/config/contract.js","lib/web3js/config/rest_server.js","lib/web3js/utils.js","lib/web3js/v2/utils/convert.js","lib/web3js/v2/utils/network.js","lib/web3js/v2/utils/validate.js","lib/web3js/v2/utils/chain.js","lib/web3js/v2/utils/oracle.js","lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/factory.js","lib/web3js/v2/contract/contract_base.js","lib/web3js/v2/contract/abis.js","lib/web3js/v2/contract/perpetual_pool.js","lib/web3js/v2/contract/perpetual_pool_router.js","lib/web3js/v2/contract/b_token.js","lib/web3js/v2/contract/l_token.js","lib/web3js/v2/contract/p_token.js","lib/web3js/v2/api/mining_query_api.js","lib/web3js/v2/api/mining_transaction_api.js","lib/web3js/v2/api/api_globals.js","lib/web3js/v2/api/trade_query_api.js","lib/web3js/v2/api/trade_history_api.js","lib/web3js/v2/api/trade_transaction_api.js","lib/web3js/api/walletApi.js","lib/web3js/api/lpPoolApi.js","model/Config.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js","lib/web3js/calculation/fundingRate.js","lib/web3js/calculation/index.js","lib/web3js/api/databaseApi.js","lib/web3js/api/tradeHistoryApi.js","lib/web3js/api/restApi.js","lib/web3js/api/contractTransactionApi.js","lib/web3js/indexV2.js","lib/web3js/api/contractTransactionApiV2.js","lib/web3js/api/apiGlobals.js","lib/web3js/api/contractQueryApi.js","lib/polyfill/numberPolyfill.js","App.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Trading.js","model/Version.js","index.js","lib/web3js/config/database.js","utils/utils.js","lib/web3js/api/slpPoolApi.js","lib/web3js/api/clp2PoolApi.js","lib/web3js/api/clpPoolApi.js","lib/web3js/contract/contract.js","lib/web3js/contract/perpetual_pool.js","lib/web3js/contract/bToken.js","lib/web3js/contract/pToken.js","lib/web3js/contract/lToken.js","lib/web3js/contract/database.js","lib/web3js/contract/database_wormhole.js","lib/web3js/contract/database_airdrop.js","lib/web3js/contract/mining_vault_pool.js","lib/web3js/contract/mining_vault_router.js","lib/web3js/contract/slp_pool.js","lib/web3js/contract/clp_pool.js","lib/web3js/contract/clp2_pool.js","lib/web3js/contract/deri.js","lib/web3js/contract/wormhole.js","lib/web3js/factory/contracts.js","lib/web3js/config/env.js"],"names":["metaMaskWeb3","web3Instance","web3","undefined","window","ethereum","Error","Web3","web3Factory","web3InstanceMap","chainId","a","Object","keys","includes","console","log","getChainProviderUrl","providerUrl","providers","HttpProvider","LoadingPage","NProgress","start","done","React","Component","LoadableComponent","component","Loadable","loader","loading","getChainProviderUrls","res","provider_urls","filter","i","length","getAnnualBlockNumberConfig","1","56","128","3","97","256","getPoolConfigList","env","pool","pToken","lToken","router","bToken","bTokenId","initialBlock","bTokenSymbol","symbol","symbolId","unit","version","getFilteredPoolConfigList","poolAddress","toString","poolConfigList","DeriEnv","get","check","getPoolConfig","ChainProviderUrls","getChainProviderUrlsConfig","getContractAddressConfig","dToken","MiningVault","getSlpContractAddressConfig","getClpContractAddressConfig","getClp2ContractAddressConfig","getLpContractAddressConfig","type","getMiningVaultRouterContractAddress","filteredConfig","MiningVaultRouter","getDeriContractAddressConfig","Deri","Wormhole","getRestServerConfig","getRedisWorkerQueneConfig","BigNumber","config","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","bg","value","base","times","repeat","div","max","value1","value2","gte","min","lte","toChecksumAddress","utils","hexToString","hexToUtf8","hexToNumber","hexToNumberString","naturalToDeri","toFixed","naturalWithPercentage","sd","deriToNatural","deriToString","deriToBool","toNumber","hasInvalidArgsValue","args","some","isNaN","checkHttpServerIsAlive","url","fetch","ok","getAliveHttpServer","urls","MAX_VALUE","getNetworkName","poolNetwork","normalizeChainId","getPoolContractAddress","c","p","bTokenAddress","pTokenAddress","lTokenAddress","dTokenAdress","MinningVaultAddress","getMiningVaultContractAddress","pools","getAnnualBlockNumber","blockNumbers","parseInt","getSlpContractAddress","getClp2ContractAddress","getClpContractAddress","getLpContractAddress","getDeriContractAddress","deriAddress","wormholeAddress","getOracleUrl","addSymbolParam","getOracleInfo","retry","mode","json","getBTCUSDPrice","responseJson","price","format","bigNumber","toFormat","replaceAll","numberToHex","validateArgs","every","parseFloat","getOraclePrice","calculateEntryPrice","volume","cost","multiplier","eq","calculateLiquidationPrice","margin","minMaintenanceMarginRatio","tmp","minus","gt","plus","isOrderValid","marginHeld","liquidity","liquidityUsed","minMargin","success","error","calculateFundingRate","tradersNetVolume","fundingRateCoefficient","processFundingRate","fundingRate","annualBlockCount","getOrSet","perpetualPoolFactory","instanceMap","address","useInfura","key","PerpetualPool","perpetualPoolRouterFactory","PerpetualPoolRouter","bTokenFactory","BToken","lTokenFactory","LToken","pTokenFactory","PToken","MAX_GAS_AMOUNT","ContractBase","contractAddress","this","method","_init","contract","methods","call","accountAddress","gas","estimateGas","from","tx","self","_transactionReceipt","resolve","reject","eth","getTransactionReceipt","receipt","setTimeout","status","errorMessage","_estimatedGas","txRaw","to","data","encodeABI","request","params","Promise","_getTransactionReceipt","perpetualPoolAbi","perpetualPoolRouterAbi","bTokenAbi","lTokenAbi","pTokenAbi","contractAbi","bTokenLength","symbolLength","routerAddress","protocolFeeCollector","protocolFeeAccrued","Contract","all","getLengths","getAddresses","getParameters","_call","decimals0","minBToken0Ratio","minPoolMarginRatio","minInitialMarginRatio","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","protocolFeeCollectRatio","swapperAddress","oracleAddress","decimals","discount","pnl","cumulativePnl","feeRatio","cumulativeFundingRate","tradersNetCost","blockNumber","getBlock","abs","eventName","fromBlock","events","amount","getPastEvents","toBlock","es","e","push","_transact","priceInfos","_balanceOf","allowance","processAsset","lastCumulativePnl","Array","isArray","map","processPosition","lastCumulativeFundingRate","getLiquidityInfo","perpetualPool","getBToken","getAsset","bTokenInfo","lTokenAsset","poolLiquidity","shares","maxRemovableShares","hares","getPoolLiquidity","db","databaseFactory","getValues","catch","err","addLiquidityWithPrices","symbolList","perpetualPoolRouter","promises","s","prices","index","timestamp","v","r","transaction","removeLiquidityWithPrices","priceCache","_prices","split","update","set","val","Date","now","fundingRateCache","resourceMap","resource","getSpecification","getSymbol","symbolInfo","parameterInfo","bSymbol","getPositionInfo","bTokenConfigList","symbolConfigList","bTokenIdList","symbolIdList","getPosition","getMargins","getPositions","positionInfo","margins","positions","internalPrice","bTokens","reduce","accum","symbols","marginHeldBySymbol","unrealizedPnl","costTotal","averageEntryPrice","liquidationPrice","getWalletBalance","balanceOf","balance","isUnlocked","getEstimatedFee","cache","_getFundingRate","getEstimatedMargin","leverage","getFundingRateCache","poolconfigList","promiseList","bTokenInfoList","fundingRatePerBlock","liquidityUsedInAmount","getFundingRate","fundingRate0","getEstimatedFundingRate","newNetVolume","fundingRate1","getLiquidityUsed","liquidityUsed0","getEstimatedLiquidityUsed","liquidityUsed1","getPoolBTokensBySymbolId","bTokensConfigList","symbolsConfigList","bTokenList","resultList","walletBalance","availableBalance","fetchJson","resp","processTradeEvent","info","txHash","tradeVolume","_getTimeStamp","timeStamp","direction","time","transactionFee","_calculateFee","notional","transactionHash","getTradeHistoryOnline","_getBlockInfo","filters","owner","_getPastEvents","number","result","returnValues","item","unshift","getTradeHistory","tradeHistory","tradeFromBlock","tradeHistoryBlock","trim","tradeHistoryOnline","concat","sort","b","unlock","depositMarginWithPrices","addMarginWithPrices","withdrawMarginWithPrices","removeMarginWithPrices","tradeWithMarginWithPrices","newVolume","orderValidation","tradeWithPrices","closePositionWithPrices","negated","connectWallet","handleChainChanged","handleAccountChanged","accounts","account","on","location","reload","getUserWalletBalance","walletAddress","getBalance","fromWei","getLpLiquidityInfo","getSlpLiquidityInfo","getClpLiquidityInfo","getClp2LiquidityInfo","addLpLiquidity","addSlpLiquidity","addClpLiquidity","addClp2Liquidity","removeLpLiquidity","removeSlpLiquidity","removeClpLiquidity","removeClp2Liquidity","isLpUnlocked","isSlpUnlocked","isClpUnlocked","isClp2Unlocked","unlockLp","unlockSlp","unlockClp","unlockClp2","getLpWalletBalance","getSlpWalletBalance","getClpWalletBalance","getClp2WalletBalance","Config","makeObservable","observable","setAll","action","current","configs","isV2","total","cur","findIndex","getContractAddressConfig2","require","getPoolConfigListV2","getLiquidityInfo2","getLiquidityInfoV2","getPoolLiquidity2","getPoolLiquidityV2","addLiquidity","addLiquidity2","addLiquidityV2","removeLiquidity","removeLiquidity2","removeLiquidityV2","getSpecification2","getSpecificationV2","getPositionInfo2","getPositionInfoV2","getWalletBalance2","getWalletBalanceV2","isUnlocked2","isUnlockedV2","getEstimatedFee2","getEstimatedFeeV2","getFundingRate2","getFundingRateV2","getEstimatedFundingRate2","getEstimatedFundingRateV2","getLiquidityUsed2","getLiquidityUsedV2","getEstimatedLiquidityUsed2","getEstimatedLiquidityUsedV2","unlock2","unlockV2","depositMargin","depositMargin2","depositMarginV2","withdrawMargin","withdrawMargin2","withdrawMarginV2","tradeWithMargin","tradeWithMargin2","tradeWithMarginV2","closePosition","closePosition2","closePositionV2","getTradeHistory2","getTradeHistoryV2","calculateLiquidityUsed","poolMarginRatio","calculateShareValue","lTokenTotalSupply","calculateMaxRemovableShares","lTokenBalance","shareValue","removable","calculateMarginHeld","calculatePnl","calculateMaxWithdrawMargin","held","poolMaxVolume","message","getUserInfo","userAddress","deadline","nonce","valid","getUserInfoHarvest","harvestLp","harvestTrade","lp","trade","getUserInfoTotal","getUserInfoAll","userInfo","userInfoHarvest","userInfoTotal","assign","getPoolInfoApy","apy","volume1h","volume24h","getLpPoolInfoApy","apy2","getUserInfoInPool","getUserInfoAllForAirDrop","databaseAirdropFactory","v1","r1","s1","v2","r2","s2","baseToken","processLiquidateEvent","national","getLiquidateHistoryOnline","getHttpBase","getFundingRateCache2","liquidateFromBlock","liquidateHistoryBlock","liquidateHistoryOnline","pPool","maxWithdrawMargin","_transactPool","totalSupply","getStateValues","mintDToken","miningVaultAddress","miningVault","miningVaultPoolFactory","wsOnPromise","ws","event","JSON","parse","sendTradeTxToWorkerQuene","methodCall","wsInstance","send","res2","addSlpLiquidity2","removeSlpLiquidity2","addClpLiquidity2","removeClpLiquidity2","addClp2Liquidity2","removeClp2Liquidity2","_accountAddress","_price","_interval","_update","setInterval","clear","clearInterval","PerpetualPoolParametersCache","_parameters","_ws","io","transports","path","id","parameters","Number","prototype","len","RangeError","Math","pow","round","numberArr","padNum","intNum","deciNum","lastNum","substr","changedInt","replace","num","dotPos","indexOf","need","j","DesktopApp","MobileApp","App","isBrowser","isMobile","Wallet","detail","isConnected","connect","loadWalletBalance","wallet","formatBalance","chainInfo","supported","setDetail","makeAutoObservable","supportV2","computed","supportChain","eqInNumber","Oracle","timeType","kData","paused","listeners","already","setIndex","initWebSocket","WebSocket","withCredentials","emit","obj","toUpperCase","low","high","open","close","time_type","unsubscribeBars","setSymbol","setTimeType","listener","callback","history","el","setPause","Position","spec","position","interval","load","setInfo","History","Trading","userSelectedDirection","setWallet","setConfigs","setConfig","setContract","setPosition","setVolume","setUserSelectedDirection","setFundingRate","setHistory","fundingRateTip","volumeDisplay","isShareOtherSymbolMargin","configInfo","oracle","contractInfo","historyInfo","defaultConfig","getDefaultConfig","find","loadByConfig","changed","isV1","pause","store","resume","symbolChanged","addListener","loadFundingRate","fromStore","getFromStore","pos","storeConfig","getConfigFromStore","setPaused","curVolume","originVolume","contractValue","dynBalance","totalMargin","available","exchanged","isZero","versionKey","Version","setCurrent","versionFromSession","sessionStorage","getItem","notSave","setItem","trading","ReactDOM","render","StrictMode","document","getElementById","getDBProviderUrlsConfig","getDBAddressConfig","useProductionDB","getDBWormholeAddressConfig","getDBAirdropAddressConfig","formatAddress","str1","str2","isLP","isSushiLP","isCakeLP","sessionStorageKey","stringify","slpPool","slpPoolFactory","getLiquidity","bTokenBalance","clp2Pool","clp2PoolFactory","clpPool","clpPoolFactory","isProvider","getGasPrice","POOL_ABI","defaultValue","cumuFundingRate","cumuFundingRateBlock","minAddLiquidity","redemptionFeeRatio","priceDelayAllowance","signed","gasPrice","args1","args2","CONTRACT_ABI","BTokenContract","_balance","PTokenContract","lastCumuFundingRate","lastUpdateTimestamp","LTokenContract","DB_CONTRACT_ABI","DatabaseContract","keyArray","updateProviderUrl","DatabaseWormholeContract","DatabaseAirdropContract","MiningVaultPool","SlpPool","ClpPool","Clp2Pool","DeriContract","useProvider","WormholeContract","toChainId","toWormholeAddress","fromChainId","fromWormhole","fromNonce","databaseInstanceMap","database","databaseWormholeFactory","perpetualPoolInstanceMap","bTokenInstanceMap","pTokenInstanceMap","lTokenInstanceMap","mVaultInstanceMap","mVault","slpPoolInstanceMap","clpPoolInstanceMap","clp2PoolInstanceMap","deriFactory","deriInstanceMap","deri","wormholeFactory","wormholeInstanceMap","wormhole","miningVaultRouterFactory","_deriEnv"],"mappings":"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","file":"static/js/main.10556d1f.chunk.js","sourcesContent":["import Web3 from 'web3';\nimport { getChainProviderUrl } from '../utils';\n\nexport const metaMaskWeb3 = (function () {\n  let web3Instance = null;\n  return () => {\n    if (web3Instance !== null) {\n      return web3Instance;\n    }\n    let web3;\n    if (typeof window.ethereum !== undefined) {\n      web3 = new Web3(window.ethereum);\n    } else {\n      // console.log(\"Please install MetaMask first\")\n      throw new Error('Please install MetaMask first');\n    }\n    web3Instance = web3;\n    return web3;\n  };\n})();\n\nexport const web3Factory = (function () {\n  const web3InstanceMap = {};\n  return async(chainId) => {\n    if (Object.keys(web3InstanceMap).includes(chainId)) {\n      return web3InstanceMap[chainId];\n    }\n    console.log(\n      `==== web3Factory(${chainId}), please caution the access limits ===`\n    );\n    const providerUrl = await getChainProviderUrl(chainId);\n    const web3 = new Web3(new Web3.providers.HttpProvider(providerUrl));\n    web3InstanceMap[chainId] = web3;\n    return web3;\n  };\n})();\n","import React from 'react'\nimport Loadable from 'react-loadable'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\n\nclass LoadingPage extends React.Component {\n  //类似github页面加载的那个加载条\n  componentWillMount(){\n    NProgress.start()\n  }\n  componentWillUnmount(){\n    NProgress.done()\n  }\n  render () {\n    return (\n      <div/>\n    )\n  }\n}\n\nconst LoadableComponent = (component) => {\n  return Loadable({\n    loader: component,\n    loading: ()=><LoadingPage/>\n  })\n}\n\nexport default LoadableComponent","export const getChainProviderUrls = (chainId) => {\n  const chainProviderUrls = [\n    {\n      provider_urls: [\n        \"https://mainnet.infura.io/v3/d0e6582644a845ee8d7c3c18683fec06\",\n      ],\n      chainId: '1',\n    },\n    {\n      provider_urls: [\n        'https://bsc-dataseed.binance.org',\n        'https://bsc-dataseed1.defibit.io/',\n        'https://bsc-dataseed1.ninicoin.io/',\n      ],\n      chainId: '56',\n    },\n    {\n      provider_urls: ['https://http-mainnet.hecochain.com'],\n      chainId: '128',\n    },\n    {\n      provider_urls: [\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '3',\n    },\n    {\n      provider_urls: [\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '42',\n    },\n    {\n      provider_urls: [\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\n      ],\n      chainId: '97',\n    },\n    {\n      provider_urls: ['https://http-testnet.hecochain.com'],\n      chainId: '256',\n    },\n  ];\n  \n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\n  //console.log('res',res)\n  if (res.length > 0) {\n    return res[0].provider_urls\n  } else {\n    throw new Error(`getChainProviderUrls: no urls for chainId ${chainId}`)\n  }\n}\n\nexport const getAnnualBlockNumberConfig = () => {\n  return {\n    1: '2367422',\n    56: '10497304',\n    128: '10511369',\n    3: '2367422',\n    97: '10497304',\n    256: '10511369',\n  };\n};\n","import { DeriEnv } from \"../../config\";\n\nexport const getPoolConfigList = (env = 'dev') => {\n  if (env === 'prod') {\n    return [];\n  } else {\n    return [\n      {\n        pool: '0x19EC6281749C06Ed9647134c57257AcA1508bFA8',\n        pToken: '0x5a08BB6a3C0a20471def9e79B27117ebBEdAf0a7',\n        lToken: '0x7743d650D312843C5d34cD860001E64b0C114b19',\n        router: '0x1061b8457A036b4A23C8C2346cC62C701e35E2c4',\n        bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\n        bTokenId: '0',\n        initialBlock: '',\n        bTokenSymbol: 'BUSD',\n        symbol: 'BTCUSD',\n        symbolId: '0',\n        unit: 'BTC',\n        chainId: '97',\n        version: 'v2',\n      },\n      {\n        pool: '0x19EC6281749C06Ed9647134c57257AcA1508bFA8',\n        pToken: '0x5a08BB6a3C0a20471def9e79B27117ebBEdAf0a7',\n        lToken: '0x7743d650D312843C5d34cD860001E64b0C114b19',\n        router: '0x1061b8457A036b4A23C8C2346cC62C701e35E2c4',\n        bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\n        bTokenId: '0',\n        initialBlock: '',\n        bTokenSymbol: 'BUSD',\n        symbol: 'ETHUSD',\n        symbolId: '1',\n        unit: 'ETH',\n        chainId: '97',\n        version: 'v2',\n      },\n      {\n        pool: '0x19EC6281749C06Ed9647134c57257AcA1508bFA8',\n        pToken: '0x5a08BB6a3C0a20471def9e79B27117ebBEdAf0a7',\n        lToken: '0x7743d650D312843C5d34cD860001E64b0C114b19',\n        router: '0x1061b8457A036b4A23C8C2346cC62C701e35E2c4',\n        bToken: '0x5f59b256e411CB222D1790a08De492f4b6dA6E62',\n        bTokenId: '1',\n        initialBlock: '',\n        bTokenSymbol: 'BETH',\n        symbol: 'BTCUSD',\n        symbolId: '0',\n        unit: 'BTC',\n        chainId: '97',\n        version: 'v2',\n      },\n      {\n        pool: '0x19EC6281749C06Ed9647134c57257AcA1508bFA8',\n        pToken: '0x5a08BB6a3C0a20471def9e79B27117ebBEdAf0a7',\n        lToken: '0x7743d650D312843C5d34cD860001E64b0C114b19',\n        router: '0x1061b8457A036b4A23C8C2346cC62C701e35E2c4',\n        bToken: '0x5f59b256e411CB222D1790a08De492f4b6dA6E62',\n        bTokenId: '1',\n        initialBlock: '',\n        bTokenSymbol: 'BETH',\n        symbol: 'ETHUSD',\n        symbolId: '1',\n        unit: 'ETH',\n        chainId: '97',\n        version: 'v2',\n      },\n      {\n        pool: '0x19EC6281749C06Ed9647134c57257AcA1508bFA8',\n        pToken: '0x5a08BB6a3C0a20471def9e79B27117ebBEdAf0a7',\n        lToken: '0x7743d650D312843C5d34cD860001E64b0C114b19',\n        router: '0x1061b8457A036b4A23C8C2346cC62C701e35E2c4',\n        bToken: '0xd2F37BADdB702FF778aA038C63b7068054d93508',\n        bTokenId: '2',\n        initialBlock: '',\n        bTokenSymbol: 'AUTO',\n        symbol: 'BTCUSD',\n        symbolId: '0',\n        unit: 'BTC',\n        chainId: '97',\n        version: 'v2',\n      },\n      {\n        pool: '0x19EC6281749C06Ed9647134c57257AcA1508bFA8',\n        pToken: '0x5a08BB6a3C0a20471def9e79B27117ebBEdAf0a7',\n        lToken: '0x7743d650D312843C5d34cD860001E64b0C114b19',\n        router: '0x1061b8457A036b4A23C8C2346cC62C701e35E2c4',\n        bToken: '0xd2F37BADdB702FF778aA038C63b7068054d93508',\n        bTokenId: '2',\n        initialBlock: '',\n        bTokenSymbol: 'AUTO',\n        symbol: 'ETHUSD',\n        symbolId: '1',\n        unit: 'ETH',\n        chainId: '97',\n        version: 'v2',\n      },\n    ];\n  }\n};\n\nexport const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId) => {\n  bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\n  symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\n  const poolConfigList = getPoolConfigList(DeriEnv.get())\n  const check = bTokenId != null\n    ? symbolId != null\n      ? (i) =>\n          i.pool === poolAddress &&\n          i.bTokenId === bTokenId &&\n          i.symbolId === symbolId\n      : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\n    : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\n  if (poolConfigList.length > 0) {\n    const res = poolConfigList.filter(check)\n    if (res && res.length > 0) {\n      return res\n    }\n  }\n  throw new Error(`Cannot find the pool config by poolAddress(${poolAddress}) bTokenId(${bTokenId}) and symbolId(${symbolId})`)\n}\n\nexport const getPoolConfig = (poolAddress, bTokenId, symbolId) => {\n  const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId)\n  return res[0]\n}","export const ChainProviderUrls = [\n  {\n    provider_urls: [\n      'https://mainnet.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n    ],\n    chainId: '1',\n  },\n  {\n    provider_urls: [\n      'https://bsc-dataseed.binance.org',\n      'https://bsc-dataseed1.defibit.io/',\n      'https://bsc-dataseed1.ninicoin.io/',\n    ],\n    chainId: '56',\n  },\n  {\n    provider_urls: ['https://http-mainnet.hecochain.com'],\n    chainId: '128',\n  },\n  {\n    provider_urls: [\n      'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n    ],\n    chainId: '3',\n  },\n  {\n    provider_urls: [\n      'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n    ],\n    chainId: '42',\n  },\n  {\n    provider_urls: [\n      'https://data-seed-prebsc-2-s3.binance.org:8545/',\n      'https://data-seed-prebsc-1-s1.binance.org:8545/',\n      'https://data-seed-prebsc-2-s1.binance.org:8545/',\n      'https://data-seed-prebsc-1-s2.binance.org:8545/',\n      'https://data-seed-prebsc-2-s2.binance.org:8545/',\n      'https://data-seed-prebsc-1-s3.binance.org:8545/',\n    ],\n    chainId: '97',\n  },\n  {\n    provider_urls: ['https://http-testnet.hecochain.com'],\n    chainId: '256',\n  },\n];\n\nexport const getChainProviderUrlsConfig = (chainId) => {\n  const chainProviderUrls = [\n    {\n      provider_urls: [\n        'https://mainnet.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '1',\n    },\n    {\n      provider_urls: [\n        'https://bsc-dataseed.binance.org',\n        'https://bsc-dataseed1.defibit.io/',\n        'https://bsc-dataseed1.ninicoin.io/',\n      ],\n      chainId: '56',\n    },\n    {\n      provider_urls: ['https://http-mainnet.hecochain.com'],\n      chainId: '128',\n    },\n    {\n      provider_urls: [\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '3',\n    },\n    {\n      provider_urls: [\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '42',\n    },\n    {\n      provider_urls: [\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\n      ],\n      chainId: '97',\n    },\n    {\n      provider_urls: ['https://http-testnet.hecochain.com'],\n      chainId: '256',\n    },\n  ];\n  \n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\n  //console.log('res',res)\n  if (res.length > 0) {\n    return res[0].provider_urls\n  } else {\n    throw new Error(`getChainProviderUrlsConfig: no urls for chainId ${chainId}`)\n  }\n}\n","/** @module config */\n\n/**\n * Get the contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].pool - pool address\n * @returns {string} response[].bToken - base token address\n * @returns {string} response[].pToken - position token address\n * @returns {string} response[].lToken - liquidity token address\n * @returns {string} response[].initialBlock - initial block of the pool\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].symbol - symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getContractAddressConfig = (env = 'dev') => {\n  // production environment\n  if (env === 'prod') {\n    // console.log('!!! production !!!')\n    return [\n      {\n        pool: '0x639a9C2fAe976D089dCcc2ffAE51Ef1dd04B7985',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '5288684',\n        bTokenSymbol: 'BUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '56',\n        version: 'v1',\n      },\n      {\n        pool: '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '6753399',\n        bTokenSymbol: 'BUSD',\n        symbol: 'COIN',\n        unit: 'COIN',\n        chainId: '56',\n        version: 'v1',\n      },\n      {\n        pool: '0x919F97417857781f754e00CCCD9100f78B759818',\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '7475766',\n        bTokenSymbol: 'DERI',\n        symbol: 'iMEME',\n        unit: 'iMEME',\n        chainId: '56',\n        version: 'v1',\n      },\n      {\n        pool: '0x3C2970466635AAeFEd1cfe630D051Fa6D281aEbB',\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '11949433',\n        bTokenSymbol: 'USDT',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        version: 'v1',\n      },\n      {\n        pool: '0x7137cc9f252dc405dadc35F597dA8B32e8653603',\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '11860070',\n        bTokenSymbol: 'BAC',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        version: 'v1',\n      },\n      {\n        pool: '0x9b404BAB12CE0D5039e7313d9e24f4b5c8E8E8e3',\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        initialBlock: '2557914',\n        bTokenSymbol: 'HUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '128',\n        version: 'v1',\n      },\n    ];\n  }\n  // develop environment\n  // console.log('-- test ---')\n  return [\n    {\n      pool: '0x67eE8f0CB17e750219Bd58d433D52ab4B3d8A081',\n      bToken: '0x8F038C454B6E68B2988706a1a5f78dE2C4634097',\n      pToken: '0xad794Adc3Ed6085A79Ba3e2FCD13Df8d33d462Ec',\n      lToken: '0x37732230ac101f59490762Ef73Be43B5E5Ec4949',\n      initialBlock: '9986356',\n      bTokenSymbol: 'USDT',\n      symbol: 'BTCUSD',\n      unit: 'BTC',\n      chainId: '3',\n      version: 'v1',\n    },\n    {\n      pool: '0xFFe402106E8F73F0A44C7350C2b734e048f448f2',\n      bToken: '0xa0354a4bB59657ad9A2b3eeC4f53f7A6Fb171DD1',\n      pToken: '0x5FeF67FD24f37b90E0c96324380F63413dF22f78',\n      lToken: '0xCdDbf76F76B9F95135F5D531fefc344258ff322a',\n      initialBlock: '7796681',\n      bTokenSymbol: 'BUSD',\n      symbol: 'BTCUSD',\n      unit: 'BTC',\n      chainId: '97',\n      version: 'v1',\n    },\n    {\n      pool: '0x02A614844212f71049c469902F7A20F6540a2792',\n      bToken: '0xa0354a4bB59657ad9A2b3eeC4f53f7A6Fb171DD1',\n      pToken: '0x4396025914025F1C8B74788bF7c64f879064FbA6',\n      lToken: '0x2E80928a9eC105FE79cfC4B54c65d185AC3b7E9C',\n      initialBlock: '8108552',\n      bTokenSymbol: 'BUSD',\n      symbol: 'COIN',\n      unit: 'COIN',\n      chainId: '97',\n      version: 'v1',\n    },\n    {\n      pool: '0xE5a4fCd3CE3a824bF15D5FABd390cF44E83AbE8B',\n      bToken: '0x02c9840fD044abFd58E9674ecc232e8b1F323fE8',\n      pToken: '0xfa803C4528A1b9f91DFc5f8b4ff940f9FE4F4635',\n      lToken: '0xbD57300A178075F774b5F0F9f367B9A2912b7b5e',\n      initialBlock: '3663327',\n      bTokenSymbol: 'HUSD',\n      symbol: 'BTCUSD',\n      unit: 'BTC',\n      chainId: '256',\n      version: 'v1',\n    },\n  ];\n};\n\n/**\n * Get the Slp contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].pool - pool address\n * @returns {string} response[].bToken - base token address\n * @returns {string} response[].pToken - position token address\n * @returns {string} response[].lToken - liquidity token address\n * @returns {string} response[].initialBlock - initial block of the pool\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].symbol - symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getSlpContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        bTokenSymbol: 'DERI-USDT SLP',\n        symbol: '--',\n      },\n    ];\n  }\n  console.log('getSlpContractAddressConfig(): no config for dev environment');\n  return [];\n};\n\n/**\n * Get the Clp contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].pool - pool address\n * @returns {string} response[].bToken - base token address\n * @returns {string} response[].lToken - liquidity token address\n * @returns {string} response[].initialBlock - initial block of the pool\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getClpContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool: '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '6894880',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP',\n        symbol: '--',\n      },\n    ];\n  } else {\n    return [\n    ];\n  }\n};\nexport const getClp2ContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '699498',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP ONSEN',\n        symbol: '--',\n      }\n    ]\n  } else {\n    return []\n  }\n}\n\nexport const getLpContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        bTokenSymbol: 'DERI-USDT SLP',\n        symbol: '--',\n        type: 'slp',\n      },\n      {\n        pool: '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '6894880',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP',\n        symbol: '--',\n        type: 'clp',\n      },\n      {\n        pool: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '699498',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP ONSEN',\n        symbol: '--',\n        type: 'clp2',\n      },\n    ];\n  } else {\n    return [\n    ];\n  }\n};\n\nexport const getMiningVaultRouterContractAddress= (chainId) => {\n  const configs = [\n      {\n        MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\n        chainId: '56'\n      }\n    ]\n  const filteredConfig = configs.filter((i) => i.chainId === chainId)\n  if (filteredConfig.length > 0) {\n    return filteredConfig[0].MiningVaultRouter\n  } else {\n    throw new Error(`getMiningVaultRouterAddressConfig: no address for chainId ${chainId}`)\n  }\n\n}\n\n/**\n * Get the Deri contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].Deri - deri address\n * @returns {string} response[].Wormhole - wormhole token address\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getDeriContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\n        bTokenSymbol: 'DERI',\n        chainId: '1',\n      },\n      {\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\n        bTokenSymbol: 'DERI',\n        chainId: '56',\n      },\n      {\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\n        bTokenSymbol: 'DERI',\n        chainId: '128',\n      },\n    ];\n  }\n  return [\n    {\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\n      bTokenSymbol: 'DERI',\n      chainId: '3',\n    },\n    {\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\n      bTokenSymbol: 'DERI',\n      chainId: '97',\n    },\n    {\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\n      bTokenSymbol: 'DERI',\n      chainId: '256',\n    },\n  ];\n};\n\nexport const getAnnualBlockNumberConfig = () => ({\n  1: '2367422',\n  56: '10497304',\n  128: '10511369',\n  3: '2367422',\n  97: '10497304',\n  256: '10511369',\n});\n","/**\n * Get REST server config\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {string} server url\n */\nexport const getRestServerConfig = (env = 'dev') => {\n  if (env === 'prod' || env === 'production') {\n    // for production\n    return 'https://api.deri.finance';\n  } else {\n    // for test\n    //return 'https://apitest.deri.finance';\n    //return 'http://localhost:8082';\n    return 'https://alphaapi.deri.finance';\n  }\n};\n\nexport const getRedisWorkerQueneConfig = (env = \"dev\") => {\n  if (env === \"prod\") {\n    return ['trade_tx_quene', 'trade_worker_group']\n  } else {\n    return ['trade_tx_quene_dev', 'trade_worker_group_dev']\n  }\n};\n","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\nimport {\n  DeriEnv,\n  getChainProviderUrlsConfig,\n  getContractAddressConfig,\n  getSlpContractAddressConfig,\n  getClpContractAddressConfig,\n  getClp2ContractAddressConfig,\n  getLpContractAddressConfig,\n  getAnnualBlockNumberConfig,\n  getDeriContractAddressConfig,\n} from './config';\n\n/** @module utils */\n\nBigNumber.config({\n  DECIMAL_PLACES: 18,\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n  EXPONENTIAL_AT: 256,\n});\n\nexport { BigNumber };\n\n/**\n * Change the value to BigNumber type\n * @func\n * @param {string|number} value - the number that need to changed to BigNumber type\n * @param {string} base - base of the number\n * @returns {BigNumber}\n */\nexport const bg = (value, base = 0) => {\n  if (base === 0) {\n    return BigNumber(value);\n  }\n  if (base > 0) {\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\n  }\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\n};\n\n/**\n * Get the max value\n * @func\n * @param {BigNumber} value1\n * @param {BigNumber} value2\n * @returns {BigNumber}\n */\nexport const max = (value1, value2) => {\n  if (value1.gte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\n/**\n * Get the min value\n * @func\n * @param {BigNumber} value1\n * @param {BigNumber} value2\n * @returns {BigNumber}\n */\nexport const min = (value1, value2) => {\n  if (value1.lte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\n/**\n * Convert the number to a fixed precision\n * @func\n * @param {string} value - the number that need to convert\n * @param {number} num - the number for method toFixed()\n * @returns {string}\n */\nexport const toNatural = (value, num = 0) =>\n  BigNumber(value).toFixed(num).toString();\n\nexport const toHex = (value) => Web3.utils.toHex(value);\n\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\n\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\n\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\n\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\n\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\n\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\n\nexport const hexToNaturalWithPercentage = (value) =>\n  `${bg(hexToNumberString(value), -18)\n    .sd(4)\n    .times(100)\n    .toFixed(4)\n    .toString()}%`;\n\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\n\nexport const naturalWithPercentage = (value) =>\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\n\nexport const deriToNatural = (value) => bg(value, -18);\n\nexport const deriToNaturalWithPercentage = (value) =>\n  `${bg(value, -18).sd(4).times(100).toFixed(4).toString()}%`;\n\nexport const deriToString = (value) => bg(value).toString();\n\nexport const deriToBool = (value) => {\n  if (bg(value).toNumber() === 1) {\n    return true;\n  }\n  return false;\n};\n\nexport const hasInvalidArgsValue = (...args) =>\n  args.some(\n    (i) =>\n      // console.log(bg(i))\n      isNaN(i.toString()) || i.toString() === '0'\n  );\n\n// language\nexport const isObject = (obj) => typeof obj === 'object';\n\nconst np = () => {}\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\n// fetchWithTimeout\nconst fetchWithTimeout = (url, delay=2000, options={}, onTimeout=np) => {\n  const timer = new Promise((resolve) => {\n    setTimeout(resolve, delay, {\n      timeout: true,\n    });\n  });\n  return Promise.race([fetch(url, options), timer]).then((response) => {\n    if (response.timeout) {\n      onTimeout();\n    }\n    return response;\n  });\n};\n\n// http\nexport const checkHttpServerIsAlive = async (url) => {\n  try {\n    //const response = await fetch(url);\n    const response = await fetch(url);\n    if (response.ok) {\n      return true;\n    }\n  } catch (err) {\n    //console.log(err);\n  }\n  return false;\n};\nexport const getAliveHttpServer = async (urls = []) => {\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i];\n    if (await checkHttpServerIsAlive(url)) {\n      return url;\n    }\n  }\n  throw new Error('No alive http server in urls', urls);\n};\n\n// ethereum chain\nexport const MAX_VALUE =\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\nexport const getNetworkName = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let poolNetwork;\n  switch (chainId) {\n    case '1':\n      poolNetwork = 'ethereum';\n      break;\n    case '56':\n      poolNetwork = 'bsc';\n      break;\n    case '128':\n      poolNetwork = 'heco';\n      break;\n    case '3':\n      poolNetwork = 'ropsten';\n      break;\n    case '42':\n      poolNetwork = 'kovan';\n      break;\n    case '97':\n      poolNetwork = 'bsctestnet';\n      break;\n    case '256':\n      poolNetwork = 'hecotestnet';\n      break;\n    default:\n      throw new Error('The networkId is not valid');\n  }\n  return poolNetwork;\n};\n\nexport const getWalletBalanceUnit = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let index;\n  const unitNetworkIdsMap = {\n    ETH: ['1', '3', '42'],\n    BNB: ['56', '97'],\n    HT: ['128', '256'],\n  };\n  const networkIdsArray = Object.values(unitNetworkIdsMap);\n  for (let i = 0; i < networkIdsArray.length; i++) {\n    if (networkIdsArray[i].includes(chainId)) {\n      index = i;\n      break;\n    }\n  }\n  if (index !== undefined) {\n    return Object.keys(unitNetworkIdsMap)[index];\n  }\n  if (chainId === '') {\n    return '';\n  }\n  throw new Error('Invalid Network:', chainId);\n};\n\nexport const getPoolBaseSymbolList = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let result = [];\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  for (let i = 0; i < pools.length; i++) {\n    const { bTokenSymbol, symbol } = pools[i];\n    if (bTokenSymbol && symbol) {\n      result.push(`${symbol}/${bTokenSymbol}`);\n    }\n  }\n  return result;\n};\n\nexport const getPoolBaseTokenAddressObject = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let result = {};\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  for (let i = 0; i < pools.length; i++) {\n    const { bTokenSymbol, symbol, pool } = pools[i];\n    const key = `${symbol}/${bTokenSymbol}`;\n    if (bTokenSymbol && symbol) {\n      result[key] = pool;\n    }\n  }\n  return result;\n};\n\n// export const getPoolContractAddress = (chainId, bTokenSymbol) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getContractAddressConfig(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.bTokenSymbol === bTokenSymbol);\n//   if (pool.length > 0) {\n//     return [\n//       pool[0].pool,\n//       pool[0].bToken,\n//       pool[0].pToken,\n//       pool[0].lToken,\n//       pool[0].dToken,\n//       pool[0].MiningVault,\n//       pool[0].initialBlock,\n//     ];\n//   }\n//   console.log(\n//     `getPoolContractAddress(): contract address is not found: ${chainId} ${bTokenSymbol}`\n//   );\n//   return [];\n// };\n\n// get config by poolAddress\nexport const getPoolContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  // console.log('pool', pool)\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n      bTokenSymbol: pool[0].bTokenSymbol,\n      symbol: pool[0].symbol,\n      unit: pool[0].unit,\n      initialBlock: pool[0].initialBlock,\n    };\n  }\n  console.log(\n    `getPoolContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return [];\n};\n\nexport const getMiningVaultContractAddress = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pools.length > 0) {\n    if (pools[0].MiningVault) {\n      return pools[0].MiningVault;\n    }\n  }\n};\n\n// export const getMiningVaultRouterContractAddress = (chainId) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getContractAddressConfig(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   if (pools.length > 0) {\n//     if (pools[0].MiningVaultRouter) {\n//       return pools[0].MiningVaultRouter;\n//     }\n//   }\n// };\n\nexport const getAnnualBlockNumber = (chainId) => {\n  const blockNumbers = getAnnualBlockNumberConfig();\n  if (blockNumbers[chainId]) {\n    return parseInt(blockNumbers[chainId]);\n  }\n  console.log(`cannot find the annual block number with chainId: ${chainId}`);\n};\n\nexport const getSlpContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getSlpContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n    };\n  }\n  console.log(\n    `getSlpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getClp2ContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getClp2ContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n    };\n  }\n  console.log(\n    `getClp2ContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getClpContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getClpContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      lTokenAddress: pool[0].lToken,\n    };\n  }\n  console.log(\n    `getClpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getLpContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getLpContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      lTokenAddress: pool[0].lToken,\n      type: pool[0].type,\n    };\n  }\n  console.log(\n    `getLpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getDeriContractAddress = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pool = getDeriContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pool.length > 0) {\n    return {\n      deriAddress: pool[0].Deri,\n      wormholeAddress: pool[0].Wormhole,\n      bTokenSymbol: pool[0].bTokenSymbol,\n    };\n  }\n  console.log(\n    `getDeriContractAddress(): contract address is not found: ${chainId}`\n  );\n  return {};\n};\n\nexport const getOracleUrl = (chainId, poolAddress) => {\n  const env = DeriEnv.get()\n  const { symbol } = getPoolContractAddress(chainId, poolAddress);\n  const addSymbolParam = (url, symbol='BTCUSD') => `${url}?symbol=${symbol}`;\n  if (env === 'prod' || env === 'production') {\n    // for production\n    if (symbol) {\n      return addSymbolParam('https://oracle4.deri.finance/price', symbol);\n    }\n    return 'https://oracle4.deri.finance/price';\n  } else {\n    if (symbol) {\n      return addSymbolParam('https://oracle4.deri.finance/price', symbol);\n    }\n    // for test\n    return 'https://oracle4.deri.finance/price';\n  }\n};\n\nexport const getOracleInfo = async (chainId, poolAddress) => {\n  let url = getOracleUrl(chainId, poolAddress);\n  //console.log('oracle url', url);\n  let retry = 5;\n  //let timeout = 1000;\n  let res;\n  while (retry > 0) {\n    res = await fetch(url, { mode: 'cors' });\n    //if (res && !res.timeout) {\n    if (res.ok) {\n      break;\n    }\n    //console.log('get oracle info timeout')\n    retry -= 1;\n    //timeout += 800;\n  }\n  if (retry === 0 && !res) {\n    throw new Error(`fetch oracle info error: exceed max retry(5).`);\n  }\n  return await res.json();\n};\n\nexport const getBTCUSDPrice = async (chainId, poolAddress) => {\n  try {\n    const responseJson = await getOracleInfo(chainId, poolAddress)\n    let price = responseJson.price\n    if (!price) {\n      price = '0';\n    }\n    return deriToNatural(responseJson.price).toString();\n  } catch (err) {\n    throw err\n  }\n};\nexport const getOraclePrice = getBTCUSDPrice;\n\nexport const getChainProviderUrl = async(chainId) => {\n  chainId = normalizeChainId(chainId);\n  const urls = getChainProviderUrlsConfig(chainId)\n  if (urls.length > 0) {\n    return await getAliveHttpServer(urls)\n  } else {\n    throw new Error(\n      `Cannot find the chain provider url with chainId: ${chainId}`\n    );\n  }\n};\n\nexport const format = (bigNumber) =>\n  bigNumber.toFormat().replaceAll(',', '').toString();\n\nexport const normalizeChainId = (chainId) => {\n  const chainIds = ['1', '56', '128', '3', '42', '97', '256']\n  let res = chainId ? chainId.toString() : chainId;\n  if (chainId && chainIds.includes(res)) {\n    return res;\n  } else {\n    throw new Error(`invalid chainId: ${chainId}`)\n  }\n};\n\nexport const normalizeAddress = (address) => {\n  if (address && typeof address === 'string' && address.startsWith('0x')) {\n    return Web3.utils.toChecksumAddress(address);\n  } else {\n    throw new Error(`invalid address: ${address}`)\n  }\n};","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\n\n// == bg\nBigNumber.config({\n  DECIMAL_PLACES: 18,\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n  EXPONENTIAL_AT: 256,\n});\n\nexport const bg = (value, base = 0) => {\n  if (base === 0) {\n    return BigNumber(value);\n  }\n  if (base > 0) {\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\n  }\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\n};\n\nexport const max = (value1, value2) => {\n  if (value1.gte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const min = (value1, value2) => {\n  if (value1.lte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const fromWei = (value, unit='ether') => Web3.utils.fromWei(value, unit)\n\nexport const toWei = (value, unit='ether') => Web3.utils.toWei(value, unit)\n\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\n\nexport const toHex = (value) => Web3.utils.toHex(value);\n\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\n\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\n\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\n\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\n\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\n\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\n\nexport const deriToNatural = (value) => bg(value, -18);\n\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\n\n// == convert\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);","// == func\nconst np = () => {}\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\nexport const fetchWithTimeout = (url, options = {}) => {\n  const { timeout = 1200, ...fetchOptions } = options\n\n  return Promise.race([\n    fetch(url, fetchOptions),\n    new Promise((resolve) => {\n      setTimeout(() => {\n        // reject(\n        //   new Error(\n        //     `Request for ${url} timed out after ${timeout} ms`,\n        //   ),\n        // )\n        resolve({timeout:true})\n      }, timeout)\n    }),\n  ])\n}\n\nexport const checkHttpServerIsAlive = async (url) => {\n  try {\n    const response = await fetch(url);\n    if (response.ok) {\n      return true;\n    }\n  } catch (err) {\n    console.log(err);\n  }\n  return false;\n};\n\nexport const getAliveHttpServer = async (urls = []) => {\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i];\n    //console.log(url)\n    if (await checkHttpServerIsAlive(url)) {\n      return url;\n    }\n  }\n  throw new Error('No alive http server in urls', urls);\n};\n","import Web3 from 'web3';\n\n// validate\nexport const normalizeChainId = (chainId) => {\n  const chainIds = ['1', '56', '128', '3', '42', '97', '256'];\n  let res = chainId ? chainId.toString() : chainId;\n  if (chainId && chainIds.includes(res)) {\n    return res;\n  } else {\n    throw new Error(`invalid chainId: ${chainId}`);\n  }\n};\n\nexport const normalizeAddress = (address) => {\n  if (address && typeof address === 'string' && address.startsWith('0x')) {\n    return Web3.utils.toChecksumAddress(address);\n  } else {\n    throw new Error(`invalid address: ${address}`);\n  }\n};\n\nexport const validateArgs = (...args) => args.every((i) => !isNaN(parseFloat(i)));","import {\n  getChainProviderUrls,\n  getAnnualBlockNumberConfig,\n} from '../config';\nimport { normalizeChainId } from './validate';\nimport { getAliveHttpServer } from './network';\n\nexport const getChainProviderUrl = async (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const urls = getChainProviderUrls(chainId);\n  if (urls.length > 0) {\n    return await getAliveHttpServer(urls);\n  } else {\n    throw new Error(\n      `Cannot find the chain provider url with chainId: ${chainId}`\n    );\n  }\n};\nexport const getAnnualBlockNumber = (chainId) => {\n  const blockNumbers = getAnnualBlockNumberConfig();\n  if (blockNumbers[chainId]) {\n    return parseInt(blockNumbers[chainId]);\n  } else {\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\n  }\n};\n","import { getPoolConfig } from '../config';\nimport { DeriEnv } from '../../config'\nimport { deriToNatural } from './convert';\n\nexport const getOracleUrl = (poolAddress, symbolId) => {\n  const env = DeriEnv.get();\n  const { symbol } = getPoolConfig(poolAddress, null, symbolId);\n  const addSymbolParam = (url, symbol = 'BTCUSD') => `${url}?symbol=${symbol}`;\n  if (env === 'prod' || env === 'production') {\n    // for production\n    if (symbol) {\n      return addSymbolParam('https://oracle4.deri.finance/price', symbol);\n    }\n    return 'https://oracle4.deri.finance/price';\n  } else {\n    if (symbol) {\n      return addSymbolParam('https://oracle4.deri.finance/price', symbol);\n    }\n    // for test\n    return 'https://oracle4.deri.finance/price';\n  }\n};\n\nexport const getOracleInfo = async (poolAddress, symbolId) => {\n  let url = getOracleUrl(poolAddress, symbolId);\n  //console.log('oracle url', url);\n  let retry = 3;\n  //let timeout = 1000;\n  let res;\n  while (retry > 0) {\n    res = await fetch(url, { mode: 'cors' });\n    //if (res && !res.timeout) {\n    if (res.ok) {\n      break;\n    }\n    //console.log('get oracle info timeout')\n    retry -= 1;\n    //timeout += 800;\n  }\n  if (retry === 0 && !res) {\n    throw new Error(`fetch oracle info error: exceed max retry(5).`);\n  }\n  return await res.json();\n};\n\nexport const getOraclePrice = async (poolAddress, symbolId) => {\n  try {\n    const responseJson = await getOracleInfo(poolAddress, symbolId);\n    let price = responseJson.price;\n    if (!price) {\n      price = '0';\n    }\n    return deriToNatural(responseJson.price).toString();\n  } catch (err) {\n    throw err;\n  }\n};\n","import { bg, max, min } from '../utils';\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return volume.times(price).times(multiplier).minus(cost);\n}\n\n// export const calculateMaxWithdrawMargin = (\n//   price,\n//   volume,\n//   margin,\n//   cost,\n//   multiplier,\n//   minInitialMarginRatio\n// ) => {\n//   if (volume.eq(0)) {\n//     return margin;\n//   }\n//   const held = calculateMarginHeld(\n//     price,\n//     volume,\n//     multiplier,\n//     minInitialMarginRatio\n//   );\n//   const pnl = calculatePnl(price, volume, multiplier, cost);\n//   const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\n//   return withdrawable;\n// };\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = cost.minus(margin).div(volume).div(multiplier);\n  let res = volume.gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  //price,\n  margin,\n  marginHeld,\n  liquidity,\n  liquidityUsed,\n  // multiplier,\n  // minPoolMarginRatio,\n  // newVolume,\n) => {\n  const minMargin = marginHeld;\n  // const poolMaxVolume = liquidity.minus(liquidityUsed)\n  //   .div(minPoolMarginRatio)\n  //   .div(price)\n  //   .div(multiplier);\n  if (margin.gte(minMargin)) {\n    // if (\n    //   newVolume.lte(poolMaxVolume) &&\n    //   newVolume.gte(poolMaxVolume.negated())\n    // ) {\n    if (liquidity.minus(liquidityUsed).gte(0)) {\n      return { success: true };\n    }\n    return { success: false, error: 'Pool insufficient liquidity' };\n  }\n  return { success: false, error: 'Trader insufficient margin' };\n};\n","import { bg, getAnnualBlockNumber, validateArgs } from '../utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio\n    )\n  ) {\n    return bg(tradersNetVolume)\n      .times(price)\n      .times(multiplier)\n      .times(poolMarginRatio)\n      .div(liquidity)\n      .abs();\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio,\n    ];\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\n  }\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    )\n  ) {\n    return bg(tradersNetVolume)\n      .times(price)\n      .times(price)\n      .times(multiplier)\n      .times(multiplier)\n      .times(fundingRateCoefficient)\n      .div(liquidity);\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    ];\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\n  }\n};\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getAnnualBlockNumber(chainId);\n  //console.log(annualBlockCount);\n  return bg(fundingRate).times(annualBlockCount);\n};\n","import Web3 from 'web3';\nimport {\n  PerpetualPool,\n  PerpetualPoolRouter,\n  BToken,\n  LToken,\n  PToken,\n} from './contract';\nimport { getChainProviderUrl } from './utils';\n\nexport const metaMaskWeb3 = (function () {\n  let web3Instance = null;\n  return () => {\n    if (web3Instance !== null) {\n      return web3Instance;\n    }\n    if (typeof window.ethereum !== undefined) {\n      web3Instance = new Web3(window.ethereum);\n      return web3Instance;\n    } else {\n      // console.log(\"Please install MetaMask first\")\n      throw new Error('Please install MetaMask first');\n    }\n  };\n})();\n\nexport const web3Factory = (function () {\n  const web3InstanceMap = {};\n  return {\n    async getOrSet(chainId) {\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\n        return web3InstanceMap[chainId];\n      }\n      console.log(\n        `==== web3Factory(${chainId}), please caution the access limits ===`\n      );\n      const providerUrl = await getChainProviderUrl(chainId);\n      web3InstanceMap[chainId] = new Web3(\n        new Web3.providers.HttpProvider(providerUrl)\n      );\n      return web3InstanceMap[chainId];\n    },\n  };\n})();\n\nexport const perpetualPoolFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, useInfura) => {\n    const key = useInfura ? `${address}.useInfura` : address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      instanceMap[key] = new PerpetualPool(chainId, address, useInfura);\n      return instanceMap[key];\n    }\n  };\n})();\n\nexport const perpetualPoolRouterFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, useInfura) => {\n    const key = useInfura ? `${address}.useInfura` : address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      instanceMap[key] = new PerpetualPoolRouter(chainId, address, useInfura);\n      return instanceMap[key];\n    }\n  };\n})();\n\nexport const bTokenFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, useInfura) => {\n    const key = useInfura ? `${address}.useInfura` : address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      instanceMap[key] = new BToken(chainId, address, useInfura);\n      return instanceMap[key];\n    }\n  };\n})();\n\nexport const lTokenFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, useInfura) => {\n    const key = useInfura ? `${address}.useInfura` : address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      instanceMap[key] = new LToken(chainId, address, useInfura);\n      return instanceMap[key];\n    }\n  };\n})();\n\nexport const pTokenFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, useInfura) => {\n    const key = useInfura ? `${address}.useInfura` : address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      instanceMap[key] = new PToken(chainId, address, useInfura);\n      return instanceMap[key];\n    }\n  };\n})();\n\n","import { metaMaskWeb3, web3Factory } from '../factory';\nimport { numberToHex } from '../utils';\n\nconst MAX_GAS_AMOUNT = 832731;\n\nexport class ContractBase {\n  constructor(chainId, contractAddress, useInfura) {\n    this.chainId = chainId;\n    this.contractAddress = contractAddress;\n    this.useInfura = useInfura\n  }\n\n  async _init() {\n    if (this.useInfura) {\n      this.web3 = await web3Factory.getOrSet(this.chainId);\n    } else {\n      this.web3 = metaMaskWeb3();\n    }\n  }\n\n  async _call(method, args = []) {\n    let res\n    let retry = 2\n    while (retry > 0) {\n      try {\n        await this._init()\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch(err) {\n        retry -= 1\n        this.web3 = null\n        console.log(err)\n      }\n    }\n    if (retry === 0 && !res) {\n      console.log(`method call '${method} ${args}' failed with max retry 3.`)\n    }\n    return res\n  }\n\n  async _estimatedGas(method, args = [], accountAddress) {\n    await this._init()\n    let gas = 0;\n    for (let i = 0; i < 2; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (err) {\n      }\n    }\n    if (gas == 0 || gas > 10000000) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt === null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _transact(method, args, accountAddress) {\n    await this._init()\n    const gas = await this._estimatedGas(method, args, accountAddress)\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods[method](...args).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\n  }\n\n}\n","\n/* eslint-disable */\nexport const perpetualPoolAbi = [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256[9]\",\n          \"name\": \"parameters\",\n          \"type\": \"uint256[9]\"\n        },\n        {\n          \"internalType\": \"address[4]\",\n          \"name\": \"addresses\",\n          \"type\": \"address[4]\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"AddLiquidity\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"AddMargin\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"liquidator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"reward\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Liquidate\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"collector\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"ProtocolFeeCollection\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"RemoveLiquidity\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"RemoveMargin\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"int256\",\n          \"name\": \"tradeVolume\",\n          \"type\": \"int256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"price\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Trade\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"bTokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"swapperAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"oracleAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"decimals\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"discount\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"price\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"liquidity\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"pnl\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"cumulativePnl\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPool.BTokenInfo\",\n          \"name\": \"info\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"name\": \"addBToken\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"blength\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"slength\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"addLiquidity\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"addMargin\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"string\",\n              \"name\": \"symbol\",\n              \"type\": \"string\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"oracleAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"multiplier\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"feeRatio\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"fundingRateCoefficient\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"price\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"cumulativeFundingRate\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"tradersNetVolume\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"tradersNetCost\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPool.SymbolInfo\",\n          \"name\": \"info\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"name\": \"addSymbol\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"targetPool\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"approvePoolMigration\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"collectProtocolFee\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"sourcePool\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"executePoolMigration\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getAddresses\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"lTokenAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"pTokenAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"routerAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"protocolFeeCollector\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getBToken\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"bTokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"swapperAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"oracleAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"decimals\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"discount\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"price\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"liquidity\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"pnl\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"cumulativePnl\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPool.BTokenInfo\",\n          \"name\": \"\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getBTokenOracle\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getLengths\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getParameters\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"decimals0\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"minBToken0Ratio\",\n          \"type\": \"int256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"minPoolMarginRatio\",\n          \"type\": \"int256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"minInitialMarginRatio\",\n          \"type\": \"int256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"minMaintenanceMarginRatio\",\n          \"type\": \"int256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"minLiquidationReward\",\n          \"type\": \"int256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"maxLiquidationReward\",\n          \"type\": \"int256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"liquidationCutRatio\",\n          \"type\": \"int256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"protocolFeeCollectRatio\",\n          \"type\": \"int256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getProtocolFeeAccrued\",\n      \"outputs\": [\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"\",\n          \"type\": \"int256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getSymbol\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"string\",\n              \"name\": \"symbol\",\n              \"type\": \"string\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"oracleAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"multiplier\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"feeRatio\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"fundingRateCoefficient\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"price\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"cumulativeFundingRate\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"tradersNetVolume\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"tradersNetCost\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPool.SymbolInfo\",\n          \"name\": \"\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getSymbolOracle\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"liquidator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"blength\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"slength\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"liquidate\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"blength\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"slength\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"removeLiquidity\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"blength\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"slength\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"removeMargin\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"swapperAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"oracleAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"discount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"setBTokenParameters\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"oracleAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"feeRatio\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"fundingRateCoefficient\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"setSymbolParameters\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"tradeVolume\",\n          \"type\": \"int256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"blength\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"slength\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"trade\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]\nexport const perpetualPoolRouterAbi = [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"lTokenAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"pTokenAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"liquidatorQualifierAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"migrationTimestamp\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"address\",\n          \"name\": \"source\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"address\",\n          \"name\": \"target\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"ExecuteMigration\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"migrationTimestamp\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"address\",\n          \"name\": \"source\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"address\",\n          \"name\": \"target\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"PrepareMigration\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"bTokenAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"swapperAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"oracleAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"discount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"addBToken\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"addLiquidity\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"symbolId\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"timestamp\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"price\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"v\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"r\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"s\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n          \"name\": \"infos\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"name\": \"addLiquidityWithPrices\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"addMargin\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"symbolId\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"timestamp\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"price\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"v\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"r\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"s\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n          \"name\": \"infos\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"name\": \"addMarginWithPrices\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"symbol\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"oracleAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"multiplier\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"feeRatio\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"fundingRateCoefficient\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"addSymbol\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"approveMigration\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"claimNewController\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"controller\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"sourceRouter\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"executeMigration\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"liquidate\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"symbolId\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"timestamp\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"price\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"v\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"r\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"s\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n          \"name\": \"infos\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"name\": \"liquidateWithPrices\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"liquidatorQualifier\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"migrationDestination\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"migrationTimestamp\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"pool\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"target\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"graceDays\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"prepareMigration\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"removeLiquidity\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"symbolId\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"timestamp\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"price\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"v\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"r\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"s\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n          \"name\": \"infos\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"name\": \"removeLiquidityWithPrices\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"removeMargin\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"symbolId\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"timestamp\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"price\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"v\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"r\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"s\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n          \"name\": \"infos\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"name\": \"removeMarginWithPrices\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"swapperAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"oracleAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"discount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"setBTokenParameters\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"qualifierAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"setLiquidatorQualifier\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"newController\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"setNewController\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"poolAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"setPool\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"oracleAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"feeRatio\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"fundingRateCoefficient\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"setSymbolParameters\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"tradeVolume\",\n          \"type\": \"int256\"\n        }\n      ],\n      \"name\": \"trade\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"tradeVolume\",\n          \"type\": \"int256\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"symbolId\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"timestamp\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"price\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"v\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"r\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"s\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n          \"name\": \"infos\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"name\": \"tradeWithPrices\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]\nexport const bTokenAbi = [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"name_\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"symbol_\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"spender\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Approval\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Transfer\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"spender\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"allowance\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"spender\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"approve\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"account\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"balanceOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"decimals\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint8\",\n          \"name\": \"\",\n          \"type\": \"uint8\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"name\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"symbol\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"totalSupply\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transfer\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transferFrom\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]\nexport const lTokenAbi = [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"name_\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"symbol_\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"numBTokens_\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Approval\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"ApprovalForAll\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Transfer\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"int256\",\n          \"name\": \"liquidity\",\n          \"type\": \"int256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"int256\",\n          \"name\": \"pnl\",\n          \"type\": \"int256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"int256\",\n          \"name\": \"lastCumulativePnl\",\n          \"type\": \"int256\"\n        }\n      ],\n      \"name\": \"UpdateAsset\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"approve\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"balanceOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"burn\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"exists\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getApproved\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getAsset\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"liquidity\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"pnl\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"lastCumulativePnl\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct ILToken.Asset\",\n          \"name\": \"\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"getAssets\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"liquidity\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"pnl\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"lastCumulativePnl\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct ILToken.Asset[]\",\n          \"name\": \"\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"isApprovedForAll\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"mint\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"name\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"numBTokens\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"ownerOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"pool\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"data\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"setApprovalForAll\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"num\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"setNumBTokens\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"newPool\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"setPool\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes4\",\n          \"name\": \"interfaceId\",\n          \"type\": \"bytes4\"\n        }\n      ],\n      \"name\": \"supportsInterface\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"symbol\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"totalMinted\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"totalSupply\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"liquidity\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"pnl\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"lastCumulativePnl\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct ILToken.Asset\",\n          \"name\": \"asset\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"name\": \"updateAsset\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]\nexport const pTokenAbi = [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"name_\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"symbol_\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"numSymbols_\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"numBTokens_\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Approval\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"ApprovalForAll\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Transfer\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"int256\",\n          \"name\": \"amount\",\n          \"type\": \"int256\"\n        }\n      ],\n      \"name\": \"UpdateMargin\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"int256\",\n          \"name\": \"volume\",\n          \"type\": \"int256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"int256\",\n          \"name\": \"cost\",\n          \"type\": \"int256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"int256\",\n          \"name\": \"lastCumulativeFundingRate\",\n          \"type\": \"int256\"\n        }\n      ],\n      \"name\": \"UpdatePosition\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"approve\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"balanceOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"burn\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"exists\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getApproved\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getMargin\",\n      \"outputs\": [\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"\",\n          \"type\": \"int256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"getMargins\",\n      \"outputs\": [\n        {\n          \"internalType\": \"int256[]\",\n          \"name\": \"\",\n          \"type\": \"int256[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getPosition\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"volume\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"cost\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"lastCumulativeFundingRate\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct IPToken.Position\",\n          \"name\": \"\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"getPositions\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"volume\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"cost\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"lastCumulativeFundingRate\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct IPToken.Position[]\",\n          \"name\": \"\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"isApprovedForAll\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"mint\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"name\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"numBTokens\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"numSymbols\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"ownerOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"pool\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"data\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"setApprovalForAll\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"num\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"setNumBTokens\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"num\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"setNumSymbols\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"newPool\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"setPool\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes4\",\n          \"name\": \"interfaceId\",\n          \"type\": \"bytes4\"\n        }\n      ],\n      \"name\": \"supportsInterface\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"symbol\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"totalMinted\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"totalSupply\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"amount\",\n          \"type\": \"int256\"\n        }\n      ],\n      \"name\": \"updateMargin\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"int256[]\",\n          \"name\": \"margins\",\n          \"type\": \"int256[]\"\n        }\n      ],\n      \"name\": \"updateMargins\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"volume\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"cost\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"lastCumulativeFundingRate\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct IPToken.Position\",\n          \"name\": \"position\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"name\": \"updatePosition\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]\n/* eslint-disable */","import { ContractBase } from './contract_base'\nimport { perpetualPoolAbi } from './abis';\nimport { deriToNatural, bg } from '../utils'\n\nexport class PerpetualPool extends ContractBase {\n  constructor(chainId, contractAddress, useInfura=false) {\n    super(chainId, contractAddress, useInfura)\n    this.contractAbi = perpetualPoolAbi\n\n    this.bTokenLength = 0\n    this.symbolLength = 0\n\n    this.lTokenAddress = ''\n    this.pTokenAddress = ''\n    this.routerAddress = ''\n    this.protocolFeeCollector = ''\n\n    this.protocolFeeAccrued = 0\n  }\n  async _init() {\n    if (!this.web3) {\n      await super._init()\n      this.contract = new this.web3.eth.Contract(this.contractAbi, this.contractAddress)\n    }\n  }\n\n  async _update() {\n    await Promise.all([\n      this.getLengths(),\n      this.getAddresses(),\n      this.getParameters(),\n    ]);\n  }\n\n  async getLengths() {\n    try {\n      const res = await this._call('getLengths')\n      //console.log(res[0])\n      if (res[0] && res[1]) {\n        this.bTokenLength = parseInt(res[0])\n        this.symbolLength = parseInt(res[1])\n      }\n    } catch(err) {\n      throw new Error(`PerpetualPool#_getLength error: ${err}`)\n    }\n  }\n  async getAddresses() {\n    try {\n      const res = await this._call('getAddresses')\n      this.lTokenAddress = res.lTokenAddress\n      this.pTokenAddress = res.pTokenAddress\n      this.routerAddress = res.routerAddress\n      this.protocolFeeCollector = res.protocolFeeCollector\n    } catch (err) {\n      throw new Error(`PerpetualPool#_getAddress error: ${err}`)\n    }\n  }\n  async getParameters() {\n    const res = await this._call('getParameters')\n    return {\n      decimals0: res.decimals0,\n      minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getProtocolFeeAccrued() {\n    const res =  await this._call('getProtocolFeeAccrued')\n    this.protocolFeeAccrued = deriToNatural(res)\n  }\n  async getBToken(bTokenId) {\n    try {\n      //bTokenId = parseInt(bTokenId)\n      const res = await this._call('getBToken', [bTokenId]);\n      return {\n        bTokenAddress: res.bTokenAddress,\n        swapperAddress: res.bTokenAddress,\n        oracleAddress: res.oracleAddress,\n        decimals: res.decimals,\n        discount: deriToNatural(res.discount),\n        price: deriToNatural(res.price),\n        liquidity: deriToNatural(res.liquidity),\n        pnl: deriToNatural(res.pnl),\n        cumulativePnl: deriToNatural(res.cumulativePnl),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getBToken error: ${err}`);\n    }\n  }\n  async getBTokenOracle(bTokenId) {\n    //bTokenId = parseInt(bTokenId)\n    return await this._call('getBTokenOracle', [bTokenId])\n  }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res =  await this._call('getSymbol', [symbolId])\n      return {\n        symbol: res.symbol,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n  async getSymbolOracle(symbolId) {\n    //symbolId = parseInt(symbolId)\n    return await this._call('getSymbolOracle', [symbolId])\n  }\n\n  // trade history query methods\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    let amount\n    if (['56', '97'].includes(this.chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }\n}","import { ContractBase } from './contract_base'\nimport { perpetualPoolRouterAbi} from './abis';\nimport { naturalToDeri, bg } from '../utils'\n\nexport class PerpetualPoolRouter extends ContractBase {\n  constructor(chainId, contractAddress, useInfura=false) {\n    super(chainId, contractAddress, useInfura)\n    this.contractAbi = perpetualPoolRouterAbi\n    this.poolAddress = ''\n  }\n  async _init() {\n    if (!this.web3) {\n      await super._init()\n      this.contract = new this.web3.eth.Contract(this.contractAbi, this.contractAddress)\n    }\n  }\n\n  // === query ===\n  async pool() {\n    this.poolAddress = await this._call('pool');\n    return this.poolAddress\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidity',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeLiquidity(accountAddress, bTokenId, amount) {\n    return await this._transact(\n      'removeLiquidity',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async addMargin(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMargin',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'removeMargin',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async trade(accountAddress, symbolId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  // with prices\n  async addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidityWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n  async removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    return await this._transact(\n      'removeLiquidityWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  async addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMarginWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  async removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'removeMarginWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  async tradeWithPrices(accountAddress, symbolId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'tradeWithPrices',\n      [symbolId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  // async liquidate(acountAddress) {\n  //   if (!this.poolAddress) {\n  //     await this.pool()\n  //   }\n  //   return await this._transact(\n  //     'liquidate',\n  //     [accountAddress],\n  //     accountAddress\n  //   );\n  // }\n\n}","import { ContractBase } from './contract_base'\nimport { bTokenAbi } from './abis';\nimport { deriToNatural, bg } from '../utils'\n\nexport const MAX_VALUE =\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n\nexport class BToken extends ContractBase {\n  constructor(chainId, contractAddress, useInfura=false) {\n    super(chainId, contractAddress, useInfura);\n    this.contractAbi = bTokenAbi;\n  }\n  async _init() {\n    if (!this.web3) {\n      await super._init();\n      this.contract = new this.web3.eth.Contract(\n        this.contractAbi,\n        this.contractAddress\n      );\n    }\n  }\n\n  // === query ===\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n  async _balanceOf(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n\n  async isUnlocked(accountAddress, poolAddress) {\n    const allowance = await this._call('allowance', [\n      accountAddress,\n      poolAddress,\n    ]);\n    return bg(allowance).gt(0);\n  }\n\n  // === transaction ===\n  async unlock(accountAddress, poolAddress) {\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_VALUE],\n      accountAddress\n    );\n  }\n\n  // async transfer() {\n  // call transfer\n  // }\n}","import { ContractBase } from './contract_base'\nimport { bTokenAbi, lTokenAbi } from './abis';\nimport { deriToNatural, bg } from '../utils'\n\nconst processAsset = (res) => {\n  return {\n    liquidity: deriToNatural(res[0]),\n    pnl: deriToNatural(res[1]),\n    lastCumulativePnl: deriToNatural(res[2]),\n  }\n}\nexport class LToken extends ContractBase {\n  constructor(chainId, contractAddress, useInfura=false) {\n    super(chainId, contractAddress, useInfura)\n    this.contractAbi = lTokenAbi\n  }\n  async _init() {\n    if (!this.web3) {\n      await super._init()\n      this.contract = new this.web3.eth.Contract(this.contractAbi, this.contractAddress)\n    }\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getAsset(accountAddress, bTokenId) {\n    const res = await this._call('getAsset', [accountAddress, bTokenId]);\n    if (Array.isArray(res)) {\n      return processAsset(res)\n    } else {\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress} ${bTokenId})`)\n    }\n  }\n  async getAssets(accountAddress) {\n    const res = await this._call('getAssets', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map(i => processAsset(i))\n    } else {\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress})`)\n    }\n  }\n\n  // === transaction ===\n}","import { ContractBase } from './contract_base'\nimport { pTokenAbi } from './abis';\nimport { deriToNatural, bg } from '../utils'\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PToken extends ContractBase {\n  constructor(chainId, contractAddress, useInfura=false) {\n    super(chainId, contractAddress, useInfura)\n    this.contractAbi = pTokenAbi\n  }\n  async _init() {\n    if (!this.web3) {\n      await super._init()\n      this.contract = new this.web3.eth.Contract(this.contractAbi, this.contractAddress)\n    }\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getMargin(accountAddress, symbolId) {\n    const res = await this._call('getMargin', [accountAddress, symbolId]);\n    return deriToNatural(res)\n  }\n  async getMargins(accountAddress) {\n    const res = await this._call('getMargins', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => deriToNatural(i))\n    }\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getPositions(accountAddress) {\n    const res = await this._call('getPositions', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => processPosition(i))\n    }\n  }\n\n  // === transaction ===\n}","import { lTokenFactory, perpetualPoolFactory } from '../factory'\nimport { getPoolConfig } from '../config'\nimport { deriToNatural } from '../utils'\nimport { databaseFactory } from '../../factory/contracts';\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n  useInfura,\n) => {\n  try {\n    const {lToken:lTokenAddress} = getPoolConfig(poolAddress, bTokenId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress, useInfura)\n    const lToken = lTokenFactory(chainId, lTokenAddress, useInfura);\n\n    const [bTokenInfo, lTokenAsset] = await Promise.all([\n      perpetualPool.getBToken(bTokenId),\n      lToken.getAsset(accountAddress, bTokenId),\n    ])\n    const { liquidity: poolLiquidity } = bTokenInfo;\n    const { liquidity } = lTokenAsset\n    return {\n      //totalSupply: lTokenTotalSupply.toString(),\n      poolLiquidity: poolLiquidity.toString(),\n      // shares: liquidity.toString(),\n      // shareValue: '1',\n      // maxRemovableShares: liquidity.toString()\n      shares: liquidity.toString(),\n      maxRemovableShares: liquidity.toString()\n    };\n  } catch (err) {\n    console.log(err)\n  }\n  return {\n    poolLiquidity: '',\n    hares: '',\n    maxRemovableShares: '',\n  };\n};\n\nexport const getPoolLiquidity = async (chainId, poolAddress, bTokenId, useInfura=false) => {\n  // const perpetualPool = perpetualPoolFactory(chainId, poolAddress, useInfura)\n  // const res = await perpetualPool.getBToken(bTokenId)\n  // return res.liquidity.toString()\n\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.${bTokenId}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol:'',\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n  return {\n    liquidity: '',\n    symbol:'',\n  };\n};","import { getFilteredPoolConfigList, getPoolConfig } from '../config'\nimport { perpetualPoolRouterFactory } from '../factory'\nimport { getOracleInfo, getOraclePrice } from '../utils'\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const {router:routerAddress} = getPoolConfig(poolAddress, bTokenId)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   let res\n   try {\n     const tx = await perpetualPoolRouter.addLiquidity(accountAddress, bTokenId, amount);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err};\n   }\n   return res\n}\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const {router:routerAddress} = getPoolConfig(poolAddress, bTokenId)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   let res\n   try {\n     const tx = await perpetualPoolRouter.removeLiquidity(accountAddress, bTokenId, amount);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err};\n   }\n   return res\n}\n\nexport const addLiquidityWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const {router:routerAddress} = getPoolConfig(poolAddress, bTokenId)\n   const symbolList = getFilteredPoolConfigList(poolAddress, '0').map(c => c.symbolId)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   let res\n   try {\n     const promises = symbolList.map(async(s) => {\n       return await getOracleInfo(poolAddress, s)\n     })\n     const prices = await Promise.all(promises)\n     const priceInfos = prices.map((p, index) => {\n       return [symbolList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n     })\n     const tx = await perpetualPoolRouter.addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err};\n   }\n   return res\n}\n\nexport const removeLiquidityWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const {router:routerAddress} = getPoolConfig(poolAddress, bTokenId)\n   const symbolList = getFilteredPoolConfigList(poolAddress, '0').map(c => c.symbolId)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   let res\n   try {\n     const promises = symbolList.map(async(s) => {\n       return await getOracleInfo(poolAddress, s)\n     })\n     const prices = await Promise.all(promises)\n     const priceInfos = prices.map((p, index) => {\n       return [symbolList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n     })\n     const tx = await perpetualPoolRouter.removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err};\n   }\n   return res\n}","export const priceCache = (function(){\n  let _prices = {}\n  return {\n    get(poolAddress, symbolId) {\n      const key = `${poolAddress}.${symbolId}`\n      if (Object.keys(_prices).includes(key)) {\n        const [price, timestamp] = _prices[key].split('|')\n        //if (parseInt(timestamp) - Date.now() < 10000) {\n          return price\n        //}\n      }\n      console.log('please init priceCache first')\n    },\n    update(chainId, poolAddress, symbolId) {\n      // place holder\n    },\n    set(poolAddress, symbolId, val) {\n      if (!isNaN(parseFloat(val))) {\n        const timestamp = Date.now().toString()\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\n      }\n    }\n  }\n})()\n\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress, symbolId) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, symbolId, resource) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();","import { perpetualPoolFactory, bTokenFactory, pTokenFactory } from '../factory';\nimport { getFilteredPoolConfigList, getPoolConfig} from '../config'\nimport {\n  calculateEntryPrice,\n  calculatePnl,\n  calculateMarginHeld,\n  calculateLiquidationPrice,\n  calculateLiquidityUsed,\n  calculateFundingRate,\n  processFundingRate,\n} from '../calculation';\nimport { getOraclePrice, bg, min, max } from '../utils'\nimport { fundingRateCache, priceCache } from '../api/api_globals';\n\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  bTokenId,\n  symbolId,\n  useInfura,\n) => {\n  try {\n    const {symbol, bTokenSymbol } = getPoolConfig(poolAddress, bTokenId, symbolId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress, useInfura);\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo\n    return {\n      symbol: symbol,\n      bSymbol: bTokenSymbol,\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      //minAddLiquidity: minAddLiquidity.toString(),\n      //redemptionFeeRatio: redemptionFeeRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n    }\n  } catch (err) {\n    console.log(err)\n  }\n  return {\n    symbol: '',\n    bSymbol: '',\n    multiplier: '',\n    feeRatio: '',\n    fundingRateCoefficient: '',\n    minPoolMarginRatio: '',\n    minInitialMarginRatio: '',\n    minMaintenanceMarginRatio: '',\n    minLiquidationReward: '',\n    maxLiquidationReward: '',\n    liquidationCutRatio: '',\n    protocolFeeCollectRatio: '',\n  }\n};\n\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId, useInfura) => {\n  try {\n    const bTokenConfigList = getFilteredPoolConfigList(poolAddress, null, symbolId)\n    const symbolConfigList = getFilteredPoolConfigList(poolAddress, '0')\n    const bTokenIdList = bTokenConfigList.map((i) => i.bTokenId)\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\n    //console.log('bTokenList', bTokenList)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress, useInfura);\n    const {pToken: pTokenAddress } = getPoolConfig(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress, useInfura);\n    const [price, symbolInfo, parameterInfo, positionInfo, margins, positions ] = await Promise.all([\n      getOraclePrice(poolAddress, symbolId),\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n      pToken.getPosition(accountAddress, symbolId),\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      //pToken.getMargin(accountAddress, symbolId),\n    ])\n    priceCache.set(poolAddress, symbolId, price)\n    const { volume, cost } = positionInfo\n    const { multiplier, price:internalPrice } = symbolInfo\n    const {\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n    } = parameterInfo\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    const marginHeld = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n    }, bg(0))\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(internalPrice).times(minInitialMarginRatio)\n    //console.log('margin', margin.toString(), marginHeld.toString())\n    const unrealizedPnl = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n\n    const costTotal = positions.reduce((accum, a) => {\n      //console.log(index, a.cost.toString())\n      return accum.plus(bg(a.cost))\n    }, bg(0))\n    //console.log('cost', costTotal.toString())\n  return {\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n      margin: margin.toString(),\n      marginHeld: marginHeld.toString(),\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\n      unrealizedPnl: unrealizedPnl.toString(),\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        costTotal,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n    };\n  } catch(err) {\n    console.log(err)\n  }\n  return {\n    volume: '',\n    averageEntryPrice: '',\n    margin: '',\n    marginHeld: '',\n    unrealizedPnl: '',\n    liquidationPrice: '',\n  };\n}\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n  useInfura,\n) => {\n  const { bToken: bTokenAddress } = getPoolConfig(poolAddress, bTokenId);\n  const balance = await bTokenFactory(chainId, bTokenAddress, useInfura).balanceOf(accountAddress)\n  return balance.toString()\n}\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId, useInfura) => { \n  const { bToken: bTokenAddress } = getPoolConfig(poolAddress, bTokenId);\n  const bToken = await bTokenFactory(chainId, bTokenAddress, useInfura)\n  return bToken.isUnlocked(accountAddress, poolAddress)\n}\n\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId, useInfura) => {\n  let price = priceCache.get(poolAddress, symbolId)\n  if (!price) {\n    price = await getOraclePrice(poolAddress, symbolId)\n    priceCache.set(poolAddress, symbolId, price)\n  }\n  let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n  if (!cache || !cache.multiplier) {\n    await _getFundingRate(chainId, poolAddress, symbolId, useInfura)\n    cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n  }\n  const { multiplier, feeRatio } = cache;\n  //console.log(volume, price, multiplier, feeRatio)\n  return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n}\n\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n  useInfura,\n) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress, useInfura);\n  const [price, symbolInfo ] = await Promise.all([\n    getOraclePrice(poolAddress, symbolId),\n    perpetualPool.getSymbol(symbolId),\n  ])\n  priceCache.set(poolAddress, symbolId, price)\n  const {multiplier} = symbolInfo\n  //console.log('m',multiplier.toString())\n  return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId, useInfura) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress, useInfura)\n  const poolconfigList = getFilteredPoolConfigList(poolAddress, null, symbolId)\n  let bTokenIdList = poolconfigList.map((i) => i.bTokenId)\n  let promiseList = []\n  for (let i=0; i<bTokenIdList.length; i++) {\n    promiseList.push(perpetualPool.getBToken(i))\n  }\n  const bTokenInfoList = await Promise.all(promiseList)\n  const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.discount).times(i.price)), bg(0))\n  const pnl = bTokenInfoList.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n  //console.log('pnl', pnl.toString())\n\n  const [price, symbolInfo, parameterInfo ] = await Promise.all([\n    getOraclePrice(poolAddress, symbolId),\n    perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n  ])\n  priceCache.set(poolAddress, symbolId, price)\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\n  const { minPoolMarginRatio } = parameterInfo;\n  const fundingRateArgs = [\n    tradersNetVolume,\n    price,\n    multiplier,\n    liquidity,\n    fundingRateCoefficient,\n  ]\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\n  // const liquidityUsedArgs = [\n  //   tradersNetVolume,\n  //   price,\n  //   multiplier,\n  //   liquidity,\n  //   minPoolMarginRatio,\n  // ]\n  const symbolConfigList = getFilteredPoolConfigList(poolAddress, '0')\n  let symbolIdList = symbolConfigList.map((i) => i.symbolId)\n  let promises = []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  const symbols = await Promise.all(promises)\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio))\n  }, bg(0))\n\n  //const liquidityUsed = liquidityUsedInAmount.div(liquidity)\n  const res = {\n    price,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    tradersNetVolume: tradersNetVolume.toString(),\n    liquidity: liquidity.toString(),\n    pnl: pnl.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    fundingRatePerBlock: fundingRatePerBlock,\n    fundingRate: fundingRate,\n    liquidityUsed: liquidityUsedInAmount.div(liquidity.plus(pnl)).abs(),\n  }\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\n  return res\n}\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId, useInfura) => {\n  try {\n    const res = await _getFundingRate(chainId, poolAddress, symbolId, useInfura)\n    const { fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume } = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: tradersNetVolume.toString()\n    };\n  } catch(err) {\n    console.log(err)\n  }\n  return {\n    fundingRate0: '',\n    fundingRatePerBlock: '',\n    liquidity: '',\n    volume: '',\n    tradersNetVolume: '',\n  };\n}\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n  useInfura,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = _getFundingRate(chainId, poolAddress, symbolId, useInfura)\n    }\n    const args = [\n      bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ]\n    let fundingRate1 = calculateFundingRate(...args)\n    fundingRate1 = processFundingRate(chainId, fundingRate1)\n    return {\n      fundingRate1: fundingRate1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(err)\n  }\n  return {\n    fundingRate1: '',\n  }\n}\n\nexport const getLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  symbolId,\n  useInfura,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = _getFundingRate(chainId, poolAddress, symbolId, useInfura)\n    }\n    return {\n      liquidityUsed0: res.liquidityUsed.times(100).toString(),\n    };\n  } catch(err) {\n    console.log(err)\n  }\n  return {\n    liquidityUsed0: '',\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n  useInfura,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = _getFundingRate(chainId, poolAddress, symbolId, useInfura)\n    }\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress, useInfura)\n    // const {pToken: pTokenAddress } = getPoolConfig(poolAddress, null, symbolId)\n    // const pToken = pTokenFactory(chainId, pTokenAddress, useInfura);\n    // const { volume } = pToken.getPosition(accountAddress, symbolId);\n    const symbolConfigList = getFilteredPoolConfigList(poolAddress, '0')\n    let symbolIdList = symbolConfigList.map((i) => i.symbolId)\n    let promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    let liquidityUsed0 = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume.plus(newNetVolume)).abs())\n      } else {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume).abs())\n      }\n    }, bg(0))\n    liquidityUsed0 = liquidityUsed0.times(res.minPoolMarginRatio)\n    //const liquidityUsed = bg(newNetVolume).times(res.price).times(res.multiplier).times(res.minPoolMarginRatio).div(res.liquidity)\n    const liquidityUsed1 = liquidityUsed0.div(bg(res.liquidity).plus(res.pnl))\n    return {\n      liquidityUsed1: liquidityUsed1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(err)\n  }\n  return {\n    liquidityUsed1: '',\n  }\n}\n\n\nexport const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId, useInfura) => {\n  try {\n    const bTokensConfigList = getFilteredPoolConfigList(poolAddress, null, symbolId)\n    const symbolsConfigList = getFilteredPoolConfigList(poolAddress, '0')\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress, useInfura)\n    const {pToken: pTokenAddress } = getPoolConfig(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress, useInfura);\n    let bTokenList = bTokensConfigList.map((i) => {\n      return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\n    })\n    let promiseList = []\n    for (let i=0; i<bTokenList.length; i++) {\n      promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress, useInfura).balanceOf(accountAddress))\n    }\n    const resultList = await Promise.all(promiseList)\n    for (let i=0; i<bTokenList.length; i++) {\n      bTokenList[i].walletBalance = resultList[i].toString()\n    }\n\n    let bTokenIdList = bTokensConfigList.map((i) => i.bTokenId)\n    let symbolIdList = symbolsConfigList.map((i) => i.symbolId)\n    const [margins, positions, parameterInfo] = await Promise.all([\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      perpetualPool.getParameters(),\n    ]);\n    const { minInitialMarginRatio } = parameterInfo;\n\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n    //console.log('margin', margin.toString())\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    const marginHeld = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs().times(minInitialMarginRatio))\n    }, bg(0))\n    //console.log('marginHeld', marginHeld.toString())\n\n    const pnl = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    //console.log('pnl', pnl.toString())\n\n    bTokenList = bTokenList.map((i, index) => {\n      if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\n        i.availableBalance = max(min(margin.minus(marginHeld).plus(pnl).div(bTokens[index].price).div(bTokens[index].discount), margins[index]), bg(0)).toString()\n      } else {\n        i.availableBalance = '-'\n      }\n      return i\n    })\n    return bTokenList\n  } catch(err) {\n    console.log(err)\n  }\n  return []\n}","import { deriToNatural } from '../utils';\nimport { perpetualPoolFactory } from '../factory';\nimport { getFilteredPoolConfigList, getPoolConfig} from '../config'\n\nimport { getRestServerConfig, DeriEnv } from '../../config';\n\nconst getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nconst fetchJson = async (url) => {\n  const resp = await fetch(url);\n  return await resp.json();\n};\n\nconst processTradeEvent = async (\n  perpetualPool,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier[parseInt(symbolId)],\n    feeRatio[parseInt(symbolId)]\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    //baseToken: bTokenSymbol,\n    symbolId,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  const symbolConfigList = getFilteredPoolConfigList(poolAddress, '0')\n  const symbolIdList = symbolConfigList.map((i) => i.symbolId)\n  //console.log('symbolIdList', symbolIdList);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\n\n  const filters = { owner: accountAddress };\n  let events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      perpetualPool,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => i)\n        .map((i) => {\n          return {\n            direction: i.direction.trim(),\n            //baseToken: i.baseToken.trim(),\n            symbolId: i.symbolId,\n            price: deriToNatural(i.price).toString(),\n            notional: deriToNatural(i.notional).toString(),\n            volume: deriToNatural(i.volume).toString(),\n            transactionFee: deriToNatural(i.transactionFee).toString(),\n            transactionHash: i.transactionHash,\n            time: i.time.toString(),\n          };\n        });\n    }\n      //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n\n      const {initialBlock} = getPoolConfig(poolAddress, null, symbolId)\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(err)\n  }\n  return []\n};\n","import { isOrderValid } from '../calculation';\nimport { getPoolConfig, getFilteredPoolConfigList } from '../config'\nimport {\n  bTokenFactory,\n  perpetualPoolRouterFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\nimport { getOraclePrice, getOracleInfo, bg } from '../utils';\n\nexport const unlock = async (chainId, poolAddress, accountAddress, bTokenId) => {\n   const { bToken: bTokenAddress } = getPoolConfig(poolAddress, bTokenId);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress)\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const { router: routerAddress } = getPoolConfig(poolAddress, bTokenId);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   let res;\n   try {\n     const tx = await perpetualPoolRouter.addMarginWithPrices(accountAddress, bTokenId, amount);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err };\n   }\n   return res;\n}\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const { router: routerAddress } = getPoolConfig(poolAddress, bTokenId);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   let res;\n   try {\n     const tx = await perpetualPoolRouter.removeMarginWithPrices(accountAddress, bTokenId, amount);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err };\n   }\n   return res;\n}\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId,\n  useInfura,\n) => {\n   const { router: routerAddress } = getPoolConfig(poolAddress);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress, useInfura);\n   const {pToken: pTokenAddress } = getPoolConfig(poolAddress, null, symbolId)\n   const pToken = pTokenFactory(chainId, pTokenAddress, useInfura);\n   const [price, symbolInfo, parameterInfo, positions] = await Promise.all([\n     getOraclePrice(poolAddress, symbolId),\n     perpetualPool.getSymbol(symbolId),\n     perpetualPool.getParameters(),\n     pToken.getPositions(accountAddress),\n     //pToken.getMargin(accountAddress, symbolId),\n   ]);\n\n   const { multiplier } = symbolInfo;\n   const { minInitialMarginRatio, minPoolMarginRatio} = parameterInfo;\n\n   const bTokenConfigList = getFilteredPoolConfigList(poolAddress, null, symbolId)\n   const bTokenIdList = bTokenConfigList.map((i) => i.bTokenId)\n   const margins = await pToken.getMargins(accountAddress)\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, i, index) => {\n      return accum.plus(bg(i.price).times(i.discount).times(margins[index]))\n    }, bg(0))\n\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount)), bg(0))\n    //console.log('liquidity', liquidity.toString())\n    const symbolConfigList = getFilteredPoolConfigList(poolAddress, '0')\n    let symbolIdList = symbolConfigList.map((i) => i.symbolId)\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    let marginHeld = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume.plus(newVolume)).abs())\n      } else {\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs())\n      }\n    }, bg(0))\n    marginHeld = marginHeld.times(minInitialMarginRatio)\n\n    //console.log('margin', margin.toString(), marginHeld.toString())\n    let liquidityUsed = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.tradersNetVolume.plus(newVolume)).times(a.price).times(a.multiplier).abs())\n      } else {\n        return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs())\n      }\n    }, bg(0))\n    liquidityUsed = liquidityUsed.times(minPoolMarginRatio)\n    //console.log('liquidityUsed', liquidityUsed.toString())\n\n    const pnl = bTokens.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n    console.log('pnl', pnl.toString())\n\n   const orderValidation = isOrderValid(\n     //price,\n     margin,\n     marginHeld,\n     liquidity.plus(pnl),\n     liquidityUsed,\n     //multiplier,\n     //minPoolMarginRatio,\n     //bg(newVolume),\n   )\n   let res;\n   if (orderValidation.success) {\n    try {\n      const tx = await perpetualPoolRouter.tradeWithPrices(accountAddress, symbolId, newVolume);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n   } else {\n     res = { success: false, error: orderValidation.error};\n   }\n   return res;\n}\n\nexport const closePosition = async (chainId, poolAddress, accountAddress, symbolId) => {\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig(poolAddress);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const pToken = pTokenFactory(chainId, pTokenAddress)\n   const { volume } = await pToken.getPosition(accountAddress, symbolId)\n   const newVolume = volume.negated()\n   let res;\n   if (!volume.eq(0)) {\n    try {\n      const tx = await perpetualPoolRouter.tradeWithPrices(accountAddress, symbolId, newVolume);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res\n}\n\nexport const depositMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const { router: routerAddress } = getPoolConfig(poolAddress, bTokenId);\n   const symbolList = getFilteredPoolConfigList(poolAddress, '0').map(c => c.symbolId)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   let res;\n   try {\n     const promises = symbolList.map(async(s) => {\n       return await getOracleInfo(poolAddress, s)\n     })\n     const prices = await Promise.all(promises)\n     const priceInfos = prices.map((p, index) => {\n       return [symbolList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n     })\n     const tx = await perpetualPoolRouter.addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err };\n   }\n   return res;\n}\n\nexport const withdrawMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const { router: routerAddress } = getPoolConfig(poolAddress, bTokenId);\n   const symbolList = getFilteredPoolConfigList(poolAddress, '0').map(c => c.symbolId)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   let res;\n   try {\n     const promises = symbolList.map(async(s) => {\n       return await getOracleInfo(poolAddress, s)\n     })\n     const prices = await Promise.all(promises)\n     const priceInfos = prices.map((p, index) => {\n       return [symbolList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n     })\n     const tx = await perpetualPoolRouter.removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err };\n   }\n   return res;\n}\n\nexport const tradeWithMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId,\n  useInfura,\n) => {\n   const { router: routerAddress } = getPoolConfig(poolAddress);\n   const symbolList = getFilteredPoolConfigList(poolAddress, '0').map(c => c.symbolId)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress, useInfura);\n   const {pToken: pTokenAddress } = getPoolConfig(poolAddress, null, symbolId)\n   const pToken = pTokenFactory(chainId, pTokenAddress, useInfura);\n   const [price, symbolInfo, parameterInfo, positions] = await Promise.all([\n     getOraclePrice(poolAddress, symbolId),\n     perpetualPool.getSymbol(symbolId),\n     perpetualPool.getParameters(),\n     pToken.getPositions(accountAddress),\n     //pToken.getMargin(accountAddress, symbolId),\n   ]);\n\n   const { multiplier } = symbolInfo;\n   const { minInitialMarginRatio, minPoolMarginRatio} = parameterInfo;\n\n   const bTokenConfigList = getFilteredPoolConfigList(poolAddress, null, symbolId)\n   const bTokenIdList = bTokenConfigList.map((i) => i.bTokenId)\n   const margins = await pToken.getMargins(accountAddress)\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, i, index) => {\n      return accum.plus(bg(i.price).times(i.discount).times(margins[index]))\n    }, bg(0))\n\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount)), bg(0))\n    //console.log('liquidity', liquidity.toString())\n    const symbolConfigList = getFilteredPoolConfigList(poolAddress, '0')\n    let symbolIdList = symbolConfigList.map((i) => i.symbolId)\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    let marginHeld = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume.plus(newVolume)).abs())\n      } else {\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs())\n      }\n    }, bg(0))\n    marginHeld = marginHeld.times(minInitialMarginRatio)\n\n    //console.log('margin', margin.toString(), marginHeld.toString())\n    let liquidityUsed = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.tradersNetVolume.plus(newVolume)).times(a.price).times(a.multiplier).abs())\n      } else {\n        return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs())\n      }\n    }, bg(0))\n    liquidityUsed = liquidityUsed.times(minPoolMarginRatio)\n    //console.log('liquidityUsed', liquidityUsed.toString())\n\n    const pnl = bTokens.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n    console.log('pnl', pnl.toString())\n\n   const orderValidation = isOrderValid(\n     //price,\n     margin,\n     marginHeld,\n     liquidity.plus(pnl),\n     liquidityUsed,\n     //multiplier,\n     //minPoolMarginRatio,\n     //bg(newVolume),\n   )\n   let res;\n   if (orderValidation.success) {\n    try {\n     promises = symbolList.map(async(s) => {\n       return await getOracleInfo(poolAddress, s)\n     })\n     const prices = await Promise.all(promises)\n     const priceInfos = prices.map((p, index) => {\n       return [symbolList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n     })\n      const tx = await perpetualPoolRouter.tradeWithPrices(accountAddress, symbolId, newVolume, priceInfos);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n   } else {\n     res = { success: false, error: orderValidation.error};\n   }\n   return res;\n}\n\nexport const closePositionWithPrices = async (chainId, poolAddress, accountAddress, symbolId) => {\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig(poolAddress);\n   const symbolList = getFilteredPoolConfigList(poolAddress, '0').map(c => c.symbolId)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const pToken = pTokenFactory(chainId, pTokenAddress)\n   const { volume } = await pToken.getPosition(accountAddress, symbolId)\n   const newVolume = volume.negated()\n   let res;\n   if (!volume.eq(0)) {\n    try {\n     const promises = symbolList.map(async(s) => {\n       return await getOracleInfo(poolAddress, s)\n     })\n     const prices = await Promise.all(promises)\n     const priceInfos = prices.map((p, index) => {\n       return [symbolList[index], p.timestamp, p.price, parseInt(p.v).toString(), p.r, p.s]\n     })\n      const tx = await perpetualPoolRouter.tradeWithPrices(accountAddress, symbolId, newVolume, priceInfos);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res\n}","import Web3 from 'web3';\nimport { metaMaskWeb3 } from '../factory/web3';\nimport { hexToNumber } from '../utils';\n\n/**\n * check ethereum client status for web browser\n * @function\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.isMetaMask - check if it is MetaMask client\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const hasWallet = () => {\n  if (window.ethereum && window.ethereum.isMetaMask) {\n    return { success: true, isMetaMask: true };\n  }\n  return {\n    success: false,\n    error:\n      'The browser is not support ethereum wallet, please install MetaMask to proceed.',\n  };\n};\n\n/**\n *  Connect wallet using MetaMask account\n * @async\n * @function\n * @param {function} [handleChainChanged] - Callback when chainId changed\n * @param {function} [handleAccountChanged]  - callback when account changed\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.chainId - chain Id\n * @returns {string} response.account - account address\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const connectWallet = async (\n  handleChainChanged,\n  handleAccountChanged\n) => {\n  if (typeof window.ethereum !== undefined) {\n    const accounts = await window.ethereum.request({\n      method: 'eth_requestAccounts',\n    });\n    const chainId = parseInt(\n      await window.ethereum.request({ method: 'net_version' })\n    );\n    // const chainId = hexToNumber(\n    //   await window.ethereum.request({ method: 'eth_chainId' })\n    // );\n    const account = Array.isArray(accounts) && accounts[0];\n\n    // await web3.eth.requestAccounts().then(console.log)\n    window.ethereum.on('accountsChanged', (accounts) => {\n      let account;\n      if (accounts.length > 0) {\n        account = accounts[0];\n      } else {\n        account = '';\n      }\n      if (typeof handleAccountChanged === 'function') {\n        handleAccountChanged(account);\n      } else {\n        window.location.reload();\n      }\n      //console.log('accountChanged', account);\n    });\n    window.ethereum.on('chainChanged', (chainId) => {\n      let res = hexToNumber(chainId);\n      if (typeof handleChainChanged === 'function') {\n        handleChainChanged(res);\n      } else {\n        window.location.reload();\n      }\n      //console.log('chainChanged', res);\n    });\n    return { success: true, account, chainId };\n  }\n  return {\n    success: false,\n    error: 'Cannot connect wallet, please install MetaMask.',\n  };\n};\n\n/**\n * Get balance of the connected account\n * @async\n * @method\n * @param {string} chainId - Id of the chain\n * @param {string} accountAddress - Address of the connected account\n * @returns {string} Account balance\n */\nexport const getUserWalletBalance = async (chainId, walletAddress) => {\n  //const web3 = web3Factory(chainId);\n  const web3 = metaMaskWeb3();\n  const balance = await web3.eth.getBalance(walletAddress);\n  const res = Web3.utils.fromWei(balance);\n  return res;\n};\n","import {\n  getSlpLiquidityInfo,\n  getSlpWalletBalance,\n  isSlpUnlocked,\n  unlockSlp,\n  // addSlpLiquidity,\n  // removeSlpLiquidity,\n} from './slpPoolApi';\nimport {\n  getClp2LiquidityInfo,\n  getClp2WalletBalance,\n  isClp2Unlocked,\n  unlockClp2,\n  // addSlpLiquidity,\n  // removeSlpLiquidity,\n} from './clp2PoolApi';\nimport {\n  getClpLiquidityInfo,\n  getClpWalletBalance,\n  isClpUnlocked,\n  unlockClp,\n  // addClpLiquidity,\n  // removeClpLiquidity,\n} from './clpPoolApi';\n\nimport {\n  addSlpLiquidity2 as addSlpLiquidity,\n  removeSlpLiquidity2 as removeSlpLiquidity,\n  addClpLiquidity2 as addClpLiquidity,\n  removeClpLiquidity2 as removeClpLiquidity,\n  addClp2Liquidity2 as addClp2Liquidity,\n  removeClp2Liquidity2 as removeClp2Liquidity,\n} from './contractTransactionApiV2'\nimport { getLpContractAddress } from '../utils';\n\n/**\n * Get liquidity info of LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getLpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpLiquidityInfo(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Add liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp') {\n    return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp2') {\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\n  } else {\n    console.log(`addLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Remove liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await removeSlpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp') {\n    return await removeClpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp2') {\n    return await removeClp2Liquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else {\n    console.log(`removeLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Check account is unlocked in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await isClpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`isLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Unlock the account in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await unlockSlp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await unlockClp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await unlockClp2(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`unlockLp(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Get account balance in lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getLpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpWalletBalance(): invalid lp type ${type}`);\n  }\n};\n","import { makeObservable, observable, action } from \"mobx\";\nimport { getContractAddressConfig, DeriEnv } from \"../lib/web3js/indexV2\";\n\nexport default class Config {\n  all = []\n\n  constructor(){\n    makeObservable(this,{\n      all : observable,\n      setAll : action\n    })\n  }\n\n  load(version){\n    const current = version && version.current;\n    let configs = getContractAddressConfig(DeriEnv.get(),current)\n    if(version){\n      configs = configs.filter(c => c.version === version.current)\n      //v2 不需要展示base token,需要合并相同的base token\n      if(version.isV2){\n        configs = configs.reduce((total,cur) => {\n          const pos = total.findIndex(c => c.symbolId === cur.symbolId);\n          if(pos === -1){\n            total.push(cur)\n          }\n          return total;\n        },[])\n      }\n    }\n    this.setAll(configs)\n    return configs;\n  }\n\n  setAll(all){\n    this.all = all;\n  }\n  \n}","const { getContractAddressConfig:getContractAddressConfig2} = require(\"../config\");\nconst { getPoolConfigList:getPoolConfigListV2} = require(\"../v2/config\")\n\nexport const getContractAddressConfig = (env = 'dev', version) => {\n  if (!version || version === '1' || version === 'v1') {\n    return getContractAddressConfig2(env)\n  } else if (version === '2' || version === 'v2') {\n    return getPoolConfigListV2(env).concat(getContractAddressConfig2(env))\n  } else {\n    throw new Error(`getPoolContractAddress: invalid version: ${version}`)\n  }\n}","import { getLiquidityInfo2 } from '../api/restApi';\nimport { getPoolLiquidity as getPoolLiquidity2 } from '../api/databaseApi';\nimport { \n  getLiquidityInfo as getLiquidityInfoV2,\n  getPoolLiquidity as getPoolLiquidityV2,\n } from '../v2';\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  if (bTokenId === undefined) {\n    return getLiquidityInfo2(chainId, poolAddress, accountAddress)\n  } else {\n    return getLiquidityInfoV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n};\n\nexport const getPoolLiquidity = async (\n  chainId,\n  poolAddress,\n  bTokenId,\n) => {\n  if (bTokenId === undefined) {\n    return getPoolLiquidity2(chainId, poolAddress)\n  } else {\n    return getPoolLiquidityV2(chainId, poolAddress, bTokenId)\n  }\n};","import {addLiquidity2, removeLiquidity2 } from '../api/contractTransactionApiV2';\nimport {\n  // addLiquidity as addLiquidityV2,\n  // removeLiquidity as removeLiquidityV2\n  addLiquidityWithPrices as addLiquidityV2,\n  removeLiquidityWithPrices as removeLiquidityV2,\n} from '../v2';\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n  if (bTokenId === undefined) {\n    return addLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return addLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n}\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n  if (bTokenId === undefined) {\n    return removeLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return removeLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n    );\n  }\n}\n","import {\n  getPositionInfo as getPositionInfo2,\n  isUnlocked as isUnlocked2,\n  getEstimatedMargin as getEstimatedMargin2,\n  getEstimatedFee as getEstimatedFee2,\n  getEstimatedFundingRate as getEstimatedFundingRate2,\n  getEstimatedLiquidityUsed as getEstimatedLiquidityUsed2,\n  getWalletBalance as getWalletBalance2,\n} from '../api/contractQueryApi'\n\nimport {\n  getSpecification2,\n  getFundingRate2,\n  getLiquidityUsed2,\n  getFundingRateCache2,\n} from '../api/restApi'\n//import { bTokenFactory } from '../factory/contracts'\n\nimport {\n  getPositionInfo as getPositionInfoV2,\n  isUnlocked as isUnlockedV2,\n  getEstimatedMargin as getEstimatedMarginV2,\n  getEstimatedFee as getEstimatedFeeV2,\n  getEstimatedFundingRate as getEstimatedFundingRateV2,\n  getEstimatedLiquidityUsed as getEstimatedLiquidityUsedV2,\n  getSpecification as getSpecificationV2,\n  getWalletBalance as getWalletBalanceV2,\n  getFundingRate as getFundingRateV2,\n  getLiquidityUsed as getLiquidityUsedV2,\n  getFundingRateCache as getFundingRateCacheV2,\n} from '../v2'\n\n\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  bTokenId,\n  symbolId,\n) => {\n  if (symbolId === undefined) {\n    return getSpecification2(chainId, poolAddress)\n  } else {\n    return getSpecificationV2(chainId, poolAddress, bTokenId, symbolId)\n  }\n}\n\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\n  if (symbolId === undefined) {\n    return getPositionInfo2(chainId, poolAddress, accountAddress)\n  } else {\n    return getPositionInfoV2(chainId, poolAddress, accountAddress, symbolId)\n  }\n}\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  if (bTokenId === undefined) {\n    return getWalletBalance2(chainId, poolAddress, accountAddress)\n  } else {\n    return getWalletBalanceV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n}\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => { \n  if (bTokenId === undefined) {\n    return isUnlocked2(chainId, poolAddress, accountAddress)\n  } else {\n    return isUnlockedV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n}\n\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\n  if (symbolId === undefined) {\n    return getEstimatedFee2(chainId, poolAddress, volume)\n  } else {\n    return getEstimatedFeeV2(chainId, poolAddress, volume, symbolId)\n  }\n}\n\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  if (symbolId === undefined) {\n    return getEstimatedMargin2(chainId, poolAddress, accountAddress, volume, leverage)\n  } else {\n    return getEstimatedMarginV2(chainId, poolAddress, accountAddress, volume, leverage, symbolId)\n  }\n}\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  if (symbolId === undefined) {\n    return getFundingRate2(chainId, poolAddress)\n  } else {\n    return getFundingRateV2(chainId, poolAddress, symbolId)\n  }\n}\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  if (symbolId === undefined) {\n    return getEstimatedFundingRate2(chainId, poolAddress, newNetVolume)\n  } else {\n    return getEstimatedFundingRateV2(chainId, poolAddress, newNetVolume, symbolId)\n  }\n}\n\nexport const getLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  symbolId\n) => {\n  if (symbolId === undefined) {\n    return getLiquidityUsed2(chainId, poolAddress)\n  } else {\n    return getLiquidityUsedV2(chainId, poolAddress, symbolId)\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  if (symbolId === undefined) {\n    return getEstimatedLiquidityUsed2(chainId, poolAddress, newNetVolume)\n  } else {\n    return getEstimatedLiquidityUsedV2(chainId, poolAddress, newNetVolume, symbolId)\n  }\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  if (symbolId === undefined) {\n    return getFundingRateCache2(chainId, poolAddress)\n  } else {\n    return getFundingRateCacheV2(chainId, poolAddress, symbolId)\n  }\n}\n","import { unlock as unlock2 } from '../api/contractTransactionApi';\nimport {\n  tradeWithMargin2,\n  closePosition2,\n  depositMargin2,\n  withdrawMargin2,\n} from '../api/contractTransactionApiV2';\nimport {\n  unlock as unlockV2,\n  // tradeWithMargin as tradeWithMarginV2,\n  // closePosition as closePositionV2,\n  // depositMargin as depositMarginV2,\n  // withdrawMargin as withdrawMarginV2,\n  tradeWithMarginWithPrices as tradeWithMarginV2,\n  depositMarginWithPrices as depositMarginV2,\n  withdrawMarginWithPrices as withdrawMarginV2,\n  closePositionWithPrices as closePositionV2,\n} from '../v2';\n\nexport const unlock = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  if(bTokenId === undefined) {\n    return unlock2(chainId, poolAddress, accountAddress)\n  } else {\n    return unlockV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n  if(bTokenId === undefined) {\n    return depositMargin2(chainId, poolAddress, accountAddress, amount)\n  } else {\n    return depositMarginV2(chainId, poolAddress, accountAddress, amount, bTokenId)\n  }\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n  if(bTokenId === undefined) {\n    return withdrawMargin2(chainId, poolAddress, accountAddress, amount)\n  } else {\n    return withdrawMarginV2(chainId, poolAddress, accountAddress, amount, bTokenId)\n  }\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId,\n) => {\n  if(symbolId === undefined) {\n    return tradeWithMargin2(chainId, poolAddress, accountAddress, newVolume)\n  } else {\n    return tradeWithMarginV2(chainId, poolAddress, accountAddress, newVolume, symbolId)\n  }\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n) => {\n  if(symbolId === undefined) {\n    return closePosition2(chainId, poolAddress, accountAddress)\n  } else {\n    return closePositionV2(chainId, poolAddress, accountAddress, symbolId)\n  }\n};\n","\nimport {getTradeHistory2} from '../api/restApi';\nimport { \n  getTradeHistory as getTradeHistoryV2\n } from '../v2';\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n) => {\n  if (symbolId === undefined) {\n    return getTradeHistory2(chainId, poolAddress, accountAddress);\n  } else {\n    return getTradeHistoryV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      symbolId,\n    );\n  }\n}","import { bg, getAnnualBlockNumber } from '../utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  return bg(\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\n  ).abs();\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\n  fundingRateCoefficient;\n}\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getAnnualBlockNumber(chainId);\n  //console.log(annualBlockCount);\n  return bg(fundingRate).times(annualBlockCount);\n};\n","import { bg, max, min } from '../utils';\n\nexport * from './fundingRate';\n\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  lTokenTotalSupply.eq(0) ? bg(0) : liquidity.div(lTokenTotalSupply);\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  tradersNetVolume,\n  tradersNetCost,\n  multiplier,\n  minPoolMarginRatio,\n  price\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const value = tradersNetVolume.times(price).times(multiplier);\n  const removable = liquidity\n    .plus(tradersNetCost)\n    .minus(value)\n    .minus(value.abs().times(minPoolMarginRatio));\n  const shares = max(min(lTokenBalance, removable.div(shareValue)), bg(0));\n  return shares;\n};\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return volume.times(price).times(multiplier).minus(cost);\n}\n\nexport const calculateMaxWithdrawMargin = (\n  price,\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  if (volume.eq(0)) {\n    return margin;\n  }\n  const held = calculateMarginHeld(\n    price,\n    volume,\n    multiplier,\n    minInitialMarginRatio\n  );\n  const pnl = calculatePnl(price, volume, multiplier, cost);\n  const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\n  return withdrawable;\n};\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = cost.minus(margin).div(volume).div(multiplier);\n  let res = volume.gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  price,\n  margin,\n  volume,\n  liquidity,\n  tradersNetVolume,\n  multiplier,\n  minPoolMarginRatio,\n  minInitialMarginRatio,\n  newVolume,\n  amount\n) => {\n  const minMargin = volume\n    .plus(newVolume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(minInitialMarginRatio);\n  const poolMaxVolume = liquidity\n    .div(minPoolMarginRatio)\n    .div(price)\n    .div(multiplier);\n  if (margin.plus(amount).gte(minMargin)) {\n    if (\n      newVolume.lte(poolMaxVolume.minus(tradersNetVolume)) &&\n      newVolume.gte(poolMaxVolume.negated().minus(tradersNetVolume))\n    ) {\n      return { success: true };\n    }\n    return { success: false, message: 'Pool insufficient liquidity' };\n  }\n  return { success: false, message: 'Trader insufficient margin' };\n};\n","import { databaseFactory, databaseAirdropFactory } from '../factory/contracts';\nimport {\n  toChecksumAddress,\n  getNetworkName,\n  deriToString,\n  deriToBool,\n  deriToNatural,\n  getPoolContractAddress,\n} from '../utils';\n// import { getLiquidityUsed } from \"./contractApi\";\n\nexport const getUserInfo = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v`,\n      `${userAddress}.claim.r`,\n      `${userAddress}.claim.s`,\n      `${userAddress}.claim.valid`,\n    ])\n    .catch((err) => console.log('getUserInfo', err));\n  if (res) {\n    const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v: deriToString(v),\n      r,\n      s,\n      valid: deriToBool(valid),\n    };\n  }\n};\n\nexport const getUserInfoHarvest = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.harvest.lp`,\n      `${userAddress}.claim.harvest.trade`,\n    ])\n    .catch((err) => console.log('getUserInfoHarvest', err));\n  if (res) {\n    const [harvestLp, harvestTrade] = res;\n    return {\n      lp: deriToNatural(harvestLp).toString(),\n      trade: deriToNatural(harvestTrade).toString(),\n    };\n  }\n};\n\nexport const getUserInfoTotal = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([`${userAddress}.claim.total`])\n    .catch((err) => console.log('getUserInfoTotal', err));\n  if (res) {\n    const [total] = res;\n    return {\n      total: deriToNatural(total).toString(),\n    };\n  }\n};\n\n/**\n * Get user claim info from database\n * @async\n * @method\n * @param {string} userAddress - account address\n * @returns {Object} response\n * @returns {string} resposne.chainId\n * @returns {BigNumber} response.amount\n * @returns {string} response.deadline\n * @returns {string} response.nonce\n * @returns {string} response.v\n * @returns {string} response.r\n * @returns {string} response.s\n * @returns {bool} response.valid\n * @returns {BigNumber} response.lp\n * @returns {BigNumber} response.trade\n * @returns {string} response.total\n */\nexport const getUserInfoAll = async (userAddress) => {\n  const userInfo = await getUserInfo(userAddress);\n  const userInfoHarvest = await getUserInfoHarvest(userAddress);\n  const userInfoTotal = await getUserInfoTotal(userAddress);\n  return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\n};\n\n/**\n * Get pool liquidity\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {symbol} response.symbol\n */\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    const { symbol } = getPoolContractAddress(chainId, poolAddress)\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol,\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get pool apy\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  //const [poolAddress] = getPoolContractAddress(chainId, bSymbol);\n  //console.log('getPoolInfoApy', chainId, poolAddress);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.apy2`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, apy2, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        apy2: deriToNatural(apy2).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\n// export const getClpPoolInfoApy = async (chainId, poolAddress) => {\n//   const db = databaseFactory(true);\n//   try {\n//     const poolNetwork = getNetworkName(chainId);\n//     const res = await db\n//       .getValues([\n//         `${poolNetwork}.${poolAddress}.apy`,\n//         `${poolNetwork}.${poolAddress}.apy2`,\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\n//       ])\n//       .catch((err) => console.log('getPoolInfoApy', err));\n//     if (res) {\n//       const [apy, apy2, volume1h, volume24h] = res;\n//       return {\n//         apy: deriToNatural(apy).toString(),\n//         apy2: deriToNatural(apy2).toString(),\n//         volume1h: deriToNatural(volume1h).toString(),\n//         volume24h: deriToNatural(volume24h).toString(),\n//       };\n//     }\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n\n/**\n * Get user info of the pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} userAddress\n * @returns {Object} response\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\n  const db = databaseFactory(true);\n  //const {poolAddress} = getPoolContractAddress(chainId, poolAddress);\n  userAddress = toChecksumAddress(userAddress);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getUserInfoInPool', err));\n    if (res) {\n      const [volume1h, volume24h] = res;\n      return {\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\n  const db = databaseAirdropFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v1`,\n      `${userAddress}.claim.r1`,\n      `${userAddress}.claim.s1`,\n      `${userAddress}.claim.v2`,\n      `${userAddress}.claim.r2`,\n      `${userAddress}.claim.s2`,\n      `${userAddress}.claim.valid`,\n      // `${userAddress}.claim.harvest.lp`,\n      // `${userAddress}.claim.harvest.trade`,\n      // `${userAddress}.claim.total`,\n    ])\n    .catch((err) => console.log('getUserInfoAllForAirDrop', err));\n  if (res) {\n    const [\n      chainId,\n      amount,\n      deadline,\n      nonce,\n      v1,\n      r1,\n      s1,\n      v2,\n      r2,\n      s2,\n      valid,\n      // harvestLp,\n      // harvestTrade,\n      // total,\n    ] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v1: deriToString(v1),\n      r1,\n      s1,\n      v2: deriToString(v2),\n      r2,\n      s2,\n      valid: deriToBool(valid),\n      // lp: deriToNatural(harvestLp),\n      // trade: deriToNatural(harvestTrade),\n      // total: deriToString(total),\n    };\n  }\n};\n","import {\n  getPoolContractAddress,\n  naturalToDeri,\n  deriToNatural,\n  hexToString,\n  toChecksumAddress,\n  hexToNumber,\n  hexToNumberString,\n} from '../utils';\nimport { databaseFactory, perpetualPoolFactory } from '../factory/contracts';\n\nconst processTradeEvent = async (\n  perpetualPool,\n  bTokenSymbol,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier,\n    feeRatio\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  // console.log(JSON.stringify(res))\n  return res;\n};\n\nconst processLiquidateEvent = async (\n  info,\n  txHash,\n  bTokenSymbol,\n  multiplier\n) => {\n  // console.log(info)\n  const volume = deriToNatural(info.volume).abs();\n  // const cost = deriToNatural(info.cost).abs()\n  // const margin = info.margin\n  const timestamp = `${info.timestamp}000`;\n  const price = deriToNatural(info.price);\n  // const liquidator = info.liquidator\n  // const reward = info.reward\n  const national = volume.times(price).times(multiplier);\n  // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\n\n  const res = {\n    direction: 'Liquidation',\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: national.toString(),\n    volume: volume.toString(),\n    transactionFee: '0',\n    transactionHash: txHash.toString(),\n    time: timestamp,\n    // cost: naturalToDeri(cost).toString(),\n    // margin: margin.toString(),\n    // liquidator,\n    // reward: reward.toString(),\n  };\n  return res;\n};\n\n/**\n * Get the user trade history\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n * @returns {string} response[].direction\n * @returns {string} response[].baseToken\n * @returns {string} response[].price\n * @returns {string} response[].notional\n * @returns {string} response[].volume\n * @returns {string} response[].transactionFee\n * @returns {string} response[].time - Timestamp of the trade\n */\n\nexport const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\n  const keyMeta = `${chainId}.${poolAddress}`;\n  const db = databaseFactory();\n  let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\n    db.getValues([`${keyMeta}.tradeHistoryBlock`]),\n    db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\n  ]);\n  tradeFromBlock = hexToNumber(tradeFromBlock[0]);\n  liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [\n      tradeHistoryOffline,\n      tradeHistoryOnline,\n      liquidateHistoryOffline,\n      liquidateHistoryOnline,\n    ] = await Promise.all([\n      getTradeHistoryOffline(chainId, poolAddress, accountAddress),\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n      .concat(liquidateHistoryOnline)\n      .concat(tradeHistoryOffline)\n      .concat(liquidateHistoryOffline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolContractAddress(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n\n// get trade history combined from cache and from online pull\nconst getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\n  // console.log(chainId, poolAddress, accountAddress)\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.trade`;\n  const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const tradeHistoryLength = keyArray.length / 8;\n      // console.log(`trade history length: ${tradeHistoryLength}`)\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < tradeHistoryLength; i++) {\n        const indexBase = i * 8;\n        //console.log(resp[indexBase + 6].trim());\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n\n// get trade history online from the Block number\nexport const getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolContractAddress(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  /// let { initialBlock:fromBlock} = getPoolContractAddress(chainId, poolAddress)\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const {\n    multiplier,\n    feeRatio,\n    minInitialMarginRatio,\n  } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processTradeEvent(\n      perpetualPool,\n      bTokenSymbol,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      minInitialMarginRatio\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get liquidate history online from the Block number\nexport const getLiquidateHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolContractAddress(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Liquidate',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const { multiplier } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processLiquidateEvent(\n      item.returnValues,\n      item.transactionHash,\n      bTokenSymbol,\n      multiplier\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get trade history combined from cache and from online pull\nconst getLiquidateHistoryOffline = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.liquidate`;\n  const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const liquidateHistoryLength = keyArray.length / 8;\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < liquidateHistoryLength; i++) {\n        const indexBase = i * 8;\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n","// const\nimport { getRestServerConfig, DeriEnv } from '../config';\nimport { bg, getPoolContractAddress, deriToNatural } from '../utils';\nimport {\n  getLiquidateHistoryOnline,\n  getTradeHistoryOnline,\n} from './tradeHistoryApi';\n\nconst getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nconst fetchJson = async (url) => {\n  const resp = await fetch(url);\n  return await resp.json();\n};\n\n/**\n * Get specification from REST API, please refer {@link getSpecification}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getSpecification2 = async (chainId, poolAddress) => {\n  console.log('hit');\n  const res = await fetchJson(`${getHttpBase()}/specification/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate from REST API, please refer {@link getFundingRate}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRate2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/funding_rate/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity used from REST API, please refer {@link getLiquidityUsed}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getLiquidityUsed2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/liquidity_used/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate cache from REST API, it used to 'fundingRateCache.update(chainId, poolAddress, result)'\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRateCache2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/funding_rate_cache/${poolAddress}`\n  );\n  if (res && res.success) {\n    let result = res.data;\n    result.price = bg(result.price);\n    result.fundingRate = bg(result.fundingRate);\n    result.liquidityUsed = bg(result.liquidityUsed);\n    return result;\n  }\n  return res;\n};\n\n/**\n * Get position info from REST API, please refer {@link getPositionInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getPositionInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/position_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity info from REST API, please refer {@link getLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance from REST API, please refer {@link getWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity of the slp pool from REST API, please refer {@link getSlpLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the slp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getClpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the deri pool from REST API, please refer {@link getDeriBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getDeriBalance2 = async (chainId, poolAddress, accountAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/deri_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get the user trade history from REST API, please refer {@link getTradeHistory}\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n */\nexport const getTradeHistory2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let tradeFromBlock, liquidateFromBlock, tradeHistory;\n  const res = await fetchJson(\n    `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n    liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\n    tradeHistory = res.data.tradeHistory;\n  }\n  tradeHistory = tradeHistory.filter((i) => i).map((i) => {\n    return {\n      direction: i.direction.trim(),\n      baseToken: i.baseToken.trim(),\n      price: deriToNatural(i.price).toString(),\n      notional: deriToNatural(i.notional).toString(),\n      volume: deriToNatural(i.volume).toString(),\n      transactionFee: deriToNatural(i.transactionFee).toString(),\n      transactionHash: i.transactionHash,\n      time: i.time.toString(),\n    };\n  });\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n      .concat(liquidateHistoryOnline)\n      .concat(tradeHistory);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolContractAddress(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n","import {\n  bTokenFactory,\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n  miningVaultPoolFactory,\n  miningVaultRouterFactory,\n  wormholeFactory,\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory/contracts';\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from './databaseApi';\nimport {\n  getPoolContractAddress,\n  getMiningVaultContractAddress,\n  getBTCUSDPrice,\n  bg,\n  naturalToDeri,\n  BigNumber,\n  format,\n  getDeriContractAddress,\n} from '../utils';\nimport {\n  getMiningVaultRouterContractAddress\n} from '../config'\nimport {\n  calculateMaxRemovableShares,\n  calculateMaxWithdrawMargin,\n  isOrderValid,\n} from '../calculation';\n\n/**\n * Unlock the account in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Deposit margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string|number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\n};\n\n/**\n * Withdraw margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n  const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\n\n  const maxWithdrawMargin = calculateMaxWithdrawMargin(\n    price,\n    volume,\n    margin,\n    cost,\n    multiplier,\n    minInitialMarginRatio\n  );\n  if (bg(amount).lte(maxWithdrawMargin)) {\n    try {\n      const tx = await pPool._transactPool(\n        'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'amount exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Mint in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const decimals = await bToken.decimals();\n  const BONE = 10 ** decimals;\n  amount = format(new BigNumber(amount).multipliedBy(BONE));\n  let res;\n  try {\n    const tx = await bToken._transact('mint', [amount], accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Add liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await pPool._transactPool(\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n      [naturalToDeri(amount)],\n      accountAddress\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} shares\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares\n) => {\n  const { lTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const {\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n  } = await pPool.getStateValues();\n\n  const maxRemovableShares = calculateMaxRemovableShares(\n    lTokenBalance,\n    lTokenTotalSupply,\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n    multiplier,\n    minPoolMarginRatio,\n    price\n  );\n  let res;\n  if (bg(shares).lte(maxRemovableShares)) {\n    try {\n      const tx = await pPool._transactPool(\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(shares)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'shares exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Trade with margin in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} newVolume\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minPoolMarginRatio,\n  } = await pPool.getParameters();\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\n  let res;\n  const orderValidation = isOrderValid(\n    price,\n    margin,\n    volume,\n    liquidity,\n    tradersNetVolume,\n    multiplier,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    bg(newVolume),\n    bg(amount)\n  );\n  if (orderValidation.success) {\n    try {\n      const tx = await pPool._transactPool(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.message };\n  }\n  return res;\n};\n\n/**\n * Close position in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  let { volume } = await pToken.getPositionInfo(accountAddress);\n  volume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const tx = await pPool._transactPool(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(volume), '0'],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n\n/**\n * Mint DToken in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDToken = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAll(accountAddress);\n  const amount = naturalToDeri(userInfo.amount);\n  const { deadline } = userInfo;\n  const { nonce } = userInfo;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultContractAddress(chainId);\n    if (miningVaultAddress) {\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\n      //miningVault.setAccount(accountAddress);\n      try {\n        const tx = await miningVault.mintDToken(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * freeze Deri in current wormhole pool to the specified chain\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @param {string} toChainId\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\n  const { wormholeAddress } = getDeriContractAddress(chainId);\n  const wormhole = wormholeFactory(chainId, wormholeAddress);\n  //wormhole.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await wormhole.freeze(accountAddress, amount, toChainId);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Deri in wormhole pool\n * @async\n * @method\n * @param {string} toChainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDeri = async (toChainId, accountAddress) => {\n  let res;\n  const databaseWormhole = databaseWormholeFactory(true);\n  // const userInfo = await getUserInfoAll(accountAddress);\n  const userInfo = await databaseWormhole.signature(accountAddress);\n  // console.log(userInfo)\n  const { amount } = userInfo;\n  const { fromChainId } = userInfo;\n  const { fromWormhole } = userInfo;\n  const fromNonce = userInfo.nonce;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const { wormholeAddress } = getDeriContractAddress(toChainId);\n    if (wormholeAddress) {\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\n      //wormhole.setAccount(accountAddress);\n      try {\n        const tx = await wormhole.mintDeri(\n          accountAddress,\n          amount,\n          fromChainId,\n          fromWormhole,\n          fromNonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the wormhole address in chain ${fromChainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * Unlock the account in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockDeri = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriContractAddress(chainId);\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  let res;\n  try {\n    const tx = await deri.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Airdrop in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintAirdrop = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAllForAirDrop(accountAddress);\n  const amount = naturalToDeri(userInfo.amount).toString();\n  const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultRouterContractAddress(chainId);\n    // console.log(\"miningVaultAddress\", miningVaultAddress)\n    // console.log(\"userInfo\", userInfo)\n    if (miningVaultAddress) {\n      const miningVaultRouter = miningVaultRouterFactory(\n        chainId,\n        miningVaultAddress\n      );\n      try {\n        const tx = await miningVaultRouter.mint(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v1,\n          r1,\n          s1,\n          v2,\n          r2,\n          s2\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault router address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n","export {\n  DeriEnv,\n  //getContractAddressConfig,\n  getLpContractAddressConfig,\n  getSlpContractAddressConfig,\n} from './config';\nexport * from './utils';\nexport * from './calculation';\n\nexport * from './api/apiGlobals';\nexport * from './api/factoryApi';\nexport * from './api/walletApi';\nexport {\n  // isUnlocked,\n  // getEstimatedMargin,\n  // getEstimatedFee,\n  // getEstimatedFundingRate,\n  // getEstimatedLiquidityUsed,\n  isDeriUnlocked,\n  getUserWormholeSignature,\n  // getFundingRate,\n  //getPositionInfo,\n} from './api/contractQueryApi';\nexport {\n  //unlock,\n  //depositMargin,\n  //withdrawMargin,\n  //addLiquidity,\n  //removeLiquidity,\n  //tradeWithMargin,\n  //closePosition,\n  mint,\n  mintDToken,\n  freeze,\n  mintDeri,\n  unlockDeri,\n  mintAirdrop,\n} from './api/contractTransactionApi';\nexport {\n  getUserInfo,\n  getUserInfoHarvest,\n  getUserInfoTotal,\n  getUserInfoAll,\n  getPoolInfoApy,\n  getLpPoolInfoApy,\n  getUserInfoInPool,\n  getUserInfoAllForAirDrop,\n} from './api/databaseApi';\n\n// export * from './api/slpPoolApi';\n// export * from './api/clpPoolApi';\n\n// export * from './api/tradeHistoryApi';\nexport {\n//getSpecification2 as getSpecification,\n// getPositionInfo2 as getPositionInfo,\n//getLiquidityInfo2 as getLiquidityInfo,\n//getWalletBalance2 as getWalletBalance,\n//getFundingRate2 as getFundingRate,\n//getLiquidityUsed2 as getLiquidityUsed,\ngetFundingRateCache2 as getFundingRateCache,\ngetSlpLiquidityInfo2 as getSlpLiquidityInfo,\ngetSlpWalletBalance2 as getSlpWalletBalance,\ngetClpLiquidityInfo2 as getClpLiquidityInfo,\ngetClpWalletBalance2 as getClpWalletBalance,\ngetDeriBalance2 as getDeriBalance,\n//getTradeHistory2 as getTradeHistory,\n} from './api/restApi';\n\n// export {\n  //tradeWithMargin2 as tradeWithMargin,\n  //closePosition2 as closePosition,\n  //depositMargin2 as depositMargin,\n  //withdrawMargin2 as withdrawMargin,\n  //addLiquidity2 as addLiquidity,\n  //removeLiquidity2 as removeLiquidity,\n// } from './api/contractTransactionApiV2'\n\nexport * from './api/lpPoolApi';\n\nexport * from './api_wrapper';\n\nexport {\n  getPoolConfigList,\n  getFilteredPoolConfigList,\n  getPoolBTokensBySymbolId,\n} from './v2';\n","import {\n  addLiquidity,\n  removeLiquidity,\n  depositMargin,\n  withdrawMargin,\n  tradeWithMargin,\n  closePosition,\n} from './contractTransactionApi';\nimport {\n  addSlpLiquidity,\n  removeSlpLiquidity,\n} from './slpPoolApi'\nimport {\n  addClpLiquidity,\n  removeClpLiquidity,\n} from './clpPoolApi'\nimport {\n  addClp2Liquidity,\n  removeClp2Liquidity,\n} from './clp2PoolApi'\nimport { wsInstance } from './apiGlobals'\nimport { getRestServerConfig, DeriEnv, getRedisWorkerQueneConfig } from '../config'\n\nconst wsOnPromise = (ws, event) => {\n  return new Promise((resolve, reject) => {\n    ws.on(event, function(data){\n      resolve(JSON.parse(data))\n    })\n  })\n}\nconst sendTradeTxToWorkerQuene = async(methodCall) => {\n  const ws = wsInstance.getOrSet(getRestServerConfig(DeriEnv.get()))\n  await ws.send(methodCall)\n  const res = await wsOnPromise(ws, 'trade_tx_receipt')\n  //console.log('res', res)\n  return res\n}\n\nexport const tradeWithMargin2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const res = await tradeWithMargin(chainId, poolAddress, accountAddress, newVolume, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`trade_with_margin(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const closePosition2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const res = await closePosition(chainId, poolAddress, accountAddress, newVolume, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`close_position(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const depositMargin2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await depositMargin(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`deposit_margin(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const withdrawMargin2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await withdrawMargin(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`withdraw_margin(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const addLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addLiquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeLiquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const addSlpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addSlpLiquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_slp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeSlpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeSlpLiquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_slp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\nexport const addClpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addClpLiquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeClpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeClpLiquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const addClp2Liquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addClp2Liquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeClp2Liquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeClp2Liquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};","import { perpetualPoolFactory } from '../factory/contracts';\nimport { getBTCUSDPrice } from '../utils';\nimport { getUserWormholeSignature } from './contractQueryApi';\nimport { io } from 'socket.io-client';\n\n/** @module apiCache */\n/**\n * fundingRateCache Object\n * @name fundingRateCache\n * @property {function} get - Get the funding rate from cache\n * @property {function} set - set the funding rate cache\n */\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress) {\n      const key = `${chainId}.${contractAddress}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`Cache key is not in resouceMap: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, resource) {\n      const key = `${chainId}.${contractAddress}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();\n\nexport const accountAddressCache = (function () {\n  let _accountAddress = '';\n  return {\n    get() {\n      if (_accountAddress === '') {\n        console.log(\"please init 'accountAddress' first\");\n      }\n      return _accountAddress;\n    },\n    set(value) {\n      if (typeof value === 'string' && value !== '') {\n        _accountAddress = value;\n      }\n    },\n  };\n})();\n\n/**\n * priceCache Object\n * @name priceCache\n * @property {function} get - Get the price from cache\n * @property {function} update - Set the price to automatic update during a time interval\n * @property {function} clear - Clear the the automatic update of the price\n */\nexport const priceCache = (function () {\n  let _price = '';\n  let _interval = null;\n  return {\n    get() {\n      if (_price === '') {\n        console.log(\"please init 'price' first\");\n      }\n      return _price;\n    },\n    async _update(chainId, poolAddress) {\n      try {\n        const res = await getBTCUSDPrice(chainId, poolAddress);\n        if (res !== '') {\n          _price = res;\n        }\n      } catch (err) {\n        console.log(`priceCache.update: ${err}`)\n      }\n    },\n    update(chainId, poolAddress) {\n      const self = this;\n      _interval = setInterval(() => {\n        // console.log('tick')\n        self._update(chainId, poolAddress);\n      }, 3000);\n    },\n    clear() {\n      if (_interval) {\n        clearInterval(_interval);\n      }\n      _price = '';\n    },\n  };\n})();\n\n/**\n * PerpetualPoolParametersCache Object\n * @name PerpetualPoolParametersCache\n * @property {function} get - Get the perpetualPoolParameters from cache\n * @property {function} update - Set the perpetualPoolParameters\n */\n\nexport const PerpetualPoolParametersCache = (function () {\n  let _parameters = {};\n  return {\n    get() {\n      if (!_parameters.multiplier) {\n        console.log(\"please init 'perpetual pool parameters' first\");\n      }\n      return _parameters;\n    },\n    async update(chainId, poolAddress) {\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n      const res = await perpetualPool.getParameters();\n      if (res.multiplier) {\n        _parameters = res;\n      }\n      return res;\n    },\n  };\n})();\n\n// websocket instance\nexport const wsInstance = (function(){\n  let _ws = null;\n  return {\n    get() {\n      if (_ws) {\n        return _ws\n      } else {\n        console.log('wsInstance.get() error: ws instance is not init')\n      }\n    },\n    set(url) {\n      try {\n        const ws = io(url, {\n          transports: ['websocket'],\n          path: '/ws',\n        });\n        ws.on('connect', () => {\n          console.log('hello from ws:', ws.id);\n        })\n        if (ws) {\n          _ws = ws\n        } else {\n          console.log('wsInstance.get() error: ws instance is not init')\n        }\n      } catch (err) {\n        console.log('wsInstance.set():', err)\n      }\n    },\n    getOrSet(url) {\n      if (!_ws) {\n        this.set(url)\n      }\n      return _ws\n    }\n  }\n})();\n","import {\n  bTokenFactory,\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory/contracts';\nimport { getPoolInfoApy } from './databaseApi';\nimport {\n  fundingRateCache,\n  PerpetualPoolParametersCache,\n  priceCache,\n} from './apiGlobals';\nimport {\n  hasInvalidArgsValue,\n  naturalWithPercentage,\n  deriToNatural,\n  getPoolContractAddress,\n  getBTCUSDPrice,\n  bg,\n  BigNumber,\n  getDeriContractAddress,\n} from '../utils';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  calculateShareValue,\n  calculateMaxRemovableShares,\n  calculateEntryPrice,\n  calculateMarginHeld,\n  calculatePnl,\n  calculateLiquidationPrice,\n  processFundingRate,\n} from '../calculation';\n\n/**\n * Get the contract information\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.addresses\n * @returns {string} response.symbol\n * @returns {string} response.bSymbol\n * @returns {string} response.multiplier\n * @returns {string} response.feeRatio\n * @returns {string} response.minPoo\n * @returns {string} response.minPoolMarginRatio\n * @returns {string} response.minInitialMarginRatio\n * @returns {string} response.minMaintenanceMarginRatio\n * @returns {string} response.minAddLiquidity\n * @returns {string} response.redemptionFeeRatio\n * @returns {string} response.fundingRateCoefficient\n * @returns {string} response.minLiquidationReward\n * @returns {string} response.maxLiquidationReward\n * @returns {string} response.liquidationCutRatio\n * @returns {string} response.priceDelayAllowance\n */\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    feeRatio,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n    minAddLiquidity,\n    redemptionFeeRatio,\n    fundingRateCoefficient,\n    minLiquidationReward,\n    maxLiquidationReward,\n    liquidationCutRatio,\n    priceDelayAllowance,\n  } = await pPool.getParameters();\n  const symbol = await pPool.symbol();\n  const bSymbolRaw = await bToken.symbol();\n\n  return {\n    addresses: poolAddress,\n    symbol,\n    bSymbol: bSymbolRaw,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    minInitialMarginRatio: minInitialMarginRatio.toString(),\n    minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n    minAddLiquidity: minAddLiquidity.toString(),\n    redemptionFeeRatio: redemptionFeeRatio.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minLiquidationReward: minLiquidationReward.toString(),\n    maxLiquidationReward: maxLiquidationReward.toString(),\n    liquidationCutRatio: liquidationCutRatio.toString(),\n    priceDelayAllowance: priceDelayAllowance.toString(),\n  };\n};\n\n/**\n * Get position Information of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.volume\n * @returns {string} response.averageEntryPrice\n * @returns {string} response.margin\n * @returns {string} response.marginHeld\n * @returns {string} response.unrealizedPnl\n * @returns {string} response.liquidationPrice\n */\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n  } = await pPool.getParameters();\n  //console.log('getPositionInfo', chainId, poolAddress, accountAddress, price);\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n\n  return {\n    volume: volume.toString(),\n    averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n    margin: margin.toString(),\n    marginHeld: calculateMarginHeld(\n      price,\n      volume,\n      multiplier,\n      minInitialMarginRatio\n    ).toString(),\n    unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\n    liquidationPrice: calculateLiquidationPrice(\n      volume,\n      margin,\n      cost,\n      multiplier,\n      minMaintenanceMarginRatio\n    ).toString(),\n  };\n};\n\n/**\n * Get liquidity Info of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const {\n    liquidity,\n    tradersNetCost,\n    tradersNetVolume,\n  } = await pPool.getStateValues();\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const poolDynamicEquity = liquidity.plus(\n    tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\n  );\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      tradersNetVolume,\n      tradersNetCost,\n      multiplier,\n      minPoolMarginRatio,\n      price\n    ).toString(),\n  };\n};\n\n/**\n * Get user balance in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {string} user balance\n */\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n\n/**\n * Check account is unlocked in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\n/**\n * Get estimate margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} volume\n * @param {string} leverage\n * @returns {string}\n */\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage\n) => {\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const { multiplier } = await pPool.getParameters();\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .div(bg(leverage))\n    .toString();\n};\n\n/**\n * Get estimate Fee in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} volume\n * @returns {string}\n */\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\n  // const price = await getBTCUSDPrice(chainId, poolAddress);\n  let price = priceCache.get();\n  let parameters = PerpetualPoolParametersCache.get();\n  if (price === '') {\n    await priceCache.update(chainId, poolAddress);\n    price = priceCache.get();\n  }\n  // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\n  // const { multiplier, feeRatio } = await pPool.getParameters();\n  if (!parameters.multiplier) {\n    parameters = await PerpetualPoolParametersCache.update(\n      chainId,\n      poolAddress\n    );\n  }\n  //console.log('price', price);\n  const { multiplier, feeRatio } = parameters;\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};\n\n/**\n * Get funding rate of the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.fundingRate0\n * @returns {string} response.fundingRatePerBlock\n * @returns {string} response.liquidity\n * @returns {string} response.volume\n * @returns {string} response.tradersNetVolume\n */\nexport const getFundingRate = async (chainId, poolAddress) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n\n  const res = await perpetualPool\n    .getFundingRate()\n    .catch((err) => console.log('getFundingRate', err));\n  fundingRateCache.set(chainId, poolAddress, res);\n  const poolInfo = await getPoolInfoApy(chainId, poolAddress);\n\n  if (res) {\n    // console.log(hexToNatural(res[0]));\n    const {\n      fundingRate,\n      fundingRatePerBlock,\n      liquidity,\n      tradersNetVolume,\n    } = res;\n    const volume = poolInfo.volume24h;\n    // fundingRate = processFundingRate(chainId, fundingRate);\n\n    return {\n      fundingRate0: naturalWithPercentage(fundingRate),\n      fundingRatePerBlock: BigNumber(fundingRatePerBlock).toExponential(10),\n      liquidity: liquidity.toString(),\n      volume: deriToNatural(volume).toString(),\n      tradersNetVolume: tradersNetVolume.toString(),\n    };\n  }\n};\n\n/**\n * Get estimate funding rate\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let fundingRate1;\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ];\n    if (hasInvalidArgsValue(...parameters)) {\n      return {\n        fundingRate1: '0',\n      };\n    }\n    // console.log(parameters)\n    fundingRate1 = calculateFundingRate(...parameters);\n    fundingRate1 = processFundingRate(chainId, fundingRate1);\n    return {\n      fundingRate1: naturalWithPercentage(fundingRate1),\n    };\n  }\n};\n\n/**\n * Get liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidityUsed0\n */\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const { liquidityUsed } = res;\n    return {\n      liquidityUsed0: naturalWithPercentage(liquidityUsed),\n    };\n  }\n};\n\n/**\n * Get estimate liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool\n      .getFundingRate()\n      .catch((err) => console.log('getLiquidityUsed', err));\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.poolMarginRatio,\n    ];\n    if (hasInvalidArgsValue(...parameters)) {\n      return {\n        liquidityUsed1: '0',\n      };\n    }\n    const liquidityUsed1 = calculateLiquidityUsed(...parameters);\n    return {\n      liquidityUsed1: naturalWithPercentage(liquidityUsed1),\n    };\n  }\n};\n\n/**\n * Get user signature of the wormhole pool\n * @async\n * @method\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getUserWormholeSignature = async (accountAddress) => {\n  const databaseWormhole = databaseWormholeFactory(true);\n  return await databaseWormhole.signature(accountAddress);\n};\n\n/**\n * Check account is unlocked in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriContractAddress(chainId);\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  let res;\n  try {\n    const tx = await deri.isUnlocked(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Get deri balance in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string}\n */\nexport const getDeriBalance = async (chainId, accountAddress) => {\n  const { deriAddress, wormholeAddress } = getDeriContractAddress(chainId);\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\n  return (await deri.balance(accountAddress)).toString();\n};\n","// eslint-disable-next-line no-extend-native\nNumber.prototype.toFixed = function(len){\n  if(len>20 || len<0){\n      throw new RangeError('toFixed() digits argument must be between 0 and 20');\n  }\n  // .123转为0.123\n  var number = Number(this);\n  if (isNaN(number) || number >= Math.pow(10, 21)) {\n      return number.toString();\n  }\n  if (typeof (len) == 'undefined' || len == 0) {\n      return (Math.round(number)).toString();\n  }\n  var result = number.toString(),\n      numberArr = result.split('.');\n\n  if(numberArr.length<2){\n      //整数的情况\n      return padNum(result);\n  }\n  var intNum = numberArr[0], //整数部分\n      deciNum = numberArr[1],//小数部分\n      lastNum = deciNum.substr(len, 1);//最后一个数字\n  \n  if(deciNum.length == len){\n      //需要截取的长度等于当前长度\n      return result;\n  }\n  if(deciNum.length < len){\n      //需要截取的长度大于当前长度 1.3.toFixed(2)\n      return padNum(result)\n  }\n  //需要截取的长度小于当前长度，需要判断最后一位数字\n  result = intNum + '.' + deciNum.substr(0, len);\n  if(parseInt(lastNum, 10)>=5){\n      //最后一位数字大于5，要进位\n      var times = Math.pow(10, len); //需要放大的倍数\n      var changedInt = Number(result.replace('.',''));//截取后转为整数\n      changedInt++;//整数进位\n      changedInt /= times;//整数转为小数，注：有可能还是整数\n      result = padNum(changedInt+'');\n  }\n  return result;\n  //对数字末尾加0\n  function padNum(num){\n      var dotPos = num.indexOf('.');\n      if(dotPos === -1){\n          //整数的情况\n          num += '.';\n          for(var i = 0;i<len;i++){\n              num += '0';\n          }\n          return num;\n      } else {\n          //小数的情况\n          var need = len - (num.length - dotPos - 1);\n          for(var j = 0;j<need;j++){\n              num += '0';\n          }\n          return num;\n      }\n  }\n}","import {isBrowser,isMobile} from 'react-device-detect'\nimport LoadableComponent from './utils/LoadableComponent';\n\nconst DesktopApp = LoadableComponent(() => import('./desktop/index'))\nconst MobileApp = LoadableComponent(() => import('./mobile/index'))\n\nfunction App() {\n  \n  if(isBrowser){\n    return <DesktopApp/>\n  }\n  if(isMobile){\n    return <MobileApp/>\n  }\n}\n\nexport default App;\n","\nimport {getUserWalletBalance ,DeriEnv,connectWallet} from \"../lib/web3js/indexV2\";\nimport config from '../config.json'\nimport { formatBalance, eqInNumber } from \"../utils/utils\";\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\n\n\nclass Wallet {\n  \n  detail = {}\n  \n  constructor(){\n    makeAutoObservable(this,{\n      detail : observable,\n      setDetail : action,\n      supportV2 : computed,\n      supportChain : computed   \n    })\n  }\n\n  isConnected = () => !!this.detail.account;\n\n  connect =  async () => {\n    const res = await connectWallet();\n    return new Promise(async (resolve,reject) => {\n      if(res.success){\n        const {chainId,account} = res\n        const wallet = await this.loadWalletBalance(chainId,account);        \n        resolve(wallet)\n      } else {\n        reject(null)\n      }\n    })\n  }\n\n  loadWalletBalance = async (chainId,account) => {\n    const balance = await getUserWalletBalance(chainId,account)\n    const detail = {chainId,account,balance,formatBalance : formatBalance(balance)}\n    const env = DeriEnv.get();\n    const {chainInfo} = config[env]\n    \n    if(chainInfo[chainId]){\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\n    }\n    this.setDetail(detail)\n    return detail;\n  }\n\n  get = () => {\n    return this.detail;\n  }\n\n  setDetail(detail){\n    this.detail = detail;\n  }\n\n  get supportV2() {\n    return eqInNumber(this.detail.chainId,56) || eqInNumber(this.detail.chainId,97)\n  }\n\n  get supportChain(){\n    return this.detail.supported\n  }\n\n}\n\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\nimport WebSocket from \"socket.io-client\";\n\nclass Oracle {\n  symbol = 'BTCUSD'\n  timeType = 'min'\n  index = 0.00\n  kData = []\n  ws = null\n  paused = false;\n  listeners = {}\n  already = false\n\n  constructor(){\n    makeAutoObservable(this,{\n      index : observable,\n      kData : observable,\n      setIndex : action,\n    })\n    this.initWebSocket()\n  }\n\n\n  initWebSocket(){\n    if(this.ws === null) {\n      this.ws = new WebSocket('wss://oracle4.deri.finance', {        \n        transports: ['websocket'],\n        withCredentials: true\n      })\n      this.ws.on('connect',() => {\n        if(this.already){\n          this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\n          console.log('ws is reconnected already')\n        }\n        console.log('ws is already connected');\n      });\n    }    \n  }\n\n\n  load(symbol,timeType = 'min'){\n    this.ws.on('kline_update',data => {\n      const obj = {}\n      let time = data.time\n      if (data.symbol.toUpperCase() === this.symbol.toUpperCase()) {\n        obj.time = time \n        obj.low = Number(data.low)\n        obj.high = Number(data.high)\n        obj.open = Number(data.open)\n        obj.close = Number(data.close)\n        obj.volume = Number(data.volume)\n        obj.time_type = data.time_type\n        obj.symbol = data.symbol\n        if(!this.paused) {\n          this.setIndex(obj.close)\n          for(const key of Object.keys(this.listeners)){\n            if(typeof this.listeners[key] === 'function'){\n              this.listeners[key](obj)\n            }\n          }\n        }\n      }\n    })\n    if(symbol !== this.symbol){\n      this.unsubscribeBars(this.symbol);\n    }\n    this.setSymbol(symbol)\n    this.setTimeType(timeType);\n    this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\n    this.already = true\n  }\n\n  addListener(id,listener){\n    if(!this.listeners[id]) {\n      this.listeners[id] = listener\n    }    \n  }\n\n\n\n  unsubscribeBars(symbol){\n    this.ws.emit('un_get_kline_update', {\n      symbol : symbol, 'time_type' : 'min'\n    })\n  }\n\n\n  //暂不用\n  loadHistory(symbol,timeType,callback){\n    this.ws.on('kline_history', data => {\n      const history = data.map(el => {\n        return {\n          time: el.time,\n          low: Number(el.low),\n          high: Number(el.high),\n          open: Number(el.open),\n          close: Number(el.close),\n          volume: Number(el.volume)\n        }\n      })\n      if(callback){\n        console.log('history ->',history[history.length-1].time)\n        callback(history)\n      }\n    })\n    this.ws.emit('get_kline', {'symbol': symbol, 'time_type': timeType, 'bars': 1000})\n    // this.emit(symbol);\n  }\n\n  // start(symbol){\n  //   this.initWebSocket();\n  //   this.loadIndex(symbol);\n  //   this.ws.on('kline_update',data => {\n  //     const obj = {}\n  //     let time = data.time\n  //     if (data.symbol === this.symbol) {\n  //       obj.time = time \n  //       obj.low = Number(data.low)\n  //       obj.high = Number(data.high)\n  //       obj.open = Number(data.open)\n  //       obj.close = Number(data.close)\n  //       obj.volume = Number(data.volume)\n  //       this.setIndex(obj.close)\n  //     }\n  //   })\n  // }\n\n  resume(){\n    this.setPause(false)\n  }\n\n  pause(){\n    this.setPause(true)\n  }\n\n  setIndex(index){\n    if(!this.paused) {\n      this.index = index;\n    }\n  }\n\n  setSymbol(symbol){\n    this.symbol = symbol\n  }\n\n  setTimeType(timeType){\n    this.timeType = timeType;\n  }\n\n  setPause(paused){\n    this.paused = paused\n  }\n}\n\nexport default Oracle","import { getPositionInfo } from \"../lib/web3js/indexV2\"\n\nexport default class Position {\n\n  callback = () => {}\n   wallet = null;\n   spec = null\n \n\n   async load(wallet,spec,callback){\n     if(wallet && wallet.isConnected() && wallet.supportChain && spec && spec.pool){\n      const position = await getPositionInfo(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\n      if(position){\n        if(callback){\n          callback(position)\n        }\n      }\n      this.start(wallet,spec,callback)\n      return position;\n     }\n   }\n\n   start(wallet,spec,callback){\n     if(!this.interval){\n      this.interval = window.setInterval(() => this.load(wallet,spec,callback),3000)      \n      if(wallet){\n        this.wallet= wallet; \n      }\n      if(spec){\n        this.spec = spec\n      }\n      if(callback){\n        this.callback = callback;\n      }\n     }\n   }\n\n   pause(){\n    clearInterval(this.interval);\n    this.interval = null;\n   }\n\n   resume(wallet,spec,callback){\n     this.start(wallet,spec,callback || this.callback)\n   }\n\n   \n\n\n \n}","import { getSpecification } from \"../lib/web3js/indexV2\";\n\nexport default class Contract {\n  info = {\n    bSymbol:'BUSD',\n    symbol:'BTCUSD',\n    multiplier:'0.0001',\n    fundingRateCoefficient:'0.0000025',\n    minInitialMarginRatio:0.1,\n    minMaintenanceMarginRatio:0.05,\n    feeRatio:0.0005,\n  }\n\n  async load(wallet,config){\n    if(wallet && wallet.supportChain && config && config.pool !== this.info.pool){\n      const spec = await getSpecification(wallet.detail.chainId,config.pool,config.bTokenId,config.symbolId);\n      this.setInfo(spec)\n    }\n    return this.info\n  }\n\n  setInfo(info){\n    this.info = info\n  }\n}","import { getTradeHistory } from \"../lib/web3js/indexV2\";\n\n\nexport default class History {\n\n   async load(wallet,config){\n      if(wallet && wallet.detail.chainId && config && config.pool){\n         const all = await getTradeHistory(wallet.detail.chainId,config.pool,wallet.detail.account,config.symbolId);    \n         return all;\n      } else {\n         return []\n      }\n   }\n}","import { observable, action, computed, makeObservable } from \"mobx\";\nimport Oracle from \"./Oracle\";\nimport Position from \"./Position\";\nimport Contract from \"./Contract\";\nimport History from './History'\nimport Config from \"./Config\";\nimport { eqInNumber, storeConfig, getConfigFromStore } from \"../utils/utils\";\nimport { getFundingRate } from \"../lib/web3js/indexV2\";\nimport { bg } from \"../lib/web3js/v2\";\n\n/**\n * 交易模型\n * 关联对象\n * 1. chain\n * 2. Oracle\n * 3. position\n * 4. contract\n * 5. history\n * 计算\n * 1. dynamic balance\n * 2. available blance\n * 响应事件\n * 1. chain change\n * 2. chain’s symbol changed\n * 3. index update\n * 4. volum change\n * 5. margin change\n * 输出\n * 1. dynamic balance\n * 2. margin\n * 3. available balance\n * 4. volume\n * 5. specs\n * 6. spec\n * 7. position\n * 8. contract\n * 9. fundingRate\n */\n\nexport default class Trading {\n  version = null;\n  wallet = null;\n  configs = [] \n  config = null;\n  fundingRate = '--' \n  index = null\n  volume = ''\n  paused = false\n  margin = ''\n  position = {}\n  contract = {}\n  fundingRate = {}\n  history = []\n  userSelectedDirection = 'long'\n\n  constructor(){\n    makeObservable(this,{\n      index : observable,\n      volume : observable,\n      margin : observable,\n      fundingRate : observable,\n      position : observable,\n      history : observable,\n      contract : observable,\n      userSelectedDirection : observable,\n      setWallet :action,\n      setConfigs : action,\n      setConfig : action,\n      setIndex : action,\n      setContract : action,\n      setPosition : action,\n      setVolume : action,\n      setUserSelectedDirection : action,\n      setFundingRate : action,\n      setHistory : action,\n      amount : computed,\n      fundingRateTip : computed,\n      direction : computed,\n      volumeDisplay : computed,\n      isShareOtherSymbolMargin : computed\n    })\n    this.configInfo = new Config();\n    this.oracle = new Oracle();\n    this.positionInfo = new Position()\n    this.contractInfo = new Contract();\n    this.historyInfo = new History()\n  }\n\n  /**\n   * 初始化\n   */\n  async init(wallet,version){    \n    if(version){\n      this.version = version\n    }\n    const all = await this.configInfo.load(version);\n    //如果连上钱包，有可能当前链不支持\n    if(wallet && wallet.isConnected()){\n      this.setWallet(wallet);\n      this.setConfigs(all.filter(c => eqInNumber(wallet.detail.chainId,c.chainId)))\n      let defaultConfig = this.getDefaultConfig(this.configs,wallet);\n      //如果还是为空，则默认用所有config的第一条\n      if(!defaultConfig){\n        defaultConfig = all.length > 0 ? all[0] : {}\n      }\n      this.setConfig(defaultConfig);\n    } \n    //如果没有钱包或者链接的链不一致，设置默认config，BTCUSD\n    if(!wallet.isConnected() && this.configs.length === 0 && all.length > 0){\n      let defaultConfig = all.find(c => c.symbol === 'BTCUSD')\n      defaultConfig = defaultConfig ? defaultConfig : all[0]\n      this.setConfig(defaultConfig)\n    }\n    this.loadByConfig(this.wallet,this.config,true)\n    this.setVolume('')\n  }\n\n  async switch(spec){\n    const cur = this.configs.find(config => config.pool === spec.pool && config.symbolId === spec.symbolId)\n    //v1 只需要比较池子地址，v2 需要比较symbolId\n    let changed = false\n    if(this.version){\n      changed = this.version.isV1 ? spec.pool !== this.config.pool : spec.symbolId !== this.config.symbolId\n    }\n    if(cur){\n      this.pause();\n      this.setConfig(cur)\n      this.loadByConfig(this.wallet,cur,changed);  \n      if(changed){\n        this.store(cur)\n      }    \n      this.resume()\n      this.setVolume('')\n    }\n  }\n\n  async loadByConfig(wallet,config,symbolChanged){\n     //position\n     this.positionInfo.load(wallet,config,position => {       \n        this.setPosition(position);\n     })\n\n     //切换指数\n    if(symbolChanged && config){\n      this.oracle.unsubscribeBars();\n      this.oracle.addListener('trading',data => {\n        this.setIndex(data.close)\n      })\n      this.oracle.load(config.symbol)\n    }\n     //contract\n     const contract = await this.contractInfo.load(wallet,config)    \n\n     //funding rate\n     const fundingRate = await this.loadFundingRate(wallet,config)\n     \n     //history\n     const history = await this.historyInfo.load(wallet,config);\n\n     if(contract){\n      this.setContract(contract)\n     }\n\n     if(fundingRate){\n      this.setFundingRate(fundingRate)\n     }\n\n     if(history){\n      this.setHistory(history);\n     }\n  }\n\n\n    //优先使用session storage 的，如果缓存跟用户当前链一直，则命中缓存，否则取当前配置第一条\n    getDefaultConfig(configs = [],wallet){\n      let defaultConfig = null;\n      if(configs.length > 0){    \n        const fromStore = this.getFromStore();\n        if(fromStore && eqInNumber(wallet.detail.chainId,fromStore.chainId)){\n          defaultConfig = fromStore;\n        }\n        if(defaultConfig){\n          //虽然从缓存获得config ，需要判断池子地址是否一致，否则用可用config的第一条\n          const pos = configs.findIndex(c => c.pool === defaultConfig.pool);\n          if(pos === -1){\n            defaultConfig = configs[0];\n          }\n        } else {\n          defaultConfig = configs[0]\n        }   \n      }\n      return defaultConfig;    \n    }\n\n \n\n  //存起来\n  store(config){\n    storeConfig(this.version.current,config)\n  }\n\n  getFromStore(){\n    return getConfigFromStore(this.version.current)\n  }\n\n  async refresh(){\n    this.pause()\n    const position = await this.positionInfo.load(this.wallet,this.config);\n    this.wallet.loadWalletBalance(this.wallet.detail.chainId,this.wallet.detail.account)\n    const fundingRate = await this.loadFundingRate(this.wallet,this.config)   \n    const history = await this.historyInfo.load(this.wallet,this.config)\n\n    if(fundingRate){\n      this.setFundingRate(fundingRate)      \n    }\n    if(position){\n      this.setPosition(position)\n    }\n    if(history){\n      this.setHistory(history)\n    }\n    this.setVolume('')\n    this.resume();\n  }\n\n  /**\n   * 暂停实时读取index和定时读取position\n   */\n  pause(){\n    this.setPaused(true)\n    this.oracle.pause();\n    this.positionInfo.pause();\n  }\n\n  /**\n   * 恢复读取\n   */\n  resume(){\n    this.setPaused(false)\n    this.oracle.resume();\n    this.positionInfo.resume(this.wallet,this.config);\n  }\n\n  setWallet(wallet){\n    this.wallet = wallet;\n  }\n\n  setConfigs(configs){\n    this.configs = configs\n  }\n\n  setConfig(config){\n    this.config = config\n  }\n\n  setIndex(index){\n    this.index = index;\n  }\n\n  setPosition(position){\n    if(position){\n      this.position = position\n    }\n  }\n\n  setContract(contract){\n    this.contract = contract\n  }\n\n  setHistory(history){\n    this.history = history\n  }\n\n  setFundingRate(fundingRate){\n    this.fundingRate = fundingRate;\n  }\n\n  setVolume(volume){\n    this.volume = volume;\n  }\n\n  setPaused(paused){\n    this.paused = paused\n  }\n\n  setUserSelectedDirection(direction){\n    this.userSelectedDirection = direction\n  }\n\n  setMargin(margin){\n    console.log('before margin ',margin)\n    console.log('margin held',this.position.marginHeld)\n    if(this.isShareOtherSymbolMargin){\n      margin = bg(margin).minus(this.position.marginHeld).toString()\n    }\n    console.log('after margin ',margin)\n    this.margin =  margin\n    if(this.contract){\n      const volume = (+margin) / ((+this.index) * (+this.contract.multiplier) * (+this.contract.minInitialMarginRatio))      \n      if(!isNaN(volume)){\n        this.setVolume(Math.abs(volume))\n      }\n    }\n  }\n\n  get volumeDisplay(){\n    if(this.volume === '' || this.volume === '-' || this.volume === 'e' || isNaN(this.volume)) {\n      return '';\n    } else if(this.margin !== '') {\n        if((+this.volume) > Math.abs(+this.position.volume)) {\n          const result = parseInt(Math.abs(this.volume) - Math.abs(this.position.volume))\n          return result\n        } else {\n          const result = parseInt(Math.abs(this.position.volume) - Math.abs(this.volume));          \n          return result\n        }\n    } else {\n      return this.volume\n    }\n  }\n\n  \n  //计算available balance、contract value、\n  get amount(){\n    //用户输入的时候\n    if(this.index && this.position && this.contract && this.contract.multiplier && this.volume !== ''){\n      //合同价值\n      let curVolume = Math.abs(this.volume);\n      const originVolume = Math.abs(this.volumeDisplay);\n      //如果不是通过margin 算出来的volume\n      if(this.margin === '') {       \n        if(this.userSelectedDirection === 'long') {\n          if((+this.position.volume) > 0) {\n            curVolume = curVolume + (+this.position.volume)\n          } else {\n            curVolume = Math.abs(this.position.volume) - curVolume\n          }         \n        } else {\n          if((+this.position.volume) > 0){\n            curVolume =  (+this.position.volume) - curVolume\n          } else {\n            curVolume = Math.abs(this.position.volume) + (+curVolume)\n          }\n        }\n      }\n      const contractValue = Math.abs(curVolume) * this.index * this.contract.multiplier\n      const dynBalance = (+this.position.margin) + (+this.position.unrealizedPnl)\n      const margin = contractValue * this.contract.minInitialMarginRatio  \n      let totalMargin =  margin\n      //如果当前symbol 仓位 为0 且总的marginHeld 大于0\n      if(this.isShareOtherSymbolMargin){\n        totalMargin = bg(margin).plus(this.position.marginHeld).toString() \n      }\n      // console.log('volume ',curVolume);\n      // console.log('dynBalance ',dynBalance)\n      // console.log('margin ',margin)\n      // console.log('total margin ',totalMargin)\n      const leverage = (+contractValue / +dynBalance).toFixed(1);\n      const balance = ((+dynBalance) - (+totalMargin)).toFixed(2)\n      const available = balance > 0 ? balance : 0\n      const exchanged = (originVolume * (+this.contract.multiplier)).toFixed(4)\n      return {\n        dynBalance, \n        margin : totalMargin, \n        available,      \n        exchanged,      \n        leverage,\n        marginHeldBySymbol : margin\n      }\n    } else if(this.position && this.position.margin){\n      const dynBalance = bg(this.position.margin).plus(this.position.unrealizedPnl).toString()\n      const margin = this.position.marginHeld\n      const available = bg(dynBalance).minus(margin).toString();\n      return {\n        dynBalance,\n        margin,\n        marginHeldBySymbol : this.position.marginHeldBySymbol,\n        available,\n      }\n    }\n    return {}\n  }\n\n  get direction(){    \n    // 正仓\n    if(this.margin !== ''){\n      if((+this.position.volume) > 0) {\n        if(Math.abs(this.volume) > Math.abs(this.position.volume)) {\n          return 'long'\n        } else {\n          return 'short'\n        }\n      } else if((+this.position.volume) < 0){\n        //负仓\n        if((+this.volume) > Math.abs(+this.position.volume)){\n          return 'short'\n        } else {\n          return 'long'\n        }\n      }\n    }\n    return 0\n  }\n\n  get isShareOtherSymbolMargin() {\n    return bg(this.position.volume).isZero() && bg(this.position.marginHeld).gt(0)\n  }\n\n  //资金费率\n  async loadFundingRate(wallet,config){\n    if(config){\n      const chainId = wallet && wallet.isConnected() && wallet.supportChain ? wallet.detail.chainId : config.chainId\n      if(config){    \n        const res = await getFundingRate(chainId,config.pool,config.symbolId)\n        return res;\n      }\n    }\n  }\n\n  get fundingRateTip(){\n    if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\n      return `Funding  Rate (per block) = ${this.fundingRate.fundingRatePerBlock}` +\n      `\\n(1 Long contract pays 1 short contract ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} per block)`        \n    }\n    return ''\n  }\n\n\n\n}","import { makeAutoObservable, observable, action, computed } from \"mobx\";\nconst versionKey = 'deri-current-version'\n\nexport default class Version {\n  current = null;\n\n  constructor(){\n    makeAutoObservable(this,{\n      current : observable,\n      setCurrent : action,\n      isV1 : computed,\n      isV2 : computed\n    })\n    const versionFromSession = sessionStorage.getItem(versionKey);\n    this.current = versionFromSession ? versionFromSession : null\n  }\n\n\n  setCurrent(version,notSave){\n    this.current = version;\n    if(!notSave){\n      sessionStorage.setItem(versionKey,version)\n    }\n  }\n\n  switch(){\n    if(this.current === 'v1'){\n      this.setCurrent('v2')\n    } else {\n      this.setCurrent('v1')\n    }\n  }\n\n  get isV1() {\n    return this.current === 'v1'\n  }\n\n  get isV2(){\n    return this.current === 'v2'\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom'\nimport App from './App';\nimport './assets/deri.less';\nimport { Provider } from 'mobx-react';\nimport Wallet from './model/Wallet';\n//note dont remove zhe line\nimport NumberPolyfill from './lib/polyfill/numberPolyfill'\nimport Trading from './model/Trading';\nimport { DeriEnv } from './lib/web3js/config';\nimport Version from './model/Version';\n\nconst wallet = new Wallet();\nconst trading = new Trading()\nconst version = new Version();\n\nif(process.env.NODE_ENV === 'production') {\n  DeriEnv.set('prod')\n} \nDeriEnv.set('dev')\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider wallet={wallet}  trading={trading} version={version}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","export const getDBProviderUrlsConfig = () => [\n  'https://data-seed-prebsc-1-s1.binance.org:8545/',\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\n];\n\nexport const getDBAddressConfig = (env = 'dev', useProductionDB) => {\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\n    // for production\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n\nexport const getDBWormholeAddressConfig = (env = 'dev', useProductionDB) => {\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\n    // for production\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\n  }\n  // for test\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\n};\n\nexport const getDBAirdropAddressConfig = (env = 'dev', useProductionDB) => {\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\n    // for production\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n","\n\nimport BigNumber from 'bignumber.js'\nexport function bg(value, base = 0) {\n  if (base == 0) {\n    return BigNumber(value);\n  } else if (base > 0) {\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\n  } else {\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\n  }\n}\n\nexport function deriNatural(value) {\n  return bg(value, -18);\n}\n\nexport function formatAddress(address){\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\n}\n\nexport function formatBalance(balance){\n  return balance && (+balance).toFixed(4)\n}\n\nexport function eqInNumber(str1,str2){\n  return (+str1) === (+str2)\n}\n\nexport function isLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\nexport function isSushiLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\n}\nexport function isCakeLP(address){\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\n\nexport function sessionStorageKey(version){\n  return `${version}-current-trading-pool`\n}\n\nexport function storeConfig(version,config){\n  if(config){\n    const key = sessionStorageKey(version);\n    sessionStorage.setItem(key,JSON.stringify(config))\n  }\n}\n\nexport function getConfigFromStore(version){\n  return JSON.parse(sessionStorage.getItem(sessionStorageKey(version)))\n}\n\n","import { bTokenFactory, slpPoolFactory } from '../factory/contracts';\nimport { getSlpContractAddress } from '../utils';\n\n/**\n * Get liquidity info of SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getSlpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balance(poolAddress),\n      bToken.balance(accountAddress),\n      slpPool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n    };\n  }\n  console.log('no SlpPool address, please check');\n  return {};\n};\n\n/**\n * Add liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\n/**\n * Unlock the account in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getSlpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n","import { bTokenFactory, clp2PoolFactory } from '../factory/contracts';\nimport { getClp2ContractAddress } from '../utils';\n\nexport const getClp2LiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balance(poolAddress),\n      bToken.balance(accountAddress),\n      clp2Pool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n    };\n  }\n  console.log('no Clp2Pool address, please check');\n  return {};\n};\n\nexport const addClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const removeClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const getClp2WalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n","import {\n  bTokenFactory,\n  clpPoolFactory,\n  lTokenFactory,\n} from '../factory/contracts';\nimport { bg, getClpContractAddress } from '../utils';\n\n/**\n * Get liquidity Info of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getClpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const clpPool = clpPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { liquidity } = await clpPool.getStateValues();\n  //console.log(liquidity);\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: (lTokenTotalSupply.eq(0)\n      ? bg(0)\n      : liquidity.div(lTokenTotalSupply)\n    ).toString(),\n    maxRemovableShares: lTokenBalance.toString(),\n  };\n};\n\n/**\n * Add liquidity to the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clpPool.addLiquidity(accountAddress, amount);\n      console.log(tx, typeof tx);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    try {\n      const tx = await clpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isClpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\n/**\n * Unlock the account in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockClp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getClpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n","import Web3 from 'web3';\nimport { metaMaskWeb3, web3Factory } from '../factory/web3';\n\nconst MAX_GAS_AMOUNT = 532731;\n\nexport class Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    this.chainId = chainId;\n    this.contractAddress = contractAddress;\n    if (isProvider) {\n      this.web3 = web3Factory(chainId);\n    } else {\n      this.web3 = metaMaskWeb3();\n    }\n  }\n  setAccount(accountAddress) {\n    this.accountAddress = accountAddress;\n    return this;\n  }\n  setPool(poolAddress) {\n    this.poolAddress = poolAddress;\n    return this;\n  }\n  async _call(method, args = []) {\n    return await this.contract.methods[method](...args).call();\n  }\n\n  async _estimatedGas(method, args = [], accountAddress) {\n    let gas = 0;\n    for (let i = 0; i < 20; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (err) {\n        //console.log(\"err\", err);\n      }\n    }\n    if (gas == 0) gas = MAX_GAS_AMOUNT;\n    if (gas > MAX_GAS_AMOUNT) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt === null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _transact(method, args, accountAddress) {\n    const [gas, gasPrice] = await Promise.all([\n      this._estimatedGas(method, args, accountAddress),\n      this.web3.eth.getGasPrice(),\n    ]);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods[method](...args).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import Web3 from 'web3';\nimport { Contract } from './contract';\nimport {\n  hasInvalidArgsValue,\n  getBTCUSDPrice,\n  getOracleInfo,\n  deriToNatural,\n  bg,\n} from '../utils';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  processFundingRate,\n} from '../calculation';\n\n/* eslint-disable */\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PerpetualPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, isProvider);\n    this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\n  }\n\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async getStateValues() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getStateValues');\n      //console.log(\"getStateValues() raw:\", res)\n      result = {\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\n        liquidity: deriToNatural(res.liquidity),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      result = {\n        cumuFundingRate: defaultValue,\n        cumuFundingRateBlock: defaultValue,\n        liquidity: defaultValue,\n        tradersNetCost: defaultValue,\n        tradersNetVolume: defaultValue,\n      };\n      console.log(`getStateValues: ${err}`);\n    }\n    return result;\n  }\n\n  async getParameters() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getParameters');\n      // console.log(\"getParameters() raw: \", res)\n      result = {\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n        priceDelayAllowance: bg(res.priceDelayAllowance),\n      };\n    } catch (err) {\n      result = {\n        multiplier: defaultValue,\n        feeRatio: defaultValue,\n        minPoolMarginRatio: defaultValue,\n        minInitialMarginRatio: defaultValue,\n        minMaintenanceMarginRatio: defaultValue,\n        minAddLiquidity: defaultValue,\n        redemptionFeeRatio: defaultValue,\n        fundingRateCoefficient: defaultValue,\n        minLiquidationReward: defaultValue,\n        maxLiquidationReward: defaultValue,\n        liquidationCutRatio: defaultValue,\n        priceDelayAllowance: defaultValue,\n      };\n      console.log(`getParameters: ${err}`);\n    }\n    return result;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt == null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _estimatedGas(method, args, accountAddress) {\n    // !this.accountAddress &&\n    //   console.log('please do setAccount(accountAddress) first');\n    let gas = 0;\n    for (let i = 0; i < 20; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (err) {\n        //console.log(\"err\", err);\n      }\n    }\n    if (gas == 0) gas = 532731;\n    if (gas > 532731) gas = 532731;\n    return gas;\n  }\n\n  async _transactPool(method, args = [], accountAddress) {\n    // !this.accountAddress &&\n    //   console.log('please do setAccount(accountAddress) first');\n    const oracle = await getOracleInfo(this.chainId, this.contractAddress);\n    let signed = [oracle.timestamp, oracle.price, oracle.v, oracle.r, oracle.s];\n\n    const [gas, gasPrice] = await Promise.all([\n      this._estimatedGas(method, [...args, ...signed], accountAddress),\n      this.web3.eth.getGasPrice(),\n    ]);\n    console.log(`gasPrice ${gasPrice / 1000000000} GW`);\n\n    //gasPrice: Web3.utils.numberToHex(gasPrice),\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n\n  async getFundingRate() {\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\n    price = await getBTCUSDPrice(this.chainId, this.contractAddress);\n    try {\n      const { tradersNetVolume, liquidity } = await this.getStateValues();\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        minPoolMarginRatio,\n      } = await this.getParameters();\n      //console.log(\"minPoolMarginRatio\", minPoolMarginRatio.toString())\n      const args1 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        fundingRateCoefficient,\n      ];\n      if (hasInvalidArgsValue(...args1)) {\n        fundingRate = '0';\n        fundingRatePerBlock = '0';\n      } else {\n        fundingRatePerBlock = calculateFundingRate(...args1);\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\n      }\n      const args2 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        minPoolMarginRatio,\n      ];\n      if (hasInvalidArgsValue(...args2)) {\n        liquidityUsed = '0';\n      } else {\n        liquidityUsed = calculateLiquidityUsed(...args2);\n      }\n      return {\n        price,\n        multiplier: multiplier.toString(),\n        fundingRate: fundingRate,\n        fundingRatePerBlock: fundingRatePerBlock,\n        tradersNetVolume: tradersNetVolume.toString(),\n        liquidity: liquidity.toString(),\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\n        liquidityUsed: liquidityUsed,\n        poolMarginRatio: minPoolMarginRatio.toString(),\n      };\n    } catch (err) {\n      console.log('PerpetualPool#gerFundingRate():', err);\n      throw err;\n    }\n  }\n\n  async depositMargin(accountAddress, amount) {\n    //await this.web3.eth.getAccounts(console.log)\n    console.log('depositMargin');\n    let res;\n    try {\n      let tx = await this._transactPool(\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [amount],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      console.log('here');\n      res = { success: false, error: err };\n    }\n    return res;\n  }\n  async _getBlockInfo(blockNumber) {\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    //toBlock = toBlock.number;\n    let amount;\n    if (this.chainId === '56') {\n      amount = 1999;\n    } else {\n      amount = 4999;\n    }\n    if (fromBlock + amount > to) {\n      amount = to - fromBlock;\n    }\n    while (fromBlock <= to) {\n      //console.log('tick')\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if (fromBlock + amount > to) {\n        amount = to - fromBlock;\n      }\n    }\n    return events;\n  }\n  async _getTimeStamp(blockNumber) {\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n}\n","import { Contract } from './contract';\nimport { bg, deriToNatural, MAX_VALUE } from '../utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_upgradedAddress\",\"type\":\"address\"}],\"name\":\"deprecate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deprecated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_evilUser\",\"type\":\"address\"}],\"name\":\"addBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradedAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_maker\",\"type\":\"address\"}],\"name\":\"getBlackListStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBasisPoints\",\"type\":\"uint256\"},{\"name\":\"newMaxFee\",\"type\":\"uint256\"}],\"name\":\"setParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basisPointsRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlackListed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_clearedUser\",\"type\":\"address\"}],\"name\":\"removeBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blackListedUser\",\"type\":\"address\"}],\"name\":\"destroyBlackFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"Deprecate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"feeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"maxFee\",\"type\":\"uint256\"}],\"name\":\"Params\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_blackListedUser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"DestroyedBlackFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AddedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"RemovedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}]\n/* eslint-enable */\n\nexport class BTokenContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\n    super(chainId, contractAddress, isProvider);\n    this.poolAddress = poolAddress;\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n\n  async isUnlocked(accountAddress) {\n    let allowance = await this._call('allowance', [\n      accountAddress,\n      this.poolAddress,\n    ]);\n    allowance = deriToNatural(allowance);\n    return allowance.gt(0);\n  }\n\n  async unlock(accountAddress) {\n    return await this._transact(\n      'approve',\n      [this.poolAddress, MAX_VALUE],\n      accountAddress\n    );\n  }\n\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n  async _balance(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balance(address) {\n    const [res, decimals] = await Promise.all([\n      this._balance(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n\n  // for slp pool use\n  // async balanceOf(poolAddress) {\n  //   //const res = await this._call('balanceOf', [poolAddress])\n  //   let result\n  //   const [res, decimals] = await Promise.all([\n  //     this._balance(this.poolAddress),\n  //     this.decimals(),\n  //   ])\n  //   result = bg(res, -decimals)\n  //   return result\n  // }\n}\n","import { deriToNatural, bg } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PTokenContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\n    super(chainId, contractAddress, isProvider);\n    this.poolAddress = poolAddress;\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n\n  async getPositionInfo(accountAddress) {\n    let result = {};\n    try {\n      const res = await this._call('getPosition(address)', [accountAddress]);\n      //console.log(\"getPositionInfo() raw:\", res)\n      result = {\n        volume: deriToNatural(res[0]),\n        cost: deriToNatural(res[1]),\n        lastCumuFundingRate: deriToNatural(res[2]),\n        margin: deriToNatural(res[3]),\n        lastUpdateTimestamp: bg(res[4]),\n      };\n    } catch (err) {\n      result = {\n        volume: bg(0),\n        cost: bg(0),\n        lastCumuFundingRate: bg(0),\n        margin: bg(0),\n        lastUpdateTimestamp: bg(0),\n      };\n      console.log(`getPositionInfo: ${err}`);\n    }\n    return result;\n  }\n\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n}\n","import { deriToNatural } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class LTokenContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\n    super(chainId, contractAddress, isProvider);\n    this.poolAddress = poolAddress;\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n\n  async balance(accountAddress) {\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\n    //console.log(\"> lToken balance\", res.toString())\n    return res;\n  }\n\n  async totalSupply() {\n    const res = deriToNatural(await this._call('totalSupply'));\n    //console.log(\"> lToken totalSupply\", res.toString())\n    return res;\n  }\n}\n","import Web3 from 'web3';\nimport { getDBProviderUrlsConfig } from '../config/database';\nimport { getAliveHttpServer, checkHttpServerIsAlive } from '../utils';\n\n/* eslint-disable */\nconst DB_CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseContract {\n  constructor(contractAddress, providerUrl) {\n    this.providerUrl = providerUrl;\n    this.contractAddress = contractAddress;\n    if (this.providerUrl) {\n      this._init();\n    }\n  }\n  _init() {\n    // only use 'bsc testnet' with chainId 97\n    this.web3 = new Web3(new Web3.providers.HttpProvider(this.providerUrl));\n    this.contract = new this.web3.eth.Contract(\n      DB_CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n\n  async updateProviderUrl() {\n    if (!this.providerUrl) {\n      this.providerUrl = await getAliveHttpServer(getDBProviderUrlsConfig());\n      this._init();\n    } else if (\n      this.providerUrl &&\n      !(await checkHttpServerIsAlive(this.providerUrl))\n    ) {\n      this.providerUrl = await getAliveHttpServer(getDBProviderUrlsConfig());\n      this._init();\n    }\n  }\n\n  async getValues(keyArray) {\n    let res\n    let retry = 3\n    while(retry > 0) {\n      try {\n        await this.updateProviderUrl();\n        res = await this.contract.methods.getValues(keyArray).call();\n      } catch (err) {\n        this.providerUrl = null\n      }\n      if (res) {\n        break\n      }\n      retry -= 1\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`database getValues(): exceed max retry 3.`)\n    }\n    return res\n  }\n}\n","import { getDBProviderUrlsConfig } from '../config/database';\nimport Web3 from 'web3';\nimport { getAliveHttpServer, checkHttpServerIsAlive } from '../utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseWormholeContract {\n  constructor(contractAddress, providerUrl) {\n    this.providerUrl = providerUrl;\n    this.contractAddress = contractAddress;\n    if (this.providerUrl) {\n      this._init();\n    }\n  }\n\n  async updateProviderUrl() {\n    if (!this.providerUrl) {\n      this.providerUrl = await getAliveHttpServer(getDBProviderUrlsConfig());\n      this._init();\n    } else if (\n      this.providerUrl &&\n      !(await checkHttpServerIsAlive(this.providerUrl))\n    ) {\n      this.providerUrl = await getAliveHttpServer(getDBProviderUrlsConfig());\n      this._init();\n    }\n  }\n\n  _init() {\n    // only use 'bsc testnet' with chainId 97\n    this.web3 = new Web3(new Web3.providers.HttpProvider(this.providerUrl));\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n\n  async signature(accountAddress) {\n    let res\n    let retry = 3\n    while(retry > 0) {\n      try {\n        await this.updateProviderUrl();\n        res = await this.contract.methods['signature'](accountAddress).call();\n      } catch (err) {\n        this.providerUrl = null\n      }\n      if (res) {\n        break\n      }\n      retry -= 1\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`database getValues(): exceed max retry 3.`)\n    }\n    return res\n  }\n}\n","import { getDBProviderUrlsConfig } from '../config/database';\nimport Web3 from 'web3';\nimport { getAliveHttpServer, checkHttpServerIsAlive } from '../utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseAirdropContract {\n  constructor(contractAddress, providerUrl) {\n    this.providerUrl = providerUrl;\n    this.contractAddress = contractAddress;\n    if (this.providerUrl) {\n      this._init();\n    }\n  }\n\n  _init() {\n    // only use 'bsc testnet' with chainId 97\n    this.web3 = new Web3(new Web3.providers.HttpProvider(this.providerUrl));\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n\n  async updateProviderUrl() {\n    if (!this.providerUrl) {\n      this.providerUrl = await getAliveHttpServer(getDBProviderUrlsConfig());\n      this._init();\n    } else if (\n      this.providerUrl &&\n      !(await checkHttpServerIsAlive(this.providerUrl))\n    ) {\n      this.providerUrl = await getAliveHttpServer(getDBProviderUrlsConfig());\n      this._init();\n    }\n  }\n\n  async getValues(keyArray) {\n    let res\n    let retry = 3\n    while(retry > 0) {\n      try {\n        await this.updateProviderUrl();\n        res = await this.contract.methods.getValues(keyArray).call();\n      } catch (err) {\n        this.providerUrl = null\n      }\n      if (res) {\n        break\n      }\n      retry -= 1\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`database getValues(): exceed max retry 3.`)\n    }\n    return res\n  }\n}\n","import Web3 from 'web3';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"\",\"deployedBytecode\":\"\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\n/* eslint-enable */\n\nexport class MiningVaultPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, isProvider);\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI['abi'],\n      this.contractAddress\n    );\n  }\n  async mintDToken(accountAddress, ...args) {\n    //return this._transact('claim', args)\n    // !this.accountAddress &&\n    //   console.log('please do setAccount(accountAddress) first');\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import Web3 from 'web3';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class MiningVaultRouter extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, isProvider);\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n  async mint(accountAddress, ...args) {\n    //console.log(accountAddress, args)\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    //console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    //console.log('txRaw', txRaw)\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class SlpPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, isProvider);\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    const res = await this._call('userInfo', [152, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class ClpPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, isProvider);\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('addLiquidity', args, accountAddress);\n  }\n\n  async removeLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('removeLiquidity', args, accountAddress);\n  }\n\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n    };\n  }\n\n  async getStateValues() {\n    const res = await this._call('getStateValues');\n    return {\n      liquidity: deriToNatural(res),\n    };\n  }\n\n  async getLiquidity() {\n    const res = await this._call('getStateValues');\n    if (res && res.liquidity) {\n      return deriToNatural(res.liquidity);\n    }\n    throw new Error(\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\n    );\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class Clp2Pool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, isProvider);\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    //console.log('hit clp2')\n    const res = await this._call('userInfo', [391, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}","import { deriToNatural, MAX_VALUE, bg } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DeriContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, useProvider) {\n    super(chainId, contractAddress, useProvider);\n    this.poolAddress = poolAddress;\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n\n  async isUnlocked(accountAddress) {\n    let allowance = await this._call('allowance', [\n      accountAddress,\n      this.poolAddress,\n    ]);\n    return deriToNatural(allowance).gt(0);\n  }\n  async unlock(accountAddress) {\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\n    return await this._transact(\n      'approve',\n      [this.poolAddress, MAX_VALUE],\n      accountAddress\n    );\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n\n  async _balance(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balance(address) {\n    const [res, decimals] = await Promise.all([\n      this._balance(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n}\n","import { getDeriContractAddress, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class WormholeContract extends Contract {\n  constructor(chainId, contractAddress, useProvider) {\n    super(chainId, contractAddress, useProvider);\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n  async freeze(accountAddress, amount, toChainId) {\n    const { wormholeAddress: toWormholeAddress } = getDeriContractAddress(\n      toChainId\n    );\n    return this._transact(\n      'freeze',\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\n      accountAddress\n    );\n  }\n\n  async mintDeri(\n    accountAddress,\n    amount,\n    fromChainId,\n    fromWormhole,\n    fromNonce,\n    v,\n    r,\n    s\n  ) {\n    return this._transact(\n      'claim',\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\n      accountAddress\n    );\n  }\n}\n","import { PerpetualPool } from '../contract/perpetual_pool';\nimport { BTokenContract } from '../contract/bToken';\nimport { PTokenContract } from '../contract/pToken';\nimport { LTokenContract } from '../contract/lToken';\nimport { DatabaseContract } from '../contract/database';\nimport { DatabaseWormholeContract } from '../contract/database_wormhole';\nimport { DatabaseAirdropContract } from '../contract/database_airdrop';\nimport { MiningVaultPool } from '../contract/mining_vault_pool';\nimport { MiningVaultRouter } from '../contract/mining_vault_router';\n\nimport { DeriEnv } from '../config/env';\nimport { getDBAddressConfig, getDBWormholeAddressConfig, getDBAirdropAddressConfig } from '../config';\nimport { SlpPool } from '../contract/slp_pool';\nimport { ClpPool } from '../contract/clp_pool';\nimport { Clp2Pool } from '../contract/clp2_pool';\nimport { DeriContract } from '../contract/deri';\nimport { WormholeContract } from '../contract/wormhole';\nimport { getLpContractAddress } from '../utils';\n// import { getPoolBaseSymbolList } from '../utils'\n\nexport const databaseFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAddressConfig(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseWormholeFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBWormholeAddressConfig(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseWormholeContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseAirdropFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAirdropAddressConfig(DeriEnv.get(), useProductionDB);\n    const key = address;\n    //console.log('---airdrop key', key)\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseAirdropContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const perpetualPoolFactory = (() => {\n  const perpetualPoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\n      return perpetualPoolInstanceMap[key];\n    }\n    const perpetualPool = new PerpetualPool(\n      chainId,\n      contractAddress,\n      isProvider\n    );\n    // console.log(\"new PerpetualPoolContract\");\n    perpetualPoolInstanceMap[key] = perpetualPool;\n    return perpetualPool;\n  };\n})();\n\nexport const bTokenFactory = (function () {\n  const bTokenInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\n    }\n    if (Object.keys(bTokenInstanceMap).includes(key)) {\n      return bTokenInstanceMap[key];\n    }\n    const bToken = new BTokenContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    // console.log(\"new BTokenContract\")\n    bTokenInstanceMap[key] = bToken;\n    return bToken;\n  };\n})();\n\nexport const pTokenFactory = (function () {\n  const pTokenInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\n    }\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\n      return pTokenInstanceMap[key];\n    }\n    const pToken = new PTokenContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    // console.log(\"new PTokenContract\")\n    pTokenInstanceMap[key] = pToken;\n    return pToken;\n  };\n})();\n\nexport const lTokenFactory = (function () {\n  const lTokenInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\n    }\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\n      return lTokenInstanceMap[key];\n    }\n    const lToken = new LTokenContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    // console.log(\"new LTokenContract\")\n    lTokenInstanceMap[key] = lToken;\n    return lToken;\n  };\n})();\n\nexport const miningVaultPoolFactory = (function () {\n  const mVaultInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(mVaultInstanceMap).includes(key)) {\n      return mVaultInstanceMap[key];\n    }\n    const mVault = new MiningVaultPool(chainId, contractAddress, isProvider);\n    // console.log(\"new MiningValutPool\")\n    mVaultInstanceMap[key] = mVault;\n    return mVault;\n  };\n})();\n\nexport const slpPoolFactory = (function () {\n  const slpPoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\n      return slpPoolInstanceMap[key];\n    }\n    const slpPool = new SlpPool(chainId, contractAddress, isProvider);\n    slpPoolInstanceMap[key] = slpPool;\n    return slpPool;\n  };\n})();\n\nexport const clpPoolFactory = (function () {\n  const clpPoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\n      return clpPoolInstanceMap[key];\n    }\n    const clpPool = new ClpPool(chainId, contractAddress, isProvider);\n    clpPoolInstanceMap[key] = clpPool;\n    return clpPool;\n  };\n})();\n\nexport const clp2PoolFactory = (function () {\n  const clp2PoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\n      return clp2PoolInstanceMap[key];\n    }\n    const clp2Pool = new Clp2Pool(chainId, contractAddress, isProvider);\n    clp2PoolInstanceMap[key] = clp2Pool;\n    return clp2Pool;\n  };\n})();\n\n// export const lpPoolFactory = (function () {\n//   const lpPoolInstanceMap = {};\n//   return (chainId, contractAddress, isProvider = false) => {\n//     let key;\n//     if (isProvider) {\n//       key = `${chainId}.${contractAddress}.isProvider`;\n//     } else {\n//       key = `${chainId}.${contractAddress}`;\n//     }\n//     if (Object.keys(lpPoolInstanceMap).includes(key)) {\n//       return lpPoolInstanceMap[key];\n//     } else {\n//       let lpPool;\n//       const { type } = getLpContractAddress(chainId, contractAddress);\n//       console.log(`lp type: ${type}`);\n//       if (type === 'slp') {\n//         lpPool = new SlpPool(chainId, contractAddress, isProvider);\n//       } else if (type === 'clp') {\n//         lpPool = new ClpPool(chainId, contractAddress, isProvider);\n//       }\n//       lpPoolInstanceMap[key] = lpPool;\n//       return lpPool;\n//     }\n//   };\n// })();\n\nexport const deriFactory = (function () {\n  const deriInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(deriInstanceMap).includes(key)) {\n      return deriInstanceMap[key];\n    }\n    const deri = new DeriContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    deriInstanceMap[key] = deri;\n    return deri;\n  };\n})();\n\nexport const wormholeFactory = (function () {\n  const wormholeInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(wormholeInstanceMap).includes(key)) {\n      return wormholeInstanceMap[key];\n    }\n    const wormhole = new WormholeContract(chainId, contractAddress, isProvider);\n    wormholeInstanceMap[key] = wormhole;\n    return wormhole;\n  };\n})();\n\nexport const miningVaultRouterFactory = (function () {\n  const mVaultInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(mVaultInstanceMap).includes(key)) {\n      return mVaultInstanceMap[key];\n    }\n    const mVault = new MiningVaultRouter(chainId, contractAddress, isProvider);\n    mVaultInstanceMap[key] = mVault;\n    return mVault;\n  };\n})();\n","// export const DERI_ENV=\"dev\"\nexport const DeriEnv = (() => {\n  let _deriEnv = 'dev';\n  return {\n    get: () => _deriEnv,\n    set: (value) => {\n      if (value === 'dev' || value === 'prod' || value === 'production') {\n        _deriEnv = value;\n      } else {\n        throw new Error(\"please use 'dev' or 'prod' for DeriEnv\");\n      }\n    },\n  };\n})();\n"],"sourceRoot":""}