{"version":3,"sources":["utils/LoadableComponent.js","lib/web3js/shared/config/rest_server.js","lib/web3js/shared/config/env.js","lib/web3js/shared/config/version.js","lib/web3js/shared/config/chain.js","lib/web3js/shared/config/database.js","lib/web3js/shared/config/config.js","lib/web3js/shared/utils/validate.js","lib/web3js/shared/config/pool_v1.js","lib/web3js/shared/utils/factory.js","lib/web3js/shared/utils/network.js","lib/web3js/shared/utils/chain.js","lib/web3js/shared/factory/web3.js","lib/web3js/shared/utils/web3.js","lib/web3js/shared/utils/api.js","lib/web3js/shared/config/token.js","lib/web3js/shared/config/config_processor.js","lib/web3js/shared/config/oracle.js","lib/web3js/shared/contract/database/database_base.js","lib/web3js/shared/contract/database/database.js","lib/web3js/shared/contract/database/database_wormhole.js","lib/web3js/shared/contract/database/database_airdrop.js","lib/web3js/shared/contract/contract_base.js","lib/web3js/shared/contract/abis.js","lib/web3js/shared/contract/b_token.js","lib/web3js/shared/contract/oracle/wrapped_oracle.js","lib/web3js/shared/contract/activity/broker_manager.js","lib/web3js/shared/contract/activity/ptoken_airdrop.js","lib/web3js/shared/utils/oracle.js","lib/web3js/shared/factory/oracle.js","lib/web3js/shared/factory/database.js","lib/web3js/shared/factory/contract/b_token.js","lib/web3js/shared/contract/deri/deri.js","lib/web3js/shared/contract/deri/mining_vault_pool.js","lib/web3js/shared/contract/deri/mining_vault_router.js","lib/web3js/shared/contract/deri/wormhole.js","lib/web3js/shared/factory/contract/deri.js","lib/web3js/shared/contract/lp_pool/slp_pool.js","lib/web3js/shared/contract/lp_pool/clp_pool.js","lib/web3js/shared/contract/lp_pool/clp2_pool.js","lib/web3js/shared/factory/contract/lp_pool.js","lib/web3js/shared/factory/contract/activity.js","lib/web3js/shared/api/wallet_api.js","lib/web3js/shared/api/database_api.js","lib/web3js/shared/api/deri_query_api.js","lib/web3js/shared/api/deri_transaction_api.js","lib/web3js/v2/contract/abis.js","lib/web3js/v2/contract/l_token.js","lib/web3js/v2/contract/p_token.js","lib/web3js/v2/factory.js","lib/web3js/v2/contract/perpetual_pool.js","lib/web3js/v2/contract/perpetual_pool_router.js","lib/web3js/shared/api/activity_api.js","lib/web3js/shared/api/slp_pool_api.js","lib/web3js/shared/api/clp2_pool_api.js","lib/web3js/v1/calculation/fundingRate.js","lib/web3js/v1/calculation/index.js","lib/web3js/v1/contract/perpetual_pool.js","lib/web3js/v1/contract/p_token.js","lib/web3js/v1/contract/l_token.js","lib/web3js/v1/factory.js","lib/web3js/shared/api/clp_pool_api.js","lib/web3js/shared/api/lp_pool_query_api.js","lib/web3js/shared/api/lp_pool_transaction_api.js","lib/web3js/v2_lite_open/config.js","lib/web3js/v2_lite_open/contract/abis.js","lib/web3js/v2_lite_open/contract/p_token.js","lib/web3js/v2_lite_open/factory.js","lib/web3js/v2_lite_open/contract/perpetual_pool.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_viewer.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_manager.js","lib/web3js/v2_lite_open/api/query_api.js","lib/web3js/shared/config/pool.js","lib/web3js/shared/config/broker.js","lib/web3js/v1/api/api_v1_globals.js","lib/web3js/v1/api/contract_transaction_api.js","lib/web3js/v1/api/trade_history_api.js","lib/web3js/v1/api/rest_api.js","lib/web3js/v1/api/contract_query_api.js","lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/calculation/liquidity.js","lib/web3js/v2/api/mining_query_api.js","lib/web3js/v2/api/mining_transaction_api.js","lib/web3js/shared/api/api_globals.js","lib/web3js/v2/api/trade_query_api.js","lib/web3js/v2/api/trade_transaction_api.js","lib/web3js/v2/api/trade_history_api.js","lib/web3js/v2_lite/contract/abis.js","lib/web3js/v2_lite/contract/p_token.js","lib/web3js/v2_lite/contract/perpetual_pool_lite_viewer.js","lib/web3js/v2_lite/contract/perpetual_pool.js","lib/web3js/v2_lite/contract/l_token.js","lib/web3js/v2_lite/factory.js","lib/web3js/v2_lite/api/mining_query_api.js","lib/web3js/v2_lite/api/mining_transaction_api.js","lib/web3js/v2_lite/api/trade_query_api.js","lib/web3js/v2_lite/api/trade_transaction_api.js","lib/web3js/v2_lite/api/trade_history_api.js","lib/web3js/option/calculation/findLiquidationPrice2.js","lib/web3js/option/calculation/trade.js","lib/web3js/option/contract/abis.js","lib/web3js/option/factory/tokens.js","lib/web3js/option/contract/everlasting_option_viewer.js","lib/web3js/option/contract/l_token_option.js","lib/web3js/option/contract/p_token_option.js","lib/web3js/option/utils.js","lib/web3js/option/factory/pool.js","lib/web3js/option/contract/everlasting_option.js","lib/web3js/option/api/mining_query_api.js","lib/web3js/option/api/mining_transaction_api.js","lib/web3js/option/api/trade_query_api.js","lib/web3js/option/calculation/PMM2.js","lib/web3js/option/api/trade_transaction_api.js","lib/web3js/option/api/trade_history_api.js","lib/web3js/v2_lite_open/api/transaction_api.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js","components/hoc/withModal.js","components/Loading/LoadingMask.js","model/Intl.js","model/Config.js","model/Version.js","model/Type.js","utils/utils.js","lib/web3js/shared/utils/convert.js","../lang).)*/.json$","App.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Trading.js","model/Loading.js","index.js"],"names":["LoadingPage","NProgress","start","done","React","Component","LoadableComponent","component","Loadable","loader","loading","getRestServerConfig","env","process","DeriEnv","_deriEnv","get","set","value","Error","VERSIONS","LITE_VERSIONS","LITE_AND_OPTION_VERSIONS","PRESERVED_SYMBOLS","getChainProviderUrls","chainId","res","provider_urls","filter","i","length","MAX_UINT256","MAX_INT256","getDBAddress","useProductionDB","getDBWormholeAddress","getDBAirdropAddress","getJsonConfig","version","configs","jsonConfig","JSON","parse","includes","normalizeChainId","chainIds","toString","normalizeAddress","address","startsWith","Web3","utils","toChecksumAddress","validateArgs","args","every","isNaN","parseFloat","validateObjectKeyExist","keyList","val","valName","keys","Object","forEach","prop","validateIsArray","Array","isArray","getPoolV1ConfigList","pool","bToken","pToken","lToken","dToken","MiningVault","initialBlock","bTokenSymbol","symbol","unit","retired","getLpConfigList","type","getMiningVaultRouterConfig","filteredConfig","MiningVaultRouter","getPreminingConfigList","staking","url","isInTvlRace","premining","getLpConfig","poolAddress","c","p","bTokenAddress","lTokenAddress","console","log","getDeriConfig","Deri","Wormhole","getDeriConfigList","deriAddress","wormholeAddress","getMiningVaultConfig","pools","getPoolV1Config","concat","pTokenAddress","dTokenAdress","MinningVaultAddress","factory","klass","instances","key","deepClone","obj","clone","assign","from","shuffleArray","urls","newUrls","index","Math","floor","random","splice","getBlockNumber","a","blockNumber","duration","Number","MAX_SAFE_INTEGER","web3","providers","HttpProvider","startTime","Date","now","eth","getLatestRPCServer","promises","push","Promise","all","blockNumbers","sort","b","latestBlockNumber","reduce","findIndex","getChainProviderUrl","getDailyBlockNumber","chainBlockNumberList","accum","getDailyBlockNumberConfig","parseInt","getNetworkName","poolNetwork","web3Factory","web3InstanceMap","walletChainId","window","ethereum","request","method","isBrowser","isJsDom","providerUrl","getLatestBlockNumber","getBlockInfo","getBlock","getPastEvents","contract","eventName","fromBlock","to","events","amount","toBlock","es","e","getHttpBase","fetchJson","fetch","resp","json","fetchRestApi","path","opts","catchApiError","func","methodName","defaultValue","catchTxApiError","result","success","transaction","error","bTokenPairs","AMUSDC","offchainSymbolPairs","AXSUSDT","MANAUSDT","MBOXUSDT","IBSCDEFI","IGAME","ALICEUSDT","SANDUSDT","QUICKUSDT","GHSTUSDT","normalizeOptionSymbol","optionSymbol","split","getVolatilitySymbols","symbols","s","volSymbol","getNormalizedOptionSymbols","map","isUsedRestOracle","mapToSymbol","mapToSymbolInternal","values","indexOf","normalizeSymbolUnit","re","RegExp","join","replace","getIndexInfo","internalSymbol","customIndexs","tokens","IMEME","poolProcessor","v2","v2_lite","symbolId","v2_lite_open","config","option","poolValidator","getOracleConfigList","oracle","DatabaseBaseContract","contractAddress","contractAbi","this","Contract","_init","retry","updateProviderUrl","methods","call","DB_CONTRACT_ABI","DatabaseContract","keyArray","_call","CONTRACT_ABI","DatabaseWormholeContract","accountAddress","DatabaseAirdropContract","MAX_GAS_AMOUNT","RE_ERROR_MSG","ContractBase","gas","estimateGas","match","trim","tx","self","_transactionReceipt","resolve","reject","getTransactionReceipt","receipt","setTimeout","status","errorMessage","_estimatedGas","txRaw","numberToHex","data","encodeABI","params","_getTransactionReceipt","bTokenAbi","wrappedOracleAbi","brokerManagerAbi","pTokenAirdropAbi","BToken","_balanceOf","decimals","bg","deriToNatural","allowance","gt","_transact","WrappedOracle","constructor","decimal","super","BrokerManager","brokerAddress","PTokenAirdrop","getPriceInfoForV1","async","baseUrl","addSymbolParam","priceInfo","mode","cache","ok","stringify","getOracleUrl","getPriceFromRest","getPriceInfo","price","volatility","mapToBTokenInternal","getOraclePriceFromCache","timestamp","getOraclePrice","getPriceInfos","headers","body","symbolList","filteredByChainId","getOracleConfig","oracleFactory","getPrice","getOraclePricesForOption","oracleSymbols","oracleSymbolPrices","acc","toWei","getOracleVolatilityForOption","volSymbols","volatilities","getOracleVolatilitiesForOption","oracleSymbolVolatilities","instanceMap","RestOracle","wrappedOracleFactory","databaseFactory","databaseInstanceMap","database","databaseWormholeFactory","databaseAirdropFactory","bTokenFactory","DeriContract","MiningVaultPool","WormholeContract","toChainId","toWormholeAddress","naturalToDeri","fromChainId","fromWormhole","fromNonce","v","r","deriFactory","wormholeFactory","miningVaultRouterFactory","miningVaultPoolFactory","SlpPool","ClpPool","minAddLiquidity","redemptionFeeRatio","liquidity","Clp2Pool","slpPoolFactory","slpPoolInstanceMap","slpPool","clpPoolFactory","clpPoolInstanceMap","clpPool","clp2PoolFactory","clp2PoolInstanceMap","clp2Pool","brokerManagerFactory","pTokenAirdropFactory","connectWallet","handleChainChanged","handleAccountChanged","accounts","account","on","location","reload","hexToNumber","getUserWalletBalance","walletAddress","getBalance","balance","fromWei","getUserInfo","userAddress","db","getValues","catch","err","deadline","nonce","valid","deriToString","deriToBool","getUserInfoHarvest","harvestLp","harvestTrade","lp","trade","getUserInfoTotal","total","getUserInfoAll","userInfo","userInfoHarvest","userInfoTotal","getPoolLiquidity","getPoolInfoApy","apy","volume1h","volume24h","getLpPoolInfoApy","apy2","getUserInfoInPool","getUserInfoAllForAirDrop","v1","r1","s1","r2","s2","getUserWormholeSignature","databaseWormhole","signature","isDeriUnlocked","deri","isUnlocked","getDeriBalance","balanceOf","mintDToken","miningVaultAddress","miningVault","freeze","wormhole","mintDeri","unlockDeri","unlock","mintAirdrop","miningVaultRouter","mint","perpetualPoolAbi","perpetualPoolRouterAbi","lTokenAbi","pTokenAbi","processAsset","pnl","lastCumulativePnl","processPosition","volume","cost","lastCumulativeFundingRate","perpetualPoolFactory","bTokenCount","symbolCount","routerAddress","protocolFeeCollector","protocolFeeAccrued","getLengths","getAddresses","getParameters","decimals0","minBToken0Ratio","minPoolMarginRatio","minInitialMarginRatio","minMaintenanceMarginRatio","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","protocolFeeCollectRatio","bTokenId","swapperAddress","oracleAddress","discount","cumulativePnl","multiplier","feeRatio","fundingRateCoefficient","cumulativeFundingRate","tradersNetVolume","tradersNetCost","getStorageAt","_calculateFee","abs","times","perpetualPoolRouterFactory","isMaximum","priceInfos","lTokenFactory","pTokenFactory","setBroker","brokerManagerAddress","getBrokerConfig","brokerManager","getAirdropPTokenAddress","airdropPToken","getAirdropPTokenWhitelistCount","totalWhitelistCount","isUserPTokenExist","getPoolConfig2","getSlpLiquidityInfo","getLiquidity","bTokenBalance","shares","poolLiquidity","shareValue","addSlpLiquidity","addLiquidity","removeSlpLiquidity","removeLiquidity","isSlpUnlocked","unlockSlp","getSlpWalletBalance","getClp2LiquidityInfo","addClp2Liquidity","removeClp2Liquidity","isClp2Unlocked","unlockClp2","getClp2WalletBalance","calculateLiquidityUsed","poolMarginRatio","calculateFundingRate","processFundingRate","fundingRate","annualBlockCount","calculateShareValue","lTokenTotalSupply","eq","div","calculateMaxRemovableShares","lTokenBalance","removable","plus","minus","max","min","calculateEntryPrice","calculateMarginHeld","calculatePnl","calculateMaxWithdrawMargin","margin","held","calculateLiquidationPrice","tmp","isOrderValid","newVolume","minMargin","poolMaxVolume","gte","lte","negated","message","POOL_ABI","PerpetualPool","isProvider","cumuFundingRate","cumuFundingRateBlock","priceDelayAllowance","signed","fundingRatePerBlock","liquidityUsed","stateValues","getStateValues","parameters","args1","args2","PTokenContract","lastCumuFundingRate","lastUpdateTimestamp","LTokenContract","perpetualPoolInstanceMap","perpetualPool","pTokenInstanceMap","lTokenInstanceMap","getClpLiquidityInfo","totalSupply","maxRemovableShares","addClpLiquidity","removeClpLiquidity","isClpUnlocked","unlockClp","getClpWalletBalance","getLpLiquidityInfo","isLpUnlocked","getLpWalletBalance","unlockLp","addLpLiquidity","removeLpLiquidity","getPoolV2LiteManagerConfig","prod","dev","find","perpetualPoolLiteAbi","pTokenLiteAbi","perpetualPoolLiteManagerAbi","perpetualPoolLiteViewerAbi","PTokenLite","tokenId","owner","operator","perpetualPoolLiteFactory","updateAddresses","symbolIds","getActiveSymbolIds","getSymbol","block_number","extraInfo","getBTokenSymbol","getSymbols","getPoolExtraInfo","perpetualPoolLiteViewerFactory","perpetualPoolLiteManagerFactory","poolId","pairedTokenAddress","getPoolOpenConfigList","openPoolChainIds","poolManagerAddress","poolManager","poolNums","getNumPools","numsArray","addresses","id","getConfig","getPoolOpenOracleList","o","isPoolController","controller","perpetualPoolLite","poolController","getPoolAllSymbolNames","viewerAddress","getPoolViewerConfig","poolViewer","getOffChainOracleSymbols","openConfigListCache","oldData","updatedAt","getPoolConfigList","bTokens","router","isOption","flat","expandPoolConfigV2","offchainSymbolIds","offchainSymbols","expandPoolConfigV2Lite","isOpen","expandPoolConfigV2LiteOpen","volatilitySymbols","expandPoolConfigOption","getPoolConfig","getPoolVersion","undefined","poolConfigList","check","getFilteredPoolConfigList","_getPoolConfig","defaultBToken","defaultSymbol","getPoolBTokenList","getPoolBTokenIdList","getPoolSymbolList","getPoolSymbolIdList","viewers","getBrokerConfigList","fundingRateCache","resourceMap","resource","priceCache","_accountAddress","_price","_interval","_update","update","setInterval","clear","clearInterval","PerpetualPoolParametersCache","_parameters","_ws","depositMargin","pPool","withdrawMargin","getPositionInfo","maxWithdrawMargin","tradeWithMargin","orderValidation","closePosition","processTradeEvent","info","txHash","tradeVolume","_getTimeStamp","timeStamp","direction","time","transactionFee","notional","baseToken","transactionHash","processLiquidateEvent","national","getTradeHistoryOnline","_getBlockInfo","filters","_getPastEvents","number","item","returnValues","unshift","getLiquidateHistoryOnline","getTradeHistory2","tradeFromBlock","tradeHistoryBlock","liquidateFromBlock","liquidateHistoryBlock","tradeHistory","tradeHistoryOnline","liquidateHistoryOnline","getSpecification","averageEntryPrice","marginHeld","unrealizedPnl","liquidationPrice","getLiquidityInfo","poolDynamicEquity","getWalletBalance","getEstimatedFee","getFundingRate","poolInfo","fundingRate0","naturalWithPercentage","toExponential","getEstimatedFundingRate","newNetVolume","fundingRate1","getLiquidityUsed","liquidityUsed0","getEstimatedLiquidityUsed","liquidityUsed1","dynamicCost","calculateTxFee","calculateFundingFee","dynamicEquity","lastUpdatedBlockNumber","calculateBTokenDynamicEquities","isBToken0RatioValid","bToken0Ratio","totalDynamicEquity","lt","isPoolMarginRatioValid","userLiquidity","totalCost","bTokenIdList","symbolIdList","parameterInfo","bTokenInfo","lTokenAsset","getBToken","getAsset","totalPnl","restLiquidity","calculateMaxRemovableLiquidity","approximatePnl","perpetualPoolRouter","validation","_prices","symbolInfo","bTokenDiscounts","bTokenMultiplier","indexConstituents","symbolConfigList","positionInfo","margins","positions","latestPrice","getLastUpdatedBlockNumber","getPosition","getMargins","getPositions","symbolPrices","marginHeldBySymbol","unrealizedPnlList","fundingFee","_getFundingRate","promiseList","liquidityUsedInAmount","getPoolBTokensBySymbolId","bTokenList","resultList","walletBalance","availableBalance","addMargin","removeMargin","getTradeHistory","lTokenLiteAbi","PerpetualPoolLiteViewer","PerpetualPoolLite","viewer","activeSymbolIds","isEqualSet","Set","activeSymbols","prices","_updateOffchainSymbols","_getSymbolPrices","LTokenLite","lTokenLiteFactory","pTokenLiteFactory","_getLiquidityInfo","getLastUpdateBlock","getMargin","priceIndex","getEverlastingTimePriceAndDelta","S","K","V","T","timeValue","delta","u","sqrt","pow","getDynamicInitialMarginRatio","spot","strike","isCall","initialMarginRatio","otmRatio","canLiquidateWithPrice","trader","newUnderlierPrice","newDynamicMargin","dynamicMargin","newInitialMargin","initialMargin","position","newIntrinsicValue","strikePrice","newTimeValue","newDelta","premiumFundingPeriod","newPnl","newDynamicMarginRatio","spotPrice","dynamicMarginRatio","maintenanceMarginRatio","findLiquidationPrice","numPositions","price1","price2","final1","final2","l1","l2","head","slice","maintenanceMargin","dynamicInitialMarginRatio","dynamicInitialPoolMarginRatio","initialPoolMarginRatio","getMarginHeldBySymbol","getAverageEntryPrice","getLiquidationPrice","state","poolState","symbolState","traderState","positionState","normalizedSymbol","toNumberForObject","underlier","everlastingOptionAbi","everlastingOptionViewerAbi","lTokenOptionAbi","pTokenOptionAbi","everlastingOptionViewerFactory","oraclePrices","oracleVolatilities","fromWeiForObject","deleteIndexedKey","lTokenOptionFactory","pTokenOptionFactory","lastCumulativePremiumFundingRate","volatilitiesCache","everlastingOptionFactory","symbolVolatilities","getPoolStates","_updateConfig","volatilityInfos","bAmount","_getVolSymbolPrices","lShares","optionPool","symbolInfo2","poolInfo2","symbolIndex","initialMarginRatioOrigin","maintenanceMarginRatioOrigin","symbolStr","volPrice","getTraderStates","timePrice","markPrice","dpmmPrice","oS","premiumFundingAccrued","getPositionInfos","volPrices","liquidationPrices","oSymbol","getLiquidationPrices","vIndex","curSymbolIndex","premiumFunding","premiumFundingPerSecond","intrinsicPrice","premiumFunding0","getEstimatedTimePrice","intrinsicValue","theoreticalPrice","queryTradePMM","toNumber","tradeCost","tr","createPool","newParameters","addSymbol","getContractAddressConfig","getPoolV2ConfigList","getLiquidityInfoV2l","getLiquidityInfoOption","getLiquidityInfo2","getLiquidityInfoV2","getPoolLiquidityV2l","getPoolLiquidity2","getPoolLiquidityV2","getPoolInfoApyV2l","getPoolInfoApy2","getPoolInfoApyV2","addLiquidityV2l","addLiquidityOption","addLiquidity2","addLiquidityV2","removeLiquidityV2l","removeLiquidityOption","removeLiquidity2","removeLiquidityV2","getSpecificationV2l","getSpecificationOption","getSpecification2","getSpecificationV2","getPositionInfoV2l","getPositionInfoOption","getPositionInfo2","getPositionInfoV2","getPositionInfosPosition","getWalletBalanceV2l","getWalletBalanceOption","getWalletBalance2","getWalletBalanceV2","isUnlockedV2l","isUnlockedOption","isUnlocked2","isUnlockedV2","getEstimatedFeeV2l","getEstimatedFeeOption","getEstimatedFee2","getEstimatedFeeV2","getFundingRateV2l","getFundingRateOption","getFundingRate2","getFundingRateV2","getEstimatedFundingRateV2l","getEstimatedFundingRateOption","getEstimatedFundingRate2","getEstimatedFundingRateV2","getLiquidityUsedV2l","getLiquidityUsedOption","getLiquidityUsed2","getLiquidityUsedV2","getEstimatedLiquidityUsedV2l","getEstimatedLiquidityUsedOption","getEstimatedLiquidityUsed2","getEstimatedLiquidityUsedV2","unlockV2l","unlockOption","unlock2","unlockV2","depositMarginV2l","depositMarginOption","depositMargin2","depositMarginV2","withdrawMarginV2l","withdrawMarginOption","withdrawMargin2","withdrawMarginV2","tradeWithMarginV2l","tradeWithMarginOption","tradeWithMargin2","tradeWithMarginV2","closePositionV2l","closePositionOption","closePosition2","closePositionV2","getTradeHistoryV2l","getTradeHistoryOption","getTradeHistoryV2","withModal","appElement","document","getElementById","customizeStyle","overlay","zIndex","background","content","border","inset","overflow","WithModal","props","modalIsOpen","className","overlayMerged","mergedStyle","style","portalClassName","intl","locale","onClose","inject","observer","data-title","require","lang","page","toLowerCase","test","pageName","Intl","makeObservable","observable","setLocale","action","dict","computed","localeLabel","language","navigator","prefix","restoreLocale","supportedCatalog","storeLocale","label","substr","toUpperCase","Config","setAll","isOptions","current","sortOptionSymbols","isV2","cur","Version","makeAutoObservable","setCurrent","isV1","isV2Lite","isFuture","base","BigNumber","repeat","formatAddress","formatBalance","toFixed","eqInNumber","str1","str2","isLP","isSushiLP","isCakeLP","sessionStorageKey","storeConfig","sessionStorage","setItem","getConfigFromStore","getItem","storeChain","chainInfo","addParam","param","urlString","href","URL","searchParams","has","append","hasParam","getParam","getFormatSymbol","curChain","code","stripSymbol","secondsInRange","intervalRange","calcRange","interval","getTime","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","value1","value2","hexToString","hexToUtf8","hexToNumberString","sd","formatBN","bigNumber","toFormat","replaceAll","userAgent","set1","set2","size","newObj","k","symbolArr","unique","to2","index1","index2","index3","webpackContext","req","webpackContextResolve","__webpack_require__","module","exports","DesktopApp","MobileApp","Mask","setIsOpen","useState","useEffect","isShowMask","LoadingMask","MaskWrapper","isOptionsLite","useRouteMatch","isOptionsPro","categry","isMobile","Wallet","detail","supportWeb3","isConnected","approve","connect","loadWalletBalance","switchNetwork","network","metamask","addError","supported","setDetail","supportV2","supportV1","supportAllVersion","supportChain","supportInnocation","supportOpen","isApproved","refresh","isSupportChain","supportInnovation","Oracle","timeType","kData","ws","paused","listeners","already","setIndex","WebSocket","transports","withCredentials","emit","initWebSocket","low","high","open","close","time_type","unsubscribeBars","setSymbol","setTimeType","listener","callback","history","el","setPause","Position","callbackALL","wallet","spec","mockPositionInfo","deltaFundingAccrued","balanceContract","startAll","intervalAll","loadAll","load","pause","resume","deltaFundingCoefficient","optionType","bTokenSymbolDisplay","getUnderlierStrike","setInfo","History","Trading","slideIncrementMargin","userSelectedDirection","optionsConfigs","setWallet","setConfigs","setOptionConfigs","setConfig","setContract","setPosition","setPositions","setVolume","setUserSelectedDirection","setFundingRate","setHistory","setSlideMargin","fundingRateTip","optionFundingRateTip","initialMarginRatioTip","maintenanceMarginRatioTip","TransactionFeeTip","multiplierTip","volumeDisplay","isNegative","isPositive","configInfo","contractInfo","historyInfo","finishedCallback","defaultConfig","getDefaultConfig","loadByConfig","changed","onChange","store","symbolChanged","addListener","syncFundingRate","loadFundingRate","then","results","finally","fromStore","getFromStore","pos","setPaused","groupConfigBySymbol","increment","MarginRatio","substring","initVolume","currentSymbolMarginHeld","otherMarginHeld","contractValue","incrementMarginHeld","totalMarginHeld","dynBalance","available","exchanged","multipliedBy","totalContractValue","leverage","isLoading","setIsLoading","trading","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2ba67913.chunk.js","sourcesContent":["import React from 'react'\r\nimport Loadable from 'react-loadable'\r\nimport NProgress from 'nprogress'\r\nimport 'nprogress/nprogress.css'\r\n\r\nclass LoadingPage extends React.Component {\r\n  //类似github页面加载的那个加载条\r\n  componentWillMount(){\r\n    NProgress.start()\r\n  }\r\n  componentWillUnmount(){\r\n    NProgress.done()\r\n  }\r\n  render () {\r\n    return (\r\n      <div/>\r\n    )\r\n  }\r\n}\r\n\r\nconst LoadableComponent = (component) => {\r\n  return Loadable({\r\n    loader: component,\r\n    loading: ()=><LoadingPage/>\r\n  })\r\n}\r\n\r\nexport default LoadableComponent","/**\r\n * Get REST server config\r\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\r\n * @returns {string} server url\r\n */\r\nexport const getRestServerConfig = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    // for production\r\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://api.deri.finance';\r\n    //return 'https://alphaapi.deri.finance';\r\n  } else {\r\n    // for test\r\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://testnetapi.deri.finance';\r\n  }\r\n};\r\n\r\nexport const getRedisWorkerQueneConfig = (env = \"dev\") => {\r\n  if (env === \"prod\") {\r\n    return ['trade_tx_quene', 'trade_worker_group']\r\n  } else {\r\n    return ['trade_tx_quene_dev', 'trade_worker_group_dev']\r\n  }\r\n};\r\n","// export const DERI_ENV=\"dev\"\r\nexport const DeriEnv = (() => {\r\n  let _deriEnv = 'dev';\r\n  return {\r\n    get: () => _deriEnv,\r\n    set: (value) => {\r\n      if (value === 'dev' || value === 'prod' || value === 'production') {\r\n        _deriEnv = value;\r\n      } else {\r\n        throw new Error(\"please use 'dev' or 'prod' for DeriEnv\");\r\n      }\r\n    },\r\n  };\r\n})();\r\n","// versions\r\nexport const VERSIONS = ['v2', 'v2_lite', 'v2_lite_open', 'option']\r\n//export const VERSIONS = ['v2', 'v2_lite', 'v2_lite_open']\r\nexport const LITE_VERSIONS = ['v2_lite', 'v2_lite_open']\r\nexport const LITE_AND_OPTION_VERSIONS = ['v2_lite', 'v2_lite_open', 'option']\r\n\r\nexport const PRESERVED_SYMBOLS = ['BTCUSD', 'ETHUSD', 'BNBUSD'];\r\n","// add a new chain: validateChainId, getChainProviderUrls, getNetworkName, getDailyBlockNumberConfig\r\nexport const getChainIds = () => {\r\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\r\n};\r\n\r\nexport const getChainProviderUrls = (chainId) => {\r\n  const chainProviderUrls = [\r\n    {\r\n      provider_urls: [\r\n        'https://mainnet.infura.io/v3/d0e6582644a845ee8d7c3c18683fec06',\r\n      ],\r\n      chainId: '1',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://bsc-dataseed.binance.org',\r\n        'https://bsc-dataseed1.defibit.io/',\r\n        'https://bsc-dataseed1.ninicoin.io/',\r\n      ],\r\n      chainId: '56',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-mainnet.hecochain.com'],\r\n      chainId: '128',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://rpc-mainnet.matic.network',\r\n        'https://rpc-mainnet.maticvigil.com',\r\n        'https://rpc-mainnet.matic.quiknode.pro',\r\n        'https://matic-mainnet.chainstacklabs.com',\r\n        'https://matic-mainnet-full-rpc.bwarelabs.com',\r\n        'https://matic-mainnet-archive-rpc.bwarelabs.com',\r\n      ],\r\n      chainId: '137',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '3',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '42',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n      ],\r\n      chainId: '97',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-testnet.hecochain.com'],\r\n      chainId: '256',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://rpc-mumbai.matic.today',\r\n        'https://rpc-mumbai.maticvigil.com',\r\n        'https://matic-mumbai.chainstacklabs.com',\r\n        'https://matic-testnet-archive-rpc.bwarelabs.com',\r\n      ],\r\n      chainId: '80001',\r\n    },\r\n  ];\r\n\r\n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\r\n  //console.log('res',res)\r\n  if (res.length > 0) {\r\n    return res[0].provider_urls\r\n  } else {\r\n    throw new Error(`getChainProviderUrls: no urls for chainId ${chainId}`)\r\n  }\r\n}\r\n\r\nexport const getDailyBlockNumberConfig = () => {\r\n  // let chainBlockNumberList = [\r\n  //   '2367422',\r\n  //   '2367422',\r\n  //   '10497304',\r\n  //   '10497304',\r\n  //   '10511369',\r\n  //   '10511369',\r\n  //   '14747860',\r\n  //   '14747860',\r\n  // ];\r\n\r\n  // compute matic aunual block number: block height(16309458, 10000000)\r\n  let chainBlockNumberList = [\r\n    '6486',\r\n    '6486',\r\n    '28759',\r\n    '28759',\r\n    '28798',\r\n    '28798',\r\n    '40405',\r\n    '40405',\r\n  ];\r\n  return getChainIds().reduce((accum, i, index) => {\r\n    accum[i] = chainBlockNumberList[index];\r\n    return accum;\r\n  }, {});\r\n};\r\n\r\n// MAX UINT/INT256\r\n// hex(2**256-1)\r\nexport const MAX_UINT256 =\r\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\r\n// hex((2**255 -1) // 10**18)\r\nexport const MAX_INT256 =\r\n  '0x9392ee8e921d5d073aff322e62439fcf32d7f344649470f90';\r\n\r\n","export const getDBProviderUrls = () => [\r\n  'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n];\r\n\r\nexport const getDBAddress = (env = 'dev', useProductionDB) => {\r\n  if (env === 'prod' && useProductionDB) {\r\n    // for production\r\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\r\n  }\r\n  // for test\r\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n};\r\n\r\nexport const getDBWormholeAddress = (env = 'dev', useProductionDB) => {\r\n  if (env === 'prod' && useProductionDB) {\r\n    // for production\r\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\r\n  }\r\n  // for test\r\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\r\n};\r\n\r\nexport const getDBAirdropAddress = (env = 'dev', useProductionDB) => {\r\n  if (env === 'prod' && useProductionDB) {\r\n    // for production\r\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\r\n  }\r\n  // for test\r\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n};\r\n","import { DeriEnv } from './env';\r\nimport jsonConfig from '../resources/config.json';\r\nimport { VERSIONS } from './version';\r\n\r\nexport const getJsonConfig = (version, env) => {\r\n  env = env || DeriEnv.get();\r\n  // for browser and nodejs\r\n  let configs =\r\n    typeof jsonConfig === 'object' ? jsonConfig : JSON.parse(jsonConfig);\r\n  if (configs[version] && VERSIONS.includes(version)) {\r\n    configs = configs[version];\r\n    if (['prod', 'dev'].includes(env)) {\r\n      if (configs && configs[env]) {\r\n        return configs[env];\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error(\r\n      `getJsonConfig(): invalid config of version '${version}' and env '${env}'`\r\n    );\r\n  }\r\n};\r\n","import { getChainIds } from '../config/chain';\r\nimport Web3 from 'web3';\r\n\r\n// validate\r\nexport const normalizeChainId = (chainId) => {\r\n  const chainIds = getChainIds()\r\n  let res = chainId ? chainId.toString() : chainId;\r\n  if (chainId && chainIds.includes(res)) {\r\n    return res;\r\n  } else {\r\n    throw new Error(`invalid chainId: ${chainId}`);\r\n  }\r\n};\r\n\r\nexport const normalizeAddress = (address) => {\r\n  if (typeof address === 'string' && address.startsWith('0x') && address.length == 42 ) {\r\n    return Web3.utils.toChecksumAddress(address);\r\n  } else {\r\n    throw new Error(`invalid address: ${address}`);\r\n  }\r\n};\r\n\r\nexport const validateArgs = (...args) =>\r\n  args.every((i) => !isNaN(parseFloat(i)));\r\n\r\nexport const validateObjectKeyExist = (keyList, val, valName) => {\r\n  const keys = Object.keys(val);\r\n  keyList.forEach((prop) => {\r\n    if (!keys.includes(prop)) {\r\n      throw new Error(\r\n        `validateConfig(): property ${prop} is not exist in the ${valName} config.`\r\n      );\r\n    }\r\n  });\r\n};\r\nexport const validateIsArray = (val, valName) => {\r\n  if (!Array.isArray(val)) {\r\n    throw new Error(\r\n      `validateConfig(): property ${valName} is an array in the config.`\r\n    );\r\n  }\r\n};\r\n","import { DeriEnv } from '../config'\r\nimport { normalizeChainId } from '../utils/validate'\r\n\r\nexport const getPoolV1ConfigList = (env = 'dev') => {\r\n  // production environment\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        pool:   '0xAf081e1426f64e74117aD5F695D2A80482679DE5',\r\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\r\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '7906919',\r\n        bTokenSymbol: 'BUSD',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '56',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\r\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\r\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '6753399',\r\n        bTokenSymbol: 'BUSD',\r\n        symbol: 'COIN',\r\n        unit: 'COIN',\r\n        chainId: '56',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0xD3f5E6D1a25dA1E64EDf7cb571f9fAD17FEb623c',\r\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\r\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '8005906',\r\n        bTokenSymbol: 'DERI',\r\n        symbol: 'iMEME',\r\n        unit: 'iMEME',\r\n        chainId: '56',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0x23779AAc1e74a65F27B4840A8E41F767Ce993118',\r\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\r\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\r\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        initialBlock: '12548746',\r\n        bTokenSymbol: 'USDT',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '1',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0x96a1F15676746b9339DBc185F277618359Ac6346',\r\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\r\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\r\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        initialBlock: '12548827',\r\n        bTokenSymbol: 'BAC',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '1',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0xBA7e183042c8796E26A5a2375927DE7B1AB99d97',\r\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\r\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\r\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        initialBlock: '5220431',\r\n        bTokenSymbol: 'HUSD',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '128',\r\n        version: 'v1',\r\n        retired: true,\r\n      },\r\n    ];\r\n  }\r\n  // develop environment\r\n  return [\r\n    {\r\n      pool: '0x372b640A00a0A6B73381e9363A39644a712cCc37',\r\n      bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\r\n      pToken: '0xB9113758D771750e9E8ECb359A19689eC89AC1a5',\r\n      lToken: '0xC727a10Be4740441BE74960296097aF39D701980',\r\n      initialBlock: '9378545',\r\n      bTokenSymbol: 'BUSD',\r\n      symbol: 'BTCUSD',\r\n      unit: 'BTC',\r\n      chainId: '97',\r\n      version: 'v1',\r\n    },\r\n  ];\r\n};\r\n\r\n// export const getSlpContractAddressConfig = (env = 'dev') => {\r\n//   if (env === 'prod') {\r\n//     return [\r\n//       {\r\n//         pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\r\n//         bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n//         pToken: '0x0000000000000000000000000000000000000000',\r\n//         lToken: '0x0000000000000000000000000000000000000000',\r\n//         dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n//         MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n//         chainId: '1',\r\n//         bTokenSymbol: 'DERI-USDT SLP',\r\n//         symbol: '--',\r\n//       },\r\n//     ];\r\n//   }\r\n//   console.log('getSlpContractAddressConfig(): no config for dev environment');\r\n//   return [];\r\n// };\r\n\r\n// export const getClpContractAddressConfig = (env = 'dev') => {\r\n//   if (env === 'prod') {\r\n//     return [\r\n//       {\r\n//         pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\r\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n//         pToken: '0x0000000000000000000000000000000000000000',\r\n//         lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\r\n//         dToken: '0x0000000000000000000000000000000000000000',\r\n//         MiningVault: '0x0000000000000000000000000000000000000000',\r\n//         initialBlock: '6894880',\r\n//         chainId: '56',\r\n//         bTokenSymbol: 'CAKE-LP',\r\n//         symbol: '--',\r\n//         retired: true,\r\n//       },\r\n//     ];\r\n//   } else {\r\n//     return [];\r\n//   }\r\n// };\r\n// export const getClp2ContractAddressConfig = (env = 'dev') => {\r\n//   if (env === 'prod') {\r\n//     return [\r\n//       {\r\n//         pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n//         pToken: '0x0000000000000000000000000000000000000000',\r\n//         lToken: '0x0000000000000000000000000000000000000000',\r\n//         dToken: '0x0000000000000000000000000000000000000000',\r\n//         MiningVault: '0x0000000000000000000000000000000000000000',\r\n//         initialBlock: '699498',\r\n//         chainId: '56',\r\n//         bTokenSymbol: 'CAKE-LP SYRUP',\r\n//         symbol: '--',\r\n//       },\r\n//     ];\r\n//   } else {\r\n//     return [];\r\n//   }\r\n// };\r\n\r\nexport const getLpConfigList = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        pool:   '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\r\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        bTokenSymbol: 'DERI-USDT SLP',\r\n        symbol: '--',\r\n        type: 'slp',\r\n      },\r\n      {\r\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\r\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\r\n        dToken: '0x0000000000000000000000000000000000000000',\r\n        MiningVault: '0x0000000000000000000000000000000000000000',\r\n        initialBlock: '6894880',\r\n        chainId: '56',\r\n        bTokenSymbol: 'CAKE-LP',\r\n        symbol: '--',\r\n        type: 'clp',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0x0000000000000000000000000000000000000000',\r\n        MiningVault: '0x0000000000000000000000000000000000000000',\r\n        initialBlock: '699498',\r\n        chainId: '56',\r\n        bTokenSymbol: 'CAKE-LP SYRUP',\r\n        symbol: '--',\r\n        type: 'clp2',\r\n      },\r\n    ];\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getMiningVaultRouterConfig = (chainId) => {\r\n  const configs = [\r\n    {\r\n      MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\r\n      chainId: '56',\r\n    },\r\n  ];\r\n  const filteredConfig = configs.filter((i) => i.chainId === chainId);\r\n  if (filteredConfig.length > 0) {\r\n    return filteredConfig[0].MiningVaultRouter;\r\n  } else {\r\n    throw new Error(\r\n      `getMiningVaultRouterAddressConfig: no address for chainId ${chainId}`\r\n    );\r\n  }\r\n};\r\n\r\nexport const getDeriConfigList= (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '1',\r\n      },\r\n      {\r\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '56',\r\n      },\r\n      {\r\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\r\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '128',\r\n      },\r\n    ];\r\n  }\r\n  return [\r\n    {\r\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\r\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '3',\r\n    },\r\n    {\r\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\r\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '97',\r\n    },\r\n    {\r\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\r\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '256',\r\n    },\r\n  ];\r\n};\r\n\r\nexport const getPreminingConfigList = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        bToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xe91cb8ba06028f38e231F7099e9B97CEDd2f2736',\r\n        pool: '0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/0/0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\r\n        bTokenSymbol: 'WBNB',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x8518054fa6b7E0d4834bfD152c9BA5BDB856FD2B',\r\n        pool: '0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/1/0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\r\n        bTokenSymbol: 'CAKE',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0xa184088a740c695E156F91f5cC086a06bb78b827',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x167704539C9acAcF6f0C2D7AAeB4413339F86AaA',\r\n        pool: '0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: true,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/2/0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\r\n        bTokenSymbol: 'AUTO',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\r\n        pool: '0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        chainId: '128',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/1/0/0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\r\n        bTokenSymbol: 'WHT',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\r\n        pool: '0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        chainId: '128',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/1/1/0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\r\n        bTokenSymbol: 'MDX',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x3B50881F5646E809ef85Bb0016af3b2Ee5313d46',\r\n        pool: '0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/0/0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\r\n        bTokenSymbol: 'SUSHI',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0069b4Fb48e5B8E9CB6960f4c2468b625ACfb465',\r\n        pool: '0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/1/0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\r\n        bTokenSymbol: 'AAVE',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xFFCfB31b6500E7e420CFE5D0df710DdF928F55FD',\r\n        pool: '0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: true,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/2/0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\r\n        bTokenSymbol: 'DERI-USDT SLP',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n    ];\r\n  } else {\r\n    return []\r\n  }\r\n};\r\n\r\n\r\n// export const getSlpConfig = (chainId, poolAddress) => {\r\n//   chainId = normalizeChainId(chainId);\r\n//   const pools = getLpConfigList(DeriEnv.get()).filter(\r\n//     (c) => c.chainId === chainId\r\n//   );\r\n//   const pool = pools.filter((p) => p.pool === poolAddress);\r\n//   if (pool.length > 0) {\r\n//     return {\r\n//       poolAddress: pool[0].pool,\r\n//       bTokenAddress: pool[0].bToken,\r\n//       pTokenAddress: pool[0].pToken,\r\n//       lTokenAddress: pool[0].lToken,\r\n//       dTokenAdress: pool[0].dToken,\r\n//       MinningVaultAddress: pool[0].MiningVault,\r\n//     };\r\n//   }\r\n//   console.log(\r\n//     `getSlpConfig(): contract address is not found: ${chainId} ${poolAddress}`\r\n//   );\r\n//   return {};\r\n// };\r\n\r\n// export const getClp2Config= (chainId, poolAddress) => {\r\n//   chainId = normalizeChainId(chainId);\r\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\r\n//     (c) => c.chainId === chainId\r\n//   );\r\n//   const pool = pools.filter((p) => p.pool === poolAddress);\r\n//   if (pool.length > 0) {\r\n//     return {\r\n//       poolAddress: pool[0].pool,\r\n//       bTokenAddress: pool[0].bToken,\r\n//       pTokenAddress: pool[0].pToken,\r\n//       lTokenAddress: pool[0].lToken,\r\n//       dTokenAdress: pool[0].dToken,\r\n//       MinningVaultAddress: pool[0].MiningVault,\r\n//     };\r\n//   }\r\n//   console.log(\r\n//     `getClp2Config(): contract address is not found: ${chainId} ${poolAddress}`\r\n//   );\r\n//   return {};\r\n// };\r\n\r\n// export const getClpConfig= (chainId, poolAddress) => {\r\n//   chainId = normalizeChainId(chainId);\r\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\r\n//     (c) => c.chainId === chainId\r\n//   );\r\n//   const pool = pools.filter((p) => p.pool === poolAddress);\r\n//   if (pool.length > 0) {\r\n//     return {\r\n//       poolAddress: pool[0].pool,\r\n//       bTokenAddress: pool[0].bToken,\r\n//       lTokenAddress: pool[0].lToken,\r\n//     };\r\n//   }\r\n//   console.log(\r\n//     `getClpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\r\n//   );\r\n//   return {};\r\n// };\r\n\r\nexport const getLpConfig = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getLpConfigList(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      lTokenAddress: pool[0].lToken,\r\n      type: pool[0].type,\r\n    };\r\n  }\r\n  console.log(\r\n    `getLpConfig(): contract address is not found: ${chainId} ${poolAddress}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getDeriConfig= (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pool = getDeriConfigList(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  if (pool.length > 0) {\r\n    return {\r\n      deriAddress: pool[0].Deri,\r\n      wormholeAddress: pool[0].Wormhole,\r\n      bTokenSymbol: pool[0].bTokenSymbol,\r\n    };\r\n  }\r\n  console.log(\r\n    `getDeriConfig(): contract address is not found: ${chainId}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getMiningVaultConfig = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getPoolV1ConfigList(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  if (pools.length > 0) {\r\n    if (pools[0].MiningVault) {\r\n      return pools[0].MiningVault;\r\n    }\r\n  }\r\n};\r\n\r\nexport const getPoolV1Config = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const env = DeriEnv.get()\r\n  const pools = getPoolV1ConfigList(env)\r\n    .concat(getPreminingConfigList(env))\r\n    .concat(getLpConfigList(env))\r\n    .filter((c) => c.chainId === chainId);\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      pTokenAddress: pool[0].pToken,\r\n      lTokenAddress: pool[0].lToken,\r\n      dTokenAdress: pool[0].dToken,\r\n      MinningVaultAddress: pool[0].MiningVault,\r\n      bTokenSymbol: pool[0].bTokenSymbol,\r\n      symbol: pool[0].symbol,\r\n      unit: pool[0].unit,\r\n      initialBlock: pool[0].initialBlock,\r\n    };\r\n  } else {\r\n    throw new Error(\r\n      `getPoolV1Config(): contract address is not found: ${chainId} ${poolAddress}`\r\n    );\r\n  }\r\n}\r\n","export const factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}","import Web3 from 'web3';\r\n// == func\r\n// const np = () => {}\r\n// const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\n// refer to https://www.30secondsofcode.org/js/s/deep-clone\r\n// alternative: let clone = JSON.parse(JSON.stringify(obj))\r\nexport const deepClone = obj => {\r\n  if (obj === null) return null;\r\n  let clone = Object.assign({}, obj)\r\n  Object.keys(clone).forEach((key) => {\r\n    clone[key] = typeof obj[key] === 'object' ? deepClone(obj[key]) : obj[key];\r\n  });\r\n  // need recheck\r\n  if (Array.isArray(obj)) {\r\n    clone.length = obj.length\r\n    return Array.from(clone)\r\n  }\r\n  return clone\r\n}\r\n\r\nexport const shuffleArray = (urls) => {\r\n  const newUrls = deepClone(urls)\r\n  const length = urls.length\r\n  let res = []\r\n  for (let i = 0; i < length; i++) {\r\n    const index = Math.floor(Math.random() * urls.length)\r\n    res = res.concat(newUrls.splice(index,1))\r\n  }\r\n  return res\r\n}\r\n\r\nconst getBlockNumber = async (url) => {\r\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\r\n  try {\r\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\r\n    const startTime = Date.now()\r\n    res.blockNumber = await web3.eth.getBlockNumber()\r\n    res.duration = Date.now() - startTime\r\n  } catch (err) {\r\n    //console.log(`getBlockNumber(${url}) error: ${err}`)\r\n  }\r\n  return res\r\n};\r\n\r\nexport const getLatestRPCServer = async (urls = []) => {\r\n  urls = shuffleArray(urls)\r\n  let promises = []\r\n  for (let i = 0; i < urls.length; i++) {\r\n    promises.push(getBlockNumber(urls[i]));\r\n  }\r\n  let blockNumbers = await Promise.all(promises)\r\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\r\n  // console.log('blockNumbers',  blockNumbers)\r\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\r\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\r\n  const res = blockNumbers[index] && blockNumbers[index].url\r\n  // console.log(res)\r\n  if (res && res.startsWith('http')) {\r\n    return res\r\n  } else {\r\n    throw new Error(`getLatestRPCServer(): no alive RPC server in ${urls}`)\r\n  }\r\n};","import {\r\n  getChainProviderUrls,\r\n  getDailyBlockNumberConfig,\r\n} from '../config/chain';\r\nimport { normalizeChainId } from './validate';\r\nimport { getLatestRPCServer } from './network';\r\n\r\nexport const getChainProviderUrl = async (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const urls = getChainProviderUrls(chainId);\r\n  if (urls.length > 0) {\r\n   const url =  await getLatestRPCServer(urls);\r\n   // console.log('url', url)\r\n   return url\r\n  } else {\r\n    throw new Error(\r\n      `Cannot find the chain provider url with chainId: ${chainId}`\r\n    );\r\n  }\r\n};\r\n\r\nexport const getDailyBlockNumber = (chainId) => {\r\n  const blockNumbers = getDailyBlockNumberConfig();\r\n  if (blockNumbers[chainId]) {\r\n    return parseInt(blockNumbers[chainId]);\r\n  } else {\r\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\r\n  }\r\n};\r\n\r\nexport const getNetworkName = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  let poolNetwork;\r\n  switch (chainId) {\r\n    case '1':\r\n      poolNetwork = 'ethereum';\r\n      break;\r\n    case '56':\r\n      poolNetwork = 'bsc';\r\n      break;\r\n    case '128':\r\n      poolNetwork = 'heco';\r\n      break;\r\n    case '3':\r\n      poolNetwork = 'ropsten';\r\n      break;\r\n    case '42':\r\n      poolNetwork = 'kovan';\r\n      break;\r\n    case '97':\r\n      poolNetwork = 'bsctestnet';\r\n      break;\r\n    case '256':\r\n      poolNetwork = 'hecotestnet';\r\n      break;\r\n    case '137':\r\n      poolNetwork = 'matic';\r\n      break;\r\n    case '80001':\r\n      poolNetwork = 'mumbai';\r\n      break;\r\n    default:\r\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\r\n  }\r\n  return poolNetwork;\r\n};","import Web3 from 'web3';\r\nimport { normalizeChainId } from '../utils/validate';\r\nimport { getChainProviderUrl } from '../utils/chain';\r\nimport { isBrowser, isJsDom } from '../utils/convert';\r\n\r\nexport const web3Factory = (function () {\r\n  const web3InstanceMap = {};\r\n  return {\r\n    async get(chainId) {\r\n      chainId = normalizeChainId(chainId)\r\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\r\n        return web3InstanceMap[chainId];\r\n      }\r\n      // for mining page should not depends wallet network\r\n      let walletChainId\r\n      if (typeof window === 'object' && window.ethereum) {\r\n        walletChainId = await window.ethereum.request({ method: 'net_version' })\r\n      } else {\r\n        // MetaMask plugin is not installed in the browser\r\n        console.log('Please install MetaMask first');\r\n      }\r\n      // using metaMask ethereum object\r\n      if (\r\n        isBrowser() &&\r\n        !isJsDom() &&\r\n        typeof window.ethereum === 'object' &&\r\n        walletChainId &&\r\n        chainId === walletChainId.toString()\r\n      ) {\r\n        web3InstanceMap[chainId] = new Web3(window.ethereum);\r\n        return web3InstanceMap[chainId];\r\n      } else {\r\n        const providerUrl = await getChainProviderUrl(chainId);\r\n        web3InstanceMap[chainId] = new Web3(\r\n          new Web3.providers.HttpProvider(providerUrl)\r\n        );\r\n        return web3InstanceMap[chainId];\r\n      }\r\n    },\r\n  };\r\n})();","import { hexToNumber } from './convert';\r\nimport { web3Factory } from '../factory/web3'\r\n\r\n\r\n  // get block number when last updated\r\n  export const getLastUpdatedBlockNumber = async(chainId, contractAddress, position = 0) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    const res = await web3.eth.getStorageAt(contractAddress, position)\r\n    //console.log('res', hexToNumber(res))\r\n    return hexToNumber(res)\r\n  }\r\n\r\n  // get block number when last updated\r\n  export const getLatestBlockNumber = async(chainId) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    const res = await web3.eth.getBlockNumber()\r\n    //console.log('res', res)\r\n    return res\r\n  }\r\n\r\n  export const getBlockInfo = async(chainId, blockNumber) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    return await web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  export const getPastEvents = async(chainId, contract, eventName, filter = {}, fromBlock = 0, to = 0) => {\r\n    let events = [];\r\n    let amount\r\n    if (['56', '97', '127', '80001'].includes(chainId)) {\r\n      amount = 999\r\n    } else {\r\n      amount = 4999\r\n    }\r\n    if ((fromBlock + amount) > to) {\r\n      amount = to - fromBlock\r\n    }\r\n    while (fromBlock <= to) {\r\n      let es = await contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock: fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if ((fromBlock + amount) > to) {\r\n        amount = to - fromBlock\r\n      }\r\n    }\r\n    return events;\r\n  }","import {\r\n  getRestServerConfig,\r\n  DeriEnv,\r\n} from '../config'\r\n\r\n// get REST HTTP Base url\r\nexport const getHttpBase = () => {\r\n  return getRestServerConfig(DeriEnv.get());\r\n};\r\n\r\nexport const fetchJson = async (url) => {\r\n  const resp = await fetch(url);\r\n  return await resp.json();\r\n};\r\n\r\nexport const fetchRestApi = async (path, opts = { method: 'GET' }) => {\r\n  return await fetchJson(`${getHttpBase()}${path}`, opts);\r\n};\r\n\r\n// query api wrapper\r\nexport const catchApiError = async (func, args, methodName, defaultValue) => {\r\n  try {\r\n    const res = await func(...args)\r\n    return res\r\n  } catch (err) {\r\n    console.log(`${methodName}: `, err)\r\n  }\r\n  return defaultValue\r\n}\r\n\r\n// tx api wrapper\r\nexport const catchTxApiError = async (func, args) => {\r\n  let res;\r\n  try {\r\n    const result = await func(...args);\r\n    res = { success: true, transaction: result };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n","const bTokenPairs = {\r\n  AMUSDC: 'amUSDC',\r\n};\r\n\r\nconst offchainSymbolPairs = {\r\n  AXSUSDT: 'AXSUSDT',\r\n  MANAUSDT: 'MANAUSDT',\r\n  MBOXUSDT: 'MBOXUSDT',\r\n  IBSCDEFI: 'iBSCDEFI',\r\n  IGAME: 'iGAME',\r\n  ALICEUSDT: 'ALICEUSDT',\r\n  SANDUSDT: 'SANDUSDT',\r\n  QUICKUSDT: 'QUICKUSDT',\r\n  GHSTUSDT: 'GHSTUSDT',\r\n};\r\n\r\nexport const normalizeOptionSymbol = (optionSymbol) => {\r\n  const res = optionSymbol.split('-')\r\n  if (res.length >= 2) {\r\n    return res[0]\r\n  } else {\r\n    throw new Error(`invalid option symbol:${optionSymbol}`)\r\n  }\r\n};\r\n\r\nexport const getNormalizedOptionSymbols = (symbols) => {\r\n  let res = []\r\n  symbols.forEach((s) => {\r\n    const volSymbol = normalizeOptionSymbol(s)\r\n    if (!res.includes(volSymbol)) {\r\n      res.push(volSymbol)\r\n    }\r\n  })\r\n  return res\r\n}\r\n\r\nexport const getVolatilitySymbols = (symbols) => {\r\n  return getNormalizedOptionSymbols(symbols).map((s) => `VOL-${s}`)\r\n}\r\n\r\nexport const isUsedRestOracle = (symbol) => {\r\n  return Object.keys(offchainSymbolPairs).includes(symbol);\r\n};\r\n\r\nexport const mapToSymbol = (symbol) => {\r\n  if (Object.keys(offchainSymbolPairs).includes(symbol)) {\r\n    return offchainSymbolPairs[symbol]\r\n  } else {\r\n    return symbol\r\n  }\r\n}\r\n\r\nexport const mapToSymbolInternal = (symbol) => {\r\n  const index = Object.values(offchainSymbolPairs).indexOf(symbol)\r\n  if (index > -1) {\r\n    return Object.keys(offchainSymbolPairs)[index]\r\n  } else {\r\n    return symbol\r\n  }\r\n}\r\n\r\nexport const mapToBToken = (bToken) => {\r\n  if (Object.keys(bTokenPairs).includes(bToken)) {\r\n    return bTokenPairs[bToken]\r\n  } else {\r\n    return bToken\r\n  }\r\n}\r\n\r\nexport const mapToBTokenInternal = (bToken) => {\r\n  const index = Object.values(bTokenPairs).indexOf(bToken)\r\n  if (index !== -1) {\r\n    return Object.keys(bTokenPairs)[index]\r\n  } else {\r\n    return bToken\r\n  }\r\n}\r\n\r\nexport const normalizeSymbolUnit = (symbol) => {\r\n  const prefix = ['USD', 'USDT'];\r\n  const re = new RegExp(`(${prefix.join('|')})$`);\r\n  if (typeof symbol === 'string') {\r\n    return mapToSymbol(symbol).replace(re, '');\r\n  }\r\n  console.log(`symbol(${symbol}) is not a string type`);\r\n  return symbol;\r\n};\r\n\r\nexport const getIndexInfo = (symbol) => {\r\n  const internalSymbol = mapToSymbolInternal(symbol);\r\n  const customIndexs = {\r\n    IGAME: {\r\n      tokens: ['AXS', 'MANA', 'SAND', 'ALICE', 'TLM', 'DPET', 'SKILL'],\r\n      url: 'https://docs.deri.finance/products/index/game-index',\r\n    },\r\n    IBSCDEFI: {\r\n      tokens: ['CAKE', 'XVS', 'MDX', 'AUTO', 'BAKE', 'BUNNY'],\r\n      url: 'https://docs.deri.finance/products/index/bsc-defi-index',\r\n    },\r\n    IMEME: {\r\n      tokens: ['DOGE', 'SHIB', 'ELON', 'LOWB', 'PIG', 'SAFEMOON', 'MONA'],\r\n      url: 'https://docs.deri.finance/products/index/meme-index',\r\n    },\r\n  };\r\n  if (Object.keys(customIndexs).includes(internalSymbol)) {\r\n    return customIndexs[internalSymbol];\r\n  } else {\r\n    return { tokens: [], url: '' };\r\n  }\r\n};","import { validateObjectKeyExist, validateIsArray } from '../utils';\r\nimport {\r\n  isUsedRestOracle,\r\n  mapToBToken,\r\n  mapToSymbol,\r\n  getVolatilitySymbols,\r\n} from './token';\r\n\r\nconst validatePoolV2 = (pool) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'router',\r\n      'initialBlock',\r\n      'bTokens',\r\n      'symbols',\r\n      'chainId',\r\n      'symbolCount',\r\n      'bTokenCount',\r\n    ],\r\n    pool,\r\n    ''\r\n  );\r\n  validateIsArray(pool['bTokens'], 'bTokens');\r\n  pool['bTokens'].forEach((prop) => {\r\n    validateObjectKeyExist(\r\n      ['bTokenId', 'bTokenSymbol', 'bToken'],\r\n      prop,\r\n      'bToken'\r\n    );\r\n  });\r\n  validateIsArray(pool['symbols'], 'symbols');\r\n  pool['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n};\r\n\r\nconst processPoolV2 = (pool) => {\r\n  // process pool \r\n  pool['bTokenCount'] = pool['bTokens'].length;\r\n  pool['symbolCount'] = pool['symbols'].length;\r\n  pool['bTokens'].forEach((b) => b['bTokenSymbol'] = mapToBToken(b['bTokenSymbol']))\r\n  pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\r\n};\r\n\r\nconst validatePoolV2Lite = (pool) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'initialBlock',\r\n      'bToken',\r\n      'bTokenSymbol',\r\n      'symbols',\r\n      'chainId',\r\n      'offchainSymbolIds',\r\n      'offchainSymbols',\r\n      'symbolCount',\r\n    ],\r\n    pool,\r\n    ''\r\n  );\r\n  validateIsArray(pool['symbols'], 'symbols');\r\n  pool['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n  validateIsArray(pool['offchainSymbolIds'], 'offchainSymbolIds');\r\n  validateIsArray(pool['offchainSymbols'], 'offchainSymbols');\r\n};\r\n\r\nconst processPoolV2Lite = (pool) => {\r\n  // process pool\r\n  if (!pool['symbolCount']) {\r\n    pool['symbolCount'] = pool['symbols'].length;\r\n  }\r\n  if (!pool['offchainSymbolIds'] && !pool['offchainSymbols']) {\r\n    pool['offchainSymbolIds'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\r\n    pool['offchainSymbols'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\r\n    pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\r\n  }\r\n};\r\n\r\nconst validateConfigV2LiteOpen = (config) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'initialBlock',\r\n      'bToken',\r\n      'bTokenSymbol',\r\n      'symbols',\r\n      'chainId',\r\n      'offchainSymbolIds',\r\n      'offchainSymbols',\r\n      'symbolCount',\r\n    ],\r\n    config,\r\n    ''\r\n  );\r\n  validateIsArray(config['symbols'], 'symbols');\r\n  config['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n  validateIsArray(config['offchainSymbolIds'], 'offchainSymbolIds');\r\n};\r\n\r\nconst processConfigV2LiteOpen = (config) => {\r\n  // process config\r\n  if (!config['symbolCount']) {\r\n    config['symbolCount'] = config['symbols'].length;\r\n  }\r\n  if (!config['offchainSymbolIds'] && !config['offchainSymbols']) {\r\n    config['offchainSymbolIds'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\r\n    config['offchainSymbols'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\r\n    config['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\r\n  }\r\n};\r\n\r\nconst validatePoolOption = (pool) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'initialBlock',\r\n      'bToken',\r\n      'bTokenSymbol',\r\n      'symbols',\r\n      'chainId',\r\n      // 'offchainSymbolIds',\r\n      // 'offchainSymbols',\r\n      'symbolCount',\r\n      'volatilitySymbols',\r\n    ],\r\n    pool,\r\n    ''\r\n  );\r\n  validateIsArray(pool['symbols'], 'symbols');\r\n  pool['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n  // validateIsArray(pool['offchainSymbolIds'], 'offchainSymbolIds');\r\n  // validateIsArray(pool['offchainSymbols'], 'offchainSymbols');\r\n  validateIsArray(pool['volatilitySymbols'], 'volatilitySymbols');\r\n};\r\n\r\nconst processPoolOption = (pool) => {\r\n  // process pool \r\n  pool['symbolCount'] = pool['symbols'].length;\r\n  if (!pool['volatilitySymbols']) {\r\n    // pool['offchainSymbolIds'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\r\n    // pool['offchainSymbols'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\r\n    pool['volatilitySymbols'] = getVolatilitySymbols(\r\n      pool['symbols'].map((s) => s.symbol)\r\n    ); \r\n    pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\r\n  }\r\n};\r\n\r\nexport const poolProcessor = {\r\n  v2: processPoolV2,\r\n  v2_lite: processPoolV2Lite,\r\n  v2_lite_open: processConfigV2LiteOpen,\r\n  option: processPoolOption,\r\n};\r\n\r\nexport const poolValidator = {\r\n  v2: validatePoolV2,\r\n  v2_lite: validatePoolV2Lite,\r\n  v2_lite_open: validateConfigV2LiteOpen,\r\n  option: validatePoolOption,\r\n};","import { getJsonConfig } from './config';\r\nimport { DeriEnv } from './env';\r\nimport { mapToSymbolInternal } from './token';\r\n\r\nexport const getOracleConfigList = (version='v2', env) => {\r\n  const config = getJsonConfig(version, env || DeriEnv.get())\r\n  return config.oracle\r\n};\r\n\r\nexport const getOracleConfig = (version='v2', chainId, symbol) => {\r\n  symbol = mapToSymbolInternal(symbol)\r\n  const oracles = getOracleConfigList(version)\r\n  const filteredByChainId = oracles.filter((c) =>\r\n    symbol\r\n      ? c.chainId === chainId && c.symbol === symbol\r\n      : c.chainId === chainId\r\n  );\r\n  if (filteredByChainId.length > 0) {\r\n    if (symbol) {\r\n      return filteredByChainId[0];\r\n    } else {\r\n      return filteredByChainId;\r\n    }\r\n  }\r\n  //console.log(`getOracleConfig(): invalid chainId(${chainId}) or symbol(${symbol}).`);\r\n};\r\n","import Web3 from 'web3';\r\nimport { getDBProviderUrls } from '../../config/database';\r\nimport { getLatestRPCServer } from '../../utils';\r\n\r\nexport class DatabaseBaseContract {\r\n  constructor(contractAddress, contractAbi) {\r\n    this.contractAddress = contractAddress;\r\n    this.contractAbi = contractAbi;\r\n  }\r\n  _init() {\r\n    this.web3 = new Web3(new Web3.providers.HttpProvider(this.providerUrl));\r\n    this.contract = new this.web3.eth.Contract(\r\n      this.contractAbi,\r\n      this.contractAddress\r\n    );\r\n  }\r\n\r\n  async updateProviderUrl() {\r\n    if (!this.providerUrl) {\r\n      this.providerUrl = await getLatestRPCServer(getDBProviderUrls());\r\n      this._init();\r\n    }\r\n  }\r\n\r\n  async _call(method, args) {\r\n    let res\r\n    let retry = 3\r\n    while(retry > 0) {\r\n      try {\r\n        await this.updateProviderUrl();\r\n        res = await this.contract.methods[method](...args).call();\r\n        break\r\n      } catch (err) {\r\n        this.providerUrl = null\r\n        console.log(err.toString())\r\n      }\r\n      retry -= 1\r\n    }\r\n    if (retry === 0 && !res) {\r\n      throw new Error(`database ${method}(${args}): exceed max retry 3.`)\r\n    }\r\n    return res\r\n  }\r\n}\r\n","import { DatabaseBaseContract } from './database_base';\r\n\r\n/* eslint-disable */\r\nconst DB_CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseContract extends DatabaseBaseContract {\r\n  constructor(contractAddress) {\r\n    super(contractAddress, DB_CONTRACT_ABI)\r\n  }\r\n  async getValues(keyArray) {\r\n    return await this._call('getValues', [keyArray])\r\n  }\r\n}\r\n","import { DatabaseBaseContract } from './database_base'\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseWormholeContract extends DatabaseBaseContract {\r\n  constructor(contractAddress) {\r\n    super(contractAddress, CONTRACT_ABI)\r\n  }\r\n\r\n  async signature(accountAddress) {\r\n    return await this._call('signature', [accountAddress])\r\n  }\r\n}\r\n","import { DatabaseBaseContract } from './database_base'\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseAirdropContract extends DatabaseBaseContract {\r\n  constructor(contractAddress) {\r\n    super(contractAddress, CONTRACT_ABI)\r\n  }\r\n  async getValues(keyArray) {\r\n    return await this._call('getValues', [keyArray])\r\n  }\r\n}\r\n","import { web3Factory } from '../factory/web3';\r\nimport { numberToHex } from '../utils/convert';\r\n\r\nconst MAX_GAS_AMOUNT = 832731;\r\n//const RE_ERROR_MSG = /\\\"message\\\":\\s\\\"execution\\sreverted:([\\w\\s]+)\\\"/\r\nconst RE_ERROR_MSG = /\"message\":\\s\"execution\\sreverted:([\\w\\s]+)\"/\r\n\r\nexport class ContractBase {\r\n  constructor(chainId, contractAddress, contractAbi) {\r\n    this.chainId = chainId;\r\n    this.contractAddress = contractAddress;\r\n    this.contractAbi = contractAbi;\r\n  }\r\n\r\n  async _init() {\r\n    // re-init web3 and contract when web3 instance is null\r\n    if (!this.web3) {\r\n      this.web3 = await web3Factory.get(this.chainId);\r\n      this.contract = new this.web3.eth.Contract(\r\n        this.contractAbi,\r\n        this.contractAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async _call(method, args = []) {\r\n    let res\r\n    let retry = 2\r\n    while (retry > 0) {\r\n      try {\r\n        await this._init()\r\n        res = await this.contract.methods[method](...args).call();\r\n        break\r\n      } catch(err) {\r\n        retry -= 1\r\n        // remove web3 instance to re-init\r\n        this.web3 = null\r\n        if (err.toString().includes('Invalid JSON RPC response')) {\r\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\r\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\r\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\r\n        } else {\r\n          console.log('error:', err)\r\n        }\r\n      }\r\n    }\r\n    if (retry === 0 && !res) {\r\n      throw new Error(`The contract(${this.contractAddress}) '${method}([${args}])' failed with max retry 2.`)\r\n    }\r\n    return res\r\n  }\r\n\r\n  async _estimatedGas(method, args = [], accountAddress) {\r\n    await this._init()\r\n    let gas = 0;\r\n    for (let i = 0; i < 2; i++) {\r\n      try {\r\n        gas = await this.contract.methods[method](...args).estimateGas({\r\n          from: accountAddress,\r\n        });\r\n        gas = parseInt(gas * 1.25);\r\n        break;\r\n      } catch (error) {\r\n        const res = error.toString().split('\\n').join('').match(RE_ERROR_MSG)\r\n        if (Array.isArray(res) && res.length >= 2) {\r\n          throw new Error(res[1].trim())\r\n        }\r\n      }\r\n    }\r\n    if (gas === 0) gas = MAX_GAS_AMOUNT;\r\n    return gas;\r\n  }\r\n\r\n  _getTransactionReceipt(tx) {\r\n    const self = this;\r\n    return function _transactionReceipt(resolve, reject) {\r\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\r\n        if (error) {\r\n          reject(error);\r\n        } else if (receipt === null) {\r\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\r\n        } else if (receipt.status === false) {\r\n          receipt.errorMessage = 'Transaction failed';\r\n          reject(receipt);\r\n        } else {\r\n          resolve(receipt);\r\n        }\r\n      });\r\n    };\r\n  }\r\n  async _transact(method, args=[], accountAddress) {\r\n    await this._init()\r\n    const gas = await this._estimatedGas(method, args, accountAddress)\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods[method](...args).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\r\n  }\r\n\r\n}\r\n","/* eslint-disable */\r\n// base token contract abi\r\nexport const bTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\n// oracle contract abis\r\nexport const wooOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_I_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\nexport const chainlinkOracleAbi = [{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"event\",\"name\":\"AnswerUpdated\",\"inputs\":[{\"type\":\"int256\",\"name\":\"current\",\"internalType\":\"int256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"NewRound\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"address\",\"name\":\"startedBy\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferRequested\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"acceptOwnership\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AccessControllerInterface\"}],\"name\":\"accessController\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"name\":\"aggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"confirmAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint8\",\"name\":\"\",\"internalType\":\"uint8\"}],\"name\":\"decimals\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"string\",\"name\":\"\",\"internalType\":\"string\"}],\"name\":\"description\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"getAnswer\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"getRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getTimestamp\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"latestAnswer\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestRound\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"latestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestTimestamp\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address payable\"}],\"name\":\"owner\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"phaseAggregators\",\"inputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}],\"name\":\"phaseId\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"proposeAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"proposedAggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedGetRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedLatestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setController\",\"inputs\":[{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"transferOwnership\",\"inputs\":[{\"type\":\"address\",\"name\":\"_to\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"version\",\"inputs\":[]}]\r\nexport const wrappedOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n\r\n// activity contract abis\r\nexport const brokerManagerAbi = [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"SetBroker\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBroker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"setBroker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const pTokenAirdropAbi = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"poolRouterAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AddWhitelist\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AirdropPToken\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"userAddress\", \"type\": \"address\" } ], \"name\": \"addWhitelist\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"airdropPToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getBTokenBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isStartAirdrop\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"ownerAddress\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"startAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"stopAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalAirdropCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalWhitelistCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"withdrawBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n/* eslint-enable */","import { deriToNatural, bg } from '../utils'\r\nimport { MAX_UINT256} from '../config'\r\nimport { ContractBase } from './contract_base'\r\nimport { bTokenAbi } from './abis';\r\n\r\n\r\nexport class BToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, bTokenAbi);\r\n  }\r\n  // === query ===\r\n  async symbol() {\r\n    return await this._call('symbol');\r\n  }\r\n\r\n  async decimals() {\r\n    return await this._call('decimals');\r\n  }\r\n  async _balanceOf(address) {\r\n    return await this._call('balanceOf', [address]);\r\n  }\r\n\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply');\r\n    return deriToNatural(res);\r\n  }\r\n\r\n  async isUnlocked(accountAddress, poolAddress) {\r\n    const allowance = await this._call('allowance', [\r\n      accountAddress,\r\n      poolAddress,\r\n    ]);\r\n    return bg(allowance).gt(0);\r\n  }\r\n\r\n  // === transaction ===\r\n  async unlock(accountAddress, poolAddress) {\r\n    return await this._transact(\r\n      'approve',\r\n      [poolAddress, MAX_UINT256],\r\n      accountAddress\r\n    );\r\n  }\r\n}","import { ContractBase } from \"../contract_base\";\r\nimport { wrappedOracleAbi } from '../abis';\r\nimport { deriToNatural } from \"../../utils\";\r\n\r\nexport class WrappedOracle extends ContractBase {\r\n  constructor(chainId, address, symbol, decimal='18') {\r\n    super(chainId, address, wrappedOracleAbi)\r\n    this.symbol = symbol\r\n    this.decimal = decimal\r\n  }\r\n\r\n  // decimals refers https://docs.chain.link/docs/matic-addresses\r\n  async getPrice() {\r\n    const res = await this._call('getPrice');\r\n    if (res) {\r\n      return deriToNatural(res).toString()\r\n    }\r\n  }\r\n}\r\n","import { ContractBase } from \"../contract_base\";\r\nimport { brokerManagerAbi } from '../abis';\r\n\r\nexport class BrokerManager extends ContractBase {\r\n  constructor(chainId, address) {\r\n    super(chainId, address, brokerManagerAbi)\r\n  }\r\n  // query\r\n  async getBroker(accountAddress) {\r\n    return await this._call('getBroker', [accountAddress])\r\n  }\r\n\r\n  // transaction\r\n  async setBroker(accountAddress, brokerAddress) {\r\n    return await this._transact(\r\n      'setBroker',\r\n      [brokerAddress],\r\n      accountAddress\r\n    );\r\n  }\r\n}","import { ContractBase } from '../contract_base'\r\nimport { pTokenAirdropAbi } from '../abis'\r\n\r\nexport class PTokenAirdrop extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, pTokenAirdropAbi)\r\n  }\r\n  async getBTokenBalance() {\r\n    return await this._call('getBTokenBalance', [])\r\n  }\r\n  async totalWhitelistCount() {\r\n    return await this._call('totalWhitelistCount', [])\r\n  }\r\n  async airdropPToken(accountAddress) {\r\n    return await this._transact('airdropPToken', [], accountAddress)\r\n  }\r\n}","import { getOracleConfig } from '../config/oracle';\r\nimport { normalizeChainId } from './validate';\r\nimport { DeriEnv } from '../config/env';\r\nimport { oracleFactory } from '../factory/oracle';\r\nimport { deriToNatural, toWei } from './convert';\r\nimport {\r\n  getVolatilitySymbols,\r\n  mapToSymbolInternal,\r\n  mapToBTokenInternal,\r\n  normalizeOptionSymbol,\r\n} from '../config/token';\r\nimport { PRESERVED_SYMBOLS } from '../config/version';\r\n\r\nexport const getPriceInfoForV1 = async(symbol) => {\r\n  const env = DeriEnv.get();\r\n  let method = 'get_signed_price'\r\n  let url\r\n  let baseUrl =\r\n    env === 'prod'\r\n      ? `https://oracle4.deri.finance/${method}`\r\n      : `https://oracle2.deri.finance/${method}`;\r\n  const addSymbolParam = (url, symbol) =>\r\n    `${url}?symbol=${symbol}`;\r\n  if (symbol) {\r\n    url = addSymbolParam(baseUrl, symbol);\r\n  } else {\r\n    url = baseUrl;\r\n  }\r\n  let retry = 3;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\r\n    if (res.ok) {\r\n      priceInfo = await res.json();\r\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\r\n        return priceInfo.data\r\n        //return deriToNatural(priceInfo.data.price).toString()\r\n      }\r\n    }\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`getPriceFromV1 exceed max retry(3): ${symbol} => ${JSON.stringify(priceInfo)}`);\r\n  }\r\n}\r\n\r\n\r\nexport const getOracleUrl = (symbol, type='futures') => {\r\n  const env = DeriEnv.get();\r\n  //if (/^[0-9]+$/.test(symbolId.toString())) {\r\n  let method = 'get_signed_price'\r\n  if (type === 'option') {\r\n    method = 'get_signed_volatility'\r\n  }\r\n  if (PRESERVED_SYMBOLS.includes(symbol)) {\r\n    method = 'get_price'\r\n    symbol = `${symbol}_v2_bsc`\r\n  }\r\n  let baseUrl =\r\n    env === 'prod'\r\n      ? `https://oracle4.deri.finance/${method}`\r\n      : `https://oracle2.deri.finance/${method}`;\r\n  const addSymbolParam = (url, symbol) =>\r\n    `${url}?symbol=${symbol}`;\r\n\r\n  if (symbol) {\r\n    return addSymbolParam(baseUrl, symbol);\r\n  } else {\r\n    return baseUrl;\r\n  }\r\n};\r\n\r\nexport const getPriceFromRest = async(symbol, type='futures') => {\r\n  const res = await getPriceInfo(symbol, type)\r\n  if (type === 'futures' && res.price) {\r\n    return PRESERVED_SYMBOLS.includes(symbol) ? res.price : deriToNatural(res.price).toString()\r\n  } else if (type === 'option' && res.volatility) {\r\n    return deriToNatural(res.volatility).toString()\r\n  } else {\r\n    throw new Error(`getPrice() invalid format: ${JSON.stringify(res)}`)\r\n  }\r\n}\r\n\r\n// from oracle rest api\r\nexport const getPriceInfo = async (symbol, type='futures') => {\r\n  symbol = mapToBTokenInternal(symbol)\r\n  let url = getOracleUrl(symbol, type);\r\n  let retry = 3;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\r\n    if (res.ok) {\r\n      priceInfo = await res.json();\r\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\r\n        return priceInfo.data\r\n      }\r\n    }\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`fetch oracle info exceed max retry(3): ${symbol} => ${JSON.stringify(priceInfo)}`);\r\n  }\r\n};\r\n\r\n// cache\r\nexport const getOraclePriceFromCache = (function () {\r\n  let cache = {};\r\n  return {\r\n    async get(chainId, symbol = '_', version = 'v2') {\r\n      const key = `${chainId}_${symbol}_${version}`\r\n      if (\r\n        Object.keys(cache).includes(key) &&\r\n        Math.floor(Date.now() / 1000) - cache[key].timestamp < 5\r\n      ) {\r\n        return cache[key].data;\r\n      } else {\r\n        const data = await getOraclePrice(chainId, symbol, version);\r\n        cache[key] = {\r\n          data,\r\n          timestamp: Math.floor(Date.now() / 1000),\r\n        };\r\n        return cache[key].data;\r\n      }\r\n    },\r\n  };\r\n})();\r\n\r\nexport const getPriceInfos = async (symbolList) => {\r\n  let url = getOracleUrl();\r\n  let retry = 3;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    res = await fetch(url, {\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(symbolList),\r\n    });\r\n    if (res.ok) {\r\n      priceInfo = await res.json();\r\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\r\n        return priceInfo.data\r\n      }\r\n    }\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`fetch oracle infos exceed max retry(3): ${symbolList} ${JSON.stringify(priceInfo)}`);\r\n  }\r\n};\r\n\r\nexport const RestOracle = (symbol) => {\r\n  return {\r\n    getPrice: async function () {\r\n      return getPriceFromRest(symbol)\r\n    }\r\n  }\r\n};\r\n\r\nexport const getOraclePrice = async (chainId, symbol, version='v2') => {\r\n  chainId = normalizeChainId(chainId);\r\n  symbol = mapToSymbolInternal(symbol)\r\n  const config = getOracleConfig(version, chainId, symbol);\r\n  if (config && config.address) {\r\n    const oracle = oracleFactory(\r\n      chainId,\r\n      config.address,\r\n      symbol,\r\n      config.decimal,\r\n    );\r\n    return await oracle.getPrice();\r\n  } else {\r\n    // for new added symbol and not updated to config yet\r\n    const priceInfo = await getPriceInfo(symbol, version);\r\n    return deriToNatural(priceInfo.price).toString();\r\n  }\r\n};\r\n\r\nexport const getOraclePriceForOption = async (chainId, symbol) => {\r\n  return await getOraclePrice(chainId, normalizeOptionSymbol(symbol), 'option');\r\n};\r\n\r\n// for viewer use\r\nexport const getOraclePricesForOption = async (chainId, symbols) => {\r\n  const oracleSymbols = symbols\r\n    .map((i) => normalizeOptionSymbol(i))\r\n    .filter((value, index, self) => self.indexOf(value) === index);\r\n  const oracleSymbolPrices = await Promise.all(\r\n    oracleSymbols.reduce(\r\n      (acc, i) => acc.concat([getOraclePrice(chainId, i, 'option')]),\r\n      []\r\n    )\r\n  );\r\n  return symbols.map((s) => {\r\n    return toWei(oracleSymbolPrices[oracleSymbols.indexOf(normalizeOptionSymbol(s))]);\r\n  });\r\n};\r\n\r\n// for tx use\r\nexport const getOracleVolatilityForOption = async (symbols) => {\r\n  const volSymbols = getVolatilitySymbols(symbols)\r\n  //volSymbols.map((s) => `VOL-${s.toUpperCase()}`)\r\n\r\n  const volatilities = await Promise.all(\r\n    volSymbols.reduce((acc, i) => acc.concat([getPriceInfo(i, 'option')]), [])\r\n  );\r\n  //return volatilities;\r\n  return symbols.map((s) => {\r\n    return volatilities[volSymbols.indexOf(`VOL-${normalizeOptionSymbol(s)}`)];\r\n  });\r\n};\r\n\r\n// for viewer use\r\nexport const getOracleVolatilitiesForOption = async (symbols) => {\r\n  const oracleSymbols = symbols\r\n    .map((i) => normalizeOptionSymbol(i))\r\n    .filter((value, index, self) => self.indexOf(value) === index);\r\n  const oracleSymbolVolatilities = await Promise.all(\r\n    oracleSymbols.reduce(\r\n      (acc, i) => acc.concat([getPriceInfo(`VOL-${i}`, 'option')]),\r\n      []\r\n    )\r\n  );\r\n  return symbols.map((s) => {\r\n    return oracleSymbolVolatilities[oracleSymbols.indexOf(normalizeOptionSymbol(s))].volatility;\r\n  });\r\n};","import { isUsedRestOracle } from '../config/token';\r\nimport { RestOracle } from '../utils/oracle';\r\nimport { WrappedOracle } from '../contract/oracle/wrapped_oracle';\r\nimport { factory } from '../utils/factory';\r\n\r\nexport const oracleFactory = (function () {\r\n  const instanceMap = {};\r\n  return (chainId, address, symbol, decimal = '18') => {\r\n    const key = address;\r\n    if (Object.keys(instanceMap).includes(key)) {\r\n      return instanceMap[key];\r\n    } else {\r\n      if (isUsedRestOracle(symbol)) {\r\n        instanceMap[key] = RestOracle(symbol);\r\n      } else if (['56', '137', '97', '80001'].includes(chainId)) {\r\n        instanceMap[key] = new WrappedOracle(chainId, address, symbol, decimal);\r\n      } else {\r\n        throw new Error(\r\n          `please setup oracle contract for the chain(${chainId})`\r\n        );\r\n      }\r\n      return instanceMap[key];\r\n    }\r\n  };\r\n})();\r\n\r\nexport const wrappedOracleFactory = factory(WrappedOracle);\r\n","import {\r\n  getDBAddress,\r\n  getDBWormholeAddress,\r\n  getDBAirdropAddress,\r\n  DeriEnv,\r\n} from '../config';\r\nimport {\r\n  DatabaseAirdropContract,\r\n  DatabaseContract,\r\n  DatabaseWormholeContract,\r\n} from '../contract';\r\n\r\nexport const databaseFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBAddress(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseWormholeFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBWormholeAddress(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseWormholeContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseAirdropFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBAirdropAddress(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    //console.log('---airdrop key', key)\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseAirdropContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n","import { factory } from '../../utils/factory';\r\nimport { BToken } from '../../contract/b_token';\r\n\r\nexport const bTokenFactory = factory(BToken);","import { deriToNatural, bg } from '../../utils';\r\nimport { MAX_UINT256 } from '../../config';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DeriContract extends ContractBase {\r\n  constructor(chainId, contractAddress ) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n    //this.poolAddress = poolAddress;\r\n  }\r\n\r\n  async isUnlocked(accountAddress, poolAddress) {\r\n    let allowance = await this._call('allowance', [\r\n      accountAddress,\r\n      poolAddress,\r\n    ]);\r\n    return deriToNatural(allowance).gt(0);\r\n  }\r\n  async unlock(accountAddress, poolAddress) {\r\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\r\n    return await this._transact(\r\n      'approve',\r\n      [poolAddress, MAX_UINT256],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async decimals() {\r\n    return await this._call('decimals');\r\n  }\r\n\r\n  async _balanceOf(address) {\r\n    return await this._call('balanceOf', [address]);\r\n  }\r\n\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n}\r\n","import { numberToHex } from '../../utils'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"\",\"deployedBytecode\":\"\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\r\n/* eslint-enable */\r\n\r\nexport class MiningVaultPool extends ContractBase {\r\n  constructor(chainId, contractAddress ) {\r\n    super(chainId, contractAddress, CONTRACT_ABI['abi']);\r\n  }\r\n  async mintDToken(accountAddress, ...args) {\r\n    await this._init()\r\n    const gas = await this._estimatedGas(\r\n      'claim',\r\n      [accountAddress, ...args],\r\n      accountAddress\r\n    );\r\n    //console.log(gas);\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods['claim'](\r\n          accountAddress,\r\n          ...args\r\n        ).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n}\r\n","import { numberToHex } from '../../utils'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class MiningVaultRouter extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async mint(accountAddress, ...args) {\r\n    await this._init()\r\n    //console.log(accountAddress, args)\r\n    const gas = await this._estimatedGas(\r\n      'claim',\r\n      [accountAddress, ...args],\r\n      accountAddress\r\n    );\r\n    //console.log(gas);\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods['claim'](\r\n          accountAddress,\r\n          ...args\r\n        ).encodeABI(),\r\n      },\r\n    ];\r\n    //console.log('txRaw', txRaw)\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n}\r\n","import { getDeriConfig } from '../../config';\r\nimport { naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class WormholeContract extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI );\r\n  }\r\n  async freeze(accountAddress, amount, toChainId) {\r\n    const { wormholeAddress: toWormholeAddress } = getDeriConfig(\r\n      toChainId\r\n    );\r\n    return this._transact(\r\n      'freeze',\r\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async mintDeri(\r\n    accountAddress,\r\n    amount,\r\n    fromChainId,\r\n    fromWormhole,\r\n    fromNonce,\r\n    v,\r\n    r,\r\n    s\r\n  ) {\r\n    return this._transact(\r\n      'claim',\r\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\r\n      accountAddress\r\n    );\r\n  }\r\n}\r\n","import { DeriContract } from \"../../contract/deri/deri\";\r\nimport { MiningVaultPool } from \"../../contract/deri/mining_vault_pool\";\r\nimport { MiningVaultRouter } from \"../../contract/deri/mining_vault_router\";\r\nimport { WormholeContract } from \"../../contract/deri/wormhole\";\r\nimport { factory } from \"../../utils\"\r\n\r\n\r\nexport const deriFactory = factory(DeriContract)\r\n\r\nexport const wormholeFactory = factory(WormholeContract)\r\n\r\nexport const miningVaultRouterFactory = factory(MiningVaultRouter)\r\n\r\nexport const miningVaultPoolFactory = factory(MiningVaultPool)","import { deriToNatural, naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class SlpPool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [152, naturalToDeri(amount)];\r\n    return await this._transact('deposit', args, accountAddress);\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [152, naturalToDeri(amount)];\r\n    return await this._transact('withdraw', args, accountAddress);\r\n  }\r\n  async getLiquidity(accountAddress) {\r\n    const res = await this._call('userInfo', [152, accountAddress]);\r\n    if (res && res.amount) {\r\n      return deriToNatural(res.amount);\r\n    } else {\r\n      console.log('the amount is not exist ');\r\n      return '0';\r\n    }\r\n  }\r\n}\r\n","import { deriToNatural, naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class ClpPool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [naturalToDeri(amount)];\r\n    return await this._transact('addLiquidity', args, accountAddress);\r\n  }\r\n\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [naturalToDeri(amount)];\r\n    return await this._transact('removeLiquidity', args, accountAddress);\r\n  }\r\n\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\r\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\r\n    };\r\n  }\r\n\r\n  async getStateValues() {\r\n    const res = await this._call('getStateValues');\r\n    return {\r\n      liquidity: deriToNatural(res),\r\n    };\r\n  }\r\n\r\n  async getLiquidity() {\r\n    const res = await this._call('getStateValues');\r\n    if (res && res.liquidity) {\r\n      return deriToNatural(res.liquidity);\r\n    }\r\n    throw new Error(\r\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\r\n    );\r\n  }\r\n}\r\n","import { deriToNatural, naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class Clp2Pool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [391, naturalToDeri(amount)];\r\n    return await this._transact('deposit', args, accountAddress);\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [391, naturalToDeri(amount)];\r\n    return await this._transact('withdraw', args, accountAddress);\r\n  }\r\n  async getLiquidity(accountAddress) {\r\n    //console.log('hit clp2')\r\n    const res = await this._call('userInfo', [391, accountAddress]);\r\n    if (res && res.amount) {\r\n      return deriToNatural(res.amount);\r\n    } else {\r\n      console.log('the amount is not exist ');\r\n      return '0';\r\n    }\r\n  }\r\n}","import { SlpPool } from '../../contract/lp_pool/slp_pool'\r\nimport { ClpPool } from '../../contract/lp_pool/clp_pool'\r\nimport { Clp2Pool } from '../../contract/lp_pool/clp2_pool'\r\n\r\nexport const slpPoolFactory = (function () {\r\n  const slpPoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\r\n      return slpPoolInstanceMap[key];\r\n    }\r\n    const slpPool = new SlpPool(chainId, contractAddress);\r\n    slpPoolInstanceMap[key] = slpPool;\r\n    return slpPool;\r\n  };\r\n})();\r\n\r\nexport const clpPoolFactory = (function () {\r\n  const clpPoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\r\n      return clpPoolInstanceMap[key];\r\n    }\r\n    const clpPool = new ClpPool(chainId, contractAddress);\r\n    clpPoolInstanceMap[key] = clpPool;\r\n    return clpPool;\r\n  };\r\n})();\r\n\r\nexport const clp2PoolFactory = (function () {\r\n  const clp2PoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\r\n      return clp2PoolInstanceMap[key];\r\n    }\r\n    const clp2Pool = new Clp2Pool(chainId, contractAddress);\r\n    clp2PoolInstanceMap[key] = clp2Pool;\r\n    return clp2Pool;\r\n  };\r\n})();\r\n\r\n// export const lpPoolFactory = (function () {\r\n//   const lpPoolInstanceMap = {};\r\n//   return (chainId, contractAddress, isProvider = false) => {\r\n//     let key;\r\n//     if (isProvider) {\r\n//       key = `${chainId}.${contractAddress}.isProvider`;\r\n//     } else {\r\n//       key = `${chainId}.${contractAddress}`;\r\n//     }\r\n//     if (Object.keys(lpPoolInstanceMap).includes(key)) {\r\n//       return lpPoolInstanceMap[key];\r\n//     } else {\r\n//       let lpPool;\r\n//       const { type } = getLpContractAddress(chainId, contractAddress);\r\n//       console.log(`lp type: ${type}`);\r\n//       if (type === 'slp') {\r\n//         lpPool = new SlpPool(chainId, contractAddress, isProvider);\r\n//       } else if (type === 'clp') {\r\n//         lpPool = new ClpPool(chainId, contractAddress, isProvider);\r\n//       }\r\n//       lpPoolInstanceMap[key] = lpPool;\r\n//       return lpPool;\r\n//     }\r\n//   };\r\n// })();","import { factory } from '../../utils/factory';\r\nimport { BrokerManager } from '../../contract/activity/broker_manager';\r\nimport { PTokenAirdrop } from '../../contract/activity/ptoken_airdrop';\r\n\r\nexport const brokerManagerFactory = factory(BrokerManager);\r\nexport const pTokenAirdropFactory = factory(PTokenAirdrop);\r\n","import { hexToNumber, fromWei } from '../utils';\r\nimport { web3Factory } from '../factory';\r\nimport { normalizeAddress } from '../utils';\r\n\r\n/**\r\n * check ethereum client status for web browser\r\n * @function\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.isMetaMask - check if it is MetaMask client\r\n * @returns {boolean} response.[error] - error message when request failed\r\n */\r\nexport const hasWallet = () => {\r\n  if (window.ethereum && window.ethereum.isMetaMask) {\r\n    return { success: true, isMetaMask: true };\r\n  }\r\n  return {\r\n    success: false,\r\n    error:\r\n      'The browser is not support ethereum wallet, please install MetaMask to proceed.',\r\n  };\r\n};\r\n\r\n/**\r\n *  Connect wallet using MetaMask account\r\n * @async\r\n * @function\r\n * @param {function} [handleChainChanged] - Callback when chainId changed\r\n * @param {function} [handleAccountChanged]  - callback when account changed\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.chainId - chain Id\r\n * @returns {string} response.account - account address\r\n * @returns {boolean} response.[error] - error message when request failed\r\n */\r\nexport const connectWallet = async (\r\n  handleChainChanged,\r\n  handleAccountChanged\r\n) => {\r\n  if (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {\r\n    const accounts = await window.ethereum.request({\r\n      method: 'eth_requestAccounts',\r\n    });\r\n    const chainId = parseInt(\r\n      await window.ethereum.request({ method: 'net_version' })\r\n    );\r\n    // const chainId = hexToNumber(\r\n    //   await window.ethereum.request({ method: 'eth_chainId' })\r\n    // );\r\n    const account = Array.isArray(accounts) && accounts[0];\r\n\r\n    // await web3.eth.requestAccounts().then(console.log)\r\n    window.ethereum.on('accountsChanged', (accounts) => {\r\n      let account;\r\n      if (accounts.length > 0) {\r\n        account = accounts[0];\r\n      } else {\r\n        account = '';\r\n      }\r\n      if (typeof handleAccountChanged === 'function') {\r\n        handleAccountChanged(account);\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n      //console.log('accountChanged', account);\r\n    });\r\n    window.ethereum.on('chainChanged', (chainId) => {\r\n      let res = hexToNumber(chainId);\r\n      if (typeof handleChainChanged === 'function') {\r\n        handleChainChanged(res);\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n      //console.log('chainChanged', res);\r\n    });\r\n    return { success: true, account, chainId };\r\n  }\r\n  return {\r\n    success: false,\r\n    error: 'Cannot connect wallet, please install MetaMask.',\r\n  };\r\n};\r\n\r\nexport const getUserWalletBalance = async (chainId, walletAddress) => {\r\n  //const web3 = web3Factory(chainId);\r\n  walletAddress = normalizeAddress(walletAddress)\r\n  const web3 = await web3Factory.get(chainId);\r\n  const balance = await web3.eth.getBalance(walletAddress);\r\n  return fromWei(balance);\r\n};\r\n","import { databaseFactory, databaseAirdropFactory } from '../factory';\r\nimport {\r\n  toChecksumAddress,\r\n  getNetworkName,\r\n  deriToString,\r\n  deriToBool,\r\n  deriToNatural,\r\n  //getPoolContractAddress,\r\n} from '../utils';\r\nimport { getPoolV1Config } from '../config/pool_v1'\r\n// import { getLiquidityUsed } from \"./contractApi\";\r\n\r\nexport const getUserInfo = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.chainId`,\r\n      `${userAddress}.claim.amount`,\r\n      `${userAddress}.claim.deadline`,\r\n      `${userAddress}.claim.nonce`,\r\n      `${userAddress}.claim.v`,\r\n      `${userAddress}.claim.r`,\r\n      `${userAddress}.claim.s`,\r\n      `${userAddress}.claim.valid`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfo', err));\r\n  if (res) {\r\n    const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\r\n    return {\r\n      chainId: deriToString(chainId),\r\n      amount: deriToNatural(amount).toString(),\r\n      deadline: deriToString(deadline),\r\n      nonce: deriToString(nonce),\r\n      v: deriToString(v),\r\n      r,\r\n      s,\r\n      valid: deriToBool(valid),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getUserInfoHarvest = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.harvest.lp`,\r\n      `${userAddress}.claim.harvest.trade`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfoHarvest', err));\r\n  if (res) {\r\n    const [harvestLp, harvestTrade] = res;\r\n    return {\r\n      lp: deriToNatural(harvestLp).toString(),\r\n      trade: deriToNatural(harvestTrade).toString(),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getUserInfoTotal = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([`${userAddress}.claim.total`])\r\n    .catch((err) => console.log('getUserInfoTotal', err));\r\n  if (res) {\r\n    const [total] = res;\r\n    return {\r\n      total: deriToNatural(total).toString(),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get user claim info from database\r\n * @async\r\n * @method\r\n * @param {string} userAddress - account address\r\n * @returns {Object} response\r\n * @returns {string} resposne.chainId\r\n * @returns {BigNumber} response.amount\r\n * @returns {string} response.deadline\r\n * @returns {string} response.nonce\r\n * @returns {string} response.v\r\n * @returns {string} response.r\r\n * @returns {string} response.s\r\n * @returns {bool} response.valid\r\n * @returns {BigNumber} response.lp\r\n * @returns {BigNumber} response.trade\r\n * @returns {string} response.total\r\n */\r\nexport const getUserInfoAll = async (userAddress) => {\r\n  const userInfo = await getUserInfo(userAddress);\r\n  const userInfoHarvest = await getUserInfoHarvest(userAddress);\r\n  const userInfoTotal = await getUserInfoTotal(userAddress);\r\n  return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\r\n};\r\n\r\n/**\r\n * Get pool liquidity\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {symbol} response.symbol\r\n */\r\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    const { symbol } = getPoolV1Config(chainId, poolAddress)\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        symbol,\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Get pool apy\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Get apy of the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.apy2`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, apy2, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        apy2: deriToNatural(apy2).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Get apy of the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\n// export const getClpPoolInfoApy = async (chainId, poolAddress) => {\r\n//   const db = databaseFactory(true);\r\n//   try {\r\n//     const poolNetwork = getNetworkName(chainId);\r\n//     const res = await db\r\n//       .getValues([\r\n//         `${poolNetwork}.${poolAddress}.apy`,\r\n//         `${poolNetwork}.${poolAddress}.apy2`,\r\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\r\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\r\n//       ])\r\n//       .catch((err) => console.log('getPoolInfoApy', err));\r\n//     if (res) {\r\n//       const [apy, apy2, volume1h, volume24h] = res;\r\n//       return {\r\n//         apy: deriToNatural(apy).toString(),\r\n//         apy2: deriToNatural(apy2).toString(),\r\n//         volume1h: deriToNatural(volume1h).toString(),\r\n//         volume24h: deriToNatural(volume24h).toString(),\r\n//       };\r\n//     }\r\n//   } catch (err) {\r\n//     console.log(err);\r\n//   }\r\n// };\r\n\r\n/**\r\n * Get user info of the pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} userAddress\r\n * @returns {Object} response\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\r\n  const db = databaseFactory(true);\r\n  //const {poolAddress} = getPoolContractAddress(chainId, poolAddress);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getUserInfoInPool', err));\r\n    if (res) {\r\n      const [volume1h, volume24h] = res;\r\n      return {\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\r\n  const db = databaseAirdropFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.chainId`,\r\n      `${userAddress}.claim.amount`,\r\n      `${userAddress}.claim.deadline`,\r\n      `${userAddress}.claim.nonce`,\r\n      `${userAddress}.claim.v1`,\r\n      `${userAddress}.claim.r1`,\r\n      `${userAddress}.claim.s1`,\r\n      `${userAddress}.claim.v2`,\r\n      `${userAddress}.claim.r2`,\r\n      `${userAddress}.claim.s2`,\r\n      `${userAddress}.claim.valid`,\r\n      // `${userAddress}.claim.harvest.lp`,\r\n      // `${userAddress}.claim.harvest.trade`,\r\n      // `${userAddress}.claim.total`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfoAllForAirDrop', err));\r\n  if (res) {\r\n    const [\r\n      chainId,\r\n      amount,\r\n      deadline,\r\n      nonce,\r\n      v1,\r\n      r1,\r\n      s1,\r\n      v2,\r\n      r2,\r\n      s2,\r\n      valid,\r\n      // harvestLp,\r\n      // harvestTrade,\r\n      // total,\r\n    ] = res;\r\n    return {\r\n      chainId: deriToString(chainId),\r\n      amount: deriToNatural(amount).toString(),\r\n      deadline: deriToString(deadline),\r\n      nonce: deriToString(nonce),\r\n      v1: deriToString(v1),\r\n      r1,\r\n      s1,\r\n      v2: deriToString(v2),\r\n      r2,\r\n      s2,\r\n      valid: deriToBool(valid),\r\n      // lp: deriToNatural(harvestLp),\r\n      // trade: deriToNatural(harvestTrade),\r\n      // total: deriToString(total),\r\n    };\r\n  }\r\n};\r\n","import { getDeriConfig } from '../config';\r\nimport {\r\n  deriFactory,\r\n  databaseWormholeFactory,\r\n} from '../factory';\r\n/**\r\n * Get user signature of the wormhole pool\r\n * @async\r\n * @method\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getUserWormholeSignature = async (accountAddress) => {\r\n  const databaseWormhole = databaseWormholeFactory(true);\r\n  return await databaseWormhole.signature(accountAddress);\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\r\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\r\n  const deri = deriFactory(chainId, deriAddress);\r\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\r\n  return await deri.isUnlocked(accountAddress, wormholeAddress);\r\n};\r\n\r\n/**\r\n * Get deri balance in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string}\r\n */\r\nexport const getDeriBalance = async (chainId, accountAddress) => {\r\n  const { deriAddress } = getDeriConfig(chainId);\r\n  const deri = deriFactory(chainId, deriAddress);\r\n  return (await deri.balanceOf(accountAddress)).toString();\r\n};","import {\r\n  miningVaultPoolFactory,\r\n  miningVaultRouterFactory,\r\n  wormholeFactory,\r\n  deriFactory,\r\n  databaseWormholeFactory,\r\n} from '../factory';\r\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from '../api/database_api';\r\nimport {\r\n  getDeriConfig,\r\n  getMiningVaultRouterConfig,\r\n  getMiningVaultConfig,\r\n} from '../config';\r\nimport { naturalToDeri } from '../../shared/utils';\r\n\r\n/**\r\n * Mint DToken in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintDToken = async (chainId, accountAddress) => {\r\n  let res;\r\n  const userInfo = await getUserInfoAll(accountAddress);\r\n  const amount = naturalToDeri(userInfo.amount);\r\n  const { deadline } = userInfo;\r\n  const { nonce } = userInfo;\r\n  const { v } = userInfo;\r\n  const { r } = userInfo;\r\n  const { s } = userInfo;\r\n  if (userInfo.valid) {\r\n    const miningVaultAddress = getMiningVaultConfig(chainId);\r\n    if (miningVaultAddress) {\r\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\r\n      //miningVault.setAccount(accountAddress);\r\n      try {\r\n        const tx = await miningVault.mintDToken(\r\n          accountAddress,\r\n          amount,\r\n          deadline,\r\n          nonce,\r\n          v,\r\n          r,\r\n          s\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the mining vault address in chain ${chainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * freeze Deri in current wormhole pool to the specified chain\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @param {string} toChainId\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\r\n  const { wormholeAddress } = getDeriConfig(chainId);\r\n  const wormhole = wormholeFactory(chainId, wormholeAddress);\r\n  //wormhole.setAccount(accountAddress);\r\n  let res;\r\n  try {\r\n    const tx = await wormhole.freeze(accountAddress, amount, toChainId);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint Deri in wormhole pool\r\n * @async\r\n * @method\r\n * @param {string} toChainId\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintDeri = async (toChainId, accountAddress) => {\r\n  let res;\r\n  const databaseWormhole = databaseWormholeFactory(true);\r\n  // const userInfo = await getUserInfoAll(accountAddress);\r\n  const userInfo = await databaseWormhole.signature(accountAddress);\r\n  // console.log(userInfo)\r\n  const { amount } = userInfo;\r\n  const { fromChainId } = userInfo;\r\n  const { fromWormhole } = userInfo;\r\n  const fromNonce = userInfo.nonce;\r\n  const { v } = userInfo;\r\n  const { r } = userInfo;\r\n  const { s } = userInfo;\r\n  if (userInfo.valid) {\r\n    const { wormholeAddress } = getDeriConfig(toChainId);\r\n    if (wormholeAddress) {\r\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\r\n      //wormhole.setAccount(accountAddress);\r\n      try {\r\n        const tx = await wormhole.mintDeri(\r\n          accountAddress,\r\n          amount,\r\n          fromChainId,\r\n          fromWormhole,\r\n          fromNonce,\r\n          v,\r\n          r,\r\n          s\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the wormhole address in chain ${fromChainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Unlock the account in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockDeri = async (chainId, accountAddress) => {\r\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\r\n  const deri = deriFactory(chainId, deriAddress);\r\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\r\n  let res;\r\n  try {\r\n    const tx = await deri.unlock(accountAddress, wormholeAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint Airdrop in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintAirdrop = async (chainId, accountAddress) => {\r\n  let res;\r\n  const userInfo = await getUserInfoAllForAirDrop(accountAddress);\r\n  const amount = naturalToDeri(userInfo.amount).toString();\r\n  const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\r\n  if (userInfo.valid) {\r\n    const miningVaultAddress = getMiningVaultRouterConfig(chainId);\r\n    // console.log(\"miningVaultAddress\", miningVaultAddress)\r\n    // console.log(\"userInfo\", userInfo)\r\n    if (miningVaultAddress) {\r\n      const miningVaultRouter = miningVaultRouterFactory(\r\n        chainId,\r\n        miningVaultAddress\r\n      );\r\n      try {\r\n        const tx = await miningVaultRouter.mint(\r\n          accountAddress,\r\n          amount,\r\n          deadline,\r\n          nonce,\r\n          v1,\r\n          r1,\r\n          s1,\r\n          v2,\r\n          r2,\r\n          s2\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the mining vault router address in chain ${chainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};","\r\n/* eslint-disable */\r\nexport const perpetualPoolAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[9]\", \"name\": \"parameters\", \"type\": \"uint256[9]\" }, { \"internalType\": \"address[4]\", \"name\": \"addresses\", \"type\": \"address[4]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"targetPool\", \"type\": \"address\" } ], \"name\": \"approvePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourcePool\", \"type\": \"address\" } ], \"name\": \"executePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"routerAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBToken\", \"outputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBTokenOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLengths\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"decimals0\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"minBToken0Ratio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbolOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const perpetualPoolRouterAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourceRouter\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"liquidateWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"liquidatorQualifier\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"qualifierAddress\", \"type\": \"address\" } ], \"name\": \"setLiquidatorQualifier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"tradeWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const lTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"name\": \"UpdateAsset\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getAsset\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getAssets\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"asset\", \"type\": \"tuple\" } ], \"name\": \"updateAsset\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const pTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numSymbols_\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargins\", \"outputs\": [ { \"internalType\": \"int256[]\", \"name\": \"\", \"type\": \"int256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getPositions\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numSymbols\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumSymbols\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"margins\", \"type\": \"int256[]\" } ], \"name\": \"updateMargins\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n/* eslint-disable */","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { lTokenAbi } from './abis';\r\n\r\nconst processAsset = (res) => {\r\n  return {\r\n    liquidity: deriToNatural(res[0]),\r\n    pnl: deriToNatural(res[1]),\r\n    lastCumulativePnl: deriToNatural(res[2]),\r\n  }\r\n}\r\nexport class LToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, lTokenAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async getAsset(accountAddress, bTokenId) {\r\n    const res = await this._call('getAsset', [accountAddress, bTokenId]);\r\n    if (Array.isArray(res)) {\r\n      return processAsset(res)\r\n    } else {\r\n      console.log('address', this.contractAddress)\r\n      console.log('res', res)\r\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress} ${bTokenId})`)\r\n    }\r\n  }\r\n  async getAssets(accountAddress) {\r\n    const res = await this._call('getAssets', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map(i => processAsset(i))\r\n    } else {\r\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n\r\n  // === transaction ===\r\n}","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { pTokenAbi } from './abis';\r\n\r\nconst processPosition = (res) => {\r\n  return {\r\n    volume: deriToNatural(res.volume),\r\n    cost: deriToNatural(res.cost),\r\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\r\n  }\r\n}\r\nexport class PToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async getMargin(accountAddress, bTokenId) {\r\n    const res = await this._call('getMargin', [accountAddress, bTokenId]);\r\n    return deriToNatural(res)\r\n  }\r\n  async getMargins(accountAddress) {\r\n    const res = await this._call('getMargins', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map((i) => deriToNatural(i))\r\n    }\r\n  }\r\n  async getPosition(accountAddress, symbolId) {\r\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\r\n    if (Array.isArray(res)) {\r\n      return processPosition(res)\r\n    } else {\r\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n  async getPositions(accountAddress) {\r\n    const res = await this._call('getPositions', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map((i) => processPosition(i))\r\n    }\r\n  }\r\n\r\n  // === transaction ===\r\n}","import {\r\n  PerpetualPool,\r\n  PerpetualPoolRouter,\r\n  LToken,\r\n  PToken,\r\n} from './contract';\r\n\r\nconst factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\nexport const perpetualPoolFactory = factory(PerpetualPool)\r\n\r\nexport const perpetualPoolRouterFactory = factory(PerpetualPoolRouter)\r\n\r\nexport const lTokenFactory = factory(LToken)\r\n\r\nexport const pTokenFactory = factory(PToken)","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { deriToNatural, hexToNumber, bg } from '../../shared/utils'\r\nimport { perpetualPoolAbi } from './abis';\r\n\r\nexport class PerpetualPool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolAbi)\r\n\r\n    this.bTokenCount= 0\r\n    this.symbolCount= 0\r\n\r\n    this.lTokenAddress = ''\r\n    this.pTokenAddress = ''\r\n    this.routerAddress = ''\r\n    this.protocolFeeCollector = ''\r\n\r\n    this.protocolFeeAccrued = 0\r\n  }\r\n\r\n  async _update() {\r\n    await Promise.all([\r\n      this.getLengths(),\r\n      this.getAddresses(),\r\n      this.getParameters(),\r\n    ]);\r\n  }\r\n\r\n  async getLengths() {\r\n    try {\r\n      const res = await this._call('getLengths')\r\n      //console.log(res[0])\r\n      if (res[0] && res[1]) {\r\n        this.bTokenCount= parseInt(res[0])\r\n        this.symbolCount= parseInt(res[1])\r\n      }\r\n    } catch(err) {\r\n      throw new Error(`PerpetualPool#_getLength error: ${err}`)\r\n    }\r\n  }\r\n  async getAddresses() {\r\n    try {\r\n      const res = await this._call('getAddresses')\r\n      this.lTokenAddress = res.lTokenAddress\r\n      this.pTokenAddress = res.pTokenAddress\r\n      this.routerAddress = res.routerAddress\r\n      this.protocolFeeCollector = res.protocolFeeCollector\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#_getAddress error: ${err}`)\r\n    }\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters')\r\n    return {\r\n      decimals0: res.decimals0,\r\n      minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n  async getProtocolFeeAccrued() {\r\n    const res =  await this._call('getProtocolFeeAccrued')\r\n    this.protocolFeeAccrued = deriToNatural(res)\r\n  }\r\n  async getBToken(bTokenId) {\r\n    try {\r\n      //bTokenId = parseInt(bTokenId)\r\n      const res = await this._call('getBToken', [bTokenId]);\r\n      return {\r\n        bTokenAddress: res.bTokenAddress,\r\n        swapperAddress: res.bTokenAddress,\r\n        oracleAddress: res.oracleAddress,\r\n        decimals: res.decimals,\r\n        discount: deriToNatural(res.discount),\r\n        price: deriToNatural(res.price),\r\n        liquidity: deriToNatural(res.liquidity),\r\n        pnl: deriToNatural(res.pnl),\r\n        cumulativePnl: deriToNatural(res.cumulativePnl),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getBToken error: ${err}`);\r\n    }\r\n  }\r\n  async getBTokenOracle(bTokenId) {\r\n    //bTokenId = parseInt(bTokenId)\r\n    return await this._call('getBTokenOracle', [bTokenId])\r\n  }\r\n  async getSymbol(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    try {\r\n      const res =  await this._call('getSymbol', [symbolId])\r\n      return {\r\n        symbol: res.symbol,\r\n        oracleAddress: res.oracleAddress,\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        price: deriToNatural(res.price),\r\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\r\n    }\r\n  }\r\n  async getSymbolOracle(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    return await this._call('getSymbolOracle', [symbolId])\r\n  }\r\n\r\n  // trade history query methods\r\n  async _getTimeStamp(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  // get block number when last updated\r\n  async getLastUpdatedBlockNumber() {\r\n    await this._init()\r\n    const res = await this.web3.eth.getStorageAt(this.contractAddress, 0)\r\n    //console.log('res', hexToNumber(res))\r\n    return hexToNumber(res)\r\n  }\r\n\r\n  // get block number when last updated\r\n  async getLatestBlockNumber() {\r\n    await this._init()\r\n    const res = await this.web3.eth.getBlockNumber()\r\n    //console.log('res', res)\r\n    return res\r\n  }\r\n\r\n  _calculateFee(volume, price, multiplier, feeRatio) {\r\n    return bg(volume)\r\n      .abs()\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(feeRatio)\r\n      .toString();\r\n  }\r\n  async _getBlockInfo(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\r\n    await this._init()\r\n    let events = [];\r\n    //let toBlock = await this._getBlockInfo(\"latest\");\r\n    let amount\r\n    if (['56', '97','127', '80001'].includes(this.chainId)) {\r\n      amount = 999\r\n    } else {\r\n      amount = 4999\r\n    }\r\n    if ((fromBlock + amount) > to) {\r\n      amount = to - fromBlock\r\n    }\r\n    while (fromBlock <= to) {\r\n      let es = await this.contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock: fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if ((fromBlock + amount) > to) {\r\n        amount = to - fromBlock\r\n      }\r\n    }\r\n    return events;\r\n  }\r\n}","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { naturalToDeri } from '../../shared/utils'\r\nimport { MAX_INT256 } from '../../shared/config';\r\nimport { perpetualPoolRouterAbi} from './abis';\r\n\r\nexport class PerpetualPoolRouter extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\r\n    this.poolAddress = ''\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    this.poolAddress = await this._call('pool');\r\n    return this.poolAddress\r\n  }\r\n\r\n  // === transaction ===\r\n  async addLiquidity(accountAddress, bTokenId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [bTokenId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeLiquidity(accountAddress, bTokenId, amount, isMaximum) {\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeLiquidity',\r\n        [bTokenId, MAX_INT256],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeLiquidity',\r\n        [bTokenId, naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async addMargin(accountAddress, bTokenId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addMargin',\r\n      [bTokenId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMargin(accountAddress, bTokenId, amount, isMaximum) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    if (isMaximum) {\r\n      //console.log('->', MAX_INT256)\r\n      return await this._transact(\r\n        'removeMargin',\r\n        [bTokenId, MAX_INT256],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeMargin',\r\n        [bTokenId, naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async trade(accountAddress, symbolId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  // with prices\r\n  async addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addLiquidityWithPrices',\r\n      [bTokenId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeLiquidityWithPrices',\r\n        [bTokenId, MAX_INT256, priceInfos],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeLiquidityWithPrices',\r\n        [bTokenId, naturalToDeri(amount), priceInfos],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addMarginWithPrices',\r\n      [bTokenId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeMarginWithPrices',\r\n        [bTokenId, MAX_INT256, priceInfos],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeMarginWithPrices',\r\n        [bTokenId, naturalToDeri(amount), priceInfos],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async tradeWithPrices(accountAddress, symbolId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'tradeWithPrices',\r\n      [symbolId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  // async liquidate(acountAddress) {\r\n  //   if (!this.poolAddress) {\r\n  //     await this.pool()\r\n  //   }\r\n  //   return await this._transact(\r\n  //     'liquidate',\r\n  //     [accountAddress],\r\n  //     accountAddress\r\n  //   );\r\n  // }\r\n\r\n}","import { normalizeAddress, normalizeChainId } from \"../utils\"\r\nimport { DeriEnv, getBrokerConfig, getPoolConfig2 } from '../config';\r\nimport { brokerManagerFactory, pTokenAirdropFactory } from \"../factory\"\r\nimport { pTokenFactory } from \"../../v2/factory\"\r\n\r\nconst AIRDROP_PTOKEN_ADDRESS_BSC = '0x94e7f76eb542657Bc8d2a9aA321D79F66F7C8FfA'\r\nconst AIRDROP_PTOKEN_ADDRESS_BSCTESTNET = '0x3b88a9B5896a49AEb23Ca2Ee9892d28d3B8De5f6'\r\n\r\n\r\nexport const getBroker = async(chainId, accountAddress) => {\r\n  chainId = normalizeChainId(chainId)\r\n  accountAddress = normalizeAddress(accountAddress)\r\n  const {address: brokerAddress} = getBrokerConfig('v2', chainId)\r\n  let res = ''\r\n  try {\r\n    const brokerManager = brokerManagerFactory(chainId, brokerAddress)\r\n    res = await brokerManager.getBroker(accountAddress)\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n  return res\r\n}\r\n\r\nexport const setBroker = async(chainId, accountAddress, brokerAddress) => {\r\n  chainId = normalizeChainId(chainId)\r\n  accountAddress = normalizeAddress(accountAddress)\r\n  brokerAddress = normalizeAddress(brokerAddress);\r\n  const {address: brokerManagerAddress} = getBrokerConfig('v2', chainId)\r\n  let res\r\n  try {\r\n    const brokerManager = brokerManagerFactory(chainId, brokerManagerAddress)\r\n    const tx = await brokerManager.setBroker(accountAddress, brokerAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res\r\n}\r\n\r\nconst getAirdropPTokenAddress = () => {\r\n  const env = DeriEnv.get()\r\n  if (env === 'prod') {\r\n    return AIRDROP_PTOKEN_ADDRESS_BSC\r\n  } else {\r\n    return AIRDROP_PTOKEN_ADDRESS_BSCTESTNET\r\n  }\r\n}\r\n\r\nexport const airdropPToken = async (chainId, accountAddress) => {\r\n  let res\r\n  let contractAddress = getAirdropPTokenAddress()\r\n  try {\r\n    const tx = await pTokenAirdropFactory(chainId, contractAddress).airdropPToken(accountAddress)\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res\r\n}\r\n\r\nexport const getAirdropPTokenWhitelistCount = async (chainId) => {\r\n  let res\r\n  let contractAddress = getAirdropPTokenAddress()\r\n  try {\r\n    res = await pTokenAirdropFactory(chainId, contractAddress).totalWhitelistCount()\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return res\r\n}\r\n\r\nexport const isUserPTokenExist = async (chainId, poolAddress, accountAddress) => {\r\n  let res = ''\r\n  try {\r\n    const {pToken:pTokenAddress} = getPoolConfig2(poolAddress)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress)\r\n    const result = await pToken.balanceOf(accountAddress)\r\n    if (result === '1') {\r\n      res = true\r\n    } else if (result === '0') {\r\n      res = false\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return res\r\n}","import { getLpConfig } from '../config';\r\nimport { bTokenFactory, slpPoolFactory } from '../factory/contract';\r\n\r\n/**\r\n * Get liquidity info of SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.bTokenBalance\r\n * @returns {string} response.shares\r\n */\r\nexport const getSlpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\r\n      bToken.balanceOf(poolAddress),\r\n      bToken.balanceOf(accountAddress),\r\n      slpPool.getLiquidity(accountAddress),\r\n    ]);\r\n\r\n    return {\r\n      poolLiquidity: liquidity.toString(),\r\n      bTokenBalance: bTokenBalance.toString(),\r\n      shares: shares.toString(),\r\n      shareValue: '1',\r\n    };\r\n  }\r\n  console.log('no SlpPool address, please check');\r\n  return {};\r\n};\r\n\r\n/**\r\n * Add liquidity to SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addSlpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    try {\r\n      const tx = await slpPool.addLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity to SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeSlpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    try {\r\n      const tx = await slpPool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\n/**\r\n * Unlock the account in the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get account balance in Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getSlpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import { bTokenFactory, clp2PoolFactory } from '../factory/contract';\r\nimport { getLpConfig } from '../config/pool_v1';\r\n\r\nexport const getClp2LiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\r\n      bToken.balanceOf(poolAddress),\r\n      bToken.balanceOf(accountAddress),\r\n      clp2Pool.getLiquidity(accountAddress),\r\n    ]);\r\n\r\n    return {\r\n      poolLiquidity: liquidity.toString(),\r\n      bTokenBalance: bTokenBalance.toString(),\r\n      shares: shares.toString(),\r\n      shareValue: '1',\r\n    };\r\n  }\r\n  console.log('no Clp2Pool address, please check');\r\n  return {};\r\n};\r\n\r\nexport const addClp2Liquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clp2Pool.addLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const removeClp2Liquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clp2Pool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const getClp2WalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import { bg, getDailyBlockNumber } from '../../shared/utils';\r\n\r\nexport const calculateLiquidityUsed = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  poolMarginRatio\r\n) => {\r\n  return bg(\r\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\r\n  ).abs();\r\n}\r\n\r\nexport const calculateFundingRate = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  fundingRateCoefficient\r\n) => {\r\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\r\n  fundingRateCoefficient;\r\n}\r\n\r\nexport const processFundingRate = (chainId, fundingRate) => {\r\n  const annualBlockCount = getDailyBlockNumber(chainId);\r\n  return bg(fundingRate).times(annualBlockCount);\r\n};\r\n","import { bg, max, min } from '../../shared/utils';\r\n\r\nexport * from './fundingRate';\r\n\r\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\r\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\r\nexport const calculateMaxRemovableShares = (\r\n  lTokenBalance,\r\n  lTokenTotalSupply,\r\n  liquidity,\r\n  tradersNetVolume,\r\n  tradersNetCost,\r\n  multiplier,\r\n  minPoolMarginRatio,\r\n  price\r\n) => {\r\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\r\n  const value = bg(tradersNetVolume).times(price).times(multiplier);\r\n  const removable = bg(liquidity)\r\n    .plus(tradersNetCost)\r\n    .minus(value)\r\n    .minus(value.abs().times(minPoolMarginRatio));\r\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\r\n  return shares;\r\n};\r\n\r\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\r\n  bg(volume).eq(0) ? bg(0) : cost.div(volume).div(multiplier);\r\n\r\nexport const calculateMarginHeld = (\r\n  price,\r\n  volume,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  return bg(volume).abs().times(price).times(multiplier).times(minInitialMarginRatio)\r\n};\r\n\r\nexport const calculatePnl = (price, volume, multiplier, cost) => {\r\n  return bg(volume).times(price).times(multiplier).minus(cost);\r\n}\r\n\r\nexport const calculateMaxWithdrawMargin = (\r\n  price,\r\n  volume,\r\n  margin,\r\n  cost,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  if (volume.eq(0)) {\r\n    return margin;\r\n  }\r\n  const held = calculateMarginHeld(\r\n    price,\r\n    volume,\r\n    multiplier,\r\n    minInitialMarginRatio\r\n  );\r\n  const pnl = calculatePnl(price, volume, multiplier, cost);\r\n  const withdrawable = max(bg(margin).plus(pnl).minus(held.times(1.02)), bg(0));\r\n  return withdrawable;\r\n};\r\n\r\nexport const calculateLiquidationPrice = (\r\n  volume,\r\n  margin,\r\n  cost,\r\n  multiplier,\r\n  minMaintenanceMarginRatio\r\n) => {\r\n  const tmp = bg(cost).minus(margin).div(volume).div(multiplier);\r\n  let res = bg(volume).gt(0)\r\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\r\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\r\n  res = max(res, bg(0));\r\n  return res;\r\n};\r\n\r\nexport const isOrderValid = (\r\n  price,\r\n  margin,\r\n  volume,\r\n  liquidity,\r\n  tradersNetVolume,\r\n  multiplier,\r\n  minPoolMarginRatio,\r\n  minInitialMarginRatio,\r\n  newVolume,\r\n  amount\r\n) => {\r\n  const minMargin = bg(volume)\r\n    .plus(newVolume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(minInitialMarginRatio);\r\n  const poolMaxVolume = bg(liquidity)\r\n    .div(minPoolMarginRatio)\r\n    .div(price)\r\n    .div(multiplier);\r\n  if (bg(margin).plus(amount).gte(minMargin)) {\r\n    if (\r\n      bg(newVolume).lte(poolMaxVolume.minus(tradersNetVolume)) &&\r\n      bg(newVolume).gte(poolMaxVolume.negated().minus(tradersNetVolume))\r\n    ) {\r\n      return { success: true };\r\n    }\r\n    return { success: false, message: 'Pool insufficient liquidity' };\r\n  }\r\n  return { success: false, message: 'Trader insufficient margin' };\r\n};\r\n","import {\r\n  validateArgs,\r\n  deriToNatural,\r\n  numberToHex,\r\n  bg,\r\n} from '../../shared/utils';\r\nimport {\r\n  calculateFundingRate,\r\n  calculateLiquidityUsed,\r\n  processFundingRate,\r\n} from '../calculation';\r\nimport { ContractBase } from '../../shared/contract/contract_base';\r\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle';\r\n\r\n/* eslint-disable */\r\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class PerpetualPool extends ContractBase {\r\n  constructor(chainId, contractAddress, isProvider) {\r\n    super(chainId, contractAddress, POOL_ABI, isProvider);\r\n    // this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\r\n  }\r\n\r\n  async symbol() {\r\n    return await this._call('symbol');\r\n  }\r\n\r\n  async getStateValues() {\r\n    let result;\r\n    const defaultValue = bg(0);\r\n    try {\r\n      const res = await this._call('getStateValues');\r\n      //console.log(\"getStateValues() raw:\", res)\r\n      result = {\r\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\r\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\r\n        liquidity: deriToNatural(res.liquidity),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        cumuFundingRate: defaultValue,\r\n        cumuFundingRateBlock: defaultValue,\r\n        liquidity: defaultValue,\r\n        tradersNetCost: defaultValue,\r\n        tradersNetVolume: defaultValue,\r\n      };\r\n      console.log(`getStateValues: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async getParameters() {\r\n    let result;\r\n    const defaultValue = bg(0);\r\n    try {\r\n      const res = await this._call('getParameters');\r\n      // console.log(\"getParameters() raw: \", res)\r\n      result = {\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\r\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n        priceDelayAllowance: bg(res.priceDelayAllowance),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        multiplier: defaultValue,\r\n        feeRatio: defaultValue,\r\n        minPoolMarginRatio: defaultValue,\r\n        minInitialMarginRatio: defaultValue,\r\n        minMaintenanceMarginRatio: defaultValue,\r\n        minAddLiquidity: defaultValue,\r\n        redemptionFeeRatio: defaultValue,\r\n        fundingRateCoefficient: defaultValue,\r\n        minLiquidationReward: defaultValue,\r\n        maxLiquidationReward: defaultValue,\r\n        liquidationCutRatio: defaultValue,\r\n        priceDelayAllowance: defaultValue,\r\n      };\r\n      console.log(`getParameters: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  _getTransactionReceipt(tx) {\r\n    const self = this;\r\n    return function _transactionReceipt(resolve, reject) {\r\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\r\n        if (error) {\r\n          reject(error);\r\n        } else if (receipt == null) {\r\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\r\n        } else if (receipt.status === false) {\r\n          receipt.errorMessage = 'Transaction failed';\r\n          reject(receipt);\r\n        } else {\r\n          resolve(receipt);\r\n        }\r\n      });\r\n    };\r\n  }\r\n  async _estimatedGas(method, args, accountAddress) {\r\n    // !this.accountAddress &&\r\n    //   console.log('please do setAccount(accountAddress) first');\r\n    const MAX_GAS_AMOUNT = 582731\r\n    let gas = 0;\r\n    for (let i = 0; i < 2; i++) {\r\n      try {\r\n        gas = await this.contract.methods[method](...args).estimateGas({\r\n          from: accountAddress,\r\n        });\r\n        gas = parseInt(gas * 1.25);\r\n        break;\r\n      } catch (err) {\r\n        //console.log(\"err\", err);\r\n      }\r\n    }\r\n    if (gas == 0) gas = MAX_GAS_AMOUNT;\r\n    if (gas > MAX_GAS_AMOUNT) gas = MAX_GAS_AMOUNT;\r\n    return gas;\r\n  }\r\n\r\n  // overwrite to use signed price to tx\r\n  async _transact(method, args = [], accountAddress) {\r\n    await this._init()\r\n    const symbol = await this.symbol()\r\n    const oracle = await getPriceInfoForV1(symbol);\r\n    let signed = [oracle.timestamp, oracle.price, parseInt(oracle.v).toString(), oracle.r, oracle.s];\r\n\r\n    const gas = await this._estimatedGas(method, [...args, ...signed], accountAddress)\r\n\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n\r\n  async getFundingRate() {\r\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\r\n    const symbol = await this.symbol()\r\n    price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\r\n    try {\r\n      const stateValues = await this.getStateValues();\r\n      const parameters = await this.getParameters();\r\n      const { tradersNetVolume, liquidity } = stateValues;\r\n      const {\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        minPoolMarginRatio,\r\n      } = parameters;\r\n      const args1 = [\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        liquidity,\r\n        fundingRateCoefficient,\r\n      ];\r\n      if (!validateArgs(...args1)) {\r\n        fundingRate = '0';\r\n        fundingRatePerBlock = '0';\r\n      } else {\r\n        fundingRatePerBlock = calculateFundingRate(...args1);\r\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\r\n      }\r\n      const args2 = [\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        liquidity,\r\n        minPoolMarginRatio,\r\n      ];\r\n      if (!validateArgs(...args2)) {\r\n        liquidityUsed = '0';\r\n      } else {\r\n        liquidityUsed = calculateLiquidityUsed(...args2);\r\n      }\r\n      return {\r\n        price,\r\n        multiplier: multiplier.toString(),\r\n        fundingRate: fundingRate,\r\n        fundingRatePerBlock: fundingRatePerBlock,\r\n        tradersNetVolume: tradersNetVolume.toString(),\r\n        liquidity: liquidity.toString(),\r\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n        liquidityUsed: liquidityUsed,\r\n        poolMarginRatio: minPoolMarginRatio.toString(),\r\n      };\r\n    } catch (err) {\r\n      console.log('PerpetualPool#gerFundingRate():', err);\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  async depositMargin(accountAddress, amount) {\r\n    let res;\r\n    try {\r\n      let tx = await this._transact(\r\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [amount],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      console.log('here');\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  }\r\n\r\n  // util methods, it's extract shared/utils now\r\n  async _getBlockInfo(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\r\n    await this._init()\r\n    let events = [];\r\n    //let toBlock = await this._getBlockInfo(\"latest\");\r\n    //toBlock = toBlock.number;\r\n    let amount;\r\n    if (['56', '137', '97', '80001'].includes(this.chainId)) {\r\n      amount = 999;\r\n    } else {\r\n      amount = 4999;\r\n    }\r\n    if (fromBlock + amount > to) {\r\n      amount = to - fromBlock;\r\n    }\r\n    while (fromBlock <= to) {\r\n      //console.log('tick')\r\n      let es = await this.contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if (fromBlock + amount > to) {\r\n        amount = to - fromBlock;\r\n      }\r\n    }\r\n    return events;\r\n  }\r\n  async _getTimeStamp(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n  _calculateFee(volume, price, multiplier, feeRatio) {\r\n    return bg(volume)\r\n      .abs()\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(feeRatio)\r\n      .toString();\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { deriToNatural, bg } from '../../shared/utils';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class PTokenContract extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n    //this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async getPositionInfo(accountAddress) {\r\n    let result = {};\r\n    try {\r\n      const res = await this._call('getPosition(address)', [accountAddress]);\r\n      //console.log(\"getPositionInfo() raw:\", res)\r\n      result = {\r\n        volume: deriToNatural(res[0]),\r\n        cost: deriToNatural(res[1]),\r\n        lastCumuFundingRate: deriToNatural(res[2]),\r\n        margin: deriToNatural(res[3]),\r\n        lastUpdateTimestamp: bg(res[4]),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        volume: bg(0),\r\n        cost: bg(0),\r\n        lastCumuFundingRate: bg(0),\r\n        margin: bg(0),\r\n        lastUpdateTimestamp: bg(0),\r\n      };\r\n      //console.log(`getPositionInfo: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { deriToNatural } from '../../shared/utils';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class LTokenContract extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n    //this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async balance(accountAddress) {\r\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\r\n    //console.log(\"> lToken balance\", res.toString())\r\n    return res;\r\n  }\r\n\r\n  async balanceOf(accountAddress) {\r\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\r\n    //console.log(\"> lToken balance\", res.toString())\r\n    return res;\r\n  }\r\n\r\n  async totalSupply() {\r\n    const res = deriToNatural(await this._call('totalSupply'));\r\n    //console.log(\"> lToken totalSupply\", res.toString())\r\n    return res;\r\n  }\r\n}\r\n","import { PerpetualPool } from './contract/perpetual_pool';\r\n//import { BTokenContract } from './contract/bToken';\r\nimport { PTokenContract } from './contract/p_token';\r\nimport { LTokenContract } from './contract/l_token';\r\n\r\nexport const perpetualPoolFactory = (() => {\r\n  const perpetualPoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\r\n      return perpetualPoolInstanceMap[key];\r\n    }\r\n    const perpetualPool = new PerpetualPool(\r\n      chainId,\r\n      contractAddress,\r\n    );\r\n    // console.log(\"new PerpetualPoolContract\");\r\n    perpetualPoolInstanceMap[key] = perpetualPool;\r\n    return perpetualPool;\r\n  };\r\n})();\r\n\r\nexport const pTokenFactory = (function () {\r\n  const pTokenInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\r\n      return pTokenInstanceMap[key];\r\n    }\r\n    const pToken = new PTokenContract(\r\n      chainId,\r\n      contractAddress,\r\n    );\r\n    // console.log(\"new PTokenContract\")\r\n    pTokenInstanceMap[key] = pToken;\r\n    return pToken;\r\n  };\r\n})();\r\n\r\nexport const lTokenFactory = (function () {\r\n  const lTokenInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\r\n      return lTokenInstanceMap[key];\r\n    }\r\n    const lToken = new LTokenContract(\r\n      chainId,\r\n      contractAddress,\r\n    );\r\n    lTokenInstanceMap[key] = lToken;\r\n    return lToken;\r\n  };\r\n})();\r\n\r\n","import {\r\n  bTokenFactory,\r\n  clpPoolFactory,\r\n} from '../factory/contract';\r\nimport { lTokenFactory } from '../../v1/factory';\r\nimport { bg } from '../utils';\r\nimport { getLpConfig } from '../config';\r\n\r\n/**\r\n * Get liquidity Info of the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.totalSupply\r\n * @returns {string} response.poolLiquidity\r\n * @returns {string} response.shares\r\n * @returns {string} response.shareValue\r\n * @returns {string} response.maxRemovableShares\r\n */\r\nexport const getClpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { lTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const clpPool = clpPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress);\r\n  //lToken.setAccount(accountAddress);\r\n\r\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n  ]);\r\n  const { liquidity } = await clpPool.getStateValues();\r\n  //console.log(liquidity);\r\n\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: (lTokenTotalSupply.eq(0)\r\n      ? bg(0)\r\n      : liquidity.div(lTokenTotalSupply)\r\n    ).toString(),\r\n    maxRemovableShares: lTokenBalance.toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Add liquidity to the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addClpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clpPool = clpPoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clpPool.addLiquidity(accountAddress, amount);\r\n      console.log(tx, typeof tx);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity of the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeClpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clpPool = clpPoolFactory(chainId, poolAddress);\r\n    try {\r\n      const tx = await clpPool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isClpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\n/**\r\n * Unlock the account in the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockClp = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get account balance in Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getClpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import {\r\n  getSlpLiquidityInfo,\r\n  getSlpWalletBalance,\r\n  isSlpUnlocked,\r\n} from './slp_pool_api';\r\nimport {\r\n  getClp2LiquidityInfo,\r\n  getClp2WalletBalance,\r\n  isClp2Unlocked,\r\n} from './clp2_pool_api';\r\nimport {\r\n  getClpLiquidityInfo,\r\n  getClpWalletBalance,\r\n  isClpUnlocked,\r\n} from './clp_pool_api';\r\nimport { getLpConfig } from '../config'\r\n\r\n/**\r\n * Get liquidity info of LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.bTokenBalance\r\n * @returns {string} response.shares\r\n */\r\nexport const getLpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`getLpLiquidityInfo(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Check account is unlocked in the lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await isClpUnlocked(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`isLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Get account balance in lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getLpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await getClpWalletBalance(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`getLpWalletBalance(): invalid lp type ${type}`);\r\n  }\r\n};\r\n","import { getLpConfig } from '../config';\r\nimport { unlockSlp, addSlpLiquidity, removeSlpLiquidity } from './slp_pool_api';\r\nimport { unlockClp, addClpLiquidity, removeClpLiquidity } from './clp_pool_api';\r\nimport {\r\n  unlockClp2,\r\n  addClp2Liquidity,\r\n  removeClp2Liquidity,\r\n} from './clp2_pool_api';\r\n\r\n/**\r\n * Unlock the account in the lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await unlockSlp(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await unlockClp(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await unlockClp2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`unlockLp(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Add liquidity to LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addLpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (type === 'clp') {\r\n    return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (type === 'clp2') {\r\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    console.log(`addLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Remove liquidity to LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeLpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await removeSlpLiquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else if (type === 'clp') {\r\n    return await removeClpLiquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else if (type === 'clp2') {\r\n    return await removeClp2Liquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else {\r\n    console.log(`removeLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n","import { DeriEnv } from \"../shared/config/env\";\r\nimport { normalizeChainId } from \"../shared/utils/validate\";\r\n\r\nexport const openPoolChainIds = () => {\r\n  const configs = {\r\n    prod: ['56'],\r\n    dev: ['97'],\r\n  }\r\n  const env = DeriEnv.get()\r\n  if (Array.isArray(configs[env])) {\r\n    return configs[env]\r\n  } else {\r\n    throw new Error(`-- invalid env for openPoolChainIds: ${env}`)\r\n  }\r\n};\r\n\r\nexport const getPoolV2LiteManagerConfig = (chainId) => {\r\n  chainId = normalizeChainId(chainId)\r\n  const configs = {\r\n    prod: [\r\n      {\r\n        chainId: \"56\",\r\n        address: \"0x5e3318aeaa226dc11571f19b96240d88b64702dc\",\r\n        initialBlock: \"10133599\",\r\n      },\r\n    ],\r\n    dev: [\r\n      {\r\n        chainId: \"97\",\r\n        address: \"0x7A55ed377361802fad1Ae3d944cDbAA3c7694757\",\r\n        initialBlock: \"11034400\",\r\n      },\r\n    ],\r\n  };\r\n  const env = DeriEnv.get();\r\n  const res = configs[env].find((c) => c.chainId === chainId);\r\n  if (res && res.address) {\r\n    return res\r\n  } else {\r\n    throw new Error(`-- getPoolV2LiteManagerConfig: cannot find config with env(${env}) and chainId(${chainId})`)\r\n  }\r\n};\r\n\r\n\r\nexport const expandPoolConfigV2LiteOpen = (config) => {\r\n  const pools = config.pools;\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.symbols.length; i++) {\r\n        const symbol = pool.symbols[i];\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: symbol.symbol,\r\n          symbolId: symbol.symbolId,\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          offchainSymbols: pool.offchainSymbols,\r\n          unit: symbol.unit,\r\n          version: 'v2_lite_open',\r\n          isOpen: true,\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};","export const perpetualPoolLiteAbi = [{\"inputs\":[{\"internalType\":\"uint256[7]\",\"name\":\"parameters\",\"type\":\"uint256[7]\"},{\"internalType\":\"address[5]\",\"name\":\"addresses\",\"type\":\"address[5]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"addSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidatorQualifierAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolFeeCollector\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"minPoolMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minInitialMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"maxLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"liquidationCutRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"protocolFeeCollectRatio\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeAccrued\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getSymbol\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"multiplier\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"feeRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"fundingRateCoefficient\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cumulativeFundingRate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"internalType\":\"struct IPerpetualPoolLite.SymbolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"setSymbolParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n\r\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n\r\nexport const perpetualPoolLiteManagerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolTemplate_\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector_\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"protocolFeeCutRatio_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"creator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"CreatePool\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pairedTokenAddress\", \"type\": \"address\" } ], \"name\": \"createPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getNumPools\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"poolTemplate\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"name\": \"pools\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCollector\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCutRatio\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\r\n\r\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { pTokenLiteAbi } from './abis';\r\n\r\nconst processPosition = (res) => {\r\n  return {\r\n    volume: deriToNatural(res.volume),\r\n    cost: deriToNatural(res.cost),\r\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\r\n  }\r\n}\r\nexport class PTokenLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenLiteAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async ownerOf(tokenId) {\r\n    return await this._call('ownerOf', [tokenId]);\r\n  }\r\n  async getMargin(accountAddress) {\r\n    const res = await this._call('getMargin', [accountAddress]);\r\n    return deriToNatural(res)\r\n  }\r\n  async getPosition(accountAddress, symbolId) {\r\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\r\n    if (Array.isArray(res)) {\r\n      return processPosition(res)\r\n    } else {\r\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n  async getActiveSymbolIds() {\r\n    return await this._call('getActiveSymbolIds');\r\n  }\r\n  async isActiveSymbolId(symbolId) {\r\n    return await this._call('isActiveSymbolId', [symbolId]);\r\n  }\r\n  async isApprovedForAll(owner, operator) {\r\n    return await this._call('isApprovedForAll', [owner, operator]);\r\n  }\r\n  async getApproved(tokenId) {\r\n    return await this._call('getApproved', [tokenId]);\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    return await this._call('getNumPositionHolders', [symbolId]);\r\n  }\r\n\r\n  // === transaction ===\r\n}\r\n","import { factory } from '../shared/utils/factory'\r\nimport { PerpetualPoolLite } from './contract/perpetual_pool'\r\nimport { PerpetualPoolLiteManager } from './contract/perpetual_pool_lite_manager'\r\nimport { PerpetualPoolLiteViewer } from './contract/perpetual_pool_lite_viewer'\r\n\r\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite)\r\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)\r\nexport const perpetualPoolLiteManagerFactory = factory(PerpetualPoolLiteManager)\r\n","import {\r\n  bTokenFactory,\r\n  deriToNatural,\r\n  fetchJson,\r\n  getHttpBase,\r\n} from '../../shared';\r\nimport { ContractBase } from '../../shared/contract/contract_base';\r\nimport { normalizeSymbolUnit } from '../../shared/config/token';\r\nimport { perpetualPoolLiteAbi } from './abis';\r\nimport { PTokenLite } from './p_token';\r\n\r\nexport class PerpetualPoolLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\r\n  }\r\n\r\n  async updateAddresses() {\r\n    if (!this.bTokenAddress) {\r\n     const res = await this._call('getAddresses');\r\n    // update this state\r\n     this.bTokenAddress = res.bTokenAddress;\r\n     this.lTokenAddress= res.lTokenAddress;\r\n     this.pTokenAddress= res.pTokenAddress;\r\n    }\r\n  }\r\n  async controller() {\r\n    const res = await this._call('controller');\r\n    return res\r\n  }\r\n\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n  async getSymbol(symbolId) {\r\n    const res = await this._call('getSymbol', [symbolId]);\r\n    return {\r\n      symbol: res.symbol,\r\n      oracleAddress: res.oracleAddress,\r\n      multiplier: deriToNatural(res.multiplier),\r\n      feeRatio: deriToNatural(res.feeRatio),\r\n      fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n      price: deriToNatural(res.price),\r\n      cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n      tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n      tradersNetCost: deriToNatural(res.tradersNetCost),\r\n    };\r\n  }\r\n  async getSymbols() {\r\n    await this.updateAddresses()\r\n    if (!this.pToken) {\r\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress)\r\n    }\r\n    // update this state\r\n    this.symbolIds = await this.pToken.getActiveSymbolIds()\r\n    this.symbols = await Promise.all(\r\n      this.symbolIds.reduce((acc, i) => acc.concat([this.getSymbol(i)]), [])\r\n    );\r\n    return this.symbols\r\n  }\r\n  async getBTokenSymbol() {\r\n    await this.updateAddresses()\r\n    if (!this.bToken) {\r\n      this.bToken = bTokenFactory(this.chainId, this.bTokenAddress)\r\n    }\r\n    // update this state\r\n    this.bTokenSymbol = await this.bToken.symbol()\r\n    return this.bTokenSymbol\r\n  }\r\n  async getPoolExtraInfo() {\r\n    const url = `${getHttpBase()}/pool_extra_info/${this.contractAddress}`\r\n    const res = await fetchJson(url)\r\n    //console.log(res)\r\n    if (res.success) {\r\n      return res.data\r\n    } else {\r\n\r\n      console.log(`-- getInitialBlock(): ${url} => ${res.message}`)\r\n      return  {\r\n        block_number: '1000000000',\r\n        version: '',\r\n      }\r\n    }\r\n  }\r\n  async getConfig() {\r\n    const [bToken, symbols, extraInfo] = await Promise.all([\r\n      this.getBTokenSymbol(),\r\n      this.getSymbols(),\r\n      this.getPoolExtraInfo(),\r\n    ])\r\n    return {\r\n      pool: this.contractAddress,\r\n      pToken: this.pTokenAddress,\r\n      lToken: this.lTokenAddress,\r\n      bToken: this.bTokenAddress,\r\n      bTokenSymbol: bToken,\r\n      symbols: symbols.map((s, index) => ({\r\n        symbolId: this.symbolIds[index],\r\n        symbol: s.symbol,\r\n        unit: normalizeSymbolUnit(s.symbol),\r\n      })),\r\n      initialBlock:extraInfo.block_number,\r\n      version:extraInfo.version,\r\n      chainId: this.chainId,\r\n    }\r\n  }\r\n\r\n  // tx\r\n  async addSymbol(accountAddress, parameters) {\r\n    return await this._transact('addSymbol', parameters, accountAddress)\r\n  }\r\n\r\n  async removeSymbol(accountAddress, symbolId) {\r\n    return await this._transact('removeSymbol', [symbolId], accountAddress)\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { perpetualPoolLiteViewerAbi } from './abis';\r\n\r\nexport class PerpetualPoolLiteViewer extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\r\n  }\r\n  async getOffChainOracleSymbols(poolAddress) {\r\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\r\n    //return res.filter((s) => s && s !== '');\r\n    return res\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { perpetualPoolLiteManagerAbi } from './abis.js'\r\n\r\nexport class PerpetualPoolLiteManager extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolLiteManagerAbi)\r\n  }\r\n\r\n  // query\r\n  async getNumPools() {\r\n    const res = await this._call('getNumPools', [])\r\n    return res\r\n  }\r\n  async poolTemplate() {\r\n    const res = await this._call('poolTemplate', [])\r\n    return res\r\n  }\r\n  async pools(poolId) {\r\n    const res = await this._call('pools', [poolId])\r\n    return res\r\n  }\r\n  async protocolFeeCollector() {\r\n    const res = await this._call('protocolFeeCollector', [])\r\n    return res\r\n  }\r\n  async protocolFeeCutRatio() {\r\n    const res = await this._call('protocolFeeCutRatio', [])\r\n    return res\r\n  }\r\n\r\n  // tx\r\n  async createPool(accountAddress, parameters, bTokenAddress, pairedTokenAddress) {\r\n    return await this._transact('createPool', [parameters, bTokenAddress, pairedTokenAddress], accountAddress)\r\n  }\r\n\r\n}","import { catchApiError } from \"../../shared/utils/api\"\r\nimport { DeriEnv } from \"../../shared/config/env\"\r\nimport { getOracleConfigList } from \"../../shared/config/oracle\"\r\nimport { getJsonConfig } from \"../../shared/config/config\"\r\nimport { isBrowser, normalizeChainId, toChecksumAddress, validateObjectKeyExist } from \"../../shared/utils\"\r\nimport { poolProcessor, poolValidator } from \"../../shared/config/config_processor\"\r\nimport { getPoolViewerConfig } from \"../../shared\"\r\nimport { expandPoolConfigV2LiteOpen, getPoolV2LiteManagerConfig, openPoolChainIds } from \"../config\"\r\nimport { perpetualPoolLiteFactory, perpetualPoolLiteManagerFactory, perpetualPoolLiteViewerFactory } from \"../factory\"\r\n\r\nexport const getPoolOpenConfigList = async (...args) => {\r\n  return catchApiError(\r\n    async () => {\r\n      let configs = [];\r\n      const chainIds = openPoolChainIds()\r\n      configs = chainIds.reduce(async (acc, chainId) => {\r\n        //console.log('chainId', chainId)\r\n        const { address: poolManagerAddress } = getPoolV2LiteManagerConfig(\r\n          chainId\r\n        );\r\n        const poolManager = perpetualPoolLiteManagerFactory(\r\n          chainId,\r\n          poolManagerAddress\r\n        );\r\n        // get pool numbers\r\n        const poolNums = parseInt(await poolManager.getNumPools());\r\n        const numsArray = [...Array(poolNums).keys()];\r\n        // get pool addresses\r\n        const addresses = await Promise.all(\r\n          numsArray.reduce(\r\n            (acc, id) => acc.concat([poolManager.pools(id.toString())]),\r\n            []\r\n          )\r\n        );\r\n        // get pools config\r\n        const res = await Promise.all(\r\n          addresses.reduce(\r\n            (acc, address) =>\r\n              acc.concat([\r\n                perpetualPoolLiteFactory(chainId, address).getConfig(),\r\n              ]),\r\n            []\r\n          )\r\n        );\r\n        return acc.concat(res);\r\n      }, []);\r\n      return configs;\r\n    },\r\n    args,\r\n    'getPoolOpenConfigList',\r\n    []\r\n  );\r\n};\r\n\r\nexport const getPoolOpenOracleList = (chainId) => {\r\n  chainId = normalizeChainId(chainId)\r\n  return catchApiError(\r\n    async () => {\r\n      return getOracleConfigList('v2_lite_open', DeriEnv.get()).filter((o) => o.chainId === chainId);\r\n    },\r\n    [],\r\n    'getPoolOpenOracleInfos',\r\n    []\r\n  );\r\n};\r\n\r\nexport const getPoolController = async(chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId)\r\n  const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress)\r\n  return await perpetualPoolLite.controller()\r\n}\r\nexport const isPoolController = async(chainId, poolAddress, controller) => {\r\n  chainId = normalizeChainId(chainId)\r\n  const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress)\r\n  const poolController = await perpetualPoolLite.controller()\r\n  return toChecksumAddress(controller) === toChecksumAddress(poolController)\r\n}\r\n\r\nexport const getExpandedPoolOpenConfigList = async () => {\r\n  const env = DeriEnv.get()\r\n  const version = 'v2_lite_open'\r\n  let config = getJsonConfig(version, env);\r\n\r\n  config.pools =  await getPoolOpenConfigList()\r\n  const pools = config.pools\r\n  if (pools && Array.isArray(pools)) {\r\n    for (let i = 0; i < pools.length; i++) {\r\n      poolProcessor[version](pools[i])\r\n      poolValidator[version](pools[i])\r\n    }\r\n  }\r\n  validateObjectKeyExist(['oracle'], config, 'oracle');\r\n  return expandPoolConfigV2LiteOpen(config);\r\n}\r\n\r\nexport const getPoolAllSymbolNames = async(chainId, poolAddress) => {\r\n  const viewerAddress = getPoolViewerConfig(chainId, 'v2_lite')\r\n  const poolViewer = perpetualPoolLiteViewerFactory(chainId, viewerAddress)\r\n  return await poolViewer.getOffChainOracleSymbols(poolAddress)\r\n}\r\n\r\n\r\n// v2lite open config list cache\r\nexport const openConfigListCache = (() => {\r\n  let cache = {\r\n    data: [],\r\n    timestamp: 0,\r\n  };\r\n  return {\r\n    async update() {\r\n      let res\r\n      const oldData = cache.data\r\n      try {\r\n        if (Date.now()/1000 - cache.timestamp >= 10) {\r\n        //if (Date.now()/1000 - cache.timestamp > 60) {\r\n          cache.data = await getPoolOpenConfigList()\r\n          cache.timestamp = Date.now()/1000\r\n          //res = 'v2 lite open config list is updated'\r\n        }\r\n      } catch(err) {\r\n        console.log(err)\r\n        cache.data = oldData\r\n        //res = `v2 lite open config list updating with error: ${err}`\r\n      }\r\n      // res && console.log(res)\r\n      return cache.data\r\n    },\r\n    updatedAt() {\r\n      return cache.timestamp\r\n    },\r\n    get() {\r\n      return cache.data\r\n    }\r\n  }\r\n})()\r\n\r\n// // init\r\n// const initCache = () => {\r\n//   if (isBrowser()) {\r\n//     if(window.ethereum) {\r\n//       window.ethereum.request({ method: 'net_version' }).then((chainId) => {\r\n//         if (['1', '56', '137', '128'].includes(chainId)) {\r\n//           DeriEnv.set('prod')\r\n//           openConfigListCache.update().then((res) => console.log(res))\r\n//         } else {\r\n//           openConfigListCache.update().then((res) => console.log(res))\r\n//         }\r\n//       })\r\n//     }\r\n//   }\r\n// };\r\n// initCache()","import { getJsonConfig } from './config';\r\nimport { DeriEnv } from './env';\r\nimport { getPoolV1ConfigList } from './pool_v1';\r\nimport { LITE_AND_OPTION_VERSIONS, VERSIONS } from './version';\r\nimport { validateObjectKeyExist } from '../utils';\r\nimport { poolProcessor, poolValidator } from './config_processor';\r\nimport { openConfigListCache } from '../../v2_lite_open/api/query_api';\r\n\r\nconst expandPoolConfigV2 = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.bTokens.length; i++) {\r\n        const bToken = pool.bTokens[i];\r\n        for (let i = 0; i < pool.symbols.length; i++) {\r\n          const symbol = pool.symbols[i];\r\n          result.push({\r\n            pool: pool.pool,\r\n            pToken: pool.pToken,\r\n            lToken: pool.lToken,\r\n            router: pool.router,\r\n            initialBlock: pool.initialBlock,\r\n            chainId: pool.chainId,\r\n            bToken: bToken.bToken,\r\n            bTokenId: bToken.bTokenId,\r\n            bTokenSymbol: bToken.bTokenSymbol,\r\n            symbol: symbol.symbol,\r\n            symbolId: symbol.symbolId,\r\n            unit: symbol.unit,\r\n            version: 'v2',\r\n            isOption: false,\r\n          });\r\n        }\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nconst expandPoolConfigV2Lite = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.symbols.length; i++) {\r\n        const symbol = pool.symbols[i];\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: symbol.symbol,\r\n          symbolId: symbol.symbolId,\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          offchainSymbols: pool.offchainSymbols,\r\n          unit: symbol.unit,\r\n          version: 'v2_lite',\r\n          isOption: false,\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nconst expandPoolConfigOption = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.symbols.length; i++) {\r\n        const symbol = pool.symbols[i];\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: symbol.symbol,\r\n          symbolId: symbol.symbolId,\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          offchainSymbols: pool.offchainSymbols,\r\n          volatilitySymbols: pool.volatilitySymbols,\r\n          unit: symbol.unit,\r\n          version: 'option',\r\n          isOption: true,\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nconst expandPoolConfigV2LiteOpen = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      if (pool.symbols.length > 0) {\r\n        for (let i = 0; i < pool.symbols.length; i++) {\r\n          const symbol = pool.symbols[i];\r\n          result.push({\r\n            pool: pool.pool,\r\n            pToken: pool.pToken,\r\n            lToken: pool.lToken,\r\n            initialBlock: pool.initialBlock,\r\n            chainId: pool.chainId,\r\n            bToken: pool.bToken,\r\n            bTokenSymbol: pool.bTokenSymbol,\r\n            symbol: symbol.symbol,\r\n            symbolId: symbol.symbolId,\r\n            offchainSymbolIds: pool.offchainSymbolIds,\r\n            offchainSymbols: pool.offchainSymbols,\r\n            unit: symbol.unit,\r\n            version: 'v2_lite_open',\r\n            isOpen: true,\r\n          });\r\n        }\r\n      } else {\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: '--',\r\n          symbolId: '',\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          offchainSymbols: pool.offchainSymbols,\r\n          unit: '',\r\n          version: 'v2_lite_open',\r\n          isOpen: true,\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nexport const getConfig = (version='v2', env='dev') => {\r\n  let config = getJsonConfig(version, env);\r\n\r\n  if (version === 'v2_lite_open') {\r\n    //if (Date.now()/1000 - openConfigListCache.updatedAt() < 15) {\r\n      //console.log('hit openConfigListCache')\r\n    config.pools = openConfigListCache.get()\r\n    //}\r\n  }\r\n\r\n  //console.log('>',config)\r\n  const pools = config.pools;\r\n  if (pools && Array.isArray(pools)) {\r\n    for (let i = 0; i < pools.length; i++) {\r\n      poolProcessor[version](pools[i])\r\n      poolValidator[version](pools[i])\r\n    }\r\n  }\r\n  validateObjectKeyExist(['oracle'], config, 'oracle');\r\n  //validateObjectKeyExist(['brokerManager'], configs[env], 'brokerManager')\r\n  return config;\r\n};\r\n\r\nexport const getPoolConfigList = (version='v2', env = 'dev') => {\r\n  const config = getConfig(version, env)\r\n  if (version === 'v2') {\r\n    return expandPoolConfigV2(config)\r\n  } else if (version === 'v2_lite') {\r\n    return expandPoolConfigV2Lite(config)\r\n  } else if (version === 'v2_lite_open') {\r\n    return expandPoolConfigV2LiteOpen(config)\r\n  } else if (version === 'option') {\r\n    return expandPoolConfigOption(config)\r\n  }\r\n};\r\n\r\nexport const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId, version='v2') => {\r\n  bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\r\n  symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\r\n  const poolConfigList = getPoolConfigList(version, DeriEnv.get())\r\n  const check = bTokenId != null\r\n    ? symbolId != null\r\n      ? (i) =>\r\n          i.pool === poolAddress &&\r\n          i.bTokenId === bTokenId &&\r\n          i.symbolId === symbolId\r\n      : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\r\n    : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\r\n  if (poolConfigList.length > 0) {\r\n    const res = poolConfigList.filter(check)\r\n    if (res && res.length > 0) {\r\n      return res\r\n    }\r\n  }\r\n  throw new Error(`getFilteredPoolConfigList(): cannot find the pool config by ${poolAddress} bTokenId(${bTokenId}) and symbolId(${symbolId})`)\r\n}\r\n\r\nexport const getPoolConfig = (poolAddress, bTokenId, symbolId) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  // check the bToken in v2_lite\r\n  if (LITE_AND_OPTION_VERSIONS.includes(version)) {\r\n    bTokenId = undefined\r\n  }\r\n  const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId, version)\r\n  return res[0]\r\n}\r\nexport const getFilteredPoolConfig  = getPoolConfig\r\n\r\n\r\nexport const getPoolVersion = (poolAddress) => {\r\n  let pools = VERSIONS.reduce((acc, version) => {\r\n    return acc.concat(getConfig(version, DeriEnv.get())['pools'])\r\n  }, [])\r\n  // add v1 config\r\n  pools = pools.concat(getPoolV1ConfigList(DeriEnv.get()))\r\n  const index = pools.findIndex((v) => v.pool === poolAddress)\r\n  //console.log('pools index', index)\r\n  if (index >= 0) {\r\n    return pools[index].version\r\n  }\r\n}\r\n\r\nexport const _getPoolConfig = (poolAddress) => {\r\n  const version = getPoolVersion(poolAddress);\r\n  const config = getConfig(version, DeriEnv.get());\r\n  const pools = config.pools;\r\n  let pool = pools.find((p) => p.pool === poolAddress);\r\n  //console.log(pool)\r\n  if (pool) {\r\n    return pool;\r\n  } else {\r\n    throw new Error(`getPoolConfig, cannot find pool config by pool address ${poolAddress}`)\r\n  }\r\n};\r\n\r\nexport const getPoolConfig2 = (poolAddress, bTokenId, symbolId) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  const defaultBToken = {\r\n    bTokenId: '',\r\n    bTokenSymbol: '',\r\n    bToken: '',\r\n  };\r\n  const defaultSymbol = {\r\n    symbolId: '',\r\n    symbol: '',\r\n    unit: '',\r\n  };\r\n  let bToken, symbol;\r\n  if (bTokenId !== undefined || bTokenId !== null) {\r\n    bToken = pool.bTokens.find((b) => b.bTokenId === bTokenId) || defaultBToken;\r\n  }\r\n  if (symbolId !== undefined || symbolId !== null) {\r\n    symbol = pool.symbols.find((b) => b.symbolId === symbolId) || defaultSymbol;\r\n  }\r\n  return {\r\n    pool: pool.pool,\r\n    pToken: pool.pToken,\r\n    lToken: pool.lToken,\r\n    router: pool.router,\r\n    bTokenCount: pool.bTokenCount,\r\n    symbolCount: pool.symbolCount,\r\n    initialBlock: pool.initialBlock,\r\n    chainId: pool.chainId,\r\n    bToken: bToken.bToken,\r\n    bTokenId: bToken.bTokenId,\r\n    bTokenSymbol: bToken.bTokenSymbol,\r\n    symbol: symbol.symbol,\r\n    symbolId: symbol.symbolId,\r\n    unit: symbol.unit,\r\n    version: 'v2',\r\n  };\r\n};\r\n\r\nexport const getPoolBTokenList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.bTokens.map((b) => {\r\n    return {\r\n      bTokenId: b.bTokenId,\r\n      bTokenSymbol: b.bTokenSymbol,\r\n      bTokenAddress: b.bToken,\r\n    };\r\n  });\r\n};\r\n\r\nexport const getPoolBTokenIdList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.bTokens.map((b) => b.bTokenId);\r\n};\r\n\r\nexport const getPoolSymbolList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.symbols.map((s) => {\r\n    return {\r\n      symbol: s.symbol,\r\n      symbolId: s.symbolId,\r\n      unit: s.unit,\r\n    };\r\n  });\r\n};\r\n\r\nexport const getPoolSymbolIdList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.symbols.map((b) => b.symbolId);\r\n};\r\n\r\nexport const getPoolViewerConfig = (chainId, version=\"v2_lite\") => {\r\n  const env = DeriEnv.get()\r\n  const config = getJsonConfig(version, env)\r\n  const viewers = config.poolViewer.filter((v) => v.chainId === chainId.toString())\r\n  if (viewers.length > 0) {\r\n    return viewers[0].address\r\n  } else {\r\n    throw new Error(`getPoolViewerConfig(): invalid chainId(${chainId}) or version(${version}).`);\r\n  }\r\n};","import { getJsonConfig } from './config';\r\nimport { DeriEnv } from './env';\r\n\r\nexport const getBrokerConfigList = (version) => {\r\n  const config = getJsonConfig(version, DeriEnv.get())\r\n  if (config.brokerManager) {\r\n    return config.brokerManager\r\n  } else {\r\n    // default value\r\n    return []\r\n  }\r\n};\r\n\r\nexport const getBrokerConfig = (version='v2', chainId) => {\r\n  const filteredByChainId = getBrokerConfigList(version).filter((c) =>c.chainId === chainId);\r\n  if (filteredByChainId.length > 0) {\r\n    return filteredByChainId[0];\r\n  }\r\n  throw new Error(`getBrokerConfig(): invalid chainId(${chainId}).`);\r\n};\r\n","import { perpetualPoolFactory } from '../factory';\r\nimport { getPriceFromRest } from '../../shared/utils/oracle';\r\nimport { io } from 'socket.io-client';\r\n\r\n/** @module apiCache */\r\n/**\r\n * fundingRateCache Object\r\n * @name fundingRateCache\r\n * @property {function} get - Get the funding rate from cache\r\n * @property {function} set - set the funding rate cache\r\n */\r\nexport const fundingRateCache = (function () {\r\n  let resourceMap = {};\r\n  return {\r\n    get(chainId, contractAddress) {\r\n      const key = `${chainId}.${contractAddress}`;\r\n      if (Object.keys(resourceMap).includes(key)) {\r\n        return resourceMap[key];\r\n      }\r\n      console.log(`Cache key is not in resourceMap: ${key}`);\r\n      return undefined;\r\n    },\r\n    set(chainId, contractAddress, resource) {\r\n      const key = `${chainId}.${contractAddress}`;\r\n      resourceMap[key] = resource;\r\n    },\r\n  };\r\n})();\r\n\r\nexport const accountAddressCache = (function () {\r\n  let _accountAddress = '';\r\n  return {\r\n    get() {\r\n      if (_accountAddress === '') {\r\n        console.log(\"please init 'accountAddress' first\");\r\n      }\r\n      return _accountAddress;\r\n    },\r\n    set(value) {\r\n      if (typeof value === 'string' && value !== '') {\r\n        _accountAddress = value;\r\n      }\r\n    },\r\n  };\r\n})();\r\n\r\n/**\r\n * priceCache Object\r\n * @name priceCache\r\n * @property {function} get - Get the price from cache\r\n * @property {function} update - Set the price to automatic update during a time interval\r\n * @property {function} clear - Clear the the automatic update of the price\r\n */\r\nexport const priceCache = (function () {\r\n  let _price = '';\r\n  let _interval = null;\r\n  return {\r\n    get() {\r\n      if (_price === '') {\r\n        console.log(\"please init 'price' first\");\r\n      }\r\n      return _price;\r\n    },\r\n    async _update(poolAddress, symbol) {\r\n      try {\r\n        const res = await getPriceFromRest(symbol);\r\n        if (res !== '') {\r\n          _price = res;\r\n        }\r\n      } catch (err) {\r\n        console.log(`priceCache.update: ${err}`)\r\n      }\r\n    },\r\n    update(poolAddress, symbol) {\r\n      const self = this;\r\n      _interval = setInterval(() => {\r\n        // console.log('tick')\r\n        self._update(poolAddress, symbol);\r\n      }, 3000);\r\n    },\r\n    clear() {\r\n      if (_interval) {\r\n        clearInterval(_interval);\r\n      }\r\n      _price = '';\r\n    },\r\n  };\r\n})();\r\n\r\n/**\r\n * PerpetualPoolParametersCache Object\r\n * @name PerpetualPoolParametersCache\r\n * @property {function} get - Get the perpetualPoolParameters from cache\r\n * @property {function} update - Set the perpetualPoolParameters\r\n */\r\n\r\nexport const PerpetualPoolParametersCache = (function () {\r\n  let _parameters = {};\r\n  return {\r\n    get() {\r\n      if (!_parameters.multiplier) {\r\n        console.log(\"please init 'perpetual pool parameters' first\");\r\n      }\r\n      return _parameters;\r\n    },\r\n    async update(chainId, poolAddress) {\r\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n      const res = await perpetualPool.getParameters();\r\n      if (res.multiplier) {\r\n        _parameters = res;\r\n      }\r\n      return res;\r\n    },\r\n  };\r\n})();\r\n\r\n// websocket instance\r\nexport const wsInstance = (function(){\r\n  let _ws = null;\r\n  return {\r\n    get() {\r\n      if (_ws) {\r\n        return _ws\r\n      } else {\r\n        console.log('wsInstance.get() error: ws instance is not init')\r\n      }\r\n    },\r\n    set(url) {\r\n      try {\r\n        const ws = io(url, {\r\n          transports: ['websocket'],\r\n          path: '/ws',\r\n        });\r\n        ws.on('connect', () => {\r\n          console.log('hello from ws:', ws.id);\r\n        })\r\n        if (ws) {\r\n          _ws = ws\r\n        } else {\r\n          console.log('wsInstance.get() error: ws instance is not init')\r\n        }\r\n      } catch (err) {\r\n        console.log('wsInstance.set():', err)\r\n      }\r\n    },\r\n    getOrSet(url) {\r\n      if (!_ws) {\r\n        this.set(url)\r\n      }\r\n      return _ws\r\n    }\r\n  }\r\n})();\r\n","import {\r\n  bTokenFactory,\r\n  bg,\r\n  formatBN,\r\n  naturalToDeri,\r\n  getPoolV1Config,\r\n  deriToNatural,\r\n} from '../../shared';\r\nimport {\r\n  lTokenFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n} from '../factory';\r\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle'\r\nimport {\r\n  calculateMaxRemovableShares,\r\n  calculateMaxWithdrawMargin,\r\n  isOrderValid,\r\n} from '../calculation';\r\n\r\n/**\r\n * Unlock the account in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Deposit margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string|number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\r\n};\r\n\r\n/**\r\n * Withdraw margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n\r\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\r\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\r\n  const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\r\n\r\n  const maxWithdrawMargin = calculateMaxWithdrawMargin(\r\n    price,\r\n    volume,\r\n    margin,\r\n    cost,\r\n    multiplier,\r\n    minInitialMarginRatio\r\n  );\r\n  if (bg(amount).lte(maxWithdrawMargin)) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'amount exceeds allowed' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  //const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const decimals = await bToken.decimals();\r\n  const BONE = 10 ** decimals;\r\n  amount = formatBN(bg(amount).multipliedBy(BONE));\r\n  let res;\r\n  try {\r\n    const tx = await bToken._transact('mint', [amount], accountAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Add liquidity in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  let res;\r\n  try {\r\n    const tx = await pPool._transact(\r\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n      [naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} shares\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  shares\r\n) => {\r\n  const { lTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\r\n  //lToken.setAccount(accountAddress);\r\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\r\n\r\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n    lToken.balance(accountAddress),\r\n    lToken.totalSupply(),\r\n  ]);\r\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\r\n  const {\r\n    liquidity,\r\n    tradersNetVolume,\r\n    tradersNetCost,\r\n  } = await pPool.getStateValues();\r\n\r\n  const maxRemovableShares = calculateMaxRemovableShares(\r\n    lTokenBalance,\r\n    lTokenTotalSupply,\r\n    liquidity,\r\n    tradersNetVolume,\r\n    tradersNetCost,\r\n    multiplier,\r\n    minPoolMarginRatio,\r\n    price\r\n  );\r\n  let res;\r\n  if (bg(shares).lte(maxRemovableShares)) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(shares)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'shares exceeds allowed' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Trade with margin in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} newVolume\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  amount = '0'\r\n) => {\r\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\r\n  const {\r\n    multiplier,\r\n    minInitialMarginRatio,\r\n    minPoolMarginRatio,\r\n  } = await pPool.getParameters();\r\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\r\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\r\n  let res;\r\n  const orderValidation = isOrderValid(\r\n    price,\r\n    margin,\r\n    volume,\r\n    liquidity,\r\n    tradersNetVolume,\r\n    multiplier,\r\n    minPoolMarginRatio,\r\n    minInitialMarginRatio,\r\n    bg(newVolume),\r\n    bg(amount)\r\n  );\r\n  if (orderValidation.success) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: orderValidation.message };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Close position in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\r\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n  let { volume } = await pToken.getPositionInfo(accountAddress);\r\n  volume = volume.negated();\r\n  let res;\r\n  if (!volume.eq(0)) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(volume), '0'],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res;\r\n};\r\n","import {\r\n  //naturalToDeri,\r\n  deriToNatural,\r\n  hexToString,\r\n  toChecksumAddress,\r\n  hexToNumber,\r\n  hexToNumberString,\r\n} from '../../shared/utils';\r\nimport { getPoolV1Config } from '../../shared/config';\r\n\r\nimport { databaseFactory } from '../../shared/factory';\r\nimport { perpetualPoolFactory } from '../factory';\r\n\r\nconst processTradeEvent = async (\r\n  perpetualPool,\r\n  bTokenSymbol,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const transactionFee = perpetualPool._calculateFee(\r\n    tradeVolume,\r\n    price,\r\n    multiplier,\r\n    feeRatio\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(multiplier);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    baseToken: bTokenSymbol,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: volume.toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  // console.log(JSON.stringify(res))\r\n  return res;\r\n};\r\n\r\nconst processLiquidateEvent = async (\r\n  info,\r\n  txHash,\r\n  bTokenSymbol,\r\n  multiplier\r\n) => {\r\n  // console.log(info)\r\n  const volume = deriToNatural(info.volume).abs();\r\n  // const cost = deriToNatural(info.cost).abs()\r\n  // const margin = info.margin\r\n  const timestamp = `${info.timestamp}000`;\r\n  const price = deriToNatural(info.price);\r\n  // const liquidator = info.liquidator\r\n  // const reward = info.reward\r\n  const national = volume.times(price).times(multiplier);\r\n  // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\r\n\r\n  const res = {\r\n    direction: 'Liquidation',\r\n    baseToken: bTokenSymbol,\r\n    price: price.toString(),\r\n    notional: national.toString(),\r\n    volume: volume.toString(),\r\n    transactionFee: '0',\r\n    transactionHash: txHash.toString(),\r\n    time: timestamp,\r\n    // cost: naturalToDeri(cost).toString(),\r\n    // margin: margin.toString(),\r\n    // liquidator,\r\n    // reward: reward.toString(),\r\n  };\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get the user trade history\r\n * @async\r\n * @method\r\n * @param {string} chainId - Chain Id\r\n * @param {string} poolAddress - Pool Address\r\n * @param {string} accountAddress - Account Address\r\n * @returns {Object[]} response\r\n * @returns {string} response[].direction\r\n * @returns {string} response[].baseToken\r\n * @returns {string} response[].price\r\n * @returns {string} response[].notional\r\n * @returns {string} response[].volume\r\n * @returns {string} response[].transactionFee\r\n * @returns {string} response[].time - Timestamp of the trade\r\n */\r\n\r\nexport const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\r\n  const keyMeta = `${chainId}.${poolAddress}`;\r\n  const db = databaseFactory();\r\n  let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\r\n    db.getValues([`${keyMeta}.tradeHistoryBlock`]),\r\n    db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\r\n  ]);\r\n  tradeFromBlock = hexToNumber(tradeFromBlock[0]);\r\n  liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\r\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\r\n    // console.log(tradeFromBlock, liquidateFromBlock)\r\n    const [\r\n      tradeHistoryOffline,\r\n      tradeHistoryOnline,\r\n      liquidateHistoryOffline,\r\n      liquidateHistoryOnline,\r\n    ] = await Promise.all([\r\n      getTradeHistoryOffline(chainId, poolAddress, accountAddress),\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline\r\n      .concat(liquidateHistoryOnline)\r\n      .concat(tradeHistoryOffline)\r\n      .concat(liquidateHistoryOffline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  } else {\r\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\r\n    tradeFromBlock = parseInt(initialBlock);\r\n    liquidateFromBlock = parseInt(initialBlock);\r\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  }\r\n};\r\n\r\n// get trade history combined from cache and from online pull\r\nconst getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\r\n  // console.log(chainId, poolAddress, accountAddress)\r\n  let result = [];\r\n  // use dev database\r\n  const db = databaseFactory();\r\n  const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\r\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\r\n    accountAddress\r\n  )}.trade`;\r\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const count = hexToNumber(res);\r\n  try {\r\n    if (count && count >= 0) {\r\n      let keyArray = [];\r\n      for (let i = count; i > 0; i--) {\r\n        const key = `${keyMeta}.${i.toString()}`;\r\n        keyArray = keyArray.concat([\r\n          `${key}.direction`,\r\n          `${key}.baseToken`,\r\n          `${key}.price`,\r\n          `${key}.notional`,\r\n          `${key}.volume`,\r\n          `${key}.transactionFee`,\r\n          `${key}.transactionHash`,\r\n          `${key}.time`,\r\n        ]);\r\n      }\r\n      // console.log(keyArray)\r\n      const tradeHistoryLength = keyArray.length / 8;\r\n      // console.log(`trade history length: ${tradeHistoryLength}`)\r\n      const resp = await db.getValues(keyArray);\r\n      for (let i = 0; i < tradeHistoryLength; i++) {\r\n        const indexBase = i * 8;\r\n        //console.log(resp[indexBase + 6].trim());\r\n        const item = {\r\n          direction: hexToString(resp[indexBase]).trim(),\r\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\r\n          price: deriToNatural(resp[indexBase + 2]).toString(),\r\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\r\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\r\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\r\n          transactionHash: resp[indexBase + 6],\r\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\r\n        };\r\n        result.push(item);\r\n      }\r\n    } else {\r\n      result = [];\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    result = [];\r\n  }\r\n  return result;\r\n};\r\n\r\n// get trade history online from the Block number\r\nexport const getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  fromBlock\r\n) => {\r\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\r\n  // console.log(poolAddr, bTokenAddress);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //perpetualPool.setAccount(accountAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n  const filters = { owner: accountAddress };\r\n  const events = await perpetualPool._getPastEvents(\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n  const {\r\n    multiplier,\r\n    feeRatio,\r\n    minInitialMarginRatio,\r\n  } = await perpetualPool.getParameters();\r\n\r\n  const result = [];\r\n  // console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    // const info = item.returnValues;\r\n    const res = await processTradeEvent(\r\n      perpetualPool,\r\n      bTokenSymbol,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n      minInitialMarginRatio\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\n// get liquidate history online from the Block number\r\nexport const getLiquidateHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  fromBlock\r\n) => {\r\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\r\n  // console.log(poolAddr, bTokenAddress);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //perpetualPool.setAccount(accountAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n  const filters = { owner: accountAddress };\r\n  const events = await perpetualPool._getPastEvents(\r\n    'Liquidate',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n  const { multiplier } = await perpetualPool.getParameters();\r\n\r\n  const result = [];\r\n  // console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    // const info = item.returnValues;\r\n    const res = await processLiquidateEvent(\r\n      item.returnValues,\r\n      item.transactionHash,\r\n      bTokenSymbol,\r\n      multiplier\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\n// get trade history combined from cache and from online pull\r\nconst getLiquidateHistoryOffline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  let result = [];\r\n  // use dev database\r\n  const db = databaseFactory();\r\n  const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\r\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\r\n    accountAddress\r\n  )}.liquidate`;\r\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const count = hexToNumber(res);\r\n  try {\r\n    if (count && count >= 0) {\r\n      let keyArray = [];\r\n      for (let i = count; i > 0; i--) {\r\n        const key = `${keyMeta}.${i.toString()}`;\r\n        keyArray = keyArray.concat([\r\n          `${key}.direction`,\r\n          `${key}.baseToken`,\r\n          `${key}.price`,\r\n          `${key}.notional`,\r\n          `${key}.volume`,\r\n          `${key}.transactionFee`,\r\n          `${key}.transactionHash`,\r\n          `${key}.time`,\r\n        ]);\r\n      }\r\n      // console.log(keyArray)\r\n      const liquidateHistoryLength = keyArray.length / 8;\r\n      const resp = await db.getValues(keyArray);\r\n      for (let i = 0; i < liquidateHistoryLength; i++) {\r\n        const indexBase = i * 8;\r\n        const item = {\r\n          direction: hexToString(resp[indexBase]).trim(),\r\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\r\n          price: deriToNatural(resp[indexBase + 2]).toString(),\r\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\r\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\r\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\r\n          transactionHash: resp[indexBase + 6],\r\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\r\n        };\r\n        result.push(item);\r\n      }\r\n    } else {\r\n      result = [];\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    result = [];\r\n  }\r\n  return result;\r\n};\r\n","// const\r\nimport { getPoolV1Config } from '../../shared/config';\r\nimport { bg, deriToNatural, getHttpBase, fetchJson } from '../../shared/utils';\r\nimport {\r\n  getLiquidateHistoryOnline,\r\n  getTradeHistoryOnline,\r\n} from './trade_history_api';\r\n\r\n/**\r\n * Get specification from REST API, please refer {@link getSpecification}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getSpecification2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/specification/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get funding rate from REST API, please refer {@link getFundingRate}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getFundingRate2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/funding_rate/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity used from REST API, please refer {@link getLiquidityUsed}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getLiquidityUsed2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/liquidity_used/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get funding rate cache from REST API, it used to 'fundingRateCache.update(chainId, poolAddress, result)'\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getFundingRateCache2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/funding_rate_cache/${poolAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    let result = res.data;\r\n    result.price = bg(result.price);\r\n    result.fundingRate = bg(result.fundingRate);\r\n    result.liquidityUsed = bg(result.liquidityUsed);\r\n    return result;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get position info from REST API, please refer {@link getPositionInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getPositionInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/position_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity info from REST API, please refer {@link getLiquidityInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance from REST API, please refer {@link getWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity of the slp pool from REST API, please refer {@link getSlpLiquidityInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getSlpLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/slp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the slp pool from REST API, please refer {@link getSlpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getSlpWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/slp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the clp pool from REST API, please refer {@link getClpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getClpLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/clp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the clp pool from REST API, please refer {@link getSlpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getClpWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/clp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the deri pool from REST API, please refer {@link getDeriBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getDeriBalance2 = async (chainId, poolAddress, accountAddress) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/deri_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get the user trade history from REST API, please refer {@link getTradeHistory}\r\n * @async\r\n * @method\r\n * @param {string} chainId - Chain Id\r\n * @param {string} poolAddress - Pool Address\r\n * @param {string} accountAddress - Account Address\r\n * @returns {Object[]} response\r\n */\r\nexport const getTradeHistory2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  let tradeFromBlock, liquidateFromBlock, tradeHistory;\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n    liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\r\n    tradeHistory = res.data.tradeHistory;\r\n  }\r\n  tradeHistory = tradeHistory.filter((i) => i).map((i) => {\r\n    return {\r\n      direction: i.direction.trim(),\r\n      baseToken: i.baseToken.trim(),\r\n      price: deriToNatural(i.price).toString(),\r\n      notional: deriToNatural(i.notional).toString(),\r\n      volume: deriToNatural(i.volume).toString(),\r\n      transactionFee: deriToNatural(i.transactionFee).toString(),\r\n      transactionHash: i.transactionHash,\r\n      time: i.time.toString(),\r\n    };\r\n  });\r\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\r\n    // console.log(tradeFromBlock, liquidateFromBlock)\r\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline\r\n      .concat(liquidateHistoryOnline)\r\n      .concat(tradeHistory);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  } else {\r\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\r\n    tradeFromBlock = parseInt(initialBlock);\r\n    liquidateFromBlock = parseInt(initialBlock);\r\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  }\r\n};\r\n","import {\r\n  validateArgs,\r\n  naturalWithPercentage,\r\n  deriToNatural,\r\n  bg,\r\n} from '../../shared/utils';\r\nimport {\r\n  bTokenFactory,\r\n} from '../../shared/factory';\r\nimport { getPoolV1Config } from '../../shared';\r\nimport { getPriceFromRest } from '../../shared/utils/oracle';\r\nimport { getPoolInfoApy } from '../../shared/api/database_api';\r\nimport {\r\n  lTokenFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n} from '../factory';\r\nimport {\r\n  fundingRateCache,\r\n  PerpetualPoolParametersCache,\r\n  priceCache,\r\n} from './api_v1_globals';\r\nimport {\r\n  calculateFundingRate,\r\n  calculateLiquidityUsed,\r\n  calculateShareValue,\r\n  calculateMaxRemovableShares,\r\n  calculateEntryPrice,\r\n  calculateMarginHeld,\r\n  calculatePnl,\r\n  calculateLiquidationPrice,\r\n  processFundingRate,\r\n} from '../calculation';\r\n\r\n/**\r\n * Get the contract information\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.addresses\r\n * @returns {string} response.symbol\r\n * @returns {string} response.bTokenSymbol\r\n * @returns {string} response.multiplier\r\n * @returns {string} response.feeRatio\r\n * @returns {string} response.minPoo\r\n * @returns {string} response.minPoolMarginRatio\r\n * @returns {string} response.minInitialMarginRatio\r\n * @returns {string} response.minMaintenanceMarginRatio\r\n * @returns {string} response.minAddLiquidity\r\n * @returns {string} response.redemptionFeeRatio\r\n * @returns {string} response.fundingRateCoefficient\r\n * @returns {string} response.minLiquidationReward\r\n * @returns {string} response.maxLiquidationReward\r\n * @returns {string} response.liquidationCutRatio\r\n * @returns {string} response.priceDelayAllowance\r\n */\r\nexport const getSpecification = async (\r\n  chainId,\r\n  poolAddress,\r\n  //accountAddress,\r\n) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const {\r\n    multiplier,\r\n    feeRatio,\r\n    minPoolMarginRatio,\r\n    minInitialMarginRatio,\r\n    minMaintenanceMarginRatio,\r\n    minAddLiquidity,\r\n    redemptionFeeRatio,\r\n    fundingRateCoefficient,\r\n    minLiquidationReward,\r\n    maxLiquidationReward,\r\n    liquidationCutRatio,\r\n    priceDelayAllowance,\r\n  } = await pPool.getParameters();\r\n  let symbol = await pPool.symbol();\r\n  const bTokenSymbol = await bToken.symbol();\r\n\r\n  // fix symbol BTCUSD issue, will remove later\r\n  // if (poolAddress === '0xA2D7316Bc60AA9463DfB78379d25E77371990507') {\r\n  //   symbol = 'iMEME'\r\n  // }\r\n\r\n  return {\r\n    addresses: poolAddress,\r\n    symbol,\r\n    bTokenSymbol,\r\n    multiplier: multiplier.toString(),\r\n    feeRatio: feeRatio.toString(),\r\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n    minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n    minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n    minAddLiquidity: minAddLiquidity.toString(),\r\n    redemptionFeeRatio: redemptionFeeRatio.toString(),\r\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n    minLiquidationReward: minLiquidationReward.toString(),\r\n    maxLiquidationReward: maxLiquidationReward.toString(),\r\n    liquidationCutRatio: liquidationCutRatio.toString(),\r\n    priceDelayAllowance: priceDelayAllowance.toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Get position Information of the user\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.volume\r\n * @returns {string} response.averageEntryPrice\r\n * @returns {string} response.margin\r\n * @returns {string} response.marginHeld\r\n * @returns {string} response.unrealizedPnl\r\n * @returns {string} response.liquidationPrice\r\n */\r\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\r\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n  const {\r\n    multiplier,\r\n    minInitialMarginRatio,\r\n    minMaintenanceMarginRatio,\r\n  } = await pPool.getParameters();\r\n  const symbol = await pPool.symbol()\r\n  //console.log('getPositionInfo', chainId, poolAddress, accountAddress, price);\r\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\r\n  const price = await getPriceFromRest(symbol);\r\n  if (price === '') {\r\n    return {\r\n      price,\r\n      volume: volume.toString(),\r\n      averageEntryPrice: calculateEntryPrice(\r\n        volume,\r\n        cost,\r\n        multiplier\r\n      ).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: '',\r\n      unrealizedPnl: '',\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        cost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n    };\r\n  } else {\r\n    return {\r\n      price,\r\n      volume: volume.toString(),\r\n      averageEntryPrice: calculateEntryPrice(\r\n        volume,\r\n        cost,\r\n        multiplier\r\n      ).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: calculateMarginHeld(\r\n        price,\r\n        volume,\r\n        multiplier,\r\n        minInitialMarginRatio\r\n      ).toString(),\r\n      unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        cost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get liquidity Info of the user\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.totalSupply\r\n * @returns {string} response.poolLiquidity\r\n * @returns {string} response.shares\r\n * @returns {string} response.shareValue\r\n * @returns {string} response.maxRemovableShares\r\n */\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { lTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\r\n  //lToken.setAccount(accountAddress);\r\n\r\n  const [lTokenBalance, lTokenTotalSupply, symbol] = await Promise.all([\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n    pPool.symbol(),\r\n  ]);\r\n  const price = await getPriceFromRest(symbol);\r\n  const {\r\n    liquidity,\r\n    tradersNetCost,\r\n    tradersNetVolume,\r\n  } = await pPool.getStateValues();\r\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\r\n  const poolDynamicEquity = liquidity.plus(\r\n    tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\r\n  );\r\n\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: calculateShareValue(\r\n      lTokenTotalSupply,\r\n      poolDynamicEquity\r\n    ).toString(),\r\n    maxRemovableShares: calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      tradersNetVolume,\r\n      tradersNetCost,\r\n      multiplier,\r\n      minPoolMarginRatio,\r\n      price\r\n    ).toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Get user balance in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {string} user balance\r\n */\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\n/**\r\n * Get estimate margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} volume\r\n * @param {string} leverage\r\n * @returns {string}\r\n */\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage\r\n) => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const { multiplier } = await pPool.getParameters();\r\n  const symbol = await pPool.symbol();\r\n  const price = await getPriceFromRest(symbol);\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .div(bg(leverage))\r\n    .toString();\r\n};\r\n\r\n/**\r\n * Get estimate Fee in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} volume\r\n * @returns {string}\r\n */\r\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\r\n  // const price = await getBTCUSDPrice(chainId, poolAddress);\r\n  let price = priceCache.get();\r\n  let parameters = PerpetualPoolParametersCache.get();\r\n  if (price === '') {\r\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const symbol = await pPool.symbol();\r\n    await priceCache._update(poolAddress, symbol);\r\n    price = priceCache.get();\r\n  }\r\n  // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\r\n  // const { multiplier, feeRatio } = await pPool.getParameters();\r\n  if (!parameters.multiplier) {\r\n    parameters = await PerpetualPoolParametersCache.update(\r\n      chainId,\r\n      poolAddress\r\n    );\r\n  }\r\n  //console.log('price', price);\r\n  const { multiplier, feeRatio } = parameters;\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(feeRatio)\r\n    .toString();\r\n};\r\n\r\n/**\r\n * Get funding rate of the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate0\r\n * @returns {string} response.fundingRatePerBlock\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.volume\r\n * @returns {string} response.tradersNetVolume\r\n */\r\nexport const getFundingRate = async (chainId, poolAddress) => {\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n\r\n  const res = await perpetualPool\r\n    .getFundingRate()\r\n    .catch((err) => console.log('getFundingRate', err));\r\n  fundingRateCache.set(chainId, poolAddress, res);\r\n  const poolInfo = await getPoolInfoApy(chainId, poolAddress);\r\n\r\n  if (res) {\r\n    // console.log(hexToNatural(res[0]));\r\n    const {\r\n      fundingRate,\r\n      fundingRatePerBlock,\r\n      liquidity,\r\n      tradersNetVolume,\r\n    } = res;\r\n    const volume = poolInfo.volume24h;\r\n    // fundingRate = processFundingRate(chainId, fundingRate);\r\n\r\n    return {\r\n      fundingRate0: naturalWithPercentage(fundingRate),\r\n      fundingRatePerBlock: bg(fundingRatePerBlock).toExponential(10),\r\n      liquidity: liquidity.toString(),\r\n      volume: deriToNatural(volume).toString(),\r\n      tradersNetVolume: tradersNetVolume.toString(),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress) => {\r\n  return fundingRateCache.get(chainId, poolAddress)\r\n}\r\n\r\n/**\r\n * Get estimate funding rate\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} newNetVolume\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate1\r\n */\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume\r\n) => {\r\n  let fundingRate1;\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool.getFundingRate();\r\n  }\r\n  if (res) {\r\n    const parameters = [\r\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.fundingRateCoefficient,\r\n    ];\r\n    if (!validateArgs(...parameters)) {\r\n      return {\r\n        fundingRate1: '0',\r\n      };\r\n    }\r\n    // console.log(parameters)\r\n    fundingRate1 = calculateFundingRate(...parameters);\r\n    fundingRate1 = processFundingRate(chainId, fundingRate1);\r\n    return {\r\n      fundingRate1: naturalWithPercentage(fundingRate1),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get liquidity used\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidityUsed0\r\n */\r\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool.getFundingRate();\r\n  }\r\n  if (res) {\r\n    const { liquidityUsed } = res;\r\n    return {\r\n      liquidityUsed0: naturalWithPercentage(liquidityUsed),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get estimate liquidity used\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} newNetVolume\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate1\r\n */\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume\r\n) => {\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool\r\n      .getFundingRate()\r\n      .catch((err) => console.log('getLiquidityUsed', err));\r\n  }\r\n  if (res) {\r\n    const parameters = [\r\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.poolMarginRatio,\r\n    ];\r\n    if (!validateArgs(...parameters)) {\r\n      return {\r\n        liquidityUsed1: '0',\r\n      };\r\n    }\r\n    const liquidityUsed1 = calculateLiquidityUsed(...parameters);\r\n    return {\r\n      liquidityUsed1: naturalWithPercentage(liquidityUsed1),\r\n    };\r\n  }\r\n};\r\n","import { bg, max } from '../../shared/utils';\r\n\r\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\r\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\r\n\r\nexport const calculateMarginHeld = (\r\n  price,\r\n  volume,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\r\n};\r\n\r\nexport const calculatePnl = (price, volume, multiplier, cost) => {\r\n  return volume.times(price).times(multiplier).minus(cost);\r\n}\r\n\r\n// export const calculateMaxWithdrawMargin = (\r\n//   price,\r\n//   volume,\r\n//   margin,\r\n//   cost,\r\n//   multiplier,\r\n//   minInitialMarginRatio\r\n// ) => {\r\n//   if (volume.eq(0)) {\r\n//     return margin;\r\n//   }\r\n//   const held = calculateMarginHeld(\r\n//     price,\r\n//     volume,\r\n//     multiplier,\r\n//     minInitialMarginRatio\r\n//   );\r\n//   const pnl = calculatePnl(price, volume, multiplier, cost);\r\n//   const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\r\n//   return withdrawable;\r\n// };\r\n\r\nexport const calculateLiquidationPrice = (\r\n  volume,\r\n  margin,\r\n  cost,\r\n  dynamicCost,\r\n  multiplier,\r\n  minMaintenanceMarginRatio\r\n) => {\r\n  const tmp = cost.minus(margin);\r\n  let res = volume.gt(0)\r\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier)\r\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier);\r\n  res = max(res, bg(0));\r\n  return res;\r\n};\r\n\r\nexport const isOrderValid = (\r\n  //price,\r\n  margin,\r\n  marginHeld,\r\n  liquidity,\r\n  liquidityUsed,\r\n  // multiplier,\r\n  // minPoolMarginRatio,\r\n  // newVolume,\r\n) => {\r\n  const minMargin = marginHeld;\r\n  // const poolMaxVolume = liquidity.minus(liquidityUsed)\r\n  //   .div(minPoolMarginRatio)\r\n  //   .div(price)\r\n  //   .div(multiplier);\r\n  if (margin.gte(minMargin)) {\r\n    // if (\r\n    //   newVolume.lte(poolMaxVolume) &&\r\n    //   newVolume.gte(poolMaxVolume.negated())\r\n    // ) {\r\n    if (liquidity.minus(liquidityUsed).gte(0)) {\r\n      return { success: true };\r\n    }\r\n    return { success: false, error: 'Pool has insufficient liquidity' };\r\n  }\r\n  return { success: false, error: 'Trader has insufficient margin' };\r\n};\r\n\r\nexport const calculateTxFee = (volume, price, multiplier, feeRatio) => {\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(feeRatio)\r\n    .toString();\r\n};","import { bg, getDailyBlockNumber, validateArgs } from '../../shared/utils';\r\n\r\nexport const calculateLiquidityUsed = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  poolMarginRatio\r\n) => {\r\n  if (\r\n    validateArgs(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      poolMarginRatio\r\n    )\r\n  ) {\r\n    return bg(tradersNetVolume)\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(poolMarginRatio)\r\n      .div(liquidity)\r\n      .abs();\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      poolMarginRatio,\r\n    ];\r\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\r\n  }\r\n}\r\n\r\nexport const calculateFundingRate = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  fundingRateCoefficient\r\n) => {\r\n  if (\r\n    validateArgs(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      fundingRateCoefficient\r\n    )\r\n  ) {\r\n    return bg(liquidity).eq(0) ? bg(0) : bg(tradersNetVolume)\r\n      .times(price)\r\n      // .times(price)\r\n      // .times(multiplier)\r\n      .times(multiplier)\r\n      .times(fundingRateCoefficient)\r\n      .div(liquidity);\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      fundingRateCoefficient\r\n    ];\r\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\r\n  }\r\n};\r\n\r\nexport const processFundingRate = (chainId, fundingRate) => {\r\n  const annualBlockCount = getDailyBlockNumber(chainId);\r\n  //console.log(annualBlockCount);\r\n  return bg(fundingRate).times(annualBlockCount);\r\n};\r\n\r\nexport const calculateFundingFee = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  fundingRateCoefficient,\r\n  dynamicEquity,\r\n  cumulativeFundingRate,\r\n  lastCumulativeFundingRate,\r\n  lastUpdatedBlockNumber,\r\n  latestBlockNumber,\r\n  volume,\r\n) => {\r\n  if (bg(volume).eq(0)) {\r\n    return '0'\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      dynamicEquity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    ];\r\n    if (\r\n      validateArgs(...args)\r\n    ) {\r\n      return bg(dynamicEquity).eq(0) ? bg(0) : bg(tradersNetVolume)\r\n        .times(price)\r\n        .times(multiplier)\r\n        .times(price)\r\n        .times(multiplier)\r\n        .times(fundingRateCoefficient)\r\n        .div(dynamicEquity)\r\n        .times(bg(latestBlockNumber).minus(lastUpdatedBlockNumber))\r\n        .plus(cumulativeFundingRate)\r\n        .minus(lastCumulativeFundingRate)\r\n        .times(volume)\r\n    } else {\r\n      console.log(`calculateFundingFee: invalid args: ${args}`);\r\n      return 'NaN'\r\n    }\r\n  }\r\n};","import { bg, max, min } from '../../shared/utils'\r\n\r\nexport const calculateBTokenDynamicEquities = (bTokens) => {\r\n  //const dynamicEquities = bTokens.map((b) => bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\r\n  //const totalDynamicEquity = dynamicEquities.reduce((accum, d) => accum.plus(d), bg(0))\r\n  const totalDynamicEquity = bTokens.reduce((accum, b) => accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)), bg(0))\r\n  return totalDynamicEquity\r\n}\r\n\r\nexport const isBToken0RatioValid = (bTokens, bTokenId, amount, bToken0Ratio) => {\r\n  bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).plus(amount)\r\n  const totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\r\n  const b = bTokens['0']\r\n  const dynamicEquity = bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\r\n  //console.log('estimatedBToken0Ratio',dynamicEquity.div(totalDynamicEquity).toString())\r\n  // use 1 as efficient\r\n  if (\r\n    !totalDynamicEquity.eq(0) &&\r\n    dynamicEquity.div(totalDynamicEquity).times('1').lt(bToken0Ratio)\r\n  ) {\r\n    return { success: false, error: 'Trader has insufficient bToken0' };\r\n  } else {\r\n    return { success: true };\r\n  }\r\n}\r\n\r\nexport const isPoolMarginRatioValid = (bTokens, bTokenId, amount, userLiquidity, symbols, poolMarginRatio) => {\r\n  if (bg(amount).gte(userLiquidity)) {\r\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(userLiquidity)\r\n  } else {\r\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(amount)\r\n  }\r\n  let totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\r\n  let totalCost = bg(0)\r\n  for (let i=0; i<symbols.length; i++) {\r\n    const s = symbols[i]\r\n    if (!bg(s.tradersNetVolume).eq(0)) {\r\n      const cost = bg(s.tradersNetVolume).times(s.price).times(s.multiplier)\r\n      totalDynamicEquity = totalDynamicEquity.plus(s.tradersNetCost).minus(cost)\r\n      totalCost = totalCost.plus(cost.abs())\r\n    }\r\n  }\r\n  //console.log(totalDynamicEquity.toString(), totalCost.toString())\r\n  if (\r\n    !totalCost.eq(0) &&\r\n    totalDynamicEquity.div(totalCost).times('1').lt(poolMarginRatio)\r\n  ) {\r\n    return { success: false, error: 'Trader has insufficient liquidity' };\r\n  } else {\r\n    return { success: true };\r\n  }\r\n}\r\n\r\n\r\nexport const calculateMaxRemovableLiquidity = (\r\n  bToken,\r\n  userLiquidity,\r\n  cost,\r\n  pnl,\r\n  restLiquidity,\r\n  minPoolMarginRatio,\r\n) => {\r\n  if (bg(cost).eq(0)) {\r\n    return userLiquidity;\r\n  } else {\r\n    return max(\r\n      min(\r\n        bToken.liquidity.minus(\r\n          minPoolMarginRatio\r\n            .times(cost)\r\n            .plus(pnl)\r\n            .minus(restLiquidity)\r\n            .div(bToken.price)\r\n            .div(bToken.discount)\r\n        ).times('0.98'),\r\n        userLiquidity\r\n      ),\r\n      bg(0)\r\n    );\r\n  }\r\n};\r\n\r\n// for v1 mining\r\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\r\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\r\n\r\nexport const calculateMaxRemovableShares = (\r\n  lTokenBalance,\r\n  lTokenTotalSupply,\r\n  liquidity,\r\n  value,\r\n  cost,\r\n  minPoolMarginRatio,\r\n) => {\r\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\r\n  const removable = bg(liquidity)\r\n    .plus(cost)\r\n    .minus(value)\r\n    .minus(bg(value).abs().times(minPoolMarginRatio));\r\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\r\n  return shares;\r\n};\r\n","import {\r\n  getPoolConfig2,\r\n  getPoolBTokenIdList,\r\n  getPoolSymbolIdList,\r\n} from '../../shared/config';\r\nimport { databaseFactory } from '../../shared/factory';\r\nimport { bg, deriToNatural, getNetworkName } from '../../shared/utils';\r\nimport { lTokenFactory, perpetualPoolFactory } from '../factory';\r\nimport { calculateMaxRemovableLiquidity } from '../calculation';\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  try {\r\n    const { lToken: lTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const lToken = lTokenFactory(chainId, lTokenAddress);\r\n\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n    const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n\r\n    const [parameterInfo, bTokenInfo, lTokenAsset] = await Promise.all([\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getBToken(bTokenId),\r\n      lToken.getAsset(accountAddress, bTokenId),\r\n    ]);\r\n    const { minPoolMarginRatio } = parameterInfo;\r\n    let promises = [];\r\n    for (let i = 0; i < bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n    }\r\n    const bTokens = await Promise.all(promises);\r\n\r\n    promises = [];\r\n    for (let i = 0; i < symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n    }\r\n    const symbols = await Promise.all(promises);\r\n\r\n    const cost = symbols.reduce((accum, s) => {\r\n      return accum.plus(\r\n        bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\r\n      );\r\n    }, bg(0));\r\n    const totalPnl = symbols.reduce((accum, s) => {\r\n      return accum.plus(\r\n        bg(s.tradersNetVolume)\r\n          .times(s.price)\r\n          .times(s.multiplier)\r\n          .minus(s.tradersNetCost)\r\n      );\r\n    }, bg(0));\r\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\r\n      if (index === parseInt(bTokenId)) {\r\n        return accum.plus(b.pnl);\r\n      } else {\r\n        return accum.plus(\r\n          bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\r\n        );\r\n      }\r\n    }, bg(0));\r\n\r\n    const { liquidity: poolLiquidity } = bTokenInfo;\r\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset;\r\n    const maxRemovableShares = calculateMaxRemovableLiquidity(\r\n      bTokens[bTokenId],\r\n      liquidity,\r\n      cost,\r\n      totalPnl,\r\n      restLiquidity,\r\n      minPoolMarginRatio\r\n    );\r\n    const approximatePnl = pnl.plus(\r\n      bg(bTokens[bTokenId].cumulativePnl)\r\n        .minus(lastCumulativePnl)\r\n        .times(liquidity)\r\n    );\r\n    return {\r\n      //totalSupply: lTokenTotalSupply.toString(),\r\n      poolLiquidity: poolLiquidity.toString(),\r\n      // shares: liquidity.toString(),\r\n      // shareValue: '1',\r\n      // maxRemovableShares: liquidity.toString()\r\n      shares: liquidity.toString(),\r\n      pnl: approximatePnl.div(bTokens[bTokenId].price).toString(),\r\n      maxRemovableShares: maxRemovableShares.toString(),\r\n    };\r\n  } catch (err) {\r\n    console.log(`${err}`);\r\n  }\r\n  return {\r\n    poolLiquidity: '',\r\n    shares: '',\r\n    pnl: '',\r\n    maxRemovableShares: '',\r\n  };\r\n};\r\n\r\nexport const getPoolLiquidity = async (chainId, poolAddress, bTokenId) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity${bTokenId}`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        symbol: '',\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`);\r\n  }\r\n  return {\r\n    liquidity: '',\r\n    symbol: '',\r\n  };\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy${bTokenId}`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n        `${poolNetwork}.${poolAddress}.V2.multiplier${bTokenId}`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h, multiplier] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n        multiplier: deriToNatural(multiplier).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`);\r\n  }\r\n};\r\n","import { getPriceInfo } from '../../shared/utils/oracle';\r\nimport {\r\n  getPoolBTokenIdList,\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n} from '../../shared/config';\r\nimport {\r\n  perpetualPoolRouterFactory,\r\n  perpetualPoolFactory,\r\n  lTokenFactory,\r\n} from '../factory';\r\nimport { isBToken0RatioValid, isPoolMarginRatioValid } from '../calculation';\r\n\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\r\n  const validation = isBToken0RatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    minBToken0Ratio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.addLiquidity(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress);\r\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\r\n  const { liquidity: userLiquidity } = lTokenAsset;\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  promises = [];\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\r\n  const validation = isPoolMarginRatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    userLiquidity,\r\n    symbols,\r\n    minPoolMarginRatio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.removeLiquidity(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount,\r\n        isMaximum\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const addLiquidityWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\r\n  const validation = isBToken0RatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    minBToken0Ratio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      const promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.addLiquidityWithPrices(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount,\r\n        priceInfos\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const removeLiquidityWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n\r\n  const lToken = lTokenFactory(chainId, lTokenAddress);\r\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\r\n  const { liquidity: userLiquidity } = lTokenAsset;\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  promises = [];\r\n\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\r\n\r\n  const validation = isPoolMarginRatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    userLiquidity,\r\n    symbols,\r\n    minPoolMarginRatio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.removeLiquidityWithPrices(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount,\r\n        priceInfos,\r\n        isMaximum\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n","export const priceCache = (function(){\r\n  let _prices = {}\r\n  return {\r\n    get(poolAddress, symbolId) {\r\n      const key = `${poolAddress}.${symbolId}`\r\n      if (Object.keys(_prices).includes(key)) {\r\n        const [price, ] = _prices[key].split('|')\r\n        //if (parseInt(timestamp) - Date.now() < 10000) {\r\n          return price\r\n        //}\r\n      }\r\n      console.log('please init priceCache first')\r\n    },\r\n    // update(chainId, poolAddress, symbolId) {\r\n    //   // place holder\r\n    // },\r\n    set(poolAddress, symbolId, val) {\r\n      if (!isNaN(parseFloat(val))) {\r\n        const timestamp = Date.now().toString()\r\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\r\n      }\r\n    }\r\n  }\r\n})()\r\n\r\nexport const fundingRateCache = (function () {\r\n  let resourceMap = {};\r\n  return {\r\n    get(chainId, contractAddress, symbolId) {\r\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\r\n      if (Object.keys(resourceMap).includes(key)) {\r\n        return resourceMap[key];\r\n      }\r\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\r\n      return undefined;\r\n    },\r\n    set(chainId, contractAddress, symbolId, resource) {\r\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\r\n      resourceMap[key] = resource;\r\n    },\r\n  };\r\n})();","import { bTokenFactory } from '../../shared/factory';\r\nimport {\r\n  getPoolBTokenIdList,\r\n  getPoolBTokenList,\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n  getPoolSymbolList,\r\n} from '../../shared/config';\r\nimport { bg, min, max } from '../../shared/utils'\r\nimport { getOraclePrice } from '../../shared/utils/oracle'\r\nimport { getIndexInfo } from '../../shared/config/token';\r\nimport { fundingRateCache, priceCache } from '../../shared/api/api_globals';\r\nimport {\r\n  calculateEntryPrice,\r\n  calculateLiquidationPrice,\r\n  calculateFundingRate,\r\n  calculateFundingFee,\r\n  processFundingRate,\r\n} from '../calculation';\r\nimport { perpetualPoolFactory, pTokenFactory } from '../factory';\r\n\r\nexport const getSpecification = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    const {symbol } = getPoolConfig2(poolAddress, undefined, symbolId)\r\n    const bTokens = getPoolBTokenList(poolAddress)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const [symbolInfo, parameterInfo] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n    ])\r\n    const bTokenDiscounts = (await Promise.all(\r\n      bTokens.reduce(\r\n        (acc, b, index) =>\r\n          acc.concat([perpetualPool.getBToken(index.toString())]),\r\n        []\r\n      )\r\n    )).map((b) => b.discount);\r\n    const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\r\n    const {\r\n      minPoolMarginRatio,\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n    } = parameterInfo\r\n    return {\r\n      symbol: symbol,\r\n      bTokenSymbol: bTokens.map((b) => b.bTokenSymbol),\r\n      bTokenMultiplier: bTokenDiscounts.map((b) => b.toString()),\r\n      multiplier: multiplier.toString(),\r\n      feeRatio: feeRatio.toString(),\r\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n      //minAddLiquidity: minAddLiquidity.toString(),\r\n      //redemptionFeeRatio: redemptionFeeRatio.toString(),\r\n      minLiquidationReward: minLiquidationReward.toString(),\r\n      maxLiquidationReward: maxLiquidationReward.toString(),\r\n      liquidationCutRatio: liquidationCutRatio.toString(),\r\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n      indexConstituents: getIndexInfo(symbol)\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    symbol: '',\r\n    bTokenSymbol: [],\r\n    bTokenMultiplier: [],\r\n    multiplier: '',\r\n    feeRatio: '',\r\n    fundingRateCoefficient: '',\r\n    minPoolMarginRatio: '',\r\n    minInitialMarginRatio: '',\r\n    minMaintenanceMarginRatio: '',\r\n    minLiquidationReward: '',\r\n    maxLiquidationReward: '',\r\n    liquidationCutRatio: '',\r\n    protocolFeeCollectRatio: '',\r\n    indexConstituents: { url: '', tokens: [] },\r\n  };\r\n};\r\n\r\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\r\n  try {\r\n    const symbolConfigList = getPoolSymbolList(poolAddress)\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\r\n    const symbolList = symbolConfigList.map((i) => i.symbol)\r\n    //console.log('bTokenList', bTokenList)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    const [symbolInfo, parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margins, positions, latestPrice] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getLastUpdatedBlockNumber(),\r\n      perpetualPool.getLatestBlockNumber(),\r\n      pToken.getPosition(accountAddress, symbolId),\r\n      pToken.getMargins(accountAddress),\r\n      pToken.getPositions(accountAddress),\r\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)])\r\n    ])\r\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\r\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\r\n    const {\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n    } = parameterInfo\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const margin = bTokens.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n    }, bg(0))\r\n\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    promises = []\r\n    for (let i=0; i<symbolList.length; i++) {\r\n      promises.push(getOraclePrice(chainId, symbolList[i]))\r\n    }\r\n    const symbolPrices = await Promise.all(promises)\r\n    const price = symbolPrices[symbolId]\r\n    priceCache.set(poolAddress, symbolId, price)\r\n    const marginHeld = symbols.reduce((accum, s, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\r\n    }, bg(0))\r\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[symbolId]).times(minInitialMarginRatio)\r\n    //console.log('margin', margin.toString(), marginHeld.toString())\r\n    //\r\n    //const unrealizedPnl = bg(positions[symbolId].volume).times(price).times(multiplier).minus(positions[symbolId].cost)\r\n    const unrealizedPnl = symbols.reduce((accum, s, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n    }, bg(0))\r\n    const unrealizedPnlList = symbols.map((s, index) => {\r\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\r\n    })\r\n\r\n    const totalCost = positions.reduce((accum, a) => {\r\n      return accum.plus(bg(a.cost))\r\n    }, bg(0))\r\n    const dynamicCost = symbols.reduce((accum, s, index) => {\r\n      if (index !== parseInt(symbolId)) {\r\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\r\n      } else {\r\n        return accum\r\n      }\r\n    }, bg(0))\r\n    //console.log('cost', costTotal.toString())\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n    const fundingFee = calculateFundingFee(\r\n      tradersNetVolume,\r\n      latestPrice,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      liquidity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    );\r\n  return {\r\n      price: price,\r\n      volume: volume.toString(),\r\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: marginHeld.toString(),\r\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n      unrealizedPnl: unrealizedPnl.toString(),\r\n      unrealizedPnlList,\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n      fundingFee: fundingFee.toString()\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    volume: '',\r\n    averageEntryPrice: '',\r\n    margin: '',\r\n    marginHeld: '',\r\n    unrealizedPnl: '',\r\n    liquidationPrice: '',\r\n  };\r\n}\r\n\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  try {\r\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\r\n    return balance.toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return '';\r\n}\r\n\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => {\r\n  try {\r\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress)\r\n    return await bToken.isUnlocked(accountAddress, poolAddress)\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return false\r\n}\r\n\r\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\r\n  try {\r\n    let price = priceCache.get(poolAddress, symbolId)\r\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n    if (!price) {\r\n      //price = await getOraclePrice(poolAddress, symbolId)\r\n      price = await getOraclePrice(chainId, symbol)\r\n      priceCache.set(poolAddress, symbolId, price)\r\n    }\r\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!cache || !cache.multiplier) {\r\n      await _getFundingRate(chainId, poolAddress, symbolId)\r\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    }\r\n    const { multiplier, feeRatio } = cache;\r\n    //console.log(volume, price, multiplier, feeRatio)\r\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return ''\r\n}\r\n\r\nexport const getEstimatedMargin = async(\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const [price, symbolInfo ] = await Promise.all([\r\n      //getOraclePrice(poolAddress, symbolId),\r\n      getOraclePrice(chainId, symbol),\r\n      perpetualPool.getSymbol(symbolId),\r\n    ])\r\n    priceCache.set(poolAddress, symbolId, price)\r\n    const {multiplier} = symbolInfo\r\n    //console.log('m',multiplier.toString())\r\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return ''\r\n}\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\r\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\r\n}\r\n\r\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n  const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n  let bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n  let promiseList = []\r\n  for (let i=0; i<bTokenIdList.length; i++) {\r\n    promiseList.push(perpetualPool.getBToken(i))\r\n  }\r\n  const bTokenInfoList = await Promise.all(promiseList)\r\n  const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n  //const pnl = bTokenInfoList.reduce((accum, i) => accum.plus(i.pnl), bg(0))\r\n  //console.log('pnl', pnl.toString())\r\n\r\n  const [price, symbolInfo, parameterInfo ] = await Promise.all([\r\n    //getOraclePrice(poolAddress, symbolId),\r\n    getOraclePrice(chainId, symbol),\r\n    perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n  ])\r\n  priceCache.set(poolAddress, symbolId, price)\r\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\r\n  const { minPoolMarginRatio } = parameterInfo;\r\n  const fundingRateArgs = [\r\n    tradersNetVolume,\r\n    price,\r\n    multiplier,\r\n    liquidity,\r\n    fundingRateCoefficient,\r\n  ]\r\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\r\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\r\n  // const liquidityUsedArgs = [\r\n  //   tradersNetVolume,\r\n  //   price,\r\n  //   multiplier,\r\n  //   liquidity,\r\n  //   minPoolMarginRatio,\r\n  // ]\r\n  let symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  let promises = []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  const symbols = await Promise.all(promises)\r\n  //console.log('margin', margin.toString(), marginHeld.toString())\r\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\r\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\r\n  }, bg(0))\r\n\r\n  //const liquidityUsed = liquidityUsedInAmount.div(liquidity)\r\n  const res = {\r\n    price,\r\n    multiplier: multiplier.toString(),\r\n    feeRatio: feeRatio.toString(),\r\n    tradersNetVolume: tradersNetVolume.toString(),\r\n    liquidity: liquidity.toString(),\r\n    //pnl: pnl.toString(),\r\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n    fundingRatePerBlock: fundingRatePerBlock,\r\n    fundingRate: fundingRate,\r\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\r\n  }\r\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\r\n  return res\r\n}\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  try {\r\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    const { fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume } = res\r\n    return {\r\n      fundingRate0: fundingRate.times(100).toString(),\r\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\r\n      liquidity: liquidity.toString(),\r\n      volume: '-',\r\n      tradersNetVolume: tradersNetVolume.toString()\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    fundingRate0: '',\r\n    fundingRatePerBlock: '',\r\n    liquidity: '',\r\n    volume: '',\r\n    tradersNetVolume: '',\r\n  };\r\n}\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    const args = [\r\n      bg(res.tradersNetVolume).plus(newNetVolume).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.fundingRateCoefficient,\r\n    ]\r\n    let fundingRate1 = calculateFundingRate(...args)\r\n    fundingRate1 = processFundingRate(chainId, fundingRate1)\r\n    return {\r\n      fundingRate1: fundingRate1.times(100).toString()\r\n    }\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    fundingRate1: '',\r\n  }\r\n}\r\n\r\nexport const getLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    return {\r\n      liquidityUsed0: res.liquidityUsed.times(100).toString(),\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidityUsed0: '',\r\n  }\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n    // const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    // const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    // const { volume } = pToken.getPosition(accountAddress, symbolId);\r\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\r\n    let promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    let liquidityUsed0 = symbols.reduce((accum, a, index) => {\r\n      if (index === parseInt(symbolId)) {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume.plus(newNetVolume)).abs())\r\n      } else {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume).abs())\r\n      }\r\n    }, bg(0))\r\n    //liquidityUsed0 = liquidityUsed0.times(res.minPoolMarginRatio)\r\n    //const liquidityUsed = bg(newNetVolume).times(res.price).times(res.multiplier).times(res.minPoolMarginRatio).div(res.liquidity)\r\n    const liquidityUsed1 = liquidityUsed0.times(res.minPoolMarginRatio).div(res.liquidity)\r\n    return {\r\n      liquidityUsed1: liquidityUsed1.times(100).toString()\r\n    }\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidityUsed1: '',\r\n  }\r\n}\r\n\r\n\r\nexport const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n  try {\r\n    let bTokenList = getPoolBTokenList(poolAddress)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    // let bTokenList = bTokensConfigList.map((i) => {\r\n    //   return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\r\n    // })\r\n    let promiseList = []\r\n    for (let i=0; i<bTokenList.length; i++) {\r\n      promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress).balanceOf(accountAddress))\r\n    }\r\n    const resultList = await Promise.all(promiseList)\r\n    for (let i=0; i<bTokenList.length; i++) {\r\n      bTokenList[i].walletBalance = resultList[i].toString()\r\n    }\r\n\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n    const [margins, positions, parameterInfo] = await Promise.all([\r\n      pToken.getMargins(accountAddress),\r\n      pToken.getPositions(accountAddress),\r\n      perpetualPool.getParameters(),\r\n    ]);\r\n    const { minInitialMarginRatio } = parameterInfo;\r\n\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const margin = bTokens.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n    }, bg(0))\r\n    //console.log('margin', margin.toString())\r\n\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    const marginHeld = symbols.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs().times(minInitialMarginRatio))\r\n    }, bg(0))\r\n    //console.log('marginHeld', marginHeld.toString())\r\n\r\n    const pnl = symbols.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n    }, bg(0))\r\n    //console.log('pnl', pnl.toString())\r\n\r\n    bTokenList = bTokenList.map((i, index) => {\r\n      if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\r\n        i.availableBalance = max(min(margin.minus(marginHeld).plus(pnl).div(bTokens[index].price).div(bTokens[index].discount), margins[index]), bg(0)).toString()\r\n      } else {\r\n        i.availableBalance = '-'\r\n      }\r\n      return i\r\n    })\r\n    return bTokenList\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return []\r\n}\r\n\r\nexport const getFundingFee = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n    const symbolConfigList = getPoolSymbolList(poolAddress)\r\n    const symbolList = symbolConfigList.map((i) => i.symbol)\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    const [symbolInfo, positionInfo, price, lastUpdatedBlockNumber, latestBlockNumber] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      pToken.getPosition(accountAddress, symbolId),\r\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)]),\r\n      perpetualPool.getLastUpdatedBlockNumber(),\r\n      perpetualPool.getLatestBlockNumber(),\r\n    ])\r\n    const { volume, lastCumulativeFundingRate } = positionInfo\r\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate, } = symbolInfo;\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n    const fundingFee = calculateFundingFee(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      liquidity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    );\r\n  return fundingFee.toString()\r\n}\r\n","import {\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n  getPoolBTokenIdList,\r\n} from '../../shared/config';\r\nimport { bg } from '../../shared/utils';\r\nimport { getPriceInfo } from '../../shared/utils/oracle';\r\nimport { bTokenFactory } from '../../shared/factory';\r\nimport { isOrderValid } from '../calculation';\r\nimport {\r\n  perpetualPoolRouterFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n} from '../factory';\r\n\r\nexport const unlock = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const tx = await perpetualPoolRouter.addMargin(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const tx = await perpetualPoolRouter.removeMargin(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount,\r\n      isMaximum\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  const [parameterInfo, positions] = await Promise.all([\r\n    //  getOraclePrice(poolAddress, symbolId),\r\n    //  perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n    pToken.getPositions(accountAddress),\r\n    //pToken.getMargin(accountAddress, symbolId),\r\n  ]);\r\n\r\n  //const { multiplier } = symbolInfo;\r\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  const margins = await pToken.getMargins(accountAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const margin = bTokens.reduce((accum, i, index) => {\r\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\r\n  }, bg(0));\r\n\r\n  const liquidity = bTokens.reduce(\r\n    (accum, i) =>\r\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\r\n    bg(0)\r\n  );\r\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  promises = [];\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  let marginHeld = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.price)\r\n          .times(a.multiplier)\r\n          .times(positions[index].volume.plus(newVolume))\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  marginHeld = marginHeld.times(minInitialMarginRatio);\r\n\r\n  //console.log('margin', margin.toString(), marginHeld.toString())\r\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume)\r\n          .plus(newVolume)\r\n          .times(a.price)\r\n          .times(a.multiplier)\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n  //console.log('liquidityUsed', liquidityUsed.toString())\r\n\r\n  const orderValidation = isOrderValid(\r\n    //price,\r\n    margin,\r\n    marginHeld,\r\n    liquidity,\r\n    liquidityUsed\r\n    //multiplier,\r\n    //minPoolMarginRatio,\r\n    //bg(newVolume),\r\n  );\r\n  let res;\r\n  if (orderValidation.success) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.trade(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: orderValidation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n  const newVolume = volume.negated();\r\n  let res;\r\n  if (!volume.eq(0)) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.trade(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const depositMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const promises = symbolIdList.map(async (s) => {\r\n      return await getPriceInfo(s);\r\n    });\r\n    const prices = await Promise.all(promises);\r\n    const priceInfos = prices.map((p, index) => {\r\n      return [\r\n        symbolIdList[index],\r\n        p.timestamp,\r\n        p.price,\r\n        parseInt(p.v).toString(),\r\n        p.r,\r\n        p.s,\r\n      ];\r\n    });\r\n    const tx = await perpetualPoolRouter.addMarginWithPrices(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount,\r\n      priceInfos\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const withdrawMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const promises = symbolIdList.map(async (s) => {\r\n      return await getPriceInfo(s);\r\n    });\r\n    const prices = await Promise.all(promises);\r\n    const priceInfos = prices.map((p, index) => {\r\n      return [\r\n        symbolIdList[index],\r\n        p.timestamp,\r\n        p.price,\r\n        parseInt(p.v).toString(),\r\n        p.r,\r\n        p.s,\r\n      ];\r\n    });\r\n    const tx = await perpetualPoolRouter.removeMarginWithPrices(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount,\r\n      priceInfos,\r\n      isMaximum\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const tradeWithMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  //const [price, symbolInfo, parameterInfo, positions] = await Promise.all([\r\n  const [parameterInfo, positions] = await Promise.all([\r\n    //  getOraclePrice(poolAddress, symbolId),\r\n    //  perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n    pToken.getPositions(accountAddress),\r\n    //pToken.getMargin(accountAddress, symbolId),\r\n  ]);\r\n\r\n  //const { multiplier } = symbolInfo;\r\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  const margins = await pToken.getMargins(accountAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const margin = bTokens.reduce((accum, i, index) => {\r\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\r\n  }, bg(0));\r\n\r\n  const liquidity = bTokens.reduce(\r\n    (accum, i) =>\r\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\r\n    bg(0)\r\n  );\r\n  //console.log('liquidity', liquidity.toString())\r\n  promises = [];\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  let marginHeld = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.price)\r\n          .times(a.multiplier)\r\n          .times(positions[index].volume.plus(newVolume))\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  marginHeld = marginHeld.times(minInitialMarginRatio);\r\n\r\n  //console.log('margin', margin.toString(), marginHeld.toString())\r\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume.plus(newVolume))\r\n          .times(a.price)\r\n          .times(a.multiplier)\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n  //console.log('liquidityUsed', liquidityUsed.toString())\r\n\r\n  // const pnl = bTokens.reduce((accum, i) => accum.plus(i.pnl), bg(0))\r\n  // console.log('pnl', pnl.toString())\r\n\r\n  const orderValidation = isOrderValid(\r\n    //price,\r\n    margin,\r\n    marginHeld,\r\n    liquidity,\r\n    liquidityUsed\r\n    //multiplier,\r\n    //minPoolMarginRatio,\r\n    //bg(newVolume),\r\n  );\r\n  let res;\r\n  if (orderValidation.success) {\r\n    try {\r\n      promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.tradeWithPrices(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume,\r\n        priceInfos\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: orderValidation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const closePositionWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n  const newVolume = volume.negated();\r\n  let res;\r\n  if (!volume.eq(0)) {\r\n    try {\r\n      const promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.tradeWithPrices(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume,\r\n        priceInfos\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res;\r\n};\r\n","import { deriToNatural, getHttpBase, fetchJson } from '../../shared/utils';\r\nimport {\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n} from '../../shared/config';\r\nimport { perpetualPoolFactory } from '../factory';\r\n\r\nconst processTradeEvent = async (\r\n  perpetualPool,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio,\r\n  symbols,\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const symbolId = info.symbolId\r\n  const symbol = symbols.find((s) => s.symbolId == info.symbolId)\r\n  const transactionFee = perpetualPool._calculateFee(\r\n    tradeVolume,\r\n    price,\r\n    multiplier[parseInt(symbolId)],\r\n    feeRatio[parseInt(symbolId)]\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    //baseToken: bTokenSymbol,\r\n    symbolId,\r\n    symbol: symbol && symbol.symbol,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: volume.toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  return res;\r\n};\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  //console.log('symbolIdList', symbolIdList);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  let promises= []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  let symbols = await Promise.all(promises)\r\n\r\n  const multiplier = symbols.map((i) => i.multiplier.toString());\r\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\r\n\r\n  const filters = { owner: accountAddress };\r\n  let events = await perpetualPool._getPastEvents(\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await processTradeEvent(\r\n      perpetualPool,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n      symbols,\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock, tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .filter((i) => i)\r\n        .map((i) => {\r\n          return {\r\n            direction: i.direction.trim(),\r\n            //baseToken: i.baseToken.trim(),\r\n            symbolId: i.symbolId,\r\n            symbol: i.symbol,\r\n            price: deriToNatural(i.price).toString(),\r\n            notional: deriToNatural(i.notional).toString(),\r\n            volume: deriToNatural(i.volume).toString(),\r\n            transactionFee: deriToNatural(i.transactionFee).toString(),\r\n            transactionHash: i.transactionHash,\r\n            time: i.time.toString(),\r\n          };\r\n        });\r\n    }\r\n      //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      // console.log(tradeFromBlock, liquidateFromBlock)\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n\r\n      const {initialBlock} = getPoolConfig2(poolAddress)\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch(err) {\r\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\r\n  }\r\n  return []\r\n};\r\n","\r\n/* eslint-disable */\r\nexport const perpetualPoolLiteAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address[5]\", \"name\": \"addresses\", \"type\": \"address[5]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLastUpdateBlock\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLiquidity\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const bTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const lTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\r\n/* eslint-disable */","import { ContractBase } from '../../shared/contract'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { pTokenLiteAbi } from './abis';\r\n\r\nconst processPosition = (res) => {\r\n  return {\r\n    volume: deriToNatural(res.volume),\r\n    cost: deriToNatural(res.cost),\r\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\r\n  }\r\n}\r\nexport class PTokenLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenLiteAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async ownerOf(tokenId) {\r\n    return await this._call('ownerOf', [tokenId]);\r\n  }\r\n  async getMargin(accountAddress) {\r\n    const res = await this._call('getMargin', [accountAddress]);\r\n    return deriToNatural(res)\r\n  }\r\n  async getPosition(accountAddress, symbolId) {\r\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\r\n    if (Array.isArray(res)) {\r\n      return processPosition(res)\r\n    } else {\r\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n  async getActiveSymbolIds() {\r\n    return await this._call('getActiveSymbolIds');\r\n  }\r\n  async isActiveSymbolId(symbolId) {\r\n    return await this._call('isActiveSymbolId', [symbolId]);\r\n  }\r\n  async isApprovedForAll(owner, operator) {\r\n    return await this._call('isApprovedForAll', [owner, operator]);\r\n  }\r\n  async getApproved(tokenId) {\r\n    return await this._call('getApproved', [tokenId]);\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    return await this._call('getNumPositionHolders', [symbolId]);\r\n  }\r\n\r\n  // === transaction ===\r\n}\r\n","import { ContractBase } from '../../shared';\r\nimport { perpetualPoolLiteViewerAbi } from './abis';\r\n\r\nexport class PerpetualPoolLiteViewer extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\r\n  }\r\n  async getOffChainOracleSymbols(poolAddress) {\r\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\r\n    //return res.filter((s) => s && s !== '');\r\n    return res\r\n  }\r\n}\r\n","import {\r\n  getPoolConfig,\r\n  ContractBase,\r\n  deriToNatural,\r\n  naturalToDeri,\r\n  getPoolViewerConfig,\r\n  isEqualSet,\r\n} from '../../shared';\r\nimport { getPriceInfos } from '../../shared/utils/oracle';\r\nimport { perpetualPoolLiteAbi } from './abis';\r\n//import { MAX_INT256} from '../../shared/config'\r\nimport { PTokenLite } from './p_token';\r\nimport { PerpetualPoolLiteViewer } from './perpetual_pool_lite_viewer';\r\n\r\nexport class PerpetualPoolLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\r\n\r\n    this.config = getPoolConfig(\r\n      contractAddress,\r\n      undefined,\r\n      undefined,\r\n      'v2_lite'\r\n    );\r\n    this.offchainSymbolIds = this.config.offchainSymbolIds;\r\n    this.offchainSymbols = this.config.offchainSymbols;\r\n    this.bTokenAddress = this.config.bToken\r\n    this.lTokenAddress = this.config.lToken\r\n    this.pTokenAddress = this.config.pToken\r\n    this.viewerAddress = getPoolViewerConfig(this.chainId, 'v2_lite')\r\n  }\r\n\r\n  async _update() {\r\n    await Promise.all([this.getAddresses()]);\r\n  }\r\n\r\n  async _updateOffchainSymbols() {\r\n    if (!this.pToken) {\r\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress)\r\n    }\r\n    if (!this.viewer) {\r\n      this.viewer = new PerpetualPoolLiteViewer(\r\n          this.chainId,\r\n          this.viewerAddress\r\n      )\r\n    }\r\n    //await this.getAddresses()\r\n    const activeSymbolIds = await this.pToken.getActiveSymbolIds()\r\n    if (!this.activeSymbolIds || !isEqualSet(new Set(this.activeSymbolIds), new Set(activeSymbolIds))) {\r\n      const activeSymbols = await this.viewer.getOffChainOracleSymbols(this.contractAddress)\r\n      //console.log('activeSymbolIds', activeSymbolIds, activeSymbols)\r\n      this.offchainSymbolIds = activeSymbolIds.reduce((acc, i, index) => {\r\n        return activeSymbols[index] == '' ? acc : acc.concat([i]);\r\n      }, []);\r\n      this.offchainSymbols = activeSymbols.filter((s) => s && s !== '');\r\n      this.activeSymbolIds = activeSymbolIds;\r\n    }\r\n  }\r\n\r\n  async getAddresses() {\r\n    const res = await this._call('getAddresses');\r\n    this.bTokenAddress = res.bTokenAddress;\r\n    this.lTokenAddress = res.lTokenAddress;\r\n    this.pTokenAddress = res.pTokenAddress;\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      // decimals0: res.decimals0,\r\n      // minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n  async getLastUpdateBlock() {\r\n    const res = await this._call('getLastUpdateBlock');\r\n    return parseInt(res)\r\n  }\r\n  async getProtocolFeeAccrued() {\r\n    const res = await this._call('getProtocolFeeAccrued');\r\n    return deriToNatural(res);\r\n  }\r\n  async getLiquidity() {\r\n    const res = await this._call('getLiquidity');\r\n    return deriToNatural(res);\r\n  }\r\n  // async getBTokenOracle(bTokenId) {\r\n  //   //bTokenId = parseInt(bTokenId)\r\n  //   return await this._call('getBTokenOracle', [bTokenId])\r\n  // }\r\n  async getSymbol(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    try {\r\n      const res = await this._call('getSymbol', [symbolId]);\r\n      return {\r\n        symbol: res.symbol,\r\n        oracleAddress: res.oracleAddress,\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        price: deriToNatural(res.price),\r\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\r\n    }\r\n  }\r\n\r\n  // async getSymbolOracle(symbolId) {\r\n  //   //symbolId = parseInt(symbolId)\r\n  //   return await this._call('getSymbolOracle', [symbolId])\r\n  // }\r\n\r\n  async _getSymbolPrices() {\r\n    let prices = []\r\n    await this._updateOffchainSymbols()\r\n    if (this.offchainSymbolIds.length > 0) {\r\n      const priceInfos = await getPriceInfos(this.offchainSymbols);\r\n      prices = Object.values(priceInfos).reduce((acc, p, index) => {\r\n        acc.push([\r\n          this.offchainSymbolIds[\r\n            this.offchainSymbols.indexOf(Object.keys(priceInfos)[index])\r\n          ],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ]);\r\n        return acc;\r\n      }, []);\r\n    }\r\n    //console.log('prices', prices);\r\n    return prices;\r\n  }\r\n\r\n  // === transaction ===\r\n  async addLiquidity(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'removeLiquidity',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async addMargin(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'addMargin',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMargin(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'removeMargin',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async trade(accountAddress, symbolId, newVolume) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(newVolume), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract'\r\nimport { deriToNatural } from '../../shared/utils';\r\nimport { lTokenLiteAbi } from './abis';\r\n\r\nexport class LTokenLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, lTokenLiteAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async balanceOf(accountAddress) {\r\n    const res = await this._call('balanceOf', [accountAddress]);\r\n    return deriToNatural(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply');\r\n    return deriToNatural(res);\r\n  }\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n}\r\n","import {\r\n  PerpetualPoolLite,\r\n  LTokenLite,\r\n  PTokenLite,\r\n  PerpetualPoolLiteViewer \r\n} from './contract';\r\n\r\nconst factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite)\r\n\r\nexport const lTokenLiteFactory = factory(LTokenLite)\r\n\r\nexport const pTokenLiteFactory = factory(PTokenLite)\r\n\r\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)","import { getPoolConfig } from '../../shared/config';\r\nimport { catchApiError, bg, deriToNatural, getNetworkName } from '../../shared/utils';\r\nimport { databaseFactory } from '../../shared/factory';\r\nimport { calculateMaxRemovableShares, calculateShareValue } from '../../v1/calculation';\r\nimport { lTokenLiteFactory, pTokenLiteFactory, perpetualPoolLiteFactory } from '../factory';\r\n\r\n\r\nconst _getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\r\n  const { lToken:lTokenAddress, pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', null, 'v2_lite')\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n  const lToken = lTokenLiteFactory(chainId, lTokenAddress)\r\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n  const [parameterInfo, liquidity, lTokenBalance, lTokenTotalSupply, symbolIds] = await Promise.all([\r\n    perpetualPool.getParameters(),\r\n    perpetualPool.getLiquidity(),\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n    pToken.getActiveSymbolIds(),\r\n  ])\r\n  const { minPoolMarginRatio } = parameterInfo;\r\n  let promises = []\r\n  for (let i = 0; i < symbolIds.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n  }\r\n  const symbols = await Promise.all(promises)\r\n  const totalPnl = symbols.reduce((acc, s) => {\r\n    return acc.plus(s.tradersNetVolume.times(s.price).times(s.multiplier).minus(s.tradersNetCost))\r\n  }, bg(0))\r\n  const poolDynamicEquity = liquidity.minus(totalPnl)\r\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0))\r\n  const value = symbols.reduce((acc, s) => acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier)), bg(0))\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: calculateShareValue(\r\n      lTokenTotalSupply,\r\n      poolDynamicEquity\r\n    ).toString(),\r\n    maxRemovableShares: calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      value,\r\n      cost,\r\n      minPoolMarginRatio\r\n    ).toString(),\r\n  };\r\n}\r\nexport const getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\r\n  return catchApiError(\r\n    _getLiquidityInfo,\r\n    [chainId, poolAddress, accountAddress],\r\n    'getLiquidityInfo',\r\n    {\r\n      totalSupply: '',\r\n      poolLiquidity: '',\r\n      shares: '',\r\n      shareValue: '',\r\n      maxRemovableShares: '',\r\n    }\r\n  );\r\n}\r\n\r\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        symbol:'',\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidity: '',\r\n    symbol:'',\r\n  };\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n};\r\n","import { catchTxApiError } from '../../shared/utils';\r\nimport { perpetualPoolLiteFactory } from '../factory.js';\r\n\r\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    return await perpetualPool.addLiquidity(accountAddress, amount)\r\n  }, args)\r\n}\r\n\r\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    return await perpetualPool.removeLiquidity(accountAddress, amount, isMaximum)\r\n  }, args)\r\n}\r\n","import {\r\n  calculateEntryPrice ,\r\n  calculateFundingRate,\r\n  calculateLiquidationPrice,\r\n  processFundingRate,\r\n  calculateFundingFee,\r\n} from '../../v2/calculation';\r\nimport { getPoolConfig } from \"../../shared/config\"\r\nimport { bTokenFactory } from \"../../shared/factory\"\r\nimport {  perpetualPoolLiteFactory, pTokenLiteFactory } from \"../factory.js\"\r\nimport {\r\n  bg,\r\n  catchApiError,\r\n  getLatestBlockNumber,\r\n} from '../../shared/utils';\r\nimport { getOraclePriceFromCache } from '../../shared/utils/oracle'\r\nimport { fundingRateCache, priceCache } from '../../shared/api/api_globals';\r\nimport { getIndexInfo } from '../../shared/config/token';\r\n\r\nexport const getSpecification = async(chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\r\n    const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'v2_lite');\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    const [symbolInfo, parameterInfo] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n    ])\r\n    const { symbol, multiplier, feeRatio, fundingRateCoefficient } = symbolInfo;\r\n    const {\r\n      minPoolMarginRatio,\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n    } = parameterInfo;\r\n\r\n    return {\r\n      symbol,\r\n      bTokenSymbol,\r\n      multiplier: multiplier.toString(),\r\n      feeRatio: feeRatio.toString(),\r\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n      minLiquidationReward: minLiquidationReward.toString(),\r\n      maxLiquidationReward: maxLiquidationReward.toString(),\r\n      liquidationCutRatio: liquidationCutRatio.toString(),\r\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n      indexConstituents: getIndexInfo(symbol),\r\n    }\r\n  }, args, 'getSpecification', {\r\n    symbol: '',\r\n    bTokenSymbol: '',\r\n    multiplier: '',\r\n    feeRatio: '',\r\n    fundingRateCoefficient: '',\r\n    minPoolMarginRatio: '',\r\n    minInitialMarginRatio: '',\r\n    minMaintenanceMarginRatio: '',\r\n    minLiquidationReward: '',\r\n    maxLiquidationReward: '',\r\n    liquidationCutRatio: '',\r\n    protocolFeeCollectRatio: '',\r\n    indexConstituents: { url: '', tokens: [] },\r\n  })\r\n}\r\n\r\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\r\n    const { pToken: pTokenAddress, symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n    const [ parameterInfo, symbolInfo, liquidity, symbolIds, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\r\n    //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getLiquidity(),\r\n      pToken.getActiveSymbolIds(),\r\n      perpetualPool.getLastUpdateBlock(),\r\n      getLatestBlockNumber(chainId),\r\n      pToken.getPosition(accountAddress, symbolId),\r\n      pToken.getMargin(accountAddress),\r\n      getOraclePriceFromCache.get(chainId, symbol, 'v2_lite'),\r\n    ])\r\n    //console.log(latestBlockNumber, lastUpdatedBlockNumber)\r\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\r\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\r\n    const { minInitialMarginRatio, minMaintenanceMarginRatio } = parameterInfo\r\n\r\n    let promises = []\r\n    for (let i = 0; i<symbolIds.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIds[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    const symbolList = symbols.map((s) => s.symbol)\r\n\r\n    promises = []\r\n    for (let i=0; i< symbolIds.length; i++) {\r\n      promises.push(getOraclePriceFromCache.get(chainId, symbolList[i], 'v2_lite'))\r\n    }\r\n    const symbolPrices = await Promise.all(promises)\r\n    const priceIndex = symbolIds.indexOf(symbolId)\r\n    let price\r\n    if (priceIndex === '-1') {\r\n      price = '0'\r\n    } else {\r\n      price = symbolPrices[priceIndex]\r\n      priceCache.set(poolAddress, symbolId, price)\r\n    }\r\n\r\n    promises = []\r\n    for (let i = 0; i < symbolIds.length; i++) {\r\n      promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n    }\r\n    const positions = await Promise.all(promises)\r\n\r\n    const marginHeld = symbols.reduce((acc, s, index) => {\r\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\r\n    }, bg(0))\r\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(price).times(minInitialMarginRatio)\r\n\r\n    const unrealizedPnl = symbols.reduce((acc, s, index) => {\r\n      return acc.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n    }, bg(0))\r\n    const unrealizedPnlList = symbols.map((s, index) => {\r\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\r\n    }, bg(0))\r\n\r\n    const totalCost = positions.reduce((accum, p) => {\r\n      return accum.plus(bg(p.cost))\r\n    }, bg(0))\r\n    const dynamicCost = symbols.reduce((accum, s, index) => {\r\n      if (index !== parseInt(symbolId)) {\r\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\r\n      } else {\r\n        return accum\r\n      }\r\n    }, bg(0))\r\n\r\n    const fundingFee = calculateFundingFee(\r\n      tradersNetVolume,\r\n      latestPrice,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      liquidity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    );\r\n\r\n    return {\r\n      price,\r\n      volume: volume.toString(),\r\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: marginHeld.toString(),\r\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n      unrealizedPnl: unrealizedPnl.toString(),\r\n      unrealizedPnlList,\r\n      fundingFee: fundingFee.toString(),\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio,\r\n      ).toString(),\r\n    }\r\n  }, args, 'getPositionInfo', {\r\n      price: '',\r\n      volume: '',\r\n      averageEntryPrice: '',\r\n      margin: '',\r\n      marginHeld: '',\r\n      marginHeldBySymbol: '',\r\n      unrealizedPnl: '',\r\n      unrealizedPnlList: [],\r\n      fundingFee: '',\r\n      liquidationPrice: '',\r\n  })\r\n}\r\n\r\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', null, 'v2_lite')\r\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\r\n    return balance.toString()\r\n  }, args, 'getWalletBalance', '')\r\n}\r\n\r\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', null, 'v2_lite')\r\n    const bToken = bTokenFactory(chainId, bTokenAddress)\r\n    return await bToken.isUnlocked(accountAddress, poolAddress)\r\n  }, args, 'isUnlocked', '')\r\n}\r\n\r\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const { symbol, pToken: pTokenAddress } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite')\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n  const [liquidity, price, symbolInfo, parameterInfo, symbolIds] = await Promise.all([\r\n    perpetualPool.getLiquidity(),\r\n    getOraclePriceFromCache.get(chainId, symbol, 'v2_lite'),\r\n    perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n    pToken.getActiveSymbolIds(),\r\n  ])\r\n  priceCache.set(poolAddress, symbolId, price)\r\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo\r\n  const { minPoolMarginRatio } = parameterInfo\r\n  const fundingRateArgs = [\r\n    tradersNetVolume,\r\n    price,\r\n    multiplier,\r\n    liquidity,\r\n    fundingRateCoefficient,\r\n  ]\r\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\r\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\r\n\r\n  let promises = []\r\n  for (let i = 0; i< symbolIds.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIds[i]))\r\n  }\r\n  const symbols = await Promise.all(promises)\r\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\r\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\r\n  }, bg(0))\r\n\r\n  const res = {\r\n    price,\r\n    multiplier: multiplier.toString(),\r\n    feeRatio: feeRatio.toString(),\r\n    tradersNetVolume: tradersNetVolume.toString(),\r\n    liquidity: liquidity.toString(),\r\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n    fundingRatePerBlock: fundingRatePerBlock,\r\n    fundingRate: fundingRate,\r\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\r\n  }\r\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\r\n  return res\r\n}\r\n\r\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\r\n  const args = [chainId, poolAddress, volume, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\r\n    let price = priceCache.get(poolAddress, symbolId)\r\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\r\n    //console.log('symbol',symbol)\r\n    if (!price) {\r\n      price = await getOraclePriceFromCache.get(chainId, symbol, 'v2_lite')\r\n      priceCache.set(poolAddress, symbolId, price)\r\n    }\r\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!cache || !cache.multiplier) {\r\n      await _getFundingRate(chainId, poolAddress, symbolId)\r\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    }\r\n    const { multiplier, feeRatio } = cache;\r\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\r\n  }, args, 'getFundingFee', '')\r\n}\r\nexport const getEstimatedMargin = async(\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId,\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, volume, leverage, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\r\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\r\n    //console.log('symbol',symbol)\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    const [price, symbolInfo] = await Promise.all([\r\n      getOraclePriceFromCache.get(chainId, symbol, 'v2_lite'),\r\n      perpetualPool.getSymbol(symbolId),\r\n    ])\r\n    priceCache.set(poolAddress, symbolId, price)\r\n    const { multiplier } = symbolInfo\r\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\r\n  }, args, 'getEstimatedMargin', '')\r\n}\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\r\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\r\n}\r\n\r\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\r\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    const {fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume} = res\r\n    return {\r\n      fundingRate0: fundingRate.times(100).toString(),\r\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\r\n      liquidity: liquidity.toString(),\r\n      volume: '-',\r\n      tradersNetVolume: tradersNetVolume.toString()\r\n    }\r\n  }, args, 'getFundingRate', {\r\n    fundingRate0: '',\r\n    fundingRatePerBlock: '',\r\n    liquidity: '',\r\n    volume: '',\r\n    tradersNetVolume: '',\r\n  })\r\n}\r\n\r\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newNetVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      const args = [\r\n        bg(res.tradersNetVolume).plus(newNetVolume).toString(),\r\n        res.price,\r\n        res.multiplier,\r\n        res.liquidity,\r\n        res.fundingRateCoefficient,\r\n      ];\r\n      let fundingRate1 = calculateFundingRate(...args);\r\n      fundingRate1 = processFundingRate(chainId, fundingRate1);\r\n      return {\r\n        fundingRate1: fundingRate1.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedFundingRate',\r\n    ''\r\n  );\r\n}\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      return {\r\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getLiquidityUsed',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newNetVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\r\n  return catchApiError(\r\n    async () => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      const { pToken: pTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        symbolId,\r\n        'v2_lite'\r\n      );\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\r\n      const symbolIds = await pToken.getActiveSymbolIds();\r\n      let promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      }\r\n      const symbols = await Promise.all(promises);\r\n\r\n      let liquidityUsed0 = symbols.reduce((acc, s, index) => {\r\n        if (index === parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(s.price)\r\n              .times(s.multiplier)\r\n              .times(s.tradersNetVolume.plus(newNetVolume))\r\n              .abs()\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.price).times(s.multiplier).times(s.tradersNetVolume).abs()\r\n          );\r\n        }\r\n      }, bg(0));\r\n      const liquidityUsed1 = liquidityUsed0\r\n        .times(res.minPoolMarginRatio)\r\n        .div(res.liquidity);\r\n      return {\r\n        liquidityUsed1: liquidityUsed1.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedLiquidityUsed',\r\n    ''\r\n  );\r\n}\r\n","import { getPoolConfig } from '../../shared/config';\r\nimport { bTokenFactory } from '../../shared/factory';\r\nimport { catchTxApiError, bg } from '../../shared/utils';\r\nimport { isOrderValid } from '../../v2/calculation';\r\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from '../factory.js';\r\n\r\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\r\n    const { bToken: bTokenAddress } = getPoolConfig(\r\n      poolAddress,\r\n      '0',\r\n      null,\r\n      'v2_lite'\r\n    );\r\n    const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    return await bToken.unlock(accountAddress, poolAddress);\r\n  }, args);\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount) => {\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      return await perpetualPool.addMargin(accountAddress, amount);\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  isMaximum = false\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      return await perpetualPool.removeMargin(\r\n        accountAddress,\r\n        amount,\r\n        isMaximum\r\n      );\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\r\n      const { pToken: pTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        '0',\r\n        'v2_lite'\r\n      );\r\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      const [parameterInfo, liquidity, margin, symbolIds] = await Promise.all([\r\n        perpetualPool.getParameters(),\r\n        perpetualPool.getLiquidity(),\r\n        pToken.getMargin(accountAddress),\r\n        pToken.getActiveSymbolIds(),\r\n      ]);\r\n      const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n      let promises = [];\r\n\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      }\r\n      const symbols = await Promise.all(promises);\r\n\r\n      promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n      }\r\n      const positions = await Promise.all(promises);\r\n\r\n      let marginHeld = symbols.reduce((acc, s, index) => {\r\n        if (index === parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(s.price)\r\n              .times(s.multiplier)\r\n              .times(positions[index].volume.plus(newVolume))\r\n              .abs()\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\r\n          );\r\n        }\r\n      }, bg(0));\r\n      marginHeld = marginHeld.times(minInitialMarginRatio);\r\n\r\n      let liquidityUsed = symbols.reduce((acc, s, index) => {\r\n        if (index === parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .plus(newVolume)\r\n              .times(s.price)\r\n              .times(s.multiplier)\r\n              .abs()\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\r\n          );\r\n        }\r\n      }, bg(0));\r\n      liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n\r\n      const orderValidation = isOrderValid(\r\n        margin,\r\n        marginHeld,\r\n        liquidity,\r\n        liquidityUsed\r\n      );\r\n      if (orderValidation.success) {\r\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error(orderValidation.error);\r\n      }\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, symbolId) => {\r\n      const { pToken: pTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        '0',\r\n        'v2_lite'\r\n      );\r\n\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\r\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n      if (!volume.eq(0)) {\r\n        const newVolume = volume.negated();\r\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error('no position to close');\r\n      }\r\n    },\r\n    args\r\n  );\r\n};\r\n","import { deriToNatural, getBlockInfo, getPastEvents, getHttpBase, fetchJson } from '../../shared/utils';\r\nimport {\r\n  getPoolConfig,\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n} from '../../shared/config';\r\nimport { perpetualPoolLiteFactory } from '../factory';\r\nimport { calculateTxFee } from '../../v2/calculation/position';\r\n\r\nconst processTradeEvent = async (\r\n  chainId,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio,\r\n  bTokenSymbol,\r\n  symbols,\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const symbolId = info.symbolId\r\n  const symbol = symbols.find((s) => s.symbolId == info.symbolId)\r\n  const transactionFee = calculateTxFee(\r\n    tradeVolume,\r\n    price,\r\n    multiplier[parseInt(symbolId)],\r\n    feeRatio[parseInt(symbolId)]\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    baseToken: bTokenSymbol,\r\n    symbolId,\r\n    symbol: symbol && symbol.symbol,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: volume.toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  return res;\r\n};\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  //console.log('symbolIdList', symbolIdList);\r\n  const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'v2_lite')\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n  const toBlock = await getBlockInfo(chainId, 'latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  let promises= []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  let symbols = await Promise.all(promises)\r\n\r\n  const multiplier = symbols.map((i) => i.multiplier.toString());\r\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\r\n\r\n  const filters =  { account: accountAddress }\r\n  let events = await getPastEvents(chainId, perpetualPool.contract,\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await processTradeEvent(\r\n      chainId,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n      bTokenSymbol,\r\n      symbols,\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock, tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .filter((i) => i)\r\n        .map((i) => {\r\n          return {\r\n            direction: i.direction.trim(),\r\n            baseToken: i.baseToken.trim(),\r\n            symbolId: i.symbolId,\r\n            symbol: i.symbol,\r\n            price: deriToNatural(i.price).toString(),\r\n            notional: deriToNatural(i.notional).toString(),\r\n            volume: deriToNatural(i.volume).toString(),\r\n            transactionFee: deriToNatural(i.transactionFee).toString(),\r\n            transactionHash: i.transactionHash,\r\n            time: i.time.toString(),\r\n          };\r\n        });\r\n    }\r\n      //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      // console.log(tradeFromBlock, liquidateFromBlock)\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n\r\n      const {initialBlock} = getPoolConfig2(poolAddress)\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch(err) {\r\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\r\n  }\r\n  return []\r\n};\r\n","\r\n\r\nfunction getEverlastingTimePriceAndDelta(S, K, V, T) {\r\n    let u = Math.sqrt(8 / V / V / T + 1)\r\n    let timeValue, delta\r\n    if (S > K) {\r\n        timeValue = K * Math.pow(S/K, (1 - u) / 2) / u\r\n        delta = (1 - u) * timeValue / S / 2\r\n    } else if (S === K) {\r\n        timeValue = K / u\r\n        delta = 0\r\n    } else {\r\n        timeValue = K * Math.pow(S/K, (1 + u) / 2) / u\r\n        delta = (1 + u) * timeValue / S / 2\r\n    }\r\n    return [timeValue, delta]\r\n}\r\n\r\nfunction getDynamicInitialMarginRatio(spot, strike, isCall, initialMarginRatio, minInitialMarginRatio) {\r\n    if ((isCall && spot >= strike) || (!isCall && strike >= spot)) {\r\n        return initialMarginRatio\r\n    } else {\r\n        let otmRatio = (isCall ? strike - spot : spot - strike) / strike\r\n        return Math.max((1 - otmRatio * 3) * initialMarginRatio, minInitialMarginRatio)\r\n    }\r\n}\r\n\r\n// multiple position for same underlier, e.x. BTCUSD\r\nfunction canLiquidateWithPrice(pool, trader, symbols, positions, newUnderlierPrice) {\r\n    let newDynamicMargin = trader.dynamicMargin\r\n    let newInitialMargin = trader.initialMargin\r\n\r\n    for (let i = 0; i < symbols.length; i++) {\r\n        let symbol = symbols[i]\r\n        let position = positions[i]\r\n\r\n        let newIntrinsicValue = symbol.isCall ? Math.max(newUnderlierPrice - symbol.strikePrice, 0)\r\n                                              : Math.max(symbol.strikePrice - newUnderlierPrice, 0)\r\n        let [newTimeValue, newDelta] = getEverlastingTimePriceAndDelta(\r\n            newUnderlierPrice, symbol.strikePrice, symbol.volatility, pool.premiumFundingPeriod\r\n        )\r\n        if (newIntrinsicValue > 0) {\r\n            newDelta += symbol.isCall ? 1 : -1\r\n        }\r\n        let newPnl = position.volume * (newIntrinsicValue + newTimeValue) * symbol.multiplier - position.cost\r\n        let newDynamicMarginRatio = getDynamicInitialMarginRatio(newUnderlierPrice, symbol.strikePrice, symbol.isCall, pool.initialMarginRatio, 0.01)\r\n\r\n        newDynamicMargin = newDynamicMargin - position.pnl + newPnl\r\n        newInitialMargin = newInitialMargin - Math.abs(position.volume * symbol.spotPrice * symbol.multiplier * symbol.dynamicMarginRatio)\r\n                                            + Math.abs(position.volume * newUnderlierPrice * symbol.multiplier * newDynamicMarginRatio)\r\n    }\r\n\r\n    let newMaintenanceMargin = newInitialMargin * pool.maintenanceMarginRatio / pool.initialMarginRatio\r\n\r\n    return newMaintenanceMargin > newDynamicMargin\r\n}\r\n\r\nexport function findLiquidationPrice(pool, trader, symbols, positions) {\r\n    if (symbols.length != positions.length) {\r\n        throw 'canLiquidateWithPrice: symbols and positions length not match'\r\n    }\r\n    if (symbols.length === 0) {\r\n        return {\r\n            numPositions: positions.length,\r\n            price1: null,\r\n            price2: null,\r\n        }\r\n    }\r\n    let head = symbols[0].symbol.slice(0, 6)\r\n    for (let i = 0; i < symbols.length; i++) {\r\n        if (!symbols[i].symbol.startsWith(head)) {\r\n            throw 'canLiquidateWithPrice: symbols not in same underlier'\r\n        }\r\n    }\r\n\r\n    if (trader.maintenanceMargin > trader.dynamicMargin) {\r\n        return {\r\n          numPositions: positions.length,\r\n          price1: symbols[0].spotPrice,\r\n          price2: symbols[0].spotPrice\r\n        }\r\n    }\r\n\r\n    let final1, final2\r\n    let price1, price2\r\n    let l1, l2\r\n\r\n\r\n    price1 = symbols[0].spotPrice / 10\r\n    price2 = symbols[0].spotPrice\r\n    l1 = canLiquidateWithPrice(pool, trader, symbols, positions, price1)\r\n    l2 = false\r\n    while (true) {\r\n        if (l1 && l2) {\r\n            final1 = (price1 + price2) / 2\r\n            break\r\n        }\r\n        if (!l1 && !l2) {\r\n            final1 = null\r\n            break\r\n        }\r\n        if (price2 - price1 < symbols[0].spotPrice / 1000) {\r\n            final1 = (price1 + price2) / 2\r\n            break\r\n        }\r\n        let price = (price1 + price2) / 2\r\n        let l = canLiquidateWithPrice(pool, trader, symbols, positions, price)\r\n        if (l === l1) price1 = price\r\n        else price2 = price\r\n    }\r\n\r\n    price1 = symbols[0].spotPrice\r\n    price2 = symbols[0].spotPrice * 10\r\n    l1 = false\r\n    l2 = canLiquidateWithPrice(pool, trader, symbols, positions, price2)\r\n    while (true) {\r\n        if (l1 && l2) {\r\n            final2 = (price1 + price2) / 2\r\n            break\r\n        }\r\n        if (!l1 && !l2) {\r\n            final2 = null\r\n            break\r\n        }\r\n        if (price2 - price1 < symbols[0].spotPrice / 1000) {\r\n            final2 = (price1 + price2) / 2\r\n            break\r\n        }\r\n        let price = (price1 + price2) / 2\r\n        let l = canLiquidateWithPrice(pool, trader, symbols, positions, price)\r\n        if (l === l1) price1 = price\r\n        else price2 = price\r\n    }\r\n\r\n    return {\r\n        numPositions: positions.length,\r\n        price1: final1,\r\n        price2: final2\r\n    }\r\n}\r\n\r\n","import { bg, max, normalizeOptionSymbol, toNumberForObject } from \"../../shared\"\r\nimport { findLiquidationPrice } from './findLiquidationPrice2';\r\n\r\nexport const dynamicInitialMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\r\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\r\n    return initialMarginRatio\r\n  } else {\r\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\r\n    return max((bg(1).minus(otmRatio.times(3))).times(initialMarginRatio), bg(0.01))\r\n  }\r\n}\r\n\r\nexport const dynamicInitialPoolMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\r\n  // for pool\r\n  const initialPoolMarginRatio = bg(initialMarginRatio).times(10)\r\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\r\n    return initialMarginRatio\r\n  } else {\r\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\r\n    return max((bg(1).minus(otmRatio.times(3))).times(initialPoolMarginRatio), bg(0.01).times(10))\r\n  }\r\n}\r\n\r\nexport const getDeltaFundingPerSecond = (symbol, delta, price, totalDynamicEquity, newNetVolume)  => {\r\n  return bg(totalDynamicEquity).eq(0)\r\n    ? bg(0)\r\n    : bg(delta)\r\n        .times(bg(symbol.tradersNetVolume).plus(newNetVolume))\r\n        .times(price)\r\n        .times(price)\r\n        .times(symbol.multiplier)\r\n        .times(symbol.multiplier)\r\n        .times(symbol.deltaFundingCoefficient)\r\n        .div(totalDynamicEquity);\r\n} \r\nexport const getpremiumFunding = (symbol, premiumFundingCoefficient, totalDynamicEquity)  => {\r\n  return bg(totalDynamicEquity).eq(0)\r\n    ? bg(0)\r\n    : bg(symbol.timeValue)\r\n        .times(symbol.multiplier)\r\n        .times(premiumFundingCoefficient)\r\n        .div(totalDynamicEquity);\r\n} \r\n\r\nexport const getIntrinsicPrice = (price, strikePrice, isCall) => {\r\n  return isCall\r\n    ? max(bg(price).minus(strikePrice), bg(0))\r\n    : max(bg(strikePrice).minus(price), bg(0));\r\n};\r\n\r\n\r\nexport const getMarginHeldBySymbol = (\r\n  volume,\r\n  price,\r\n  symbol,\r\n  initialMarginRatio\r\n) => {\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(symbol.multiplier)\r\n    .times(\r\n      dynamicInitialMarginRatio(\r\n        price,\r\n        symbol.strikePrice,\r\n        symbol.isCall,\r\n        initialMarginRatio\r\n      )\r\n    );\r\n};\r\n\r\nexport const getAverageEntryPrice = (position, symbol) => {\r\n  return bg(position.volume).eq(0)\r\n    ? '0'\r\n    : bg(position.cost).div(position.volume).div(symbol.multiplier).toString();\r\n};\r\n\r\nexport const getLiquidationPrice = (state, symbolId)  => {\r\n  const { poolState, symbolState, traderState, positionState } = state;\r\n  const normalizedSymbol = normalizeOptionSymbol(symbolState[symbolId].symbol)\r\n  let res = findLiquidationPrice(\r\n    toNumberForObject(poolState, [\r\n      'initialMarginRatio',\r\n      'maintenanceMarginRatio',\r\n      'premiumFundingPeriod',\r\n      'premiumFundingCoefficient',\r\n      'liquidity',\r\n      'totalDynamicEquity',\r\n      'totalInitialMargin',\r\n    ]),\r\n    toNumberForObject(traderState, [\r\n      'margin',\r\n      'totalPnl',\r\n      'totalFundingAccrued',\r\n      'dynamicMargin',\r\n      'initialMargin',\r\n      'maintenanceMargin',\r\n    ]),\r\n    symbolState\r\n      .filter((s, index) => positionState[index].volume !== '0')\r\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\r\n      .map((s) =>\r\n        toNumberForObject(s, [\r\n          'multiplier',\r\n          'strikePrice',\r\n          'spotPrice',\r\n          'dpmmPrice',\r\n          'underlierVolatility',\r\n          'timePrice',\r\n          'dynamicMarginRatio',\r\n          'intrinsicValue',\r\n          'timeValue',\r\n          'delta',\r\n          'K',\r\n          'tradersNetVolume',\r\n          'tradersNetCost',\r\n          'cumulativePremiumFundingRate',\r\n          'premiumFundingPerSecond',\r\n        ])\r\n      ),\r\n    symbolState\r\n      .filter((s, index) => positionState[index].volume !== '0')\r\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\r\n      .map((s) =>\r\n        toNumberForObject(positionState[s.symbolId], [\r\n          'volume',\r\n          'cost',\r\n          'lastCumulativePremiumFundingRate',\r\n          'pnl',\r\n          'premiumFundingAccrued',\r\n        ])\r\n      )\r\n  );\r\n  res.underlier = normalizedSymbol\r\n  return res\r\n}\r\n\r\nexport const getLiquidationPrices = (state) => {\r\n  const { poolState, symbolState, traderState, positionState } = state;\r\n  const symbols = symbolState.filter((s, index) => positionState[index].volume !== '0').map((s) => s.symbol);\r\n  const oracleSymbols = symbols\r\n    .map((i) => normalizeOptionSymbol(i))\r\n    .filter((value, index, self) => self.indexOf(value) === index);\r\n\r\n  const liquidationPrices = oracleSymbols.map((oSymbol) => {\r\n    let res = findLiquidationPrice(\r\n      toNumberForObject(poolState, [\r\n        'initialMarginRatio',\r\n        'maintenanceMarginRatio',\r\n        'premiumFundingPeriod',\r\n        'premiumFundingCoefficient',\r\n        'liquidity',\r\n        'totalDynamicEquity',\r\n        'totalInitialMargin',\r\n      ]),\r\n      toNumberForObject(traderState, [\r\n        'margin',\r\n        'totalPnl',\r\n        'totalFundingAccrued',\r\n        'dynamicMargin',\r\n        'initialMargin',\r\n        'maintenanceMargin',\r\n      ]),\r\n      symbolState\r\n        .filter((s, index) => positionState[index].volume !== '0')\r\n        .filter((s) => s.symbol.startsWith(oSymbol))\r\n        .map((s) =>\r\n          toNumberForObject(s, [\r\n          'multiplier',\r\n          'strikePrice',\r\n          'spotPrice',\r\n          'dpmmPrice',\r\n          'underlierVolatility',\r\n          'timePrice',\r\n          'dynamicMarginRatio',\r\n          'intrinsicValue',\r\n          'timeValue',\r\n          'delta',\r\n          'K',\r\n          'tradersNetVolume',\r\n          'tradersNetCost',\r\n          'cumulativePremiumFundingRate',\r\n          'premiumFundingPerSecond',\r\n          ])\r\n        ),\r\n      symbolState\r\n        .filter((s, index) => positionState[index].volume !== '0')\r\n        .filter((s) => s.symbol.startsWith(oSymbol))\r\n        .map((s) =>\r\n          toNumberForObject(positionState[s.symbolId], [\r\n            'volume',\r\n            'cost',\r\n            'lastCumulativeDeltaFundingRate',\r\n            'lastCumulativePremiumFundingRate',\r\n            'pnl',\r\n            'deltaFundingAccrued',\r\n            'premiumFundingAccrued',\r\n          ])\r\n        )\r\n    );\r\n    return res;\r\n  });\r\n  return oracleSymbols.map((i, index) => { \r\n    liquidationPrices[index].underlier = i\r\n    return liquidationPrices[index]\r\n  })\r\n};","/* eslint-disable */\r\nexport const everlastingOptionAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[6]\", \"name\": \"parameters\", \"type\": \"uint256[6]\" }, { \"internalType\": \"address[6]\", \"name\": \"addresses\", \"type\": \"address[6]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption1.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"uint256\", \"name\": \"strikePrice\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricerAddress\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IEverlastingOption1.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption1.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption1.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption1.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption1.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\nexport const everlastingOptionViewerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"theoreticalPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetPosition\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" } ], \"name\": \"_calculateDpmmPrice\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spot\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strike\", \"type\": \"int256\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" } ], \"name\": \"_getDynamicInitialMarginRatio\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"_getTraderPortfolio\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"_initState\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolFundingRates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolPrices\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderFunding\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderMargins\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getPoolStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getPriceOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getTraderStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingPerSecond\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"premiumFundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getVolatilityOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\r\n\r\nexport const lTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\nexport const pTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate2\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"addSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getActiveSymbolIds\", \"outputs\": [ { \"internalType\": \"uint256[]\", \"name\": \"\", \"type\": \"uint256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getNumPositionHolders\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getTokenId\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"isActiveSymbolId\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\n/* eslint-enable */","import { factory } from '../../shared';\r\nimport { EverlastingOptionViewer } from '../contract/everlasting_option_viewer';\r\nimport { LTokenOption } from '../contract/l_token_option';\r\nimport { PTokenOption } from '../contract/p_token_option';\r\n\r\nexport const everlastingOptionViewerFactory = factory(EverlastingOptionViewer);\r\nexport const lTokenOptionFactory = factory(LTokenOption);\r\nexport const pTokenOptionFactory = factory(PTokenOption);","import { ContractBase, deleteIndexedKey, fromWeiForObject } from '../../shared';\r\nimport { everlastingOptionViewerAbi } from './abis';\r\n\r\nexport class EverlastingOptionViewer extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, everlastingOptionViewerAbi);\r\n  }\r\n\r\n  // query\r\n  async _getTraderPortfolio(state, account) {\r\n    const res = await this._call('_getTraderPortfolio', [state, account]);\r\n    return res;\r\n  }\r\n  async _initState(poolAddress, oraclePrices) {\r\n    const res = await this._call('_initState', [poolAddress, oraclePrices]);\r\n    return res;\r\n  }\r\n  async _updateSymbolPrices(state) {\r\n    const res = await this._call('_updateSymbolPrices', [state]);\r\n    return res;\r\n  }\r\n  async getPoolStates(poolAddress, oraclePrices, oracleVolatilities) {\r\n    const res = await this._call('getPoolStates', [poolAddress, oraclePrices, oracleVolatilities]);\r\n    const symbolState = res[2].reduce((acc, i) => {\r\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\r\n        'multiplier',\r\n        'strikePrice',\r\n        'spotPrice',\r\n        'dpmmPrice',\r\n        'dynamicMarginRatio',\r\n        'intrinsicValue',\r\n        'timeValue',\r\n        'delta',\r\n        'alpha',\r\n        'K',\r\n        'tradersNetVolume',\r\n        'tradersNetCost',\r\n        'cumulativeDeltaFundingRate',\r\n        'cumulativePremiumFundingRate',\r\n        'deltaFundingPerSecond',\r\n        'premiumFundingPerSecond',\r\n        'volatility',\r\n      ]);\r\n      return acc.concat([symbol])\r\n    }, [])\r\n    return {\r\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\r\n        'initialMarginRatio',\r\n        'maintenanceMarginRatio',\r\n        'premiumFundingPeriod',\r\n        'premiumFundingCoefficient',\r\n        'liquidity',\r\n        'totalDynamicEquity',\r\n        'totalInitialMargin',\r\n      ]),\r\n      symbolState,\r\n    };\r\n  }\r\n  async getTraderStates(poolAddress, account, oraclePrices, oracleVolatilities) {\r\n    const res = await this._call('getTraderStates', [\r\n      poolAddress,\r\n      account,\r\n      oraclePrices,\r\n      oracleVolatilities,\r\n    ]);\r\n    const symbolState = res[2].reduce((acc, i) => {\r\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\r\n        'multiplier',\r\n        'strikePrice',\r\n        'spotPrice',\r\n        'dpmmPrice',\r\n        'dynamicMarginRatio',\r\n        'intrinsicValue',\r\n        'timeValue',\r\n        'delta',\r\n        'alpha',\r\n        'K',\r\n        'tradersNetVolume',\r\n        'tradersNetCost',\r\n        'cumulativeDeltaFundingRate',\r\n        'cumulativePremiumFundingRate',\r\n        'deltaFundingPerSecond',\r\n        'premiumFundingPerSecond',\r\n        'volatility',\r\n      ]);\r\n      return acc.concat([symbol])\r\n    }, [])\r\n    const positionState = res[3].reduce((acc, i) => {\r\n      const position = fromWeiForObject(deleteIndexedKey(i), [\r\n        'volume',\r\n        'cost',\r\n        'pnl',\r\n        'lastCumulativeDeltaFundingRate',\r\n        'lastCumulativePremiumFundingRate',\r\n        'deltaFundingAccrued',\r\n        'premiumFundingAccrued',\r\n      ])\r\n      return acc.concat([position])\r\n    }, [])\r\n    return {\r\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\r\n        'initialMarginRatio',\r\n        'maintenanceMarginRatio',\r\n        'premiumFundingPeriod',\r\n        'premiumFundingCoefficient',\r\n        'liquidity',\r\n        'totalDynamicEquity',\r\n        'totalInitialMargin',\r\n      ]),\r\n      traderState: fromWeiForObject(deleteIndexedKey(res[1]), [\r\n        'margin',\r\n        'totalPnl',\r\n        'totalFundingAccrued',\r\n        'dynamicMargin',\r\n        'initialMargin',\r\n        'maintenanceMargin',\r\n      ]),\r\n      symbolState: symbolState,\r\n      positionState: positionState,\r\n    };\r\n  }\r\n  async getVolatilityOracles(poolAddress) {\r\n    const res = await this._call('getVolatilityOracles', [poolAddress]);\r\n    return res;\r\n  }\r\n  async getPriceOracles(poolAddress) {\r\n    const res = await this._call('getPriceOracles', [poolAddress]);\r\n    return res;\r\n  }\r\n\r\n  // tx\r\n}\r\n","import { ContractBase, fromWei } from '../../shared'\r\nimport { lTokenOptionAbi } from './abis.js'\r\n\r\nexport class LTokenOption extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, lTokenOptionAbi)\r\n  }\r\n\r\n  // query\r\n  // async allowance(owner, spender) {\r\n  //   const res = await this._call('allowance', [owner, spender])\r\n  //   return res\r\n  // }\r\n  async balanceOf(account) {\r\n    const res = await this._call('balanceOf', [account])\r\n    return fromWei(res)\r\n  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return res\r\n  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return res\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return res\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return fromWei(res)\r\n  }\r\n\r\n  // tx\r\n  // async approve(accountAddress, spender, amount) {\r\n  //   return await this._transact('approve', [spender, amount], accountAddress)\r\n  // }\r\n  // async transfer(accountAddress, to, amount) {\r\n  //   return await this._transact('transfer', [to, amount], accountAddress)\r\n  // }\r\n  // async transferFrom(accountAddress, from, to, amount) {\r\n  //   return await this._transact('transferFrom', [from, to, amount], accountAddress)\r\n  // }\r\n\r\n}","import { ContractBase, fromWei } from '../../shared'\r\nimport { pTokenOptionAbi } from './abis.js'\r\n\r\nexport class PTokenOption extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenOptionAbi)\r\n  }\r\n\r\n  // query\r\n  async balanceOf(owner) {\r\n    const res = await this._call('balanceOf', [owner])\r\n    return res\r\n  }\r\n  async exists(owner) {\r\n    const res = await this._call('exists', [owner])\r\n    return res\r\n  }\r\n  async getActiveSymbolIds() {\r\n    const res = await this._call('getActiveSymbolIds', [])\r\n    return res\r\n  }\r\n  async getApproved(tokenId) {\r\n    const res = await this._call('getApproved', [tokenId])\r\n    return res\r\n  }\r\n  async getMargin(owner) {\r\n    const res = await this._call('getMargin', [owner])\r\n    return fromWei(res)\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    const res = await this._call('getNumPositionHolders', [symbolId])\r\n    return res\r\n  }\r\n  async getPosition(owner, symbolId) {\r\n    const res = await this._call('getPosition', [owner, symbolId])\r\n    return {\r\n      volume: fromWei(res[0]),\r\n      cost: fromWei(res[1]),\r\n      lastCumulativePremiumFundingRate: fromWei(res[2]),\r\n    };\r\n }\r\n  async getTokenId(owner) {\r\n    const res = await this._call('getTokenId', [owner])\r\n    return res\r\n  }\r\n  async isActiveSymbolId(symbolId) {\r\n    const res = await this._call('isActiveSymbolId', [symbolId])\r\n    return res\r\n  }\r\n  async isApprovedForAll(owner, operator) {\r\n    const res = await this._call('isApprovedForAll', [owner, operator])\r\n    return res\r\n  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return res\r\n  }\r\n  async ownerOf(tokenId) {\r\n    const res = await this._call('ownerOf', [tokenId])\r\n    return res\r\n  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return res\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return res\r\n  }\r\n  async totalMinted() {\r\n    const res = await this._call('totalMinted', [])\r\n    return res\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return res\r\n  }\r\n\r\n  // tx\r\n  async addMargin(accountAddress, owner, delta) {\r\n    return await this._transact('addMargin', [owner, delta], accountAddress)\r\n  }\r\n  async updateMargin(accountAddress, owner, margin) {\r\n    return await this._transact('updateMargin', [owner, margin], accountAddress)\r\n  }\r\n  async updatePosition(accountAddress, owner, symbolId, position) {\r\n    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\r\n  }\r\n\r\n  // async approve(accountAddress, operator, tokenId) {\r\n  //   return await this._transact('approve', [operator, tokenId], accountAddress)\r\n  // }\r\n  // async safeTransferFrom(accountAddress, from, to, tokenId) {\r\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\r\n  // }\r\n  // async safeTransferFrom(accountAddress, from, to, tokenId, data) {\r\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\r\n  // }\r\n  // async setApprovalForAll(accountAddress, operator, approved) {\r\n  //   return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\r\n  // }\r\n  // async toggleCloseOnly(accountAddress, symbolId) {\r\n  //   return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\r\n  // }\r\n  // async transferFrom(accountAddress, from, to, tokenId) {\r\n  //   return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\r\n  // }\r\n}","import { getOracleVolatilitiesForOption } from \"../shared/utils/oracle\"\r\n\r\nexport const volatilitiesCache = (function() {\r\n  const cache = {}\r\n  return {\r\n    async get(poolAddress, symbols){\r\n      const key = poolAddress\r\n      if (!Object.keys(cache).includes(key) || Math.floor(Date.now()/1000) - cache[key].timestamp > 5) {\r\n        const timestamp = Math.floor(Date.now()/1000)\r\n        const data = await getOracleVolatilitiesForOption(symbols)\r\n        cache[key] = {\r\n          data,\r\n          timestamp,\r\n        }\r\n        return cache[key].data\r\n      } else {\r\n        return cache[key].data\r\n      }\r\n    }\r\n  }\r\n})()\r\n","import { factory } from '../../shared';\r\nimport { EverlastingOption } from '../contract/everlasting_option';\r\n\r\nexport const everlastingOptionFactory = factory(EverlastingOption);","import {\r\n  ContractBase,\r\n  deleteIndexedKey,\r\n  fromWeiForObject,\r\n  fromWei,\r\n  naturalToDeri,\r\n  getPoolConfig,\r\n  getPoolViewerConfig,\r\n  isEqualSet,\r\n} from '../../shared';\r\nimport { getVolatilitySymbols } from '../../shared/config/token';\r\nimport {\r\n  getOracleVolatilityForOption,\r\n} from '../../shared/utils/oracle';\r\nimport {\r\n  everlastingOptionViewerFactory,\r\n  pTokenOptionFactory,\r\n} from '../factory/tokens';\r\nimport { volatilitiesCache } from '../utils';\r\nimport { everlastingOptionAbi } from './abis.js';\r\n\r\nexport class EverlastingOption extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, everlastingOptionAbi);\r\n\r\n    this.config = getPoolConfig(\r\n      contractAddress,\r\n      undefined,\r\n      undefined,\r\n      'option'\r\n    );\r\n    // this.offchainSymbolIds = this.config.offchainSymbolIds;\r\n    // this.offchainSymbols = this.config.offchainSymbols;\r\n    this.volatilitySymbols = this.config.volatilitySymbols;\r\n    this.bTokenAddress = this.config.bToken;\r\n    this.lTokenAddress = this.config.lToken;\r\n    this.pTokenAddress = this.config.pToken;\r\n    this.viewerAddress = getPoolViewerConfig(this.chainId, 'option');\r\n  }\r\n  async _updateConfig() {\r\n    if (!this.pToken) {\r\n      this.pToken = pTokenOptionFactory(this.chainId, this.pTokenAddress);\r\n    }\r\n    if (!this.viewer) {\r\n      this.viewer = everlastingOptionViewerFactory(\r\n        this.chainId,\r\n        this.viewerAddress\r\n      );\r\n    }\r\n\r\n    const activeSymbolIds = await this.pToken.getActiveSymbolIds();\r\n    if (\r\n      !this.activeSymbolIds ||\r\n      !isEqualSet(new Set(this.activeSymbolIds), new Set(activeSymbolIds))\r\n    ) {\r\n      // symbol is updated\r\n      const activeSymbols = await Promise.all(\r\n      activeSymbolIds.reduce(\r\n          (acc, i) => acc.concat([this.getSymbol(i)]),\r\n          []\r\n        )\r\n      );\r\n      const symbolVolatilities = await volatilitiesCache.get(\r\n        this.contractAddress,\r\n        activeSymbols.map((s) => s.symbol)\r\n      );\r\n      //console.log(symbolVolatilities)\r\n      const state = await this.viewer.getPoolStates(\r\n        this.contractAddress,\r\n        [],\r\n        symbolVolatilities\r\n      );\r\n      const { symbolState } = state;\r\n\r\n      // update state\r\n      this.activeSymbolIds = activeSymbolIds;\r\n      this.activeSymbols = symbolState.filter((s) =>\r\n        this.activeSymbolIds.includes(s.symbolId)\r\n      );\r\n      // for tx use\r\n      this.volatilitySymbols = getVolatilitySymbols(\r\n        this.activeSymbols.map((s) => s.symbol)\r\n      );\r\n    }\r\n  }\r\n\r\n  // query\r\n  // async OptionPricer() {\r\n  //   const res = await this._call('OptionPricer', []);\r\n  //   return res;\r\n  // }\r\n  // async PmmPricer() {\r\n  //   const res = await this._call('PmmPricer', []);\r\n  //   return res;\r\n  // }\r\n  // async _T() {\r\n  //   const res = await this._call('_T', []);\r\n  //   return fromWei(res);\r\n  // }\r\n  async getAddresses() {\r\n    const res = await this._call('getAddresses', []);\r\n    return deleteIndexedKey(res);\r\n  }\r\n  async getLastTimestamp() {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    return res[1]\r\n  }\r\n  async getLiquidity() {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    return fromWei(res[0])\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters', []);\r\n    return fromWeiForObject(deleteIndexedKey(res), [\r\n      'initialMarginRatio',\r\n      'liquidationCutRatio',\r\n      'maintenanceMarginRatio',\r\n      'maxLiquidationReward',\r\n      'minLiquidationReward',\r\n      'minPoolMarginRatio',\r\n      'protocolFeeCollectRatio',\r\n    ]);\r\n  }\r\n  // async getProtocolFeeAccrued() {\r\n  //   const res = await this._call('getPoolStateValues', []);\r\n  //   return fromWei(res[2])\r\n  // }\r\n\r\n  async getSymbol(symbolId) {\r\n    const res = await this._call('getSymbol', [symbolId]);\r\n    return fromWeiForObject(deleteIndexedKey(res), [\r\n      'strikePrice',\r\n      'multiplier',\r\n      'feeRatio',\r\n      'alpha',\r\n      'tradersNetVolume',\r\n      'tradersNetCost',\r\n      'cumulativePremiumFundingRate',\r\n    ]);\r\n    // return {\r\n    //   symbolId: res[0],\r\n    //   symbol: res[1],\r\n    //   oracleAddress: res[2],\r\n    //   volatilityAddress: res[3],\r\n    //   isCall: res[4],\r\n    //   strikePrice: fromWei(res[5]),\r\n    //   multiplier: fromWei(res[6]),\r\n    //   feeRatio: fromWei(res[7]),\r\n    //   alpha: fromWei(res[8]),\r\n    //   tradersNetVolume: fromWei(res[9]),\r\n    //   tradersNetCost: fromWei(res[10]),\r\n    //   cumulativePremiumFundingRate: fromWei(res[11]),\r\n    // };\r\n  }\r\n\r\n  // tx\r\n  async _getVolSymbolPrices() {\r\n    await this._updateConfig();\r\n    let volatilities = [];\r\n    if (this.volatilitySymbols.length > 0) {\r\n      const volatilityInfos = await getOracleVolatilityForOption(this.activeSymbols.map((s) => s.symbol))\r\n      volatilities = Object.values(volatilityInfos).reduce((acc, p, index) => {\r\n        acc.push([\r\n          this.activeSymbolIds[index],\r\n          p.timestamp,\r\n          p.volatility,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ]);\r\n        return acc;\r\n      }, []);\r\n    }\r\n    //console.log('prices', prices);\r\n    return volatilities;\r\n  }\r\n\r\n  async addLiquidity(accountAddress, bAmount) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [naturalToDeri(bAmount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidity(accountAddress, lShares) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    return await this._transact(\r\n      'removeLiquidity',\r\n      [naturalToDeri(lShares), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async addMargin(accountAddress, bAmount) {\r\n    return await this._transact(\r\n      'addMargin',\r\n      [naturalToDeri(bAmount)],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeMargin(accountAddress, bAmount) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    return await this._transact(\r\n      'removeMargin',\r\n      [naturalToDeri(bAmount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async trade(accountAddress, symbolId, tradeVolume) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(tradeVolume), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n}\r\n","import { getPoolConfig } from '../../shared/config';\r\nimport { catchApiError, bg } from '../../shared/utils';\r\nimport {\r\n  calculateMaxRemovableShares,\r\n  calculateShareValue,\r\n} from '../../v1/calculation';\r\nimport { everlastingOptionFactory } from '../factory/pool';\r\nimport {\r\n  lTokenOptionFactory,\r\n} from '../factory/tokens';\r\nimport { volatilitiesCache } from '../utils';\r\n\r\nconst _getLiquidityInfo = async (chainId, poolAddress, accountAddress) => {\r\n  const { lToken: lTokenAddress } = getPoolConfig(\r\n    poolAddress,\r\n    '0',\r\n    '0',\r\n    'option'\r\n  );\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  const lToken = lTokenOptionFactory(chainId, lTokenAddress);\r\n  const [\r\n    lTokenBalance,\r\n    lTokenTotalSupply,\r\n  ] = await Promise.all([\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n    optionPool._updateConfig(),\r\n  ]);\r\n\r\n  const symbols = optionPool.activeSymbols\r\n  const symbolVolatilities = await volatilitiesCache.get(poolAddress, symbols.map((s) => s.symbol))\r\n  const state = await optionPool.viewer.getPoolStates(poolAddress, [], symbolVolatilities)\r\n  const { poolState } = state;\r\n  const { initialMarginRatio, liquidity, totalDynamicEquity } = poolState;\r\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0));\r\n  const value = symbols.reduce(\r\n    (acc, s) =>\r\n      acc.plus(bg(s.tradersNetVolume).times(s.strikePrice).times(s.multiplier)),\r\n    bg(0)\r\n  );\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: calculateShareValue(\r\n      lTokenTotalSupply,\r\n      totalDynamicEquity\r\n    ).toString(),\r\n    maxRemovableShares: calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      value,\r\n      cost,\r\n      bg(initialMarginRatio).times(10)\r\n    ).toString(),\r\n  };\r\n};\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  return catchApiError(\r\n    _getLiquidityInfo,\r\n    [chainId, poolAddress, accountAddress],\r\n    'getLiquidityInfo',\r\n    {\r\n      totalSupply: '',\r\n      poolLiquidity: '',\r\n      shares: '',\r\n      shareValue: '',\r\n      maxRemovableShares: '',\r\n    }\r\n  );\r\n};\r\n","import { catchTxApiError } from '../../shared/utils';\r\nimport { everlastingOptionFactory } from '../factory/pool.js';\r\n\r\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\r\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\r\n    return await optionPool.addLiquidity(accountAddress, amount)\r\n  }, args)\r\n}\r\n\r\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\r\n    return await optionPool.removeLiquidity(accountAddress, amount, isMaximum)\r\n  }, args)\r\n}\r\n","import {\r\n  bg,\r\n  bTokenFactory,\r\n  catchApiError,\r\n  deriToNatural,\r\n  getPoolConfig,\r\n} from '../../shared';\r\nimport { fundingRateCache } from '../../shared/api/api_globals';\r\nimport { normalizeOptionSymbol } from '../../shared/config/token';\r\nimport { wrappedOracleFactory } from '../../shared/factory/oracle';\r\nimport {\r\n  getOraclePricesForOption,\r\n  getPriceFromRest,\r\n  getOracleVolatilitiesForOption,\r\n} from '../../shared/utils/oracle';\r\nimport { queryTradePMM } from '../calculation/PMM2';\r\nimport {\r\n  dynamicInitialMarginRatio,\r\n  dynamicInitialPoolMarginRatio,\r\n  getAverageEntryPrice,\r\n  //getDeltaFundingPerSecond,\r\n  getIntrinsicPrice,\r\n  getLiquidationPrice,\r\n  getLiquidationPrices,\r\n  getMarginHeldBySymbol,\r\n} from '../calculation/trade';\r\nimport { everlastingOptionFactory } from '../factory/pool';\r\nimport { volatilitiesCache } from '../utils';\r\nimport { getIndexInfo } from '../../shared/config/token';\r\n\r\n//\r\nconst SECONDS_IN_A_DAY = 86400;\r\n\r\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'option');\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool._updateConfig();\r\n      const [symbolInfo2, poolInfo2] = await Promise.all([\r\n        optionPool.getSymbol(symbolId),\r\n        optionPool.getParameters(),\r\n      ]);\r\n\r\n      const symbols = optionPool.activeSymbols;\r\n      const [symbolPrices, symbolVolatilities] = await Promise.all([\r\n        getOraclePricesForOption(\r\n          chainId,\r\n          symbols.map((s) => s.symbol)\r\n        ),\r\n        volatilitiesCache.get(\r\n          poolAddress,\r\n          symbols.map((s) => s.symbol)\r\n        ),\r\n      ]);\r\n      const state = await optionPool.viewer.getPoolStates(\r\n        poolAddress,\r\n        symbolPrices,\r\n        symbolVolatilities\r\n      );\r\n      const { symbolState } = state;\r\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\r\n      const symbolInfo = symbolState[symbolIndex];\r\n      const { dynamicMarginRatio, isCall } =\r\n        symbolInfo;\r\n      const { symbol, multiplier, feeRatio } = symbolInfo2;\r\n      const {\r\n        initialMarginRatio,\r\n        maintenanceMarginRatio,\r\n        minLiquidationReward,\r\n        maxLiquidationReward,\r\n        liquidationCutRatio,\r\n        protocolFeeCollectRatio,\r\n      } = poolInfo2;\r\n\r\n      return {\r\n        symbol,\r\n        bTokenSymbol,\r\n        multiplier: multiplier.toString(),\r\n        feeRatio: feeRatio.toString(),\r\n        //minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n        initialMarginRatioOrigin: initialMarginRatio.toString(),\r\n        initialMarginRatio: dynamicMarginRatio.toString(),\r\n        maintenanceMarginRatioOrigin: maintenanceMarginRatio.toString(),\r\n        maintenanceMarginRatio: bg(dynamicMarginRatio)\r\n          .times(maintenanceMarginRatio)\r\n          .div(initialMarginRatio)\r\n          .toString(),\r\n        minLiquidationReward: minLiquidationReward.toString(),\r\n        maxLiquidationReward: maxLiquidationReward.toString(),\r\n        liquidationCutRatio: liquidationCutRatio.toString(),\r\n        protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n        isCall: isCall,\r\n        indexConstituents: getIndexInfo(symbol),\r\n      };\r\n    },\r\n    args,\r\n    'getSpecification',\r\n    {\r\n      symbol: '',\r\n      bTokenSymbol: '',\r\n      multiplier: '',\r\n      feeRatio: '',\r\n      //minPoolMarginRatio: '',\r\n      initialMarginRatio: '',\r\n      maintenanceMarginRatio: '',\r\n      minLiquidationReward: '',\r\n      maxLiquidationReward: '',\r\n      liquidationCutRatio: '',\r\n      protocolFeeCollectRatio: '',\r\n      indexConstituents: { url: '', tokens: [] },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getPositionInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress, symbolId) => {\r\n      const { symbol: symbolStr } = getPoolConfig(\r\n        poolAddress,\r\n        undefined,\r\n        symbolId,\r\n        'option'\r\n      );\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool._updateConfig();\r\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\r\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\r\n      const symbols = optionPool.activeSymbols;\r\n      let symbolPrices = [],\r\n        symbolVolatilities = [],\r\n        volPrice;\r\n      if (symbols && symbols.length > 0) {\r\n        [symbolPrices, symbolVolatilities, volPrice] = await Promise.all([\r\n          getOraclePricesForOption(\r\n            chainId,\r\n            symbols.map((s) => s.symbol)\r\n          ),\r\n          volatilitiesCache.get(\r\n            poolAddress,\r\n            symbols.map((s) => s.symbol)\r\n          ),\r\n          getPriceFromRest(`VOL-${normalizeOptionSymbol(symbolStr)}`, 'option'),\r\n        ]);\r\n      }\r\n      const state = await optionPool.viewer.getTraderStates(\r\n        poolAddress,\r\n        accountAddress,\r\n        symbolPrices,\r\n        symbolVolatilities\r\n      );\r\n      const { poolState, symbolState, traderState, positionState } = state;\r\n      const { initialMarginRatio } = poolState;\r\n      const { margin, totalPnl, initialMargin } = traderState;\r\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\r\n      const symbol = symbolState[symbolIndex];\r\n      const position = positionState[symbolIndex];\r\n      const price = await wrappedOracleFactory(\r\n        chainId,\r\n        symbol.oracleAddress\r\n      ).getPrice();\r\n      return {\r\n        symbolId,\r\n        symbol: symbolStr,\r\n        price,\r\n        strikePrice: symbol.strikePrice.toString(),\r\n        timePrice: symbol.timeValue.toString(),\r\n        markPrice: symbol.dpmmPrice.toString(),\r\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\r\n        averageEntryPrice: getAverageEntryPrice(position, symbol),\r\n        margin: margin.toString(),\r\n        marginHeld: initialMargin.toString(),\r\n        marginHeldBySymbol: getMarginHeldBySymbol(\r\n          position.volume,\r\n          price,\r\n          symbol,\r\n          initialMarginRatio\r\n        ).toString(),\r\n        unrealizedPnl: totalPnl,\r\n        unrealizedPnlList: symbolState\r\n          .filter((s, index) => positionState[index].pnl !== '0')\r\n          .map((s) => [s.symbol, positionState[symbolState.findIndex((oS) => oS.symbolId === s.symbolId)].pnl]),\r\n        premiumFundingAccrued: positionState[symbolIndex].premiumFundingAccrued,\r\n        isCall: symbol.isCall,\r\n        volatility: bg(volPrice).times(100).toString(),\r\n        liquidationPrice: getLiquidationPrice(state, symbolId),\r\n      };\r\n    },\r\n    args,\r\n    'getPositionInfo',\r\n    {\r\n      price: '',\r\n      strikePrice: '',\r\n      timePrice: '',\r\n      volume: '',\r\n      averageEntryPrice: '',\r\n      margin: '',\r\n      marginHeld: '',\r\n      marginHeldBySymbol: '',\r\n      unrealizedPnl: '',\r\n      unrealizedPnlList: [],\r\n      premiumFundingAccrued: '',\r\n      liquidationPrice: '',\r\n      volatility: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getPositionInfos = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool._updateConfig();\r\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\r\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\r\n      const symbols = optionPool.activeSymbols;\r\n      const [symbolPrices, symbolVolatilities, volPrices] = await Promise.all([\r\n        getOraclePricesForOption(\r\n          chainId,\r\n          symbols.map((s) => s.symbol)\r\n        ),\r\n        volatilitiesCache.get(\r\n          poolAddress,\r\n          symbols.map((s) => s.symbol)\r\n        ),\r\n        getOracleVolatilitiesForOption(symbols.map((s) => s.symbol)),\r\n      ]);\r\n      const state = await optionPool.viewer.getTraderStates(\r\n        poolAddress,\r\n        accountAddress,\r\n        symbolPrices,\r\n        symbolVolatilities\r\n      );\r\n      const { poolState, traderState, positionState, symbolState } = state;\r\n      const { initialMarginRatio } = poolState;\r\n      const { margin, initialMargin } = traderState;\r\n      const prices = await Promise.all(\r\n        symbols.reduce(\r\n          (acc, s) =>\r\n            acc.concat([\r\n              wrappedOracleFactory(chainId, s.oracleAddress).getPrice(),\r\n            ]),\r\n          []\r\n        )\r\n      );\r\n\r\n      const liquidationPrices = getLiquidationPrices(state);\r\n      return symbols\r\n        .filter((s) => positionState[s.symbolId].volume !== '0')\r\n        .map((s) => {\r\n          const vIndex = symbolState.findIndex(\r\n            (oS) => oS.symbolId === s.symbolId\r\n          );\r\n          return {\r\n            symbolId: s.symbolId,\r\n            symbol: s.symbol,\r\n            price: prices[vIndex],\r\n            // strikePrice: s.strikePrice.toString(),\r\n            // timePrice: s.timeValue.toString(),\r\n            volume: bg(positionState[vIndex].volume)\r\n              .times(symbolState[vIndex].multiplier)\r\n              .toString(),\r\n            averageEntryPrice: getAverageEntryPrice(positionState[vIndex], s),\r\n            margin: margin.toString(),\r\n            marginHeld: initialMargin.toString(),\r\n            marginHeldBySymbol: getMarginHeldBySymbol(\r\n              positionState[vIndex].volume,\r\n              prices[vIndex],\r\n              s,\r\n              initialMarginRatio\r\n            ).toString(),\r\n            unrealizedPnl: positionState[vIndex].pnl,\r\n            premiumFundingAccrued: positionState[vIndex].premiumFundingAccrued,\r\n            isCall: s.isCall,\r\n            volatility: deriToNatural(volPrices[vIndex]).times(100).toString(),\r\n            liquidationPrice: liquidationPrices,\r\n          };\r\n        });\r\n    },\r\n    args,\r\n    'getPositionInfos',\r\n    []\r\n  );\r\n};\r\n\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      const { bToken: bTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        '0',\r\n        'option'\r\n      );\r\n      const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(\r\n        accountAddress\r\n      );\r\n      return balance.toString();\r\n    },\r\n    args,\r\n    'getWalletBalance',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      const { bToken: bTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        '0',\r\n        'option'\r\n      );\r\n      const bToken = bTokenFactory(chainId, bTokenAddress);\r\n      return await bToken.isUnlocked(accountAddress, poolAddress);\r\n    },\r\n    args,\r\n    'isUnlocked',\r\n    ''\r\n  );\r\n};\r\n\r\nconst _getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  //const { symbol } = getPoolConfig(poolAddress, undefined, symbolId, 'option')\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  await optionPool._updateConfig();\r\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\r\n  //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\r\n  const symbols = optionPool.activeSymbols;\r\n  const [symbolPrices, symbolVolatilities] = await Promise.all([\r\n    getOraclePricesForOption(\r\n      chainId,\r\n      symbols.map((s) => s.symbol)\r\n    ),\r\n    volatilitiesCache.get(\r\n      poolAddress,\r\n      symbols.map((s) => s.symbol)\r\n    ),\r\n  ]);\r\n  const state = await optionPool.viewer.getPoolStates(\r\n    poolAddress,\r\n    symbolPrices,\r\n    symbolVolatilities\r\n  );\r\n  const { poolState, symbolState } = state;\r\n  const { initialMarginRatio, totalDynamicEquity, liquidity } = poolState;\r\n  const curSymbolIndex = optionPool.activeSymbolIds.indexOf(symbolId);\r\n  if (curSymbolIndex < 0) {\r\n    throw new Error(\r\n      `getFundingRate(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n    );\r\n  }\r\n  const symbolInfo = symbolState[curSymbolIndex];\r\n\r\n  const prices = await Promise.all(\r\n    symbolState.reduce(\r\n      (acc, s) =>\r\n        acc.concat([wrappedOracleFactory(chainId, s.oracleAddress).getPrice()]),\r\n      []\r\n    )\r\n  );\r\n\r\n  const liquidityUsedInAmount = symbolState.reduce((acc, s, index) => {\r\n    return acc.plus(\r\n      bg(s.tradersNetVolume)\r\n        .times(prices[index])\r\n        .times(s.multiplier)\r\n        .abs()\r\n        .times(\r\n          dynamicInitialPoolMarginRatio(\r\n            prices[index],\r\n            s.strikePrice,\r\n            s.isCall,\r\n            initialMarginRatio\r\n          )\r\n        )\r\n    );\r\n  }, bg(0));\r\n\r\n  const res = {\r\n    initialMarginRatio,\r\n    symbolIds: optionPool.activeSymbolIds,\r\n    symbols: symbolState,\r\n    liquidity,\r\n    totalDynamicEquity,\r\n    prices,\r\n    liquidityUsed: liquidityUsedInAmount.div(liquidity),\r\n    premiumFunding: bg(symbolInfo.premiumFundingPerSecond)\r\n      .div(symbolInfo.multiplier)\r\n      .times(SECONDS_IN_A_DAY)\r\n      .toString(),\r\n    premiumFundingPerSecond: bg(symbolInfo.premiumFundingPerSecond).div(\r\n      symbolInfo.multiplier\r\n    ),\r\n  };\r\n  return res;\r\n};\r\n\r\nexport const getEstimatedFee = async (\r\n  chainId,\r\n  poolAddress,\r\n  volume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, volume, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, volume, symbolId) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      const symbolInfo = await optionPool.getSymbol(symbolId);\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      const { symbolIds, prices, symbols } = res;\r\n      const curSymbolIndex = symbolIds.indexOf(symbolId);\r\n      if (curSymbolIndex < 0) {\r\n        throw new Error(\r\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n        );\r\n      }\r\n      const symbol = symbols[curSymbolIndex];\r\n      const intrinsicPrice = getIntrinsicPrice(\r\n        prices[curSymbolIndex],\r\n        symbol.strikePrice,\r\n        symbol.isCall\r\n      );\r\n      //console.log(volume, prices[curSymbolIndex], symbol, intrinsicPrice.toString())\r\n      return bg(volume)\r\n        .abs()\r\n        .times(intrinsicPrice.plus(symbol.timeValue))\r\n        .times(symbol.multiplier)\r\n        .times(symbolInfo.feeRatio)\r\n        .toString();\r\n    },\r\n    args,\r\n    'getFundingFee',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId\r\n) => {\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\r\n  const [parameterInfo, symbol] = await Promise.all([\r\n    optionPool.getParameters(),\r\n    optionPool.getSymbol(symbolId),\r\n  ]);\r\n  const price = await wrappedOracleFactory(\r\n    chainId,\r\n    symbol.oracleAddress\r\n  ).getPrice();\r\n  const { initialMarginRatio } = parameterInfo;\r\n  const marginRatio = dynamicInitialMarginRatio(\r\n    price,\r\n    symbol.strikePrice,\r\n    symbol.isCall,\r\n    initialMarginRatio\r\n  );\r\n  //console.log(marginRatio, symbol.multiplier, price, volume)\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(symbol.multiplier)\r\n    .times(marginRatio);\r\n};\r\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\r\n  return fundingRateCache.get(chainId, poolAddress, symbolId);\r\n};\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      const res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      const curSymbolIndex = res.symbolIds.indexOf(symbolId);\r\n      if (curSymbolIndex < 0) {\r\n        throw new Error(\r\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n        );\r\n      }\r\n      return {\r\n        premiumFunding0: bg(res.premiumFunding).toString(),\r\n        premiumFundingPerSecond: res.premiumFundingPerSecond.toString(),\r\n        liquidity: res.liquidity.toString(),\r\n        volume: '-',\r\n        tradersNetVolume: res.symbols[curSymbolIndex].tradersNetVolume,\r\n      };\r\n    },\r\n    args,\r\n    'getFundingRate',\r\n    {\r\n      premiumFunding0: '',\r\n      premiumFundingPerSecond: '',\r\n      liquidity: '',\r\n      volume: '-',\r\n      tradersNetVolume: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\r\n  return catchApiError(\r\n    async () => {\r\n      // let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      // if (!res) {\r\n      //   res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      //   fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      // }\r\n      // const { symbolIds, symbols, prices, totalDynamicEquity } = res;\r\n      // const curSymbolIndex = symbolIds.indexOf(symbolId);\r\n      // if (curSymbolIndex < 0) {\r\n      //   throw new Error(\r\n      //     `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n      //   );\r\n      // }\r\n      // let symbol = symbols[curSymbolIndex];\r\n      // //console.log('symbol.tradersNetVolume0', symbol.tradersNetVolume)\r\n      // //symbol.tradersNetVolume = bg(symbol.tradersNetVolume).plus(newNetVolume).toString()\r\n      // //console.log('symbol.tradersNetVolume1', symbol.tradersNetVolume)\r\n      // const deltaFunding1 = getdeltaFundingPerSecond(\r\n      //   symbol,\r\n      //   symbol.delta,\r\n      //   prices[curSymbolIndex],\r\n      //   totalDynamicEquity,\r\n      //   newNetVolume\r\n      // );\r\n\r\n      return {\r\n        // deltaFunding1: bg(deltaFunding1)\r\n        //   .div(symbol.multiplier)\r\n        //   .times(SECONDS_IN_A_DAY)\r\n        //   .toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedFundingRate',\r\n    {\r\n    }\r\n  );\r\n};\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      }\r\n      return {\r\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getLiquidityUsed',\r\n    {\r\n      liquidityUsed0: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      }\r\n      const { symbolIds, symbols, prices, liquidity, initialMarginRatio } = res;\r\n\r\n      const liquidityUsedInAmount = symbols.reduce((acc, s, index) => {\r\n        if (symbolIds[index] == symbolId) {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .plus(newNetVolume)\r\n              .times(prices[index])\r\n              .times(s.multiplier)\r\n              .abs()\r\n              .times(\r\n                dynamicInitialPoolMarginRatio(\r\n                  prices[index],\r\n                  s.strikePrice,\r\n                  s.isCall,\r\n                  initialMarginRatio\r\n                )\r\n              )\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .times(prices[index])\r\n              .times(s.multiplier)\r\n              .abs()\r\n              .times(\r\n                dynamicInitialPoolMarginRatio(\r\n                  prices[index],\r\n                  s.strikePrice,\r\n                  s.isCall,\r\n                  initialMarginRatio\r\n                )\r\n              )\r\n          );\r\n        }\r\n      }, bg(0));\r\n      return {\r\n        liquidityUsed1: liquidityUsedInAmount\r\n          .div(liquidity)\r\n          .times(100)\r\n          .toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedLiquidityUsed',\r\n    {\r\n      liquidityUsed1: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getEstimatedTimePrice = (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool._updateConfig();\r\n      const symbolVolatilities = await volatilitiesCache.get(\r\n        poolAddress,\r\n        optionPool.activeSymbols.map((s) => s.symbol)\r\n      );\r\n      const state = await optionPool.viewer.getPoolStates(\r\n        poolAddress,\r\n        [],\r\n        symbolVolatilities\r\n      );\r\n      const { symbolState } = state;\r\n\r\n      //const { liquidity } = poolState;\r\n      const index = symbolState.findIndex((s) => s.symbolId === symbolId);\r\n      if (index > -1) {\r\n        const {\r\n          tradersNetVolume,\r\n          multiplier,\r\n          intrinsicValue,\r\n          timeValue,\r\n          K,\r\n        } = symbolState[index];\r\n        //console.log(tradersNetVolume, multiplier, liquidity, quoteBalanceOffset, timePrice, K)\r\n        const args = [\r\n          bg(tradersNetVolume).times(multiplier).toNumber(),\r\n          bg(intrinsicValue).plus(timeValue).toNumber(),\r\n          bg(K).toNumber(),\r\n          bg(newNetVolume).times(multiplier).toNumber(),\r\n        ]\r\n\r\n        const res = queryTradePMM(...args);\r\n        //console.log('res', res)\r\n        return bg(res).div(newNetVolume).div(multiplier).toString();\r\n      } else {\r\n        console.log(\r\n          `invalid symbolId(${symbolId}) for the pool(${poolAddress})`\r\n        );\r\n        return '';\r\n      }\r\n    },\r\n    args,\r\n    'getEstimatedMarkPrice',\r\n    ''\r\n  );\r\n};\r\n","/*\r\n    1. Calculate the cost for user input volume\r\n    2. Calculate the final price if user input volume is traded\r\n*/\r\n\r\nexport function getMidPrice(tradersNetVolume, theoreticalPrice, K) {\r\n    return theoreticalPrice * (1 + K * tradersNetVolume)\r\n}\r\n\r\nexport function queryTradePMM(tradersNetVolume, theoreticalPrice, K, volume) {\r\n    return theoreticalPrice * (volume + ((tradersNetVolume + volume) ** 2 - tradersNetVolume ** 2) * K / 2)\r\n}\r\n","import { getPoolConfig } from '../../shared/config';\r\nimport { bTokenFactory } from '../../shared/factory';\r\nimport { catchTxApiError, bg } from '../../shared/utils';\r\n//import { isOrderValid } from '../../v2/calculation';\r\nimport { everlastingOptionFactory } from '../factory/pool.js';\r\nimport { pTokenOptionFactory} from '../factory/tokens';\r\n\r\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\r\n    const { bToken: bTokenAddress } = getPoolConfig(\r\n      poolAddress,\r\n      '0',\r\n      '0',\r\n      'option'\r\n    );\r\n    const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    return await bToken.unlock(accountAddress, poolAddress);\r\n  }, args);\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      return await optionPool.addMargin(accountAddress, amount);\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  isMaximum = false\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      return await optionPool.removeMargin(\r\n        accountAddress,\r\n        amount,\r\n        isMaximum\r\n      );\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\r\n      // const { pToken: pTokenAddress } = getPoolConfig(\r\n      //   poolAddress,\r\n      //   '0',\r\n      //   '0',\r\n      //   'option'\r\n      // );\r\n      // const pToken = pTokenOptionFactory(chainId, pTokenAddress);\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      // const [parameterInfo, liquidity, margin, symbolIds] = await Promise.all([\r\n      //   optionPool.getParameters(),\r\n      //   optionPool.getLiquidity(),\r\n      //   pToken.getMargin(accountAddress),\r\n      //   pToken.getActiveSymbolIds(),\r\n      // ]);\r\n      // no minInitialMarginRatio in option\r\n      // const { initialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n      // let promises = [];\r\n\r\n      // for (let i = 0; i < symbolIds.length; i++) {\r\n      //   promises.push(optionPool.getSymbol(symbolIds[i]));\r\n      // }\r\n      // const symbols = await Promise.all(promises);\r\n\r\n      // promises = [];\r\n      // for (let i = 0; i < symbolIds.length; i++) {\r\n      //   promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n      // }\r\n      // const positions = await Promise.all(promises);\r\n\r\n      // let marginHeld = symbols.reduce((acc, s, index) => {\r\n      //   if (index === parseInt(symbolId)) {\r\n      //     return acc.plus(\r\n      //       bg(s.price)\r\n      //         .times(s.multiplier)\r\n      //         .times(bg(positions[index]).volume.plus(newVolume))\r\n      //         .abs()\r\n      //     );\r\n      //   } else {\r\n      //     return acc.plus(\r\n      //       bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\r\n      //     );\r\n      //   }\r\n      // }, bg(0));\r\n      // marginHeld = marginHeld.times(initialMarginRatio);\r\n\r\n      // let liquidityUsed = symbols.reduce((acc, s, index) => {\r\n      //   if (index === parseInt(symbolId)) {\r\n      //     return acc.plus(\r\n      //       bg(s.tradersNetVolume)\r\n      //         .plus(newVolume)\r\n      //         .times(s.price)\r\n      //         .times(s.multiplier)\r\n      //         .abs()\r\n      //     );\r\n      //   } else {\r\n      //     return acc.plus(\r\n      //       bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\r\n      //     );\r\n      //   }\r\n      // }, bg(0));\r\n      // liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n\r\n      // const orderValidation = isOrderValid(\r\n      //   margin,\r\n      //   marginHeld,\r\n      //   liquidity,\r\n      //   liquidityUsed\r\n      // );\r\n      // if (orderValidation.success) {\r\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\r\n      // } else {\r\n      //   throw new Error(orderValidation.error);\r\n      // }\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, symbolId) => {\r\n      const { pToken: pTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        '0',\r\n        'option'\r\n      );\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      const pToken = pTokenOptionFactory(chainId, pTokenAddress);\r\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n      if (!bg(volume).eq(0)) {\r\n        const newVolume = bg(volume).negated().toString();\r\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error('no position to close');\r\n      }\r\n    },\r\n    args\r\n  );\r\n};\r\n","import { deriToNatural, bg, getBlockInfo, getPastEvents, getHttpBase, fetchJson } from '../../shared/utils';\r\nimport {\r\n  getPoolConfig,\r\n} from '../../shared/config';\r\nimport { everlastingOptionFactory } from '../factory/pool';\r\nimport { calculateTxFee } from '../../v2/calculation/position';\r\n\r\nconst processTradeEvent = async (\r\n  chainId,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio,\r\n  bTokenSymbol,\r\n  symbolIdList,\r\n  symbols,\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const tradeCost = deriToNatural(info.tradeCost);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const volume = tradeVolume.abs();\r\n  const symbolId = info.symbolId\r\n  const index = symbolIdList.indexOf(symbolId)\r\n  const price = bg(tradeCost).div(bg(tradeVolume).times(symbols[index].multiplier))\r\n\r\n  if (index > -1) {\r\n    return {\r\n      direction,\r\n      baseToken: bTokenSymbol,\r\n      symbolId,\r\n      symbol: symbols[index].symbol,\r\n      price: price.toString(),\r\n      volume: volume.times(symbols[index].multiplier).toString(),\r\n      transactionHash: txHash.toString(),\r\n      notional: tradeVolume.abs().times(price).times(multiplier[index]).toString(),\r\n      transactionFee: calculateTxFee( tradeVolume, price, multiplier[index], feeRatio[index]).toString(),\r\n      time,\r\n    };\r\n  } else {\r\n    return null\r\n  }\r\n};\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  // const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  //console.log('symbolIdList', symbolIdList);\r\n  const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'option')\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  const [toBlock] = await Promise.all([\r\n    getBlockInfo(chainId, 'latest'),\r\n    optionPool._updateConfig(),\r\n  ]);\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  let promises= []\r\n  for (let i = 0; i < optionPool.activeSymbolIds.length; i++) {\r\n    promises.push(optionPool.getSymbol(optionPool.activeSymbolIds[i]));\r\n  }\r\n  let symbols = await Promise.all(promises)\r\n  const multiplier = symbols.map((i) => i.multiplier.toString());\r\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\r\n\r\n  const filters =  { account: accountAddress }\r\n  let events = await getPastEvents(chainId, optionPool.contract,\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  let result = [];\r\n  //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await processTradeEvent(\r\n      chainId,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n      bTokenSymbol,\r\n      optionPool.activeSymbolIds,\r\n      symbols,\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  result = result.filter((tr) => tr !== null)\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock, tradeHistory = [];\r\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\r\n    const [res] = await Promise.all([\r\n      fetchJson(\r\n        `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n      ),\r\n      optionPool._updateConfig()\r\n    ]);\r\n    if (res && res.success) {\r\n      //console.log('his res', res.data)\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    const symbols = optionPool.activeSymbols\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        //.filter((i) => i)\r\n        .map((i) => {\r\n          const index = symbols.findIndex((s) => s.symbolId === i.symbolId)\r\n          if (index > -1) {\r\n            return {\r\n              direction: i.direction.trim(),\r\n              baseToken: i.baseToken.trim(),\r\n              symbolId: i.symbolId,\r\n              symbol: i.symbol,\r\n              price: deriToNatural(i.price).toString(),\r\n              notional: deriToNatural(i.notional).toString(),\r\n              volume: deriToNatural(i.volume).times(symbols[index].multiplier).toString(),\r\n              transactionFee: deriToNatural(i.transactionFee).toString(),\r\n              transactionHash: i.transactionHash,\r\n              time: i.time.toString(),\r\n            };\r\n          } else {\r\n            // i.symbolId is not in activeSymbols\r\n            return null\r\n          }\r\n        });\r\n    }\r\n    tradeHistory = tradeHistory.filter((tr) => tr !== null)\r\n    // fetch tradeHistory on the block with fromBlock from rest api\r\n    if (tradeFromBlock !== 0) {\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n      const {initialBlock} = getPoolConfig(poolAddress, undefined, symbolId, 'option')\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch(err) {\r\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\r\n  }\r\n  return []\r\n};\r\n","import { catchTxApiError, naturalToDeri } from \"../../shared\"\r\nimport { normalizeChainId } from \"../../shared/utils/validate\";\r\nimport { getPoolV2LiteManagerConfig } from \"../config\";\r\nimport { perpetualPoolLiteFactory, perpetualPoolLiteManagerFactory } from \"../factory\";\r\n\r\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\r\nexport const createPool = async(...args) => {\r\n  return catchTxApiError(async(chainId, accountAddress, parameters, bTokenAddress, pairedTokenAddress) => {\r\n      chainId = normalizeChainId(chainId)\r\n      const { address: poolManagerAddress } = getPoolV2LiteManagerConfig(chainId)\r\n      const poolManager = perpetualPoolLiteManagerFactory(\r\n        chainId,\r\n        poolManagerAddress\r\n      );\r\n      // process parameters\r\n      const newParameters = parameters.map((p) => naturalToDeri(p).toString())\r\n      // send tx\r\n     return await poolManager.createPool(accountAddress, newParameters, bTokenAddress, pairedTokenAddress)\r\n  }, args)\r\n}\r\n\r\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\r\nexport const addSymbol = async(...args) => {\r\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, parameters) => {\r\n      chainId = normalizeChainId(chainId)\r\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      // process parameters\r\n      const newParameters = parameters.map((p, index) => index > 2 ? naturalToDeri(p).toString() : p)\r\n      // send tx\r\n     return await perpetualPoolLite.addSymbol(accountAddress, newParameters)\r\n  }, args)\r\n}\r\n","import {\r\n  DeriEnv,\r\n  getPoolConfigList as getPoolV2ConfigList,\r\n  getPoolV1ConfigList,\r\n  VERSIONS,\r\n} from '../shared/config';\r\n\r\nexport const getContractAddressConfig = (env, version) => {\r\n  env = env || DeriEnv.get()\r\n  if (version === 'v1') {\r\n    return getPoolV1ConfigList(env);\r\n  } else if (VERSIONS.includes(version)) {\r\n    return getPoolV2ConfigList(version, env);\r\n  } else {\r\n    throw new Error(`getContractAddressConfig: invalid version: ${version}`);\r\n  }\r\n};\r\n","//import { getLiquidityInfo2 } from '../v1/api/rest_api';\r\nimport { getPoolVersion, LITE_VERSIONS, LITE_AND_OPTION_VERSIONS } from '../shared/config';\r\nimport { getLiquidityInfo2 } from '../v1/api';\r\nimport {\r\n  getPoolLiquidity as getPoolLiquidity2,\r\n  getPoolInfoApy as getPoolInfoApy2,\r\n} from '../shared/api/database_api';\r\nimport {\r\n  getLiquidityInfoV2,\r\n  getPoolLiquidityV2,\r\n  getPoolInfoApyV2,\r\n} from '../v2/api';\r\nimport {\r\n  getLiquidityInfoV2l,\r\n  getPoolLiquidityV2l,\r\n  getPoolInfoApyV2l,\r\n} from '../v2_lite/api';\r\nimport {\r\n  getLiquidityInfoOption,\r\n} from '../option/api';\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getLiquidityInfoV2l(chainId, poolAddress, accountAddress)\r\n  } else if (version === 'option') {\r\n    return getLiquidityInfoOption(chainId, poolAddress, accountAddress)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getLiquidityInfo2(chainId, poolAddress, accountAddress)\r\n  } else {\r\n    return getLiquidityInfoV2(chainId, poolAddress, accountAddress, bTokenId)\r\n  }\r\n};\r\n\r\nexport const getPoolLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  bTokenId,\r\n) => {\r\n  if (LITE_AND_OPTION_VERSIONS.includes(getPoolVersion(poolAddress))) {\r\n    return getPoolLiquidityV2l(chainId, poolAddress)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getPoolLiquidity2(chainId, poolAddress)\r\n  } else {\r\n    return getPoolLiquidityV2(chainId, poolAddress, bTokenId)\r\n  }\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\r\n  if (LITE_AND_OPTION_VERSIONS.includes(getPoolVersion(poolAddress))) {\r\n    return getPoolInfoApyV2l(chainId, poolAddress)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getPoolInfoApy2(chainId, poolAddress)\r\n  } else {\r\n    return getPoolInfoApyV2(chainId, poolAddress, bTokenId)\r\n  }\r\n};\r\n","//import {addLiquidity2, removeLiquidity2 } from '../v1/api/contract_transaction_api_v2';\r\nimport { getPoolVersion, LITE_VERSIONS } from '../shared'\r\nimport { addLiquidity2, removeLiquidity2 } from '../v1/api';\r\nimport { addLiquidityV2, removeLiquidityV2 } from '../v2/api';\r\nimport { addLiquidityV2l, removeLiquidityV2l } from '../v2_lite/api';\r\nimport { addLiquidityOption, removeLiquidityOption } from '../option/api';\r\n\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return addLiquidityV2l(chainId, poolAddress, accountAddress, amount)\r\n  } else if (version === 'option') {\r\n    return addLiquidityOption(chainId, poolAddress, accountAddress, amount);\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return addLiquidity2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return addLiquidityV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId\r\n    );\r\n  }\r\n}\r\n\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum,\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return removeLiquidityV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\r\n  } else if (version === 'option') {\r\n    return removeLiquidityOption(chainId, poolAddress, accountAddress, amount, isMaximum)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return removeLiquidity2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return removeLiquidityV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId,\r\n      isMaximum,\r\n    );\r\n  }\r\n}\r\n","import {\r\n  getEstimatedFundingRateOption,\r\n  getFundingRateCacheOption,\r\n  getFundingRateOption,\r\n  getLiquidityUsedOption,\r\n  getPositionInfoOption,\r\n  getSpecificationOption,\r\n  getWalletBalanceOption,\r\n  getEstimatedFeeOption,\r\n  getEstimatedMarginOption,\r\n  getEstimatedLiquidityUsedOption,\r\n  isUnlockedOption,\r\n  getPositionInfosPosition,\r\n} from '../option/api';\r\nimport { getPoolVersion, isDeriUnlocked, LITE_VERSIONS } from '../shared';\r\nimport {\r\n  getPositionInfo2,\r\n  isUnlocked2,\r\n  getEstimatedMargin2,\r\n  getEstimatedFee2,\r\n  getEstimatedFundingRate2,\r\n  getEstimatedLiquidityUsed2,\r\n  getWalletBalance2,\r\n  getSpecification2,\r\n  getFundingRate2,\r\n  getLiquidityUsed2,\r\n  getFundingRateCache2,\r\n} from '../v1/api';\r\n\r\nimport {\r\n  getPositionInfoV2,\r\n  isUnlockedV2,\r\n  getEstimatedMarginV2,\r\n  getEstimatedFeeV2,\r\n  getEstimatedFundingRateV2,\r\n  getEstimatedLiquidityUsedV2,\r\n  getSpecificationV2,\r\n  getWalletBalanceV2,\r\n  getFundingRateV2,\r\n  getLiquidityUsedV2,\r\n  getFundingRateCacheV2,\r\n} from '../v2/api';\r\n\r\nimport {\r\n  getPositionInfoV2l,\r\n  isUnlockedV2l,\r\n  getEstimatedMarginV2l,\r\n  getEstimatedFeeV2l,\r\n  getEstimatedFundingRateV2l,\r\n  getEstimatedLiquidityUsedV2l,\r\n  getSpecificationV2l,\r\n  getWalletBalanceV2l,\r\n  getFundingRateV2l,\r\n  getLiquidityUsedV2l,\r\n  getFundingRateCacheV2l,\r\n} from '../v2_lite/api';\r\n\r\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getSpecificationV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getSpecificationOption(chainId, poolAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getSpecification2(chainId, poolAddress);\r\n  } else {\r\n    return getSpecificationV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getPositionInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getPositionInfoV2l(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getPositionInfoOption(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getPositionInfo2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return getPositionInfoV2(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\r\n  const version = getPoolVersion(poolAddress);\r\n  if (version === 'option') {\r\n    return getPositionInfosPosition(chainId, poolAddress, accountAddress)\r\n  } else {\r\n    // return empty array for v1, v2, v2_lite\r\n    return []\r\n  }\r\n}\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getWalletBalanceV2l(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'option') {\r\n    return getWalletBalanceOption(chainId, poolAddress, accountAddress);\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getWalletBalance2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return getWalletBalanceV2(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n};\r\n\r\nexport const isUnlocked = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return isUnlockedV2l(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'option') {\r\n    return isUnlockedOption(chainId, poolAddress, accountAddress);\r\n  }\r\n  if (accountAddress === undefined) {\r\n    return isDeriUnlocked(chainId, poolAddress);\r\n  } else if (bTokenId === undefined) {\r\n    return isUnlocked2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return isUnlockedV2(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedFee = async (\r\n  chainId,\r\n  poolAddress,\r\n  volume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedFeeV2l(chainId, poolAddress, volume, symbolId);\r\n  } else if (version === 'option') {\r\n    return getEstimatedFeeOption(chainId, poolAddress, volume, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedFee2(chainId, poolAddress, volume);\r\n  } else {\r\n    return getEstimatedFeeV2(chainId, poolAddress, volume, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedMarginV2l(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return getEstimatedMarginOption(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedMargin2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage\r\n    );\r\n  } else {\r\n    return getEstimatedMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getFundingRateV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getFundingRateOption(chainId, poolAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getFundingRate2(chainId, poolAddress);\r\n  } else {\r\n    return getFundingRateV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedFundingRateV2l(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return getEstimatedFundingRateOption(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedFundingRate2(chainId, poolAddress, newNetVolume);\r\n  } else {\r\n    return getEstimatedFundingRateV2(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getLiquidityUsedV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getLiquidityUsedOption(chainId, poolAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getLiquidityUsed2(chainId, poolAddress);\r\n  } else {\r\n    return getLiquidityUsedV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedLiquidityUsedV2l(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return getEstimatedLiquidityUsedOption(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedLiquidityUsed2(chainId, poolAddress, newNetVolume);\r\n  } else {\r\n    return getEstimatedLiquidityUsedV2(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getFundingRateCacheV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getFundingRateCacheOption(chainId, poolAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getFundingRateCache2(chainId, poolAddress);\r\n  } else {\r\n    return getFundingRateCacheV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n","import { closePositionOption, depositMarginOption, tradeWithMarginOption, unlockOption, withdrawMarginOption } from '../option/api';\r\nimport { getPoolVersion, LITE_VERSIONS, unlockDeri } from '../shared';\r\nimport {\r\n  unlock2,\r\n  tradeWithMargin2,\r\n  closePosition2,\r\n  depositMargin2,\r\n  withdrawMargin2,\r\n} from '../v1/api';\r\nimport {\r\n  unlockV2,\r\n  tradeWithMarginV2,\r\n  closePositionV2,\r\n  depositMarginV2,\r\n  withdrawMarginV2,\r\n} from '../v2/api';\r\nimport {\r\n  unlockV2l,\r\n  tradeWithMarginV2l,\r\n  closePositionV2l,\r\n  depositMarginV2l,\r\n  withdrawMarginV2l,\r\n} from '../v2_lite/api';\r\n\r\nexport const unlock = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return unlockV2l(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'option') {\r\n    return unlockOption(chainId, poolAddress, accountAddress);\r\n  }\r\n  if (accountAddress === undefined) {\r\n    return unlockDeri(chainId, poolAddress);\r\n  } else if (bTokenId === undefined) {\r\n    return unlock2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return unlockV2(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return depositMarginV2l(chainId, poolAddress, accountAddress, amount);\r\n  } else if (version === 'option') {\r\n    return depositMarginOption(chainId, poolAddress, accountAddress, amount);\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return depositMargin2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return depositMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId\r\n    );\r\n  }\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return withdrawMarginV2l(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      isMaximum\r\n    );\r\n  } else if (version === 'option') {\r\n    return withdrawMarginOption(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      isMaximum\r\n    );\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return withdrawMargin2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return withdrawMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId,\r\n      isMaximum\r\n    );\r\n  }\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return tradeWithMarginV2l(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return tradeWithMarginOption(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return tradeWithMargin2(chainId, poolAddress, accountAddress, newVolume);\r\n  } else {\r\n    return tradeWithMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return closePositionV2l(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return closePositionOption(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return closePosition2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return closePositionV2(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n};\r\n","import { getPoolVersion, LITE_VERSIONS } from '../shared';\r\nimport { getTradeHistoryOption } from '../option/api';\r\nimport { getTradeHistory2 } from '../v1/api';\r\nimport { getTradeHistoryV2 } from '../v2/api';\r\nimport { getTradeHistoryV2l } from '../v2_lite/api';\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getTradeHistoryV2l(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getTradeHistoryOption(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getTradeHistory2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return getTradeHistoryV2(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n};\r\n","import React from 'react'\r\nimport Modal from 'react-modal/lib/components/Modal';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nconst withModal = Component => {\r\n  const appElement = document.getElementById('root')\r\n  const customizeStyle =  {\r\n    overlay: {\r\n      position: 'fixed',\r\n      zIndex : 10,\r\n      background : 'rgb(0 0 0 / 0.5)'\r\n    },\r\n    content: {\r\n      position: 'absolute',\r\n      border : 0,\r\n      background : 'none',\r\n      inset : 0,\r\n      overflow : 'initial'\r\n    }\r\n  };\r\n\r\n  class WithModal extends React.Component {\r\n    constructor(props){\r\n      super(props)\r\n      this.state = {\r\n        modalIsOpen : false\r\n      }\r\n    }\r\n\r\n    render(){\r\n      const {modalIsOpen,className,overlay = {}} = this.props\r\n      const overlayMerged = Object.assign(customizeStyle.overlay,{...overlay})\r\n      const mergedStyle = Object.assign(customizeStyle,{overlay :overlayMerged})\r\n      return (\r\n        <Modal isOpen={modalIsOpen} style={mergedStyle} appElement={appElement} portalClassName={this.props.intl.locale}>\r\n          <div className={className}>\r\n            <Component {...this.props} className={className} onClose={this.props.onClose}/>\r\n          </div>\r\n        </Modal>\r\n      )\r\n    }\r\n  }\r\n\r\n  return inject('intl')(observer(WithModal)) ;\r\n}\r\nexport default withModal;","import withModal from \"../hoc/withModal\"\r\nimport './loading.less'\r\n\r\nexport default withModal(() => (<div className='loading-mask'>\r\n  <div className=\"snippet\" data-title=\".dot-pulse\">\r\n      <div className=\"stage\">\r\n        <div className=\"dot-pulse\"></div>\r\n      </div>\r\n    </div>\r\n</div>))\r\n","import { makeObservable, observable, action, computed } from \"mobx\";\r\nimport { restoreLocale, storeLocale } from \"../utils/utils\";\r\nimport supportedCatalog from '../locales/lang.json'\r\n\r\n\r\nconst cache = {}\r\n\r\nfunction importAll(r){\r\n  return r.keys().forEach(key => {\r\n    const path = key.split('/')\r\n    const lang = path[1]\r\n    const page = path[2].split('.')[0].toLowerCase()\r\n    if(!cache[lang]) {\r\n      cache[lang] = {}\r\n    }\r\n    \r\n    if(/mobile-/.test(page)){\r\n      const pageName= page.split('-')[1]\r\n      if(!cache[lang][pageName]){ \r\n        cache[lang][pageName] = {}\r\n      }\r\n      cache[lang][pageName]['mobile'] = r(key)\r\n    } else {\r\n      cache[lang][page] = r(key)\r\n    }\r\n  });\r\n}\r\n//lang.json 是语言包目录，需要排除在外\r\nimportAll(require.context(`../locales/`,true,/^((?!lang).)*\\.json$/))\r\n\r\nclass Intl {\r\n  locale = 'en'\r\n  constructor(){\r\n    makeObservable(this,{\r\n      locale : observable,\r\n      setLocale : action,\r\n      dict : computed,\r\n      localeLabel: computed\r\n    })\r\n    const language = navigator.language\r\n    const prefix = language && language.split('-')[0]\r\n    const locale = restoreLocale()\r\n    if(locale && Object.keys(supportedCatalog).includes(locale) ){\r\n      this.locale = locale\r\n    } else if(prefix && Object.keys(supportedCatalog).includes(prefix)){\r\n      this.locale = prefix\r\n    }\r\n  }\r\n\r\n  setLocale(locale){\r\n    if(locale && supportedCatalog[locale]){\r\n      this.locale = locale;\r\n      storeLocale(locale)\r\n    }\r\n  }\r\n\r\n  get(page,key){\r\n    return cache[this.locale][page][key]\r\n  }\r\n\r\n  get dict(){         \r\n    return cache[this.locale]\r\n  }\r\n\r\n  get localeLabel(){\r\n    const label = supportedCatalog[this.locale];\r\n    return label ? label.substr(0,2).toUpperCase() : \"EN\" \r\n  }\r\n}\r\n\r\nexport default new Intl();","import { makeObservable, observable, action } from \"mobx\";\r\nimport { getContractAddressConfig, DeriEnv,sortOptionSymbols,openConfigListCache } from \"../lib/web3js/indexV2\";\r\n\r\nexport default class Config {\r\n  all = []\r\n\r\n  constructor(){\r\n    makeObservable(this,{\r\n      all : observable,\r\n      setAll : action\r\n    })\r\n  }\r\n\r\n  async load(version,isOptions){\r\n    let current = version && version.current;\r\n    if(isOptions){\r\n      current = 'option'\r\n    }\r\n    if(current === 'v2_lite_open'){\r\n       await openConfigListCache.update()\r\n    }\r\n    let configs = getContractAddressConfig(DeriEnv.get(),current)\r\n    if(isOptions){\r\n      configs = sortOptionSymbols(configs)\r\n    }\r\n    if(!isOptions && version){\r\n      configs = configs.filter(c => c.version === version.current && c.symbol !== '--')\r\n      //v2 不需要展示base token,需要合并相同的base token\r\n      if(version.isV2){\r\n        configs = configs.reduce((total,cur) => {\r\n          const pos = total.findIndex(c => c.symbol === cur.symbol && c.pool === cur.pool);\r\n          if(pos === -1 ){\r\n            total.push(cur)\r\n          }\r\n          return total;\r\n        },[])\r\n      }\r\n    }\r\n    this.setAll(configs)\r\n    return this.all;\r\n  }\r\n\r\n  setAll(all){\r\n    this.all = all;\r\n  }\r\n  \r\n}","import { makeAutoObservable, observable, action, computed } from \"mobx\";\r\nimport { storeVersion, restoreVersion } from \"../utils/utils\";\r\n\r\nclass Version {\r\n  current = null;\r\n\r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      current : observable,\r\n      setCurrent : action,\r\n      isV1 : computed,\r\n      isV2 : computed,\r\n      isV2Lite : computed\r\n    })\r\n  }\r\n\r\n\r\n  setCurrent(version){\r\n    this.current = version;\r\n  }\r\n\r\n  switch(){\r\n    if(this.current === 'v1'){\r\n      this.setCurrent('v2')\r\n    } else {\r\n      this.setCurrent('v1')\r\n    }\r\n  }\r\n\r\n  get isV1() {\r\n    return this.current === 'v1'\r\n  }\r\n\r\n  get isV2(){\r\n    return this.current === 'v2'\r\n  }\r\n\r\n  get isV2Lite (){\r\n    return this.current === 'v2_lite'\r\n  }\r\n\r\n  get isOpen(){\r\n    return this.current === 'v2_lite_open'\r\n  }\r\n}\r\nexport default new Version()","import { makeAutoObservable, observable, action, computed } from \"mobx\";\r\n\r\n\r\nclass Type {\r\n  current = null;\r\n  \r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      current:observable,\r\n      setCurrent : action,\r\n      isOption : computed,\r\n      isFuture : computed\r\n    })\r\n  }\r\n\r\n  setCurrent(type){\r\n    this.current = type;\r\n  }\r\n\r\n  get isOption() {\r\n    return this.current === 'option'\r\n  }\r\n\r\n  get isFuture() {\r\n    return this.current === 'future'\r\n  }\r\n}\r\nexport default new Type()","\r\n\r\nimport BigNumber from 'bignumber.js'\r\nimport version from '../model/Version';\r\nimport type from '../model/Type';\r\nconst versionKey = 'deri-current-version'\r\n\r\nexport function bg(value, base = 0) {\r\n  if (base == 0) {\r\n    return BigNumber(value);\r\n  } else if (base > 0) {\r\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\r\n  } else {\r\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\r\n  }\r\n}\r\n\r\nexport function deriNatural(value) {\r\n  return bg(value, -18);\r\n}\r\n\r\nexport function formatAddress(address){\r\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\r\n}\r\n\r\nexport function formatBalance(balance){\r\n  return balance && (+balance).toFixed(4)\r\n}\r\n\r\nexport function eqInNumber(str1,str2){\r\n  return (+str1) === (+str2)\r\n}\r\n\r\nexport function isLP(address){\r\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\r\n}\r\nexport function isSushiLP(address){\r\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\r\n}\r\nexport function isCakeLP(address){\r\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\r\n}\r\n\r\nexport function sessionStorageKey(version){\r\n  return `${version}-current-trading-pool`\r\n}\r\n\r\n\r\n// export function storeVersion(version){\r\n//   sessionStorage.setItem(versionKey,version)\r\n// }\r\n\r\n// export function restoreVersion(){\r\n//   return sessionStorage.getItem(versionKey)\r\n// }\r\n\r\nexport function storeConfig(version,config){\r\n  if(config){\r\n    const key = sessionStorageKey(version);\r\n    sessionStorage.setItem(key,JSON.stringify(config))\r\n  }\r\n}\r\n\r\nexport function getConfigFromStore(version){\r\n  return JSON.parse(sessionStorage.getItem(sessionStorageKey(version)))\r\n}\r\n\r\nexport function storeChain(chainInfo){\r\n  sessionStorage.setItem('current-chain',JSON.stringify(chainInfo))\r\n}\r\nexport function restoreChain(){\r\n  return JSON.parse(sessionStorage.getItem('current-chain')) || {code : ''};\r\n}\r\n\r\nexport function storeLocale(locale){\r\n  sessionStorage.setItem('current-locale',locale)\r\n}\r\n\r\nexport function restoreLocale(){\r\n  return sessionStorage.getItem('current-locale')\r\n}\r\n\r\nexport function addParam(param,value,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  if(url.searchParams.has(param)){\r\n    url.searchParams.set(param,value);\r\n  } else {\r\n    url.searchParams.append(param,value);\r\n  }\r\n  return  url.toString();\r\n}\r\n\r\nexport function hasParam(param,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  return url.searchParams.has(param);\r\n}\r\n\r\nexport function getParam(param,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  return url.searchParams.get(param);\r\n}\r\n\r\nexport function getFormatSymbol(symbol){\r\n  const curChain = restoreChain();\r\n  if(type.isOption){\r\n    if(symbol.indexOf('-MARKPRICE') !== -1) {\r\n      symbol = symbol.substr(0,symbol.indexOf('-MARKPRICE'))\r\n    } else {\r\n      symbol = symbol.split('-')[0]\r\n    }\r\n  }\r\n  return version.isV2 || version.isV2Lite || type.isOption || version.current === 'v2_lite_open' ? `${symbol}_V2_${curChain ? curChain.code.toUpperCase() : 'BSC'}` : symbol\r\n}\r\n\r\nexport function stripSymbol(symbol){\r\n  if(!symbol){\r\n    return symbol;\r\n  }\r\n  if(/-/.test(symbol)){\r\n    symbol = symbol.split('-')[0]\r\n  }\r\n  return symbol\r\n}\r\n\r\n\r\nexport const  secondsInRange = {\r\n  '1' : 60,\r\n  '5' : 300,\r\n  '15' : 900,\r\n  '30' : 1800,\r\n  '60' : 3600,\r\n  '1D' : 3600 * 24,\r\n  '1W' : 3600 * 24 * 7\r\n}\r\nexport const intervalRange = {\r\n  '1' : 'min',\r\n  '5' : '5min',\r\n  '15' : '15min',\r\n  '30' : '30min',\r\n  '60' : 'hour',\r\n  '1D' : 'day',\r\n  '1W' : 'week'\r\n}\r\n\r\n \r\nexport function calcRange(interval){\r\n  const timestamp = new Date().getTime() /1000 ;\r\n  let from,to;\r\n  if(interval !== '1W') {\r\n    to = Math.floor(timestamp / secondsInRange[interval] ) * secondsInRange[interval]\r\n    from  = to - secondsInRange[interval] * 1440\r\n  } else {\r\n    to = Math.floor((timestamp - 345600) /secondsInRange[interval]) * secondsInRange[interval] + 345600\r\n    from = to - secondsInRange[interval] * 1440\r\n  }\r\n  return [from,to]\r\n \r\n}\r\n\r\n\r\n\r\n","import Web3 from 'web3';\r\nimport BigNumber from 'bignumber.js';\r\n\r\n// lang\r\nexport const isObject = (value) => typeof value === 'object' && value !== null\r\nexport const isArray = (value) => typeof value === 'object' && Array.isArray(value)\r\nexport const isFunction = (value) => typeof value === 'function'\r\n\r\n// == bg\r\nBigNumber.config({\r\n  DECIMAL_PLACES: 18,\r\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\r\n  EXPONENTIAL_AT: 256,\r\n});\r\n\r\nexport const bg = (value, base = 0) => {\r\n  if (base === 0) {\r\n    return BigNumber(value);\r\n  }\r\n  if (base > 0) {\r\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\r\n  }\r\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\r\n};\r\n\r\nexport const max = (value1, value2) => {\r\n  if (value1.gte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\nexport const min = (value1, value2) => {\r\n  if (value1.lte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\nexport const fromWei = (value, unit='ether') => Web3.utils.fromWei(value, unit)\r\n\r\nexport const toWei = (value, unit='ether') => Web3.utils.toWei(value, unit)\r\n\r\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\r\n\r\nexport const toHex = (value) => Web3.utils.toHex(value);\r\n\r\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\r\n\r\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\r\n\r\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\r\n\r\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\r\n\r\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\r\n\r\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\r\n\r\n\r\nexport const deriToNatural = (value) => bg(value, -18);\r\n\r\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\r\n\r\nexport const deriToString = (value) => bg(value).toString();\r\n\r\nexport const deriToBool = (value) => {\r\n  if (bg(value).toNumber() === 1) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const naturalWithPercentage = (value) =>\r\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\r\n\r\nexport const formatBN = (bigNumber) =>\r\n  bigNumber.toFormat().replaceAll(',', '').toString();\r\n\r\n// == convert\r\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);\r\n\r\n\r\n// == utils\r\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined'\r\nexport const isNodejs = () => typeof process !== 'undefined' && process.versions != null && process.versions.node != null\r\nexport const isJsDom = () => typeof window !== 'undefined' && navigator.userAgent.includes('jsdom')\r\n\r\n// == array set\r\nexport const isEqualSet = (set1, set2) => {\r\n  if (set1.size !== set2.size) return false;\r\n  for (let item of set1) {\r\n    if (!set2.has(item)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n// == contract gen\r\nexport const deleteIndexedKey = (obj) => {\r\n  if (isObject(obj)) {\r\n    let newObj = {}\r\n    Object.keys(obj).forEach((k) => {\r\n      if (!(/^\\d/.test(k))) {\r\n        newObj[k] = obj[k];\r\n      }\r\n    });\r\n    return newObj;\r\n  } else {\r\n    return obj\r\n  }\r\n};\r\n\r\nexport const fromWeiForObject = (obj, keyList = []) => {\r\n  return Object.keys(obj).reduce((acc, i) => {\r\n    if (keyList.includes(i)) {\r\n      acc[i] = fromWei(obj[i]);\r\n    } else {\r\n      acc[i] = obj[i];\r\n    }\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\nexport const toNumberForObject = (obj, keyList = []) => {\r\n  return Object.keys(obj).reduce((acc, i) => {\r\n    if (keyList.includes(i)) {\r\n      acc[i] = bg(obj[i]).toNumber();\r\n    } else {\r\n      acc[i] = obj[i];\r\n    }\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\n\r\n// for frontend to display symbols\r\nexport const sortOptionSymbols = (symbolList) => {\r\n  const symbolArr = symbolList\r\n    .map((s) => s.symbol)\r\n    .map((s) => {\r\n      return s.split('-');\r\n    });\r\n  const unique = (value, index, self) => self.indexOf(value) === index\r\n  const to2 = (i) => i < 10 ? `0${i}` : i\r\n  const symbol = symbolArr.map((s) => s[0]).filter(unique)\r\n  const direction = symbolArr.map((s) => s[2]).filter(unique)\r\n  const price = symbolArr\r\n    .map((s) => s[1])\r\n    .filter(unique)\r\n    .sort((a, b) => parseInt(a) - parseInt(b));\r\n  return symbolList.map((i, index) => {\r\n    const index1 =  symbol.indexOf(symbolArr[index][0]) + 1\r\n    const index2 =  to2(direction.indexOf(symbolArr[index][2]) + 1)\r\n    const index3 =  to2(price.indexOf(symbolArr[index][1]) + 1)\r\n    i.index = parseInt(`${index1}${index2}${index3}`)\r\n    return i\r\n  }).sort((a, b) => a.index - b.index).map((i) => {\r\n    delete i.index\r\n    return i\r\n  })\r\n}\r\n\r\n","var map = {\n\t\"./de/Signin.json\": 569,\n\t\"./de/bridge.json\": 570,\n\t\"./de/broker.json\": 571,\n\t\"./de/dip-history.json\": 572,\n\t\"./de/footer.json\": 573,\n\t\"./de/governance.json\": 574,\n\t\"./de/header.json\": 575,\n\t\"./de/home.json\": 576,\n\t\"./de/lite.json\": 577,\n\t\"./de/mining.json\": 578,\n\t\"./de/mobile-lite.json\": 579,\n\t\"./de/permission.json\": 580,\n\t\"./de/pro.json\": 581,\n\t\"./de/team.json\": 582,\n\t\"./en/Signin.json\": 583,\n\t\"./en/bridge.json\": 584,\n\t\"./en/broker.json\": 585,\n\t\"./en/dip-history.json\": 586,\n\t\"./en/footer.json\": 587,\n\t\"./en/governance.json\": 588,\n\t\"./en/header.json\": 589,\n\t\"./en/home.json\": 590,\n\t\"./en/lite.json\": 591,\n\t\"./en/mining.json\": 592,\n\t\"./en/mobile-lite.json\": 593,\n\t\"./en/permission.json\": 594,\n\t\"./en/pro.json\": 595,\n\t\"./en/team.json\": 596,\n\t\"./zh/Signin.json\": 597,\n\t\"./zh/bridge.json\": 598,\n\t\"./zh/broker.json\": 599,\n\t\"./zh/dip-history.json\": 600,\n\t\"./zh/footer.json\": 601,\n\t\"./zh/governance.json\": 602,\n\t\"./zh/header.json\": 603,\n\t\"./zh/home.json\": 604,\n\t\"./zh/lite.json\": 605,\n\t\"./zh/mining.json\": 606,\n\t\"./zh/mobile-lite.json\": 607,\n\t\"./zh/permission.json\": 608,\n\t\"./zh/pro.json\": 609,\n\t\"./zh/team.json\": 610\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 568;","import React, { useState, useEffect } from 'react'\r\nimport {isBrowser,isMobile} from 'react-device-detect'\r\nimport LoadableComponent from './utils/LoadableComponent';\r\nimport { inject, observer } from 'mobx-react';\r\nimport LoadingMask from './components/Loading/LoadingMask';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport type from './model/Type'\r\nconst DesktopApp = LoadableComponent(() => import('./desktop/index'))\r\nconst MobileApp = LoadableComponent(() => import('./mobile/index'))\r\n\r\nfunction Mask({loading}){\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  useEffect(() => {\r\n    setIsOpen(loading.isShowMask)\r\n    return () => {\r\n    }\r\n  }, [loading.isShowMask])\r\n  return <LoadingMask modalIsOpen={isOpen} overlay={{background : 'none'}}/>\r\n}\r\n\r\nconst MaskWrapper = inject('loading')(observer(Mask))\r\n\r\nfunction App({intl,loading}) {\r\n  const isOptionsLite = useRouteMatch('/options/lite') ? true : false\r\n  const isOptionsPro = useRouteMatch('/options/pro') ? true : false\r\n  const isOption = isOptionsLite || isOptionsPro\r\n  const categry = isOption ? 'option' : 'future'\r\n  type.setCurrent(categry)\r\n  if(isBrowser){\r\n    return <><MaskWrapper/><DesktopApp locale={intl.locale}></DesktopApp></>\r\n  }\r\n  if(isMobile){\r\n    return <><MaskWrapper/><MobileApp locale={intl.locale}><Mask loading={loading}/></MobileApp></>\r\n  }\r\n}\r\n\r\nexport default inject('intl','loading')(observer(App)) ;\r\n","\r\nimport {getUserWalletBalance ,DeriEnv,connectWallet, isUnlocked,openConfigListCache, unlock } from \"../lib/web3js/indexV2\";\r\nimport config from '../config.json'\r\nimport { formatBalance, eqInNumber, storeChain } from \"../utils/utils\";\r\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\r\nimport version from './Version'\r\n\r\nclass Wallet {\r\n  \r\n  detail = {}\r\n  \r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      detail : observable,\r\n      setDetail : action,\r\n      supportV2 : computed,\r\n      supportV1 : computed,\r\n      supportAllVersion : computed,\r\n      supportChain : computed,\r\n      supportInnocation : computed,\r\n      supportOpen : computed\r\n    })\r\n  }\r\n\r\n  supportWeb3 = () => !!window.ethereum\r\n\r\n  isConnected = () => !!this.detail.account;\r\n\r\n\r\n  async isApproved(pool,bTokenId){\r\n    if(this.detail.chainId && this.supportChain){\r\n      if(version.isOpen){\r\n        await openConfigListCache.update()\r\n      }\r\n      const isApproved = await isUnlocked(this.detail.chainId,pool,this.detail.account,bTokenId).catch(e => console.error('load approve error'))\r\n      this.detail.isApproved = isApproved;\r\n      this.setDetail(this.detail)\r\n      return isApproved;\r\n    }\r\n  }\r\n\r\n  approve = async (pool,bTokenId) => {\r\n    if(this.detail.chainId){\r\n      const approved = await unlock(this.detail.chainId,pool,this.detail.account,bTokenId);\r\n      return approved\r\n    }\r\n  }\r\n\r\n  connect =  async () => {\r\n    const res = await connectWallet();\r\n    return new Promise(async (resolve,reject) => {\r\n      if(res.success){\r\n        const {chainId,account} = res\r\n        const wallet = await this.loadWalletBalance(chainId,account);      \r\n        resolve(wallet)\r\n      } else {\r\n        reject(null)\r\n      }\r\n    })\r\n  }\r\n\r\n  switchNetwork = async (network) => {\r\n    if(!this.isConnected()){\r\n      this.connect();\r\n    }\r\n    const chainInfo = config[DeriEnv.get()]['chainInfo']\r\n    const chainId =`0x${(parseInt(network.id)).toString(16)}`\r\n    network = chainInfo[parseInt(network.id)]\r\n    try {\r\n      await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId}],\r\n      });\r\n    } catch (error) {\r\n      // alert('err' + JSON.stringify(error))\r\n      if (error.code === 4902) {\r\n        try {\r\n          await window.ethereum.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [{chainId,...network.metamask}],\r\n          });\r\n        } catch (addError) {\r\n          console.error('err' ,addError)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  loadWalletBalance = async (chainId,account) => {\r\n    if(version.isOpen){\r\n      await openConfigListCache.update()\r\n    }\r\n    const balance = await getUserWalletBalance(chainId,account).catch(e => console.log('wallet account is not exist'))\r\n    const detail = {chainId,account,balance,formatBalance : formatBalance(balance)}\r\n    const env = DeriEnv.get();\r\n    const {chainInfo} = config[env]\r\n    \r\n    if(chainInfo[chainId]){\r\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\r\n      storeChain(chainInfo[chainId])\r\n    }\r\n    this.setDetail(detail)\r\n    return detail;\r\n  }\r\n\r\n  get = () => {\r\n    return this.detail;\r\n  }\r\n\r\n  setDetail(detail){\r\n    this.detail = detail;\r\n  }\r\n\r\n  refresh(){\r\n    this.loadWalletBalance(this.detail.chainId,this.detail.account);\r\n  }\r\n\r\n  isSupportChain(isOptions){\r\n    const chainId = this.detail.chainId\r\n    const env = DeriEnv.get();\r\n    const {chainInfo} = config[env]\r\n    if(isOptions){\r\n      return chainInfo[chainId] && chainInfo[chainId]['supportOptions']\r\n    } else {\r\n      return this.supportChain\r\n    }\r\n  }\r\n\r\n  get supportV2() {\r\n    return this.detail.supportV2\r\n  }\r\n\r\n  get supportV1(){\r\n    return this.detail.supportV1;\r\n  }\r\n\r\n  get supportAllVersion(){\r\n    return this.detail.supportV1 && this.detail.supportV2\r\n  }\r\n\r\n  get supportChain(){\r\n    return this.detail.supported\r\n  }\r\n\r\n  get supportInnovation(){\r\n    return this.detail.supportInnovation\r\n  }\r\n\r\n  get supportOpen(){\r\n    return this.detail.supportOpen\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\r\nimport WebSocket from \"socket.io-client\";\r\n\r\nclass Oracle {\r\n  symbol = 'BTCUSD'\r\n  timeType = 'min'\r\n  index = 0.00\r\n  kData = []\r\n  ws = null\r\n  paused = false;\r\n  listeners = {}\r\n  already = false\r\n\r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      index : observable,\r\n      kData : observable,\r\n      setIndex : action,\r\n    })\r\n  }\r\n\r\n\r\n  initWebSocket(){\r\n    if(this.ws === null) {\r\n      this.ws = new WebSocket(process.env.REACT_APP_WSS_URL, {        \r\n        transports: ['websocket'],\r\n        withCredentials: true\r\n      })\r\n      this.ws.on('connect',() => {\r\n        if(this.already){\r\n          this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\r\n          console.log('ws is reconnected already')\r\n        }\r\n        console.log('ws is already connected');\r\n      });\r\n    }    \r\n  }\r\n\r\n\r\n  load(symbol,timeType = 'min'){\r\n    // symbol = symbol+'_V2'\r\n    this.initWebSocket()\r\n    this.ws.on('kline_update',data => {\r\n      const obj = {}\r\n      let time = data.time\r\n      if (data.symbol.toUpperCase() === this.symbol.toUpperCase()) {\r\n        obj.time = time \r\n        obj.low = Number(data.low)\r\n        obj.high = Number(data.high)\r\n        obj.open = Number(data.open)\r\n        obj.close = Number(data.close)\r\n        obj.volume = Number(data.volume)\r\n        obj.time_type = data.time_type\r\n        obj.symbol = data.symbol\r\n        if(!this.paused) {\r\n          this.setIndex(obj.close)\r\n          for(const key of Object.keys(this.listeners)){\r\n            if(typeof this.listeners[key] === 'function'){\r\n              this.listeners[key](obj)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    if(symbol !== this.symbol){\r\n      this.unsubscribeBars(this.symbol);\r\n    }\r\n    this.setSymbol(symbol)\r\n    this.setTimeType(timeType);\r\n    this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\r\n    this.already = true\r\n  }\r\n\r\n  addListener(id,listener){\r\n    if(!this.listeners[id]) {\r\n      this.listeners[id] = listener\r\n    }    \r\n  }\r\n\r\n\r\n\r\n  unsubscribeBars(symbol){\r\n    if(this.ws){\r\n      this.ws.emit('un_get_kline', {\r\n        symbol : symbol, 'time_type' : 'min'\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  //暂不用\r\n  loadHistory(symbol,timeType,callback){\r\n    this.ws.on('kline_history', data => {\r\n      const history = data.map(el => {\r\n        return {\r\n          time: el.time,\r\n          low: Number(el.low),\r\n          high: Number(el.high),\r\n          open: Number(el.open),\r\n          close: Number(el.close),\r\n          volume: Number(el.volume)\r\n        }\r\n      })\r\n      if(callback){\r\n        console.log('history ->',history[history.length-1].time)\r\n        callback(history)\r\n      }\r\n    })\r\n    this.ws.emit('get_kline', {'symbol': symbol, 'time_type': timeType, 'bars': 1000})\r\n  }\r\n\r\n  resume(){\r\n    this.setPause(false)\r\n  }\r\n\r\n  pause(){\r\n    this.setPause(true)\r\n  }\r\n\r\n  setIndex(index){\r\n    if(!this.paused) {\r\n      this.index = index;\r\n    }\r\n  }\r\n\r\n  setSymbol(symbol){\r\n    this.symbol = symbol\r\n  }\r\n\r\n  setTimeType(timeType){\r\n    this.timeType = timeType;\r\n  }\r\n  setPause(paused){\r\n    this.paused = paused\r\n  }\r\n}\r\n\r\nexport default Oracle","import { getPositionInfo ,bg,getPositionInfos} from \"../lib/web3js/indexV2\"\r\nimport { eqInNumber } from '../utils/utils';\r\n\r\nexport default class Position {\r\n\r\n   callback = () => {}\r\n   callbackALL = ()=>{}\r\n   wallet = null;\r\n   spec = null\r\n   isOption =null;\r\n \r\n   mockPositionInfo = {\r\n    averageEntryPrice: \"\",\r\n    liquidationPrice: \"\",\r\n    margin: \"20000\",\r\n    marginHeld: \"10068.26538\",\r\n    marginHeldBySymbol : \"293.16152\",\r\n    unrealizedPnl: \"3.1311\",\r\n    volume: \"800\",\r\n    premiumFundingAccrued:'',\r\n    deltaFundingAccrued:'',\r\n    strikePrice:0,\r\n    timePrice:0,\r\n    volatility:0,\r\n    isCall:false,\r\n   }\r\n\r\n   async load(wallet,spec,callback,isOption){\r\n     this.isOption = isOption\r\n     if(wallet && wallet.isConnected() && wallet.isSupportChain(isOption) && spec && spec.pool){\r\n      const position = await getPositionInfo(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\r\n      if(position){\r\n        if(callback){\r\n          callback(position)\r\n        }\r\n      }\r\n      this.start(wallet,spec,callback)\r\n      return position;\r\n     }\r\n   }\r\n\r\n   async loadAll(wallet,spec,callback,isOption){\r\n    this.isOption = isOption\r\n      if(wallet && wallet.isConnected() && wallet.isSupportChain(isOption) && spec && spec.pool){\r\n        let res  = await getPositionInfos(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\r\n        let positions = [] \r\n        if(res.length){\r\n          positions = res.map(item=>{\r\n            item.balanceContract = bg(item.margin).plus(item.unrealizedPnl).toString()\r\n            item.direction = (+item.volume) > 0 ? 'LONG' : (!item.volume || eqInNumber(item.volume, 0) || !item.volume ? '--' : 'SHORT')\r\n            return item\r\n          })\r\n        }\r\n        if(positions){\r\n          if(callback){\r\n            callback(positions)\r\n          }\r\n        }\r\n        this.startAll(wallet,spec,callback)\r\n        return positions;\r\n       }\r\n   }\r\n\r\n   startAll(wallet,spec,callback){\r\n    if(this.intervalAll !== null){\r\n      clearInterval(this.intervalAll);\r\n    }\r\n   this.intervalAll = window.setInterval(() => this.loadAll(wallet,spec,callback,this.isOption),3000)      \r\n   if(wallet){\r\n     this.wallet= wallet; \r\n   }\r\n   if(spec){\r\n     this.spec = spec\r\n   }\r\n   if(callback){\r\n     this.callbackALL = callback;\r\n   }\r\n  }\r\n\r\n   start(wallet,spec,callback){\r\n     if(this.interval !== null){\r\n       clearInterval(this.interval);\r\n     }\r\n    this.interval = window.setInterval(() => this.load(wallet,spec,callback,this.isOption),3000)      \r\n    if(wallet){\r\n      this.wallet= wallet; \r\n    }\r\n    if(spec){\r\n      this.spec = spec\r\n    }\r\n    if(callback){\r\n      this.callback = callback;\r\n    }\r\n   }\r\n\r\n   \r\n\r\n   pause(){\r\n    clearInterval(this.interval);\r\n    this.interval = null;\r\n   }\r\n\r\n   resume(wallet,spec,callback){\r\n     this.start(wallet,spec,callback || this.callback)\r\n   }\r\n \r\n}","import { getSpecification } from \"../lib/web3js/indexV2\";\r\nimport { makeObservable, observable, action, computed } from \"mobx\";\r\nimport Intl from \"./Intl\";\r\nimport version from \"./Version\";\r\nimport type from \"./Type\";\r\n\r\nexport default class Contract {\r\n  info = {\r\n    bTokenSymbol:[\"BUSD\"],\r\n    symbol:'BTCUSD',\r\n    multiplier:'0.0001',\r\n    fundingRateCoefficient:'0.0000025',\r\n    deltaFundingCoefficient:'0.2',\r\n    minInitialMarginRatio:0.1,\r\n    initialMarginRatio:0.1,\r\n    minMaintenanceMarginRatio:0.05,\r\n    maintenanceMarginRatio:0.05,\r\n    feeRatio:0.0005,\r\n    underlier :'',\r\n    strike:0,\r\n    optionType:'C',\r\n    bTokenSymbolDisplay : ['BUSD']\r\n  }\r\n  // constructor(){\r\n  //   makeObservable(this,{\r\n  //     info : observable,\r\n  //     setInfo : action,\r\n  //     bTokenSymbolDisplay : computed\r\n  //   })\r\n  // }\r\n\r\n  async load(wallet,config){\r\n    if(wallet && wallet.supportChain && config && config.pool !== this.info.pool){\r\n      const spec = await getSpecification(wallet.detail.chainId,config.pool,config.symbolId);\r\n      spec.bTokenSymbol = this.bTokenSymbolDisplay(spec)\r\n      if(type.isOption){\r\n        spec.underlier = this.getUnderlierStrike(spec).underlier\r\n        spec.strike = this.getUnderlierStrike(spec).strike\r\n        spec.optionType = this.getUnderlierStrike(spec).optionType\r\n      }\r\n      this.setInfo(spec)\r\n    }\r\n    return this.info\r\n  }\r\n\r\n  setInfo(info){\r\n    this.info = info\r\n  }\r\n\r\n  getUnderlierStrike(spec){\r\n    let underlier = spec.symbol.split('-')[0]\r\n    let strike = spec.symbol.split('-')[1]\r\n    let optionType = spec.symbol.split('-')[2]\r\n    return {\r\n      underlier:underlier,\r\n      strike:strike,\r\n      optionType:optionType\r\n    }\r\n  }\r\n\r\n  bTokenSymbolDisplay(spec){\r\n    if(version.isV1 || version.isV2Lite || type.isOption || version.isOpen){\r\n      return [spec.bTokenSymbol];\r\n    }\r\n    return spec.bTokenSymbol;\r\n  }\r\n}","import { getTradeHistory } from \"../lib/web3js/indexV2\";\r\n\r\n\r\nexport default class History {\r\n\r\n   async load(wallet,config,isOptions){\r\n      if(wallet && wallet.isSupportChain(isOptions) && wallet.detail.chainId && config && config.pool){\r\n         const all = await getTradeHistory(wallet.detail.chainId,config.pool,wallet.detail.account,config.symbolId);    \r\n         return all;\r\n      } else {\r\n         return []\r\n      }\r\n   }\r\n}","import { observable, action, computed, makeObservable } from \"mobx\";\r\nimport Oracle from \"./Oracle\";\r\nimport Position from \"./Position\";\r\nimport Contract from \"./Contract\";\r\nimport History from './History'\r\nimport Config from \"./Config\";\r\nimport { eqInNumber, storeConfig, getConfigFromStore, restoreChain, getFormatSymbol } from \"../utils/utils\";\r\nimport { getFundingRate, priceCache } from \"../lib/web3js/indexV2\";\r\nimport { bg } from \"../lib/web3js/indexV2\";\r\nimport Intl from \"./Intl\";\r\nimport version from './Version'\r\nimport type from './Type'\r\n\r\n/**\r\n * 交易模型\r\n * 关联对象\r\n * 1. chain\r\n * 2. Oracle\r\n * 3. position\r\n * 4. contract\r\n * 5. history\r\n * 计算\r\n * 1. dynamic balance\r\n * 2. available blance\r\n * 响应事件\r\n * 1. chain change\r\n * 2. chain’s symbol changed\r\n * 3. index update\r\n * 4. volum change\r\n * 5. margin change\r\n * 输出\r\n * 1. dynamic balance\r\n * 2. margin\r\n * 3. available balance\r\n * 4. volume\r\n * 5. specs\r\n * 6. spec\r\n * 7. position\r\n * 8. contract\r\n * 9. fundingRate\r\n */\r\n\r\nexport default class Trading {\r\n  version = null;\r\n  wallet = null;\r\n  type = null;\r\n  configs = [] \r\n  config = null;\r\n  index = ''\r\n  volume = ''\r\n  paused = false\r\n  slideIncrementMargin = 0\r\n  position = {}\r\n  positions = []\r\n  contract = {}\r\n  fundingRate = {}\r\n  history = []\r\n  userSelectedDirection = 'long'\r\n  supportChain = true\r\n  optionsConfigs = {}\r\n\r\n  constructor(){\r\n    makeObservable(this,{\r\n      index : observable,\r\n      volume : observable,\r\n      slideIncrementMargin : observable,\r\n      fundingRate : observable,\r\n      position : observable,\r\n      positions : observable,\r\n      history : observable,\r\n      contract : observable,\r\n      userSelectedDirection : observable,\r\n      supportChain : observable,\r\n      setWallet :action,\r\n      setConfigs : action,\r\n      setOptionConfigs : action,\r\n      setConfig : action,\r\n      setIndex : action,\r\n      setContract : action,\r\n      setPosition : action,\r\n      setPositions : action,\r\n      setVolume : action,\r\n      setUserSelectedDirection : action,\r\n      // setSupportChain : action,\r\n      setFundingRate : action,\r\n      setHistory : action,\r\n      setSlideMargin : action,\r\n      amount : computed,\r\n      fundingRateTip : computed,\r\n      optionFundingRateTip : computed,\r\n      initialMarginRatioTip : computed,\r\n      maintenanceMarginRatioTip : computed,\r\n      TransactionFeeTip : computed,\r\n      multiplierTip : computed,\r\n      direction : computed,\r\n      volumeDisplay : computed,\r\n      isNegative : computed,\r\n      isPositive : computed\r\n    })\r\n    this.configInfo = new Config();\r\n    this.oracle = new Oracle();\r\n    this.positionInfo = new Position()\r\n    this.contractInfo = new Contract();\r\n    this.historyInfo = new History()\r\n  }\r\n\r\n  /**\r\n   * 初始化\r\n   * wallet and version changed will init\r\n   */\r\n  async init(wallet,version,isOption,finishedCallback){  \r\n    const all = await this.configInfo.load(version,isOption);\r\n    //如果连上钱包，有可能当前链不支持\r\n    if(wallet.isConnected()){\r\n      this.setWallet(wallet);\r\n      this.setConfigs(all.filter(c => eqInNumber(wallet.detail.chainId,c.chainId)))\r\n      let defaultConfig = this.getDefaultConfig(this.configs,wallet);\r\n      //如果还是为空，则默认用所有config的第一条\r\n      if(!defaultConfig){\r\n        defaultConfig = all.length > 0 ? all[0] : {}\r\n      }\r\n      this.setConfig(defaultConfig);\r\n      //如果没有钱包或者链接的链不一致，设置默认config，BTCUSD\r\n    } else if(!wallet.isConnected() || !wallet.supportWeb3()){\r\n      //没有钱包插件\r\n      version.setCurrent('v2')\r\n      const all = await this.configInfo.load(version,isOption);\r\n      const defaultConfig = all.find(c => c.symbol === 'BTCUSD')\r\n      this.setConfig(defaultConfig)\r\n    }\r\n    this.loadByConfig(this.wallet,this.config,true,finishedCallback,isOption)\r\n    this.setVolume('')\r\n  }\r\n\r\n  async onSymbolChange(spec,finishedCallback,isOption){\r\n    const config = this.configs.find(config => config.pool === spec.pool && config.symbolId === spec.symbolId)\r\n    //v1 只需要比较池子地址，v2 需要比较symbolId\r\n    const changed = version.isV1 ? spec.pool !== this.config.pool : spec.symbolId !== this.config.symbolId\r\n    this.onChange(config,changed,finishedCallback,isOption)\r\n  }\r\n\r\n  async onChange(config,changed,finishedCallback,isOption){\r\n    if(config){\r\n      this.pause();\r\n      this.setConfig(config)\r\n      this.loadByConfig(this.wallet,config,changed,finishedCallback,isOption);  \r\n      if(changed){\r\n        this.store(config)\r\n      }    \r\n      this.resume()\r\n      this.setVolume('')\r\n    } else{\r\n      finishedCallback && finishedCallback()\r\n    }\r\n  }\r\n\r\n  async loadByConfig(wallet,config,symbolChanged,finishedCallback,isOption){\r\n     //切换指数\r\n    if(symbolChanged && config){\r\n      const symbol = getFormatSymbol(config.symbol)\r\n      this.oracle.unsubscribeBars(symbol);\r\n      this.oracle.addListener('trading',data => {\r\n        this.setIndex(data.close)\r\n      })\r\n      this.oracle.load(symbol)\r\n    }\r\n    if(wallet && wallet.isConnected && config){\r\n      Promise.all([\r\n        this.positionInfo.load(wallet,config,(position) => {\r\n          this.setPosition(position)\r\n          this.syncFundingRate(wallet,config,isOption)\r\n        },isOption),\r\n        this.contractInfo.load(wallet,config,isOption),\r\n        this.loadFundingRate(wallet,config,isOption),\r\n        this.historyInfo.load(wallet,config,isOption),\r\n        this.positionInfo.loadAll(wallet,config,positions => this.setPositions(positions),isOption),\r\n      ]).then(results => {\r\n        if(results.length === 5){\r\n          results[0] && this.setIndex(results[0].price) && this.setPosition(results[0]);\r\n          results[1] && this.setContract(results[1]);\r\n          results[2] && this.setFundingRate(results[2]);\r\n          results[3] && this.setHistory(results[3]);\r\n          results[4] && this.setPositions(results[4]);\r\n          // this.refreshCache();\r\n        } \r\n      }).finally(e => {\r\n        finishedCallback && finishedCallback()\r\n      })\r\n    } else {\r\n      finishedCallback && finishedCallback()\r\n    }\r\n  }\r\n\r\n  refreshCache(){\r\n    const {pool} = this.config;\r\n    const symbol = type.isOption ? this.config.symbol.split('-')[0] : this.config.symbol\r\n    priceCache.clear();\r\n    priceCache.update(pool,symbol)\r\n  }\r\n\r\n\r\n  //优先使用session storage 的，如果缓存跟用户当前链一直，则命中缓存，否则取当前配置第一条\r\n  getDefaultConfig(configs = [],wallet){\r\n    let defaultConfig = null;\r\n    if(configs.length > 0){    \r\n      const fromStore = this.getFromStore();\r\n      if(fromStore && eqInNumber(wallet.detail.chainId,fromStore.chainId)){\r\n        defaultConfig = fromStore;\r\n      }\r\n      if(defaultConfig){\r\n        //虽然从缓存获得config ，需要判断池子地址是否一致，否则用可用config的第一条\r\n        const pos = configs.findIndex(c => c.pool === defaultConfig.pool);\r\n        if(pos === -1){\r\n          defaultConfig = configs[0];\r\n        }\r\n      } else {\r\n        defaultConfig = configs[0]\r\n      }   \r\n    }\r\n    return defaultConfig;    \r\n  }\r\n\r\n \r\n\r\n  //存起来\r\n  store(config){\r\n    storeConfig(version.current,config)\r\n  }\r\n\r\n  getFromStore(){\r\n    return getConfigFromStore(version.current)\r\n  }\r\n\r\n  async syncFundingRate(){\r\n    //资金费率和仓位同步\r\n    const fundingRate = await this.loadFundingRate(this.wallet,this.config)   \r\n    if(fundingRate){\r\n      this.setFundingRate(fundingRate)      \r\n    }\r\n  }\r\n\r\n  async refresh(){\r\n    this.pause()\r\n    const position = await this.positionInfo.load(this.wallet,this.config, async (position)  => {       \r\n      this.setPosition(position);\r\n      this.syncFundingRate();\r\n    });\r\n    if(position){\r\n      this.setPosition(position)\r\n    }\r\n    this.syncFundingRate();\r\n    this.wallet.loadWalletBalance(this.wallet.detail.chainId,this.wallet.detail.account)\r\n    const history = await this.historyInfo.load(this.wallet,this.config)\r\n    if(history){\r\n      this.setHistory(history)\r\n    }\r\n    this.setVolume('')\r\n    this.resume();\r\n  }\r\n\r\n  /**\r\n   * 暂停实时读取index和定时读取position\r\n   */\r\n  pause(){\r\n    this.setPaused(true)\r\n    this.oracle.pause();\r\n    this.positionInfo.pause();\r\n  }\r\n\r\n  /**\r\n   * 恢复读取\r\n   */\r\n  resume(){\r\n    this.setPaused(false)\r\n    this.oracle.resume();\r\n    this.positionInfo.resume(this.wallet,this.config);\r\n  }\r\n\r\n  setWallet(wallet){\r\n    this.wallet = wallet;\r\n  }\r\n\r\n  setConfigs(configs){\r\n    if(type.isOption){\r\n      this.setOptionConfigs(configs)\r\n    } \r\n    this.configs = configs\r\n  }\r\n\r\n  setOptionConfigs(configs){\r\n    this.optionsConfigs = this.groupConfigBySymbol(configs)\r\n  }\r\n\r\n  groupConfigBySymbol(configs = []){\r\n    return configs.reduce((total,config) => {\r\n      const symbol = config.symbol.split('-')[0]\r\n      if(!total[symbol]){\r\n        total[symbol] = []\r\n      }\r\n      total[symbol].push(config)\r\n      return total;\r\n    },[])\r\n  }\r\n\r\n  setConfig(config){\r\n    this.config = config\r\n  }\r\n\r\n  setIndex(index){\r\n    this.index = index;\r\n  }\r\n\r\n  setPosition(position){\r\n    if(position){\r\n      this.position = position\r\n    }\r\n  }\r\n\r\n  setPositions(positions){\r\n    if(positions){\r\n      this.positions = positions\r\n    }\r\n  }\r\n\r\n  setContract(contract){\r\n    this.contract = contract\r\n  }\r\n\r\n  setHistory(history){\r\n    this.history = history\r\n  }\r\n\r\n  setFundingRate(fundingRate){\r\n    this.fundingRate = fundingRate;\r\n  }\r\n\r\n  setVolume(volume){\r\n    this.volume = volume;\r\n  }\r\n\r\n  setPaused(paused){\r\n    this.paused = paused\r\n  }\r\n\r\n  setUserSelectedDirection(direction){\r\n    this.userSelectedDirection = direction\r\n  }\r\n\r\n  setSlideMargin(slideIncrementMargin){\r\n    if(slideIncrementMargin !== ''){\r\n      this.slideIncrementMargin =  slideIncrementMargin\r\n      const position = this.position;\r\n      const price = position.price || this.index\r\n      const increment = slideIncrementMargin - position.marginHeld\r\n      let MarginRatio = type.isOption ? this.contract.initialMarginRatio : this.contract.minInitialMarginRatio;\r\n      let volume =  increment / (price * this.contract.multiplier * MarginRatio);\r\n      if(type.isOption){\r\n        volume = +volume * +this.contract.multiplier\r\n        let index = this.contract.multiplier.indexOf('.')\r\n        let num = this.contract.multiplier.slice(index);\r\n        let length = num.length \r\n        let value = volume.toString()\r\n        if(value.indexOf(\".\") !== '-1'){\r\n          value = value.substring(0,value.indexOf(\".\") + length)\r\n        }\r\n        this.setVolume(value)\r\n      }else{\r\n        this.setVolume(volume.toFixed(0))\r\n      }\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  get volumeDisplay(){\r\n    if((type.isFuture && Math.abs(this.volume) === 0 && isNaN(this.volume) )|| this.volume === '' || this.volume === '-' || this.volume === 'e') {\r\n      return '';\r\n    } else {\r\n      return Math.abs(this.volume)\r\n    }\r\n  }\r\n  \r\n\r\n  get amount(){\r\n    const position = this.position\r\n    const contract = this.contract;\r\n    let initVolume = this.volume === '' || isNaN(this.volume) ? 0 : Math.abs(this.volume)\r\n    let optionVolume = type.isOption ? (+initVolume / +this.contract.multiplier):initVolume;\r\n    const volume = optionVolume\r\n    let {margin, marginHeldBySymbol:currentSymbolMarginHeld ,marginHeld,unrealizedPnl} = position\r\n    const price = position.price || this.index\r\n    //v2\r\n    let otherMarginHeld = bg(marginHeld).minus(currentSymbolMarginHeld)\r\n    otherMarginHeld = otherMarginHeld.isNaN() ? bg(0) : otherMarginHeld;\r\n    const contractValue = volume * price * contract.multiplier;\r\n    const incrementMarginHeld =  type.isOption ? contractValue * contract.initialMarginRatio : contractValue * contract.minInitialMarginRatio\r\n    let totalMarginHeld = bg(marginHeld) ;\r\n\r\n    //如果当前仓位为正仓用户做空或者当前仓位为负仓用户做多，总仓位相减,取绝对值\r\n    if((this.isPositive && this.userSelectedDirection === 'short') || (this.isNegative && this.userSelectedDirection === 'long')){\r\n      totalMarginHeld = totalMarginHeld.minus(incrementMarginHeld);\r\n      if(totalMarginHeld.lt(otherMarginHeld)){\r\n        totalMarginHeld =  otherMarginHeld.plus(otherMarginHeld.minus(totalMarginHeld).abs())        \r\n      } \r\n      currentSymbolMarginHeld = bg(currentSymbolMarginHeld).minus(incrementMarginHeld).abs().toFixed(2)\r\n    } else {\r\n      totalMarginHeld = bg(marginHeld).plus(incrementMarginHeld)\r\n      if(currentSymbolMarginHeld){\r\n        currentSymbolMarginHeld = bg(currentSymbolMarginHeld).plus(incrementMarginHeld).toFixed(2);\r\n      }\r\n    }\r\n\r\n    const dynBalance = margin && bg(margin).plus(unrealizedPnl).toFixed(2);    \r\n    //总保证金和当前symbol保证金不能超过余额\r\n    totalMarginHeld = totalMarginHeld.gt(dynBalance) ? dynBalance : totalMarginHeld.toFixed(2)\r\n    if(currentSymbolMarginHeld){\r\n      currentSymbolMarginHeld = (+currentSymbolMarginHeld) > (+dynBalance) ? dynBalance : (+currentSymbolMarginHeld).toFixed(2);\r\n    }\r\n    let available = bg(dynBalance).minus(totalMarginHeld).toFixed(2)\r\n    const exchanged = bg(volume).multipliedBy(contract.multiplier).toFixed(4)\r\n    const totalVolume = this.userSelectedDirection === 'short' ? (-this.volumeDisplay + (+position.volume)) : ((+this.volumeDisplay) +  (+position.volume))    \r\n    const totalContractValue = totalVolume * price * contract.multiplier\r\n    const leverage = Math.abs(totalContractValue / (+dynBalance)).toFixed(1);\r\n    available = (+available) < 0 ? 0 : available\r\n    return {\r\n      volume : this.volume,\r\n      dynBalance : dynBalance,\r\n      margin : totalMarginHeld,\r\n      available : available,\r\n      exchanged : exchanged,\r\n      currentSymbolMarginHeld : currentSymbolMarginHeld,\r\n      leverage : leverage\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n  get direction(){    \r\n    // 正仓\r\n    if(this.margin !== ''){\r\n      if((+this.position.volume) > 0) {\r\n        if(Math.abs(this.volume) > Math.abs(this.position.volume)) {\r\n          return 'long'\r\n        } else {\r\n          return 'short'\r\n        }\r\n      } else if((+this.position.volume) < 0){\r\n        //负仓\r\n        if((+this.volume) > Math.abs(+this.position.volume)){\r\n          return 'short'\r\n        } else {\r\n          return 'long'\r\n        }\r\n      }\r\n    }\r\n    return 0\r\n  }\r\n\r\n  //正仓\r\n  get isPositive(){\r\n    return bg(this.position.volume).gt(0);\r\n  }\r\n\r\n  //负仓\r\n  get isNegative(){\r\n    return bg(this.position.volume).isNegative();\r\n  }\r\n\r\n  //资金费率\r\n  async loadFundingRate(wallet,config,isOption){\r\n    if(config){\r\n      const chainId = wallet && wallet.isConnected() && wallet.isSupportChain(isOption) ? wallet.detail.chainId : config.chainId\r\n      if(config){    \r\n        const res = await getFundingRate(chainId,config.pool,config.symbolId).catch(e => console.error('getFundingRate was error,maybe network is wrong'))\r\n        return res;\r\n      }\r\n    }\r\n  }\r\n\r\n  get fundingRateTip(){    \r\n    if(version && version.isV2){\r\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\r\n        if(Intl.locale === 'zh'){\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n ${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol}`        \r\n        } else {\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')}`        \r\n        }\r\n        \r\n      }\r\n    } else {\r\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\r\n        if(Intl.locale === 'zh'){\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} `        \r\n        } else {\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')})`        \r\n        }        \r\n      }\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get optionFundingRateTip(){\r\n    if(this.fundingRate && this.fundingRate.premiumFundingPerSecond && this.config){\r\n      if(Intl.locale === 'zh'){\r\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\r\n      `\\n ${Intl.get('lite','per-second')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.config.bTokenSymbol} `        \r\n      } else {\r\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\r\n      `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.config.bTokenSymbol} ${Intl.get('lite','per-second')}`        \r\n      }\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get initialMarginRatioTip(){\r\n    if(this.contract && this.contract.initialMarginRatioOrigin){\r\n      return `${Intl.get('lite','in-the-money-initial')} = ${this.contract.initialMarginRatioOrigin}` +\r\n      `\\n${Intl.get('lite','out-of-money-initial')} = ${Intl.get('lite','in-max')}(${this.contract.initialMarginRatioOrigin}${Intl.get('lite','otm-ratio-initial')} ${this.contract.initialMarginRatioOrigin / 10})` +\r\n      `\\n\\n${Intl.get('lite','otm-ratio-max')}`\r\n    }\r\n    return ''\r\n  }\r\n  get maintenanceMarginRatioTip(){\r\n    if(this.contract && this.contract.maintenanceMarginRatioOrigin){\r\n      return `${Intl.get('lite','in-the-money-maintenance')} = ${this.contract.maintenanceMarginRatioOrigin}` +\r\n      `\\n${Intl.get('lite','out-of-money-maintenance')} = ${Intl.get('lite','in-max')}(${this.contract.maintenanceMarginRatioOrigin}${Intl.get('lite','otm-ratio-maintenance')} ${this.contract.maintenanceMarginRatioOrigin / 10})` +\r\n      `\\n\\n${Intl.get('lite','otm-ratio-max')}`\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get multiplierTip(){\r\n    if(this.contract && this.config){\r\n      return `${Intl.get('lite','the-notional-value-of')} ${this.contract.multiplier}${this.config.unit}`\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get TransactionFeeTip(){\r\n    if(this.contract && this.config){\r\n        return `${Intl.get('lite','transaction-fee-tip')}${this.config.unit} = ${Intl.get('lite','transaction-fee-tip1')} ${this.contract.feeRatio * 100}%`\r\n    }\r\n    return ''\r\n  }\r\n\r\n}","import { makeObservable, observable, action, computed } from \"mobx\";\r\n\r\nclass Loading {\r\n  isLoading = false\r\n  constructor(){\r\n    makeObservable(this,{\r\n      isLoading : observable,\r\n      setIsLoading : action,\r\n      loading : action,\r\n      isShowMask : computed\r\n    })\r\n  }\r\n\r\n  setIsLoading(isLoading){\r\n    this.isLoading = isLoading\r\n  }\r\n\r\n  loading(){\r\n    this.setIsLoading(true)\r\n  }\r\n\r\n  loaded(){\r\n    this.setIsLoading(false)\r\n  }\r\n\r\n  get isShowMask(){\r\n    return this.isLoading === true;\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default new Loading();","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {HashRouter} from 'react-router-dom'\r\nimport App from './App';\r\nimport './assets/deri.less';\r\nimport { Provider } from 'mobx-react';\r\nimport Wallet from './model/Wallet';\r\nimport Trading from './model/Trading';\r\nimport { DeriEnv } from './lib/web3js/indexV2';\r\nimport version from './model/Version';\r\nimport intl from './model/Intl';\r\nimport loading from './model/Loading';\r\nimport type from './model/Type';\r\n\r\nconst wallet = new Wallet();\r\nconst trading = new Trading()\r\n\r\nif(process.env.NODE_ENV === 'production') {\r\n  DeriEnv.set('prod')\r\n}\r\n// DeriEnv.set('prod')\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider wallet={wallet} type={type}  trading={trading} version={version} intl={intl} loading={loading}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}