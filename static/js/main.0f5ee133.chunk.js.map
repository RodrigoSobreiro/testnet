{"version":3,"sources":["lib/web3js/factory/web3.js","utils/LoadableComponent.js","lib/web3js/config/chain.js","lib/web3js/config/contract.js","lib/web3js/config/rest_server.js","lib/web3js/v2/config/chain.js","lib/web3js/v2/config/contract.js","lib/web3js/utils.js","lib/web3js/v2/utils/convert.js","lib/web3js/v2/utils/network.js","lib/web3js/v2/utils/validate.js","lib/web3js/v2/utils/chain.js","lib/web3js/v2/utils/oracle.js","lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/factory.js","lib/web3js/v2/contract/contract_base.js","lib/web3js/v2/contract/abis.js","lib/web3js/v2/contract/perpetual_pool.js","lib/web3js/v2/contract/perpetual_pool_router.js","lib/web3js/v2/contract/b_token.js","lib/web3js/v2/contract/l_token.js","lib/web3js/v2/contract/p_token.js","lib/web3js/v2/api/mining_query_api.js","lib/web3js/v2/api/mining_transaction_api.js","lib/web3js/v2/api/api_globals.js","lib/web3js/v2/api/trade_query_api.js","lib/web3js/v2/api/trade_history_api.js","lib/web3js/v2/api/trade_transaction_api.js","lib/web3js/api/walletApi.js","lib/web3js/api/lpPoolApi.js","model/Config.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js","lib/web3js/calculation/fundingRate.js","lib/web3js/calculation/index.js","lib/web3js/api/databaseApi.js","lib/web3js/api/tradeHistoryApi.js","lib/web3js/api/restApi.js","lib/web3js/api/contractTransactionApi.js","lib/web3js/indexV2.js","lib/web3js/api/contractTransactionApiV2.js","lib/web3js/api/apiGlobals.js","lib/web3js/api/contractQueryApi.js","lib/polyfill/numberPolyfill.js","App.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Trading.js","model/Version.js","index.js","lib/web3js/config/database.js","utils/utils.js","lib/web3js/api/slpPoolApi.js","lib/web3js/api/clp2PoolApi.js","lib/web3js/api/clpPoolApi.js","lib/web3js/contract/contract.js","lib/web3js/contract/perpetual_pool.js","lib/web3js/contract/bToken.js","lib/web3js/contract/pToken.js","lib/web3js/contract/lToken.js","lib/web3js/contract/database.js","lib/web3js/contract/database_wormhole.js","lib/web3js/contract/database_airdrop.js","lib/web3js/contract/mining_vault_pool.js","lib/web3js/contract/mining_vault_router.js","lib/web3js/contract/slp_pool.js","lib/web3js/contract/clp_pool.js","lib/web3js/contract/clp2_pool.js","lib/web3js/contract/deri.js","lib/web3js/contract/wormhole.js","lib/web3js/factory/contracts.js","lib/web3js/config/env.js"],"names":["metaMaskWeb3","web3Instance","web3","undefined","window","ethereum","Error","Web3","web3Factory","web3InstanceMap","chainId","a","Object","keys","includes","console","log","getChainProviderUrl","providerUrl","providers","HttpProvider","LoadingPage","NProgress","start","done","React","Component","LoadableComponent","component","Loadable","loader","loading","ChainProviderUrls","provider_urls","getChainProviderUrlsConfig","res","filter","i","length","getContractAddressConfig","env","pool","bToken","pToken","lToken","dToken","MiningVault","initialBlock","bTokenSymbol","symbol","unit","version","getSlpContractAddressConfig","getClpContractAddressConfig","getClp2ContractAddressConfig","getLpContractAddressConfig","type","getMiningVaultRouterContractAddress","filteredConfig","MiningVaultRouter","getDeriContractAddressConfig","Deri","Wormhole","getAnnualBlockNumberConfig","1","56","128","3","97","256","getRestServerConfig","getRedisWorkerQueneConfig","getChainProviderUrls","getPoolConfigList","router","bTokenId","symbolId","getFilteredPoolConfigList","poolAddress","toString","poolConfigList","DeriEnv","get","check","getPoolConfig","BigNumber","config","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","bg","value","base","times","repeat","div","max","value1","value2","gte","min","lte","toChecksumAddress","utils","hexToString","hexToUtf8","hexToNumber","hexToNumberString","naturalToDeri","toFixed","naturalWithPercentage","sd","deriToNatural","deriToString","deriToBool","toNumber","hasInvalidArgsValue","args","some","isNaN","checkHttpServerIsAlive","url","fetch","ok","getAliveHttpServer","urls","MAX_VALUE","getNetworkName","poolNetwork","normalizeChainId","getPoolContractAddress","c","p","bTokenAddress","pTokenAddress","lTokenAddress","dTokenAdress","MinningVaultAddress","getMiningVaultContractAddress","pools","getAnnualBlockNumber","blockNumbers","parseInt","getSlpContractAddress","getClp2ContractAddress","getClpContractAddress","getLpContractAddress","getDeriContractAddress","deriAddress","wormholeAddress","getOracleUrl","addSymbolParam","getOracleInfo","retry","json","getBTCUSDPrice","responseJson","price","format","bigNumber","toFormat","replaceAll","validateArgs","every","parseFloat","getOraclePrice","calculateEntryPrice","volume","cost","multiplier","eq","calculatePnl","minus","calculateLiquidationPrice","margin","minMaintenanceMarginRatio","tmp","gt","plus","isOrderValid","marginHeld","liquidity","liquidityUsed","minPoolMarginRatio","newVolume","minMargin","maxVolume","negated","success","error","calculateFundingRate","tradersNetVolume","fundingRateCoefficient","processFundingRate","fundingRate","annualBlockCount","getOrSet","perpetualPoolFactory","instanceMap","address","useInfura","key","PerpetualPool","perpetualPoolRouterFactory","PerpetualPoolRouter","bTokenFactory","BToken","lTokenFactory","LToken","pTokenFactory","PToken","MAX_GAS_AMOUNT","ContractBase","contractAddress","this","method","_init","contract","methods","call","accountAddress","gas","estimateGas","from","tx","self","_transactionReceipt","resolve","reject","eth","getTransactionReceipt","receipt","setTimeout","status","errorMessage","txRaw","to","numberToHex","data","encodeABI","request","params","Promise","_getTransactionReceipt","perpetualPoolAbi","perpetualPoolRouterAbi","bTokenAbi","lTokenAbi","pTokenAbi","contractAbi","bTokenLength","symbolLength","routerAddress","protocolFeeCollector","protocolFeeAccrued","Contract","all","getLengths","getAddresses","getParameters","_call","decimals0","minBToken0Ratio","minInitialMarginRatio","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","protocolFeeCollectRatio","swapperAddress","oracleAddress","decimals","discount","pnl","cumulativePnl","feeRatio","cumulativeFundingRate","tradersNetCost","blockNumber","getBlock","abs","eventName","fromBlock","events","amount","getPastEvents","toBlock","es","e","push","_transact","_balanceOf","allowance","processAsset","lastCumulativePnl","Array","isArray","map","processPosition","lastCumulativeFundingRate","getLiquidityInfo","perpetualPool","getBToken","getAsset","bTokenInfo","lTokenAsset","poolLiquidity","shares","maxRemovableShares","hares","getPoolLiquidity","db","databaseFactory","getValues","catch","err","addLiquidity","perpetualPoolRouter","transaction","removeLiquidity","priceCache","_prices","split","update","set","val","timestamp","Date","now","fundingRateCache","resourceMap","resource","getSpecification","getSymbol","symbolInfo","parameterInfo","bSymbol","getPositionInfo","bTokenConfigList","symbolConfigList","bTokenIdList","symbolIdList","getPosition","getMargins","getPositions","positionInfo","margins","positions","promises","bTokens","reduce","accum","index","symbols","costTotal","averageEntryPrice","unrealizedPnl","liquidationPrice","getWalletBalance","balanceOf","balance","isUnlocked","getEstimatedFee","cache","_getFundingRate","getEstimatedMargin","leverage","getFundingRateCache","poolconfigList","promiseList","bTokenInfoList","fundingRatePerBlock","liquidityUsedInAmount","getFundingRate","fundingRate0","getEstimatedFundingRate","newNetVolume","fundingRate1","getLiquidityUsed","liquidityUsed0","getEstimatedLiquidityUsed","liquidityUsed1","getPoolBTokensBySymbolId","bTokensConfigList","symbolsConfigList","bTokenList","resultList","walletBalance","availableBalance","fetchJson","resp","processTradeEvent","info","txHash","tradeVolume","_getTimeStamp","timeStamp","direction","time","transactionFee","_calculateFee","notional","transactionHash","getTradeHistoryOnline","_getBlockInfo","filters","owner","_getPastEvents","number","result","returnValues","item","unshift","getTradeHistory","tradeHistory","tradeFromBlock","tradeHistoryBlock","trim","tradeHistoryOnline","concat","sort","b","unlock","depositMargin","addMargin","withdrawMargin","removeMargin","tradeWithMargin","orderValidation","trade","closePosition","connectWallet","handleChainChanged","handleAccountChanged","accounts","account","on","location","reload","getUserWalletBalance","walletAddress","getBalance","fromWei","getLpLiquidityInfo","getSlpLiquidityInfo","getClpLiquidityInfo","getClp2LiquidityInfo","addLpLiquidity","addSlpLiquidity","addClpLiquidity","addClp2Liquidity","removeLpLiquidity","removeSlpLiquidity","removeClpLiquidity","removeClp2Liquidity","isLpUnlocked","isSlpUnlocked","isClpUnlocked","isClp2Unlocked","unlockLp","unlockSlp","unlockClp","unlockClp2","getLpWalletBalance","getSlpWalletBalance","getClpWalletBalance","getClp2WalletBalance","Config","makeObservable","observable","setAll","action","current","configs","isV2","total","cur","findIndex","getContractAddressConfig2","require","getPoolConfigListV2","getLiquidityInfo2","getLiquidityInfoV2","getPoolLiquidity2","getPoolLiquidityV2","addLiquidity2","addLiquidityV2","removeLiquidity2","removeLiquidityV2","getSpecification2","getSpecificationV2","getPositionInfo2","getPositionInfoV2","getWalletBalance2","getWalletBalanceV2","isUnlocked2","isUnlockedV2","getEstimatedFee2","getEstimatedFeeV2","getFundingRate2","getFundingRateV2","getEstimatedFundingRate2","getEstimatedFundingRateV2","getLiquidityUsed2","getLiquidityUsedV2","getEstimatedLiquidityUsed2","getEstimatedLiquidityUsedV2","unlock2","unlockV2","depositMargin2","depositMarginV2","withdrawMargin2","withdrawMarginV2","tradeWithMargin2","tradeWithMarginV2","closePosition2","closePositionV2","getTradeHistory2","getTradeHistoryV2","calculateLiquidityUsed","poolMarginRatio","calculateShareValue","lTokenTotalSupply","calculateMaxRemovableShares","lTokenBalance","shareValue","removable","calculateMarginHeld","calculateMaxWithdrawMargin","held","poolMaxVolume","message","getUserInfo","userAddress","deadline","nonce","v","r","s","valid","getUserInfoHarvest","harvestLp","harvestTrade","lp","getUserInfoTotal","getUserInfoAll","userInfo","userInfoHarvest","userInfoTotal","assign","getPoolInfoApy","apy","volume1h","volume24h","getLpPoolInfoApy","apy2","getUserInfoInPool","getUserInfoAllForAirDrop","databaseAirdropFactory","v1","r1","s1","v2","r2","s2","baseToken","processLiquidateEvent","national","getLiquidateHistoryOnline","getHttpBase","getFundingRateCache2","liquidateFromBlock","liquidateHistoryBlock","liquidateHistoryOnline","pPool","maxWithdrawMargin","_transactPool","totalSupply","getStateValues","mintDToken","miningVaultAddress","miningVault","miningVaultPoolFactory","wsOnPromise","ws","event","JSON","parse","sendTradeTxToWorkerQuene","methodCall","wsInstance","send","res2","addSlpLiquidity2","removeSlpLiquidity2","addClpLiquidity2","removeClpLiquidity2","addClp2Liquidity2","removeClp2Liquidity2","_accountAddress","_price","_interval","_update","setInterval","clear","clearInterval","PerpetualPoolParametersCache","_parameters","_ws","io","transports","path","id","parameters","Number","prototype","len","RangeError","Math","pow","round","numberArr","padNum","intNum","deciNum","lastNum","substr","changedInt","replace","num","dotPos","indexOf","need","j","DesktopApp","MobileApp","App","isBrowser","isMobile","Wallet","detail","isConnected","connect","loadWalletBalance","wallet","formatBalance","chainInfo","supported","setDetail","makeAutoObservable","supportV2","computed","supportChain","eqInNumber","Oracle","timeType","kData","paused","listeners","already","setIndex","initWebSocket","WebSocket","withCredentials","emit","setSymbol","setTimeType","obj","toUpperCase","low","high","open","close","time_type","listener","uid","callback","history","el","setPause","Position","spec","position","interval","load","setInfo","History","Trading","userSelectedDirection","setWallet","setConfigs","setConfig","setContract","setPosition","setVolume","setUserSelectedDirection","setFundingRate","setHistory","fundingRateTip","volumeDisplay","configInfo","oracle","contractInfo","historyInfo","defaultConfig","getDefaultConfig","find","loadByConfig","changed","isV1","pause","store","resume","symbolChanged","unsubscribeBars","addListener","loadFundingRate","fromStore","getFromStore","storeConfig","getConfigFromStore","setPaused","curVolume","originVolume","contractValue","dynBalance","available","exchanged","versionKey","Version","setCurrent","versionFromSession","sessionStorage","getItem","notSave","setItem","trading","ReactDOM","render","StrictMode","document","getElementById","getDBProviderUrlsConfig","getDBAddressConfig","useProductionDB","getDBWormholeAddressConfig","getDBAirdropAddressConfig","formatAddress","str1","str2","isLP","isSushiLP","isCakeLP","sessionStorageKey","stringify","slpPool","slpPoolFactory","getLiquidity","bTokenBalance","clp2Pool","clp2PoolFactory","clpPool","clpPoolFactory","isProvider","_estimatedGas","getGasPrice","POOL_ABI","defaultValue","cumuFundingRate","cumuFundingRateBlock","minAddLiquidity","redemptionFeeRatio","priceDelayAllowance","signed","gasPrice","args1","args2","CONTRACT_ABI","BTokenContract","_balance","PTokenContract","lastCumuFundingRate","lastUpdateTimestamp","LTokenContract","DB_CONTRACT_ABI","DatabaseContract","keyArray","updateProviderUrl","DatabaseWormholeContract","DatabaseAirdropContract","MiningVaultPool","SlpPool","ClpPool","Clp2Pool","DeriContract","useProvider","WormholeContract","toChainId","toWormholeAddress","fromChainId","fromWormhole","fromNonce","databaseInstanceMap","database","databaseWormholeFactory","perpetualPoolInstanceMap","bTokenInstanceMap","pTokenInstanceMap","lTokenInstanceMap","mVaultInstanceMap","mVault","slpPoolInstanceMap","clpPoolInstanceMap","clp2PoolInstanceMap","deriFactory","deriInstanceMap","deri","wormholeFactory","wormholeInstanceMap","wormhole","miningVaultRouterFactory","_deriEnv"],"mappings":"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","file":"static/js/main.0f5ee133.chunk.js","sourcesContent":["import Web3 from 'web3';\nimport { getChainProviderUrl } from '../utils';\n\nexport const metaMaskWeb3 = (function () {\n  let web3Instance = null;\n  return () => {\n    if (web3Instance !== null) {\n      return web3Instance;\n    }\n    let web3;\n    if (typeof window.ethereum !== undefined) {\n      web3 = new Web3(window.ethereum);\n    } else {\n      // console.log(\"Please install MetaMask first\")\n      throw new Error('Please install MetaMask first');\n    }\n    web3Instance = web3;\n    return web3;\n  };\n})();\n\nexport const web3Factory = (function () {\n  const web3InstanceMap = {};\n  return async(chainId) => {\n    if (Object.keys(web3InstanceMap).includes(chainId)) {\n      return web3InstanceMap[chainId];\n    }\n    console.log(\n      `==== web3Factory(${chainId}), please caution the access limits ===`\n    );\n    const providerUrl = await getChainProviderUrl(chainId);\n    const web3 = new Web3(new Web3.providers.HttpProvider(providerUrl));\n    web3InstanceMap[chainId] = web3;\n    return web3;\n  };\n})();\n","import React from 'react'\nimport Loadable from 'react-loadable'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\n\nclass LoadingPage extends React.Component {\n  //类似github页面加载的那个加载条\n  componentWillMount(){\n    NProgress.start()\n  }\n  componentWillUnmount(){\n    NProgress.done()\n  }\n  render () {\n    return (\n      <div/>\n    )\n  }\n}\n\nconst LoadableComponent = (component) => {\n  return Loadable({\n    loader: component,\n    loading: ()=><LoadingPage/>\n  })\n}\n\nexport default LoadableComponent","export const ChainProviderUrls = [\n  {\n    provider_urls: [\n      'https://mainnet.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n    ],\n    chainId: '1',\n  },\n  {\n    provider_urls: [\n      'https://bsc-dataseed.binance.org',\n      'https://bsc-dataseed1.defibit.io/',\n      'https://bsc-dataseed1.ninicoin.io/',\n    ],\n    chainId: '56',\n  },\n  {\n    provider_urls: ['https://http-mainnet.hecochain.com'],\n    chainId: '128',\n  },\n  {\n    provider_urls: [\n      'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n    ],\n    chainId: '3',\n  },\n  {\n    provider_urls: [\n      'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n    ],\n    chainId: '42',\n  },\n  {\n    provider_urls: [\n      'https://data-seed-prebsc-2-s3.binance.org:8545/',\n      'https://data-seed-prebsc-1-s1.binance.org:8545/',\n      'https://data-seed-prebsc-2-s1.binance.org:8545/',\n      'https://data-seed-prebsc-1-s2.binance.org:8545/',\n      'https://data-seed-prebsc-2-s2.binance.org:8545/',\n      'https://data-seed-prebsc-1-s3.binance.org:8545/',\n    ],\n    chainId: '97',\n  },\n  {\n    provider_urls: ['https://http-testnet.hecochain.com'],\n    chainId: '256',\n  },\n];\n\nexport const getChainProviderUrlsConfig = (chainId) => {\n  const chainProviderUrls = [\n    {\n      provider_urls: [\n        'https://mainnet.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '1',\n    },\n    {\n      provider_urls: [\n        'https://bsc-dataseed.binance.org',\n        'https://bsc-dataseed1.defibit.io/',\n        'https://bsc-dataseed1.ninicoin.io/',\n      ],\n      chainId: '56',\n    },\n    {\n      provider_urls: ['https://http-mainnet.hecochain.com'],\n      chainId: '128',\n    },\n    {\n      provider_urls: [\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '3',\n    },\n    {\n      provider_urls: [\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '42',\n    },\n    {\n      provider_urls: [\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\n      ],\n      chainId: '97',\n    },\n    {\n      provider_urls: ['https://http-testnet.hecochain.com'],\n      chainId: '256',\n    },\n  ];\n  \n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\n  //console.log('res',res)\n  if (res.length > 0) {\n    return res[0].provider_urls\n  } else {\n    throw new Error(`getChainProviderUrlsConfig: no urls for chainId ${chainId}`)\n  }\n}\n","/** @module config */\n\n/**\n * Get the contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].pool - pool address\n * @returns {string} response[].bToken - base token address\n * @returns {string} response[].pToken - position token address\n * @returns {string} response[].lToken - liquidity token address\n * @returns {string} response[].initialBlock - initial block of the pool\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].symbol - symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getContractAddressConfig = (env = 'dev') => {\n  // production environment\n  if (env === 'prod') {\n    // console.log('!!! production !!!')\n    return [\n      {\n        pool: '0x639a9C2fAe976D089dCcc2ffAE51Ef1dd04B7985',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '5288684',\n        bTokenSymbol: 'BUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '56',\n        version: 'v1',\n      },\n      {\n        pool: '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '6753399',\n        bTokenSymbol: 'BUSD',\n        symbol: 'COIN',\n        unit: 'COIN',\n        chainId: '56',\n        version: 'v1',\n      },\n      {\n        pool: '0x919F97417857781f754e00CCCD9100f78B759818',\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '7475766',\n        bTokenSymbol: 'DERI',\n        symbol: 'iMEME',\n        unit: 'iMEME',\n        chainId: '56',\n        version: 'v1',\n      },\n      {\n        pool: '0x3C2970466635AAeFEd1cfe630D051Fa6D281aEbB',\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '11949433',\n        bTokenSymbol: 'USDT',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        version: 'v1',\n      },\n      {\n        pool: '0x7137cc9f252dc405dadc35F597dA8B32e8653603',\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '11860070',\n        bTokenSymbol: 'BAC',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        version: 'v1',\n      },\n      {\n        pool: '0x9b404BAB12CE0D5039e7313d9e24f4b5c8E8E8e3',\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        initialBlock: '2557914',\n        bTokenSymbol: 'HUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '128',\n        version: 'v1',\n      },\n    ];\n  }\n  // develop environment\n  // console.log('-- test ---')\n  return [\n    {\n      pool: '0x67eE8f0CB17e750219Bd58d433D52ab4B3d8A081',\n      bToken: '0x8F038C454B6E68B2988706a1a5f78dE2C4634097',\n      pToken: '0xad794Adc3Ed6085A79Ba3e2FCD13Df8d33d462Ec',\n      lToken: '0x37732230ac101f59490762Ef73Be43B5E5Ec4949',\n      initialBlock: '9986356',\n      bTokenSymbol: 'USDT',\n      symbol: 'BTCUSD',\n      unit: 'BTC',\n      chainId: '3',\n      version: 'v1',\n    },\n    {\n      pool: '0xFFe402106E8F73F0A44C7350C2b734e048f448f2',\n      bToken: '0xa0354a4bB59657ad9A2b3eeC4f53f7A6Fb171DD1',\n      pToken: '0x5FeF67FD24f37b90E0c96324380F63413dF22f78',\n      lToken: '0xCdDbf76F76B9F95135F5D531fefc344258ff322a',\n      initialBlock: '7796681',\n      bTokenSymbol: 'BUSD',\n      symbol: 'BTCUSD',\n      unit: 'BTC',\n      chainId: '97',\n      version: 'v1',\n    },\n    {\n      pool: '0x02A614844212f71049c469902F7A20F6540a2792',\n      bToken: '0xa0354a4bB59657ad9A2b3eeC4f53f7A6Fb171DD1',\n      pToken: '0x4396025914025F1C8B74788bF7c64f879064FbA6',\n      lToken: '0x2E80928a9eC105FE79cfC4B54c65d185AC3b7E9C',\n      initialBlock: '8108552',\n      bTokenSymbol: 'BUSD',\n      symbol: 'COIN',\n      unit: 'COIN',\n      chainId: '97',\n      version: 'v1',\n    },\n    {\n      pool: '0xE5a4fCd3CE3a824bF15D5FABd390cF44E83AbE8B',\n      bToken: '0x02c9840fD044abFd58E9674ecc232e8b1F323fE8',\n      pToken: '0xfa803C4528A1b9f91DFc5f8b4ff940f9FE4F4635',\n      lToken: '0xbD57300A178075F774b5F0F9f367B9A2912b7b5e',\n      initialBlock: '3663327',\n      bTokenSymbol: 'HUSD',\n      symbol: 'BTCUSD',\n      unit: 'BTC',\n      chainId: '256',\n      version: 'v1',\n    },\n  ];\n};\n\n/**\n * Get the Slp contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].pool - pool address\n * @returns {string} response[].bToken - base token address\n * @returns {string} response[].pToken - position token address\n * @returns {string} response[].lToken - liquidity token address\n * @returns {string} response[].initialBlock - initial block of the pool\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].symbol - symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getSlpContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        bTokenSymbol: 'DERI-USDT SLP',\n        symbol: '--',\n      },\n    ];\n  }\n  console.log('getSlpContractAddressConfig(): no config for dev environment');\n  return [];\n};\n\n/**\n * Get the Clp contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].pool - pool address\n * @returns {string} response[].bToken - base token address\n * @returns {string} response[].lToken - liquidity token address\n * @returns {string} response[].initialBlock - initial block of the pool\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getClpContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool: '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '6894880',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP',\n        symbol: '--',\n      },\n    ];\n  } else {\n    return [\n    ];\n  }\n};\nexport const getClp2ContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '699498',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP ONSEN',\n        symbol: '--',\n      }\n    ]\n  } else {\n    return []\n  }\n}\n\nexport const getLpContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        bTokenSymbol: 'DERI-USDT SLP',\n        symbol: '--',\n        type: 'slp',\n      },\n      {\n        pool: '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '6894880',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP',\n        symbol: '--',\n        type: 'clp',\n      },\n      {\n        pool: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '699498',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP ONSEN',\n        symbol: '--',\n        type: 'clp2',\n      },\n    ];\n  } else {\n    return [\n    ];\n  }\n};\n\nexport const getMiningVaultRouterContractAddress= (chainId) => {\n  const configs = [\n      {\n        MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\n        chainId: '56'\n      }\n    ]\n  const filteredConfig = configs.filter((i) => i.chainId === chainId)\n  if (filteredConfig.length > 0) {\n    return filteredConfig[0].MiningVaultRouter\n  } else {\n    throw new Error(`getMiningVaultRouterAddressConfig: no address for chainId ${chainId}`)\n  }\n\n}\n\n/**\n * Get the Deri contract address list based on the deri environment variable\n * @method\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {Object[]} response\n * @returns {string} response[].Deri - deri address\n * @returns {string} response[].Wormhole - wormhole token address\n * @returns {string} response[].bTokenSymbol - base token symbol\n * @returns {string} response[].chainId - Id of the chain\n */\nexport const getDeriContractAddressConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\n        bTokenSymbol: 'DERI',\n        chainId: '1',\n      },\n      {\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\n        bTokenSymbol: 'DERI',\n        chainId: '56',\n      },\n      {\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\n        bTokenSymbol: 'DERI',\n        chainId: '128',\n      },\n    ];\n  }\n  return [\n    {\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\n      bTokenSymbol: 'DERI',\n      chainId: '3',\n    },\n    {\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\n      bTokenSymbol: 'DERI',\n      chainId: '97',\n    },\n    {\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\n      bTokenSymbol: 'DERI',\n      chainId: '256',\n    },\n  ];\n};\n\nexport const getAnnualBlockNumberConfig = () => ({\n  1: '2367422',\n  56: '10497304',\n  128: '10511369',\n  3: '2367422',\n  97: '10497304',\n  256: '10511369',\n});\n","/**\n * Get REST server config\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {string} server url\n */\nexport const getRestServerConfig = (env = 'dev') => {\n  if (env === 'prod' || env === 'production') {\n    // for production\n    return 'https://api.deri.finance';\n  } else {\n    // for test\n    //return 'https://apitest.deri.finance';\n    //return 'http://localhost:8082';\n    return 'https://alphaapi.deri.finance';\n  }\n};\n\nexport const getRedisWorkerQueneConfig = (env = \"dev\") => {\n  if (env === \"prod\") {\n    return ['trade_tx_quene', 'trade_worker_group']\n  } else {\n    return ['trade_tx_quene_dev', 'trade_worker_group_dev']\n  }\n};\n","export const getChainProviderUrls = (chainId) => {\n  const chainProviderUrls = [\n    {\n      provider_urls: [\n        \"https://mainnet.infura.io/v3/d0e6582644a845ee8d7c3c18683fec06\",\n      ],\n      chainId: '1',\n    },\n    {\n      provider_urls: [\n        'https://bsc-dataseed.binance.org',\n        'https://bsc-dataseed1.defibit.io/',\n        'https://bsc-dataseed1.ninicoin.io/',\n      ],\n      chainId: '56',\n    },\n    {\n      provider_urls: ['https://http-mainnet.hecochain.com'],\n      chainId: '128',\n    },\n    {\n      provider_urls: [\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '3',\n    },\n    {\n      provider_urls: [\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '42',\n    },\n    {\n      provider_urls: [\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\n      ],\n      chainId: '97',\n    },\n    {\n      provider_urls: ['https://http-testnet.hecochain.com'],\n      chainId: '256',\n    },\n  ];\n  \n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\n  //console.log('res',res)\n  if (res.length > 0) {\n    return res[0].provider_urls\n  } else {\n    throw new Error(`getChainProviderUrls: no urls for chainId ${chainId}`)\n  }\n}\n\nexport const getAnnualBlockNumberConfig = () => {\n  return {\n    1: '2367422',\n    56: '10497304',\n    128: '10511369',\n    3: '2367422',\n    97: '10497304',\n    256: '10511369',\n  };\n};\n","import { DeriEnv } from \"../../config\";\n\nexport const getPoolConfigList = (env = 'dev') => {\n  if (env === 'prod') {\n    return [];\n  } else {\n    return [\n      {\n        pool: '0x19EC6281749C06Ed9647134c57257AcA1508bFA8',\n        pToken: '0x5a08BB6a3C0a20471def9e79B27117ebBEdAf0a7',\n        lToken: '0x7743d650D312843C5d34cD860001E64b0C114b19',\n        router: '0x1061b8457A036b4A23C8C2346cC62C701e35E2c4',\n        bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\n        bTokenId: '0',\n        initialBlock: '',\n        bTokenSymbol: 'BUSD',\n        symbol: 'BTCUSD',\n        symbolId: '0',\n        unit: 'BTC',\n        chainId: '97',\n        version: 'v2',\n      },\n      {\n        pool: '0x19EC6281749C06Ed9647134c57257AcA1508bFA8',\n        pToken: '0x5a08BB6a3C0a20471def9e79B27117ebBEdAf0a7',\n        lToken: '0x7743d650D312843C5d34cD860001E64b0C114b19',\n        router: '0x1061b8457A036b4A23C8C2346cC62C701e35E2c4',\n        bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\n        bTokenId: '0',\n        initialBlock: '',\n        bTokenSymbol: 'BUSD',\n        symbol: 'ETHUSD',\n        symbolId: '1',\n        unit: 'ETH',\n        chainId: '97',\n        version: 'v2',\n      },\n      {\n        pool: '0x19EC6281749C06Ed9647134c57257AcA1508bFA8',\n        pToken: '0x5a08BB6a3C0a20471def9e79B27117ebBEdAf0a7',\n        lToken: '0x7743d650D312843C5d34cD860001E64b0C114b19',\n        router: '0x1061b8457A036b4A23C8C2346cC62C701e35E2c4',\n        bToken: '0x5f59b256e411CB222D1790a08De492f4b6dA6E62',\n        bTokenId: '1',\n        initialBlock: '',\n        bTokenSymbol: 'BETH',\n        symbol: 'BTCUSD',\n        symbolId: '0',\n        unit: 'BTC',\n        chainId: '97',\n        version: 'v2',\n      },\n      {\n        pool: '0x19EC6281749C06Ed9647134c57257AcA1508bFA8',\n        pToken: '0x5a08BB6a3C0a20471def9e79B27117ebBEdAf0a7',\n        lToken: '0x7743d650D312843C5d34cD860001E64b0C114b19',\n        router: '0x1061b8457A036b4A23C8C2346cC62C701e35E2c4',\n        bToken: '0x5f59b256e411CB222D1790a08De492f4b6dA6E62',\n        bTokenId: '1',\n        initialBlock: '',\n        bTokenSymbol: 'BETH',\n        symbol: 'ETHUSD',\n        symbolId: '1',\n        unit: 'ETH',\n        chainId: '97',\n        version: 'v2',\n      },\n      {\n        pool: '0x19EC6281749C06Ed9647134c57257AcA1508bFA8',\n        pToken: '0x5a08BB6a3C0a20471def9e79B27117ebBEdAf0a7',\n        lToken: '0x7743d650D312843C5d34cD860001E64b0C114b19',\n        router: '0x1061b8457A036b4A23C8C2346cC62C701e35E2c4',\n        bToken: '0xd2F37BADdB702FF778aA038C63b7068054d93508',\n        bTokenId: '2',\n        initialBlock: '',\n        bTokenSymbol: 'AUTO',\n        symbol: 'BTCUSD',\n        symbolId: '0',\n        unit: 'BTC',\n        chainId: '97',\n        version: 'v2',\n      },\n      {\n        pool: '0x19EC6281749C06Ed9647134c57257AcA1508bFA8',\n        pToken: '0x5a08BB6a3C0a20471def9e79B27117ebBEdAf0a7',\n        lToken: '0x7743d650D312843C5d34cD860001E64b0C114b19',\n        router: '0x1061b8457A036b4A23C8C2346cC62C701e35E2c4',\n        bToken: '0xd2F37BADdB702FF778aA038C63b7068054d93508',\n        bTokenId: '2',\n        initialBlock: '',\n        bTokenSymbol: 'AUTO',\n        symbol: 'ETHUSD',\n        symbolId: '1',\n        unit: 'ETH',\n        chainId: '97',\n        version: 'v2',\n      },\n    ];\n  }\n};\n\nexport const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId) => {\n  bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\n  symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\n  const poolConfigList = getPoolConfigList(DeriEnv.get())\n  const check = bTokenId != null\n    ? symbolId != null\n      ? (i) =>\n          i.pool === poolAddress &&\n          i.bTokenId === bTokenId &&\n          i.symbolId === symbolId\n      : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\n    : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\n  if (poolConfigList.length > 0) {\n    const res = poolConfigList.filter(check)\n    if (res && res.length > 0) {\n      return res\n    }\n  }\n  throw new Error(`Cannot find the pool config by poolAddress(${poolAddress}) bTokenId(${bTokenId}) and symbolId(${symbolId})`)\n}\n\nexport const getPoolConfig = (poolAddress, bTokenId, symbolId) => {\n  const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId)\n  return res[0]\n}","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\nimport {\n  DeriEnv,\n  getChainProviderUrlsConfig,\n  getContractAddressConfig,\n  getSlpContractAddressConfig,\n  getClpContractAddressConfig,\n  getClp2ContractAddressConfig,\n  getLpContractAddressConfig,\n  getAnnualBlockNumberConfig,\n  getDeriContractAddressConfig,\n} from './config';\n\n/** @module utils */\n\nBigNumber.config({\n  DECIMAL_PLACES: 18,\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n  EXPONENTIAL_AT: 256,\n});\n\nexport { BigNumber };\n\n/**\n * Change the value to BigNumber type\n * @func\n * @param {string|number} value - the number that need to changed to BigNumber type\n * @param {string} base - base of the number\n * @returns {BigNumber}\n */\nexport const bg = (value, base = 0) => {\n  if (base === 0) {\n    return BigNumber(value);\n  }\n  if (base > 0) {\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\n  }\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\n};\n\n/**\n * Get the max value\n * @func\n * @param {BigNumber} value1\n * @param {BigNumber} value2\n * @returns {BigNumber}\n */\nexport const max = (value1, value2) => {\n  if (value1.gte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\n/**\n * Get the min value\n * @func\n * @param {BigNumber} value1\n * @param {BigNumber} value2\n * @returns {BigNumber}\n */\nexport const min = (value1, value2) => {\n  if (value1.lte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\n/**\n * Convert the number to a fixed precision\n * @func\n * @param {string} value - the number that need to convert\n * @param {number} num - the number for method toFixed()\n * @returns {string}\n */\nexport const toNatural = (value, num = 0) =>\n  BigNumber(value).toFixed(num).toString();\n\nexport const toHex = (value) => Web3.utils.toHex(value);\n\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\n\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\n\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\n\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\n\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\n\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\n\nexport const hexToNaturalWithPercentage = (value) =>\n  `${bg(hexToNumberString(value), -18)\n    .sd(4)\n    .times(100)\n    .toFixed(4)\n    .toString()}%`;\n\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\n\nexport const naturalWithPercentage = (value) =>\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\n\nexport const deriToNatural = (value) => bg(value, -18);\n\nexport const deriToNaturalWithPercentage = (value) =>\n  `${bg(value, -18).sd(4).times(100).toFixed(4).toString()}%`;\n\nexport const deriToString = (value) => bg(value).toString();\n\nexport const deriToBool = (value) => {\n  if (bg(value).toNumber() === 1) {\n    return true;\n  }\n  return false;\n};\n\nexport const hasInvalidArgsValue = (...args) =>\n  args.some(\n    (i) =>\n      // console.log(bg(i))\n      isNaN(i.toString()) || i.toString() === '0'\n  );\n\n// language\nexport const isObject = (obj) => typeof obj === 'object';\n\nconst np = () => {}\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\n// fetchWithTimeout\nconst fetchWithTimeout = (url, delay=2000, options={}, onTimeout=np) => {\n  const timer = new Promise((resolve) => {\n    setTimeout(resolve, delay, {\n      timeout: true,\n    });\n  });\n  return Promise.race([fetch(url, options), timer]).then((response) => {\n    if (response.timeout) {\n      onTimeout();\n    }\n    return response;\n  });\n};\n\n// http\nexport const checkHttpServerIsAlive = async (url) => {\n  try {\n    //const response = await fetch(url);\n    const response = await fetch(url);\n    if (response.ok) {\n      return true;\n    }\n  } catch (err) {\n    //console.log(err);\n  }\n  return false;\n};\nexport const getAliveHttpServer = async (urls = []) => {\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i];\n    if (await checkHttpServerIsAlive(url)) {\n      return url;\n    }\n  }\n  throw new Error('No alive http server in urls', urls);\n};\n\n// ethereum chain\nexport const MAX_VALUE =\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\nexport const getNetworkName = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let poolNetwork;\n  switch (chainId) {\n    case '1':\n      poolNetwork = 'ethereum';\n      break;\n    case '56':\n      poolNetwork = 'bsc';\n      break;\n    case '128':\n      poolNetwork = 'heco';\n      break;\n    case '3':\n      poolNetwork = 'ropsten';\n      break;\n    case '42':\n      poolNetwork = 'kovan';\n      break;\n    case '97':\n      poolNetwork = 'bsctestnet';\n      break;\n    case '256':\n      poolNetwork = 'hecotestnet';\n      break;\n    default:\n      throw new Error('The networkId is not valid');\n  }\n  return poolNetwork;\n};\n\nexport const getWalletBalanceUnit = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let index;\n  const unitNetworkIdsMap = {\n    ETH: ['1', '3', '42'],\n    BNB: ['56', '97'],\n    HT: ['128', '256'],\n  };\n  const networkIdsArray = Object.values(unitNetworkIdsMap);\n  for (let i = 0; i < networkIdsArray.length; i++) {\n    if (networkIdsArray[i].includes(chainId)) {\n      index = i;\n      break;\n    }\n  }\n  if (index !== undefined) {\n    return Object.keys(unitNetworkIdsMap)[index];\n  }\n  if (chainId === '') {\n    return '';\n  }\n  throw new Error('Invalid Network:', chainId);\n};\n\nexport const getPoolBaseSymbolList = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let result = [];\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  for (let i = 0; i < pools.length; i++) {\n    const { bTokenSymbol, symbol } = pools[i];\n    if (bTokenSymbol && symbol) {\n      result.push(`${symbol}/${bTokenSymbol}`);\n    }\n  }\n  return result;\n};\n\nexport const getPoolBaseTokenAddressObject = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let result = {};\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  for (let i = 0; i < pools.length; i++) {\n    const { bTokenSymbol, symbol, pool } = pools[i];\n    const key = `${symbol}/${bTokenSymbol}`;\n    if (bTokenSymbol && symbol) {\n      result[key] = pool;\n    }\n  }\n  return result;\n};\n\n// export const getPoolContractAddress = (chainId, bTokenSymbol) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getContractAddressConfig(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.bTokenSymbol === bTokenSymbol);\n//   if (pool.length > 0) {\n//     return [\n//       pool[0].pool,\n//       pool[0].bToken,\n//       pool[0].pToken,\n//       pool[0].lToken,\n//       pool[0].dToken,\n//       pool[0].MiningVault,\n//       pool[0].initialBlock,\n//     ];\n//   }\n//   console.log(\n//     `getPoolContractAddress(): contract address is not found: ${chainId} ${bTokenSymbol}`\n//   );\n//   return [];\n// };\n\n// get config by poolAddress\nexport const getPoolContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  // console.log('pool', pool)\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n      bTokenSymbol: pool[0].bTokenSymbol,\n      symbol: pool[0].symbol,\n      unit: pool[0].unit,\n      initialBlock: pool[0].initialBlock,\n    };\n  }\n  console.log(\n    `getPoolContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return [];\n};\n\nexport const getMiningVaultContractAddress = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pools.length > 0) {\n    if (pools[0].MiningVault) {\n      return pools[0].MiningVault;\n    }\n  }\n};\n\n// export const getMiningVaultRouterContractAddress = (chainId) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getContractAddressConfig(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   if (pools.length > 0) {\n//     if (pools[0].MiningVaultRouter) {\n//       return pools[0].MiningVaultRouter;\n//     }\n//   }\n// };\n\nexport const getAnnualBlockNumber = (chainId) => {\n  const blockNumbers = getAnnualBlockNumberConfig();\n  if (blockNumbers[chainId]) {\n    return parseInt(blockNumbers[chainId]);\n  }\n  console.log(`cannot find the annual block number with chainId: ${chainId}`);\n};\n\nexport const getSlpContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getSlpContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n    };\n  }\n  console.log(\n    `getSlpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getClp2ContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getClp2ContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n    };\n  }\n  console.log(\n    `getClp2ContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getClpContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getClpContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      lTokenAddress: pool[0].lToken,\n    };\n  }\n  console.log(\n    `getClpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getLpContractAddress = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getLpContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      lTokenAddress: pool[0].lToken,\n      type: pool[0].type,\n    };\n  }\n  console.log(\n    `getLpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getDeriContractAddress = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pool = getDeriContractAddressConfig(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pool.length > 0) {\n    return {\n      deriAddress: pool[0].Deri,\n      wormholeAddress: pool[0].Wormhole,\n      bTokenSymbol: pool[0].bTokenSymbol,\n    };\n  }\n  console.log(\n    `getDeriContractAddress(): contract address is not found: ${chainId}`\n  );\n  return {};\n};\n\nexport const getOracleUrl = (chainId, poolAddress) => {\n  const env = DeriEnv.get()\n  const { symbol } = getPoolContractAddress(chainId, poolAddress);\n  const addSymbolParam = (url, symbol='BTCUSD') => `${url}?symbol=${symbol}`;\n  if (env === 'prod' || env === 'production') {\n    // for production\n    if (symbol) {\n      if (symbol !== 'BTCUSD') {\n        return addSymbolParam('https://oracle3.deri.finance/price', symbol);\n      } else {\n        return addSymbolParam('https://oracle.deri.finance/price', symbol);\n      }\n    }\n    return 'https://oracle.deri.finance/price';\n  } else {\n    if (symbol) {\n      return addSymbolParam('https://oracle2.deri.finance/price', symbol);\n    }\n    // for test\n    return 'https://oracle2.deri.finance/price';\n  }\n};\n\nexport const getOracleInfo = async (chainId, poolAddress) => {\n  let url = getOracleUrl(chainId, poolAddress);\n  //console.log('oracle url', url);\n  let retry = 5;\n  //let timeout = 1000;\n  let res;\n  while (retry > 0) {\n    res = await fetch(url);\n    //if (res && !res.timeout) {\n    if (res) {\n      break;\n    }\n    //console.log('get oracle info timeout')\n    retry -= 1;\n    //timeout += 800;\n  }\n  if (retry === 0 && !res) {\n    throw new Error(`fetch oracle info error: exceed max retry(5).`);\n  }\n  return await res.json();\n};\n\nexport const getBTCUSDPrice = async (chainId, poolAddress) => {\n  try {\n    const responseJson = await getOracleInfo(chainId, poolAddress)\n    let price = responseJson.price\n    if (!price) {\n      price = '0';\n    }\n    return deriToNatural(responseJson.price).toString();\n  } catch (err) {\n    throw err\n  }\n};\nexport const getOraclePrice = getBTCUSDPrice;\n\nexport const getChainProviderUrl = async(chainId) => {\n  chainId = normalizeChainId(chainId);\n  const urls = getChainProviderUrlsConfig(chainId)\n  if (urls.length > 0) {\n    return await getAliveHttpServer(urls)\n  } else {\n    throw new Error(\n      `Cannot find the chain provider url with chainId: ${chainId}`\n    );\n  }\n};\n\nexport const format = (bigNumber) =>\n  bigNumber.toFormat().replaceAll(',', '').toString();\n\nexport const normalizeChainId = (chainId) => {\n  const chainIds = ['1', '56', '128', '3', '42', '97', '256']\n  let res = chainId ? chainId.toString() : chainId;\n  if (chainId && chainIds.includes(res)) {\n    return res;\n  } else {\n    throw new Error(`invalid chainId: ${chainId}`)\n  }\n};\n\nexport const normalizeAddress = (address) => {\n  if (address && typeof address === 'string' && address.startsWith('0x')) {\n    return Web3.utils.toChecksumAddress(address);\n  } else {\n    throw new Error(`invalid address: ${address}`)\n  }\n};","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\n\n// == bg\nBigNumber.config({\n  DECIMAL_PLACES: 18,\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n  EXPONENTIAL_AT: 256,\n});\n\nexport const bg = (value, base = 0) => {\n  if (base === 0) {\n    return BigNumber(value);\n  }\n  if (base > 0) {\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\n  }\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\n};\n\nexport const max = (value1, value2) => {\n  if (value1.gte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const min = (value1, value2) => {\n  if (value1.lte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const fromWei = (value, unit='ether') => Web3.utils.fromWei(value, unit)\n\nexport const toWei = (value, unit='ether') => Web3.utils.toWei(value, unit)\n\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\n\nexport const toHex = (value) => Web3.utils.toHex(value);\n\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\n\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\n\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\n\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\n\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\n\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\n\nexport const deriToNatural = (value) => bg(value, -18);\n\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\n\n// == convert\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);","// == func\nconst np = () => {}\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\nexport const fetchWithTimeout = (url, options = {}) => {\n  const { timeout = 1200, ...fetchOptions } = options\n\n  return Promise.race([\n    fetch(url, fetchOptions),\n    new Promise((resolve) => {\n      setTimeout(() => {\n        // reject(\n        //   new Error(\n        //     `Request for ${url} timed out after ${timeout} ms`,\n        //   ),\n        // )\n        resolve({timeout:true})\n      }, timeout)\n    }),\n  ])\n}\n\nexport const checkHttpServerIsAlive = async (url) => {\n  try {\n    const response = await fetch(url);\n    if (response.ok) {\n      return true;\n    }\n  } catch (err) {\n    console.log(err);\n  }\n  return false;\n};\n\nexport const getAliveHttpServer = async (urls = []) => {\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i];\n    //console.log(url)\n    if (await checkHttpServerIsAlive(url)) {\n      return url;\n    }\n  }\n  throw new Error('No alive http server in urls', urls);\n};\n","import Web3 from 'web3';\n\n// validate\nexport const normalizeChainId = (chainId) => {\n  const chainIds = ['1', '56', '128', '3', '42', '97', '256'];\n  let res = chainId ? chainId.toString() : chainId;\n  if (chainId && chainIds.includes(res)) {\n    return res;\n  } else {\n    throw new Error(`invalid chainId: ${chainId}`);\n  }\n};\n\nexport const normalizeAddress = (address) => {\n  if (address && typeof address === 'string' && address.startsWith('0x')) {\n    return Web3.utils.toChecksumAddress(address);\n  } else {\n    throw new Error(`invalid address: ${address}`);\n  }\n};\n\nexport const validateArgs = (...args) => args.every((i) => !isNaN(parseFloat(i)));","import {\n  getChainProviderUrls,\n  getAnnualBlockNumberConfig,\n} from '../config';\nimport { normalizeChainId } from './validate';\nimport { getAliveHttpServer } from './network';\n\nexport const getChainProviderUrl = async (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const urls = getChainProviderUrls(chainId);\n  if (urls.length > 0) {\n    return await getAliveHttpServer(urls);\n  } else {\n    throw new Error(\n      `Cannot find the chain provider url with chainId: ${chainId}`\n    );\n  }\n};\nexport const getAnnualBlockNumber = (chainId) => {\n  const blockNumbers = getAnnualBlockNumberConfig();\n  if (blockNumbers[chainId]) {\n    return parseInt(blockNumbers[chainId]);\n  } else {\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\n  }\n};\n","import { getPoolConfig } from '../config';\nimport { DeriEnv } from '../../config'\nimport { deriToNatural } from './convert';\n\nexport const getOracleUrl = (poolAddress, symbolId) => {\n  const env = DeriEnv.get();\n  const { symbol } = getPoolConfig(poolAddress, null, symbolId);\n  const addSymbolParam = (url, symbol = 'BTCUSD') => `${url}?symbol=${symbol}`;\n  if (env === 'prod' || env === 'production') {\n    // for production\n    if (symbol) {\n      if (symbol !== 'BTCUSD') {\n        return addSymbolParam('https://oracle3.deri.finance/price', symbol);\n      } else {\n        return addSymbolParam('https://oracle.deri.finance/price', symbol);\n      }\n    }\n    return 'https://oracle.deri.finance/price';\n  } else {\n    if (symbol === 'ETHUSD') {\n      return addSymbolParam('https://oracle4.deri.finance/price', symbol);\n    } else if (symbol) {\n      return addSymbolParam('https://oracle2.deri.finance/price', symbol);\n    }\n    // for test\n    return 'https://oracle2.deri.finance/price';\n  }\n};\n\nexport const getOracleInfo = async (poolAddress, symbolId) => {\n  let url = getOracleUrl(poolAddress, symbolId);\n  //console.log('oracle url', url);\n  let retry = 3;\n  //let timeout = 1000;\n  let res;\n  while (retry > 0) {\n    res = await fetch(url);\n    //if (res && !res.timeout) {\n    if (res) {\n      break;\n    }\n    //console.log('get oracle info timeout')\n    retry -= 1;\n    //timeout += 800;\n  }\n  if (retry === 0 && !res) {\n    throw new Error(`fetch oracle info error: exceed max retry(5).`);\n  }\n  return await res.json();\n};\n\nexport const getOraclePrice = async (poolAddress, symbolId) => {\n  try {\n    const responseJson = await getOracleInfo(poolAddress, symbolId);\n    let price = responseJson.price;\n    if (!price) {\n      price = '0';\n    }\n    return deriToNatural(responseJson.price).toString();\n  } catch (err) {\n    throw err;\n  }\n};\n","import { bg, max, min } from '../utils';\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return volume.times(price).times(multiplier).minus(cost);\n}\n\n// export const calculateMaxWithdrawMargin = (\n//   price,\n//   volume,\n//   margin,\n//   cost,\n//   multiplier,\n//   minInitialMarginRatio\n// ) => {\n//   if (volume.eq(0)) {\n//     return margin;\n//   }\n//   const held = calculateMarginHeld(\n//     price,\n//     volume,\n//     multiplier,\n//     minInitialMarginRatio\n//   );\n//   const pnl = calculatePnl(price, volume, multiplier, cost);\n//   const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\n//   return withdrawable;\n// };\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = cost.minus(margin).div(volume).div(multiplier);\n  let res = volume.gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  price,\n  margin,\n  marginHeld,\n  liquidity,\n  liquidityUsed,\n  multiplier,\n  minPoolMarginRatio,\n  newVolume,\n) => {\n  const minMargin = marginHeld;\n  const maxVolume = liquidity.minus(liquidityUsed)\n    .div(minPoolMarginRatio)\n    .div(price)\n    .div(multiplier);\n  if (margin.gte(minMargin)) {\n    if (\n      newVolume.lte(maxVolume) &&\n      newVolume.gte(maxVolume.negated())\n    ) {\n      return { success: true };\n    }\n    return { success: false, error: 'Pool insufficient liquidity' };\n  }\n  return { success: false, error: 'Trader insufficient margin' };\n};\n","import { bg, getAnnualBlockNumber, validateArgs } from '../utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio\n    )\n  ) {\n    return bg(tradersNetVolume)\n      .times(price)\n      .times(multiplier)\n      .times(poolMarginRatio)\n      .div(liquidity)\n      .abs();\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio,\n    ];\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\n  }\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    )\n  ) {\n    return bg(tradersNetVolume)\n      .times(price)\n      .times(price)\n      .times(multiplier)\n      .times(multiplier)\n      .times(fundingRateCoefficient)\n      .div(liquidity);\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    ];\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\n  }\n};\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getAnnualBlockNumber(chainId);\n  //console.log(annualBlockCount);\n  return bg(fundingRate).times(annualBlockCount);\n};\n","import Web3 from 'web3';\nimport {\n  PerpetualPool,\n  PerpetualPoolRouter,\n  BToken,\n  LToken,\n  PToken,\n} from './contract';\nimport { getChainProviderUrl } from './utils';\n\nexport const metaMaskWeb3 = (function () {\n  let web3Instance = null;\n  return () => {\n    if (web3Instance !== null) {\n      return web3Instance;\n    }\n    if (typeof window.ethereum !== undefined) {\n      web3Instance = new Web3(window.ethereum);\n      return web3Instance;\n    } else {\n      // console.log(\"Please install MetaMask first\")\n      throw new Error('Please install MetaMask first');\n    }\n  };\n})();\n\nexport const web3Factory = (function () {\n  const web3InstanceMap = {};\n  return {\n    async getOrSet(chainId) {\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\n        return web3InstanceMap[chainId];\n      }\n      console.log(\n        `==== web3Factory(${chainId}), please caution the access limits ===`\n      );\n      const providerUrl = await getChainProviderUrl(chainId);\n      web3InstanceMap[chainId] = new Web3(\n        new Web3.providers.HttpProvider(providerUrl)\n      );\n      return web3InstanceMap[chainId];\n    },\n  };\n})();\n\nexport const perpetualPoolFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, useInfura) => {\n    const key = useInfura ? `${address}.useInfura` : address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      instanceMap[key] = new PerpetualPool(chainId, address, useInfura);\n      return instanceMap[key];\n    }\n  };\n})();\n\nexport const perpetualPoolRouterFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, useInfura) => {\n    const key = useInfura ? `${address}.useInfura` : address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      instanceMap[key] = new PerpetualPoolRouter(chainId, address, useInfura);\n      return instanceMap[key];\n    }\n  };\n})();\n\nexport const bTokenFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, useInfura) => {\n    const key = useInfura ? `${address}.useInfura` : address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      instanceMap[key] = new BToken(chainId, address, useInfura);\n      return instanceMap[key];\n    }\n  };\n})();\n\nexport const lTokenFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, useInfura) => {\n    const key = useInfura ? `${address}.useInfura` : address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      instanceMap[key] = new LToken(chainId, address, useInfura);\n      return instanceMap[key];\n    }\n  };\n})();\n\nexport const pTokenFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, useInfura) => {\n    const key = useInfura ? `${address}.useInfura` : address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      instanceMap[key] = new PToken(chainId, address, useInfura);\n      return instanceMap[key];\n    }\n  };\n})();\n\n","import { metaMaskWeb3, web3Factory } from '../factory';\nimport { numberToHex } from '../utils';\n\nconst MAX_GAS_AMOUNT = 532731;\n\nexport class ContractBase {\n  constructor(chainId, contractAddress, useInfura) {\n    this.chainId = chainId;\n    this.contractAddress = contractAddress;\n    this.useInfura = useInfura\n  }\n\n  async _init() {\n    if (this.useInfura) {\n      this.web3 = await web3Factory.getOrSet(this.chainId);\n    } else {\n      this.web3 = metaMaskWeb3();\n    }\n  }\n\n  async _call(method, args = []) {\n    let res\n    let retry = 2\n    while (retry > 0) {\n      try {\n        await this._init()\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch(err) {\n        retry -= 1\n        this.web3 = null\n        console.log(err)\n      }\n    }\n    if (retry === 0 && !res) {\n      console.log(`method call '${method} ${args}' failed with max retry 3.`)\n    }\n    return res\n  }\n\n  async _estimatedGas(method, args = [], accountAddress) {\n    await this._init()\n    let gas = 0;\n    for (let i = 0; i < 20; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (err) {\n      }\n    }\n    if (gas == 0) gas = MAX_GAS_AMOUNT;\n    if (gas > MAX_GAS_AMOUNT) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt === null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _transact(method, args, accountAddress) {\n    await this._init()\n    //const gas = await this._estimatedGas(method, args, accountAddress)\n    console.log('account', accountAddress)\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        // gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods[method](...args).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\n  }\n\n}\n","\n/* eslint-disable */\nexport const perpetualPoolAbi = [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256[9]\",\n          \"name\": \"parameters\",\n          \"type\": \"uint256[9]\"\n        },\n        {\n          \"internalType\": \"address[4]\",\n          \"name\": \"addresses\",\n          \"type\": \"address[4]\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"AddLiquidity\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"AddMargin\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"liquidator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"reward\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Liquidate\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"collector\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"ProtocolFeeCollection\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"RemoveLiquidity\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"RemoveMargin\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"int256\",\n          \"name\": \"tradeVolume\",\n          \"type\": \"int256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"price\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Trade\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"bTokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"swapperAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"oracleAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"decimals\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"discount\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"price\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"liquidity\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"pnl\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"cumulativePnl\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPool.BTokenInfo\",\n          \"name\": \"info\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"name\": \"addBToken\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"blength\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"slength\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"addLiquidity\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"addMargin\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"string\",\n              \"name\": \"symbol\",\n              \"type\": \"string\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"oracleAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"multiplier\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"feeRatio\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"fundingRateCoefficient\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"price\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"cumulativeFundingRate\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"tradersNetVolume\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"tradersNetCost\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPool.SymbolInfo\",\n          \"name\": \"info\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"name\": \"addSymbol\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"targetPool\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"approvePoolMigration\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"collectProtocolFee\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"sourcePool\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"executePoolMigration\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getAddresses\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"lTokenAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"pTokenAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"routerAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"protocolFeeCollector\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getBToken\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"bTokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"swapperAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"oracleAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"decimals\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"discount\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"price\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"liquidity\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"pnl\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"cumulativePnl\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPool.BTokenInfo\",\n          \"name\": \"\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getBTokenOracle\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getLengths\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getParameters\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"decimals0\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"minBToken0Ratio\",\n          \"type\": \"int256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"minPoolMarginRatio\",\n          \"type\": \"int256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"minInitialMarginRatio\",\n          \"type\": \"int256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"minMaintenanceMarginRatio\",\n          \"type\": \"int256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"minLiquidationReward\",\n          \"type\": \"int256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"maxLiquidationReward\",\n          \"type\": \"int256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"liquidationCutRatio\",\n          \"type\": \"int256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"protocolFeeCollectRatio\",\n          \"type\": \"int256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getProtocolFeeAccrued\",\n      \"outputs\": [\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"\",\n          \"type\": \"int256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getSymbol\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"string\",\n              \"name\": \"symbol\",\n              \"type\": \"string\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"oracleAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"multiplier\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"feeRatio\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"fundingRateCoefficient\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"price\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"cumulativeFundingRate\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"tradersNetVolume\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"tradersNetCost\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPool.SymbolInfo\",\n          \"name\": \"\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getSymbolOracle\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"liquidator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"blength\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"slength\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"liquidate\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"blength\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"slength\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"removeLiquidity\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"blength\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"slength\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"removeMargin\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"swapperAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"oracleAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"discount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"setBTokenParameters\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"oracleAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"feeRatio\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"fundingRateCoefficient\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"setSymbolParameters\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"tradeVolume\",\n          \"type\": \"int256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"blength\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"slength\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"trade\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]\nexport const perpetualPoolRouterAbi = [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"lTokenAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"pTokenAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"liquidatorQualifierAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"migrationTimestamp\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"address\",\n          \"name\": \"source\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"address\",\n          \"name\": \"target\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"ExecuteMigration\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"migrationTimestamp\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"address\",\n          \"name\": \"source\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"address\",\n          \"name\": \"target\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"PrepareMigration\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"bTokenAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"swapperAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"oracleAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"discount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"addBToken\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"addLiquidity\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"symbolId\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"timestamp\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"price\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"v\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"r\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"s\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n          \"name\": \"infos\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"name\": \"addLiquidityWithPrices\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"addMargin\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"symbolId\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"timestamp\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"price\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"v\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"r\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"s\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n          \"name\": \"infos\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"name\": \"addMarginWithPrices\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"symbol\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"oracleAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"multiplier\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"feeRatio\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"fundingRateCoefficient\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"addSymbol\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"approveMigration\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"claimNewController\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"controller\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"sourceRouter\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"executeMigration\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"liquidate\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"symbolId\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"timestamp\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"price\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"v\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"r\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"s\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n          \"name\": \"infos\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"name\": \"liquidateWithPrices\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"liquidatorQualifier\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"migrationDestination\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"migrationTimestamp\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"pool\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"target\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"graceDays\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"prepareMigration\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"removeLiquidity\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"symbolId\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"timestamp\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"price\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"v\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"r\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"s\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n          \"name\": \"infos\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"name\": \"removeLiquidityWithPrices\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"removeMargin\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bAmount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"symbolId\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"timestamp\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"price\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"v\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"r\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"s\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n          \"name\": \"infos\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"name\": \"removeMarginWithPrices\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"swapperAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"oracleAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"discount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"setBTokenParameters\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"qualifierAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"setLiquidatorQualifier\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"newController\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"setNewController\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"poolAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"setPool\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"oracleAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"feeRatio\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"fundingRateCoefficient\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"setSymbolParameters\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"tradeVolume\",\n          \"type\": \"int256\"\n        }\n      ],\n      \"name\": \"trade\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"tradeVolume\",\n          \"type\": \"int256\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"symbolId\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"timestamp\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"price\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"v\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"r\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"s\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n          \"name\": \"infos\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"name\": \"tradeWithPrices\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]\nexport const bTokenAbi = [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"name_\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"symbol_\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"spender\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Approval\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Transfer\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"spender\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"allowance\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"spender\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"approve\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"account\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"balanceOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"decimals\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint8\",\n          \"name\": \"\",\n          \"type\": \"uint8\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"name\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"symbol\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"totalSupply\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transfer\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transferFrom\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]\nexport const lTokenAbi = [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"name_\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"symbol_\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"numBTokens_\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Approval\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"ApprovalForAll\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Transfer\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"int256\",\n          \"name\": \"liquidity\",\n          \"type\": \"int256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"int256\",\n          \"name\": \"pnl\",\n          \"type\": \"int256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"int256\",\n          \"name\": \"lastCumulativePnl\",\n          \"type\": \"int256\"\n        }\n      ],\n      \"name\": \"UpdateAsset\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"approve\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"balanceOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"burn\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"exists\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getApproved\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getAsset\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"liquidity\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"pnl\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"lastCumulativePnl\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct ILToken.Asset\",\n          \"name\": \"\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"getAssets\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"liquidity\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"pnl\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"lastCumulativePnl\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct ILToken.Asset[]\",\n          \"name\": \"\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"isApprovedForAll\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"mint\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"name\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"numBTokens\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"ownerOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"pool\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"data\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"setApprovalForAll\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"num\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"setNumBTokens\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"newPool\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"setPool\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes4\",\n          \"name\": \"interfaceId\",\n          \"type\": \"bytes4\"\n        }\n      ],\n      \"name\": \"supportsInterface\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"symbol\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"totalMinted\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"totalSupply\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"liquidity\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"pnl\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"lastCumulativePnl\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct ILToken.Asset\",\n          \"name\": \"asset\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"name\": \"updateAsset\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]\nexport const pTokenAbi = [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"name_\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"symbol_\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"numSymbols_\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"numBTokens_\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Approval\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"ApprovalForAll\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Transfer\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"int256\",\n          \"name\": \"amount\",\n          \"type\": \"int256\"\n        }\n      ],\n      \"name\": \"UpdateMargin\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"int256\",\n          \"name\": \"volume\",\n          \"type\": \"int256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"int256\",\n          \"name\": \"cost\",\n          \"type\": \"int256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"int256\",\n          \"name\": \"lastCumulativeFundingRate\",\n          \"type\": \"int256\"\n        }\n      ],\n      \"name\": \"UpdatePosition\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"approve\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"balanceOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"burn\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"exists\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getApproved\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getMargin\",\n      \"outputs\": [\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"\",\n          \"type\": \"int256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"getMargins\",\n      \"outputs\": [\n        {\n          \"internalType\": \"int256[]\",\n          \"name\": \"\",\n          \"type\": \"int256[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getPosition\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"volume\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"cost\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"lastCumulativeFundingRate\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct IPToken.Position\",\n          \"name\": \"\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"getPositions\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"volume\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"cost\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"lastCumulativeFundingRate\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct IPToken.Position[]\",\n          \"name\": \"\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"isApprovedForAll\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"mint\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"name\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"numBTokens\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"numSymbols\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"ownerOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"pool\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"data\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"setApprovalForAll\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"num\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"setNumBTokens\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"num\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"setNumSymbols\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"newPool\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"setPool\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes4\",\n          \"name\": \"interfaceId\",\n          \"type\": \"bytes4\"\n        }\n      ],\n      \"name\": \"supportsInterface\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"symbol\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"totalMinted\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"totalSupply\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bTokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"amount\",\n          \"type\": \"int256\"\n        }\n      ],\n      \"name\": \"updateMargin\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"int256[]\",\n          \"name\": \"margins\",\n          \"type\": \"int256[]\"\n        }\n      ],\n      \"name\": \"updateMargins\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"symbolId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"volume\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"cost\",\n              \"type\": \"int256\"\n            },\n            {\n              \"internalType\": \"int256\",\n              \"name\": \"lastCumulativeFundingRate\",\n              \"type\": \"int256\"\n            }\n          ],\n          \"internalType\": \"struct IPToken.Position\",\n          \"name\": \"position\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"name\": \"updatePosition\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]\n/* eslint-disable */","import { ContractBase } from './contract_base'\nimport { perpetualPoolAbi } from './abis';\nimport { deriToNatural, bg } from '../utils'\n\nexport class PerpetualPool extends ContractBase {\n  constructor(chainId, contractAddress, useInfura=false) {\n    super(chainId, contractAddress, useInfura)\n    this.contractAbi = perpetualPoolAbi\n\n    this.bTokenLength = 0\n    this.symbolLength = 0\n\n    this.lTokenAddress = ''\n    this.pTokenAddress = ''\n    this.routerAddress = ''\n    this.protocolFeeCollector = ''\n\n    this.protocolFeeAccrued = 0\n  }\n  async _init() {\n    if (!this.web3) {\n      await super._init()\n      this.contract = new this.web3.eth.Contract(this.contractAbi, this.contractAddress)\n    }\n  }\n\n  async _update() {\n    await Promise.all([\n      this.getLengths(),\n      this.getAddresses(),\n      this.getParameters(),\n    ]);\n  }\n\n  async getLengths() {\n    try {\n      const res = await this._call('getLengths')\n      //console.log(res[0])\n      if (res[0] && res[1]) {\n        this.bTokenLength = parseInt(res[0])\n        this.symbolLength = parseInt(res[1])\n      }\n    } catch(err) {\n      throw new Error(`PerpetualPool#_getLength error: ${err}`)\n    }\n  }\n  async getAddresses() {\n    try {\n      const res = await this._call('getAddresses')\n      this.lTokenAddress = res.lTokenAddress\n      this.pTokenAddress = res.pTokenAddress\n      this.routerAddress = res.routerAddress\n      this.protocolFeeCollector = res.protocolFeeCollector\n    } catch (err) {\n      throw new Error(`PerpetualPool#_getAddress error: ${err}`)\n    }\n  }\n  async getParameters() {\n    const res = await this._call('getParameters')\n    return {\n      decimals0: res.decimals0,\n      minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getProtocolFeeAccrued() {\n    const res =  await this._call('getProtocolFeeAccrued')\n    this.protocolFeeAccrued = deriToNatural(res)\n  }\n  async getBToken(bTokenId) {\n    try {\n      //bTokenId = parseInt(bTokenId)\n      const res = await this._call('getBToken', [bTokenId]);\n      return {\n        bTokenAddress: res.bTokenAddress,\n        swapperAddress: res.bTokenAddress,\n        oracleAddress: res.oracleAddress,\n        decimals: res.decimals,\n        discount: deriToNatural(res.discount),\n        price: deriToNatural(res.price),\n        liquidity: deriToNatural(res.liquidity),\n        pnl: deriToNatural(res.pnl),\n        cumulativePnl: deriToNatural(res.cumulativePnl),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getBToken error: ${err}`);\n    }\n  }\n  async getBTokenOracle(bTokenId) {\n    //bTokenId = parseInt(bTokenId)\n    return await this._call('getBTokenOracle', [bTokenId])\n  }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res =  await this._call('getSymbol', [symbolId])\n      return {\n        symbol: res.symbol,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n  async getSymbolOracle(symbolId) {\n    //symbolId = parseInt(symbolId)\n    return await this._call('getSymbolOracle', [symbolId])\n  }\n\n  // trade history query methods\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    let amount\n    if (['56', '97'].includes(this.chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }\n}","import { ContractBase } from './contract_base'\nimport { perpetualPoolRouterAbi} from './abis';\nimport { naturalToDeri, bg } from '../utils'\n\nexport class PerpetualPoolRouter extends ContractBase {\n  constructor(chainId, contractAddress, useInfura=false) {\n    super(chainId, contractAddress, useInfura)\n    this.contractAbi = perpetualPoolRouterAbi\n    this.poolAddress = ''\n  }\n  async _init() {\n    if (!this.web3) {\n      await super._init()\n      this.contract = new this.web3.eth.Contract(this.contractAbi, this.contractAddress)\n    }\n  }\n\n  // === query ===\n  async pool() {\n    this.poolAddress = await this._call('pool');\n    return this.poolAddress\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidity',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeLiquidity(accountAddress, bTokenId, amount) {\n    return await this._transact(\n      'removeLiquidity',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async addMargin(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMargin',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'removeMargin',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async trade(accountAddress, symbolId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  // async liquidate(acountAddress) {\n  //   if (!this.poolAddress) {\n  //     await this.pool()\n  //   }\n  //   return await this._transact(\n  //     'liquidate',\n  //     [accountAddress],\n  //     accountAddress\n  //   );\n  // }\n\n}","import { ContractBase } from './contract_base'\nimport { bTokenAbi } from './abis';\nimport { deriToNatural, bg } from '../utils'\n\nexport const MAX_VALUE =\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n\nexport class BToken extends ContractBase {\n  constructor(chainId, contractAddress, useInfura=false) {\n    super(chainId, contractAddress, useInfura);\n    this.contractAbi = bTokenAbi;\n  }\n  async _init() {\n    if (!this.web3) {\n      await super._init();\n      this.contract = new this.web3.eth.Contract(\n        this.contractAbi,\n        this.contractAddress\n      );\n    }\n  }\n\n  // === query ===\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n  async _balanceOf(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n\n  async isUnlocked(accountAddress, poolAddress) {\n    const allowance = await this._call('allowance', [\n      accountAddress,\n      poolAddress,\n    ]);\n    return bg(allowance).gt(0);\n  }\n\n  // === transaction ===\n  async unlock(accountAddress, poolAddress) {\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_VALUE],\n      accountAddress\n    );\n  }\n\n  // async transfer() {\n  // call transfer\n  // }\n}","import { ContractBase } from './contract_base'\nimport { bTokenAbi, lTokenAbi } from './abis';\nimport { deriToNatural, bg } from '../utils'\n\nconst processAsset = (res) => {\n  return {\n    liquidity: deriToNatural(res[0]),\n    pnl: deriToNatural(res[1]),\n    lastCumulativePnl: deriToNatural(res[2]),\n  }\n}\nexport class LToken extends ContractBase {\n  constructor(chainId, contractAddress, useInfura=false) {\n    super(chainId, contractAddress, useInfura)\n    this.contractAbi = lTokenAbi\n  }\n  async _init() {\n    if (!this.web3) {\n      await super._init()\n      this.contract = new this.web3.eth.Contract(this.contractAbi, this.contractAddress)\n    }\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getAsset(accountAddress, bTokenId) {\n    const res = await this._call('getAsset', [accountAddress, bTokenId]);\n    if (Array.isArray(res)) {\n      return processAsset(res)\n    } else {\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress} ${bTokenId})`)\n    }\n  }\n  async getAssets(accountAddress) {\n    const res = await this._call('getAssets', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map(i => processAsset(i))\n    } else {\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress})`)\n    }\n  }\n\n  // === transaction ===\n}","import { ContractBase } from './contract_base'\nimport { pTokenAbi } from './abis';\nimport { deriToNatural, bg } from '../utils'\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PToken extends ContractBase {\n  constructor(chainId, contractAddress, useInfura=false) {\n    super(chainId, contractAddress, useInfura)\n    this.contractAbi = pTokenAbi\n  }\n  async _init() {\n    if (!this.web3) {\n      await super._init()\n      this.contract = new this.web3.eth.Contract(this.contractAbi, this.contractAddress)\n    }\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getMargin(accountAddress, symbolId) {\n    const res = await this._call('getMargin', [accountAddress, symbolId]);\n    return deriToNatural(res)\n  }\n  async getMargins(accountAddress) {\n    const res = await this._call('getMargins', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => deriToNatural(i))\n    }\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getPositions(accountAddress) {\n    const res = await this._call('getPositions', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => processPosition(i))\n    }\n  }\n\n  // === transaction ===\n}","import { lTokenFactory, perpetualPoolFactory } from '../factory'\nimport { getPoolConfig } from '../config'\nimport { deriToNatural } from '../utils'\nimport { databaseFactory } from '../../factory/contracts';\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n  useInfura,\n) => {\n  try {\n    const {lToken:lTokenAddress} = getPoolConfig(poolAddress, bTokenId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress, useInfura)\n    const lToken = lTokenFactory(chainId, lTokenAddress, useInfura);\n\n    const [bTokenInfo, lTokenAsset] = await Promise.all([\n      perpetualPool.getBToken(bTokenId),\n      lToken.getAsset(accountAddress, bTokenId),\n    ])\n    const { liquidity: poolLiquidity } = bTokenInfo;\n    const { liquidity } = lTokenAsset\n    return {\n      //totalSupply: lTokenTotalSupply.toString(),\n      poolLiquidity: poolLiquidity.toString(),\n      // shares: liquidity.toString(),\n      // shareValue: '1',\n      // maxRemovableShares: liquidity.toString()\n      shares: liquidity.toString(),\n      maxRemovableShares: liquidity.toString()\n    };\n  } catch (err) {\n    console.log(err)\n  }\n  return {\n    poolLiquidity: '',\n    hares: '',\n    maxRemovableShares: '',\n  };\n};\n\nexport const getPoolLiquidity = async (chainId, poolAddress, bTokenId, useInfura=false) => {\n  // const perpetualPool = perpetualPoolFactory(chainId, poolAddress, useInfura)\n  // const res = await perpetualPool.getBToken(bTokenId)\n  // return res.liquidity.toString()\n\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.${bTokenId}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol:'',\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n  return {\n    liquidity: '',\n    symbol:'',\n  };\n};","import { getPoolConfig } from '../config'\nimport { perpetualPoolRouterFactory } from '../factory'\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const {router:routerAddress} = getPoolConfig(poolAddress, bTokenId)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   let res\n   try {\n     const tx = await perpetualPoolRouter.addLiquidity(accountAddress, bTokenId, amount);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err};\n   }\n   return res\n}\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const {router:routerAddress} = getPoolConfig(poolAddress, bTokenId)\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   let res\n   try {\n     const tx = await perpetualPoolRouter.removeLiquidity(accountAddress, bTokenId, amount);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err};\n   }\n   return res\n}","export const priceCache = (function(){\n  let _prices = {}\n  return {\n    get(poolAddress, symbolId) {\n      const key = `${poolAddress}.${symbolId}`\n      if (Object.keys(_prices).includes(key)) {\n        const [price, timestamp] = _prices[key].split('|')\n        //if (parseInt(timestamp) - Date.now() < 10000) {\n          return price\n        //}\n      }\n      console.log('please init priceCache first')\n    },\n    update(chainId, poolAddress, symbolId) {\n      // place holder\n    },\n    set(poolAddress, symbolId, val) {\n      if (!isNaN(parseFloat(val))) {\n        const timestamp = Date.now().toString()\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\n      }\n    }\n  }\n})()\n\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress, symbolId) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, symbolId, resource) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();","import { perpetualPoolFactory, bTokenFactory, pTokenFactory } from '../factory';\nimport { getFilteredPoolConfigList, getPoolConfig} from '../config'\nimport {\n  calculateEntryPrice,\n  calculatePnl,\n  calculateMarginHeld,\n  calculateLiquidationPrice,\n  calculateLiquidityUsed,\n  calculateFundingRate,\n  processFundingRate,\n} from '../calculation';\nimport { getOraclePrice, bg, min, max } from '../utils'\nimport { fundingRateCache, priceCache } from '../api/api_globals';\n\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  bTokenId,\n  symbolId,\n  useInfura,\n) => {\n  try {\n    const {symbol, bTokenSymbol } = getPoolConfig(poolAddress, bTokenId, symbolId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress, useInfura);\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo\n    return {\n      symbol: symbol,\n      bSymbol: bTokenSymbol,\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      //minAddLiquidity: minAddLiquidity.toString(),\n      //redemptionFeeRatio: redemptionFeeRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n    }\n  } catch (err) {\n    console.log(err)\n  }\n  return {\n    symbol: '',\n    bSymbol: '',\n    multiplier: '',\n    feeRatio: '',\n    fundingRateCoefficient: '',\n    minPoolMarginRatio: '',\n    minInitialMarginRatio: '',\n    minMaintenanceMarginRatio: '',\n    minLiquidationReward: '',\n    maxLiquidationReward: '',\n    liquidationCutRatio: '',\n    protocolFeeCollectRatio: '',\n  }\n};\n\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId, useInfura) => {\n  try {\n    const bTokenConfigList = getFilteredPoolConfigList(poolAddress, null, symbolId)\n    const symbolConfigList = getFilteredPoolConfigList(poolAddress, '0')\n    const bTokenIdList = bTokenConfigList.map((i) => i.bTokenId)\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\n    //console.log('bTokenList', bTokenList)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress, useInfura);\n    const {pToken: pTokenAddress } = getPoolConfig(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress, useInfura);\n    const [price, symbolInfo, parameterInfo, positionInfo, margins, positions ] = await Promise.all([\n      getOraclePrice(poolAddress, symbolId),\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n      pToken.getPosition(accountAddress, symbolId),\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      //pToken.getMargin(accountAddress, symbolId),\n    ])\n    priceCache.set(poolAddress, symbolId, price)\n    const { volume, cost } = positionInfo\n    const { multiplier } = symbolInfo\n    const {\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n    } = parameterInfo\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    const marginHeld = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n    }, bg(0))\n    //console.log('margin', margin.toString(), marginHeld.toString())\n\n    const costTotal = positions.reduce((accum, a) => {\n      //console.log(index, a.cost.toString())\n      return accum.plus(bg(a.cost))\n    }, bg(0))\n    //console.log('cost', costTotal.toString())\n  return {\n      volume: volume.toString(),\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n      margin: margin.toString(),\n      marginHeld: marginHeld.toString(),\n      // marginHeld: calculateMarginHeld(\n      //   price,\n      //   volume,\n      //   multiplier,\n      //   minInitialMarginRatio\n      // ).toString(),\n      unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        costTotal,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n    };\n  } catch(err) {\n    console.log(err)\n  }\n  return {\n    volume: '',\n    averageEntryPrice: '',\n    margin: '',\n    marginHeld: '',\n    unrealizedPnl: '',\n    liquidationPrice: '',\n  };\n}\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n  useInfura,\n) => {\n  const { bToken: bTokenAddress } = getPoolConfig(poolAddress, bTokenId);\n  const balance = await bTokenFactory(chainId, bTokenAddress, useInfura).balanceOf(accountAddress)\n  return balance.toString()\n}\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId, useInfura) => { \n  const { bToken: bTokenAddress } = getPoolConfig(poolAddress, bTokenId);\n  const bToken = await bTokenFactory(chainId, bTokenAddress, useInfura)\n  return bToken.isUnlocked(accountAddress, poolAddress)\n}\n\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId, useInfura) => {\n  let price = priceCache.get(poolAddress, symbolId)\n  if (!price) {\n    price = await getOraclePrice(poolAddress, symbolId)\n    priceCache.set(poolAddress, symbolId, price)\n  }\n  let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n  if (!cache || !cache.multiplier) {\n    await _getFundingRate(chainId, poolAddress, symbolId, useInfura)\n    cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n  }\n  const { multiplier, feeRatio } = cache;\n  //console.log(volume, price, multiplier, feeRatio)\n  return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n}\n\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n  useInfura,\n) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress, useInfura);\n  const [price, symbolInfo ] = await Promise.all([\n    getOraclePrice(poolAddress, symbolId),\n    perpetualPool.getSymbol(symbolId),\n  ])\n  priceCache.set(poolAddress, symbolId, price)\n  const {multiplier} = symbolInfo\n  //console.log('m',multiplier.toString())\n  return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId, useInfura) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress, useInfura)\n  const poolconfigList = getFilteredPoolConfigList(poolAddress, null, symbolId)\n  let bTokenIdList = poolconfigList.map((i) => i.bTokenId)\n  let promiseList = []\n  for (let i=0; i<bTokenIdList.length; i++) {\n    promiseList.push(perpetualPool.getBToken(i))\n  }\n  const bTokenInfoList = await Promise.all(promiseList)\n  const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.discount).times(i.price)), bg(0))\n\n  const [price, symbolInfo, parameterInfo ] = await Promise.all([\n    getOraclePrice(poolAddress, symbolId),\n    perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n  ])\n  priceCache.set(poolAddress, symbolId, price)\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\n  const { minPoolMarginRatio } = parameterInfo;\n  const fundingRateArgs = [\n    tradersNetVolume,\n    price,\n    multiplier,\n    liquidity,\n    fundingRateCoefficient,\n  ]\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\n  // const liquidityUsedArgs = [\n  //   tradersNetVolume,\n  //   price,\n  //   multiplier,\n  //   liquidity,\n  //   minPoolMarginRatio,\n  // ]\n  const symbolConfigList = getFilteredPoolConfigList(poolAddress, '0')\n  let symbolIdList = symbolConfigList.map((i) => i.symbolId)\n  let promises = []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  const symbols = await Promise.all(promises)\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio))\n  }, bg(0))\n\n  //const liquidityUsed = liquidityUsedInAmount.div(liquidity)\n  const res = {\n    price,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    tradersNetVolume: tradersNetVolume.toString(),\n    liquidity: liquidity.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    fundingRatePerBlock: fundingRatePerBlock,\n    fundingRate: fundingRate,\n    liquidityUsed: liquidityUsedInAmount.div(liquidity).abs(),\n  }\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\n  return res\n}\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId, useInfura) => {\n  try {\n    const res = await _getFundingRate(chainId, poolAddress, symbolId, useInfura)\n    const { fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume } = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: tradersNetVolume.toString()\n    };\n  } catch(err) {\n    console.log(err)\n  }\n  return {\n    fundingRate0: '',\n    fundingRatePerBlock: '',\n    liquidity: '',\n    volume: '',\n    tradersNetVolume: '',\n  };\n}\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n  useInfura,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = _getFundingRate(chainId, poolAddress, symbolId, useInfura)\n    }\n    const args = [\n      bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ]\n    let fundingRate1 = calculateFundingRate(...args)\n    fundingRate1 = processFundingRate(chainId, fundingRate1)\n    return {\n      fundingRate1: fundingRate1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(err)\n  }\n  return {\n    fundingRate1: '',\n  }\n}\n\nexport const getLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  symbolId,\n  useInfura,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = _getFundingRate(chainId, poolAddress, symbolId, useInfura)\n    }\n    return {\n      liquidityUsed0: res.liquidityUsed.times(100).toString(),\n    };\n  } catch(err) {\n    console.log(err)\n  }\n  return {\n    liquidityUsed0: '',\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n  useInfura,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = _getFundingRate(chainId, poolAddress, symbolId, useInfura)\n    }\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress, useInfura)\n    // const {pToken: pTokenAddress } = getPoolConfig(poolAddress, null, symbolId)\n    // const pToken = pTokenFactory(chainId, pTokenAddress, useInfura);\n    // const { volume } = pToken.getPosition(accountAddress, symbolId);\n    const symbolConfigList = getFilteredPoolConfigList(poolAddress, '0')\n    let symbolIdList = symbolConfigList.map((i) => i.symbolId)\n    let promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    let liquidityUsed0 = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume.plus(newNetVolume)).abs())\n      } else {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume).abs())\n      }\n    }, bg(0))\n    liquidityUsed0 = liquidityUsed0.times(res.minPoolMarginRatio)\n    //const liquidityUsed = bg(newNetVolume).times(res.price).times(res.multiplier).times(res.minPoolMarginRatio).div(res.liquidity)\n    const liquidityUsed1 = liquidityUsed0.div(res.liquidity)\n    return {\n      liquidityUsed1: liquidityUsed1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(err)\n  }\n  return {\n    liquidityUsed1: '',\n  }\n}\n\n\nexport const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId, useInfura) => {\n  try {\n    const bTokensConfigList = getFilteredPoolConfigList(poolAddress, null, symbolId)\n    const symbolsConfigList = getFilteredPoolConfigList(poolAddress, '0')\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress, useInfura)\n    const {pToken: pTokenAddress } = getPoolConfig(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress, useInfura);\n    let bTokenList = bTokensConfigList.map((i) => {\n      return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\n    })\n    let promiseList = []\n    for (let i=0; i<bTokenList.length; i++) {\n      promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress, useInfura).balanceOf(accountAddress))\n    }\n    const resultList = await Promise.all(promiseList)\n    for (let i=0; i<bTokenList.length; i++) {\n      bTokenList[i].walletBalance = resultList[i].toString()\n    }\n\n    let bTokenIdList = bTokensConfigList.map((i) => i.bTokenId)\n    let symbolIdList = symbolsConfigList.map((i) => i.symbolId)\n    const [margins, positions, parameterInfo] = await Promise.all([\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      perpetualPool.getParameters(),\n    ]);\n    const { minInitialMarginRatio } = parameterInfo;\n\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n    //console.log('margin', margin.toString())\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    const marginHeld = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs().times(minInitialMarginRatio))\n    }, bg(0))\n    //console.log('marginHeld', marginHeld.toString())\n\n    const pnl = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    //console.log('pnl', pnl.toString())\n\n    bTokenList = bTokenList.map((i, index) => {\n      if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\n        i.availableBalance = max(min(margin.minus(marginHeld).plus(pnl).div(bTokens[index].price).div(bTokens[index].discount), margins[index]), bg(0)).toString()\n      } else {\n        i.availableBalance = '-'\n      }\n      return i\n    })\n    return bTokenList\n  } catch(err) {\n    console.log(err)\n  }\n  return []\n}","import { deriToNatural } from '../utils';\nimport { perpetualPoolFactory } from '../factory';\nimport { getFilteredPoolConfigList, getPoolConfig} from '../config'\n\nimport { getRestServerConfig, DeriEnv } from '../../config';\n\nconst getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nconst fetchJson = async (url) => {\n  const resp = await fetch(url);\n  return await resp.json();\n};\n\nconst processTradeEvent = async (\n  perpetualPool,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier[parseInt(symbolId)],\n    feeRatio[parseInt(symbolId)]\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    //baseToken: bTokenSymbol,\n    symbolId,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  const symbolConfigList = getFilteredPoolConfigList(poolAddress, '0')\n  const symbolIdList = symbolConfigList.map((i) => i.symbolId)\n  //console.log('symbolIdList', symbolIdList);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\n\n  const filters = { owner: accountAddress };\n  let events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      perpetualPool,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => i)\n        .map((i) => {\n          return {\n            direction: i.direction.trim(),\n            //baseToken: i.baseToken.trim(),\n            symbolId: i.symbolId,\n            price: deriToNatural(i.price).toString(),\n            notional: deriToNatural(i.notional).toString(),\n            volume: deriToNatural(i.volume).toString(),\n            transactionFee: deriToNatural(i.transactionFee).toString(),\n            transactionHash: i.transactionHash,\n            time: i.time.toString(),\n          };\n        });\n    }\n      //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n\n      const {initialBlock} = getPoolConfig(poolAddress, null, symbolId)\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(err)\n  }\n  return []\n};\n","import { isOrderValid } from '../calculation';\nimport { getPoolConfig, getFilteredPoolConfigList } from '../config'\nimport {\n  bTokenFactory,\n  perpetualPoolRouterFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\nimport { getOraclePrice, bg } from '../utils';\n\nexport const unlock = async (chainId, poolAddress, accountAddress, bTokenId) => {\n   const { bToken: bTokenAddress } = getPoolConfig(poolAddress, bTokenId);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress)\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const { router: routerAddress } = getPoolConfig(poolAddress, bTokenId);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   let res;\n   try {\n     const tx = await perpetualPoolRouter.addMargin(accountAddress, bTokenId, amount);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err };\n   }\n   return res;\n}\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n   const { router: routerAddress } = getPoolConfig(poolAddress, bTokenId);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   let res;\n   try {\n     const tx = await perpetualPoolRouter.removeMargin(accountAddress, bTokenId, amount);\n     res = { success: true, transaction: tx };\n   } catch (err) {\n     res = { success: false, error: err };\n   }\n   return res;\n}\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId,\n  useInfura,\n) => {\n   const { router: routerAddress } = getPoolConfig(poolAddress);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress);\n   const perpetualPool = perpetualPoolFactory(chainId, poolAddress, useInfura);\n   const {pToken: pTokenAddress } = getPoolConfig(poolAddress, null, symbolId)\n   const pToken = pTokenFactory(chainId, pTokenAddress, useInfura);\n   const [price, symbolInfo, parameterInfo, positions] = await Promise.all([\n     getOraclePrice(poolAddress, symbolId),\n     perpetualPool.getSymbol(symbolId),\n     perpetualPool.getParameters(),\n     pToken.getPositions(accountAddress),\n     //pToken.getMargin(accountAddress, symbolId),\n   ]);\n\n   const { multiplier } = symbolInfo;\n   const { minInitialMarginRatio, minPoolMarginRatio} = parameterInfo;\n\n   const bTokenConfigList = getFilteredPoolConfigList(poolAddress, null, symbolId)\n   const bTokenIdList = bTokenConfigList.map((i) => i.bTokenId)\n   const margins = await pToken.getMargins(accountAddress)\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, i, index) => {\n      return accum.plus(bg(i.price).times(i.discount).times(margins[index]))\n    }, bg(0))\n\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount)), bg(0))\n    //console.log('liquidity', liquidity.toString())\n    const symbolConfigList = getFilteredPoolConfigList(poolAddress, '0')\n    let symbolIdList = symbolConfigList.map((i) => i.symbolId)\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    let marginHeld = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume.plus(newVolume)).abs())\n      } else {\n        return accum.plus(bg(a.price).times(a.multiplier).times(positions[index].volume).abs())\n      }\n    }, bg(0))\n    marginHeld = marginHeld.times(minInitialMarginRatio)\n\n    //console.log('margin', margin.toString(), marginHeld.toString())\n    const liquidityUsed = symbols.reduce((accum, a) => {\n      return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio))\n    }, bg(0))\n    //console.log('liquidityUsed', liquidityUsed.toString())\n\n   const orderValidation = isOrderValid(\n     price,\n     margin,\n     marginHeld,\n     liquidity,\n     liquidityUsed,\n     multiplier,\n     minPoolMarginRatio,\n     bg(newVolume),\n   )\n   let res;\n   if (orderValidation.success) {\n    try {\n      const tx = await perpetualPoolRouter.trade(accountAddress, symbolId, newVolume);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n   } else {\n     res = { success: false, error: orderValidation.error};\n   }\n   return res;\n}\n\nexport const closePosition = async (chainId, poolAddress, accountAddress, symbolId) => {\n   const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig(poolAddress);\n   const perpetualPoolRouter = perpetualPoolRouterFactory(chainId, routerAddress)\n   const pToken = pTokenFactory(chainId, pTokenAddress)\n   const { volume } = await pToken.getPosition(accountAddress, symbolId)\n   const newVolume = volume.negated()\n   let res;\n   if (!volume.eq(0)) {\n    try {\n      const tx = await perpetualPoolRouter.trade(accountAddress, symbolId, newVolume);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res\n}","import Web3 from 'web3';\nimport { metaMaskWeb3 } from '../factory/web3';\nimport { hexToNumber } from '../utils';\n\n/**\n * check ethereum client status for web browser\n * @function\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.isMetaMask - check if it is MetaMask client\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const hasWallet = () => {\n  if (window.ethereum && window.ethereum.isMetaMask) {\n    return { success: true, isMetaMask: true };\n  }\n  return {\n    success: false,\n    error:\n      'The browser is not support ethereum wallet, please install MetaMask to proceed.',\n  };\n};\n\n/**\n *  Connect wallet using MetaMask account\n * @async\n * @function\n * @param {function} [handleChainChanged] - Callback when chainId changed\n * @param {function} [handleAccountChanged]  - callback when account changed\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.chainId - chain Id\n * @returns {string} response.account - account address\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const connectWallet = async (\n  handleChainChanged,\n  handleAccountChanged\n) => {\n  if (typeof window.ethereum !== undefined) {\n    const accounts = await window.ethereum.request({\n      method: 'eth_requestAccounts',\n    });\n    const chainId = parseInt(\n      await window.ethereum.request({ method: 'net_version' })\n    );\n    // const chainId = hexToNumber(\n    //   await window.ethereum.request({ method: 'eth_chainId' })\n    // );\n    const account = Array.isArray(accounts) && accounts[0];\n\n    // await web3.eth.requestAccounts().then(console.log)\n    window.ethereum.on('accountsChanged', (accounts) => {\n      let account;\n      if (accounts.length > 0) {\n        account = accounts[0];\n      } else {\n        account = '';\n      }\n      if (typeof handleAccountChanged === 'function') {\n        handleAccountChanged(account);\n      } else {\n        window.location.reload();\n      }\n      //console.log('accountChanged', account);\n    });\n    window.ethereum.on('chainChanged', (chainId) => {\n      let res = hexToNumber(chainId);\n      if (typeof handleChainChanged === 'function') {\n        handleChainChanged(res);\n      } else {\n        window.location.reload();\n      }\n      //console.log('chainChanged', res);\n    });\n    return { success: true, account, chainId };\n  }\n  return {\n    success: false,\n    error: 'Cannot connect wallet, please install MetaMask.',\n  };\n};\n\n/**\n * Get balance of the connected account\n * @async\n * @method\n * @param {string} chainId - Id of the chain\n * @param {string} accountAddress - Address of the connected account\n * @returns {string} Account balance\n */\nexport const getUserWalletBalance = async (chainId, walletAddress) => {\n  //const web3 = web3Factory(chainId);\n  const web3 = metaMaskWeb3();\n  const balance = await web3.eth.getBalance(walletAddress);\n  const res = Web3.utils.fromWei(balance);\n  return res;\n};\n","import {\n  getSlpLiquidityInfo,\n  getSlpWalletBalance,\n  isSlpUnlocked,\n  unlockSlp,\n  // addSlpLiquidity,\n  // removeSlpLiquidity,\n} from './slpPoolApi';\nimport {\n  getClp2LiquidityInfo,\n  getClp2WalletBalance,\n  isClp2Unlocked,\n  unlockClp2,\n  // addSlpLiquidity,\n  // removeSlpLiquidity,\n} from './clp2PoolApi';\nimport {\n  getClpLiquidityInfo,\n  getClpWalletBalance,\n  isClpUnlocked,\n  unlockClp,\n  // addClpLiquidity,\n  // removeClpLiquidity,\n} from './clpPoolApi';\n\nimport {\n  addSlpLiquidity2 as addSlpLiquidity,\n  removeSlpLiquidity2 as removeSlpLiquidity,\n  addClpLiquidity2 as addClpLiquidity,\n  removeClpLiquidity2 as removeClpLiquidity,\n  addClp2Liquidity2 as addClp2Liquidity,\n  removeClp2Liquidity2 as removeClp2Liquidity,\n} from './contractTransactionApiV2'\nimport { getLpContractAddress } from '../utils';\n\n/**\n * Get liquidity info of LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getLpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpLiquidityInfo(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Add liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp') {\n    return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp2') {\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\n  } else {\n    console.log(`addLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Remove liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await removeSlpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp') {\n    return await removeClpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp2') {\n    return await removeClp2Liquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else {\n    console.log(`removeLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Check account is unlocked in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await isClpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`isLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Unlock the account in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await unlockSlp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await unlockClp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await unlockClp2(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`unlockLp(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Get account balance in lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getLpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpContractAddress(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpWalletBalance(): invalid lp type ${type}`);\n  }\n};\n","import { makeObservable, observable, action } from \"mobx\";\nimport { getContractAddressConfig, DeriEnv } from \"../lib/web3js/indexV2\";\n\nexport default class Config {\n  all = []\n\n  constructor(){\n    makeObservable(this,{\n      all : observable,\n      setAll : action\n    })\n  }\n\n  load(version){\n    const current = version && version.current;\n    let configs = getContractAddressConfig(DeriEnv.get(),current)\n    if(version){\n      configs = configs.filter(c => c.version === version.current)\n      //v2 不需要展示base token,需要合并相同的base token\n      if(version.isV2){\n        configs = configs.reduce((total,cur) => {\n          const pos = total.findIndex(c => c.symbolId === cur.symbolId);\n          if(pos === -1){\n            total.push(cur)\n          }\n          return total;\n        },[])\n      }\n    }\n    this.setAll(configs)\n    return configs;\n  }\n\n  setAll(all){\n    this.all = all;\n  }\n  \n}","const { getContractAddressConfig:getContractAddressConfig2} = require(\"../config\");\nconst { getPoolConfigList:getPoolConfigListV2} = require(\"../v2/config\")\n\nexport const getContractAddressConfig = (env = 'dev', version) => {\n  if (!version || version === '1' || version === 'v1') {\n    return getContractAddressConfig2(env)\n  } else if (version === '2' || version === 'v2') {\n    return getPoolConfigListV2(env).concat(getContractAddressConfig2(env))\n  } else {\n    throw new Error(`getPoolContractAddress: invalid version: ${version}`)\n  }\n}","import { getLiquidityInfo2 } from '../api/restApi';\nimport { getPoolLiquidity as getPoolLiquidity2 } from '../api/databaseApi';\nimport { \n  getLiquidityInfo as getLiquidityInfoV2,\n  getPoolLiquidity as getPoolLiquidityV2,\n } from '../v2';\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  if (bTokenId === undefined) {\n    return getLiquidityInfo2(chainId, poolAddress, accountAddress)\n  } else {\n    return getLiquidityInfoV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n};\n\nexport const getPoolLiquidity = async (\n  chainId,\n  poolAddress,\n  bTokenId,\n) => {\n  if (bTokenId === undefined) {\n    return getPoolLiquidity2(chainId, poolAddress)\n  } else {\n    return getPoolLiquidityV2(chainId, poolAddress, bTokenId)\n  }\n};","import {addLiquidity2, removeLiquidity2 } from '../api/contractTransactionApiV2';\nimport { \n  addLiquidity as addLiquidityV2,\n  removeLiquidity as removeLiquidityV2\n } from '../v2';\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n  if (bTokenId === undefined) {\n    return addLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return addLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n}\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n  if (bTokenId === undefined) {\n    return removeLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return removeLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n    );\n  }\n}\n","import {\n  getPositionInfo as getPositionInfo2,\n  isUnlocked as isUnlocked2,\n  getEstimatedMargin as getEstimatedMargin2,\n  getEstimatedFee as getEstimatedFee2,\n  getEstimatedFundingRate as getEstimatedFundingRate2,\n  getEstimatedLiquidityUsed as getEstimatedLiquidityUsed2,\n  getWalletBalance as getWalletBalance2,\n} from '../api/contractQueryApi'\n\nimport {\n  getSpecification2,\n  getFundingRate2,\n  getLiquidityUsed2,\n  getFundingRateCache2,\n} from '../api/restApi'\n//import { bTokenFactory } from '../factory/contracts'\n\nimport {\n  getPositionInfo as getPositionInfoV2,\n  isUnlocked as isUnlockedV2,\n  getEstimatedMargin as getEstimatedMarginV2,\n  getEstimatedFee as getEstimatedFeeV2,\n  getEstimatedFundingRate as getEstimatedFundingRateV2,\n  getEstimatedLiquidityUsed as getEstimatedLiquidityUsedV2,\n  getSpecification as getSpecificationV2,\n  getWalletBalance as getWalletBalanceV2,\n  getFundingRate as getFundingRateV2,\n  getLiquidityUsed as getLiquidityUsedV2,\n  getFundingRateCache as getFundingRateCacheV2,\n} from '../v2'\n\n\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  bTokenId,\n  symbolId,\n) => {\n  if (symbolId === undefined) {\n    return getSpecification2(chainId, poolAddress)\n  } else {\n    return getSpecificationV2(chainId, poolAddress, bTokenId, symbolId)\n  }\n}\n\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\n  if (symbolId === undefined) {\n    return getPositionInfo2(chainId, poolAddress, accountAddress)\n  } else {\n    return getPositionInfoV2(chainId, poolAddress, accountAddress, symbolId)\n  }\n}\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  if (bTokenId === undefined) {\n    return getWalletBalance2(chainId, poolAddress, accountAddress)\n  } else {\n    return getWalletBalanceV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n}\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => { \n  if (bTokenId === undefined) {\n    return isUnlocked2(chainId, poolAddress, accountAddress)\n  } else {\n    return isUnlockedV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n}\n\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\n  if (symbolId === undefined) {\n    return getEstimatedFee2(chainId, poolAddress, volume)\n  } else {\n    return getEstimatedFeeV2(chainId, poolAddress, volume, symbolId)\n  }\n}\n\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  if (symbolId === undefined) {\n    return getEstimatedMargin2(chainId, poolAddress, accountAddress, volume, leverage)\n  } else {\n    return getEstimatedMarginV2(chainId, poolAddress, accountAddress, volume, leverage, symbolId)\n  }\n}\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  if (symbolId === undefined) {\n    return getFundingRate2(chainId, poolAddress)\n  } else {\n    return getFundingRateV2(chainId, poolAddress, symbolId)\n  }\n}\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  if (symbolId === undefined) {\n    return getEstimatedFundingRate2(chainId, poolAddress, newNetVolume)\n  } else {\n    return getEstimatedFundingRateV2(chainId, poolAddress, newNetVolume, symbolId)\n  }\n}\n\nexport const getLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  symbolId\n) => {\n  if (symbolId === undefined) {\n    return getLiquidityUsed2(chainId, poolAddress)\n  } else {\n    return getLiquidityUsedV2(chainId, poolAddress, symbolId)\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  if (symbolId === undefined) {\n    return getEstimatedLiquidityUsed2(chainId, poolAddress, newNetVolume)\n  } else {\n    return getEstimatedLiquidityUsedV2(chainId, poolAddress, newNetVolume, symbolId)\n  }\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  if (symbolId === undefined) {\n    return getFundingRateCache2(chainId, poolAddress)\n  } else {\n    return getFundingRateCacheV2(chainId, poolAddress, symbolId)\n  }\n}\n","import { unlock as unlock2 } from '../api/contractTransactionApi';\nimport {\n  tradeWithMargin2,\n  closePosition2,\n  depositMargin2,\n  withdrawMargin2,\n} from '../api/contractTransactionApiV2';\n\nimport {\n  unlock as unlockV2,\n  tradeWithMargin as tradeWithMarginV2,\n  closePosition as closePositionV2,\n  depositMargin as depositMarginV2,\n  withdrawMargin as withdrawMarginV2,\n} from '../v2';\n\nexport const unlock = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  if(bTokenId === undefined) {\n    return unlock2(chainId, poolAddress, accountAddress)\n  } else {\n    return unlockV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n  if(bTokenId === undefined) {\n    return depositMargin2(chainId, poolAddress, accountAddress, amount)\n  } else {\n    return depositMarginV2(chainId, poolAddress, accountAddress, amount, bTokenId)\n  }\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n  if(bTokenId === undefined) {\n    return withdrawMargin2(chainId, poolAddress, accountAddress, amount)\n  } else {\n    return withdrawMarginV2(chainId, poolAddress, accountAddress, amount, bTokenId)\n  }\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId,\n) => {\n  if(symbolId === undefined) {\n    return tradeWithMargin2(chainId, poolAddress, accountAddress, newVolume)\n  } else {\n    return tradeWithMarginV2(chainId, poolAddress, accountAddress, newVolume, symbolId)\n  }\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n) => {\n  if(symbolId === undefined) {\n    return closePosition2(chainId, poolAddress, accountAddress)\n  } else {\n    return closePositionV2(chainId, poolAddress, accountAddress, symbolId)\n  }\n};\n","\nimport {getTradeHistory2} from '../api/restApi';\nimport { \n  getTradeHistory as getTradeHistoryV2\n } from '../v2';\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n) => {\n  if (symbolId === undefined) {\n    return getTradeHistory2(chainId, poolAddress, accountAddress);\n  } else {\n    return getTradeHistoryV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      symbolId,\n    );\n  }\n}","import { bg, getAnnualBlockNumber } from '../utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  return bg(\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\n  ).abs();\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\n  fundingRateCoefficient;\n}\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getAnnualBlockNumber(chainId);\n  //console.log(annualBlockCount);\n  return bg(fundingRate).times(annualBlockCount);\n};\n","import { bg, max, min } from '../utils';\n\nexport * from './fundingRate';\n\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  lTokenTotalSupply.eq(0) ? bg(0) : liquidity.div(lTokenTotalSupply);\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  tradersNetVolume,\n  tradersNetCost,\n  multiplier,\n  minPoolMarginRatio,\n  price\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const value = tradersNetVolume.times(price).times(multiplier);\n  const removable = liquidity\n    .plus(tradersNetCost)\n    .minus(value)\n    .minus(value.abs().times(minPoolMarginRatio));\n  const shares = max(min(lTokenBalance, removable.div(shareValue)), bg(0));\n  return shares;\n};\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return volume.times(price).times(multiplier).minus(cost);\n}\n\nexport const calculateMaxWithdrawMargin = (\n  price,\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  if (volume.eq(0)) {\n    return margin;\n  }\n  const held = calculateMarginHeld(\n    price,\n    volume,\n    multiplier,\n    minInitialMarginRatio\n  );\n  const pnl = calculatePnl(price, volume, multiplier, cost);\n  const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\n  return withdrawable;\n};\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = cost.minus(margin).div(volume).div(multiplier);\n  let res = volume.gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  price,\n  margin,\n  volume,\n  liquidity,\n  tradersNetVolume,\n  multiplier,\n  minPoolMarginRatio,\n  minInitialMarginRatio,\n  newVolume,\n  amount\n) => {\n  const minMargin = volume\n    .plus(newVolume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(minInitialMarginRatio);\n  const poolMaxVolume = liquidity\n    .div(minPoolMarginRatio)\n    .div(price)\n    .div(multiplier);\n  if (margin.plus(amount).gte(minMargin)) {\n    if (\n      newVolume.lte(poolMaxVolume.minus(tradersNetVolume)) &&\n      newVolume.gte(poolMaxVolume.negated().minus(tradersNetVolume))\n    ) {\n      return { success: true };\n    }\n    return { success: false, message: 'Pool insufficient liquidity' };\n  }\n  return { success: false, message: 'Trader insufficient margin' };\n};\n","import { databaseFactory, databaseAirdropFactory } from '../factory/contracts';\nimport {\n  toChecksumAddress,\n  getNetworkName,\n  deriToString,\n  deriToBool,\n  deriToNatural,\n  getPoolContractAddress,\n} from '../utils';\n// import { getLiquidityUsed } from \"./contractApi\";\n\nexport const getUserInfo = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v`,\n      `${userAddress}.claim.r`,\n      `${userAddress}.claim.s`,\n      `${userAddress}.claim.valid`,\n    ])\n    .catch((err) => console.log('getUserInfo', err));\n  if (res) {\n    const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v: deriToString(v),\n      r,\n      s,\n      valid: deriToBool(valid),\n    };\n  }\n};\n\nexport const getUserInfoHarvest = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.harvest.lp`,\n      `${userAddress}.claim.harvest.trade`,\n    ])\n    .catch((err) => console.log('getUserInfoHarvest', err));\n  if (res) {\n    const [harvestLp, harvestTrade] = res;\n    return {\n      lp: deriToNatural(harvestLp).toString(),\n      trade: deriToNatural(harvestTrade).toString(),\n    };\n  }\n};\n\nexport const getUserInfoTotal = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([`${userAddress}.claim.total`])\n    .catch((err) => console.log('getUserInfoTotal', err));\n  if (res) {\n    const [total] = res;\n    return {\n      total: deriToNatural(total).toString(),\n    };\n  }\n};\n\n/**\n * Get user claim info from database\n * @async\n * @method\n * @param {string} userAddress - account address\n * @returns {Object} response\n * @returns {string} resposne.chainId\n * @returns {BigNumber} response.amount\n * @returns {string} response.deadline\n * @returns {string} response.nonce\n * @returns {string} response.v\n * @returns {string} response.r\n * @returns {string} response.s\n * @returns {bool} response.valid\n * @returns {BigNumber} response.lp\n * @returns {BigNumber} response.trade\n * @returns {string} response.total\n */\nexport const getUserInfoAll = async (userAddress) => {\n  const userInfo = await getUserInfo(userAddress);\n  const userInfoHarvest = await getUserInfoHarvest(userAddress);\n  const userInfoTotal = await getUserInfoTotal(userAddress);\n  return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\n};\n\n/**\n * Get pool liquidity\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {symbol} response.symbol\n */\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    const { symbol } = getPoolContractAddress(chainId, poolAddress)\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol,\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get pool apy\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  //const [poolAddress] = getPoolContractAddress(chainId, bSymbol);\n  //console.log('getPoolInfoApy', chainId, poolAddress);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.apy2`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, apy2, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        apy2: deriToNatural(apy2).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\n// export const getClpPoolInfoApy = async (chainId, poolAddress) => {\n//   const db = databaseFactory(true);\n//   try {\n//     const poolNetwork = getNetworkName(chainId);\n//     const res = await db\n//       .getValues([\n//         `${poolNetwork}.${poolAddress}.apy`,\n//         `${poolNetwork}.${poolAddress}.apy2`,\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\n//       ])\n//       .catch((err) => console.log('getPoolInfoApy', err));\n//     if (res) {\n//       const [apy, apy2, volume1h, volume24h] = res;\n//       return {\n//         apy: deriToNatural(apy).toString(),\n//         apy2: deriToNatural(apy2).toString(),\n//         volume1h: deriToNatural(volume1h).toString(),\n//         volume24h: deriToNatural(volume24h).toString(),\n//       };\n//     }\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n\n/**\n * Get user info of the pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} userAddress\n * @returns {Object} response\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\n  const db = databaseFactory(true);\n  //const {poolAddress} = getPoolContractAddress(chainId, poolAddress);\n  userAddress = toChecksumAddress(userAddress);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getUserInfoInPool', err));\n    if (res) {\n      const [volume1h, volume24h] = res;\n      return {\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\n  const db = databaseAirdropFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v1`,\n      `${userAddress}.claim.r1`,\n      `${userAddress}.claim.s1`,\n      `${userAddress}.claim.v2`,\n      `${userAddress}.claim.r2`,\n      `${userAddress}.claim.s2`,\n      `${userAddress}.claim.valid`,\n      // `${userAddress}.claim.harvest.lp`,\n      // `${userAddress}.claim.harvest.trade`,\n      // `${userAddress}.claim.total`,\n    ])\n    .catch((err) => console.log('getUserInfoAllForAirDrop', err));\n  if (res) {\n    const [\n      chainId,\n      amount,\n      deadline,\n      nonce,\n      v1,\n      r1,\n      s1,\n      v2,\n      r2,\n      s2,\n      valid,\n      // harvestLp,\n      // harvestTrade,\n      // total,\n    ] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v1: deriToString(v1),\n      r1,\n      s1,\n      v2: deriToString(v2),\n      r2,\n      s2,\n      valid: deriToBool(valid),\n      // lp: deriToNatural(harvestLp),\n      // trade: deriToNatural(harvestTrade),\n      // total: deriToString(total),\n    };\n  }\n};\n","import {\n  getPoolContractAddress,\n  naturalToDeri,\n  deriToNatural,\n  hexToString,\n  toChecksumAddress,\n  hexToNumber,\n  hexToNumberString,\n} from '../utils';\nimport { databaseFactory, perpetualPoolFactory } from '../factory/contracts';\n\nconst processTradeEvent = async (\n  perpetualPool,\n  bTokenSymbol,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier,\n    feeRatio\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: volume.toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  // console.log(JSON.stringify(res))\n  return res;\n};\n\nconst processLiquidateEvent = async (\n  info,\n  txHash,\n  bTokenSymbol,\n  multiplier\n) => {\n  // console.log(info)\n  const volume = deriToNatural(info.volume).abs();\n  // const cost = deriToNatural(info.cost).abs()\n  // const margin = info.margin\n  const timestamp = `${info.timestamp}000`;\n  const price = deriToNatural(info.price);\n  // const liquidator = info.liquidator\n  // const reward = info.reward\n  const national = volume.times(price).times(multiplier);\n  // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\n\n  const res = {\n    direction: 'Liquidation',\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: national.toString(),\n    volume: volume.toString(),\n    transactionFee: '0',\n    transactionHash: txHash.toString(),\n    time: timestamp,\n    // cost: naturalToDeri(cost).toString(),\n    // margin: margin.toString(),\n    // liquidator,\n    // reward: reward.toString(),\n  };\n  return res;\n};\n\n/**\n * Get the user trade history\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n * @returns {string} response[].direction\n * @returns {string} response[].baseToken\n * @returns {string} response[].price\n * @returns {string} response[].notional\n * @returns {string} response[].volume\n * @returns {string} response[].transactionFee\n * @returns {string} response[].time - Timestamp of the trade\n */\n\nexport const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\n  const keyMeta = `${chainId}.${poolAddress}`;\n  const db = databaseFactory();\n  let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\n    db.getValues([`${keyMeta}.tradeHistoryBlock`]),\n    db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\n  ]);\n  tradeFromBlock = hexToNumber(tradeFromBlock[0]);\n  liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [\n      tradeHistoryOffline,\n      tradeHistoryOnline,\n      liquidateHistoryOffline,\n      liquidateHistoryOnline,\n    ] = await Promise.all([\n      getTradeHistoryOffline(chainId, poolAddress, accountAddress),\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n      .concat(liquidateHistoryOnline)\n      .concat(tradeHistoryOffline)\n      .concat(liquidateHistoryOffline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolContractAddress(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n\n// get trade history combined from cache and from online pull\nconst getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\n  // console.log(chainId, poolAddress, accountAddress)\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.trade`;\n  const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const tradeHistoryLength = keyArray.length / 8;\n      // console.log(`trade history length: ${tradeHistoryLength}`)\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < tradeHistoryLength; i++) {\n        const indexBase = i * 8;\n        //console.log(resp[indexBase + 6].trim());\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n\n// get trade history online from the Block number\nexport const getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolContractAddress(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  /// let { initialBlock:fromBlock} = getPoolContractAddress(chainId, poolAddress)\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const {\n    multiplier,\n    feeRatio,\n    minInitialMarginRatio,\n  } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processTradeEvent(\n      perpetualPool,\n      bTokenSymbol,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      minInitialMarginRatio\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get liquidate history online from the Block number\nexport const getLiquidateHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolContractAddress(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Liquidate',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const { multiplier } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processLiquidateEvent(\n      item.returnValues,\n      item.transactionHash,\n      bTokenSymbol,\n      multiplier\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get trade history combined from cache and from online pull\nconst getLiquidateHistoryOffline = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.liquidate`;\n  const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const liquidateHistoryLength = keyArray.length / 8;\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < liquidateHistoryLength; i++) {\n        const indexBase = i * 8;\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: deriToNatural(resp[indexBase + 4]).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n","// const\nimport { getRestServerConfig, DeriEnv } from '../config';\nimport { bg, getPoolContractAddress, deriToNatural } from '../utils';\nimport {\n  getLiquidateHistoryOnline,\n  getTradeHistoryOnline,\n} from './tradeHistoryApi';\n\nconst getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nconst fetchJson = async (url) => {\n  const resp = await fetch(url);\n  return await resp.json();\n};\n\n/**\n * Get specification from REST API, please refer {@link getSpecification}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getSpecification2 = async (chainId, poolAddress) => {\n  console.log('hit');\n  const res = await fetchJson(`${getHttpBase()}/specification/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate from REST API, please refer {@link getFundingRate}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRate2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/funding_rate/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity used from REST API, please refer {@link getLiquidityUsed}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getLiquidityUsed2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/liquidity_used/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate cache from REST API, it used to 'fundingRateCache.update(chainId, poolAddress, result)'\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRateCache2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/funding_rate_cache/${poolAddress}`\n  );\n  if (res && res.success) {\n    let result = res.data;\n    result.price = bg(result.price);\n    result.fundingRate = bg(result.fundingRate);\n    result.liquidityUsed = bg(result.liquidityUsed);\n    return result;\n  }\n  return res;\n};\n\n/**\n * Get position info from REST API, please refer {@link getPositionInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getPositionInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/position_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity info from REST API, please refer {@link getLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance from REST API, please refer {@link getWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity of the slp pool from REST API, please refer {@link getSlpLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the slp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getClpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the deri pool from REST API, please refer {@link getDeriBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getDeriBalance2 = async (chainId, poolAddress, accountAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/deri_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get the user trade history from REST API, please refer {@link getTradeHistory}\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n */\nexport const getTradeHistory2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let tradeFromBlock, liquidateFromBlock, tradeHistory;\n  const res = await fetchJson(\n    `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n    liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\n    tradeHistory = res.data.tradeHistory;\n  }\n  tradeHistory = tradeHistory.filter((i) => i).map((i) => {\n    return {\n      direction: i.direction.trim(),\n      baseToken: i.baseToken.trim(),\n      price: deriToNatural(i.price).toString(),\n      notional: deriToNatural(i.notional).toString(),\n      volume: deriToNatural(i.volume).toString(),\n      transactionFee: deriToNatural(i.transactionFee).toString(),\n      transactionHash: i.transactionHash,\n      time: i.time.toString(),\n    };\n  });\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n      .concat(liquidateHistoryOnline)\n      .concat(tradeHistory);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolContractAddress(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n","import {\n  bTokenFactory,\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n  miningVaultPoolFactory,\n  miningVaultRouterFactory,\n  wormholeFactory,\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory/contracts';\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from './databaseApi';\nimport {\n  getPoolContractAddress,\n  getMiningVaultContractAddress,\n  getBTCUSDPrice,\n  bg,\n  naturalToDeri,\n  BigNumber,\n  format,\n  getDeriContractAddress,\n} from '../utils';\nimport {\n  getMiningVaultRouterContractAddress\n} from '../config'\nimport {\n  calculateMaxRemovableShares,\n  calculateMaxWithdrawMargin,\n  isOrderValid,\n} from '../calculation';\n\n/**\n * Unlock the account in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Deposit margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string|number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\n};\n\n/**\n * Withdraw margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n  const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\n\n  const maxWithdrawMargin = calculateMaxWithdrawMargin(\n    price,\n    volume,\n    margin,\n    cost,\n    multiplier,\n    minInitialMarginRatio\n  );\n  if (bg(amount).lte(maxWithdrawMargin)) {\n    try {\n      const tx = await pPool._transactPool(\n        'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'amount exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Mint in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const decimals = await bToken.decimals();\n  const BONE = 10 ** decimals;\n  amount = format(new BigNumber(amount).multipliedBy(BONE));\n  let res;\n  try {\n    const tx = await bToken._transact('mint', [amount], accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Add liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await pPool._transactPool(\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n      [naturalToDeri(amount)],\n      accountAddress\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} shares\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares\n) => {\n  const { lTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const {\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n  } = await pPool.getStateValues();\n\n  const maxRemovableShares = calculateMaxRemovableShares(\n    lTokenBalance,\n    lTokenTotalSupply,\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n    multiplier,\n    minPoolMarginRatio,\n    price\n  );\n  let res;\n  if (bg(shares).lte(maxRemovableShares)) {\n    try {\n      const tx = await pPool._transactPool(\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(shares)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'shares exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Trade with margin in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} newVolume\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minPoolMarginRatio,\n  } = await pPool.getParameters();\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\n  let res;\n  const orderValidation = isOrderValid(\n    price,\n    margin,\n    volume,\n    liquidity,\n    tradersNetVolume,\n    multiplier,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    bg(newVolume),\n    bg(amount)\n  );\n  if (orderValidation.success) {\n    try {\n      const tx = await pPool._transactPool(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.message };\n  }\n  return res;\n};\n\n/**\n * Close position in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  let { volume } = await pToken.getPositionInfo(accountAddress);\n  volume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const tx = await pPool._transactPool(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(volume), '0'],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n\n/**\n * Mint DToken in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDToken = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAll(accountAddress);\n  const amount = naturalToDeri(userInfo.amount);\n  const { deadline } = userInfo;\n  const { nonce } = userInfo;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultContractAddress(chainId);\n    if (miningVaultAddress) {\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\n      //miningVault.setAccount(accountAddress);\n      try {\n        const tx = await miningVault.mintDToken(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * freeze Deri in current wormhole pool to the specified chain\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @param {string} toChainId\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\n  const { wormholeAddress } = getDeriContractAddress(chainId);\n  const wormhole = wormholeFactory(chainId, wormholeAddress);\n  //wormhole.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await wormhole.freeze(accountAddress, amount, toChainId);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Deri in wormhole pool\n * @async\n * @method\n * @param {string} toChainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDeri = async (toChainId, accountAddress) => {\n  let res;\n  const databaseWormhole = databaseWormholeFactory(true);\n  // const userInfo = await getUserInfoAll(accountAddress);\n  const userInfo = await databaseWormhole.signature(accountAddress);\n  // console.log(userInfo)\n  const { amount } = userInfo;\n  const { fromChainId } = userInfo;\n  const { fromWormhole } = userInfo;\n  const fromNonce = userInfo.nonce;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const { wormholeAddress } = getDeriContractAddress(toChainId);\n    if (wormholeAddress) {\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\n      //wormhole.setAccount(accountAddress);\n      try {\n        const tx = await wormhole.mintDeri(\n          accountAddress,\n          amount,\n          fromChainId,\n          fromWormhole,\n          fromNonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the wormhole address in chain ${fromChainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * Unlock the account in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockDeri = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriContractAddress(chainId);\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  let res;\n  try {\n    const tx = await deri.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Airdrop in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintAirdrop = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAllForAirDrop(accountAddress);\n  const amount = naturalToDeri(userInfo.amount).toString();\n  const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultRouterContractAddress(chainId);\n    // console.log(\"miningVaultAddress\", miningVaultAddress)\n    // console.log(\"userInfo\", userInfo)\n    if (miningVaultAddress) {\n      const miningVaultRouter = miningVaultRouterFactory(\n        chainId,\n        miningVaultAddress\n      );\n      try {\n        const tx = await miningVaultRouter.mint(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v1,\n          r1,\n          s1,\n          v2,\n          r2,\n          s2\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault router address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n","export {\n  DeriEnv,\n  //getContractAddressConfig,\n  getLpContractAddressConfig,\n  getSlpContractAddressConfig,\n} from './config';\nexport * from './utils';\nexport * from './calculation';\n\nexport * from './api/apiGlobals';\nexport * from './api/factoryApi';\nexport * from './api/walletApi';\nexport {\n  // isUnlocked,\n  // getEstimatedMargin,\n  // getEstimatedFee,\n  // getEstimatedFundingRate,\n  // getEstimatedLiquidityUsed,\n  isDeriUnlocked,\n  getUserWormholeSignature,\n  // getFundingRate,\n  //getPositionInfo,\n} from './api/contractQueryApi';\nexport {\n  //unlock,\n  //depositMargin,\n  //withdrawMargin,\n  //addLiquidity,\n  //removeLiquidity,\n  //tradeWithMargin,\n  //closePosition,\n  mint,\n  mintDToken,\n  freeze,\n  mintDeri,\n  unlockDeri,\n  mintAirdrop,\n} from './api/contractTransactionApi';\nexport {\n  getUserInfo,\n  getUserInfoHarvest,\n  getUserInfoTotal,\n  getUserInfoAll,\n  getPoolInfoApy,\n  getLpPoolInfoApy,\n  getUserInfoInPool,\n  getUserInfoAllForAirDrop,\n} from './api/databaseApi';\n\n// export * from './api/slpPoolApi';\n// export * from './api/clpPoolApi';\n\n// export * from './api/tradeHistoryApi';\nexport {\n//getSpecification2 as getSpecification,\n// getPositionInfo2 as getPositionInfo,\n//getLiquidityInfo2 as getLiquidityInfo,\n//getWalletBalance2 as getWalletBalance,\n//getFundingRate2 as getFundingRate,\n//getLiquidityUsed2 as getLiquidityUsed,\ngetFundingRateCache2 as getFundingRateCache,\ngetSlpLiquidityInfo2 as getSlpLiquidityInfo,\ngetSlpWalletBalance2 as getSlpWalletBalance,\ngetClpLiquidityInfo2 as getClpLiquidityInfo,\ngetClpWalletBalance2 as getClpWalletBalance,\ngetDeriBalance2 as getDeriBalance,\n//getTradeHistory2 as getTradeHistory,\n} from './api/restApi';\n\n// export {\n  //tradeWithMargin2 as tradeWithMargin,\n  //closePosition2 as closePosition,\n  //depositMargin2 as depositMargin,\n  //withdrawMargin2 as withdrawMargin,\n  //addLiquidity2 as addLiquidity,\n  //removeLiquidity2 as removeLiquidity,\n// } from './api/contractTransactionApiV2'\n\nexport * from './api/lpPoolApi';\n\nexport * from './api_wrapper';\n\nexport {\n  getPoolConfigList,\n  getFilteredPoolConfigList,\n  getPoolBTokensBySymbolId,\n} from './v2';\n","import {\n  addLiquidity,\n  removeLiquidity,\n  depositMargin,\n  withdrawMargin,\n  tradeWithMargin,\n  closePosition,\n} from './contractTransactionApi';\nimport {\n  addSlpLiquidity,\n  removeSlpLiquidity,\n} from './slpPoolApi'\nimport {\n  addClpLiquidity,\n  removeClpLiquidity,\n} from './clpPoolApi'\nimport {\n  addClp2Liquidity,\n  removeClp2Liquidity,\n} from './clp2PoolApi'\nimport { wsInstance } from './apiGlobals'\nimport { getRestServerConfig, DeriEnv, getRedisWorkerQueneConfig } from '../config'\n\nconst wsOnPromise = (ws, event) => {\n  return new Promise((resolve, reject) => {\n    ws.on(event, function(data){\n      resolve(JSON.parse(data))\n    })\n  })\n}\nconst sendTradeTxToWorkerQuene = async(methodCall) => {\n  const ws = wsInstance.getOrSet(getRestServerConfig(DeriEnv.get()))\n  await ws.send(methodCall)\n  const res = await wsOnPromise(ws, 'trade_tx_receipt')\n  //console.log('res', res)\n  return res\n}\n\nexport const tradeWithMargin2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const res = await tradeWithMargin(chainId, poolAddress, accountAddress, newVolume, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`trade_with_margin(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const closePosition2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const res = await closePosition(chainId, poolAddress, accountAddress, newVolume, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`close_position(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const depositMargin2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await depositMargin(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`deposit_margin(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const withdrawMargin2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await withdrawMargin(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`withdraw_margin(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const addLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addLiquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeLiquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const addSlpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addSlpLiquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_slp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeSlpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeSlpLiquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_slp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\nexport const addClpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addClpLiquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeClpLiquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeClpLiquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const addClp2Liquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount = '0'\n) => {\n  const res = await addClp2Liquidity(chainId, poolAddress, accountAddress, amount)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`add_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};\n\nexport const removeClp2Liquidity2 = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares = '0'\n) => {\n  const res = await removeClp2Liquidity(chainId, poolAddress, accountAddress, shares)\n  if (res.success) {\n    const res2 = await sendTradeTxToWorkerQuene(`remove_clp_liquidity(${chainId},${poolAddress},${accountAddress})`)\n    return {...res2, ...res}\n  } else {\n    return res\n  }\n};","import { perpetualPoolFactory } from '../factory/contracts';\nimport { getBTCUSDPrice } from '../utils';\nimport { getUserWormholeSignature } from './contractQueryApi';\nimport { io } from 'socket.io-client';\n\n/** @module apiCache */\n/**\n * fundingRateCache Object\n * @name fundingRateCache\n * @property {function} get - Get the funding rate from cache\n * @property {function} set - set the funding rate cache\n */\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress) {\n      const key = `${chainId}.${contractAddress}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`Cache key is not in resouceMap: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, resource) {\n      const key = `${chainId}.${contractAddress}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();\n\nexport const accountAddressCache = (function () {\n  let _accountAddress = '';\n  return {\n    get() {\n      if (_accountAddress === '') {\n        console.log(\"please init 'accountAddress' first\");\n      }\n      return _accountAddress;\n    },\n    set(value) {\n      if (typeof value === 'string' && value !== '') {\n        _accountAddress = value;\n      }\n    },\n  };\n})();\n\n/**\n * priceCache Object\n * @name priceCache\n * @property {function} get - Get the price from cache\n * @property {function} update - Set the price to automatic update during a time interval\n * @property {function} clear - Clear the the automatic update of the price\n */\nexport const priceCache = (function () {\n  let _price = '';\n  let _interval = null;\n  return {\n    get() {\n      if (_price === '') {\n        console.log(\"please init 'price' first\");\n      }\n      return _price;\n    },\n    async _update(chainId, poolAddress) {\n      try {\n        const res = await getBTCUSDPrice(chainId, poolAddress);\n        if (res !== '') {\n          _price = res;\n        }\n      } catch (err) {\n        console.log(`priceCache.update: ${err}`)\n      }\n    },\n    update(chainId, poolAddress) {\n      const self = this;\n      _interval = setInterval(() => {\n        // console.log('tick')\n        self._update(chainId, poolAddress);\n      }, 3000);\n    },\n    clear() {\n      if (_interval) {\n        clearInterval(_interval);\n      }\n      _price = '';\n    },\n  };\n})();\n\n/**\n * PerpetualPoolParametersCache Object\n * @name PerpetualPoolParametersCache\n * @property {function} get - Get the perpetualPoolParameters from cache\n * @property {function} update - Set the perpetualPoolParameters\n */\n\nexport const PerpetualPoolParametersCache = (function () {\n  let _parameters = {};\n  return {\n    get() {\n      if (!_parameters.multiplier) {\n        console.log(\"please init 'perpetual pool parameters' first\");\n      }\n      return _parameters;\n    },\n    async update(chainId, poolAddress) {\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n      const res = await perpetualPool.getParameters();\n      if (res.multiplier) {\n        _parameters = res;\n      }\n      return res;\n    },\n  };\n})();\n\n// websocket instance\nexport const wsInstance = (function(){\n  let _ws = null;\n  return {\n    get() {\n      if (_ws) {\n        return _ws\n      } else {\n        console.log('wsInstance.get() error: ws instance is not init')\n      }\n    },\n    set(url) {\n      try {\n        const ws = io(url, {\n          transports: ['websocket'],\n          path: '/ws',\n        });\n        ws.on('connect', () => {\n          console.log('hello from ws:', ws.id);\n        })\n        if (ws) {\n          _ws = ws\n        } else {\n          console.log('wsInstance.get() error: ws instance is not init')\n        }\n      } catch (err) {\n        console.log('wsInstance.set():', err)\n      }\n    },\n    getOrSet(url) {\n      if (!_ws) {\n        this.set(url)\n      }\n      return _ws\n    }\n  }\n})();\n","import {\n  bTokenFactory,\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory/contracts';\nimport { getPoolInfoApy } from './databaseApi';\nimport {\n  fundingRateCache,\n  PerpetualPoolParametersCache,\n  priceCache,\n} from './apiGlobals';\nimport {\n  hasInvalidArgsValue,\n  naturalWithPercentage,\n  deriToNatural,\n  getPoolContractAddress,\n  getBTCUSDPrice,\n  bg,\n  BigNumber,\n  getDeriContractAddress,\n} from '../utils';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  calculateShareValue,\n  calculateMaxRemovableShares,\n  calculateEntryPrice,\n  calculateMarginHeld,\n  calculatePnl,\n  calculateLiquidationPrice,\n  processFundingRate,\n} from '../calculation';\n\n/**\n * Get the contract information\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.addresses\n * @returns {string} response.symbol\n * @returns {string} response.bSymbol\n * @returns {string} response.multiplier\n * @returns {string} response.feeRatio\n * @returns {string} response.minPoo\n * @returns {string} response.minPoolMarginRatio\n * @returns {string} response.minInitialMarginRatio\n * @returns {string} response.minMaintenanceMarginRatio\n * @returns {string} response.minAddLiquidity\n * @returns {string} response.redemptionFeeRatio\n * @returns {string} response.fundingRateCoefficient\n * @returns {string} response.minLiquidationReward\n * @returns {string} response.maxLiquidationReward\n * @returns {string} response.liquidationCutRatio\n * @returns {string} response.priceDelayAllowance\n */\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    feeRatio,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n    minAddLiquidity,\n    redemptionFeeRatio,\n    fundingRateCoefficient,\n    minLiquidationReward,\n    maxLiquidationReward,\n    liquidationCutRatio,\n    priceDelayAllowance,\n  } = await pPool.getParameters();\n  const symbol = await pPool.symbol();\n  const bSymbolRaw = await bToken.symbol();\n\n  return {\n    addresses: poolAddress,\n    symbol,\n    bSymbol: bSymbolRaw,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    minInitialMarginRatio: minInitialMarginRatio.toString(),\n    minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n    minAddLiquidity: minAddLiquidity.toString(),\n    redemptionFeeRatio: redemptionFeeRatio.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minLiquidationReward: minLiquidationReward.toString(),\n    maxLiquidationReward: maxLiquidationReward.toString(),\n    liquidationCutRatio: liquidationCutRatio.toString(),\n    priceDelayAllowance: priceDelayAllowance.toString(),\n  };\n};\n\n/**\n * Get position Information of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.volume\n * @returns {string} response.averageEntryPrice\n * @returns {string} response.margin\n * @returns {string} response.marginHeld\n * @returns {string} response.unrealizedPnl\n * @returns {string} response.liquidationPrice\n */\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const { pTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n  } = await pPool.getParameters();\n  //console.log('getPositionInfo', chainId, poolAddress, accountAddress, price);\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n\n  return {\n    volume: volume.toString(),\n    averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n    margin: margin.toString(),\n    marginHeld: calculateMarginHeld(\n      price,\n      volume,\n      multiplier,\n      minInitialMarginRatio\n    ).toString(),\n    unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\n    liquidationPrice: calculateLiquidationPrice(\n      volume,\n      margin,\n      cost,\n      multiplier,\n      minMaintenanceMarginRatio\n    ).toString(),\n  };\n};\n\n/**\n * Get liquidity Info of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const {\n    liquidity,\n    tradersNetCost,\n    tradersNetVolume,\n  } = await pPool.getStateValues();\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const poolDynamicEquity = liquidity.plus(\n    tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\n  );\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      tradersNetVolume,\n      tradersNetCost,\n      multiplier,\n      minPoolMarginRatio,\n      price\n    ).toString(),\n  };\n};\n\n/**\n * Get user balance in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {string} user balance\n */\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n\n/**\n * Check account is unlocked in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getPoolContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\n/**\n * Get estimate margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} volume\n * @param {string} leverage\n * @returns {string}\n */\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage\n) => {\n  const price = await getBTCUSDPrice(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const { multiplier } = await pPool.getParameters();\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .div(bg(leverage))\n    .toString();\n};\n\n/**\n * Get estimate Fee in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} volume\n * @returns {string}\n */\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\n  // const price = await getBTCUSDPrice(chainId, poolAddress);\n  let price = priceCache.get();\n  let parameters = PerpetualPoolParametersCache.get();\n  if (price === '') {\n    await priceCache.update(chainId, poolAddress);\n    price = priceCache.get();\n  }\n  // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\n  // const { multiplier, feeRatio } = await pPool.getParameters();\n  if (!parameters.multiplier) {\n    parameters = await PerpetualPoolParametersCache.update(\n      chainId,\n      poolAddress\n    );\n  }\n  //console.log('price', price);\n  const { multiplier, feeRatio } = parameters;\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};\n\n/**\n * Get funding rate of the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.fundingRate0\n * @returns {string} response.fundingRatePerBlock\n * @returns {string} response.liquidity\n * @returns {string} response.volume\n * @returns {string} response.tradersNetVolume\n */\nexport const getFundingRate = async (chainId, poolAddress) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n\n  const res = await perpetualPool\n    .getFundingRate()\n    .catch((err) => console.log('getFundingRate', err));\n  fundingRateCache.set(chainId, poolAddress, res);\n  const poolInfo = await getPoolInfoApy(chainId, poolAddress);\n\n  if (res) {\n    // console.log(hexToNatural(res[0]));\n    const {\n      fundingRate,\n      fundingRatePerBlock,\n      liquidity,\n      tradersNetVolume,\n    } = res;\n    const volume = poolInfo.volume24h;\n    // fundingRate = processFundingRate(chainId, fundingRate);\n\n    return {\n      fundingRate0: naturalWithPercentage(fundingRate),\n      fundingRatePerBlock: BigNumber(fundingRatePerBlock).toExponential(10),\n      liquidity: liquidity.toString(),\n      volume: deriToNatural(volume).toString(),\n      tradersNetVolume: tradersNetVolume.toString(),\n    };\n  }\n};\n\n/**\n * Get estimate funding rate\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let fundingRate1;\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ];\n    if (hasInvalidArgsValue(...parameters)) {\n      return {\n        fundingRate1: '0',\n      };\n    }\n    // console.log(parameters)\n    fundingRate1 = calculateFundingRate(...parameters);\n    fundingRate1 = processFundingRate(chainId, fundingRate1);\n    return {\n      fundingRate1: naturalWithPercentage(fundingRate1),\n    };\n  }\n};\n\n/**\n * Get liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidityUsed0\n */\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const { liquidityUsed } = res;\n    return {\n      liquidityUsed0: naturalWithPercentage(liquidityUsed),\n    };\n  }\n};\n\n/**\n * Get estimate liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool\n      .getFundingRate()\n      .catch((err) => console.log('getLiquidityUsed', err));\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.poolMarginRatio,\n    ];\n    if (hasInvalidArgsValue(...parameters)) {\n      return {\n        liquidityUsed1: '0',\n      };\n    }\n    const liquidityUsed1 = calculateLiquidityUsed(...parameters);\n    return {\n      liquidityUsed1: naturalWithPercentage(liquidityUsed1),\n    };\n  }\n};\n\n/**\n * Get user signature of the wormhole pool\n * @async\n * @method\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getUserWormholeSignature = async (accountAddress) => {\n  const databaseWormhole = databaseWormholeFactory(true);\n  return await databaseWormhole.signature(accountAddress);\n};\n\n/**\n * Check account is unlocked in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriContractAddress(chainId);\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  let res;\n  try {\n    const tx = await deri.isUnlocked(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Get deri balance in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string}\n */\nexport const getDeriBalance = async (chainId, accountAddress) => {\n  const { deriAddress, wormholeAddress } = getDeriContractAddress(chainId);\n  const deri = deriFactory(chainId, deriAddress, wormholeAddress);\n  return (await deri.balance(accountAddress)).toString();\n};\n","// eslint-disable-next-line no-extend-native\nNumber.prototype.toFixed = function(len){\n  if(len>20 || len<0){\n      throw new RangeError('toFixed() digits argument must be between 0 and 20');\n  }\n  // .123转为0.123\n  var number = Number(this);\n  if (isNaN(number) || number >= Math.pow(10, 21)) {\n      return number.toString();\n  }\n  if (typeof (len) == 'undefined' || len == 0) {\n      return (Math.round(number)).toString();\n  }\n  var result = number.toString(),\n      numberArr = result.split('.');\n\n  if(numberArr.length<2){\n      //整数的情况\n      return padNum(result);\n  }\n  var intNum = numberArr[0], //整数部分\n      deciNum = numberArr[1],//小数部分\n      lastNum = deciNum.substr(len, 1);//最后一个数字\n  \n  if(deciNum.length == len){\n      //需要截取的长度等于当前长度\n      return result;\n  }\n  if(deciNum.length < len){\n      //需要截取的长度大于当前长度 1.3.toFixed(2)\n      return padNum(result)\n  }\n  //需要截取的长度小于当前长度，需要判断最后一位数字\n  result = intNum + '.' + deciNum.substr(0, len);\n  if(parseInt(lastNum, 10)>=5){\n      //最后一位数字大于5，要进位\n      var times = Math.pow(10, len); //需要放大的倍数\n      var changedInt = Number(result.replace('.',''));//截取后转为整数\n      changedInt++;//整数进位\n      changedInt /= times;//整数转为小数，注：有可能还是整数\n      result = padNum(changedInt+'');\n  }\n  return result;\n  //对数字末尾加0\n  function padNum(num){\n      var dotPos = num.indexOf('.');\n      if(dotPos === -1){\n          //整数的情况\n          num += '.';\n          for(var i = 0;i<len;i++){\n              num += '0';\n          }\n          return num;\n      } else {\n          //小数的情况\n          var need = len - (num.length - dotPos - 1);\n          for(var j = 0;j<need;j++){\n              num += '0';\n          }\n          return num;\n      }\n  }\n}","import {isBrowser,isMobile} from 'react-device-detect'\nimport LoadableComponent from './utils/LoadableComponent';\n\nconst DesktopApp = LoadableComponent(() => import('./desktop/index'))\nconst MobileApp = LoadableComponent(() => import('./mobile/index'))\n\nfunction App() {\n  \n  if(isBrowser){\n    return <DesktopApp/>\n  }\n  if(isMobile){\n    return <MobileApp/>\n  }\n}\n\nexport default App;\n","\nimport {getUserWalletBalance ,DeriEnv,connectWallet} from \"../lib/web3js/indexV2\";\nimport config from '../config.json'\nimport { formatBalance, eqInNumber } from \"../utils/utils\";\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\n\n\nclass Wallet {\n  \n  detail = {}\n  \n  constructor(){\n    makeAutoObservable(this,{\n      detail : observable,\n      setDetail : action,\n      supportV2 : computed,\n      supportChain : computed   \n    })\n  }\n\n  isConnected = () => !!this.detail.account;\n\n  connect =  async () => {\n    const res = await connectWallet();\n    return new Promise(async (resolve,reject) => {\n      if(res.success){\n        const {chainId,account} = res\n        const wallet = await this.loadWalletBalance(chainId,account);        \n        resolve(wallet)\n      } else {\n        reject(null)\n      }\n    })\n  }\n\n  loadWalletBalance = async (chainId,account) => {\n    const balance = await getUserWalletBalance(chainId,account)\n    const detail = {chainId,account,balance,formatBalance : formatBalance(balance)}\n    const env = DeriEnv.get();\n    const {chainInfo} = config[env]\n    \n    if(chainInfo[chainId]){\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\n    }\n    this.setDetail(detail)\n    return detail;\n  }\n\n  get = () => {\n    return this.detail;\n  }\n\n  setDetail(detail){\n    this.detail = detail;\n  }\n\n  get supportV2() {\n    return eqInNumber(this.detail.chainId,56) || eqInNumber(this.detail.chainId,97)\n  }\n\n  get supportChain(){\n    return this.detail.supported\n  }\n\n}\n\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\nimport WebSocket from \"socket.io-client\";\n\nclass Oracle {\n  symbol = 'BTCUSD'\n  timeType = 'min'\n  index = 0.00\n  kData = []\n  ws = null\n  paused = false;\n  listeners = {}\n  already = false\n\n  constructor(){\n    makeAutoObservable(this,{\n      index : observable,\n      kData : observable,\n      setIndex : action,\n    })\n    this.initWebSocket()\n  }\n\n\n  initWebSocket(){\n    if(this.ws === null) {\n      this.ws = new WebSocket('wss://oracle4.deri.finance', {        \n        transports: ['websocket'],\n        withCredentials: true\n      })\n      this.ws.on('connect',() => {\n        if(this.already){\n          this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\n          console.log('ws is reconnected already')\n        }\n        console.log('ws is already connected');\n      });\n    }    \n  }\n\n\n  load(symbol,timeType = 'min'){\n    this.setSymbol(symbol)\n    this.setTimeType(timeType);\n    this.ws.on('kline_update',data => {\n      const obj = {}\n      let time = data.time\n      if (data.symbol.toUpperCase() === this.symbol.toUpperCase()) {\n        obj.time = time \n        obj.low = Number(data.low)\n        obj.high = Number(data.high)\n        obj.open = Number(data.open)\n        obj.close = Number(data.close)\n        obj.volume = Number(data.volume)\n        obj.time_type = data.time_type\n        obj.symbol = data.symbol\n        if(!this.paused) {\n          this.setIndex(obj.close)\n          for(const key of Object.keys(this.listeners)){\n            if(typeof this.listeners[key] === 'function'){\n              this.listeners[key](obj)\n            }\n          }\n        }\n      }\n    })\n    this.ws.emit('get_kline_update', {'symbol': this.symbol, 'time_type': this.timeType})\n    this.already = true\n  }\n\n  addListener(id,listener){\n    if(!this.listeners[id]) {\n      this.listeners[id] = listener\n    }    \n  }\n\n\n\n  unsubscribeBars(uid){\n    this.ws.emit('un_get_kline_update', {\n      symbol : this.symbol, 'time_type' : 'min'\n    })\n  }\n\n\n  //暂不用\n  loadHistory(symbol,timeType,callback){\n    this.ws.on('kline_history', data => {\n      const history = data.map(el => {\n        return {\n          time: el.time,\n          low: Number(el.low),\n          high: Number(el.high),\n          open: Number(el.open),\n          close: Number(el.close),\n          volume: Number(el.volume)\n        }\n      })\n      if(callback){\n        console.log('history ->',history[history.length-1].time)\n        callback(history)\n      }\n    })\n    this.ws.emit('get_kline', {'symbol': symbol, 'time_type': timeType, 'bars': 1000})\n    // this.emit(symbol);\n  }\n\n  // start(symbol){\n  //   this.initWebSocket();\n  //   this.loadIndex(symbol);\n  //   this.ws.on('kline_update',data => {\n  //     const obj = {}\n  //     let time = data.time\n  //     if (data.symbol === this.symbol) {\n  //       obj.time = time \n  //       obj.low = Number(data.low)\n  //       obj.high = Number(data.high)\n  //       obj.open = Number(data.open)\n  //       obj.close = Number(data.close)\n  //       obj.volume = Number(data.volume)\n  //       this.setIndex(obj.close)\n  //     }\n  //   })\n  // }\n\n  resume(){\n    this.setPause(false)\n  }\n\n  pause(){\n    this.setPause(true)\n  }\n\n  setIndex(index){\n    if(!this.paused) {\n      this.index = index;\n    }\n  }\n\n  setSymbol(symbol){\n    this.symbol = symbol\n  }\n\n  setTimeType(timeType){\n    this.timeType = timeType;\n  }\n\n  setPause(paused){\n    this.paused = paused\n  }\n}\n\nexport default Oracle","import { getPositionInfo } from \"../lib/web3js/indexV2\"\n\nexport default class Position {\n\n  callback = () => {}\n   wallet = null;\n   spec = null\n \n\n   async load(wallet,spec,callback){\n     if(wallet && wallet.isConnected() && wallet.supportChain && spec && spec.pool){\n      const position = await getPositionInfo(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\n      if(position){\n        if(callback){\n          callback(position)\n        }\n      }\n      this.start(wallet,spec,callback)\n      return position;\n     }\n   }\n\n   start(wallet,spec,callback){\n     if(!this.interval){\n      this.interval = window.setInterval(() => this.load(wallet,spec,callback),3000)      \n      if(wallet){\n        this.wallet= wallet; \n      }\n      if(spec){\n        this.spec = spec\n      }\n      if(callback){\n        this.callback = callback;\n      }\n     }\n   }\n\n   pause(){\n    clearInterval(this.interval);\n    this.interval = null;\n   }\n\n   resume(wallet,spec,callback){\n     this.start(wallet,spec,callback || this.callback)\n   }\n\n   \n\n\n \n}","import { getSpecification } from \"../lib/web3js/indexV2\";\n\nexport default class Contract {\n  info = {\n    bSymbol:'BUSD',\n    symbol:'BTCUSD',\n    multiplier:'0.0001',\n    fundingRateCoefficient:'0.0000025',\n    minInitialMarginRatio:0.1,\n    minMaintenanceMarginRatio:0.05,\n    feeRatio:0.0005,\n  }\n\n  async load(wallet,config){\n    if(wallet && wallet.supportChain && config && config.pool !== this.info.pool){\n      const spec = await getSpecification(wallet.detail.chainId,config.pool,config.bTokenId,config.symbolId);\n      this.setInfo(spec)\n    }\n    return this.info\n  }\n\n  setInfo(info){\n    this.info = info\n  }\n}","import { getTradeHistory } from \"../lib/web3js/indexV2\";\n\n\nexport default class History {\n\n   async load(wallet,config){\n      if(wallet && wallet.detail.chainId && config && config.pool){\n         const all = await getTradeHistory(wallet.detail.chainId,config.pool,wallet.detail.account,config.symbolId);    \n         return all;\n      } else {\n         return []\n      }\n   }\n}","import { observable, action, computed, makeObservable } from \"mobx\";\nimport Oracle from \"./Oracle\";\nimport Position from \"./Position\";\nimport Contract from \"./Contract\";\nimport History from './History'\nimport Config from \"./Config\";\nimport { eqInNumber, storeConfig, getConfigFromStore } from \"../utils/utils\";\nimport { getFundingRate } from \"../lib/web3js/indexV2\";\n\n/**\n * 交易模型\n * 关联对象\n * 1. chain\n * 2. Oracle\n * 3. position\n * 4. contract\n * 5. history\n * 计算\n * 1. dynamic balance\n * 2. available blance\n * 响应事件\n * 1. chain change\n * 2. chain’s symbol changed\n * 3. index update\n * 4. volum change\n * 5. margin change\n * 输出\n * 1. dynamic balance\n * 2. margin\n * 3. available balance\n * 4. volume\n * 5. specs\n * 6. spec\n * 7. position\n * 8. contract\n * 9. fundingRate\n */\n\nexport default class Trading {\n  version = null;\n  wallet = null;\n  configs = [] \n  config = null;\n  fundingRate = '--' \n  index = null\n  volume = ''\n  paused = false\n  margin = ''\n  position = {}\n  contract = {}\n  fundingRate = {}\n  history = []\n  userSelectedDirection = 'long'\n\n  constructor(){\n    makeObservable(this,{\n      index : observable,\n      volume : observable,\n      margin : observable,\n      fundingRate : observable,\n      position : observable,\n      history : observable,\n      contract : observable,\n      userSelectedDirection : observable,\n      setWallet :action,\n      setConfigs : action,\n      setConfig : action,\n      setIndex : action,\n      setContract : action,\n      setPosition : action,\n      setVolume : action,\n      setUserSelectedDirection : action,\n      setFundingRate : action,\n      setHistory : action,\n      amount : computed,\n      fundingRateTip : computed,\n      direction : computed,\n      volumeDisplay : computed\n    })\n    this.configInfo = new Config();\n    this.oracle = new Oracle();\n    this.positionInfo = new Position()\n    this.contractInfo = new Contract();\n    this.historyInfo = new History()\n  }\n\n  /**\n   * 初始化\n   */\n  async init(wallet,version){    \n    if(version){\n      this.version = version\n    }\n    const all = await this.configInfo.load(version);\n    if(wallet){\n      this.setWallet(wallet);\n      this.setConfigs(all.filter(c => eqInNumber(wallet.detail.chainId,c.chainId)))\n      let defaultConfig = this.getDefaultConfig(this.configs,wallet);\n      if(defaultConfig && this.configs.length > 0){\n        //如果缓存不在当前配置列表，则用第一个config\n        const pos = this.configs.findIndex(c => c.pool === defaultConfig.pool);\n        if(pos === -1){\n          defaultConfig = this.configs[0];\n        }\n      }\n      \n      this.setConfig(defaultConfig);\n    } \n    //如果没有钱包或者链接的链不一致，设置默认config，BTCUSD\n    if(this.configs.length === 0 && all.length > 0){\n      let defaultConfig = all.find(c => c.symbol === 'BTCUSD')\n      defaultConfig = defaultConfig ? defaultConfig : all[0]\n      this.setConfig(defaultConfig)\n    }\n    this.loadByConfig(this.wallet,this.config,true)\n    this.setVolume('')\n  }\n\n  async switch(spec){\n    const cur = this.configs.find(config => config.pool === spec.pool && config.symbolId === spec.symbolId)\n    //v1 只需要比较池子地址，v2 需要比较symbolId\n    let changed = false\n    if(this.version){\n      changed = this.version.isV1 ? spec.pool !== this.config.pool : spec.symbolId !== this.config.symbolId\n    }\n    if(cur){\n      this.pause();\n      this.setConfig(cur)\n      this.loadByConfig(this.wallet,cur,changed);  \n      if(changed){\n        this.store(cur)\n      }    \n      this.resume()\n      this.setVolume('')\n    }\n  }\n\n  async loadByConfig(wallet,config,symbolChanged){\n     //position\n     this.positionInfo.load(wallet,config,position => {       \n        this.setPosition(position);\n     })\n\n     //切换指数\n    if(symbolChanged && config){\n      this.oracle.unsubscribeBars();\n      this.oracle.addListener('trading',data => {\n        this.setIndex(data.close)\n      })\n      this.oracle.load(config.symbol)\n    }\n     //contract\n     const contract = await this.contractInfo.load(wallet,config)    \n\n     //funding rate\n     const fundingRate = await this.loadFundingRate(wallet,config)\n     \n     //history\n     const history = await this.historyInfo.load(wallet,config);\n\n     if(contract){\n      this.setContract(contract)\n     }\n\n     if(fundingRate){\n      this.setFundingRate(fundingRate)\n     }\n\n     if(history){\n      this.setHistory(history);\n     }\n  }\n\n\n  getDefaultConfig(all = [],wallet){\n    //优先使用session storage 的\n    if(all.length > 0){    \n      const fromStore = this.getFromStore();\n      if(fromStore && eqInNumber(wallet.detail.chainId,fromStore.chainId)){\n        return fromStore;\n      } else {\n        return all[0]\n      }\n    }\n    return {}    \n  }\n\n \n\n  //存起来\n  store(config){\n    storeConfig(this.version.current,config)\n  }\n\n  getFromStore(){\n    return getConfigFromStore(this.version.current)\n  }\n\n  async refresh(){\n    this.pause()\n    const position = await this.positionInfo.load(this.wallet,this.config);\n    this.wallet.loadWalletBalance(this.wallet.detail.chainId,this.wallet.detail.account)\n    const fundingRate = await this.loadFundingRate(this.wallet,this.config)   \n    const history = await this.historyInfo.load(this.wallet,this.config)\n\n    if(fundingRate){\n      this.setFundingRate(fundingRate)      \n    }\n    if(position){\n      this.setPosition(position)\n    }\n    if(history){\n      this.setHistory(history)\n    }\n    this.setVolume('')\n    this.resume();\n  }\n\n  /**\n   * 暂停实时读取index和定时读取position\n   */\n  pause(){\n    this.setPaused(true)\n    this.oracle.pause();\n    this.positionInfo.pause();\n  }\n\n  /**\n   * 恢复读取\n   */\n  resume(){\n    this.setPaused(false)\n    this.oracle.resume();\n    this.positionInfo.resume(this.wallet,this.config);\n  }\n\n  setWallet(wallet){\n    this.wallet = wallet;\n  }\n\n  setConfigs(configs){\n    this.configs = configs\n  }\n\n  setConfig(config){\n    this.config = config\n  }\n\n  setIndex(index){\n    this.index = index;\n  }\n\n  setPosition(position){\n    if(position){\n      this.position = position\n    }\n  }\n\n  setContract(contract){\n    this.contract = contract\n  }\n\n  setHistory(history){\n    this.history = history\n  }\n\n  setFundingRate(fundingRate){\n    this.fundingRate = fundingRate;\n  }\n\n  setVolume(volume){\n    this.volume = volume;\n  }\n\n  setPaused(paused){\n    this.paused = paused\n  }\n\n  setUserSelectedDirection(direction){\n    this.userSelectedDirection = direction\n  }\n\n  setMargin(margin){\n    this.margin = margin\n    if(this.contract){\n      const volume = (+margin) / ((+this.index) * (+this.contract.multiplier) * (+this.contract.minInitialMarginRatio))      \n      if(!isNaN(volume)){\n        this.setVolume(Math.abs(volume))\n      }\n    }\n  }\n\n  get volumeDisplay(){\n    if(this.volume === '' || this.volume === '-' || this.volume === 'e' || isNaN(this.volume)) {\n      return '';\n    } else if(this.margin !== '') {\n        if((+this.volume) > Math.abs(+this.position.volume)) {\n          const result = parseInt(Math.abs(this.volume) - Math.abs(this.position.volume))\n          return result\n        } else {\n          const result = parseInt(Math.abs(this.position.volume) - Math.abs(this.volume));          \n          return result\n        }\n    } else {\n      return this.volume\n    }\n  }\n\n  \n  //计算available balance、contract value、\n  get amount(){\n    if(this.index && this.position && this.contract && this.volume !== ''){\n      //合同价值\n      let curVolume = Math.abs(this.volume);\n      const originVolume = Math.abs(this.volumeDisplay);\n      //如果不是通过marge 算出来的volume\n      if(this.margin === '') {       \n        if(this.userSelectedDirection === 'long') {\n          if((+this.position.volume) > 0) {\n            curVolume = curVolume + (+this.position.volume)\n          } else {\n            curVolume = Math.abs(this.position.volume) - curVolume\n          }         \n        } else {\n          if((+this.position.volume) > 0){\n            curVolume =  (+this.position.volume) - curVolume\n          } else {\n            curVolume = Math.abs(this.position.volume) + (+curVolume)\n          }\n        }\n      }\n      const contractValue = Math.abs(curVolume) * this.index * this.contract.multiplier\n      const dynBalance = (+this.position.margin) + (+this.position.unrealizedPnl)\n      const margin = contractValue * this.contract.minInitialMarginRatio\n      const leverage = (+contractValue / +dynBalance).toFixed(1);\n      const balance = ((+dynBalance) - (+margin)).toFixed(2)\n      const available = balance > 0 ? balance : 0\n      const exchanged = (originVolume * (+this.contract.multiplier)).toFixed(4)\n      return {\n        dynBalance, //动态余额\n        margin,         //存入保证金\n        available,      //可用余额\n        exchanged,      //换算的值\n        leverage,        //杠杆\n      }\n    } else if(this.position && this.position.margin){\n      const dynBalance = ((+this.position.margin) + (+this.position.unrealizedPnl)).toFixed(2)\n      const margin = (+this.position.marginHeld).toFixed(2)\n      const available = ((+dynBalance) - (+margin)).toFixed(2)\n      return {\n        dynBalance,\n        margin,\n        available,\n      }\n    }\n    return {}\n  }\n\n  get direction(){    \n    // 正仓\n    if(this.margin !== ''){\n      if((+this.position.volume) > 0) {\n        if(Math.abs(this.volume) > Math.abs(this.position.volume)) {\n          return 'long'\n        } else {\n          return 'short'\n        }\n      } else if((+this.position.volume) < 0){\n        //负仓\n        if((+this.volume) > Math.abs(+this.position.volume)){\n          return 'short'\n        } else {\n          return 'long'\n        }\n      }\n    }\n    return 0\n  }\n\n  //资金费率\n  async loadFundingRate(wallet,config){\n    if(config){\n      const chainId = wallet && wallet.isConnected() && wallet.supportChain ? wallet.detail.chainId : config.chainId\n      if(config){    \n        const res = await getFundingRate(chainId,config.pool,config.symbolId)\n        return res;\n      }\n    }\n  }\n\n  get fundingRateTip(){\n    if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\n      return `Funding  Rate (per block) = ${this.fundingRate.fundingRatePerBlock}` +\n      `\\n(1 Long contract pays 1 short contract ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} per block)`        \n    }\n    return ''\n  }\n\n\n\n}","import { makeAutoObservable, observable, action, computed } from \"mobx\";\nconst versionKey = 'deri-current-version'\n\nexport default class Version {\n  current = null;\n\n  constructor(){\n    makeAutoObservable(this,{\n      current : observable,\n      setCurrent : action,\n      isV1 : computed,\n      isV2 : computed\n    })\n    const versionFromSession = sessionStorage.getItem(versionKey);\n    this.current = versionFromSession ? versionFromSession : null\n  }\n\n\n  setCurrent(version,notSave){\n    this.current = version;\n    if(!notSave){\n      sessionStorage.setItem(versionKey,version)\n    }\n  }\n\n  switch(){\n    if(this.current === 'v1'){\n      this.setCurrent('v2')\n    } else {\n      this.setCurrent('v1')\n    }\n  }\n\n  get isV1() {\n    return this.current === 'v1'\n  }\n\n  get isV2(){\n    return this.current === 'v2'\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom'\nimport App from './App';\nimport './assets/deri.less';\nimport { Provider } from 'mobx-react';\nimport Wallet from './model/Wallet';\n//note dont remove zhe line\nimport NumberPolyfill from './lib/polyfill/numberPolyfill'\nimport Trading from './model/Trading';\nimport { DeriEnv } from './lib/web3js/config';\nimport Version from './model/Version';\n\nconst wallet = new Wallet();\nconst trading = new Trading()\nconst version = new Version();\n\nif(process.env.NODE_ENV === 'production') {\n  DeriEnv.set('prod')\n} \nDeriEnv.set('dev')\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider wallet={wallet}  trading={trading} version={version}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","export const getDBProviderUrlsConfig = () => [\n  'https://data-seed-prebsc-1-s1.binance.org:8545/',\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\n];\n\nexport const getDBAddressConfig = (env = 'dev', useProductionDB) => {\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\n    // for production\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n\nexport const getDBWormholeAddressConfig = (env = 'dev', useProductionDB) => {\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\n    // for production\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\n  }\n  // for test\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\n};\n\nexport const getDBAirdropAddressConfig = (env = 'dev', useProductionDB) => {\n  if ((env === 'prod' || env === 'production') && useProductionDB) {\n    // for production\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n","\n\nimport BigNumber from 'bignumber.js'\nexport function bg(value, base = 0) {\n  if (base == 0) {\n    return BigNumber(value);\n  } else if (base > 0) {\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\n  } else {\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\n  }\n}\n\nexport function deriNatural(value) {\n  return bg(value, -18);\n}\n\nexport function formatAddress(address){\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\n}\n\nexport function formatBalance(balance){\n  return balance && (+balance).toFixed(4)\n}\n\nexport function eqInNumber(str1,str2){\n  return (+str1) === (+str2)\n}\n\nexport function isLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\nexport function isSushiLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\n}\nexport function isCakeLP(address){\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\n\nexport function sessionStorageKey(version){\n  return `${version}-current-trading-pool`\n}\n\nexport function storeConfig(version,config){\n  if(config){\n    const key = sessionStorageKey(version);\n    sessionStorage.setItem(key,JSON.stringify(config))\n  }\n}\n\nexport function getConfigFromStore(version){\n  return JSON.parse(sessionStorage.getItem(sessionStorageKey(version)))\n}\n\n","import { bTokenFactory, slpPoolFactory } from '../factory/contracts';\nimport { getSlpContractAddress } from '../utils';\n\n/**\n * Get liquidity info of SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getSlpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balance(poolAddress),\n      bToken.balance(accountAddress),\n      slpPool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n    };\n  }\n  console.log('no SlpPool address, please check');\n  return {};\n};\n\n/**\n * Add liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\n/**\n * Unlock the account in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getSlpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getSlpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n","import { bTokenFactory, clp2PoolFactory } from '../factory/contracts';\nimport { getClp2ContractAddress } from '../utils';\n\nexport const getClp2LiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balance(poolAddress),\n      bToken.balance(accountAddress),\n      clp2Pool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n    };\n  }\n  console.log('no Clp2Pool address, please check');\n  return {};\n};\n\nexport const addClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const removeClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const getClp2WalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getClp2ContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n","import {\n  bTokenFactory,\n  clpPoolFactory,\n  lTokenFactory,\n} from '../factory/contracts';\nimport { bg, getClpContractAddress } from '../utils';\n\n/**\n * Get liquidity Info of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getClpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const clpPool = clpPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { liquidity } = await clpPool.getStateValues();\n  //console.log(liquidity);\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: (lTokenTotalSupply.eq(0)\n      ? bg(0)\n      : liquidity.div(lTokenTotalSupply)\n    ).toString(),\n    maxRemovableShares: lTokenBalance.toString(),\n  };\n};\n\n/**\n * Add liquidity to the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clpPool.addLiquidity(accountAddress, amount);\n      console.log(tx, typeof tx);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    try {\n      const tx = await clpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isClpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress);\n};\n\n/**\n * Unlock the account in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockClp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getClpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getClpContractAddress(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balance(accountAddress);\n  return balance.toString();\n};\n","import Web3 from 'web3';\nimport { metaMaskWeb3, web3Factory } from '../factory/web3';\n\nconst MAX_GAS_AMOUNT = 532731;\n\nexport class Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    this.chainId = chainId;\n    this.contractAddress = contractAddress;\n    if (isProvider) {\n      this.web3 = web3Factory(chainId);\n    } else {\n      this.web3 = metaMaskWeb3();\n    }\n  }\n  setAccount(accountAddress) {\n    this.accountAddress = accountAddress;\n    return this;\n  }\n  setPool(poolAddress) {\n    this.poolAddress = poolAddress;\n    return this;\n  }\n  async _call(method, args = []) {\n    return await this.contract.methods[method](...args).call();\n  }\n\n  async _estimatedGas(method, args = [], accountAddress) {\n    let gas = 0;\n    for (let i = 0; i < 20; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (err) {\n        //console.log(\"err\", err);\n      }\n    }\n    if (gas == 0) gas = MAX_GAS_AMOUNT;\n    if (gas > MAX_GAS_AMOUNT) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt === null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _transact(method, args, accountAddress) {\n    const [gas, gasPrice] = await Promise.all([\n      this._estimatedGas(method, args, accountAddress),\n      this.web3.eth.getGasPrice(),\n    ]);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods[method](...args).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import Web3 from 'web3';\nimport { Contract } from './contract';\nimport {\n  hasInvalidArgsValue,\n  getBTCUSDPrice,\n  getOracleInfo,\n  deriToNatural,\n  bg,\n} from '../utils';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  processFundingRate,\n} from '../calculation';\n\n/* eslint-disable */\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PerpetualPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, isProvider);\n    this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\n  }\n\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async getStateValues() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getStateValues');\n      //console.log(\"getStateValues() raw:\", res)\n      result = {\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\n        liquidity: deriToNatural(res.liquidity),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      result = {\n        cumuFundingRate: defaultValue,\n        cumuFundingRateBlock: defaultValue,\n        liquidity: defaultValue,\n        tradersNetCost: defaultValue,\n        tradersNetVolume: defaultValue,\n      };\n      console.log(`getStateValues: ${err}`);\n    }\n    return result;\n  }\n\n  async getParameters() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getParameters');\n      // console.log(\"getParameters() raw: \", res)\n      result = {\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n        priceDelayAllowance: bg(res.priceDelayAllowance),\n      };\n    } catch (err) {\n      result = {\n        multiplier: defaultValue,\n        feeRatio: defaultValue,\n        minPoolMarginRatio: defaultValue,\n        minInitialMarginRatio: defaultValue,\n        minMaintenanceMarginRatio: defaultValue,\n        minAddLiquidity: defaultValue,\n        redemptionFeeRatio: defaultValue,\n        fundingRateCoefficient: defaultValue,\n        minLiquidationReward: defaultValue,\n        maxLiquidationReward: defaultValue,\n        liquidationCutRatio: defaultValue,\n        priceDelayAllowance: defaultValue,\n      };\n      console.log(`getParameters: ${err}`);\n    }\n    return result;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt == null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _estimatedGas(method, args, accountAddress) {\n    // !this.accountAddress &&\n    //   console.log('please do setAccount(accountAddress) first');\n    let gas = 0;\n    for (let i = 0; i < 20; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (err) {\n        //console.log(\"err\", err);\n      }\n    }\n    if (gas == 0) gas = 532731;\n    if (gas > 532731) gas = 532731;\n    return gas;\n  }\n\n  async _transactPool(method, args = [], accountAddress) {\n    // !this.accountAddress &&\n    //   console.log('please do setAccount(accountAddress) first');\n    const oracle = await getOracleInfo(this.chainId, this.contractAddress);\n    let signed = [oracle.timestamp, oracle.price, oracle.v, oracle.r, oracle.s];\n\n    const [gas, gasPrice] = await Promise.all([\n      this._estimatedGas(method, [...args, ...signed], accountAddress),\n      this.web3.eth.getGasPrice(),\n    ]);\n    console.log(`gasPrice ${gasPrice / 1000000000} GW`);\n\n    //gasPrice: Web3.utils.numberToHex(gasPrice),\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n\n  async getFundingRate() {\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\n    price = await getBTCUSDPrice(this.chainId, this.contractAddress);\n    try {\n      const { tradersNetVolume, liquidity } = await this.getStateValues();\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        minPoolMarginRatio,\n      } = await this.getParameters();\n      //console.log(\"minPoolMarginRatio\", minPoolMarginRatio.toString())\n      const args1 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        fundingRateCoefficient,\n      ];\n      if (hasInvalidArgsValue(...args1)) {\n        fundingRate = '0';\n        fundingRatePerBlock = '0';\n      } else {\n        fundingRatePerBlock = calculateFundingRate(...args1);\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\n      }\n      const args2 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        minPoolMarginRatio,\n      ];\n      if (hasInvalidArgsValue(...args2)) {\n        liquidityUsed = '0';\n      } else {\n        liquidityUsed = calculateLiquidityUsed(...args2);\n      }\n      return {\n        price,\n        multiplier: multiplier.toString(),\n        fundingRate: fundingRate,\n        fundingRatePerBlock: fundingRatePerBlock,\n        tradersNetVolume: tradersNetVolume.toString(),\n        liquidity: liquidity.toString(),\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\n        liquidityUsed: liquidityUsed,\n        poolMarginRatio: minPoolMarginRatio.toString(),\n      };\n    } catch (err) {\n      console.log('PerpetualPool#gerFundingRate():', err);\n      throw err;\n    }\n  }\n\n  async depositMargin(accountAddress, amount) {\n    //await this.web3.eth.getAccounts(console.log)\n    console.log('depositMargin');\n    let res;\n    try {\n      let tx = await this._transactPool(\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [amount],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      console.log('here');\n      res = { success: false, error: err };\n    }\n    return res;\n  }\n  async _getBlockInfo(blockNumber) {\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    //toBlock = toBlock.number;\n    let amount;\n    if (this.chainId === '56') {\n      amount = 1999;\n    } else {\n      amount = 4999;\n    }\n    if (fromBlock + amount > to) {\n      amount = to - fromBlock;\n    }\n    while (fromBlock <= to) {\n      //console.log('tick')\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if (fromBlock + amount > to) {\n        amount = to - fromBlock;\n      }\n    }\n    return events;\n  }\n  async _getTimeStamp(blockNumber) {\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n}\n","import { Contract } from './contract';\nimport { bg, deriToNatural, MAX_VALUE } from '../utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_upgradedAddress\",\"type\":\"address\"}],\"name\":\"deprecate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deprecated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_evilUser\",\"type\":\"address\"}],\"name\":\"addBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradedAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_maker\",\"type\":\"address\"}],\"name\":\"getBlackListStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBasisPoints\",\"type\":\"uint256\"},{\"name\":\"newMaxFee\",\"type\":\"uint256\"}],\"name\":\"setParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basisPointsRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlackListed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_clearedUser\",\"type\":\"address\"}],\"name\":\"removeBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blackListedUser\",\"type\":\"address\"}],\"name\":\"destroyBlackFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"Deprecate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"feeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"maxFee\",\"type\":\"uint256\"}],\"name\":\"Params\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_blackListedUser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"DestroyedBlackFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AddedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"RemovedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}]\n/* eslint-enable */\n\nexport class BTokenContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\n    super(chainId, contractAddress, isProvider);\n    this.poolAddress = poolAddress;\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n\n  async isUnlocked(accountAddress) {\n    let allowance = await this._call('allowance', [\n      accountAddress,\n      this.poolAddress,\n    ]);\n    allowance = deriToNatural(allowance);\n    return allowance.gt(0);\n  }\n\n  async unlock(accountAddress) {\n    return await this._transact(\n      'approve',\n      [this.poolAddress, MAX_VALUE],\n      accountAddress\n    );\n  }\n\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n  async _balance(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balance(address) {\n    const [res, decimals] = await Promise.all([\n      this._balance(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n\n  // for slp pool use\n  // async balanceOf(poolAddress) {\n  //   //const res = await this._call('balanceOf', [poolAddress])\n  //   let result\n  //   const [res, decimals] = await Promise.all([\n  //     this._balance(this.poolAddress),\n  //     this.decimals(),\n  //   ])\n  //   result = bg(res, -decimals)\n  //   return result\n  // }\n}\n","import { deriToNatural, bg } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PTokenContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\n    super(chainId, contractAddress, isProvider);\n    this.poolAddress = poolAddress;\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n\n  async getPositionInfo(accountAddress) {\n    let result = {};\n    try {\n      const res = await this._call('getPosition(address)', [accountAddress]);\n      //console.log(\"getPositionInfo() raw:\", res)\n      result = {\n        volume: deriToNatural(res[0]),\n        cost: deriToNatural(res[1]),\n        lastCumuFundingRate: deriToNatural(res[2]),\n        margin: deriToNatural(res[3]),\n        lastUpdateTimestamp: bg(res[4]),\n      };\n    } catch (err) {\n      result = {\n        volume: bg(0),\n        cost: bg(0),\n        lastCumuFundingRate: bg(0),\n        margin: bg(0),\n        lastUpdateTimestamp: bg(0),\n      };\n      console.log(`getPositionInfo: ${err}`);\n    }\n    return result;\n  }\n\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n}\n","import { deriToNatural } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class LTokenContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, isProvider) {\n    super(chainId, contractAddress, isProvider);\n    this.poolAddress = poolAddress;\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n\n  async balance(accountAddress) {\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\n    //console.log(\"> lToken balance\", res.toString())\n    return res;\n  }\n\n  async totalSupply() {\n    const res = deriToNatural(await this._call('totalSupply'));\n    //console.log(\"> lToken totalSupply\", res.toString())\n    return res;\n  }\n}\n","import Web3 from 'web3';\nimport { getDBProviderUrlsConfig } from '../config/database';\nimport { getAliveHttpServer, checkHttpServerIsAlive } from '../utils';\n\n/* eslint-disable */\nconst DB_CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseContract {\n  constructor(contractAddress, providerUrl) {\n    this.providerUrl = providerUrl;\n    this.contractAddress = contractAddress;\n    if (this.providerUrl) {\n      this._init();\n    }\n  }\n  _init() {\n    // only use 'bsc testnet' with chainId 97\n    this.web3 = new Web3(new Web3.providers.HttpProvider(this.providerUrl));\n    this.contract = new this.web3.eth.Contract(\n      DB_CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n\n  async updateProviderUrl() {\n    if (!this.providerUrl) {\n      this.providerUrl = await getAliveHttpServer(getDBProviderUrlsConfig());\n      this._init();\n    } else if (\n      this.providerUrl &&\n      !(await checkHttpServerIsAlive(this.providerUrl))\n    ) {\n      this.providerUrl = await getAliveHttpServer(getDBProviderUrlsConfig());\n      this._init();\n    }\n  }\n\n  async getValues(keyArray) {\n    let res\n    let retry = 3\n    while(retry > 0) {\n      try {\n        await this.updateProviderUrl();\n        res = await this.contract.methods.getValues(keyArray).call();\n      } catch (err) {\n        this.providerUrl = null\n      }\n      if (res) {\n        break\n      }\n      retry -= 1\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`database getValues(): exceed max retry 3.`)\n    }\n    return res\n  }\n}\n","import { getDBProviderUrlsConfig } from '../config/database';\nimport Web3 from 'web3';\nimport { getAliveHttpServer, checkHttpServerIsAlive } from '../utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseWormholeContract {\n  constructor(contractAddress, providerUrl) {\n    this.providerUrl = providerUrl;\n    this.contractAddress = contractAddress;\n    if (this.providerUrl) {\n      this._init();\n    }\n  }\n\n  async updateProviderUrl() {\n    if (!this.providerUrl) {\n      this.providerUrl = await getAliveHttpServer(getDBProviderUrlsConfig());\n      this._init();\n    } else if (\n      this.providerUrl &&\n      !(await checkHttpServerIsAlive(this.providerUrl))\n    ) {\n      this.providerUrl = await getAliveHttpServer(getDBProviderUrlsConfig());\n      this._init();\n    }\n  }\n\n  _init() {\n    // only use 'bsc testnet' with chainId 97\n    this.web3 = new Web3(new Web3.providers.HttpProvider(this.providerUrl));\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n\n  async signature(accountAddress) {\n    let res\n    let retry = 3\n    while(retry > 0) {\n      try {\n        await this.updateProviderUrl();\n        res = await this.contract.methods['signature'](accountAddress).call();\n      } catch (err) {\n        this.providerUrl = null\n      }\n      if (res) {\n        break\n      }\n      retry -= 1\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`database getValues(): exceed max retry 3.`)\n    }\n    return res\n  }\n}\n","import { getDBProviderUrlsConfig } from '../config/database';\nimport Web3 from 'web3';\nimport { getAliveHttpServer, checkHttpServerIsAlive } from '../utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseAirdropContract {\n  constructor(contractAddress, providerUrl) {\n    this.providerUrl = providerUrl;\n    this.contractAddress = contractAddress;\n    if (this.providerUrl) {\n      this._init();\n    }\n  }\n\n  _init() {\n    // only use 'bsc testnet' with chainId 97\n    this.web3 = new Web3(new Web3.providers.HttpProvider(this.providerUrl));\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n\n  async updateProviderUrl() {\n    if (!this.providerUrl) {\n      this.providerUrl = await getAliveHttpServer(getDBProviderUrlsConfig());\n      this._init();\n    } else if (\n      this.providerUrl &&\n      !(await checkHttpServerIsAlive(this.providerUrl))\n    ) {\n      this.providerUrl = await getAliveHttpServer(getDBProviderUrlsConfig());\n      this._init();\n    }\n  }\n\n  async getValues(keyArray) {\n    let res\n    let retry = 3\n    while(retry > 0) {\n      try {\n        await this.updateProviderUrl();\n        res = await this.contract.methods.getValues(keyArray).call();\n      } catch (err) {\n        this.providerUrl = null\n      }\n      if (res) {\n        break\n      }\n      retry -= 1\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`database getValues(): exceed max retry 3.`)\n    }\n    return res\n  }\n}\n","import Web3 from 'web3';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"\",\"deployedBytecode\":\"\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\n/* eslint-enable */\n\nexport class MiningVaultPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, isProvider);\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI['abi'],\n      this.contractAddress\n    );\n  }\n  async mintDToken(accountAddress, ...args) {\n    //return this._transact('claim', args)\n    // !this.accountAddress &&\n    //   console.log('please do setAccount(accountAddress) first');\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import Web3 from 'web3';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class MiningVaultRouter extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, isProvider);\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n  async mint(accountAddress, ...args) {\n    //console.log(accountAddress, args)\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    //console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: Web3.utils.numberToHex(gas),\n        value: Web3.utils.numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    //console.log('txRaw', txRaw)\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class SlpPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, isProvider);\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    const res = await this._call('userInfo', [152, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class ClpPool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, isProvider);\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('addLiquidity', args, accountAddress);\n  }\n\n  async removeLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('removeLiquidity', args, accountAddress);\n  }\n\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n    };\n  }\n\n  async getStateValues() {\n    const res = await this._call('getStateValues');\n    return {\n      liquidity: deriToNatural(res),\n    };\n  }\n\n  async getLiquidity() {\n    const res = await this._call('getStateValues');\n    if (res && res.liquidity) {\n      return deriToNatural(res.liquidity);\n    }\n    throw new Error(\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\n    );\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class Clp2Pool extends Contract {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, isProvider);\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    //console.log('hit clp2')\n    const res = await this._call('userInfo', [391, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}","import { deriToNatural, MAX_VALUE, bg } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DeriContract extends Contract {\n  constructor(chainId, contractAddress, poolAddress, useProvider) {\n    super(chainId, contractAddress, useProvider);\n    this.poolAddress = poolAddress;\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n\n  async isUnlocked(accountAddress) {\n    let allowance = await this._call('allowance', [\n      accountAddress,\n      this.poolAddress,\n    ]);\n    return deriToNatural(allowance).gt(0);\n  }\n  async unlock(accountAddress) {\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\n    return await this._transact(\n      'approve',\n      [this.poolAddress, MAX_VALUE],\n      accountAddress\n    );\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n\n  async _balance(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balance(address) {\n    const [res, decimals] = await Promise.all([\n      this._balance(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n}\n","import { getDeriContractAddress, naturalToDeri } from '../utils';\nimport { Contract } from './contract';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class WormholeContract extends Contract {\n  constructor(chainId, contractAddress, useProvider) {\n    super(chainId, contractAddress, useProvider);\n    this.contract = new this.web3.eth.Contract(\n      CONTRACT_ABI,\n      this.contractAddress\n    );\n  }\n  async freeze(accountAddress, amount, toChainId) {\n    const { wormholeAddress: toWormholeAddress } = getDeriContractAddress(\n      toChainId\n    );\n    return this._transact(\n      'freeze',\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\n      accountAddress\n    );\n  }\n\n  async mintDeri(\n    accountAddress,\n    amount,\n    fromChainId,\n    fromWormhole,\n    fromNonce,\n    v,\n    r,\n    s\n  ) {\n    return this._transact(\n      'claim',\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\n      accountAddress\n    );\n  }\n}\n","import { PerpetualPool } from '../contract/perpetual_pool';\nimport { BTokenContract } from '../contract/bToken';\nimport { PTokenContract } from '../contract/pToken';\nimport { LTokenContract } from '../contract/lToken';\nimport { DatabaseContract } from '../contract/database';\nimport { DatabaseWormholeContract } from '../contract/database_wormhole';\nimport { DatabaseAirdropContract } from '../contract/database_airdrop';\nimport { MiningVaultPool } from '../contract/mining_vault_pool';\nimport { MiningVaultRouter } from '../contract/mining_vault_router';\n\nimport { DeriEnv } from '../config/env';\nimport { getDBAddressConfig, getDBWormholeAddressConfig, getDBAirdropAddressConfig } from '../config';\nimport { SlpPool } from '../contract/slp_pool';\nimport { ClpPool } from '../contract/clp_pool';\nimport { Clp2Pool } from '../contract/clp2_pool';\nimport { DeriContract } from '../contract/deri';\nimport { WormholeContract } from '../contract/wormhole';\nimport { getLpContractAddress } from '../utils';\n// import { getPoolBaseSymbolList } from '../utils'\n\nexport const databaseFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAddressConfig(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseWormholeFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBWormholeAddressConfig(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseWormholeContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseAirdropFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAirdropAddressConfig(DeriEnv.get(), useProductionDB);\n    const key = address;\n    //console.log('---airdrop key', key)\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseAirdropContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const perpetualPoolFactory = (() => {\n  const perpetualPoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\n      return perpetualPoolInstanceMap[key];\n    }\n    const perpetualPool = new PerpetualPool(\n      chainId,\n      contractAddress,\n      isProvider\n    );\n    // console.log(\"new PerpetualPoolContract\");\n    perpetualPoolInstanceMap[key] = perpetualPool;\n    return perpetualPool;\n  };\n})();\n\nexport const bTokenFactory = (function () {\n  const bTokenInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\n    }\n    if (Object.keys(bTokenInstanceMap).includes(key)) {\n      return bTokenInstanceMap[key];\n    }\n    const bToken = new BTokenContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    // console.log(\"new BTokenContract\")\n    bTokenInstanceMap[key] = bToken;\n    return bToken;\n  };\n})();\n\nexport const pTokenFactory = (function () {\n  const pTokenInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\n    }\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\n      return pTokenInstanceMap[key];\n    }\n    const pToken = new PTokenContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    // console.log(\"new PTokenContract\")\n    pTokenInstanceMap[key] = pToken;\n    return pToken;\n  };\n})();\n\nexport const lTokenFactory = (function () {\n  const lTokenInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.${poolAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}.${poolAddress}`;\n    }\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\n      return lTokenInstanceMap[key];\n    }\n    const lToken = new LTokenContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    // console.log(\"new LTokenContract\")\n    lTokenInstanceMap[key] = lToken;\n    return lToken;\n  };\n})();\n\nexport const miningVaultPoolFactory = (function () {\n  const mVaultInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(mVaultInstanceMap).includes(key)) {\n      return mVaultInstanceMap[key];\n    }\n    const mVault = new MiningVaultPool(chainId, contractAddress, isProvider);\n    // console.log(\"new MiningValutPool\")\n    mVaultInstanceMap[key] = mVault;\n    return mVault;\n  };\n})();\n\nexport const slpPoolFactory = (function () {\n  const slpPoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\n      return slpPoolInstanceMap[key];\n    }\n    const slpPool = new SlpPool(chainId, contractAddress, isProvider);\n    slpPoolInstanceMap[key] = slpPool;\n    return slpPool;\n  };\n})();\n\nexport const clpPoolFactory = (function () {\n  const clpPoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\n      return clpPoolInstanceMap[key];\n    }\n    const clpPool = new ClpPool(chainId, contractAddress, isProvider);\n    clpPoolInstanceMap[key] = clpPool;\n    return clpPool;\n  };\n})();\n\nexport const clp2PoolFactory = (function () {\n  const clp2PoolInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\n      return clp2PoolInstanceMap[key];\n    }\n    const clp2Pool = new Clp2Pool(chainId, contractAddress, isProvider);\n    clp2PoolInstanceMap[key] = clp2Pool;\n    return clp2Pool;\n  };\n})();\n\n// export const lpPoolFactory = (function () {\n//   const lpPoolInstanceMap = {};\n//   return (chainId, contractAddress, isProvider = false) => {\n//     let key;\n//     if (isProvider) {\n//       key = `${chainId}.${contractAddress}.isProvider`;\n//     } else {\n//       key = `${chainId}.${contractAddress}`;\n//     }\n//     if (Object.keys(lpPoolInstanceMap).includes(key)) {\n//       return lpPoolInstanceMap[key];\n//     } else {\n//       let lpPool;\n//       const { type } = getLpContractAddress(chainId, contractAddress);\n//       console.log(`lp type: ${type}`);\n//       if (type === 'slp') {\n//         lpPool = new SlpPool(chainId, contractAddress, isProvider);\n//       } else if (type === 'clp') {\n//         lpPool = new ClpPool(chainId, contractAddress, isProvider);\n//       }\n//       lpPoolInstanceMap[key] = lpPool;\n//       return lpPool;\n//     }\n//   };\n// })();\n\nexport const deriFactory = (function () {\n  const deriInstanceMap = {};\n  return (chainId, contractAddress, poolAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(deriInstanceMap).includes(key)) {\n      return deriInstanceMap[key];\n    }\n    const deri = new DeriContract(\n      chainId,\n      contractAddress,\n      poolAddress,\n      isProvider\n    );\n    deriInstanceMap[key] = deri;\n    return deri;\n  };\n})();\n\nexport const wormholeFactory = (function () {\n  const wormholeInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(wormholeInstanceMap).includes(key)) {\n      return wormholeInstanceMap[key];\n    }\n    const wormhole = new WormholeContract(chainId, contractAddress, isProvider);\n    wormholeInstanceMap[key] = wormhole;\n    return wormhole;\n  };\n})();\n\nexport const miningVaultRouterFactory = (function () {\n  const mVaultInstanceMap = {};\n  return (chainId, contractAddress, isProvider = false) => {\n    let key;\n    if (isProvider) {\n      key = `${chainId}.${contractAddress}.isProvider`;\n    } else {\n      key = `${chainId}.${contractAddress}`;\n    }\n    if (Object.keys(mVaultInstanceMap).includes(key)) {\n      return mVaultInstanceMap[key];\n    }\n    const mVault = new MiningVaultRouter(chainId, contractAddress, isProvider);\n    mVaultInstanceMap[key] = mVault;\n    return mVault;\n  };\n})();\n","// export const DERI_ENV=\"dev\"\nexport const DeriEnv = (() => {\n  let _deriEnv = 'dev';\n  return {\n    get: () => _deriEnv,\n    set: (value) => {\n      if (value === 'dev' || value === 'prod' || value === 'production') {\n        _deriEnv = value;\n      } else {\n        throw new Error(\"please use 'dev' or 'prod' for DeriEnv\");\n      }\n    },\n  };\n})();\n"],"sourceRoot":""}