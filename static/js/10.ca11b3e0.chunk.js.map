{"version":3,"sources":["components/Button/Button.js","utils/DeriNumberFormat.js","hooks/useDisableScroll.js","components/hoc/withModal.js","components/Claim/Claim.js","hooks/useClaimInfo.js","hooks/useConfig.js","../node_modules/react-modal/lib/index.js","hooks/useQuery.js","hooks/useSpecification.js","components/Mining/Liquidity/Liquidity.js","components/Mining/Liquidity/Dialog/AddLiquidity.js","components/Mining/Liquidity/Dialog/RemoveLiquidity.js","components/Mining/Liquidity/LiquidityMining.js","components/Mining/Trade/Liquidity.js","components/Mining/Trade/TradeMining.js","mobile/pages/Mining/Mining.js"],"names":["Button","btnText","className","disabled","click","afterClick","checkApprove","wallet","spec","status","setStatus","useState","isApproved","setIsApproved","pending","setPending","loadRef","useRef","beforeAction","current","style","display","afterAction","useEffect","async","detail","account","res","pool","bTokenId","loadApproveStatus","onClick","approve","success","alert","ref","marginRight","DeriNumberFormat","props","renderablity","setRenderablity","allowZero","others","undefined","value","isNaN","Math","abs","displayType","useDisableScroll","nested","document","querySelector","overflow","withModal","Component","appElement","getElementById","customizeStyle","overlay","position","zIndex","background","content","border","inset","WithModal","React","constructor","super","this","state","modalIsOpen","render","overlayMerged","Object","assign","mergedStyle","isOpen","onClose","Claim","miningClaim","tradingClaim","setBtnText","claimed","setClaimed","claimInfo","claimInfoInterval","setClaimInfo","interval","loadClaimInfo","isConnected","getUserInfoAll","total","toFixed","unclaimed","valid","amount","harvestDeriLp","lp","harvestDeriTrade","trade","chainId","window","setInterval","clearInterval","useClaimInfo","remainingTime","setRemainingTime","config","type","DeriEnv","get","useConfig","period","parseInt","Date","now","dis","h","m","s","text","eqInNumber","mintDToken","claim","defineProperty","exports","obj","_Modal","require","_Modal2","__esModule","default","module","useQuery","URLSearchParams","useLocation","search","useSpecification","address","symbolId","setSpec","getSpecification","loadSpec","AddDialog","baseToken","afterAdd","balance","isLpPool","baseTokenId","setAmount","decimal","setDecimal","addValue","setAddValue","substring","indexOf","length","thousandSeparator","decimalScale","placeholder","onChange","e","target","max","bg","gt","minAddLiquidity","addLpLiquidity","addLiquidity","RemoveDialog","liqInfo","afterRemove","unit","setBalance","formatShares","totalShares","data-dismiss","removeLpLiquidity","removeLiquidity","Operator","version","loadLiqidityInfo","btnType","setBtnType","setIsOpen","buttonElment","setButtonElment","loadBalance","getLpWalletBalance","getWalletBalance","unlockLp","unlock","error","message","connect","result","isLpUnlocked","isUnlocked","isApprove","el","inject","observer","liquidity","setLiquidity","bToken","setBToken","loadLiquidityInfo","apyPool","getPoolInfoApy","pooLiquidity","getPoolLiquidity","lpApy","info","getLpLiquidityInfo","getLiquidityInfo","isLP","getLpPoolInfoApy","apy2","shares","multipliedBy","shareValue","poolLiquidity","apy","percent","dividedBy","toString","values","sharesTitle","pnl","plus","isCakeLP","suffix","title","isSushiLP","prefix","LiquidityMining","configInfo","Config","userInfoInPool","setUserInfoInPool","tradeSummary","setTradeSummary","history","useHistory","userInfo","userInfoPool","getUserInfoInPool","myTradingVolumeCurrent","volume1h","loadUserInfoInPool","totalTradingVolumeCurrent","getTradeInfo","configs","load","isV1","find","c","storeConfig","push","TradeMining","env","chainInfo","currentTab","setCurrentTab","useParams","query","networkText","poolInfoClass","classnames","has"],"mappings":"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","file":"static/js/10.ca11b3e0.chunk.js","sourcesContent":["import {useState,useRef,useEffect} from 'react';\nimport { isUnlocked, unlock } from '../../lib/web3js/indexV2';\nexport default function Button({btnText,className,disabled,click,afterClick,checkApprove,wallet,spec}){\n  const [status, setStatus] = useState(disabled ? 'disabled' : 'enabled');\n  const [isApproved, setIsApproved] = useState(true);\n  const [pending, setPending] = useState(false);\n  const loadRef = useRef(null)\n\n  const onClick = async () => {\n    if(status !== 'enabled') {\n      return ;\n    }\n    beforeAction()\n    const result = await click();    \n    if(result){\n      afterClick && afterClick()\n    } \n    afterAction()\n  }\n\n  const beforeAction = ()  => {\n    setStatus('disabled')\n    setPending(true);\n    loadRef.current && (loadRef.current.style.display = 'inline-block')\n  }\n\n  const afterAction = () => {\n    loadRef.current && (loadRef.current.style.display = 'none')\n    setStatus('enabled')\n    setPending(false);\n  }\n\n  const loadApproveStatus = async () => {\n    if(checkApprove && wallet && wallet.detail.account){\n      const res = await wallet.isApproved(spec.pool,spec.bTokenId)\n      setIsApproved(res);\n    }\n  }\n  const approve = async () => {\n    beforeAction();\n    const res = await wallet.approve(spec.pool,spec.bTokenId);\n    if(res.success){\n      setIsApproved(true);\n    } else {\n      setIsApproved(false)\n      alert('Approve faild')\n    }\n    afterAction();\n  }\n\n  const action = () => {\n    if(isApproved){\n      onClick();\n    } else {\n      approve();\n    }\n  }\n\n  useEffect(() => {\n    loadApproveStatus();\n    return () => {};\n  }, [wallet,spec,checkApprove]);\n\n  return(\n    <button className={className} onClick={action} >\n        <span className='btn-loading-wrap'>\n          <span ref={loadRef}\n            className='spinner spinner-border spinner-border-sm'\n            style={{display : 'none' ,marginRight : '2'}}>\n          </span>\n        </span>\n          {pending ? 'PENDING' : (isApproved ? btnText : 'APPROVE')  }\n        </button>\n  )\n}","import React,{useState,useEffect} from 'react'\nimport NumberFormat from 'react-number-format'\n\nexport default function DeriNumberFormat(props){\n  const [renderablity, setRenderablity] = useState('--');\n\n  useEffect(() => {\n    const {allowZero,...others} = props \n    if(((props.value !== undefined && props.value !== '' && props.value !== 'NaN') || ((isNaN(props.value) && Math.abs(props.value)) === 0 && allowZero === true ))) {\n      setRenderablity(<NumberFormat {...others} displayType = 'text' />)\n    } \n    return () => {};\n  }, [props.value]);\n\n  return renderablity;\n}","import { useEffect } from 'react'\n\nexport default function useDisableScroll(nested) {\n  \n  useEffect(() => {\n    // window.scrollTo(0, 0);\n    document.querySelector('body').style.overflow = 'hidden'\n    return () => {\n      if(!nested){\n        document.querySelector('body').style.overflow = 'auto'\n      }\n    };\n  }, []);\n  return null;\n}\n","import React from 'react'\nimport Modal from 'react-modal/lib/components/Modal';\n\nconst withModal = Component => {\n  const appElement = document.getElementById('root')\n  const customizeStyle =  {\n    overlay: {\n      position: 'fixed',\n      zIndex : 1,\n      background : 'rgb(0 0 0 / 0.5)'\n    },\n    content: {\n      position: 'absolute',\n      border : 0,\n      background : 'none',\n      inset : 0,\n      overflow : 'initial'\n    }\n  };\n\n  class WithModal extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        modalIsOpen : false\n      }\n    }\n\n    render(){\n      const {modalIsOpen,className,overlay = {}} = this.props\n      const overlayMerged = Object.assign(customizeStyle.overlay,{...overlay})\n      const mergedStyle = Object.assign(customizeStyle,{overlay :overlayMerged})\n      return (\n        <Modal isOpen={modalIsOpen} style={mergedStyle} appElement={appElement}>\n          <div className={className}>\n            <Component {...this.props} className={className} onClose={this.props.onClose}/>\n          </div>\n        </Modal>\n      )\n    }\n  }\n\n  return WithModal;\n}\nexport default withModal;","import { useState, useEffect} from 'react'\n\nimport useClaimInfo from \"../../hooks/useClaimInfo\";\nimport useConfig from \"../../hooks/useConfig\";\nimport { mintDToken } from \"../../lib/web3js/indexV2\";\nimport Button from '../Button/Button';\nimport { eqInNumber } from '../../utils/utils';\n\nexport default function Claim({wallet,miningClaim,tradingClaim}){\n\tconst [btnText, setBtnText] = useState('Collect Wallet')\n\tconst [claimed, setClaimed] = useState(false);\n\tconst [claimInfo,claimInfoInterval] = useClaimInfo(wallet);\n\tconst [remainingTime, setRemainingTime] = useState('')\n\tconst config = useConfig(claimInfo.chainId) \n\n  //claim deri\n\tconst claim = async () => {\n\t\tif(!eqInNumber(wallet.detail.chainId,claimInfo.chainId)) {\n\t\t\talert(`Your DERI is on ${ config.text } . Connect to ${ config.text } to claim.`)\n\t\t\treturn ;\n\t\t}\n\t\tif (claimInfo.unclaimed === 0) {\n\t\t\talert('Sorry,no DERI to claim yet');\n\t\t\treturn;\n\t\t}\n\t\tlet now = parseInt(Date.now() / 1000) % (3600 * 8);\n\t\tif (now < 1800) {\n\t\t\talert('Claiming DERI is disabled during first 30 minutes of each epoch');\n\t\t\treturn;\n\t\t}\n\t\tconst res = await mintDToken(wallet.detail.chainId,wallet.detail.account)\n\t\tif(res.success){\n\t\t\tclearInterval(claimInfoInterval);\n\t\t\treturn true;\n\t\t} else {\n\t\t\talert('Claim failed')\n\t\t\treturn false;\n\t\t}\n  }\n\n\tconst click = async () => {\n\t\tif(wallet.isConnected()){\n\t\t\tconst res = await claim();\n\t\t\tif(res){\n\t\t\t\tsetClaimed(true)\n\t\t\t}\n\t\t} \n\t}\n\n\n\t\n\t//初始化按钮文案和事件\n\tconst initButton = () => {\n\t\tif(wallet.isConnected()){\n\t\t\tsetBtnText('CLAIM')\n\t\t} else {\n\t\t\tsetBtnText('Collect Wallet')\n\t\t}\n\t}\n  \n  useEffect(() => {\n\t\tlet interval = null;\n\t\tif(miningClaim){\n\t\t\t//计数器\n\t\t\tinterval = window.setInterval(() => {\n\t\t\t\tlet period = 3600 * 8;\n\t\t\t\tlet current = parseInt(Date.now()/1000);\n\t\t\t\tlet epochBegin = parseInt(current / period)*period;\n\t\t\t\tlet dis = (epochBegin + period - current);\n\t\t\t\tlet h = parseInt(dis / 3600);\n\t\t\t\tlet m = parseInt((dis % 3600)/60)\n\t\t\t\tlet s = parseInt(dis % 60) \n\t\t\t\tsetRemainingTime(`${h} h ${m} m ${s} s`);\n\t\t\t},1000);\n\t\t}    \n\n\t\tinitButton();\t\t\n    return () => {\n      interval && clearInterval(interval);\n\t\t};\n\t\t\n  }, [wallet.detail.account]);\n\n\n  return (\n    <div className='claim-box'>\n\t\t\t\t<div className='odd title'>{miningClaim ?  'My Liquidity-Providing Harvest in Current Epoch' : 'My Trading Harvest in Current Epoch'}</div>\n\t\t\t\t{miningClaim && <div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'>Current Epoch Remaining Time</div>\n\t\t\t\t\t\t<div className='text-num'>{ remainingTime }</div>\n\t\t\t\t</div>}\t\t\t\t\n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t{miningClaim && <div className='text-title'>My Harvest in Current Epoch (estimated)</div>}\n\t\t\t\t\t\t{tradingClaim && <div className='text-title'> My Trading Harvest in Current Epoch (Est)</div>}\n\t\t\t\t\t\t<div className='text-num'>{ miningClaim ? claimInfo.harvestDeriLp : claimInfo.harvestDeriTrade} DERI</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'>Claimed DERI</div>\n\t\t\t\t\t\t<div className='text-num'>{claimed ? ((+claimInfo.claimed) + (+claimInfo.unclaimed)).toFixed(2) : claimInfo.claimed }</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'></div>\n\t\t\t\t\t\t<div className='text-num'></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'>Unclaimed DERI</div>\n\t\t\t\t\t\t<div className='text-num'>{ claimed ? 0 : (+claimInfo.unclaimed).toFixed(2) }</div>\n\t\t\t\t</div>\n\t\t\t\t{tradingClaim && \n\t\t\t\t<div className='odd text'>\n\t\t\t\t\t\t<div className='text-title'></div>\n\t\t\t\t\t\t<div className='text-num'></div>\n\t\t\t\t</div>}\n\t\t\t\t<div className='odd claim-network'>\n\t\t\t\t\t\t{miningClaim && <div className='text-title'>Your DERI is on { config.text } . Connect to { config.text } to claim.</div>}\n\t\t\t\t</div>\n\t\t\t\t<div className='claim-btn'>\n\t\t\t\t\t<Button btnText={btnText} click={click} className='claim'/>\t\t\t\t\t\n\t\t\t\t</div>\n      </div>\n  ) \n}","import { useState, useEffect } from 'react'\nimport { getUserInfoAll ,deriToNatural} from '../lib/web3js/indexV2';\n\n\nexport default function useClaimInfo(wallet){\n  const [claimInfo, setClaimInfo] = useState({});\n  let interval = null;\n\n  const loadClaimInfo =  async () => {\n    if(wallet.isConnected()){\n      const claimInfo  = await getUserInfoAll(wallet.detail.account);\n      const claimed = (+claimInfo.total).toFixed(2);\n      const unclaimed = claimInfo.valid ? (+claimInfo.amount).toFixed(2) : 0;\n      const harvestDeriLp = (+claimInfo.lp).toFixed(2);\n      const harvestDeriTrade = (+claimInfo.trade).toFixed(2);\n      const chainId = claimInfo.chainId\n      setClaimInfo({claimed,unclaimed,harvestDeriLp,harvestDeriTrade,chainId})\n    }\n  }\n\n  useEffect(() => {\n    interval = window.setInterval(loadClaimInfo,1000 * 60 *3);\n      loadClaimInfo();\n    return () => clearInterval(interval);\n  }, [wallet.detail.account])\n  return [claimInfo,interval];\n}","import config from '../config.json'\nimport {DeriEnv} from '../lib/web3js/indexV2'\nexport default function useConfig(chainId,type = 'chainInfo'){\n  return config[DeriEnv.get()][type][chainId] || {};\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Modal = require(\"./components/Modal\");\n\nvar _Modal2 = _interopRequireDefault(_Modal);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Modal2.default;\nmodule.exports = exports[\"default\"];","import { useLocation } from \"react-router-dom\";\n\nexport default function useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n","import { useState, useEffect } from 'react'\nimport { getSpecification } from \"../lib/web3js/indexV2\";\n\nexport default function useSpecification({wallet,address,symbolId}){\n  const [spec, setSpec] = useState({});\n\n  const loadSpec = async () => {\n    if(wallet.isConnected() && address){\n      const spec =  await getSpecification(wallet.detail.chainId,address,symbolId);\n      setSpec(spec);\n    }\n  }\n\n  useEffect(() => {\n    loadSpec();\n    return () => {      \n    }\n  }, wallet.detail.account,address);\n\n  return spec;\n}","import React, { useState, useEffect} from 'react'\nimport {\n\tgetLiquidityInfo,getPoolInfoApy,isUnlocked,unlock,getPoolLiquidity, getWalletBalance, unlockLp, isLpUnlocked, getLpWalletBalance, getLpLiquidityInfo,getLpPoolInfoApy, bg\n} from '../../../lib/web3js/indexV2'\nimport AddLiquidity from './Dialog/AddLiquidity';\nimport RemoveLiquidity from './Dialog/RemoveLiquidity';\nimport Button from '../../Button/Button';\nimport { inject, observer } from 'mobx-react';\nimport withModal from '../../hoc/withModal';\nimport { eqInNumber, isCakeLP, isLP, isSushiLP } from '../../../utils/utils';\nimport DeriNumberFormat from '../../../utils/DeriNumberFormat';\n\nfunction Liquidity({wallet,version,chainId,baseToken,address,type,baseTokenId,symbolId}) {\n  const [liquidity,setLiquidity] = useState({})\n  const [bToken,setBToken] = useState(baseToken)\n\tconst isLpPool = (type === 'lp')\n\tconst loadLiquidityInfo = async () => {\n\t\tconst apyPool = await getPoolInfoApy(chainId,address,baseTokenId)\n\t\tconst pooLiquidity = await getPoolLiquidity(chainId,address,baseTokenId);\n\t\tif(wallet.isConnected() && eqInNumber(chainId , wallet.detail.chainId)){\n\t\t\tlet info = null;\n\t\t\tif(isLpPool){\n\t\t\t\tinfo = await getLpLiquidityInfo(chainId,address,wallet.detail.account)\n\t\t\t} else {\n\t\t\t\tinfo = await getLiquidityInfo(chainId,address,wallet.detail.account,baseTokenId);\n\t\t\t}\n\t\t\tlet lpApy ;\n\t\t\tif(isLP(address)){\n\t\t\t\tlet lapy = await getLpPoolInfoApy(chainId,address)\n\t\t\t\tlpApy = (+lapy.apy2) * 100;                     \t\t\t\t\t\t\n\t\t\t\t// if(!info.shareValue){\n\t\t\t\t// \tinfo.shareValue = 1; \n\t\t\t\t// }\n\t\t\t}\n\t\t\tif(info){\n\t\t\t\tconst shares = bg(info.shares)\n\t\t\t\tif(version === 'v1') {\n\t\t\t\t\tconst total = shares.multipliedBy(info.shareValue)\n\t\t\t\t\tsetLiquidity({\n\t\t\t\t\t\ttotal :  (+info.poolLiquidity),\n\t\t\t\t\t\tapy : ((+apyPool.apy) * 100).toFixed(2),\n\t\t\t\t\t\tshareValue : info.shareValue,\n\t\t\t\t\t\tpercent : info.poolLiquidity > 0 ? total.dividedBy(info.poolLiquidity).multipliedBy(100).toFixed(2) : 0,\n\t\t\t\t\t\tshares : shares.toFixed(2),\n\t\t\t\t\t\tformatShares : shares.toFixed(2),\n\t\t\t\t\t\ttotalShares : bg(shares).toString(),\n\t\t\t\t\t\tvalues : total.toFixed(2),\n\t\t\t\t\t\tlpApy,\n\t\t\t\t\t\tunit : 'shares',\n\t\t\t\t\t\tsharesTitle : 'Staked Balance'\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tsetLiquidity({\n\t\t\t\t\t\ttotal : (+info.poolLiquidity),\n\t\t\t\t\t\tapy : ((+apyPool.apy) * 100).toFixed(2),\n\t\t\t\t\t\tpnl : (+info.pnl).toFixed(2),\n\t\t\t\t\t\tshares : shares.toString(),\n\t\t\t\t\t\tformatShares : shares.toFixed(2),\n\t\t\t\t\t\ttotalShares : bg(shares).plus(info.pnl).toString(),\n\t\t\t\t\t\tpercent : info.poolLiquidity > 0 ? shares.dividedBy(info.poolLiquidity).multipliedBy(100).toFixed(2) : 0,\n\t\t\t\t\t\tunit : baseToken,\n\t\t\t\t\t\tsharesTitle : 'My Liquidity',\n\t\t\t\t\t})\n\t\t\t\t}\t\n\t\t\t}\n\t\t} else {\n\t\t\t\n\t\t\tlet lpApy ;\n\t\t\tif(isLP(address)){\n\t\t\t\tlet lapy = await getLpPoolInfoApy(chainId,address)\n        \t\tlpApy = (+lapy.apy2) * 100;                           \n\t\t\t}\n\t\t\tif(pooLiquidity){\n\t\t\t\tsetLiquidity({\n\t\t\t\t\ttotal : pooLiquidity.liquidity,\n\t\t\t\t\tapy : (+apyPool.apy) * 100,\n\t\t\t\t\tlpApy\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tloadLiquidityInfo();\n\t\t//cake 显示的baseToken 不一致，特殊处理\n\t\tif(isCakeLP(address)){\n\t\t\tsetBToken('CAKE-LP')\n\t\t}\n\t\treturn () => {}\n\t}, [wallet.detail.account,baseToken])\n\n\n  return (\n    <div className=\"liquidity-box\">\n      <div className=\"odd title\">Provide { bToken } Earn DERI</div>\n\t\t\t\t<div className=\"odd text\">\n\t\t\t\t\t\t<div className=\"text-title\">Pool Total Liquidity</div>\n\t\t\t\t\t\t<div className=\"text-num\"><DeriNumberFormat allowZero={true} value={ liquidity.total} suffix={` ${ bToken}`  } thousandSeparator={true}/></div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"odd text\">\n\t\t\t\t\t\t<div className=\"text-title\">APY</div>\n\t\t\t\t\t\t<div className='text-num' >\n\t\t\t\t\t\t\t<span title={isLP(address) && 'DERI-APY'} className={`${isLP(address) && 'sushi-apy-underline'}`}>\n\t\t\t\t\t\t\t\t<DeriNumberFormat value={ liquidity.apy } decimalScale={2} suffix='%'/></span>\n\t\t\t\t\t\t\t\t{isLP(address) && <><span> +</span> <span className=\"sushi-apy-underline text-num\" title={isSushiLP(address) ? 'SUSHI-APY' : 'CAKE-APY'}> \n\t\t\t\t\t\t\t\t<DeriNumberFormat value={  liquidity.lpApy } allowZero={true}  decimalScale={2} suffix='%'/></span></>}\n\t\t\t\t\t\t</div>\t\t\t\t\t\t\n\t\t\t\t</div>\t\n\t\t\t\t{version === 'v1' && <div className=\"odd text\">\n\t\t\t\t\t<div className=\"text-title\">Liquidity Share Value</div>\n\t\t\t\t\t<div className=\"text-num\"><DeriNumberFormat  allowZero={true} decimalScale={6} value={ liquidity.shareValue} suffix={ ' '+ bToken } thousandSeparator={true}/></div>\t\t\t\t\t\t\n\t\t\t\t</div>}\n\t\t\t\t<div className=\"odd text\">\n\t\t\t\t\t\t<div className=\"text-title\">My Liquidity Pencentage</div>\n\t\t\t\t\t\t<div className=\"text-num\"><DeriNumberFormat allowZero={true} value={ liquidity.percent } decimalScale={2} suffix={'%'}/></div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"odd text\">\n\t\t\t\t\t\t<div className=\"text-title\">{liquidity.sharesTitle} </div>\n\t\t\t\t\t\t<div className=\"text-num\"><DeriNumberFormat allowZero={true}  value={ liquidity.formatShares } decimalScale={2} /> <span>{liquidity.unit}</span> </div>\n\t\t\t\t</div>\n\t\t\t\t{version === 'v2' && <div className=\"odd text\">\n\t\t\t\t\t<div className='text-title'>Mining PnL</div>\n\t\t\t\t\t<div className=\"text-num\">≈ &nbsp;<DeriNumberFormat allowZero={true} prefix=' ' value={ liquidity.pnl } decimalScale={2} suffix ={' '+ bToken }  /></div>\n\t\t\t\t</div>}\n\t\t\t\t<div className=\"odd claim-network\">\n\t\t\t\t\t<div className=\"text-title money\">{version === 'v1' && <DeriNumberFormat allowZero={true}   value={liquidity.values} suffix ={' '+ bToken } decimalScale={2}/>}</div>\t\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<Operator version={version} wallet={wallet} chainId={chainId} address={address} liqInfo={liquidity} baseToken={bToken} isLpPool={isLpPool} loadLiqidityInfo={loadLiquidityInfo} symbolId={symbolId} baseTokenId={baseTokenId}/>\n\t</div>\n  )\n}\n\n\nconst AddDialog = withModal(AddLiquidity)\nconst RemoveDialog = withModal(RemoveLiquidity)\n\n//操作区\nconst Operator = ({version,wallet,chainId,address,baseToken,isLpPool,liqInfo,loadLiqidityInfo,baseTokenId,symbolId})=> {\n\tconst [isApproved,setIsApproved] = useState(false)\n\tconst [btnType, setBtnType] = useState('add')\n\tconst [isOpen, setIsOpen] = useState(false)\n\tconst [balance, setBalance] = useState('');\n\tconst [buttonElment, setButtonElment] = useState(null);\n\t\n\n  const loadBalance = async () => {\n    if(wallet.isConnected() && eqInNumber(wallet.detail.chainId,chainId)){\n\t\t\tlet total = null;\n\t\t\tif(isLpPool){\n\t\t\t\ttotal = await getLpWalletBalance(wallet.detail.chainId,address,wallet.detail.account);\n\t\t\t} else {\n\t\t\t\ttotal = await getWalletBalance(wallet.detail.chainId,address,wallet.detail.account,baseTokenId);\n\t\t\t}\n\t\t\tif(typeof total !== 'object'){\n\t\t\t\tsetBalance(total)\t\t\t\t\n\t\t\t}\n    }\n  }\n\n  useEffect(() => {\n\t\tloadBalance();\n\t\tloadLiqidityInfo();\n    return () => {}\n  }, [wallet.detail.account])\n\n\n\tconst isApprove = async () => {\n\t\tif(isLpPool){\n\t\t\tconst result = await isLpUnlocked(chainId,address,wallet.detail.account) \t\t\t \n\t\t\tsetIsApproved(result);\n\t\t\treturn result;\n\t\t} else {\n\t\t\tconst result = await isUnlocked(chainId,address,wallet.detail.account,baseTokenId) \t\t\t \n\t\t\tsetIsApproved(result);\n\t\t\treturn result;\n\t\t}\n\t}\n\t\n\n\n\tconst approve = async () => {\n\t\tlet res = null;\n\t\tif(isLpPool){\n\t\t\tres = await unlockLp(chainId,address,wallet.detail.account);\n\t\t} else {\n\t\t\tres = await unlock(chainId,address,wallet.detail.account,baseTokenId);\n\t\t}\t\t\n\t\tif(res && res.success){\n\t\t\tsetIsApproved(true)\n\t\t} else {\n\t\t\talert(res.error ?  res.error.message || 'Approve failed' : 'Approve failed')\n\t\t}\n  }\n\n\n\tconst connect =  async () => {\n\t\tawait wallet.connect();\n\t}\n\t\n\tconst addLiquidity = () => {\n\t\tsetIsOpen(true);\n\t\tsetBtnType('add')\n\t}\n\n\tconst afterClick = () => {\n\t\tsetIsOpen(false);\n\t\t// loadLiquidity()\n\t\tloadBalance();\n\t\tloadLiqidityInfo();\n\t}\n\n\tconst removeLiquidity = () => {\n\t\tsetIsOpen(true);\n\t\tsetBtnType('remove')\n\t}\n\n\n  \n  useEffect(() => {\n\t\t//todo 判断网络\n    if(wallet.isConnected() && eqInNumber(wallet.detail.chainId, chainId)){\n\t\t\tisApprove()\n    }\n\t\treturn () => {}\n\t}, [wallet.detail.account])\n\n\tuseEffect(() => {\t\t\n\t\tif(wallet.isConnected() && eqInNumber(wallet.detail.chainId,chainId) && isApproved){\n\t\t\tsetButtonElment((<div className=\"add-remove-liquidity\">\n\t\t\t<button \n\t\t\t\t\tclassName=\"add-liquidity\"\n\t\t\t\t\tonClick={addLiquidity}>\n\t\t\t\t\tADD LIQUIDITY\n\t\t\t</button>\n\t\t\t<button className=\"remove-liquidity\" onClick={removeLiquidity}>\n\t\t\t\t\tREMOVE LIQUIDITY\n\t\t\t</button>\n\t\t</div>))\n\t\t} else {\n\t\t\tlet el = null\n\t\t\tif(!wallet.isConnected()){\n\t\t\t\tel = <div className='approve'><Button className='approve-btn' click={connect} btnText='Connect Wallet'></Button></div>\n\t\t\t} else if(!eqInNumber(wallet.detail.chainId,chainId)) {\n\t\t\t\tel = <div className=\"approve\" ><Button className='approve-btn wrong-network' btnText='Wrong Network'></Button></div>\t\t\t\t\n\t\t\t} else if(!isApproved) {\n\t\t\t\tel = <div className='approve'><Button className='approve-btn' click={approve} btnText='APPROVE'></Button></div>\n\t\t\t} \n\t\t\tsetButtonElment(el)\n\t\t}\n\t\t\t\n\t\treturn () => {};\n\t}, [wallet.detail.account,isApproved]);\n\n  return (\n    <div className=\"liquidity-btn\">\n\t\t\t{\n\t\t\t\tbtnType === 'add' \n\t\t\t\t? <AddDialog  modalIsOpen={isOpen} isLpPool={isLpPool} onClose={afterClick} balance={balance}\n\t\t\t\t\t\t\t\t\t\t  address={address} wallet={wallet} baseToken={baseToken} afterAdd={afterClick} baseTokenId={baseTokenId}  symbolId={symbolId}/> \n\t\t\t\t: <RemoveDialog  modalIsOpen={isOpen} isLpPool={isLpPool} onClose={afterClick} liqInfo={liqInfo} \n\t\t\t\t\t\t\t\t\t\t\taddress={address} wallet={wallet} unit={version === 'v1' ? 'shares' :baseToken} afterRemove={afterClick} baseTokenId={baseTokenId} symbolId={symbolId}/>\n\t\t\t}\t\t\t\n\t\t\t{buttonElment}\n  </div>\n  )\n}\n\nexport default inject('wallet')(observer(Liquidity))","import React, { useState ,useEffect} from 'react'\nimport NumberFormat from 'react-number-format'\nimport Button from '../../../Button/Button';\nimport Modal from 'react-modal'\nimport { addLiquidity, getWalletBalance, bg, addLpLiquidity } from '../../../../lib/web3js/indexV2';\nimport useSpecification from '../../../../hooks/useSpecification';\nimport useDisableScroll from '../../../../hooks/useDisableScroll';\n\n\n\nexport default function AddLiquidity({wallet,address,baseToken,onClose,afterAdd,balance,isLpPool,baseTokenId,symbolId}){\n  const [amount, setAmount] = useState('0');\n  const [decimal, setDecimal] = useState('00');\n  const [addValue, setAddValue] = useState('')\n  const spec = useSpecification({wallet,address,symbolId});\n  useDisableScroll();\n\n\n  const input = (e) => {\n    const {value} =e.target\n    setAddValue(value)\n  }\n\n  const addAll = () => {\n    setAddValue(balance);\n  }\n\n  const addLiq = async () => {\n    const max = bg(balance)\n    const cur = bg(addValue);\n    if(cur.gt(max)) {\n      alert(\"not sufficient funds\");\n      return false;\n    }\n    if(spec && (+addValue) < (+spec.minAddLiquidity)) {\n      alert(`The input liquidity shall not be less than ${spec.minAddLiquidity}`);\n      return false;\n    }\n    if(addValue <=0 || isNaN(addValue)){\n      alert(\"It has to be greater than zero\");\n      return false;\n    }\n    let res =  null;\n    if(isLpPool){\n      res = await addLpLiquidity(wallet.detail.chainId,address,wallet.detail.account,addValue);\n    } else{\n      res = await addLiquidity(wallet.detail.chainId,address,wallet.detail.account,addValue,baseTokenId)\n    }\n    \n    if (!res ||  !res.success) {\n      alert(\"failure of transaction\");\n    }\n    return true;\n  }\n\n  useEffect(() => {    \n    const amount = (+balance).toFixed(2)\n    const decimal = amount.substring(amount.indexOf('.') + 1,amount.length)\n    setAmount(amount);\n    setDecimal(decimal)\n    return () => {};\n  }, [balance]);\n\n\n  return(\n    <div className='modal-dialog'>\n        <div className='modal-content'>\n          <div className='modal-header'>\n            <div className='title'>ADD LIQUIDITY</div>\n            <div className='close' onClick={onClose}>\n              <span>&times;</span>\n            </div>\n          </div>\n          <div className='modal-body'>\n            <div className='margin-box-info'>\n              <div>Wallet Balance</div>\n              <div className='money'>\n                <span> \n                  <span className='bt-balance'>\n                    <NumberFormat displayType='text' value ={amount } thousandSeparator={true} allowZero={true} decimalScale={0}/>.\n                    <span className='float'><NumberFormat displayType='text' value ={decimal} thousandSeparator={true} decimalScale={2} allowZero={true}/></span>\n                  </span> \n                    <div className='base-token'>{ baseToken }</div> \n                  </span>\n                <span className='add'></span>\n              </div>\n              <div className='enter-margin'>\n                <div className='input-margin'>\n                  <div className='box'>\n                    <div className='amount' style={{display : addValue ? 'block' : 'none'}}>LIQUIDITY</div>\n                    <input\n                      type='number'\n                      className='margin-value'\n                      placeholder='LIQUIDITY'\n                      value={addValue}\n                      onChange={input}\n                    />\n                  </div>\n                </div>\n                <div>{ baseToken }</div>\n              </div>\n              <div className='max'>\n                MAX: <span className='max-num'>{balance }</span>\n                <span className='max-btn-left' onClick={addAll}>ADD ALL</span>\n              </div>\n              <div className='add-margin-btn'>\n                <Button className='margin-btn' click={addLiq} btnText='ADD' afterClick={afterAdd}/>\n              </div>\n            </div>\n          </div>    \n        </div>\n      </div>\n  )\n}","import React, { useState ,useEffect} from 'react'\nimport NumberFormat from 'react-number-format'\nimport { removeLiquidity, bg, removeLpLiquidity } from '../../../../lib/web3js/indexV2';\nimport Button from '../../../Button/Button';\nimport useDisableScroll from '../../../../hooks/useDisableScroll';\n\nexport default function RemoveLiquidity({wallet,address,liqInfo,onClose,afterRemove,isLpPool,baseTokenId,unit}){  \n  const [amount, setAmount] = useState('');\n  const [balance, setBalance] = useState('0');\n  const [decimal, setDecimal] = useState('00');\n  useDisableScroll();\n\n\n  const addAll = () => {\n    setAmount(liqInfo.totalShares)\n  }\n\n  const onChange = e => {\n    const {value} = e.target;\n    setAmount(value)\n  }\n\n  const remove = async () => {\n    const max = bg(liqInfo.totalShares);\n    const cur = bg(amount);\n    if (cur.gt(max)) {\n      alert(`Your current max removable shares are  ${liqInfo.totalShares}`);\n      return false;\n    }\n    if(!isLpPool){\n      const balance = (+liqInfo.totalShares) - (+amount)\n      if (balance < 1 && balance > 0) {\n        alert('Leaving staking balance of smaller than 1 is not allowed. Please click \"MAX\" to remove all if you are to withdraw all of your liquidity.');\n        return false;\n      }\n    }\n    if (+amount <= 0 || isNaN(amount)) {\n      alert(\"Invalid Liquidity!\");\n      return false;\n    }\n    let res = null;\n    if(isLpPool){\n      res = await removeLpLiquidity(wallet.detail.chainId,address,wallet.detail.account,amount);\n    } else {\n      res = await removeLiquidity(wallet.detail.chainId,address,wallet.detail.account,amount,baseTokenId);\n    }\n    \n    if(!res || !res.success){\n      alert(\"failure of transaction\");\n      return false; \n    }\n    return true;\n  }\n\n\n  useEffect(() => {    \n    if(liqInfo && liqInfo.formatShares){\n      const balance = liqInfo.formatShares;\n      const decimal = balance.substring(balance.indexOf('.') +1 ,balance.indexOf('.') + 3)\n      setBalance(balance);\n      setDecimal(decimal)\n    }\n    return () => {};\n  }, [liqInfo.totalShares]);\n\n  \n  \n  return(\n    <div className='modal-dialog'>\n        <div className='modal-content'>\n          <div className='modal-header'>\n            <div className='title'>REMOVE LIQUIDITY</div>\n            <div className='close' data-dismiss='modal' onClick={onClose}>\n              <span>&times;</span>\n            </div>\n          </div>\n          <div className='modal-body'>          \n            <div className='margin-box-info'>\n              <div>Shares Available</div>\n              <div className='money'>\n                <span>\n                  <span className='bt-balance'>\n                    <NumberFormat displayType='text' value ={balance} decimalScale={0} thousandSeparator={true}/>.\n                    <span className='float'>{decimal}</span>\n                  </span>\n                    </span>\n                <span className='remove'></span>\n              </div>\n              <div className='enter-margin'>\n                <div className='input-margin'>\n                  <div className='box'>\n                    <div className='amount' style={{display : amount ? 'block' : 'none'}}>\n                      LIQUIDITY SHARES\n                    </div>\n                    <input\n                      type='number'\n                      className='margin-value'\n                      placeholder='LIQUIDITY SHARES'\n                      value={amount}\n                      onChange={onChange}\n                    />\n                  </div>\n                </div>\n                <div>{unit}</div>\n              </div>\n              <div className='max'>\n                <span>MAX REMOVEABLE:</span>\n                <span className='max-num'>{liqInfo.totalShares}</span>\n                <span className='max-btn-left' onClick={addAll}>REMOVE ALL</span>\n              </div>\n              <div className='add-margin-btn'>\n                <Button click={remove} className='margin-btn' btnText='REMOVE' afterClick={afterRemove}/>\n              </div>\n            </div>\n          </div>    \n        </div>\n      </div>\n      )\n}","import Claim from '../../Claim/Claim';\nimport Liquidity from './Liquidity';\n\n\nfunction LiquidityMining(props){\n  return (\n    <div className=\"liquidity-info\">\n      <Claim {...props} miningClaim={true}/>\n      <Liquidity {...props}/>\n  </div>)\n}\n\nexport default LiquidityMining","import { useState, useEffect } from 'react'\nimport {Link} from 'react-router-dom'\nimport { getUserInfoAll,getUserInfoInPool ,getPoolInfoApy} from '../../../lib/web3js/indexV2';\nimport { useHistory } from 'react-router-dom';\nimport { inject, observer } from 'mobx-react';\nimport { storeConfig, eqInNumber } from '../../../utils/utils';\nimport Config from '../../../model/Config';\n\nconst configInfo = new Config();\n\n\nfunction Liquidity({wallet = {},version,chainId,address,symbolId}) {\n  const [userInfoInPool,setUserInfoInPool] = useState({})\n  const [tradeSummary, setTradeSummary] = useState({});\n  const history = useHistory();\n\n\tconst loadUserInfoInPool = async () => {\n\t\tconst userInfo = await getUserInfoAll(wallet.account);\n\t\tconst userInfoPool = await getUserInfoInPool(chainId,address,wallet.account);\n\t\tconst harvestDeriTrade = (+userInfo.trade).toFixed(2);\n\t\tconst myTradingVolumeCurrent = userInfoPool.volume1h\n\t\tsetUserInfoInPool({harvestDeriTrade,myTradingVolumeCurrent})\n\t}\n\n\tconst getTradeInfo = async () => {\n\t\tconst poolInfo = await getPoolInfoApy(chainId,address);\n\t\tconst totalTradingVolumeCurrent = poolInfo.volume1h\n\t\tsetTradeSummary({totalTradingVolumeCurrent})\n  }\n  \n  const toTrade = () => {\n    const configs = configInfo.load(version);\n    const config = version.isV1 ? configs.find(c => eqInNumber(c.pool,address)) : configs.find(c => eqInNumber(c.pool,address) && c.symbolId === symbolId)\n    storeConfig(version.current,config)\n    history.push('/lite')\n  }\n\n\tuseEffect(() => {\n\t\tif(wallet && wallet.account){\n\t\t\tloadUserInfoInPool();\n\t\t\tgetTradeInfo();\n\t\t}\n\t\treturn () => {};\n\t}, []);\n\n  return(\n    <div className=\"liquidity-box\">\n      <div className=\"odd title\">Trade to Earn DERI</div>\n        <div className=\"odd text\">\n            <div className=\"text-title\">Total Trading Volume in Current Hour</div>\n            <div className=\"text-num\">{ tradeSummary.totalTradingVolumeCurrent || 0}</div>\n        </div>\n        <div className=\"odd text\">\n            <div className=\"text-title\">My Trading Volume in Current Hour</div>\n            <div className=\"text-num\">{ userInfoInPool.myTradingVolumeCurrent || 0 }</div>\n        </div>\n        <div className=\"odd text\">\n            <div className=\"text-title\"></div>\n            <div className=\"text-num\"></div>\n        </div>\n        <div className=\"odd text\">\n            <div className=\"text-title\"></div>\n            <div className=\"text-num\"></div>\n        </div>\n        <div className=\"odd text\">\n            <div className=\"text-title\"></div>\n            <div className=\"text-num\"></div>\n        </div>\n        <div className=\"odd claim-network\">\n              \n        </div>\n        <div className=\"claim-btn\">\n            <button className=\"claim\" onClick={toTrade}>\n              TRADE\n            </button>\n        </div>\n    </div> \n  )\n}\nexport default inject('version')(observer(Liquidity))","import Claim from '../../Claim/Claim';\nimport Liquidity from './Liquidity';\n\nexport default function TradeMining({wallet,...props}){\n  return(\n    <div className=\"trade-info\">\n      <Claim wallet={wallet} tradingClaim={true}/>\n\t\t\t<Liquidity {...props}/>\n  </div>\n  )\n}","import {useState} from 'react'\nimport {useParams} from \"react-router-dom\";\nimport LiquidityMining from \"../../../components/Mining/Liquidity/LiquidityMining\";\nimport TradeMining from \"../../../components/Mining/Trade/TradeMining\";\nimport {DeriEnv} from '../../../lib/web3js/indexV2'\nimport config from '../../../config.json'\nimport './mining.less'\nimport classnames from \"classnames\";\nimport { inject, observer } from 'mobx-react';\nimport useQuery from '../../../hooks/useQuery'\n\nconst env = DeriEnv.get();\nconst {chainInfo} = config[env]\n\nfunction Mining({wallet}){\n\tconst [currentTab,setCurrentTab] = useState('liquidity')\n\tconst {version,chainId,baseToken,address,type} =  useParams();\n\tconst query = useQuery();\n\tconst networkText = chainInfo[chainId].text;\n\tconst props = {version,chainId,baseToken,address,wallet,type}\n\tconst poolInfoClass = classnames('mining-info',currentTab)\n\tif(query.has('baseTokenId')) {\n\t\tprops['baseTokenId'] = query.get('baseTokenId')\n\t}\n\tif(query.has('symbolId')){\n\t\tprops['symbolId'] = query.get('symbolId')\n\t}\n\t\n\treturn(\n    <div className={poolInfoClass}>\n\t\t\t<div className=\"pool-header\">\n\t\t\t\t\t<div className=\"pool-network\">\n\t\t\t\t\t\t\t{baseToken} @ {networkText}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"check-trade-liquidity\">\n\t\t\t\t\t\t\t<div className='liquidity-mining' onClick={() => setCurrentTab('liquidity')} >\n\t\t\t\t\t\t\t\t\tLIUQIDITY MINING\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='trade-mining' onClick={() => setCurrentTab('trade')} >\n\t\t\t\t\t\t\t\t\tTRADING MINING\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='pool-info'>\n\t\t\t\t\t<LiquidityMining {...props}/>\n\t\t\t\t\t<TradeMining {...props}/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default inject('wallet')(observer(Mining))"],"sourceRoot":""}