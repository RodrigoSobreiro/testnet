{"version":3,"sources":["utils/LoadableComponent.js","lib/web3js/shared/config/rest_server.js","model/Intl.js","lib/web3js/shared/config/env.js","lib/web3js/shared/config/constant.js","lib/web3js/shared/config/version.js","lib/web3js/shared/config/chain.js","lib/web3js/shared/config/database.js","lib/web3js/shared/config/config.js","lib/web3js/shared/utils/validate.js","lib/web3js/shared/config/pool_v1.js","lib/web3js/shared/utils/time.js","lib/web3js/shared/utils/factory.js","lib/web3js/shared/utils/network.js","lib/web3js/shared/utils/chain.js","lib/web3js/shared/factory/web3.js","lib/web3js/shared/utils/web3.js","lib/web3js/shared/utils/api.js","lib/web3js/shared/utils/derijsnext.js","lib/web3js/shared/config/token.js","lib/web3js/shared/config/config_processor.js","lib/web3js/shared/contract/contract_base.js","lib/web3js/shared/contract/database/database.js","lib/web3js/shared/contract/database/database_wormhole.js","lib/web3js/shared/contract/database/database_airdrop.js","lib/web3js/shared/contract/abis.js","lib/web3js/shared/contract/b_token.js","lib/web3js/shared/contract/oracle/wrapped_oracle.js","lib/web3js/shared/contract/activity/broker_manager.js","lib/web3js/shared/contract/activity/ptoken_airdrop.js","lib/web3js/shared/config/oracle.js","lib/web3js/shared/contract/adapter.js","lib/web3js/shared/contract/abi/TERC20Abi.js","lib/web3js/shared/contract/abi/ERC20Abi.js","lib/web3js/shared/contract/abi/chainlinkOracleAbi.js","lib/web3js/shared/contract/abi/offChainOracleAbi.js","lib/web3js/shared/contract/abi/offChainVolatilityOracleAbi.js","lib/web3js/shared/contract/abi/TERC20MintLimitAbi.js","lib/web3js/shared/contract/factory.js","lib/web3js/shared/contract/gen/ERC20.js","lib/web3js/shared/contract/gen/TERC20.js","lib/web3js/shared/contract/gen/TERC20MintLimit.js","lib/web3js/shared/contract/gen/ChainlinkOracle.js","lib/web3js/shared/contract/gen/OffChainOracle.js","lib/web3js/shared/utils/oracle.js","lib/web3js/shared/contract/gen/OffChainVolatilityOracle.js","lib/web3js/shared/contract/oracle/symbol_oracle_off_chain.js","lib/web3js/shared/contract/oracle/woo_oracle.js","lib/web3js/shared/factory/oracle.js","lib/web3js/shared/factory/database.js","lib/web3js/shared/factory/contract/b_token.js","lib/web3js/shared/contract/TERC20.js","lib/web3js/shared/contract/deri/deri.js","lib/web3js/shared/contract/deri/mining_vault_pool.js","lib/web3js/shared/contract/deri/mining_vault_router.js","lib/web3js/shared/contract/deri/wormhole.js","lib/web3js/shared/factory/contract/deri.js","lib/web3js/shared/contract/lp_pool/slp_pool.js","lib/web3js/shared/contract/lp_pool/clp_pool.js","lib/web3js/shared/contract/lp_pool/clp2_pool.js","lib/web3js/shared/factory/contract/lp_pool.js","lib/web3js/shared/factory/contract/activity.js","lib/web3js/shared/api/wallet_api.js","lib/web3js/shared/api/database_api.js","lib/web3js/shared/api/deri_query_api.js","lib/web3js/shared/api/deri_transaction_api.js","lib/web3js/v2/contract/abis.js","lib/web3js/v2/contract/perpetual_pool.js","lib/web3js/v2/contract/perpetual_pool_router.js","lib/web3js/v2/contract/l_token.js","lib/web3js/v2/contract/p_token.js","lib/web3js/v2/factory.js","lib/web3js/shared/api/activity_api.js","lib/web3js/shared/api/slp_pool_api.js","lib/web3js/shared/api/clp2_pool_api.js","lib/web3js/v1/calculation/fundingRate.js","lib/web3js/v1/calculation/index.js","lib/web3js/v1/contract/perpetual_pool.js","lib/web3js/v1/contract/p_token.js","lib/web3js/v1/contract/l_token.js","lib/web3js/v1/factory.js","lib/web3js/shared/api/clp_pool_api.js","lib/web3js/shared/api/lp_pool_query_api.js","lib/web3js/shared/api/lp_pool_transaction_api.js","lib/web3js/shared/api/ERC20_api.js","lib/web3js/v2_lite_open/config.js","lib/web3js/v2_lite_open/contract/abis.js","lib/web3js/v2_lite_open/contract/abi/oracleFactoryChainlinkAbi.js","lib/web3js/v2_lite_open/contract/abi/oracleFactoryOffChainAbi.js","lib/web3js/v2_lite_open/contract/p_token.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_manager.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_viewer.js","lib/web3js/v2_lite_open/factory.js","lib/web3js/v2_lite_open/contract/perpetual_pool.js","lib/web3js/v2_lite_open/contract/chainlink_feed.js","lib/web3js/v2_lite_open/contract/gen/OracleFactoryChainlink.js","lib/web3js/v2_lite_open/contract/gen/OracleFactoryOffChain.js","lib/web3js/v2_lite_open/api/query_api.js","lib/web3js/shared/config/pool.js","lib/web3js/shared/config/broker.js","lib/web3js/v1/api/api_v1_globals.js","lib/web3js/v1/api/contract_transaction_api.js","lib/web3js/v1/api/trade_history_api.js","lib/web3js/v1/api/rest_api.js","lib/web3js/v1/api/contract_query_api.js","lib/web3js/v2_lite/contract/abis.js","lib/web3js/v2_lite/contract/l_token.js","lib/web3js/v2_lite/contract/p_token.js","lib/web3js/v2_lite/contract/perpetual_pool_lite_viewer.js","lib/web3js/v2_lite/factory.js","lib/web3js/v2_lite/contract/perpetual_pool.js","lib/web3js/v2_lite/contract/perpetual_pool_old.js","lib/web3js/v2_lite/api/mining_query_api.js","lib/web3js/v2_lite/api/mining_transaction_api.js","lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/calculation/liquidity.js","lib/web3js/shared/api/api_globals.js","lib/web3js/v2_lite/utils.js","lib/web3js/v2_lite/api/trade_query_api.js","lib/web3js/v2_lite/api/trade_transaction_api.js","lib/web3js/v2_lite/api/trade_history_api.js","lib/web3js/option/calculation/findLiquidationPrice2.js","lib/web3js/option/calculation/trade.js","lib/web3js/option/contract/abis.js","lib/web3js/option/contract/everlasting_option_viewer.js","lib/web3js/option/contract/l_token_option.js","lib/web3js/option/contract/p_token_option.js","lib/web3js/option/factory/tokens.js","lib/web3js/option/utils.js","lib/web3js/option/contract/everlasting_option.js","lib/web3js/option/contract/option_pricer.js","lib/web3js/option/factory/pool.js","lib/web3js/option/api/mining_query_api.js","lib/web3js/option/api/mining_transaction_api.js","lib/web3js/option/calculation/PMM2.js","lib/web3js/option/api/trade_query_api.js","lib/web3js/option/api/trade_transaction_api.js","lib/web3js/option/api/trade_history_api.js","lib/web3js/v2_lite_open/api/transaction_api.js","lib/web3js/activity/config.js","lib/web3js/activity/utils.js","lib/web3js/activity/contract/abi/pTokenAirdropNULSAbi.js","lib/web3js/activity/contract/gen/PTokenAirdropNULS.js","lib/web3js/activity/contract/abi/deriVoteAbi.js","lib/web3js/activity/contract/gen/DeriVote.js","lib/web3js/activity/contract/factory.js","lib/web3js/activity/api/ptoken_airdrop.js","lib/web3js/activity/api/deri_staking.js","lib/web3js/activity/api/deri_vote.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/v2/api/mining_query_api.js","lib/web3js/v2/api/mining_transaction_api.js","lib/web3js/v2/api/trade_query_api.js","lib/web3js/v2/api/trade_transaction_api.js","lib/web3js/v2/api/trade_history_api.js","lib/web3js/v2_lite_dpmm/utils.js","lib/web3js/v2_lite_dpmm/calc.js","lib/web3js/v2_lite_dpmm/contract/adapter.js","lib/web3js/v2_lite_dpmm/contract/abi/perpetualPoolLiteAbi.js","lib/web3js/v2_lite_dpmm/contract/abi/lTokenLiteAbi.js","lib/web3js/v2_lite_dpmm/contract/abi/pTokenLiteAbi.js","lib/web3js/v2_lite_dpmm/contract/factory.js","lib/web3js/v2_lite_dpmm/contract/gen/PerpetualPoolLite.js","lib/web3js/v2_lite_dpmm/contract/gen/LTokenLite.js","lib/web3js/v2_lite_dpmm/contract/gen/PTokenLite.js","lib/web3js/v2_lite_dpmm/contract/PoolViewer.js","lib/web3js/v2_lite_dpmm/api/trade_history_api.js","lib/web3js/v2_lite_dpmm/api/index.js","lib/web3js/v2_lite_dpmm/api/query_api.js","lib/web3js/v2_lite_dpmm/api/transaction_api.js","lib/web3js/v2_dpmm/contract/adapter.js","lib/web3js/v2_dpmm/contract/abi/lTokenAbi.js","lib/web3js/v2_dpmm/contract/abi/pTokenAbi.js","lib/web3js/v2_dpmm/contract/abi/perpetualPoolAbi.js","lib/web3js/v2_dpmm/contract/abi/perpetualPoolRouterAbi.js","lib/web3js/v2_dpmm/contract/factory.js","lib/web3js/v2_dpmm/contract/gen/LToken.js","lib/web3js/v2_dpmm/contract/gen/PToken.js","lib/web3js/v2_dpmm/contract/gen/PerpetualPool.js","lib/web3js/v2_dpmm/contract/gen/PerpetualPoolRouter.js","lib/web3js/v2_dpmm/contract/PoolApi.js","lib/web3js/v2_dpmm/api/trade_history_api.js","lib/web3js/v2_dpmm/api/index.js","lib/web3js/v2_dpmm/api/query_api.js","lib/web3js/v2_dpmm/api/transaction_api.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js","model/WebSocket.js","components/hoc/withModal.js","model/Version.js","lib/web3js/shared/utils/convert.js","model/Type.js","model/Config.js","utils/utils.js","../lang).)*/.json$","components/Loading/LoadingMask.js","App.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Loading.js","index.js","model/Trading.js"],"names":["LoadingPage","NProgress","start","done","React","Component","LoadableComponent","component","Loadable","loader","loading","getRestServerConfig","env","process","r","cache","require","keys","forEach","key","path","split","lang","page","toLowerCase","test","pageName","Intl","locale","makeObservable","this","observable","setLocale","action","dict","computed","localeLabel","language","navigator","prefix","restoreLocale","Object","supportedCatalog","includes","storeLocale","label","substr","toUpperCase","DeriEnv","_deriEnv","get","set","value","Error","SECONDS_IN_A_DAY","LITE_VERSIONS","LITE_AND_OPTION_VERSIONS","VERSIONS","ALL_EXCEPT_OPEN_VERSIONS","PRESERVED_SYMBOLS","getChainProviderUrls","chainId","res","provider_urls","filter","i","length","MAX_UINT256","MAX_INT256","getDBAddress","useProductionDB","getDBWormholeAddress","getDBAirdropAddress","getJsonConfig","version","configs","jsonConfig","JSON","parse","normalizeChainId","chainIds","toString","normalizeAddress","address","startsWith","Web3","utils","toChecksumAddress","validateArgs","args","every","isNaN","parseFloat","validateObjectKeyExist","keyList","val","valName","prop","validateIsArray","Array","isArray","getPoolV1ConfigList","pool","bToken","pToken","lToken","dToken","MiningVault","initialBlock","bTokenSymbol","symbol","unit","type","versionId","retired","getLpConfigList","isLp","getMiningVaultRouterConfig","filteredConfig","MiningVaultRouter","getPreminingConfigList","staking","url","isInTvlRace","premining","getLpConfig","poolAddress","c","p","bTokenAddress","lTokenAddress","console","log","getDeriConfig","Deri","Wormhole","getDeriConfigList","deriAddress","wormholeAddress","getMiningVaultConfig","pools","getPoolV1Config","concat","pTokenAddress","dTokenAdress","MinningVaultAddress","factory","klass","instances","deepClone","obj","clone","assign","from","shuffleArray","urls","newUrls","index","Math","floor","random","splice","getBlockNumber","a","blockNumber","duration","Number","MAX_SAFE_INTEGER","web3","providers","HttpProvider","startTime","Date","now","eth","getLatestRPCServer","slice","promises","push","Promise","all","blockNumbers","sort","b","latestBlockNumber","reduce","findIndex","getChainProviderUrl","getDailyBlockNumber","chainBlockNumberList","accum","getDailyBlockNumberConfig","parseInt","getNetworkName","poolNetwork","delay","ms","resolve","setTimeout","web3Factory","web3InstanceMap","pending","walletChainId","window","ethereum","request","method","isBrowser","isJsDom","retry","providerUrl","intRe","deleteIndexedKey","intKeyCount","acc","k","newObj","getLatestBlockNumber","async","getBlockInfo","getBlock","getPastEvents","contract","eventName","fromBlock","to","amount","events","es","toBlock","e","getHttpBase","fetchJson","resp","fetch","json","fetchRestApi","opts","catchApiError","func","methodName","defaultValue","err","catchTxApiError","success","transaction","error","message","checkChainId","checkAddress","checkApiInput","accountAddress","checkApiInputWithoutAccount","checkTokenId","tokenId","checkAmount","checkSymbolId","symbolId","symbolIds","indexOf","join","contractFactory","processResult","propList","map","v","fromWei","processObjectResult","processMethod","originMethod","prototype","apply","getLiquidity","_call","stateValues","liquidity","getLastTimestamp","lastTimestamp","getProtocolFeeAccrued","protocolFeeAccrued","bTokenPairs","AMUSDC","offchainSymbolPairs","AXSUSDT","MANAUSDT","MBOXUSDT","IBSCDEFI","IGAME","ALICEUSDT","SANDUSDT","QUICKUSDT","GHSTUSDT","AGLDUSDT","normalizeOptionSymbol","optionSymbol","getVolatilitySymbols","symbols","s","volSymbol","getNormalizedOptionSymbols","isUsedRestOracle","mapToSymbol","mapToSymbolInternal","values","normalizeSymbolUnit","re","RegExp","replace","getIndexInfo","internalSymbol","customIndexs","tokens","IMEME","poolProcessor","v2","v2_lite","v2_lite_open","config","option","poolValidator","ContractBase","constructor","contractAddress","contractAbi","Contract","_init","methods","call","gas","estimateGas","_getTransactionReceipt","tx","self","_transactionReceipt","reject","getTransactionReceipt","receipt","status","errorMessage","_estimatedGas","txRaw","numberToHex","data","encodeABI","params","CONTRACT_ABI","DatabaseContract","keyArray","DatabaseWormholeContract","DatabaseAirdropContract","bTokenAbi","TERC20Abi","symbolOracleOffChainAbi","wrappedOracleAbi","wooOracleAbi","brokerManagerAbi","pTokenAirdropAbi","BToken","_balanceOf","decimals","bg","deriToNatural","allowance","gt","_transact","WrappedOracle","decimal","BrokerManager","brokerAddress","PTokenAirdrop","getOracleConfigList","oracle","isUnlocked","unlock","ERC20Adapter","ERC20Abi","chainlinkOracleAbi","offChainOracleAbi","offChainVolatilityOracleAbi","TERC20MintLimitAbi","ERC20Factory","super","owner","spender","account","offChainOracleFactory","offChainOracleAdapter","offChainVolatilityOracleAdapter","getPriceInfoForV1","baseUrl","addSymbolParam","priceInfo","mode","ok","stringify","getOracleUrl","getPriceFromRest","getPriceInfo","price","volatility","mapToBTokenInternal","getPriceInfos","headers","body","symbolList","oraclePricesCache","timestamp","RestOracle","getPrice","getOraclePrice","filteredByChainId","getOracleConfig","oracleFactory","getOraclePriceFromCache2","oracleAddress","wrappedOracleFactory","getOraclePrice2","getOracleVolatilitiesForOption","oracleSymbols","Accept","getOracleInfosFromRest","os","volatilities","checkOffChainOracleSymbol","signer","signatory","SymbolOracleOffChain","WooOracle","wooOracleAddresses","instanceMap","wooOracleFactory","databaseFactory","databaseInstanceMap","database","databaseActivityFactory","databaseDeriVoteFactory","databaseWormholeFactory","databaseAirdropFactory","bTokenFactory","TERC20Factory","DeriContract","MiningVaultPool","WormholeContract","toChainId","toWormholeAddress","naturalToDeri","fromChainId","fromWormhole","fromNonce","deriFactory","wormholeFactory","miningVaultRouterFactory","miningVaultPoolFactory","SlpPool","ClpPool","minAddLiquidity","redemptionFeeRatio","Clp2Pool","slpPoolFactory","slpPoolInstanceMap","slpPool","clpPoolFactory","clpPoolInstanceMap","clpPool","clp2PoolFactory","clp2PoolInstanceMap","clp2Pool","brokerManagerFactory","pTokenAirdropFactory","connectWallet","handleChainChanged","handleAccountChanged","accounts","on","location","reload","hexToNumber","getUserWalletBalance","walletAddress","getBalance","balance","getUserInfo","db","userAddress","getValues","catch","deadline","nonce","valid","deriToString","deriToBool","getUserInfoHarvest","harvestLp","harvestTrade","lp","trade","getUserInfoTotal","total","getUserInfoAll","userInfo","userInfoHarvest","userInfoTotal","getPoolLiquidity","getPoolInfoApy","apy","volume1h","volume24h","getLpPoolInfoApy","apy2","getUserInfoInPool","getUserInfoAllForAirDrop","v1","r1","s1","r2","s2","getUserWormholeSignature","databaseWormhole","signature","isDeriUnlocked","deri","getDeriBalance","balanceOf","mintDToken","miningVaultAddress","miningVault","freeze","wormhole","mintDeri","unlockDeri","mintAirdrop","miningVaultRouter","mint","perpetualPoolAbi","perpetualPoolRouterAbi","lTokenAbi","pTokenAbi","PerpetualPool","bTokenCount","symbolCount","routerAddress","protocolFeeCollector","getLengths","getAddresses","getParameters","decimals0","minBToken0Ratio","minPoolMarginRatio","minInitialMarginRatio","minMaintenanceMarginRatio","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","protocolFeeCollectRatio","bTokenId","swapperAddress","discount","pnl","cumulativePnl","multiplier","feeRatio","fundingRateCoefficient","cumulativeFundingRate","tradersNetVolume","tradersNetCost","getStorageAt","volume","abs","times","PerpetualPoolRouter","isMaximum","priceInfos","processAsset","lastCumulativePnl","LToken","processPosition","cost","lastCumulativeFundingRate","PToken","perpetualPoolFactory","perpetualPoolRouterFactory","lTokenFactory","pTokenFactory","setBroker","getBrokerConfig","brokerManagerAddress","brokerManager","getAirdropPTokenAddress","airdropPToken","getAirdropPTokenWhitelistCount","totalWhitelistCount","isUserPTokenExist","getPoolConfig2","result","getSlpLiquidityInfo","bTokenBalance","shares","poolLiquidity","shareValue","addSlpLiquidity","addLiquidity","removeSlpLiquidity","removeLiquidity","isSlpUnlocked","unlockSlp","getSlpWalletBalance","getClp2LiquidityInfo","addClp2Liquidity","removeClp2Liquidity","isClp2Unlocked","unlockClp2","getClp2WalletBalance","calculateLiquidityUsed","poolMarginRatio","calculateFundingRate","processFundingRate","fundingRate","annualBlockCount","calculateShareValue","lTokenTotalSupply","eq","div","calculateMaxRemovableShares","lTokenBalance","removable","plus","minus","max","min","calculateEntryPrice","calculateMarginHeld","calculatePnl","calculateMaxWithdrawMargin","margin","held","calculateLiquidationPrice","tmp","isOrderValid","newVolume","minMargin","poolMaxVolume","gte","lte","negated","POOL_ABI","isProvider","cumuFundingRate","cumuFundingRateBlock","priceDelayAllowance","MAX_GAS_AMOUNT","signed","getStateValues","parameters","args1","fundingRatePerBlock","liquidityUsed","args2","PTokenContract","lastCumuFundingRate","lastUpdateTimestamp","LTokenContract","perpetualPoolInstanceMap","perpetualPool","pTokenInstanceMap","lTokenInstanceMap","getClpLiquidityInfo","totalSupply","maxRemovableShares","addClpLiquidity","removeClpLiquidity","isClpUnlocked","unlockClp","getClpWalletBalance","getLpLiquidityInfo","isLpUnlocked","getLpWalletBalance","unlockLp","addLpLiquidity","removeLpLiquidity","mintTERC20","testERC20","openPoolChainIds","prod","dev","testnet","getPoolV2LiteManagerConfig","find","getOracleFactoryChainlinkConfig","perpetualPoolLiteAbi","pTokenLiteAbi","perpetualPoolLiteManagerAbi","perpetualPoolLiteViewerAbi","chainlinkFeedAbi","oracleFactoryChainlinkAbi","oracleFactoryOffChainAbi","PTokenLite","operator","PerpetualPoolLiteManager","poolId","pairedTokenAddress","PerpetualPoolLiteViewer","perpetualPoolLiteFactory","updateAddresses","getActiveSymbolIds","getSymbol","block_number","extraInfo","getBTokenSymbol","getSymbols","getPoolExtraInfo","perpetualPoolLiteManagerFactory","chainlinkFeedFactory","trim","oracleFactoryChainlinkFactory","delayAllowance","getPoolOpenConfigList","poolManagerAddress","poolManager","getNumPools","poolNums","numsArray","id","addresses","getConfig","getPoolOpenOracleList","oracleFactoryConfig","oracles","eventBlock","number","event","info","returnValues","isPoolController","controller","perpetualPoolLite","poolController","getPoolAcitveSymbolIds","init","openConfigListCache","update","oldData","updatedAt","getPoolConfigList","bTokens","router","isOption","flat","expandPoolConfigV2","offchainSymbolIds","offchainSymbols","expandPoolConfigV2Lite","isOpen","expandPoolConfigV2LiteOpen","pricer","volatilitySymbols","expandPoolConfigOption","getPoolConfig","getPoolVersion","undefined","poolConfigList","check","getFilteredPoolConfigList","getPoolVersionId","_getPoolConfig","defaultSymbol","getPoolBTokenList","getPoolBTokenIdList","getPoolSymbolList","getPoolSymbolIdList","getPoolViewerConfig","viewers","poolViewer","getBrokerConfigList","fundingRateCache","resourceMap","resource","priceCache","_accountAddress","_price","_interval","_update","setInterval","clear","clearInterval","PerpetualPoolParametersCache","_parameters","_ws","depositMargin","pPool","withdrawMargin","getPositionInfo","maxWithdrawMargin","tradeWithMargin","orderValidation","closePosition","processTradeEvent","txHash","tradeVolume","_getTimeStamp","timeStamp","direction","time","transactionFee","_calculateFee","notional","baseToken","transactionHash","getTradeHistoryOnline","_getBlockInfo","filters","_getPastEvents","item","unshift","getTradeHistory2","tradeFromBlock","tradeHistoryBlock","liquidateFromBlock","liquidateHistoryBlock","tradeHistory","tradeHistoryOnline","getSpecification","averageEntryPrice","marginHeld","unrealizedPnl","liquidationPrice","getLiquidityInfo","poolDynamicEquity","getWalletBalance","getEstimatedFee","getFundingRate","poolInfo","fundingRate0","naturalWithPercentage","toExponential","getEstimatedFundingRate","newNetVolume","fundingRate1","getLiquidityUsed","liquidityUsed0","getEstimatedLiquidityUsed","liquidityUsed1","perpetualPoolLiteOldAbi","lTokenLiteAbi","LTokenLite","klassOld","newPoolList","factoryWithUpgrade","pTokenLiteFactory","lTokenLiteFactory","activeSymbolIds","offChainOracleSymbolIds","activeSymbolNames","offChainOracleSymbols","o","positions","getPosition","prices","_getSymbolPrices","_getLiquidityInfo","parameterInfo","totalPnl","dynamicCost","calculateFundingFee","dynamicEquity","lastUpdatedBlockNumber","calculateBTokenDynamicEquities","isBToken0RatioValid","bToken0Ratio","totalDynamicEquity","lt","isPoolMarginRatioValid","userLiquidity","totalCost","calculateMaxRemovableLiquidity","restLiquidity","_prices","liquidatePriceCache","_cache","getSymbolPrices","offChainSymbolIds","offChainSymbolNames","onChainOracleAddressWithPlaceHolder","_symbol","f","onChainSymbolPrices","offChainSymbolPrices","symbolPrices","shift","_getFundingRate","symbolIndex","symbolInfo","liquidityUsedInAmount","addMargin","removeMargin","getMargin","calculateTxFee","symbolIdList","invalidValues","NaN","getEverlastingTimePriceAndDelta","S","K","V","T","timeValue","delta","u","sqrt","pow","getDynamicInitialMarginRatio","spot","strike","isCall","initialMarginRatio","otmRatio","canLiquidateWithPrice","trader","newUnderlierPrice","newDynamicMargin","dynamicMargin","newInitialMargin","initialMargin","position","newIntrinsicValue","strikePrice","fundingPeriod","newTimeValue","newPnl","newDynamicMarginRatio","spotPrice","dynamicMarginRatio","newMaintenanceMargin","maintenanceMarginRatio","findLiquidationPrice","numPositions","price1","price2","final1","final2","l1","l2","head","maintenanceMargin","dynamicInitialMarginRatio","dynamicInitialPoolMarginRatio","initialPoolMarginRatio","getMarginHeldBySymbol","getAverageEntryPrice","getLiquidationPrice","state","poolState","symbolState","traderState","positionState","normalizedSymbol","toNumberForObject","underlier","getLiquidationPrices","liquidationPrices","oSymbol","everlastingOptionAbi","everlastingOptionViewerAbi","lTokenOptionAbi","pTokenOptionAbi","EverlastingOptionViewer","oraclePrices","oracleVolatilities","fromWeiForObject","LTokenOption","PTokenOption","lastCumulativePremiumFundingRate","everlastingOptionViewerFactory","lTokenOptionFactory","pTokenOptionFactory","volatilitiesCache","EverlastingOption","viewerAddress","viewer","isEqualSet","Set","activeSymbols","symbolVolatilities","getPoolStates","_updateConfig","volatilityInfos","bAmount","_getVolSymbolPrices","lShares","optionPricerAbi","OptionPricer","everlastingOptionFactory","optionPricerFactory","optionPool","queryTradePMM","theoreticalPrice","symbolInfo2","poolInfo2","feeRatioOTM","feeRatioITM","initialMarginRatioOrigin","maintenanceMarginRatioOrigin","indexConstituents","symbolName","getTraderStates","volPrice","timePrice","markPrice","dpmmPrice","marginHeldBySymbol","unrealizedPnlList","oS","premiumFundingAccrued","fundingAccrued","getPositionInfos","volPrices","vIndex","curSymbolIndex","premiumFunding","fundingPerSecond","premiumFundingPerSecond","intrinsicValue","fee","premiumFunding0","tradeCost","indexPrice","getEverlastingTimeValueAndDelta","contractValue","pricerAddress","tr","getTradeHistory","ids","volumes","createPool","newParameters","addSymbol","createOracle","feedAddress","feedContract","getPTokenAirdropConfig","getDeriVoteConfig","pTokenAirdropNULSAbi","PTokenAirdropNULS","deriVoteAbi","DeriVote","votingId","voter","votingOption","PTokenAirdropNULSFactory","deriVoteFactory","isPTokenAirdropped","isAirdropPToken","totalAirdropCount","isBTokenUnlocked","hasRequiredBalance","unlockBToken","keyPrefix","getStakingTop10Users","n","fill","no","userAddr","feePaid","score","evgCoeff","rewardBNB","getUserStakingInfo","scoreQ1","scoreQ2","scoreQ3","scoreQ4","coef","getUserStakingReward","rewardDERI","topUsers","getUserStakingContribution","totalContrib","userContrib","Q1Contrib","Q2Contrib","Q3Contrib","Q4Contrib","userQ1Contrib","userQ2Contrib","userQ3Contrib","userQ4Contrib","userQ1Point","userQ2Point","userQ3Point","userQ4Point","getVotingResult","hexToNumberString","getUserVotingPower","getUserVotingResult","votingPower","vote","deriVote","voteId","getContractAddressConfig","getPoolV2ConfigList","bTokenIdList","getBToken","getAsset","bTokenInfo","lTokenAsset","approximatePnl","perpetualPoolRouter","validation","bTokenDiscounts","bTokenMultiplier","symbolConfigList","getLastUpdatedBlockNumber","getMargins","getPositions","positionInfo","margins","latestPrice","fundingFee","idx","getEstimatedLiquidatePrice","promiseList","bTokenInfoList","getPoolBTokensBySymbolId","bTokenList","resultList","walletBalance","availableBalance","isProdChain","getOracleServerUrl","calculateK","alpha","calculateDpmmPrice","calculateDpmmCost","overrideMethods","fns","fn","processTxMethod","toWeiArgPositions","newArgs","arg","toWei","isEstimatedApi","getPoolStateValues","getFundingPeriod","offChainOracleSymbolNames","indexPrices","funding","timeDiff","traderPnl","isSymbolsUpdated","isPositionsUpdated","getTraderLiquidity","getDynamicEquity","getPoolRequiredMargin","getTraderMarginStatus","requiredInitialMargin","perpetualPoolLiteDpmmFactory","addMethods","perpetualPoolLiteAdapter","lTokenLiteAdapter","pTokenLiteAdapter","poolViewerFactory","leverage","funding0","funding1","api","range","lengths","perpetualPoolRouterDpmmFactory","bTokenIds","equity","bTokenSymbols","userState","getBTokens","bTokenIndex","tradersNetPosition","ratePerSecond","diff","undistributedPnl","distributedUnrealizedPnl","isBTokensUpdated","totapPnl","totalEquity","m","totalNotional","formatTradeEvent","extra","lTokenAdapter","pTokenAdapter","perpetualPoolDpmmFactory","perpetualPoolDpmmAdapter","perpetualPoolRouterDpmmAdapter","infos","poolApiFactory","usedByEstimatedApi","balances","getLiquidityInfoV2l","getLiquidityInfoOption","apiV2lDpmm","apiV2Dpmm","getLiquidityInfo2","getLiquidityInfoV2","getPoolLiquidityV2","getPoolLiquidity1","getPoolInfoApyV2","getPoolInfoApy1","addLiquidityV2l","addLiquidityOption","addLiquidity2","addLiquidityV2","removeLiquidityV2l","removeLiquidityOption","removeLiquidity2","removeLiquidityV2","getSpecificationV2l","getSpecificationOption","getSpecification2","getSpecificationV2","getLastUpdateBlock","getPositionInfoV2l","getPositionInfoOption","getPositionInfo2","getPositionInfoV2","getPositionInfosV2l","getPositionInfosOption","getPositionInfosV2","getWalletBalanceV2l","getWalletBalanceOption","getWalletBalance2","getWalletBalanceV2","isUnlockedV2l","isUnlockedOption","isUnlocked2","isUnlockedV2","getEstimatedLiquidatePriceV2","getEstimatedFeeV2l","getEstimatedFeeOption","getEstimatedFee2","getEstimatedFeeV2","getFundingRateV2l","getFundingRateOption","getFundingRate2","getFundingRateV2","getEstimatedFundingRateV2l","getEstimatedFundingRateOption","getEstimatedFundingRate2","getEstimatedFundingRateV2","getLiquidityUsedV2l","getLiquidityUsedOption","getLiquidityUsed2","getLiquidityUsedV2","getEstimatedLiquidityUsedV2l","getEstimatedLiquidityUsedOption","getEstimatedLiquidityUsed2","getEstimatedLiquidityUsedV2","getPoolBTokensBySymbolIdV2","getEstimatedTimePrice","toNumber","getEstimatedTimePriceOption","unlockV2l","unlockOption","unlock2","unlockV2","depositMarginV2l","depositMarginOption","depositMargin2","depositMarginV2","withdrawMarginV2l","withdrawMarginOption","withdrawMargin2","withdrawMarginV2","tradeWithMarginV2l","tradeWithMarginOption","tradeWithMargin2","tradeWithMarginV2","closePositionV2l","closePositionOption","closePosition2","closePositionV2","getTradeHistoryV2l","getTradeHistoryOption","getTradeHistoryV2","WebSocket","socket","io","transports","withCredentials","emit","onMessage","listener","time_type","equalIgnoreCase","findEvent","pos","withModal","appElement","document","getElementById","customizeStyle","overlay","zIndex","background","content","border","inset","overflow","WithModal","props","modalIsOpen","className","overlayMerged","mergedStyle","style","portalClassName","intl","onClose","inject","observer","Version","current","makeAutoObservable","setCurrent","isV1","isV2","isV2Lite","BigNumber","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","base","repeat","value1","value2","toFixed","hexToString","hexToUtf8","sd","formatBN","bigNumber","toFormat","replaceAll","userAgent","set1","set2","size","has","sortOptionSymbols","symbolArr","unique","to2","index1","index2","index3","Type","isFuture","Config","setAll","isOptions","cur","chainInfo","formatAddress","formatBalance","eqInNumber","str1","str2","isLP","isSushiLP","isCakeLP","sessionStorageKey","convertToInternationalCurrencySystem","labelValue","storeConfig","sessionStorage","setItem","getConfigFromStore","getItem","storeChain","hasParam","param","urlString","href","URL","searchParams","getParam","getFormatSymbol","curChain","code","stripSymbol","secondsInRange","intervalRange","calcRange","interval","getTime","groupByNetwork","list","network","formatAdd","airdrop","combineSymbolfromPoolConfig","mapPoolInfo","wallet","name","buttonText","webpackContext","req","webpackContextResolve","__webpack_require__","module","exports","DesktopApp","MobileApp","Mask","useState","setIsOpen","useEffect","isShowMask","LoadingMask","top","MaskWrapper","screen","width","isOptionsLite","useRouteMatch","isOptionsPro","catagory","Wallet","detail","supportWeb3","isConnected","approve","approved","connect","loadWalletBalance","switchNetwork","metamask","supported","setDetail","supportV2","supportV1","supportAllVersion","supportChain","supportInnocation","supportOpen","isApproved","supportInnovation","Oracle","timeType","kData","ws","paused","listeners","already","setIndex","webSocket","subscribe","close","unsubscribeBars","setSymbol","setTimeType","unsubscribe","setPause","Position","callback","callbackALL","spec","counter","mockPositionInfo","deltaFundingAccrued","isSupportChain","balanceContract","startAll","started","runInAction","loadAll","startedAll","load","timer","pause","resume","clean","deltaFundingCoefficient","optionType","bTokenSymbolDisplay","getUnderlierStrike","setInfo","History","isLoading","setIsLoading","trading","slideIncrementMargin","history","userSelectedDirection","optionsConfigs","setWallet","setConfigs","setOptionConfigs","setConfig","setContract","setPosition","setPositions","setVolume","setUserSelectedDirection","setFundingRate","setHistory","setSlideMargin","fundingRateTip","optionFundingRateTip","initialMarginRatioTip","maintenanceMarginRatioTip","TransactionFeeTip","dpmmFundingRateTip","fundingCoefficientTip","rateTip","multiplierTip","TotalNetPositionTip","volumeDisplay","isNegative","isPositive","configInfo","contractInfo","historyInfo","finishedCallback","defaultConfig","getDefaultConfig","loadByConfig","changed","onChange","store","symbolChanged","addListener","syncFundingRate","loadFundingRate","then","results","finally","refreshCache","fromStore","getFromStore","setPaused","groupConfigBySymbol","increment","MarginRatio","substring","currentSymbolMarginHeld","otherMarginHeld","incrementMarginHeld","totalMarginHeld","dynBalance","available","exchanged","multipliedBy","totalContractValue","curContractValue","afterLeverage","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e717ee0c.chunk.js","sourcesContent":["import React from 'react'\r\nimport Loadable from 'react-loadable'\r\nimport NProgress from 'nprogress'\r\nimport 'nprogress/nprogress.css'\r\n\r\nclass LoadingPage extends React.Component {\r\n  //类似github页面加载的那个加载条\r\n  componentWillMount(){\r\n    NProgress.start()\r\n  }\r\n  componentWillUnmount(){\r\n    NProgress.done()\r\n  }\r\n  render () {\r\n    return (\r\n      <div/>\r\n    )\r\n  }\r\n}\r\n\r\nconst LoadableComponent = (component) => {\r\n  return Loadable({\r\n    loader: component,\r\n    loading: ()=><LoadingPage/>\r\n  })\r\n}\r\n\r\nexport default LoadableComponent","/**\r\n * Get REST server config\r\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\r\n * @returns {string} server url\r\n */\r\nexport const getRestServerConfig = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    // for production\r\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://api.deri.finance';\r\n    //return 'https://alphaapi.deri.finance';\r\n  } else {\r\n    // for test\r\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://testnetapi.deri.finance';\r\n  }\r\n};\r\n\r\nexport const getRedisWorkerQueneConfig = (env = \"dev\") => {\r\n  if (env === \"prod\") {\r\n    return ['trade_tx_quene', 'trade_worker_group']\r\n  } else {\r\n    return ['trade_tx_quene_dev', 'trade_worker_group_dev']\r\n  }\r\n};\r\n","import { makeObservable, observable, action, computed } from \"mobx\";\r\nimport { restoreLocale, storeLocale } from \"../utils/utils\";\r\nimport supportedCatalog from '../locales/lang.json'\r\n\r\n\r\nconst cache = {}\r\n\r\nfunction importAll(r){\r\n  return r.keys().forEach(key => {\r\n    const path = key.split('/')\r\n    const lang = path[1]\r\n    const page = path[2].split('.')[0].toLowerCase()\r\n    if(!cache[lang]) {\r\n      cache[lang] = {}\r\n    }\r\n    \r\n    if(/mobile-/.test(page)){\r\n      const pageName= page.split('-')[1]\r\n      if(!cache[lang][pageName]){ \r\n        cache[lang][pageName] = {}\r\n      }\r\n      cache[lang][pageName]['mobile'] = r(key)\r\n    } else {\r\n      cache[lang][page] = r(key)\r\n    }\r\n  });\r\n}\r\n//lang.json 是语言包目录，需要排除在外\r\nimportAll(require.context(`../locales/`,true,/^((?!lang).)*\\.json$/))\r\n\r\nclass Intl {\r\n  locale = 'en'\r\n  constructor(){\r\n    makeObservable(this,{\r\n      locale : observable,\r\n      setLocale : action,\r\n      dict : computed,\r\n      localeLabel: computed\r\n    })\r\n    const language = navigator.language\r\n    const prefix = language && language.split('-')[0]\r\n    const locale = restoreLocale()\r\n    if(locale && Object.keys(supportedCatalog).includes(locale) ){\r\n      this.locale = locale\r\n    } else if(prefix && Object.keys(supportedCatalog).includes(prefix)){\r\n      this.locale = prefix\r\n    }\r\n  }\r\n\r\n  setLocale(locale){\r\n    if(locale && supportedCatalog[locale]){\r\n      this.locale = locale;\r\n      storeLocale(locale)\r\n    }\r\n  }\r\n\r\n  get(page,key){\r\n    return cache[this.locale][page][key]\r\n  }\r\n\r\n  get dict(){         \r\n    return cache[this.locale]\r\n  }\r\n\r\n  get localeLabel(){\r\n    const label = supportedCatalog[this.locale];\r\n    return label ? label.substr(0,2).toUpperCase() : \"EN\" \r\n  }\r\n}\r\n\r\nexport default new Intl();","// export const DERI_ENV=\"dev\"\r\nexport const DeriEnv = (() => {\r\n  let _deriEnv = 'dev';\r\n  return {\r\n    get: () => _deriEnv,\r\n    set: (value) => {\r\n      if (value === 'dev' || value === 'prod' || value === 'testnet') {\r\n        _deriEnv = value;\r\n      } else {\r\n        throw new Error(\"please use 'dev', 'testnet' or 'prod' for DeriEnv\");\r\n      }\r\n    },\r\n  };\r\n})();\r\n","export const SECONDS_IN_A_DAY = 86400;  // 60 * 60 * 24","// versions\r\n//export const VERSIONS = ['v2', 'v2_lite', 'v2_lite_open']\r\nexport const LITE_VERSIONS = ['v2_lite', 'v2_lite_open'];\r\nexport const LITE_AND_OPTION_VERSIONS = [...LITE_VERSIONS, 'option'];\r\nexport const VERSIONS = ['v2', ...LITE_AND_OPTION_VERSIONS];\r\nexport const ALL_EXCEPT_OPEN_VERSIONS = [\r\n  'v2',\r\n  'v2_lite',\r\n  'option',\r\n];\r\nexport const PRESERVED_SYMBOLS = ['BTCUSD', 'ETHUSD', 'BNBUSD'];\r\n","// add a new chain: validateChainId, getChainProviderUrls, getNetworkName, getDailyBlockNumberConfig\r\nexport const getChainIds = () => {\r\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\r\n};\r\n\r\nexport const getChainProviderUrls = (chainId) => {\r\n  const chainProviderUrls = [\r\n    {\r\n      provider_urls: [\r\n        'https://mainnet.infura.io/v3/d0e6582644a845ee8d7c3c18683fec06',\r\n      ],\r\n      chainId: '1',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://bsc-dataseed.binance.org',\r\n        'https://bsc-dataseed1.defibit.io/',\r\n        'https://bsc-dataseed1.ninicoin.io/',\r\n      ],\r\n      chainId: '56',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-mainnet.hecochain.com'],\r\n      chainId: '128',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://polygon-rpc.com',\r\n        //'https://rpc-mainnet.matic.network',\r\n        'https://rpc-mainnet.maticvigil.com',\r\n        //'https://rpc-mainnet.matic.quiknode.pro',\r\n        'https://matic-mainnet.chainstacklabs.com',\r\n        // 'https://matic-mainnet-full-rpc.bwarelabs.com',\r\n        // 'https://matic-mainnet-archive-rpc.bwarelabs.com',\r\n      ],\r\n      chainId: '137',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '3',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '42',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n      ],\r\n      chainId: '97',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-testnet.hecochain.com'],\r\n      chainId: '256',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://rpc-mumbai.matic.today',\r\n        'https://rpc-mumbai.maticvigil.com',\r\n        'https://matic-mumbai.chainstacklabs.com',\r\n        'https://matic-testnet-archive-rpc.bwarelabs.com',\r\n      ],\r\n      chainId: '80001',\r\n    },\r\n  ];\r\n\r\n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\r\n  //console.log('res',res)\r\n  if (res.length > 0) {\r\n    return res[0].provider_urls\r\n  } else {\r\n    throw new Error(`getChainProviderUrls: no urls for chainId ${chainId}`)\r\n  }\r\n}\r\n\r\nexport const getDailyBlockNumberConfig = () => {\r\n  // let chainBlockNumberList = [\r\n  //   '2367422',\r\n  //   '2367422',\r\n  //   '10497304',\r\n  //   '10497304',\r\n  //   '10511369',\r\n  //   '10511369',\r\n  //   '14747860',\r\n  //   '14747860',\r\n  // ];\r\n\r\n  // compute matic aunual block number: block height(16309458, 10000000)\r\n  let chainBlockNumberList = [\r\n    '6486',\r\n    '6486',\r\n    '28759',\r\n    '28759',\r\n    '28798',\r\n    '28798',\r\n    '40405',\r\n    '40405',\r\n  ];\r\n  return getChainIds().reduce((accum, i, index) => {\r\n    accum[i] = chainBlockNumberList[index];\r\n    return accum;\r\n  }, {});\r\n};\r\n\r\n// MAX UINT/INT256\r\n// hex(2**256-1)\r\nexport const MAX_UINT256 =\r\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\r\n// hex((2**255 -1) // 10**18)\r\nexport const MAX_INT256 =\r\n  '0x9392ee8e921d5d073aff322e62439fcf32d7f344649470f90';\r\n\r\n","export const getDBProviderUrls = () => [\r\n  'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n];\r\n\r\nexport const getDBAddress = (env = 'dev', useProductionDB) => {\r\n  if (env === 'prod' && useProductionDB) {\r\n    // for production\r\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\r\n  }\r\n  // for test\r\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n};\r\n\r\nexport const getDBWormholeAddress = (env = 'dev', useProductionDB) => {\r\n  if (env === 'prod' && useProductionDB) {\r\n    // for production\r\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\r\n  }\r\n  // for test\r\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\r\n};\r\n\r\nexport const getDBAirdropAddress = (env = 'dev', useProductionDB) => {\r\n  if (env === 'prod' && useProductionDB) {\r\n    // for production\r\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\r\n  }\r\n  // for test\r\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n};\r\n","import { DeriEnv } from './env';\r\nimport jsonConfig from '../resources/config.json';\r\nimport { VERSIONS } from './version';\r\n\r\nexport const getJsonConfig = (version, env) => {\r\n  env = env || DeriEnv.get();\r\n  // for browser and nodejs\r\n  let configs =\r\n    typeof jsonConfig === 'object' ? jsonConfig : JSON.parse(jsonConfig);\r\n  if (configs[version] && VERSIONS.includes(version)) {\r\n    configs = configs[version];\r\n    if (['prod', 'dev', 'testnet'].includes(env)) {\r\n      if (configs && configs[env]) {\r\n        return configs[env];\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error(\r\n      `getJsonConfig(): invalid config of version '${version}' and env '${env}'`\r\n    );\r\n  }\r\n};\r\n","import { getChainIds } from '../config/chain';\r\nimport Web3 from 'web3';\r\n\r\n// validate\r\nexport const normalizeChainId = (chainId) => {\r\n  const chainIds = getChainIds()\r\n  let res = chainId ? chainId.toString() : chainId;\r\n  if (chainId && chainIds.includes(res)) {\r\n    return res;\r\n  } else {\r\n    throw new Error(`invalid chainId: ${chainId}`);\r\n  }\r\n};\r\n\r\nexport const normalizeAddress = (address) => {\r\n  if (typeof address === 'string' && address.startsWith('0x') && address.length == 42 ) {\r\n    return Web3.utils.toChecksumAddress(address);\r\n  } else {\r\n    throw new Error(`invalid address: ${address}`);\r\n  }\r\n};\r\n\r\nexport const validateArgs = (...args) =>\r\n  args.every((i) => !isNaN(parseFloat(i)));\r\n\r\nexport const validateObjectKeyExist = (keyList, val, valName) => {\r\n  const keys = Object.keys(val);\r\n  keyList.forEach((prop) => {\r\n    if (!keys.includes(prop)) {\r\n      throw new Error(\r\n        `validateConfig(): property ${prop} is not exist in the ${valName} config.`\r\n      );\r\n    }\r\n  });\r\n};\r\nexport const validateIsArray = (val, valName) => {\r\n  if (!Array.isArray(val)) {\r\n    throw new Error(\r\n      `validateConfig(): property ${valName} is an array in the config.`\r\n    );\r\n  }\r\n};\r\n","import { DeriEnv } from '../config'\r\nimport { normalizeChainId } from '../utils/validate'\r\n\r\nexport const getPoolV1ConfigList = (env = 'dev') => {\r\n  // production environment\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        pool: '0xAf081e1426f64e74117aD5F695D2A80482679DE5',\r\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\r\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '7906919',\r\n        bTokenSymbol: 'BUSD',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '56',\r\n        type: 'perpetual',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool: '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\r\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\r\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '6753399',\r\n        bTokenSymbol: 'BUSD',\r\n        symbol: 'COIN',\r\n        unit: 'COIN',\r\n        chainId: '56',\r\n        type: 'perpetual',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool: '0xD3f5E6D1a25dA1E64EDf7cb571f9fAD17FEb623c',\r\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\r\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '8005906',\r\n        bTokenSymbol: 'DERI',\r\n        symbol: 'iMEME',\r\n        unit: 'iMEME',\r\n        chainId: '56',\r\n        type: 'perpetual',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool: '0x23779AAc1e74a65F27B4840A8E41F767Ce993118',\r\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\r\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\r\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        initialBlock: '12548746',\r\n        bTokenSymbol: 'USDT',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '1',\r\n        type: 'perpetual',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool: '0x96a1F15676746b9339DBc185F277618359Ac6346',\r\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\r\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\r\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        initialBlock: '12548827',\r\n        bTokenSymbol: 'BAC',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '1',\r\n        type: 'perpetual',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool: '0xBA7e183042c8796E26A5a2375927DE7B1AB99d97',\r\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\r\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\r\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        initialBlock: '5220431',\r\n        bTokenSymbol: 'HUSD',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '128',\r\n        type: 'perpetual',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n        retired: true,\r\n      },\r\n    ];\r\n  } else if (env === 'dev') {\r\n    return [\r\n      {\r\n        pool: '0x372b640A00a0A6B73381e9363A39644a712cCc37',\r\n        bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\r\n        pToken: '0xB9113758D771750e9E8ECb359A19689eC89AC1a5',\r\n        lToken: '0xC727a10Be4740441BE74960296097aF39D701980',\r\n        initialBlock: '9378545',\r\n        bTokenSymbol: 'BUSD',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '97',\r\n        type: 'perpetual',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n      },\r\n    ];\r\n  } else if (env === 'testnet') {\r\n    return [];\r\n  }\r\n};\r\n\r\n// export const getSlpContractAddressConfig = (env = 'dev') => {\r\n//   if (env === 'prod') {\r\n//     return [\r\n//       {\r\n//         pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\r\n//         bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n//         pToken: '0x0000000000000000000000000000000000000000',\r\n//         lToken: '0x0000000000000000000000000000000000000000',\r\n//         dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n//         MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n//         chainId: '1',\r\n//         bTokenSymbol: 'DERI-USDT SLP',\r\n//         symbol: '--',\r\n//       },\r\n//     ];\r\n//   }\r\n//   console.log('getSlpContractAddressConfig(): no config for dev environment');\r\n//   return [];\r\n// };\r\n\r\n// export const getClpContractAddressConfig = (env = 'dev') => {\r\n//   if (env === 'prod') {\r\n//     return [\r\n//       {\r\n//         pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\r\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n//         pToken: '0x0000000000000000000000000000000000000000',\r\n//         lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\r\n//         dToken: '0x0000000000000000000000000000000000000000',\r\n//         MiningVault: '0x0000000000000000000000000000000000000000',\r\n//         initialBlock: '6894880',\r\n//         chainId: '56',\r\n//         bTokenSymbol: 'CAKE-LP',\r\n//         symbol: '--',\r\n//         retired: true,\r\n//       },\r\n//     ];\r\n//   } else {\r\n//     return [];\r\n//   }\r\n// };\r\n// export const getClp2ContractAddressConfig = (env = 'dev') => {\r\n//   if (env === 'prod') {\r\n//     return [\r\n//       {\r\n//         pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n//         pToken: '0x0000000000000000000000000000000000000000',\r\n//         lToken: '0x0000000000000000000000000000000000000000',\r\n//         dToken: '0x0000000000000000000000000000000000000000',\r\n//         MiningVault: '0x0000000000000000000000000000000000000000',\r\n//         initialBlock: '699498',\r\n//         chainId: '56',\r\n//         bTokenSymbol: 'CAKE-LP SYRUP',\r\n//         symbol: '--',\r\n//       },\r\n//     ];\r\n//   } else {\r\n//     return [];\r\n//   }\r\n// };\r\n\r\nexport const getLpConfigList = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        pool:   '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\r\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        bTokenSymbol: 'DERI-USDT SLP',\r\n        symbol: '--',\r\n        type: 'slp',\r\n        isLp: true,\r\n      },\r\n      {\r\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\r\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\r\n        dToken: '0x0000000000000000000000000000000000000000',\r\n        MiningVault: '0x0000000000000000000000000000000000000000',\r\n        initialBlock: '6894880',\r\n        chainId: '56',\r\n        bTokenSymbol: 'CAKE-LP',\r\n        symbol: '--',\r\n        type: 'clp',\r\n        retired: true,\r\n        isLp: true,\r\n      },\r\n      {\r\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0x0000000000000000000000000000000000000000',\r\n        MiningVault: '0x0000000000000000000000000000000000000000',\r\n        initialBlock: '699498',\r\n        chainId: '56',\r\n        bTokenSymbol: 'CAKE-LP SYRUP',\r\n        symbol: '--',\r\n        type: 'clp2',\r\n        isLp: true,\r\n      },\r\n    ];\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getMiningVaultRouterConfig = (chainId) => {\r\n  const configs = [\r\n    {\r\n      MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\r\n      chainId: '56',\r\n    },\r\n  ];\r\n  const filteredConfig = configs.filter((i) => i.chainId === chainId);\r\n  if (filteredConfig.length > 0) {\r\n    return filteredConfig[0].MiningVaultRouter;\r\n  } else {\r\n    throw new Error(\r\n      `getMiningVaultRouterAddressConfig: no address for chainId ${chainId}`\r\n    );\r\n  }\r\n};\r\n\r\nexport const getDeriConfigList= (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '1',\r\n      },\r\n      {\r\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '56',\r\n      },\r\n      {\r\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\r\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '128',\r\n      },\r\n    ];\r\n  }\r\n  return [\r\n    {\r\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\r\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '3',\r\n    },\r\n    {\r\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\r\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '97',\r\n    },\r\n    {\r\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\r\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '256',\r\n    },\r\n  ];\r\n};\r\n\r\nexport const getPreminingConfigList = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        bToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xe91cb8ba06028f38e231F7099e9B97CEDd2f2736',\r\n        pool: '0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/0/0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\r\n        bTokenSymbol: 'WBNB',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x8518054fa6b7E0d4834bfD152c9BA5BDB856FD2B',\r\n        pool: '0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/1/0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\r\n        bTokenSymbol: 'CAKE',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0xa184088a740c695E156F91f5cC086a06bb78b827',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x167704539C9acAcF6f0C2D7AAeB4413339F86AaA',\r\n        pool: '0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: true,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/2/0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\r\n        bTokenSymbol: 'AUTO',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\r\n        pool: '0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        chainId: '128',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/1/0/0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\r\n        bTokenSymbol: 'WHT',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\r\n        pool: '0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        chainId: '128',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/1/1/0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\r\n        bTokenSymbol: 'MDX',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x3B50881F5646E809ef85Bb0016af3b2Ee5313d46',\r\n        pool: '0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/0/0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\r\n        bTokenSymbol: 'SUSHI',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0069b4Fb48e5B8E9CB6960f4c2468b625ACfb465',\r\n        pool: '0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/1/0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\r\n        bTokenSymbol: 'AAVE',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xFFCfB31b6500E7e420CFE5D0df710DdF928F55FD',\r\n        pool: '0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: true,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/2/0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\r\n        bTokenSymbol: 'DERI-USDT SLP',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n    ];\r\n  } else {\r\n    return []\r\n  }\r\n};\r\n\r\n\r\n// export const getSlpConfig = (chainId, poolAddress) => {\r\n//   chainId = normalizeChainId(chainId);\r\n//   const pools = getLpConfigList(DeriEnv.get()).filter(\r\n//     (c) => c.chainId === chainId\r\n//   );\r\n//   const pool = pools.filter((p) => p.pool === poolAddress);\r\n//   if (pool.length > 0) {\r\n//     return {\r\n//       poolAddress: pool[0].pool,\r\n//       bTokenAddress: pool[0].bToken,\r\n//       pTokenAddress: pool[0].pToken,\r\n//       lTokenAddress: pool[0].lToken,\r\n//       dTokenAdress: pool[0].dToken,\r\n//       MinningVaultAddress: pool[0].MiningVault,\r\n//     };\r\n//   }\r\n//   console.log(\r\n//     `getSlpConfig(): contract address is not found: ${chainId} ${poolAddress}`\r\n//   );\r\n//   return {};\r\n// };\r\n\r\n// export const getClp2Config= (chainId, poolAddress) => {\r\n//   chainId = normalizeChainId(chainId);\r\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\r\n//     (c) => c.chainId === chainId\r\n//   );\r\n//   const pool = pools.filter((p) => p.pool === poolAddress);\r\n//   if (pool.length > 0) {\r\n//     return {\r\n//       poolAddress: pool[0].pool,\r\n//       bTokenAddress: pool[0].bToken,\r\n//       pTokenAddress: pool[0].pToken,\r\n//       lTokenAddress: pool[0].lToken,\r\n//       dTokenAdress: pool[0].dToken,\r\n//       MinningVaultAddress: pool[0].MiningVault,\r\n//     };\r\n//   }\r\n//   console.log(\r\n//     `getClp2Config(): contract address is not found: ${chainId} ${poolAddress}`\r\n//   );\r\n//   return {};\r\n// };\r\n\r\n// export const getClpConfig= (chainId, poolAddress) => {\r\n//   chainId = normalizeChainId(chainId);\r\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\r\n//     (c) => c.chainId === chainId\r\n//   );\r\n//   const pool = pools.filter((p) => p.pool === poolAddress);\r\n//   if (pool.length > 0) {\r\n//     return {\r\n//       poolAddress: pool[0].pool,\r\n//       bTokenAddress: pool[0].bToken,\r\n//       lTokenAddress: pool[0].lToken,\r\n//     };\r\n//   }\r\n//   console.log(\r\n//     `getClpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\r\n//   );\r\n//   return {};\r\n// };\r\n\r\nexport const getLpConfig = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getLpConfigList(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      lTokenAddress: pool[0].lToken,\r\n      type: pool[0].type,\r\n    };\r\n  }\r\n  console.log(\r\n    `getLpConfig(): contract address is not found: ${chainId} ${poolAddress}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getDeriConfig= (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pool = getDeriConfigList(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  if (pool.length > 0) {\r\n    return {\r\n      deriAddress: pool[0].Deri,\r\n      wormholeAddress: pool[0].Wormhole,\r\n      bTokenSymbol: pool[0].bTokenSymbol,\r\n    };\r\n  }\r\n  console.log(\r\n    `getDeriConfig(): contract address is not found: ${chainId}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getMiningVaultConfig = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getPoolV1ConfigList(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  if (pools.length > 0) {\r\n    if (pools[0].MiningVault) {\r\n      return pools[0].MiningVault;\r\n    }\r\n  }\r\n};\r\n\r\nexport const getPoolV1Config = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const env = DeriEnv.get()\r\n  const pools = getPoolV1ConfigList(env)\r\n    .concat(getPreminingConfigList(env))\r\n    .concat(getLpConfigList(env))\r\n    .filter((c) => c.chainId === chainId);\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      pTokenAddress: pool[0].pToken,\r\n      lTokenAddress: pool[0].lToken,\r\n      dTokenAdress: pool[0].dToken,\r\n      MinningVaultAddress: pool[0].MiningVault,\r\n      bTokenSymbol: pool[0].bTokenSymbol,\r\n      symbol: pool[0].symbol,\r\n      unit: pool[0].unit,\r\n      initialBlock: pool[0].initialBlock,\r\n    };\r\n  } else {\r\n    throw new Error(\r\n      `getPoolV1Config(): contract address is not found: ${chainId} ${poolAddress}`\r\n    );\r\n  }\r\n}\r\n","\r\nconst paddingDate = (date) => {\r\n  date = date.toString()\r\n  if (date.length === 1) {\r\n    return '0' + date\r\n  } else {\r\n    return date\r\n  }\r\n}\r\nexport const getEpochTimeRange = (time) => {\r\n  //console.log('1', time.getTime()/1000)\r\n  const year = time.getUTCFullYear()\r\n  const month = time.getUTCMonth()\r\n  const day = time.getUTCDate()\r\n  let epochs = []\r\n  for (let i = 0; i< 3; i++) {\r\n    const newDate = new Date(`${year}-${paddingDate(month + 1)}-${paddingDate(day)}T${paddingDate(8*i)}:00:00Z`)\r\n    //console.log(newDate.getTime()/1000)\r\n    epochs.push(newDate)\r\n  }\r\n  epochs.push(new Date(`${year}-${paddingDate(month + 1)}-${paddingDate(day+1)}T00:00:00Z`))\r\n  let index = -1\r\n  for (let i = 0; i< epochs.length; i++) {\r\n    //console.log(i, epochs[i].getTime()/1000)\r\n    if (time.getTime() < epochs[i].getTime()) {\r\n      index = i\r\n      break\r\n    }\r\n  }\r\n  if (index !== -1) {\r\n    return [epochs[index - 1].getTime()/1000, epochs[index].getTime()/1000]\r\n  }\r\n  throw new Error(`getEpochTimeRange(): cannot get epoch range for time ${time}`)\r\n}","export const factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}","import Web3 from 'web3';\r\n// == func\r\n// const np = () => {}\r\n// const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\n// refer to https://www.30secondsofcode.org/js/s/deep-clone\r\n// alternative: let clone = JSON.parse(JSON.stringify(obj))\r\nexport const deepClone = obj => {\r\n  if (obj === null) return null;\r\n  let clone = Object.assign({}, obj)\r\n  Object.keys(clone).forEach((key) => {\r\n    clone[key] = typeof obj[key] === 'object' ? deepClone(obj[key]) : obj[key];\r\n  });\r\n  // need recheck\r\n  if (Array.isArray(obj)) {\r\n    clone.length = obj.length\r\n    return Array.from(clone)\r\n  }\r\n  return clone\r\n}\r\n\r\nexport const shuffleArray = (urls) => {\r\n  const newUrls = deepClone(urls)\r\n  const length = urls.length\r\n  let res = []\r\n  for (let i = 0; i < length; i++) {\r\n    const index = Math.floor(Math.random() * urls.length)\r\n    res = res.concat(newUrls.splice(index,1))\r\n  }\r\n  return res\r\n}\r\n\r\nconst getBlockNumber = async (url) => {\r\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\r\n  try {\r\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\r\n    const startTime = Date.now()\r\n    res.blockNumber = await web3.eth.getBlockNumber()\r\n    res.duration = Date.now() - startTime\r\n  } catch (err) {\r\n    //console.log(`getBlockNumber(${url}) error: ${err}`)\r\n  }\r\n  return res\r\n};\r\n\r\nexport const getLatestRPCServer = async (urls = []) => {\r\n  urls = shuffleArray(urls)\r\n  // pick 2 random urls\r\n  urls = urls.length >= 2 ? urls.slice(0,2) : urls\r\n  let promises = []\r\n  for (let i = 0; i < urls.length; i++) {\r\n    promises.push(getBlockNumber(urls[i]));\r\n  }\r\n  let blockNumbers = await Promise.all(promises)\r\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\r\n  // console.log('blockNumbers',  blockNumbers)\r\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\r\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\r\n  const res = blockNumbers[index] && blockNumbers[index].url\r\n  // console.log(res)\r\n  if (res && res.startsWith('http')) {\r\n    return res\r\n  } else {\r\n    throw new Error(`getLatestRPCServer(): no alive RPC server in ${urls}`)\r\n  }\r\n};","import {\r\n  getChainProviderUrls,\r\n  getDailyBlockNumberConfig,\r\n} from '../config/chain';\r\nimport { normalizeChainId } from './validate';\r\nimport { getLatestRPCServer } from './network';\r\n\r\nexport const getChainProviderUrl = async (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const urls = getChainProviderUrls(chainId);\r\n  if (urls.length > 0) {\r\n   const url =  await getLatestRPCServer(urls);\r\n   // console.log('url', url)\r\n   return url\r\n  } else {\r\n    throw new Error(\r\n      `Cannot find the chain provider url with chainId: ${chainId}`\r\n    );\r\n  }\r\n};\r\n\r\nexport const getDailyBlockNumber = (chainId) => {\r\n  const blockNumbers = getDailyBlockNumberConfig();\r\n  if (blockNumbers[chainId]) {\r\n    return parseInt(blockNumbers[chainId]);\r\n  } else {\r\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\r\n  }\r\n};\r\n\r\nexport const getNetworkName = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  let poolNetwork;\r\n  switch (chainId) {\r\n    case '1':\r\n      poolNetwork = 'ethereum';\r\n      break;\r\n    case '56':\r\n      poolNetwork = 'bsc';\r\n      break;\r\n    case '128':\r\n      poolNetwork = 'heco';\r\n      break;\r\n    case '3':\r\n      poolNetwork = 'ropsten';\r\n      break;\r\n    case '42':\r\n      poolNetwork = 'kovan';\r\n      break;\r\n    case '97':\r\n      poolNetwork = 'bsctestnet';\r\n      break;\r\n    case '256':\r\n      poolNetwork = 'hecotestnet';\r\n      break;\r\n    case '137':\r\n      poolNetwork = 'matic';\r\n      break;\r\n    case '80001':\r\n      poolNetwork = 'mumbai';\r\n      break;\r\n    default:\r\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\r\n  }\r\n  return poolNetwork;\r\n};","import Web3 from 'web3';\r\nimport { normalizeChainId } from '../utils/validate';\r\nimport { getChainProviderUrl } from '../utils/chain';\r\nimport { isBrowser, isJsDom } from '../utils/convert';\r\n\r\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\nexport const web3Factory = (function () {\r\n  const web3InstanceMap = {};\r\n  let pending = {}\r\n  let walletChainId = null\r\n  return {\r\n    async get(chainId) {\r\n      chainId = normalizeChainId(chainId)\r\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\r\n        //console.log('hit web3 cache')\r\n        return web3InstanceMap[chainId];\r\n      }\r\n      // for mining page should not depends wallet network\r\n      if (!walletChainId && typeof window === 'object' && window.ethereum) {\r\n        walletChainId = await window.ethereum.request({ method: 'net_version' })\r\n      }\r\n      // using metaMask ethereum object\r\n      if (\r\n        isBrowser() &&\r\n        !isJsDom() &&\r\n        typeof window.ethereum === 'object' &&\r\n        walletChainId &&\r\n        chainId === walletChainId.toString()\r\n      ) {\r\n        //console.log('new ethereum web3 cache')\r\n        web3InstanceMap[chainId] = new Web3(window.ethereum);\r\n        return web3InstanceMap[chainId];\r\n      } else {\r\n        if (pending[chainId]) {\r\n          // wait for init\r\n          let retry = 8\r\n          while (retry > 0) {\r\n            await delay(500)\r\n            if (Object.keys(web3InstanceMap).includes(chainId)) {\r\n              // console.log('hit web3 cache')\r\n              return web3InstanceMap[chainId];\r\n            } else {\r\n              retry -= 1\r\n            }\r\n          }\r\n          // timeout\r\n          const providerUrl = await getChainProviderUrl(chainId);\r\n          //console.log('new web3 cache')\r\n          web3InstanceMap[chainId] = new Web3(\r\n            new Web3.providers.HttpProvider(providerUrl)\r\n          );\r\n          return web3InstanceMap[chainId];\r\n        } else {\r\n          // first init\r\n          pending[chainId] = true\r\n          try {\r\n            const providerUrl = await getChainProviderUrl(chainId);\r\n            //console.log('new web3 cache')\r\n            web3InstanceMap[chainId] = new Web3(\r\n              new Web3.providers.HttpProvider(providerUrl)\r\n            );\r\n          } catch(err) {\r\n            console.log(err.toString())\r\n          } finally {\r\n            delete pending[chainId]\r\n          }\r\n          return web3InstanceMap[chainId];\r\n        }\r\n      }\r\n    },\r\n  };\r\n})();","import { hexToNumber } from './convert';\r\nimport { web3Factory } from '../factory/web3'\r\n\r\nconst intRe = /^\\d+$/\r\n// adopt from derijs next\r\nexport const deleteIndexedKey = (obj) => {\r\n  if (typeof obj === 'object' && obj !== null &&  Object.keys(obj).length > 0) {\r\n    const keys = Object.keys(obj);\r\n    const intKeyCount = keys.reduce(\r\n      (acc, k) => (intRe.test(k) ? acc + 1 : acc),\r\n      0\r\n    );\r\n    //console.log(keys);\r\n    // is leaf array\r\n    if (intKeyCount * 2 === keys.length) {\r\n      let newObj = {};\r\n      Object.keys(obj).forEach((k) => {\r\n        if (!intRe.test(k)) {\r\n          newObj[k] = obj[k];\r\n        }\r\n      });\r\n      return newObj;\r\n    } else if (intKeyCount === keys.length) {\r\n      // is array container\r\n      let res = [];\r\n      for (let i = 0; i < keys.length; i++) {\r\n        if (Array.isArray(obj[i])) {\r\n          res.push(deleteIndexedKey(obj[i]));\r\n        } else {\r\n          res.push(obj[i]);\r\n        }\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  return obj;\r\n};\r\n\r\n  // get block number when last updated\r\n  export const getLastUpdatedBlockNumber = async(chainId, contractAddress, position = 0) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    const res = await web3.eth.getStorageAt(contractAddress, position)\r\n    //console.log('res', hexToNumber(res))\r\n    return hexToNumber(res)\r\n  }\r\n\r\n  // get block number when last updated\r\n  export const getLatestBlockNumber = async(chainId) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    const res = await web3.eth.getBlockNumber()\r\n    //console.log('res', res)\r\n    return res\r\n  }\r\n\r\n  export const getBlockInfo = async(chainId, blockNumber) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    return await web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  export const getPastEvents = async(chainId, contract, eventName, filter = {}, fromBlock = 0, to = 0) => {\r\n    let events = [];\r\n    let amount\r\n    if (['56', '97', '127', '80001'].includes(chainId)) {\r\n      amount = 999\r\n    } else {\r\n      amount = 4999\r\n    }\r\n    if ((fromBlock + amount) > to) {\r\n      amount = to - fromBlock\r\n    }\r\n    while (fromBlock <= to) {\r\n      let es = await contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock: fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if ((fromBlock + amount) > to) {\r\n        amount = to - fromBlock\r\n      }\r\n    }\r\n    return events;\r\n  }","import {\r\n  getRestServerConfig,\r\n  DeriEnv,\r\n} from '../config'\r\n//import fetch from 'node-fetch'\r\n\r\n// get REST HTTP Base url\r\nexport const getHttpBase = () => {\r\n  return getRestServerConfig(DeriEnv.get());\r\n};\r\n\r\nexport const fetchJson = async (url) => {\r\n  const resp = await fetch(url);\r\n  return await resp.json();\r\n};\r\n\r\nexport const fetchRestApi = async (path, opts = { method: 'GET' }) => {\r\n  return await fetchJson(`${getHttpBase()}${path}`, opts);\r\n};\r\n\r\n// query api wrapper\r\nexport const catchApiError = async (func, args, methodName, defaultValue) => {\r\n  try {\r\n    const res = await func(...args)\r\n    return res\r\n  } catch (err) {\r\n    //console.log(`${methodName}: `, err.toString())\r\n    console.log(`${methodName}: `, err)\r\n  }\r\n  return defaultValue\r\n}\r\n\r\n// tx api wrapper\r\nexport const catchTxApiError = async (func, args) => {\r\n  let res;\r\n  try {\r\n    const result = await func(...args);\r\n    res = { success: true, transaction: result };\r\n  } catch (err) {\r\n    res = { success: false, error: err.message};\r\n  }\r\n  return res;\r\n};\r\n\r\n","// utils for derijsnext, combine in one file\r\nimport { getChainIds } from '../config/chain';\r\nimport { fromWei, toWei, toChecksumAddress } from './convert';\r\n\r\nexport const checkChainId = (chainId) => {\r\n  chainId = chainId != null ? chainId.toString() : chainId \r\n  if (getChainIds().includes(chainId)) {\r\n    return chainId;\r\n  }\r\n  throw new Error(`invalid chainId '${chainId}'`);\r\n};\r\n\r\nexport const checkAddress = (address) => {\r\n  address = address != null ? address.toString() : address\r\n  try {\r\n    return toChecksumAddress(address)\r\n  } catch(err) {\r\n    // console.log('-- checkAddress(): ', err)\r\n    throw new Error(`invalid eth address '${address}'`)\r\n  }\r\n}\r\n\r\nexport const checkApiInput = (chainId, poolAddress, accountAddress) => {\r\n  return [\r\n    checkChainId(chainId),\r\n    checkAddress(poolAddress),\r\n    checkAddress(accountAddress),\r\n  ];\r\n};\r\n\r\nexport const checkApiInputWithoutAccount = (chainId, poolAddress) => {\r\n  return [checkChainId(chainId), checkAddress(poolAddress)];\r\n};\r\n\r\nexport const checkTokenId = (tokenId) => {\r\n  tokenId = tokenId != null ? tokenId.toString() : tokenId\r\n  if (/^\\d+$/.test(tokenId)) {\r\n    return tokenId\r\n  }\r\n  throw new Error(`invalid tokenId '${tokenId}'`)\r\n}\r\n\r\nexport const checkAmount = (amount) => {\r\n  amount = amount != null ? amount.toString() : amount\r\n  if (/^-?[\\d\\.]+$/.test(amount)) {\r\n    return amount\r\n  }\r\n  throw new Error(`invalid amount '${amount}'`)\r\n}\r\n\r\nexport const checkSymbolId = (symbolId, symbolIds) => {\r\n  if (symbolId != null) {\r\n    const index = symbolIds.indexOf(symbolId.toString())\r\n    if (index > -1) {\r\n      return index\r\n    }\r\n  }\r\n  throw new Error(`invalid symbolId '${symbolId}' for symbolIds(${symbolIds.join(',')}) `);\r\n};\r\n\r\n// factory\r\nexport const contractFactory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address, initialBlock='') => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address, initialBlock);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\n// contract\r\nconst processObjectResult = (val, propList = []) => {\r\n  return Object.keys(val).reduce((acc, prop) => {\r\n    if (typeof val[prop] === \"string\" && propList.includes(prop)) {\r\n      acc[prop] = fromWei(val[prop]);\r\n    } else {\r\n      acc[prop] = val[prop];\r\n    }\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\nexport const processResult = (val, propList = []) => {\r\n  if (Array.isArray(val)) {\r\n    return val.map((v) => processResult(v, propList));\r\n  } else if (typeof val === 'object' && val !== null) {\r\n    return processObjectResult(val, propList);\r\n  } else if (typeof val === \"string\") {\r\n    return fromWei(val);\r\n  } else {\r\n    return val;\r\n  }\r\n};\r\n\r\nexport const processMethod = (klass, methodName, propList = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const res = await originMethod.apply(this, args);\r\n    return processResult(res, propList);\r\n  };\r\n  return klass;\r\n};\r\n\r\nexport const processTxMethod = (klass, methodName, toWeiArgPositions = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const newArgs = args.map((arg, index) =>\r\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\r\n    );\r\n    return await originMethod.apply(this, newArgs);\r\n  };\r\n  return klass;\r\n};\r\n\r\n// api for v2_lite and option\r\nexport const getLiquidity = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype['getPoolLiquidity'] = async function () {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    this.stateValues = this.stateValues || {}\r\n    this.stateValues.liquidity = fromWei(res[0]);\r\n    return this.stateValues.liquidity\r\n  };\r\n  return klass\r\n}\r\n\r\nexport const getLastTimestamp = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype['getLastTimestamp'] = async function () {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    this.stateValues = this.stateValues || {}\r\n    this.stateValues.lastTimestamp = res[1];\r\n    return this.stateValues.lastTimestamp\r\n  };\r\n  return klass\r\n}\r\nexport const getProtocolFeeAccrued = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype['getProtocolFeeAccrued'] = async function () {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    this.stateValues = this.stateValues || {}\r\n    this.stateValues.protocolFeeAccrued = fromWei(res[2]);\r\n    return this.stateValues.protocolFeeAccrued;\r\n  };\r\n  return klass;\r\n}","const bTokenPairs = {\r\n  AMUSDC: 'amUSDC',\r\n};\r\n\r\nconst offchainSymbolPairs = {\r\n  AXSUSDT: 'AXSUSDT',\r\n  MANAUSDT: 'MANAUSDT',\r\n  MBOXUSDT: 'MBOXUSDT',\r\n  IBSCDEFI: 'iBSCDEFI',\r\n  IGAME: 'iGAME',\r\n  ALICEUSDT: 'ALICEUSDT',\r\n  SANDUSDT: 'SANDUSDT',\r\n  QUICKUSDT: 'QUICKUSDT',\r\n  GHSTUSDT: 'GHSTUSDT',\r\n  AGLDUSDT: 'AGLDUSDT',\r\n};\r\n\r\nexport const normalizeOptionSymbol = (optionSymbol) => {\r\n  const res = optionSymbol.split('-')\r\n  if (res.length >= 2) {\r\n    return res[0]\r\n  } else {\r\n    throw new Error(`invalid option symbol:${optionSymbol}`)\r\n  }\r\n};\r\n\r\nexport const getNormalizedOptionSymbols = (symbols) => {\r\n  let res = []\r\n  symbols.forEach((s) => {\r\n    const volSymbol = normalizeOptionSymbol(s)\r\n    if (!res.includes(volSymbol)) {\r\n      res.push(volSymbol)\r\n    }\r\n  })\r\n  return res\r\n}\r\n\r\nexport const getVolatilitySymbols = (symbols) => {\r\n  return getNormalizedOptionSymbols(symbols).map((s) => `VOL-${s}`)\r\n}\r\n\r\nexport const isUsedRestOracle = (symbol) => {\r\n  return Object.keys(offchainSymbolPairs).includes(symbol);\r\n};\r\n\r\nexport const mapToSymbol = (symbol) => {\r\n  if (Object.keys(offchainSymbolPairs).includes(symbol)) {\r\n    return offchainSymbolPairs[symbol]\r\n  } else {\r\n    return symbol\r\n  }\r\n}\r\n\r\nexport const mapToSymbolInternal = (symbol) => {\r\n  const index = Object.values(offchainSymbolPairs).indexOf(symbol)\r\n  if (index > -1) {\r\n    return Object.keys(offchainSymbolPairs)[index]\r\n  } else {\r\n    return symbol\r\n  }\r\n}\r\n\r\nexport const mapToBToken = (bToken) => {\r\n  if (Object.keys(bTokenPairs).includes(bToken)) {\r\n    return bTokenPairs[bToken]\r\n  } else {\r\n    return bToken\r\n  }\r\n}\r\n\r\nexport const mapToBTokenInternal = (bToken) => {\r\n  const index = Object.values(bTokenPairs).indexOf(bToken)\r\n  if (index !== -1) {\r\n    return Object.keys(bTokenPairs)[index]\r\n  } else {\r\n    return bToken\r\n  }\r\n}\r\n\r\nexport const normalizeSymbolUnit = (symbol) => {\r\n  const prefix = ['USD', 'USDT'];\r\n  const re = new RegExp(`(${prefix.join('|')})$`);\r\n  if (typeof symbol === 'string') {\r\n    return mapToSymbol(symbol).replace(re, '');\r\n  }\r\n  console.log(`symbol(${symbol}) is not a string type`);\r\n  return symbol;\r\n};\r\n\r\nexport const getIndexInfo = (symbol) => {\r\n  const internalSymbol = mapToSymbolInternal(symbol);\r\n  const customIndexs = {\r\n    IGAME: {\r\n      tokens: ['AXS', 'MANA', 'SAND', 'ALICE', 'TLM', 'DPET', 'SKILL'],\r\n      url: 'https://docs.deri.finance/products/index/game-index',\r\n    },\r\n    IBSCDEFI: {\r\n      tokens: ['CAKE', 'XVS', 'MDX', 'AUTO', 'BAKE', 'BUNNY'],\r\n      url: 'https://docs.deri.finance/products/index/bsc-defi-index',\r\n    },\r\n    IMEME: {\r\n      tokens: ['DOGE', 'SHIB', 'ELON', 'LOWB', 'PIG', 'SAFEMOON', 'MONA'],\r\n      url: 'https://docs.deri.finance/products/index/meme-index',\r\n    },\r\n  };\r\n  if (Object.keys(customIndexs).includes(internalSymbol)) {\r\n    return customIndexs[internalSymbol];\r\n  } else {\r\n    return { tokens: [], url: '' };\r\n  }\r\n};","import { validateObjectKeyExist, validateIsArray } from '../utils';\r\nimport {\r\n  isUsedRestOracle,\r\n  mapToBToken,\r\n  mapToSymbol,\r\n  getVolatilitySymbols,\r\n} from './token';\r\n\r\nconst validatePoolV2 = (pool) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'router',\r\n      'initialBlock',\r\n      'bTokens',\r\n      'symbols',\r\n      'chainId',\r\n      'symbolCount',\r\n      'bTokenCount',\r\n    ],\r\n    pool,\r\n    ''\r\n  );\r\n  validateIsArray(pool['bTokens'], 'bTokens');\r\n  pool['bTokens'].forEach((prop) => {\r\n    validateObjectKeyExist(\r\n      ['bTokenId', 'bTokenSymbol', 'bToken'],\r\n      prop,\r\n      'bToken'\r\n    );\r\n  });\r\n  validateIsArray(pool['symbols'], 'symbols');\r\n  pool['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n};\r\n\r\nconst processPoolV2 = (pool) => {\r\n  // process pool \r\n  pool['bTokenCount'] = pool['bTokens'].length;\r\n  pool['symbolCount'] = pool['symbols'].length;\r\n  pool['bTokens'].forEach((b) => b['bTokenSymbol'] = mapToBToken(b['bTokenSymbol']))\r\n  pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\r\n};\r\n\r\nconst validatePoolV2Lite = (pool) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'initialBlock',\r\n      'bToken',\r\n      'bTokenSymbol',\r\n      'symbols',\r\n      'chainId',\r\n      'offchainSymbolIds',\r\n      'offchainSymbols',\r\n      'symbolCount',\r\n    ],\r\n    pool,\r\n    ''\r\n  );\r\n  validateIsArray(pool['symbols'], 'symbols');\r\n  pool['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n  validateIsArray(pool['offchainSymbolIds'], 'offchainSymbolIds');\r\n  validateIsArray(pool['offchainSymbols'], 'offchainSymbols');\r\n};\r\n\r\nconst processPoolV2Lite = (pool) => {\r\n  // process pool\r\n  if (!pool['symbolCount']) {\r\n    pool['symbolCount'] = pool['symbols'].length;\r\n  }\r\n  if (!pool['offchainSymbolIds'] && !pool['offchainSymbols']) {\r\n    pool['offchainSymbolIds'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\r\n    pool['offchainSymbols'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\r\n    pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\r\n  }\r\n};\r\n\r\nconst validateConfigV2LiteOpen = (config) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'initialBlock',\r\n      'bToken',\r\n      'bTokenSymbol',\r\n      'symbols',\r\n      'chainId',\r\n      'offchainSymbolIds',\r\n      'offchainSymbols',\r\n      'symbolCount',\r\n    ],\r\n    config,\r\n    ''\r\n  );\r\n  validateIsArray(config['symbols'], 'symbols');\r\n  config['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n  validateIsArray(config['offchainSymbolIds'], 'offchainSymbolIds');\r\n};\r\n\r\nconst processConfigV2LiteOpen = (config) => {\r\n  // process config\r\n  if (!config['symbolCount']) {\r\n    config['symbolCount'] = config['symbols'].length;\r\n  }\r\n  if (!config['offchainSymbolIds'] && !config['offchainSymbols']) {\r\n    config['offchainSymbolIds'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\r\n    config['offchainSymbols'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\r\n    config['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\r\n  }\r\n};\r\n\r\nconst validatePoolOption = (pool) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'initialBlock',\r\n      'bToken',\r\n      // 'pricer',\r\n      'bTokenSymbol',\r\n      'symbols',\r\n      'chainId',\r\n      // 'offchainSymbolIds',\r\n      // 'offchainSymbols',\r\n      'symbolCount',\r\n      'volatilitySymbols',\r\n    ],\r\n    pool,\r\n    ''\r\n  );\r\n  validateIsArray(pool['symbols'], 'symbols');\r\n  pool['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n  // validateIsArray(pool['offchainSymbolIds'], 'offchainSymbolIds');\r\n  // validateIsArray(pool['offchainSymbols'], 'offchainSymbols');\r\n  validateIsArray(pool['volatilitySymbols'], 'volatilitySymbols');\r\n};\r\n\r\nconst processPoolOption = (pool) => {\r\n  // process pool \r\n  pool['symbolCount'] = pool['symbols'].length;\r\n  if (!pool['volatilitySymbols']) {\r\n    // pool['offchainSymbolIds'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\r\n    // pool['offchainSymbols'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\r\n    pool['volatilitySymbols'] = getVolatilitySymbols(\r\n      pool['symbols'].map((s) => s.symbol)\r\n    ); \r\n    pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\r\n  }\r\n};\r\n\r\nexport const poolProcessor = {\r\n  v2: processPoolV2,\r\n  v2_lite: processPoolV2Lite,\r\n  v2_lite_open: processConfigV2LiteOpen,\r\n  option: processPoolOption,\r\n};\r\n\r\nexport const poolValidator = {\r\n  v2: validatePoolV2,\r\n  v2_lite: validatePoolV2Lite,\r\n  v2_lite_open: validateConfigV2LiteOpen,\r\n  option: validatePoolOption,\r\n};","import { web3Factory } from '../factory/web3';\r\nimport { numberToHex } from '../utils/convert';\r\n\r\nconst MAX_GAS_AMOUNT = 832731;\r\n//const RE_ERROR_MSG = /\\\"message\\\":\\s\\\"execution\\sreverted:([\\w\\s]+)\\\"/\r\nconst RE_ERROR_MSG = /\"message\":\\s\"execution\\sreverted:([\\w\\s]+)\"/\r\n\r\nexport class ContractBase {\r\n  constructor(chainId, contractAddress, contractAbi) {\r\n    this.chainId = chainId;\r\n    this.contractAddress = contractAddress;\r\n    this.contractAbi = contractAbi;\r\n  }\r\n\r\n  async _init() {\r\n    // re-init web3 and contract when web3 instance is null\r\n    if (!this.web3) {\r\n      this.web3 = await web3Factory.get(this.chainId);\r\n      this.contract = new this.web3.eth.Contract(\r\n        this.contractAbi,\r\n        this.contractAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async _call(method, args = []) {\r\n    let res\r\n    let retry = 2\r\n    while (retry > 0) {\r\n      try {\r\n        await this._init()\r\n        res = await this.contract.methods[method](...args).call();\r\n        break\r\n      } catch(err) {\r\n        retry -= 1\r\n        // remove web3 instance to re-init\r\n        this.web3 = null\r\n        if (err.toString().includes('Invalid JSON RPC response')) {\r\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\r\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\r\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\r\n        } else {\r\n          //console.log('error:', err.toString())\r\n        }\r\n      }\r\n    }\r\n    if (retry === 0 && !res) {\r\n      throw new Error(`The contract(${this.contractAddress}) '${method}([${args}])' failed with max retry 2.`)\r\n    }\r\n    return res\r\n  }\r\n\r\n  async _estimatedGas(method, args = [], accountAddress) {\r\n    await this._init()\r\n    let gas = 0;\r\n    for (let i = 0; i < 2; i++) {\r\n      try {\r\n        gas = await this.contract.methods[method](...args).estimateGas({\r\n          from: accountAddress,\r\n        });\r\n        gas = parseInt(gas * 1.25);\r\n        break;\r\n      } catch (error) {\r\n        console.log(`-- estimatedGas: ${error}`)\r\n        // const res = error.toString().split('\\n').join('').match(RE_ERROR_MSG)\r\n        // if (Array.isArray(res) && res.length >= 2) {\r\n        //   throw new Error(res[1].trim())\r\n        // }\r\n      }\r\n    }\r\n    if (gas === 0) gas = MAX_GAS_AMOUNT;\r\n    return gas;\r\n  }\r\n\r\n  _getTransactionReceipt(tx) {\r\n    const self = this;\r\n    return function _transactionReceipt(resolve, reject) {\r\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\r\n        if (error) {\r\n          reject(error);\r\n        } else if (receipt === null) {\r\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\r\n        } else if (receipt.status === false) {\r\n          receipt.errorMessage = 'Transaction failed';\r\n          reject(receipt);\r\n        } else {\r\n          resolve(receipt);\r\n        }\r\n      });\r\n    };\r\n  }\r\n  async _transact(method, args=[], accountAddress) {\r\n    await this._init()\r\n    const gas = await this._estimatedGas(method, args, accountAddress)\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods[method](...args).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\r\n  }\r\n\r\n}\r\n","import { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseContract extends ContractBase {\r\n  constructor(contractAddress) {\r\n    super('97', contractAddress, CONTRACT_ABI);\r\n  }\r\n  async getValues(keyArray) {\r\n    return await this._call('getValues', [keyArray]);\r\n  }\r\n}\r\n","//import { DatabaseBaseContract } from './database_base'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseWormholeContract extends ContractBase {\r\n  constructor(contractAddress) {\r\n    super('97', contractAddress, CONTRACT_ABI);\r\n  }\r\n\r\n  async signature(accountAddress) {\r\n    return await this._call('signature', [accountAddress])\r\n  }\r\n}\r\n","//import { DatabaseBaseContract } from './database_base'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseAirdropContract extends ContractBase {\r\n  constructor(contractAddress) {\r\n    super('97', contractAddress, CONTRACT_ABI)\r\n  }\r\n  async getValues(keyArray) {\r\n    return await this._call('getValues', [keyArray])\r\n  }\r\n}\r\n","/* eslint-disable */\r\n// base token contract abi\r\nexport const bTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const TERC20Abi = [{ \"inputs\": [{ \"internalType\": \"string\", \"name\": \"_name\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"_symbol\", \"type\": \"string\" }, { \"internalType\": \"uint8\", \"name\": \"_decimals\", \"type\": \"uint8\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [{ \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\n// oracle contract abis\r\nexport const symbolOracleOffChainAbi = [ {\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}, { \"inputs\": [], \"name\": \"signer\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, {\"inputs\":[],\"name\":\"signatory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"} ]\r\nexport const chainlinkOracleAbi = [{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"event\",\"name\":\"AnswerUpdated\",\"inputs\":[{\"type\":\"int256\",\"name\":\"current\",\"internalType\":\"int256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"NewRound\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"address\",\"name\":\"startedBy\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferRequested\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"acceptOwnership\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AccessControllerInterface\"}],\"name\":\"accessController\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"name\":\"aggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"confirmAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint8\",\"name\":\"\",\"internalType\":\"uint8\"}],\"name\":\"decimals\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"string\",\"name\":\"\",\"internalType\":\"string\"}],\"name\":\"description\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"getAnswer\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"getRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getTimestamp\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"latestAnswer\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestRound\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"latestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestTimestamp\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address payable\"}],\"name\":\"owner\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"phaseAggregators\",\"inputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}],\"name\":\"phaseId\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"proposeAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"proposedAggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedGetRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedLatestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setController\",\"inputs\":[{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"transferOwnership\",\"inputs\":[{\"type\":\"address\",\"name\":\"_to\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"version\",\"inputs\":[]}]\r\nexport const wrappedOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\nexport const wooOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feed_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n\r\n// activity contract abis\r\nexport const brokerManagerAbi = [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"SetBroker\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBroker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"setBroker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const pTokenAirdropAbi = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"poolRouterAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AddWhitelist\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AirdropPToken\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"userAddress\", \"type\": \"address\" } ], \"name\": \"addWhitelist\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"airdropPToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getBTokenBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isStartAirdrop\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"ownerAddress\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"startAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"stopAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalAirdropCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalWhitelistCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"withdrawBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n/* eslint-enable */","import { deriToNatural, bg } from '../utils'\r\nimport { MAX_UINT256} from '../config'\r\nimport { ContractBase } from './contract_base'\r\nimport { bTokenAbi } from './abis';\r\n\r\n\r\nexport class BToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, bTokenAbi);\r\n  }\r\n  // === query ===\r\n  async symbol() {\r\n    return await this._call('symbol');\r\n  }\r\n\r\n  async decimals() {\r\n    return await this._call('decimals');\r\n  }\r\n  async _balanceOf(address) {\r\n    return await this._call('balanceOf', [address]);\r\n  }\r\n\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply');\r\n    return deriToNatural(res);\r\n  }\r\n\r\n  async isUnlocked(accountAddress, poolAddress) {\r\n    const allowance = await this._call('allowance', [\r\n      accountAddress,\r\n      poolAddress,\r\n    ]);\r\n    return bg(allowance).gt(0);\r\n  }\r\n\r\n  // === transaction ===\r\n  async unlock(accountAddress, poolAddress) {\r\n    return await this._transact(\r\n      'approve',\r\n      [poolAddress, MAX_UINT256],\r\n      accountAddress\r\n    );\r\n  }\r\n}","import { ContractBase } from \"../contract_base\";\r\nimport { wrappedOracleAbi } from '../abis';\r\nimport { deriToNatural } from \"../../utils\";\r\n\r\nexport class WrappedOracle extends ContractBase {\r\n  constructor(chainId, address, symbol, decimal='18') {\r\n    super(chainId, address, wrappedOracleAbi)\r\n    this.symbol = symbol\r\n    this.decimal = decimal\r\n  }\r\n\r\n  // decimals refers https://docs.chain.link/docs/matic-addresses\r\n  async getPrice() {\r\n    // console.log('hit wrapped oracle')\r\n    const res = await this._call('getPrice');\r\n    if (res) {\r\n      return deriToNatural(res).toString()\r\n    }\r\n  }\r\n}\r\n","import { ContractBase } from \"../contract_base\";\r\nimport { brokerManagerAbi } from '../abis';\r\n\r\nexport class BrokerManager extends ContractBase {\r\n  constructor(chainId, address) {\r\n    super(chainId, address, brokerManagerAbi)\r\n  }\r\n  // query\r\n  async getBroker(accountAddress) {\r\n    return await this._call('getBroker', [accountAddress])\r\n  }\r\n\r\n  // transaction\r\n  async setBroker(accountAddress, brokerAddress) {\r\n    return await this._transact(\r\n      'setBroker',\r\n      [brokerAddress],\r\n      accountAddress\r\n    );\r\n  }\r\n}","import { ContractBase } from '../contract_base'\r\nimport { pTokenAirdropAbi } from '../abis'\r\n\r\nexport class PTokenAirdrop extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, pTokenAirdropAbi)\r\n  }\r\n  async getBTokenBalance() {\r\n    return await this._call('getBTokenBalance', [])\r\n  }\r\n  async totalWhitelistCount() {\r\n    return await this._call('totalWhitelistCount', [])\r\n  }\r\n  async airdropPToken(accountAddress) {\r\n    return await this._transact('airdropPToken', [], accountAddress)\r\n  }\r\n}","import { getJsonConfig } from './config';\r\nimport { DeriEnv } from './env';\r\nimport { mapToSymbolInternal } from './token';\r\n\r\nexport const getOracleConfigList = (version='v2', env) => {\r\n  const config = getJsonConfig(version, env || DeriEnv.get())\r\n  return config.oracle\r\n};\r\n\r\nexport const getOracleConfig = (version='v2', chainId, symbol) => {\r\n  symbol = mapToSymbolInternal(symbol)\r\n  const oracles = getOracleConfigList(version)\r\n  const filteredByChainId = oracles.filter((c) =>\r\n    symbol\r\n      ? c.chainId === chainId && c.symbol === symbol\r\n      : c.chainId === chainId\r\n  );\r\n  if (filteredByChainId.length > 0) {\r\n    if (symbol) {\r\n      return filteredByChainId[0];\r\n    } else {\r\n      return filteredByChainId;\r\n    }\r\n  }\r\n  //console.log(`getOracleConfig(): invalid chainId(${chainId}) or symbol(${symbol}).`);\r\n};\r\n","// this file is generated by script, don't modify it !!!\r\nimport { processMethod } from \"../../shared/utils/derijsnext.js\";\r\nimport { bg } from \"../../shared/utils/index.js\";\r\nimport { MAX_UINT256} from '../config'\r\n\r\nconst isUnlocked = (klass) => {\r\n  klass.prototype[\"isUnlocked\"] = async function (accountAddress, poolAddress) {\r\n    const allowance = await this.allowance(accountAddress, poolAddress)\r\n    //console.log(accountAddress, poolAddress)\r\n    const res = bg(allowance).gt(0)\r\n    return res\r\n  };\r\n  return klass\r\n};\r\n\r\nconst unlock = (klass) => {\r\n  klass.prototype['unlock'] = async function (accountAddress, poolAddress) {\r\n    return await this._transact(\r\n      'approve',\r\n      [poolAddress, MAX_UINT256],\r\n      accountAddress\r\n    );\r\n  };\r\n  return klass;\r\n};\r\n\r\nexport const ERC20Adapter = (klass) => {\r\n    klass = processMethod(klass, 'totalSupply');\r\n    //klass = processMethod(klass, 'balanceOf'); // use ERC20.decimals\r\n\r\n    klass = isUnlocked(klass);\r\n    klass = unlock(klass);\r\n    return klass\r\n}\r\n\r\nexport const chainlinkOracleAdapter= (klass) => {\r\n    klass = processMethod(klass, 'getPrice');\r\n    return klass\r\n}\r\n\r\nexport const offChainOracleAdapter= (klass) => {\r\n    klass = processMethod(klass, 'getPrice');\r\n    return klass\r\n}\r\n\r\nexport const offChainVolatilityOracleAdapter= (klass) => {\r\n    klass = processMethod(klass, 'getVolatility');\r\n    return klass\r\n}\r\n","// this file is generated by script, don't modify it !!!\r\nexport const TERC20Abi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_symbol\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"_decimals\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"allowance\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"decimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"mint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transfer\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nexport const ERC20Abi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"name_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"allowance\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"decimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"pure\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transfer\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nexport const chainlinkOracleAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"feed_\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"decimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"feed\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"feedDecimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getPrice\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nexport const offChainOracleAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"signer_\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"delayAllowance_\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"delayAllowance\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getPrice\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"price\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"delayAllowance_\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setDelayAllowance\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"signer_\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setSigner\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"signer\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"timestamp\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"timestamp_\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"price_\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"v_\",\r\n                \"type\": \"uint8\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes32\",\r\n                \"name\": \"r_\",\r\n                \"type\": \"bytes32\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes32\",\r\n                \"name\": \"s_\",\r\n                \"type\": \"bytes32\"\r\n            }\r\n        ],\r\n        \"name\": \"updatePrice\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nexport const offChainVolatilityOracleAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"signer_\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"delayAllowance_\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"delayAllowance\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getVolatility\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"delayAllowance_\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setDelayAllowance\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"signer_\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setSigner\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"signer\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"timestamp\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"timestamp_\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"volatility_\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"v_\",\r\n                \"type\": \"uint8\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes32\",\r\n                \"name\": \"r_\",\r\n                \"type\": \"bytes32\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes32\",\r\n                \"name\": \"s_\",\r\n                \"type\": \"bytes32\"\r\n            }\r\n        ],\r\n        \"name\": \"updateVolatility\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"volatility\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nexport const TERC20MintLimitAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_symbol\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"_decimals\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"allowance\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"controller\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"controllerBurn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"controllerMint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"decimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"mint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"mintAmount\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"mintPeriod\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"mintTimestamp\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setMintAmount\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"period\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setMintPeriod\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transfer\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { contractFactory } from '../../shared/utils/derijsnext.js';\r\nimport { ERC20Adapter, chainlinkOracleAdapter, offChainOracleAdapter, offChainVolatilityOracleAdapter } from './adapter.js';\r\n\r\nimport { TERC20 } from './gen/TERC20.js';\r\nimport { ERC20 } from './gen/ERC20.js';\r\nimport { ChainlinkOracle} from './gen/ChainlinkOracle.js';\r\nimport { OffChainOracle} from './gen/OffChainOracle.js';\r\nimport { OffChainVolatilityOracle} from './gen/OffChainVolatilityOracle.js';\r\nimport { TERC20MintLimit } from './gen/TERC20MintLimit.js';\r\n\r\n// ERC20\r\nexport const ERC20Factory = contractFactory(ERC20Adapter(ERC20));\r\nexport const TERC20Factory = contractFactory(ERC20Adapter(TERC20)); // for test only\r\nexport const TERC20MintLimitFactory = contractFactory(ERC20Adapter(TERC20MintLimit)); // for test only\r\n\r\n\r\n// oracle\r\nexport const symbolOracleChainlinkFactory = contractFactory(chainlinkOracleAdapter(ChainlinkOracle));\r\nexport const offChainOracleFactory = contractFactory(offChainOracleAdapter(OffChainOracle));\r\nexport const volatilityOracleOffChainFactory = contractFactory(offChainVolatilityOracleAdapter(OffChainVolatilityOracle));\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey, bg } from '../../../shared/utils/index.js'\r\nimport { ERC20Abi } from '../abi/ERC20Abi.js'\r\n\r\nexport class ERC20 extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, ERC20Abi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async allowance(owner, spender) {\r\n    const res = await this._call('allowance', [owner, spender])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async _balanceOf(account) {\r\n    return await this._call('balanceOf', [account])\r\n  }\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals).toString();\r\n  }\r\n\r\n   async decimals() {\r\n     const res = await this._call('decimals', [])\r\n     return deleteIndexedKey(res)\r\n   }\r\n   async name() {\r\n     const res = await this._call('name', [])\r\n     return deleteIndexedKey(res)\r\n   }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  async approve(accountAddress, spender, amount) {\r\n    return await this._transact('approve', [spender, amount], accountAddress)\r\n  }\r\n  //  async transfer(accountAddress, to, amount) {\r\n  //    return await this._transact('transfer', [to, amount], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, amount) {\r\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey, bg } from '../../../shared/utils/index.js'\r\nimport { TERC20Abi } from '../abi/TERC20Abi.js'\r\n\r\nexport class TERC20 extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, TERC20Abi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async allowance(owner, spender) {\r\n    const res = await this._call('allowance', [owner, spender])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async _balanceOf(account) {\r\n    return await this._call('balanceOf', [account])\r\n  }\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n  async decimals() {\r\n    const res = await this._call('decimals', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  async approve(accountAddress, spender, amount) {\r\n    return await this._transact('approve', [spender, amount], accountAddress)\r\n  }\r\n  //  async burn(accountAddress, account, amount) {\r\n  //    return await this._transact('burn', [account, amount], accountAddress)\r\n  //  }\r\n  async mint(accountAddress, account, amount) {\r\n    return await this._transact('mint', [account, amount], accountAddress)\r\n  }\r\n  //  async transfer(accountAddress, to, amount) {\r\n  //    return await this._transact('transfer', [to, amount], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, amount) {\r\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey, bg } from '../../../shared/utils/index.js'\r\nimport { TERC20MintLimitAbi } from '../abi/TERC20MintLimitAbi.js'\r\n\r\nexport class TERC20MintLimit extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, TERC20MintLimitAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async allowance(owner, spender) {\r\n    const res = await this._call('allowance', [owner, spender])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async _balanceOf() {\r\n    return await this._call('balanceOf', [])\r\n  }\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n  //  async controller() {\r\n  //    const res = await this._call('controller', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async decimals() {\r\n    const res = await this._call('decimals', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async mintAmount() {\r\n  //    const res = await this._call('mintAmount', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async mintPeriod() {\r\n  //    const res = await this._call('mintPeriod', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async mintTimestamp() {\r\n  //    const res = await this._call('mintTimestamp', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  async approve(accountAddress, spender, amount) {\r\n    return await this._transact('approve', [spender, amount], accountAddress)\r\n  }\r\n  //  async burn(accountAddress) {\r\n  //    return await this._transact('burn', [], accountAddress)\r\n  //  }\r\n  //  async controllerBurn(accountAddress, account, amount) {\r\n  //    return await this._transact('controllerBurn', [account, amount], accountAddress)\r\n  //  }\r\n  //  async controllerMint(accountAddress, account, amount) {\r\n  //    return await this._transact('controllerMint', [account, amount], accountAddress)\r\n  //  }\r\n  async mint(accountAddress) {\r\n    return await this._transact('mint', [], accountAddress)\r\n  }\r\n  //  async setMintAmount(accountAddress, amount) {\r\n  //    return await this._transact('setMintAmount', [amount], accountAddress)\r\n  //  }\r\n  //  async setMintPeriod(accountAddress, period) {\r\n  //    return await this._transact('setMintPeriod', [period], accountAddress)\r\n  //  }\r\n  //  async transfer(accountAddress, to, amount) {\r\n  //    return await this._transact('transfer', [to, amount], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, amount) {\r\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { chainlinkOracleAbi } from '../abi/chainlinkOracleAbi.js'\r\n\r\nexport class ChainlinkOracle extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, chainlinkOracleAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  //  async decimals() {\r\n  //    const res = await this._call('decimals', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async feed() {\r\n  //    const res = await this._call('feed', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async feedDecimals() {\r\n  //    const res = await this._call('feedDecimals', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getPrice() {\r\n    const res = await this._call('getPrice', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { offChainOracleAbi } from '../abi/offChainOracleAbi.js'\r\n\r\nexport class OffChainOracle extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, offChainOracleAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  //  async delayAllowance() {\r\n  //    const res = await this._call('delayAllowance', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getPrice() {\r\n    const res = await this._call('getPrice', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async price() {\r\n  //    const res = await this._call('price', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async signer() {\r\n    const res = await this._call('signer', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async timestamp() {\r\n  //    const res = await this._call('timestamp', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n\r\n  // tx\r\n  //  async setDelayAllowance(accountAddress, delayAllowance_) {\r\n  //    return await this._transact('setDelayAllowance', [delayAllowance_], accountAddress)\r\n  //  }\r\n  //  async setSigner(accountAddress, signer_) {\r\n  //    return await this._transact('setSigner', [signer_], accountAddress)\r\n  //  }\r\n  //  async updatePrice(accountAddress, timestamp_, price_, v_, r_, s_) {\r\n  //    return await this._transact('updatePrice', [timestamp_, price_, v_, r_, s_], accountAddress)\r\n  //  }\r\n\r\n}","import { getOracleConfig } from '../config/oracle';\r\nimport { normalizeChainId } from './validate';\r\nimport { DeriEnv } from '../config/env';\r\nimport { oracleFactory, wrappedOracleFactory } from '../factory/oracle';\r\nimport { deriToNatural } from './convert';\r\nimport {\r\n  mapToSymbolInternal,\r\n  mapToBTokenInternal,\r\n  normalizeOptionSymbol,\r\n} from '../config/token';\r\nimport { PRESERVED_SYMBOLS } from '../config/version';\r\nimport { offChainOracleFactory } from '../contract/factory';\r\n\r\n\r\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms))\r\n\r\nexport const getPriceInfoForV1 = async(symbol) => {\r\n  const env = DeriEnv.get();\r\n  let method = 'get_signed_price'\r\n  let url\r\n  let baseUrl =\r\n    env === 'prod'\r\n      ? `https://oracle4.deri.finance/${method}`\r\n      : `https://oracle2.deri.finance/${method}`;\r\n  const addSymbolParam = (url, symbol) =>\r\n    `${url}?symbol=${symbol}`;\r\n  if (symbol) {\r\n    url = addSymbolParam(baseUrl, symbol);\r\n  } else {\r\n    url = baseUrl;\r\n  }\r\n  let retry = 3;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\r\n    if (res.ok) {\r\n      priceInfo = await res.json();\r\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\r\n        return priceInfo.data\r\n        //return deriToNatural(priceInfo.data.price).toString()\r\n      }\r\n    }\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`getPriceFromV1 exceed max retry(3): ${symbol} => ${JSON.stringify(priceInfo)}`);\r\n  }\r\n}\r\n\r\n\r\nexport const getOracleUrl = (symbol, type='futures') => {\r\n  const env = DeriEnv.get();\r\n  //if (/^[0-9]+$/.test(symbolId.toString())) {\r\n  let method = 'get_signed_price'\r\n  if (type === 'option') {\r\n    method = 'get_signed_volatility'\r\n  }\r\n  if (PRESERVED_SYMBOLS.includes(symbol)) {\r\n    method = 'get_price'\r\n    symbol = `${symbol}_v2_bsc`\r\n  }\r\n  let baseUrl =\r\n    env === 'prod'\r\n      ? `https://oracle4.deri.finance/${method}`\r\n      : `https://oracle2.deri.finance/${method}`;\r\n  const addSymbolParam = (url, symbol) =>\r\n    `${url}?symbol=${symbol}`;\r\n\r\n  if (symbol) {\r\n    return addSymbolParam(baseUrl, symbol);\r\n  } else {\r\n    return baseUrl;\r\n  }\r\n};\r\n\r\nexport const getPriceFromRest = async(symbol, type='futures') => {\r\n  const res = await getPriceInfo(symbol, type)\r\n  if (type === 'futures' && res.price) {\r\n    return PRESERVED_SYMBOLS.includes(symbol) ? res.price : deriToNatural(res.price).toString()\r\n  } else if (type === 'option' && res.volatility) {\r\n    return deriToNatural(res.volatility).toString()\r\n  } else {\r\n    throw new Error(`getPrice() invalid format: ${JSON.stringify(res)}`)\r\n  }\r\n}\r\n\r\n// from oracle rest api\r\nexport const getPriceInfo = async (symbol, type='futures') => {\r\n  symbol = mapToBTokenInternal(symbol)\r\n  let url = getOracleUrl(symbol, type);\r\n  let retry = 3;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    try {\r\n      res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\r\n      if (res.ok) {\r\n        priceInfo = await res.json();\r\n        if (priceInfo.status.toString() === '200' && priceInfo.data) {\r\n          return priceInfo.data\r\n        }\r\n      }\r\n    } catch(err) {\r\n      //console.log(err.toString())\r\n      retry -= 1;\r\n    }\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`fetch oracle info exceed max retry(3): ${symbol} => ${JSON.stringify(priceInfo)}`);\r\n  }\r\n};\r\n\r\nexport const getOracleInfosFromRest = async (symbolList, type = 'future') => {\r\n  let url = getOracleUrl(null, type);\r\n  let retry = 3;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    try {\r\n      res = await fetch(url, {\r\n        mode: \"cors\",\r\n        cache: \"no-cache\",\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(symbolList),\r\n      });\r\n      if (res.ok) {\r\n        priceInfo = await res.json();\r\n        if (priceInfo.status.toString() === \"200\" && priceInfo.data) {\r\n          return priceInfo.data;\r\n        }\r\n      }\r\n    } catch (err) {}\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`getOracleInfosFromRest exceed max retry(3): ${symbolList}`);\r\n  }\r\n};\r\n\r\n// cache\r\n// export const getOraclePriceFromCache = (function () {\r\n//   console.log('-- getOraclePriceFromCache will remove in next version ' )\r\n//   let cache = {};\r\n//   return {\r\n//     async get(chainId, symbol = '_', version = 'v2') {\r\n//       const key = `${chainId}_${symbol}_${version}`\r\n//       if (\r\n//         Object.keys(cache).includes(key) &&\r\n//         Math.floor(Date.now() / 1000) - cache[key].timestamp < 5\r\n//       ) {\r\n//         return cache[key].data;\r\n//       } else {\r\n//         const data = await getOraclePrice(chainId, symbol, version);\r\n//         cache[key] = {\r\n//           data,\r\n//           timestamp: Math.floor(Date.now() / 1000),\r\n//         };\r\n//         return cache[key].data;\r\n//       }\r\n//     },\r\n//   };\r\n// })();\r\n\r\nexport const getPriceInfos = async (symbolList) => {\r\n  let url = getOracleUrl();\r\n  let retry = 3;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    res = await fetch(url, {\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(symbolList),\r\n    });\r\n    if (res.ok) {\r\n      priceInfo = await res.json();\r\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\r\n        return priceInfo.data\r\n      }\r\n    }\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`fetch oracle infos exceed max retry(3): ${symbolList} ${JSON.stringify(priceInfo)}`);\r\n  }\r\n};\r\n\r\nexport const oraclePricesCache = (function(){\r\n  const cache = {}\r\n  const pending = {}\r\n  return {\r\n    async get(symbols=[]) {\r\n      const key = symbols.join('_')\r\n      if (\r\n        !Object.keys(cache).includes(key) ||\r\n        Math.floor(Date.now() / 1000) - cache[key].timestamp > 3\r\n      ) {\r\n        const timestamp = Math.floor(Date.now() / 1000);\r\n        // pending is exit\r\n        if (Object.keys(pending).includes(key)) {\r\n          let retry = 10;\r\n          while (retry > 0) {\r\n            await delay(390);\r\n            if (!Object.keys(pending).includes(key)) {\r\n              //console.log('hit pending with cache');\r\n              return cache[key].data;\r\n            }\r\n          }\r\n          if (retry === 0) {\r\n            //console.log('hit pending expired');\r\n            const data = await getPriceInfos(symbols);\r\n            cache[key] = {\r\n              data,\r\n              timestamp,\r\n            };\r\n            return cache[key].data;\r\n          }\r\n        } else {\r\n          pending[key] = true;\r\n          try {\r\n            //console.log('hit new');\r\n            const data = await getPriceInfos(symbols);\r\n            cache[key] = {\r\n              data,\r\n              timestamp,\r\n            };\r\n            return cache[key].data;\r\n          } catch (err) {\r\n          } finally {\r\n            delete pending[key];\r\n          }\r\n        }\r\n      } else {\r\n        //console.log('hit cache');\r\n        return cache[key].data;\r\n      }\r\n    }\r\n  }\r\n})()\r\n\r\nexport const RestOracle = (symbol) => {\r\n  return {\r\n    getPrice: async function () {\r\n      return getPriceFromRest(symbol)\r\n    }\r\n  }\r\n};\r\n\r\nexport const getOraclePrice = async (chainId, symbol, version='v2') => {\r\n  chainId = normalizeChainId(chainId);\r\n  symbol = mapToSymbolInternal(symbol)\r\n  const config = getOracleConfig(version, chainId, symbol);\r\n  if (config && config.address) {\r\n    const oracle = oracleFactory(\r\n      chainId,\r\n      config.address,\r\n      symbol,\r\n      config.decimal,\r\n    );\r\n    return await oracle.getPrice();\r\n  } else {\r\n    // for new added symbol and not updated to config yet\r\n    const priceInfo = await getPriceInfo(symbol, version);\r\n    return deriToNatural(priceInfo.price).toString();\r\n  }\r\n};\r\n\r\nexport const getOraclePrice2 = async (chainId, symbol, oracleAddress, version='v2_lite') => {\r\n  chainId = normalizeChainId(chainId);\r\n  symbol = mapToSymbolInternal(symbol)\r\n  if (oracleAddress !== '') {\r\n    const oracle = wrappedOracleFactory(chainId, oracleAddress)\r\n    return await oracle.getPrice();\r\n  } else {\r\n    // for new added symbol and not updated to config yet\r\n    const priceInfo = await getPriceInfo(symbol, version);\r\n    return deriToNatural(priceInfo.price).toString();\r\n  }\r\n};\r\n\r\n// cache\r\nexport const getOraclePriceFromCache2 = (function () {\r\n  let cache = {};\r\n  return {\r\n    async get(chainId, symbol = '_', oracleAddress, version = 'v2_lite') {\r\n      const key = `${chainId}_${symbol}_${oracleAddress}`\r\n      if (\r\n        Object.keys(cache).includes(key) &&\r\n        Math.floor(Date.now() / 1000) - cache[key].timestamp < 5\r\n      ) {\r\n        return cache[key].data;\r\n      } else {\r\n        const data = await getOraclePrice2(chainId, symbol, oracleAddress, version);\r\n        cache[key] = {\r\n          data,\r\n          timestamp: Math.floor(Date.now() / 1000),\r\n        };\r\n        return cache[key].data;\r\n      }\r\n    },\r\n  };\r\n})();\r\n\r\n// export const getOraclePriceForOption = async (chainId, symbol) => {\r\n//   return await getOraclePrice(chainId, normalizeOptionSymbol(symbol), 'option');\r\n// };\r\n\r\n// for viewer use\r\n// export const getOraclePricesForOption = async (chainId, symbols) => {\r\n//   const oracleSymbols = symbols\r\n//     .map((i) => normalizeOptionSymbol(i))\r\n//     .filter((value, index, self) => self.indexOf(value) === index);\r\n//   const oracleSymbolPrices = await Promise.all(\r\n//     oracleSymbols.reduce(\r\n//       (acc, i) => acc.concat([getOraclePrice(chainId, i, 'option')]),\r\n//       []\r\n//     )\r\n//   );\r\n//   return symbols.map((s) => {\r\n//     return toWei(oracleSymbolPrices[oracleSymbols.indexOf(normalizeOptionSymbol(s))]);\r\n//   });\r\n// };\r\n\r\n// // for tx use\r\n// export const getOracleVolatilityForOption = async (symbols) => {\r\n//   const volSymbols = getVolatilitySymbols(symbols)\r\n//   //volSymbols.map((s) => `VOL-${s.toUpperCase()}`)\r\n\r\n//   const volatilities = await Promise.all(\r\n//     volSymbols.reduce((acc, i) => acc.concat([getPriceInfo(i, 'option')]), [])\r\n//   );\r\n//   //return volatilities;\r\n//   return symbols.map((s) => {\r\n//     return volatilities[volSymbols.indexOf(`VOL-${normalizeOptionSymbol(s)}`)];\r\n//   });\r\n// };\r\n\r\n// for viewer use\r\nexport const getOracleVolatilitiesForOption = async (symbols) => {\r\n  const oracleSymbols = symbols\r\n    .map((i) => normalizeOptionSymbol(i))\r\n    .filter((value, index, self) => self.indexOf(value) === index);\r\n  const res = await getOracleInfosFromRest(oracleSymbols.map((os) => `VOL-${os}`), 'option')\r\n  const volatilities = oracleSymbols.map((s) => res[`VOL-${s}`])\r\n  return symbols.map((s) => {\r\n    return volatilities[oracleSymbols.indexOf(normalizeOptionSymbol(s))];\r\n  });\r\n};\r\n\r\n// check symbol is used offchain oracle\r\nexport const checkOffChainOracleSymbol = async (chainId, oracleAddress, symbol) => {\r\n  try {\r\n    await offChainOracleFactory(chainId, oracleAddress).signer()\r\n    return symbol\r\n  } catch (err) {\r\n  }\r\n  try {\r\n    await offChainOracleFactory(chainId, oracleAddress).signatory()\r\n    return symbol\r\n  } catch (err) {\r\n  }\r\n  return \"\"\r\n};","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { offChainVolatilityOracleAbi } from '../abi/offChainVolatilityOracleAbi.js'\r\n\r\nexport class OffChainVolatilityOracle extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, offChainVolatilityOracleAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  //  async delayAllowance() {\r\n  //    const res = await this._call('delayAllowance', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getVolatility() {\r\n    const res = await this._call('getVolatility', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async signer() {\r\n    const res = await this._call('signer', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async timestamp() {\r\n  //    const res = await this._call('timestamp', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async volatility() {\r\n  //    const res = await this._call('volatility', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n\r\n  // tx\r\n  //  async setDelayAllowance(accountAddress, delayAllowance_) {\r\n  //    return await this._transact('setDelayAllowance', [delayAllowance_], accountAddress)\r\n  //  }\r\n  //  async setSigner(accountAddress, signer_) {\r\n  //    return await this._transact('setSigner', [signer_], accountAddress)\r\n  //  }\r\n  //  async updateVolatility(accountAddress, timestamp_, volatility_, v_, r_, s_) {\r\n  //    return await this._transact('updateVolatility', [timestamp_, volatility_, v_, r_, s_], accountAddress)\r\n  //  }\r\n\r\n}","import { ContractBase } from \"../contract_base\";\r\nimport { symbolOracleOffChainAbi } from '../abis';\r\nimport { deriToNatural } from '../../utils';\r\n\r\nexport class SymbolOracleOffChain extends ContractBase {\r\n  constructor(chainId, address) {\r\n    super(chainId, address, symbolOracleOffChainAbi);\r\n  }\r\n  async getPrice() {\r\n    const res = await this._call('getPrice', []);\r\n    return deriToNatural(res);\r\n  }\r\n  async signer() {\r\n    await this._init();\r\n    const res = await this.contract.methods['signer']().call();\r\n    return res;\r\n  }\r\n  async signatory() {\r\n    await this._init();\r\n    const res = await this.contract.methods['signatory']().call();\r\n    return res;\r\n  }\r\n}","import { ContractBase } from \"../contract_base\";\r\nimport { wooOracleAbi } from '../abis';\r\nimport { deriToNatural } from \"../../utils\";\r\n\r\nexport class WooOracle extends ContractBase {\r\n  constructor(chainId, address, symbol, decimal='18') {\r\n    super(chainId, address, wooOracleAbi)\r\n    this.symbol = symbol\r\n    this.decimal = decimal\r\n  }\r\n\r\n  async getPrice() {\r\n    //console.log('hit woo oracle')\r\n    const res = await this._call('getPrice');\r\n    if (res) {\r\n      return deriToNatural(res).toString()\r\n    }\r\n  }\r\n}\r\n","import { isUsedRestOracle } from '../config/token';\r\nimport { RestOracle } from '../utils/oracle';\r\nimport { WrappedOracle } from '../contract/oracle/wrapped_oracle';\r\nimport { factory } from '../utils/factory';\r\nimport { SymbolOracleOffChain } from '../contract/oracle/symbol_oracle_off_chain';\r\nimport { WooOracle } from '../contract/oracle/woo_oracle';\r\n\r\nconst wooOracleAddresses = [\r\n  '0xC686B6336c0F949EAdFa5D61C4aAaE5Fe0687302',\r\n  '0x60Dda0aD29f033d36189bCe4C818fe9Ce3a95206',\r\n  '0xa356c0559e0DdFF9281bF8f061035E7097a84Fa4',\r\n]\r\n\r\nexport const oracleFactory = (function () {\r\n  const instanceMap = {};\r\n  return (chainId, address, symbol, decimal = '18') => {\r\n    const key = address;\r\n    if (Object.keys(instanceMap).includes(key)) {\r\n      return instanceMap[key];\r\n    } else {\r\n      if (isUsedRestOracle(symbol)) {\r\n        instanceMap[key] = RestOracle(symbol);\r\n      } else if (wooOracleAddresses.includes(address)) {\r\n        instanceMap[key] = wooOracleFactory(chainId, address, symbol, decimal);\r\n      } else if (['56', '137', '97', '80001'].includes(chainId)) {\r\n        instanceMap[key] = wrappedOracleFactory(chainId, address, symbol, decimal);\r\n      } else {\r\n        throw new Error(\r\n          `please setup oracle contract for the chain(${chainId})`\r\n        );\r\n      }\r\n      return instanceMap[key];\r\n    }\r\n  };\r\n})();\r\n\r\nexport const wrappedOracleFactory = factory(WrappedOracle);\r\nexport const wooOracleFactory = factory(WooOracle);\r\nexport const symbolOracleOffChainFactory = factory(SymbolOracleOffChain);\r\n","import {\r\n  getDBAddress,\r\n  getDBWormholeAddress,\r\n  getDBAirdropAddress,\r\n  DeriEnv,\r\n} from '../config';\r\nimport {\r\n  DatabaseAirdropContract,\r\n  DatabaseContract,\r\n  DatabaseWormholeContract,\r\n} from '../contract';\r\n\r\nexport const databaseFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBAddress(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseActivityFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return () => {\r\n    const address = DeriEnv.get() === 'prod' ? '0x75E04C816F206939a92AE7B23015ce3ef21aE571' : '0x7C1267188379f57d92e640E519151229E1eA5565'\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseDeriVoteFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return () => {\r\n    const address =\r\n      DeriEnv.get() === 'prod'\r\n        ? '0x9Ced1529C238bD36B3A05cECF979a30c0C40b286'\r\n        : '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseWormholeFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBWormholeAddress(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseWormholeContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseAirdropFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBAirdropAddress(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    //console.log('---airdrop key', key)\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseAirdropContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n","import { factory } from '../../utils/factory';\r\nimport { BToken } from '../../contract/b_token';\r\nimport { TERC20 } from '../../contract/TERC20';\r\n\r\nexport const bTokenFactory = factory(BToken);\r\nexport const TERC20Factory = factory(TERC20)","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from './contract_base'\r\nimport { deleteIndexedKey } from '../utils'\r\nimport { TERC20Abi } from './abis'\r\n\r\nexport class TERC20 extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, TERC20Abi)\r\n  }\r\n\r\n  // query\r\n  async allowance(owner, spender) {\r\n    const res = await this._call('allowance', [owner, spender])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async balanceOf(account) {\r\n    const res = await this._call('balanceOf', [account])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async decimals() {\r\n  //    const res = await this._call('decimals', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async name() {\r\n  //    const res = await this._call('name', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  async approve(accountAddress, spender, amount) {\r\n    return await this._transact('approve', [spender, amount], accountAddress)\r\n  }\r\n  // only for testnet\r\n  async mint(accountAddress) {\r\n    return await this._transact('mint', [], accountAddress)\r\n  }\r\n  //  async transfer(accountAddress, to, amount) {\r\n  //    return await this._transact('transfer', [to, amount], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, amount) {\r\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\r\n  //  }\r\n\r\n}","import { deriToNatural, bg } from '../../utils';\r\nimport { MAX_UINT256 } from '../../config';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DeriContract extends ContractBase {\r\n  constructor(chainId, contractAddress ) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n    //this.poolAddress = poolAddress;\r\n  }\r\n\r\n  async isUnlocked(accountAddress, poolAddress) {\r\n    let allowance = await this._call('allowance', [\r\n      accountAddress,\r\n      poolAddress,\r\n    ]);\r\n    return deriToNatural(allowance).gt(0);\r\n  }\r\n  async unlock(accountAddress, poolAddress) {\r\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\r\n    return await this._transact(\r\n      'approve',\r\n      [poolAddress, MAX_UINT256],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async decimals() {\r\n    return await this._call('decimals');\r\n  }\r\n\r\n  async _balanceOf(address) {\r\n    return await this._call('balanceOf', [address]);\r\n  }\r\n\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n}\r\n","import { numberToHex } from '../../utils'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"\",\"deployedBytecode\":\"0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80636b0509b1116100975780639a8a0592116100665780639a8a0592146101c85780639d76ea58146101d0578063b06faf62146101d8578063f77c4791146101e0576100f5565b80636b0509b114610185578063701422691461018d57806379a87b19146101a057806392eefe9b146101b5576100f5565b806351dfdb48116100d357806351dfdb4814610137578063560ebbd11461014a57806358c700a31461016a578063677528cb14610172576100f5565b806306fdde03146100fa57806320606b7014610118578063325564ec1461012d575b600080fd5b6101026101e8565b60405161010f9190610dbf565b60405180910390f35b610120610209565b60405161010f9190610d48565b61013561022d565b005b610135610145366004610bab565b6103a1565b61015d610158366004610ca1565b61066f565b60405161010f9190610d3d565b610120610684565b610135610180366004610bea565b61068a565b6101206107b1565b61013561019b366004610c15565b6107d5565b6101a8610acc565b60405161010f9190610cec565b6101356101c3366004610bab565b610adb565b610120610b77565b6101a8610b7d565b61015d610b8c565b6101a8610b9c565b6040518060400160405280600581526020016415985d5b1d60da1b81525081565b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6000546001600160a01b031633146102605760405162461bcd60e51b815260040161025790610f7f565b60405180910390fd5b600254600160a01b900460ff161561028a5760405162461bcd60e51b81526004016102579061106a565b6001541580159061029d57506001544210155b6102b95760405162461bcd60e51b815260040161025790610e12565b60035460025460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926102f19291169060001990600401610d24565b602060405180830381600087803b15801561030b57600080fd5b505af115801561031f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103439190610c81565b506002805460ff60a01b1916600160a01b17908190556001546040517fce3275b30d22151f82ee29ce7ea685563b66ff98e56afc576a94d8a88c676ec092610397929130916001600160a01b031690611153565b60405180910390a1565b6000546001600160a01b031633146103cb5760405162461bcd60e51b815260040161025790610f7f565b600254600160a01b900460ff16156103f55760405162461bcd60e51b81526004016102579061106a565b6000816001600160a01b03166358c700a36040518163ffffffff1660e01b815260040160206040518083038186803b15801561043057600080fd5b505afa158015610444573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104689190610cb9565b90506000826001600160a01b03166379a87b196040518163ffffffff1660e01b815260040160206040518083038186803b1580156104a557600080fd5b505afa1580156104b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104dd9190610bce565b905081158015906104ee5750814210155b61050a5760405162461bcd60e51b815260040161025790610ec5565b6001600160a01b03811630146105325760405162461bcd60e51b815260040161025790610fd5565b6003546040516370a0823160e01b81526001600160a01b03909116906323b872dd908590309084906370a082319061056e908590600401610cec565b60206040518083038186803b15801561058657600080fd5b505afa15801561059a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105be9190610cb9565b6040518463ffffffff1660e01b81526004016105dc93929190610d00565b602060405180830381600087803b1580156105f657600080fd5b505af115801561060a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062e9190610c81565b507f18ce2512842fddee8c808fb717780a66007d1da9a942dd32625813c82d53c34282843060405161066293929190611153565b60405180910390a1505050565b60056020526000908152604090205460ff1681565b60015481565b6000546001600160a01b031633146106b45760405162461bcd60e51b815260040161025790610f7f565b600254600160a01b900460ff16156106de5760405162461bcd60e51b81526004016102579061106a565b6001600160a01b0382166107045760405162461bcd60e51b8152600401610257906110d3565b60038110158015610717575061016d8111155b6107335760405162461bcd60e51b815260040161025790610e68565b61074081620151806111a0565b61074a9042611188565b6001819055600280546001600160a01b0319166001600160a01b0385811691909117918290556040517fe2a3b7ba8269be3ca7ba4627f844bb9abd978e9b05d290dc89d4b107f9e3dda7936107a59390923092911690611153565b60405180910390a15050565b7f019be9374ae64f46b6d65fb010e2366f7f5a3c1e1fd07b8842f388871d59fb1281565b600254600160a01b900460ff16156107ff5760405162461bcd60e51b81526004016102579061106a565b8442111561081f5760405162461bcd60e51b815260040161025790610f1b565b604080518082018252600581526415985d5b1d60da1b6020918201526004549151600092610894927f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866927f8d03f8e727eaf836840d08da04cd9ecc9773328dd38f4a6c7b84a9ec2b88b7c79291309101610d7d565b60405160208183030381529060405280519060200120905060007f019be9374ae64f46b6d65fb010e2366f7f5a3c1e1fd07b8842f388871d59fb12898989896040516020016108e7959493929190610d51565b60408051601f1981840301815291815281516020928301206000818152600590935291205490915060ff161561092f5760405162461bcd60e51b815260040161025790610f52565b6000818152600560209081526040808320805460ff191660011790555161095a918591859101610cd1565b6040516020818303038152906040528051906020012090506000600182888888604051600081526020016040526040516109979493929190610da1565b6020604051602081039080840390855afa1580156109b9573d6000803e3d6000fd5b5050604051601f1901516000549092506001600160a01b0380841691161490506109f55760405162461bcd60e51b81526004016102579061111c565b60035460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90610a27908e908e90600401610d24565b602060405180830381600087803b158015610a4157600080fd5b505af1158015610a55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a799190610c81565b508a6001600160a01b03167f45c072aa05b9853b5a993de7a28bc332ee01404a628cec1a23ce0f659f842ef18b8b8b604051610ab793929190611172565b60405180910390a25050505050505050505050565b6002546001600160a01b031681565b6000546001600160a01b03163314610b055760405162461bcd60e51b815260040161025790610f7f565b600254600160a01b900460ff1615610b2f5760405162461bcd60e51b81526004016102579061106a565b6001600160a01b038116610b555760405162461bcd60e51b815260040161025790611024565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60045481565b6003546001600160a01b031681565b600254600160a01b900460ff1681565b6000546001600160a01b031681565b600060208284031215610bbc578081fd5b8135610bc7816111d5565b9392505050565b600060208284031215610bdf578081fd5b8151610bc7816111d5565b60008060408385031215610bfc578081fd5b8235610c07816111d5565b946020939093013593505050565b600080600080600080600060e0888a031215610c2f578283fd5b8735610c3a816111d5565b9650602088013595506040880135945060608801359350608088013560ff81168114610c64578384fd5b9699959850939692959460a0840135945060c09093013592915050565b600060208284031215610c92578081fd5b81518015158114610bc7578182fd5b600060208284031215610cb2578081fd5b5035919050565b600060208284031215610cca578081fd5b5051919050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b90815260200190565b9485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b938452602084019290925260408301526001600160a01b0316606082015260800190565b93845260ff9290921660208401526040830152606082015260800190565b6000602080835283518082850152825b81811015610deb57858101830151858201604001528201610dcf565b81811115610dfc5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526036908201527f5661756c742e617070726f76654d6967726174696f6e3a206d6967726174696f6040820152751b951a5b595cdd185b5c081b9bdd081b595d081e595d60521b606082015260800190565b60208082526039908201527f4d696772617461626c652e707265706172654d6967726174696f6e3a2067726160408201527f636544617973206d75737420626520332d333635206461797300000000000000606082015260800190565b60208082526036908201527f5661756c742e657865637574654d6967726174696f6e3a206d6967726174696f6040820152751b951a5b595cdd185b5c081b9bdd081b595d081e595d60521b606082015260800190565b6020808252601e908201527f5661756c742e636c61696d3a207369676e617475726520657870697265640000604082015260600190565b6020808252601390820152725661756c742e636c61696d3a207265706c617960681b604082015260600190565b60208082526036908201527f4d696772617461626c652e5f636f6e74726f6c6c65725f3a2063616e206f6e6c6040820152753c9031b0b63632b210313c9031b7b73a3937b63632b960511b606082015260800190565b6020808252602f908201527f5661756c742e657865637574654d6967726174696f6e3a206e6f74206465737460408201526e696e6174696f6e206164647265737360881b606082015260800190565b60208082526026908201527f4d696772617461626c652e736574436f6e74726f6c6c65723a20746f2030206160408201526564647265737360d01b606082015260800190565b60208082526043908201527f4d696772617461626c652e5f76616c69645f3a2063616e6e6f742070726f636560408201527f65642c207468697320636f6e747261637420686173206265656e206d696772616060820152621d195960ea1b608082015260a00190565b60208082526029908201527f4d696772617461626c652e707265706172654d6967726174696f6e3a20746f2060408201526830206164647265737360b81b606082015260800190565b60208082526019908201527f5661756c742e636c61696d3a20756e617574686f72697a656400000000000000604082015260600190565b9283526001600160a01b03918216602084015216604082015260600190565b9283526020830191909152604082015260600190565b6000821982111561119b5761119b6111bf565b500190565b60008160001904831182151516156111ba576111ba6111bf565b500290565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146111ea57600080fd5b5056fea2646970667358221220309376e66ca21a54581da8ded1f86303ca0c78bd47254d1bdb5fb101169baa2364736f6c63430008010033\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\r\n/* eslint-enable */\r\n\r\nexport class MiningVaultPool extends ContractBase {\r\n  constructor(chainId, contractAddress ) {\r\n    super(chainId, contractAddress, CONTRACT_ABI['abi']);\r\n  }\r\n  async mintDToken(accountAddress, ...args) {\r\n    await this._init()\r\n    const gas = await this._estimatedGas(\r\n      'claim',\r\n      [accountAddress, ...args],\r\n      accountAddress\r\n    );\r\n    //console.log(gas);\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods['claim'](\r\n          accountAddress,\r\n          ...args\r\n        ).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n}\r\n","import { numberToHex } from '../../utils'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class MiningVaultRouter extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async mint(accountAddress, ...args) {\r\n    await this._init()\r\n    //console.log(accountAddress, args)\r\n    const gas = await this._estimatedGas(\r\n      'claim',\r\n      [accountAddress, ...args],\r\n      accountAddress\r\n    );\r\n    //console.log(gas);\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods['claim'](\r\n          accountAddress,\r\n          ...args\r\n        ).encodeABI(),\r\n      },\r\n    ];\r\n    //console.log('txRaw', txRaw)\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n}\r\n","import { getDeriConfig } from '../../config';\r\nimport { naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class WormholeContract extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI );\r\n  }\r\n  async freeze(accountAddress, amount, toChainId) {\r\n    const { wormholeAddress: toWormholeAddress } = getDeriConfig(\r\n      toChainId\r\n    );\r\n    return this._transact(\r\n      'freeze',\r\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async mintDeri(\r\n    accountAddress,\r\n    amount,\r\n    fromChainId,\r\n    fromWormhole,\r\n    fromNonce,\r\n    v,\r\n    r,\r\n    s\r\n  ) {\r\n    return this._transact(\r\n      'claim',\r\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\r\n      accountAddress\r\n    );\r\n  }\r\n}\r\n","import { DeriContract } from \"../../contract/deri/deri\";\r\nimport { MiningVaultPool } from \"../../contract/deri/mining_vault_pool\";\r\nimport { MiningVaultRouter } from \"../../contract/deri/mining_vault_router\";\r\nimport { WormholeContract } from \"../../contract/deri/wormhole\";\r\nimport { factory } from \"../../utils\"\r\n\r\n\r\nexport const deriFactory = factory(DeriContract)\r\n\r\nexport const wormholeFactory = factory(WormholeContract)\r\n\r\nexport const miningVaultRouterFactory = factory(MiningVaultRouter)\r\n\r\nexport const miningVaultPoolFactory = factory(MiningVaultPool)","import { deriToNatural, naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class SlpPool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [152, naturalToDeri(amount)];\r\n    return await this._transact('deposit', args, accountAddress);\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [152, naturalToDeri(amount)];\r\n    return await this._transact('withdraw', args, accountAddress);\r\n  }\r\n  async getLiquidity(accountAddress) {\r\n    const res = await this._call('userInfo', [152, accountAddress]);\r\n    if (res && res.amount) {\r\n      return deriToNatural(res.amount);\r\n    } else {\r\n      console.log('the amount is not exist ');\r\n      return '0';\r\n    }\r\n  }\r\n}\r\n","import { deriToNatural, naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class ClpPool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [naturalToDeri(amount)];\r\n    return await this._transact('addLiquidity', args, accountAddress);\r\n  }\r\n\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [naturalToDeri(amount)];\r\n    return await this._transact('removeLiquidity', args, accountAddress);\r\n  }\r\n\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\r\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\r\n    };\r\n  }\r\n\r\n  async getStateValues() {\r\n    const res = await this._call('getStateValues');\r\n    return {\r\n      liquidity: deriToNatural(res),\r\n    };\r\n  }\r\n\r\n  async getLiquidity() {\r\n    const res = await this._call('getStateValues');\r\n    if (res && res.liquidity) {\r\n      return deriToNatural(res.liquidity);\r\n    }\r\n    throw new Error(\r\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\r\n    );\r\n  }\r\n}\r\n","import { deriToNatural, naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class Clp2Pool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [391, naturalToDeri(amount)];\r\n    return await this._transact('deposit', args, accountAddress);\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [391, naturalToDeri(amount)];\r\n    return await this._transact('withdraw', args, accountAddress);\r\n  }\r\n  async getLiquidity(accountAddress) {\r\n    //console.log('hit clp2')\r\n    const res = await this._call('userInfo', [391, accountAddress]);\r\n    if (res && res.amount) {\r\n      return deriToNatural(res.amount);\r\n    } else {\r\n      console.log('the amount is not exist ');\r\n      return '0';\r\n    }\r\n  }\r\n}","import { SlpPool } from '../../contract/lp_pool/slp_pool'\r\nimport { ClpPool } from '../../contract/lp_pool/clp_pool'\r\nimport { Clp2Pool } from '../../contract/lp_pool/clp2_pool'\r\n\r\nexport const slpPoolFactory = (function () {\r\n  const slpPoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\r\n      return slpPoolInstanceMap[key];\r\n    }\r\n    const slpPool = new SlpPool(chainId, contractAddress);\r\n    slpPoolInstanceMap[key] = slpPool;\r\n    return slpPool;\r\n  };\r\n})();\r\n\r\nexport const clpPoolFactory = (function () {\r\n  const clpPoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\r\n      return clpPoolInstanceMap[key];\r\n    }\r\n    const clpPool = new ClpPool(chainId, contractAddress);\r\n    clpPoolInstanceMap[key] = clpPool;\r\n    return clpPool;\r\n  };\r\n})();\r\n\r\nexport const clp2PoolFactory = (function () {\r\n  const clp2PoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\r\n      return clp2PoolInstanceMap[key];\r\n    }\r\n    const clp2Pool = new Clp2Pool(chainId, contractAddress);\r\n    clp2PoolInstanceMap[key] = clp2Pool;\r\n    return clp2Pool;\r\n  };\r\n})();\r\n\r\n// export const lpPoolFactory = (function () {\r\n//   const lpPoolInstanceMap = {};\r\n//   return (chainId, contractAddress, isProvider = false) => {\r\n//     let key;\r\n//     if (isProvider) {\r\n//       key = `${chainId}.${contractAddress}.isProvider`;\r\n//     } else {\r\n//       key = `${chainId}.${contractAddress}`;\r\n//     }\r\n//     if (Object.keys(lpPoolInstanceMap).includes(key)) {\r\n//       return lpPoolInstanceMap[key];\r\n//     } else {\r\n//       let lpPool;\r\n//       const { type } = getLpContractAddress(chainId, contractAddress);\r\n//       console.log(`lp type: ${type}`);\r\n//       if (type === 'slp') {\r\n//         lpPool = new SlpPool(chainId, contractAddress, isProvider);\r\n//       } else if (type === 'clp') {\r\n//         lpPool = new ClpPool(chainId, contractAddress, isProvider);\r\n//       }\r\n//       lpPoolInstanceMap[key] = lpPool;\r\n//       return lpPool;\r\n//     }\r\n//   };\r\n// })();","import { factory } from '../../utils/factory';\r\nimport { BrokerManager } from '../../contract/activity/broker_manager';\r\nimport { PTokenAirdrop } from '../../contract/activity/ptoken_airdrop';\r\n\r\nexport const brokerManagerFactory = factory(BrokerManager);\r\nexport const pTokenAirdropFactory = factory(PTokenAirdrop);\r\n","import { hexToNumber, fromWei } from '../utils';\r\nimport { web3Factory } from '../factory';\r\nimport { normalizeAddress } from '../utils';\r\n\r\n/**\r\n * check ethereum client status for web browser\r\n * @function\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.isMetaMask - check if it is MetaMask client\r\n * @returns {boolean} response.[error] - error message when request failed\r\n */\r\nexport const hasWallet = () => {\r\n  if (window.ethereum && window.ethereum.isMetaMask) {\r\n    return { success: true, isMetaMask: true };\r\n  }\r\n  return {\r\n    success: false,\r\n    error:\r\n      'The browser is not support ethereum wallet, please install MetaMask to proceed.',\r\n  };\r\n};\r\n\r\n/**\r\n *  Connect wallet using MetaMask account\r\n * @async\r\n * @function\r\n * @param {function} [handleChainChanged] - Callback when chainId changed\r\n * @param {function} [handleAccountChanged]  - callback when account changed\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.chainId - chain Id\r\n * @returns {string} response.account - account address\r\n * @returns {boolean} response.[error] - error message when request failed\r\n */\r\nexport const connectWallet = async (\r\n  handleChainChanged,\r\n  handleAccountChanged\r\n) => {\r\n  if (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {\r\n    const accounts = await window.ethereum.request({\r\n      method: 'eth_requestAccounts',\r\n    });\r\n    const chainId = parseInt(\r\n      await window.ethereum.request({ method: 'net_version' })\r\n    );\r\n    // const chainId = hexToNumber(\r\n    //   await window.ethereum.request({ method: 'eth_chainId' })\r\n    // );\r\n    const account = Array.isArray(accounts) && accounts[0];\r\n\r\n    // await web3.eth.requestAccounts().then(console.log)\r\n    window.ethereum.on('accountsChanged', (accounts) => {\r\n      let account;\r\n      if (accounts.length > 0) {\r\n        account = accounts[0];\r\n      } else {\r\n        account = '';\r\n      }\r\n      if (typeof handleAccountChanged === 'function') {\r\n        handleAccountChanged(account);\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n      //console.log('accountChanged', account);\r\n    });\r\n    window.ethereum.on('chainChanged', (chainId) => {\r\n      let res = hexToNumber(chainId);\r\n      if (typeof handleChainChanged === 'function') {\r\n        handleChainChanged(res);\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n      //console.log('chainChanged', res);\r\n    });\r\n    return { success: true, account, chainId };\r\n  }\r\n  return {\r\n    success: false,\r\n    error: 'Cannot connect wallet, please install MetaMask.',\r\n  };\r\n};\r\n\r\nexport const getUserWalletBalance = async (chainId, walletAddress) => {\r\n  //const web3 = web3Factory(chainId);\r\n  walletAddress = normalizeAddress(walletAddress)\r\n  const web3 = await web3Factory.get(chainId);\r\n  const balance = await web3.eth.getBalance(walletAddress);\r\n  return fromWei(balance);\r\n};\r\n","import { databaseFactory, databaseAirdropFactory } from '../factory';\r\nimport {\r\n  toChecksumAddress,\r\n  getNetworkName,\r\n  deriToString,\r\n  deriToBool,\r\n  deriToNatural,\r\n  //getPoolContractAddress,\r\n} from '../utils';\r\nimport { getPoolV1Config } from '../config/pool_v1'\r\n// import { getLiquidityUsed } from \"./contractApi\";\r\n\r\nexport const getUserInfo = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.chainId`,\r\n      `${userAddress}.claim.amount`,\r\n      `${userAddress}.claim.deadline`,\r\n      `${userAddress}.claim.nonce`,\r\n      `${userAddress}.claim.v`,\r\n      `${userAddress}.claim.r`,\r\n      `${userAddress}.claim.s`,\r\n      `${userAddress}.claim.valid`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfo', err));\r\n  if (res) {\r\n    const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\r\n    return {\r\n      chainId: deriToString(chainId),\r\n      amount: deriToNatural(amount).toString(),\r\n      deadline: deriToString(deadline),\r\n      nonce: deriToString(nonce),\r\n      v: deriToString(v),\r\n      r,\r\n      s,\r\n      valid: deriToBool(valid),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getUserInfoHarvest = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.harvest.lp`,\r\n      `${userAddress}.claim.harvest.trade`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfoHarvest', err));\r\n  if (res) {\r\n    const [harvestLp, harvestTrade] = res;\r\n    return {\r\n      lp: deriToNatural(harvestLp).toString(),\r\n      trade: deriToNatural(harvestTrade).toString(),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getUserInfoTotal = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([`${userAddress}.claim.total`])\r\n    .catch((err) => console.log('getUserInfoTotal', err));\r\n  if (res) {\r\n    const [total] = res;\r\n    return {\r\n      total: deriToNatural(total).toString(),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get user claim info from database\r\n * @async\r\n * @method\r\n * @param {string} userAddress - account address\r\n * @returns {Object} response\r\n * @returns {string} resposne.chainId\r\n * @returns {BigNumber} response.amount\r\n * @returns {string} response.deadline\r\n * @returns {string} response.nonce\r\n * @returns {string} response.v\r\n * @returns {string} response.r\r\n * @returns {string} response.s\r\n * @returns {bool} response.valid\r\n * @returns {BigNumber} response.lp\r\n * @returns {BigNumber} response.trade\r\n * @returns {string} response.total\r\n */\r\nexport const getUserInfoAll = async (userAddress) => {\r\n  const [userInfo, userInfoHarvest, userInfoTotal] = await Promise.all([\r\n    getUserInfo(userAddress),\r\n    getUserInfoHarvest(userAddress),\r\n    getUserInfoTotal(userAddress),\r\n  ]);\r\n  return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\r\n};\r\n\r\n/**\r\n * Get pool liquidity\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {symbol} response.symbol\r\n */\r\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    //const { symbol } = getPoolV1Config(chainId, poolAddress)\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        //symbol,\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n  return {\r\n    liquidity: ''\r\n  }\r\n};\r\n\r\nexport const getPoolLiquidityAll = async (pools) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  if (Array.isArray(pools)) {\r\n    const keys = pools.reduce((acc, pool) => {\r\n      if (pool.version === 'v2' && pool.bTokenId) {\r\n        return acc.concat([\r\n          `${pool.chainId}.${pool.pool}.liquidity${pool.bTokenId}`,\r\n        ]);\r\n      } else {\r\n        return acc.concat([`${pool.chainId}.${pool.pool}.liquidity`]);\r\n      }\r\n    }, []);\r\n    try {\r\n      const res = await db.getValues(keys);\r\n      if (res) {\r\n        return res.map((i) => deriToNatural(i));\r\n      }\r\n    } catch (err) {\r\n      console.log(err.toString());\r\n    }\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getPoolInfoApyAll = async (pools) => {\r\n  // use the dev database\r\n  const db = databaseFactory(true);\r\n  if (Array.isArray(pools)) {\r\n    const keys = pools.reduce((acc, pool) => {\r\n      const poolNetwork = getNetworkName(pool.chainId.toString());\r\n      if (pool.version === 'v2' && pool.bTokenId) {\r\n        return acc.concat([`${poolNetwork}.${pool.pool}.apy${pool.bTokenId}`]);\r\n      } else {\r\n        return acc.concat([`${poolNetwork}.${pool.pool}.apy`]);\r\n      }\r\n    }, []);\r\n    try {\r\n      console.log('keys', keys)\r\n      const res = await db.getValues(keys);\r\n      if (res) {\r\n        return res.map((i) => deriToNatural(i));\r\n      }\r\n    } catch (err) {\r\n      console.log(err.toString());\r\n    }\r\n    return [];\r\n  }\r\n};\r\n\r\n/**\r\n * Get pool apy\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Get apy of the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.apy2`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, apy2, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        apy2: deriToNatural(apy2).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Get apy of the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\n// export const getClpPoolInfoApy = async (chainId, poolAddress) => {\r\n//   const db = databaseFactory(true);\r\n//   try {\r\n//     const poolNetwork = getNetworkName(chainId);\r\n//     const res = await db\r\n//       .getValues([\r\n//         `${poolNetwork}.${poolAddress}.apy`,\r\n//         `${poolNetwork}.${poolAddress}.apy2`,\r\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\r\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\r\n//       ])\r\n//       .catch((err) => console.log('getPoolInfoApy', err));\r\n//     if (res) {\r\n//       const [apy, apy2, volume1h, volume24h] = res;\r\n//       return {\r\n//         apy: deriToNatural(apy).toString(),\r\n//         apy2: deriToNatural(apy2).toString(),\r\n//         volume1h: deriToNatural(volume1h).toString(),\r\n//         volume24h: deriToNatural(volume24h).toString(),\r\n//       };\r\n//     }\r\n//   } catch (err) {\r\n//     console.log(err);\r\n//   }\r\n// };\r\n\r\n/**\r\n * Get user info of the pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} userAddress\r\n * @returns {Object} response\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\r\n  const db = databaseFactory(true);\r\n  //const {poolAddress} = getPoolContractAddress(chainId, poolAddress);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getUserInfoInPool', err));\r\n    if (res) {\r\n      const [volume1h, volume24h] = res;\r\n      return {\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\r\n  const db = databaseAirdropFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.chainId`,\r\n      `${userAddress}.claim.amount`,\r\n      `${userAddress}.claim.deadline`,\r\n      `${userAddress}.claim.nonce`,\r\n      `${userAddress}.claim.v1`,\r\n      `${userAddress}.claim.r1`,\r\n      `${userAddress}.claim.s1`,\r\n      `${userAddress}.claim.v2`,\r\n      `${userAddress}.claim.r2`,\r\n      `${userAddress}.claim.s2`,\r\n      `${userAddress}.claim.valid`,\r\n      // `${userAddress}.claim.harvest.lp`,\r\n      // `${userAddress}.claim.harvest.trade`,\r\n      // `${userAddress}.claim.total`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfoAllForAirDrop', err));\r\n  if (res) {\r\n    const [\r\n      chainId,\r\n      amount,\r\n      deadline,\r\n      nonce,\r\n      v1,\r\n      r1,\r\n      s1,\r\n      v2,\r\n      r2,\r\n      s2,\r\n      valid,\r\n      // harvestLp,\r\n      // harvestTrade,\r\n      // total,\r\n    ] = res;\r\n    return {\r\n      chainId: deriToString(chainId),\r\n      amount: deriToNatural(amount).toString(),\r\n      deadline: deriToString(deadline),\r\n      nonce: deriToString(nonce),\r\n      v1: deriToString(v1),\r\n      r1,\r\n      s1,\r\n      v2: deriToString(v2),\r\n      r2,\r\n      s2,\r\n      valid: deriToBool(valid),\r\n      // lp: deriToNatural(harvestLp),\r\n      // trade: deriToNatural(harvestTrade),\r\n      // total: deriToString(total),\r\n    };\r\n  }\r\n};\r\n","import { getDeriConfig } from '../config';\r\nimport {\r\n  deriFactory,\r\n  databaseWormholeFactory,\r\n} from '../factory';\r\n/**\r\n * Get user signature of the wormhole pool\r\n * @async\r\n * @method\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getUserWormholeSignature = async (accountAddress) => {\r\n  const databaseWormhole = databaseWormholeFactory(true);\r\n  return await databaseWormhole.signature(accountAddress);\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\r\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\r\n  const deri = deriFactory(chainId, deriAddress);\r\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\r\n  return await deri.isUnlocked(accountAddress, wormholeAddress);\r\n};\r\n\r\n/**\r\n * Get deri balance in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string}\r\n */\r\nexport const getDeriBalance = async (chainId, accountAddress) => {\r\n  const { deriAddress } = getDeriConfig(chainId);\r\n  const deri = deriFactory(chainId, deriAddress);\r\n  return (await deri.balanceOf(accountAddress)).toString();\r\n};","import {\r\n  miningVaultPoolFactory,\r\n  miningVaultRouterFactory,\r\n  wormholeFactory,\r\n  deriFactory,\r\n  databaseWormholeFactory,\r\n} from '../factory';\r\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from '../api/database_api';\r\nimport {\r\n  getDeriConfig,\r\n  getMiningVaultRouterConfig,\r\n  getMiningVaultConfig,\r\n} from '../config';\r\nimport { naturalToDeri } from '../../shared/utils';\r\n\r\n/**\r\n * Mint DToken in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintDToken = async (chainId, accountAddress) => {\r\n  let res;\r\n  const userInfo = await getUserInfoAll(accountAddress);\r\n  const amount = naturalToDeri(userInfo.amount);\r\n  const { deadline } = userInfo;\r\n  const { nonce } = userInfo;\r\n  const { v } = userInfo;\r\n  const { r } = userInfo;\r\n  const { s } = userInfo;\r\n  if (userInfo.valid) {\r\n    const miningVaultAddress = getMiningVaultConfig(chainId);\r\n    if (miningVaultAddress) {\r\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\r\n      //miningVault.setAccount(accountAddress);\r\n      try {\r\n        const tx = await miningVault.mintDToken(\r\n          accountAddress,\r\n          amount,\r\n          deadline,\r\n          nonce,\r\n          v,\r\n          r,\r\n          s\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the mining vault address in chain ${chainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * freeze Deri in current wormhole pool to the specified chain\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @param {string} toChainId\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\r\n  const { wormholeAddress } = getDeriConfig(chainId);\r\n  const wormhole = wormholeFactory(chainId, wormholeAddress);\r\n  //wormhole.setAccount(accountAddress);\r\n  let res;\r\n  try {\r\n    const tx = await wormhole.freeze(accountAddress, amount, toChainId);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint Deri in wormhole pool\r\n * @async\r\n * @method\r\n * @param {string} toChainId\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintDeri = async (toChainId, accountAddress) => {\r\n  let res;\r\n  const databaseWormhole = databaseWormholeFactory(true);\r\n  // const userInfo = await getUserInfoAll(accountAddress);\r\n  const userInfo = await databaseWormhole.signature(accountAddress);\r\n  // console.log(userInfo)\r\n  const { amount } = userInfo;\r\n  const { fromChainId } = userInfo;\r\n  const { fromWormhole } = userInfo;\r\n  const fromNonce = userInfo.nonce;\r\n  const { v } = userInfo;\r\n  const { r } = userInfo;\r\n  const { s } = userInfo;\r\n  if (userInfo.valid) {\r\n    const { wormholeAddress } = getDeriConfig(toChainId);\r\n    if (wormholeAddress) {\r\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\r\n      //wormhole.setAccount(accountAddress);\r\n      try {\r\n        const tx = await wormhole.mintDeri(\r\n          accountAddress,\r\n          amount,\r\n          fromChainId,\r\n          fromWormhole,\r\n          fromNonce,\r\n          v,\r\n          r,\r\n          s\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the wormhole address in chain ${fromChainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Unlock the account in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockDeri = async (chainId, accountAddress) => {\r\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\r\n  const deri = deriFactory(chainId, deriAddress);\r\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\r\n  let res;\r\n  try {\r\n    const tx = await deri.unlock(accountAddress, wormholeAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint Airdrop in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintAirdrop = async (chainId, accountAddress) => {\r\n  let res;\r\n  const userInfo = await getUserInfoAllForAirDrop(accountAddress);\r\n  const amount = naturalToDeri(userInfo.amount).toString();\r\n  const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\r\n  if (userInfo.valid) {\r\n    const miningVaultAddress = getMiningVaultRouterConfig(chainId);\r\n    // console.log(\"miningVaultAddress\", miningVaultAddress)\r\n    // console.log(\"userInfo\", userInfo)\r\n    if (miningVaultAddress) {\r\n      const miningVaultRouter = miningVaultRouterFactory(\r\n        chainId,\r\n        miningVaultAddress\r\n      );\r\n      try {\r\n        const tx = await miningVaultRouter.mint(\r\n          accountAddress,\r\n          amount,\r\n          deadline,\r\n          nonce,\r\n          v1,\r\n          r1,\r\n          s1,\r\n          v2,\r\n          r2,\r\n          s2\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the mining vault router address in chain ${chainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};","\r\n/* eslint-disable */\r\nexport const perpetualPoolAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[9]\", \"name\": \"parameters\", \"type\": \"uint256[9]\" }, { \"internalType\": \"address[4]\", \"name\": \"addresses\", \"type\": \"address[4]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"targetPool\", \"type\": \"address\" } ], \"name\": \"approvePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourcePool\", \"type\": \"address\" } ], \"name\": \"executePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"routerAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBToken\", \"outputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBTokenOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLengths\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"decimals0\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"minBToken0Ratio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbolOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const perpetualPoolRouterAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourceRouter\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"liquidateWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"liquidatorQualifier\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"qualifierAddress\", \"type\": \"address\" } ], \"name\": \"setLiquidatorQualifier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"tradeWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const lTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"name\": \"UpdateAsset\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getAsset\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getAssets\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"asset\", \"type\": \"tuple\" } ], \"name\": \"updateAsset\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const pTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numSymbols_\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargins\", \"outputs\": [ { \"internalType\": \"int256[]\", \"name\": \"\", \"type\": \"int256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getPositions\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numSymbols\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumSymbols\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"margins\", \"type\": \"int256[]\" } ], \"name\": \"updateMargins\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n/* eslint-disable */","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { deriToNatural, hexToNumber, bg } from '../../shared/utils'\r\nimport { perpetualPoolAbi } from './abis';\r\n\r\nexport class PerpetualPool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolAbi)\r\n\r\n    this.bTokenCount= 0\r\n    this.symbolCount= 0\r\n\r\n    this.lTokenAddress = ''\r\n    this.pTokenAddress = ''\r\n    this.routerAddress = ''\r\n    this.protocolFeeCollector = ''\r\n\r\n    this.protocolFeeAccrued = 0\r\n  }\r\n\r\n  async _update() {\r\n    await Promise.all([\r\n      this.getLengths(),\r\n      this.getAddresses(),\r\n      this.getParameters(),\r\n    ]);\r\n  }\r\n\r\n  async getLengths() {\r\n    try {\r\n      const res = await this._call('getLengths')\r\n      //console.log(res[0])\r\n      if (res[0] && res[1]) {\r\n        this.bTokenCount= parseInt(res[0])\r\n        this.symbolCount= parseInt(res[1])\r\n      }\r\n    } catch(err) {\r\n      throw new Error(`PerpetualPool#_getLength error: ${err}`)\r\n    }\r\n  }\r\n  async getAddresses() {\r\n    try {\r\n      const res = await this._call('getAddresses')\r\n      this.lTokenAddress = res.lTokenAddress\r\n      this.pTokenAddress = res.pTokenAddress\r\n      this.routerAddress = res.routerAddress\r\n      this.protocolFeeCollector = res.protocolFeeCollector\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#_getAddress error: ${err}`)\r\n    }\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters')\r\n    return {\r\n      decimals0: res.decimals0,\r\n      minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n  async getProtocolFeeAccrued() {\r\n    const res =  await this._call('getProtocolFeeAccrued')\r\n    this.protocolFeeAccrued = deriToNatural(res)\r\n  }\r\n  async getBToken(bTokenId) {\r\n    try {\r\n      //bTokenId = parseInt(bTokenId)\r\n      const res = await this._call('getBToken', [bTokenId]);\r\n      return {\r\n        bTokenAddress: res.bTokenAddress,\r\n        swapperAddress: res.bTokenAddress,\r\n        oracleAddress: res.oracleAddress,\r\n        decimals: res.decimals,\r\n        discount: deriToNatural(res.discount),\r\n        price: deriToNatural(res.price),\r\n        liquidity: deriToNatural(res.liquidity),\r\n        pnl: deriToNatural(res.pnl),\r\n        cumulativePnl: deriToNatural(res.cumulativePnl),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getBToken error: ${err}`);\r\n    }\r\n  }\r\n  async getBTokenOracle(bTokenId) {\r\n    //bTokenId = parseInt(bTokenId)\r\n    return await this._call('getBTokenOracle', [bTokenId])\r\n  }\r\n  async getSymbol(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    try {\r\n      const res =  await this._call('getSymbol', [symbolId])\r\n      return {\r\n        symbol: res.symbol,\r\n        oracleAddress: res.oracleAddress,\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        price: deriToNatural(res.price),\r\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\r\n    }\r\n  }\r\n  async getSymbolOracle(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    return await this._call('getSymbolOracle', [symbolId])\r\n  }\r\n\r\n  // trade history query methods\r\n  async _getTimeStamp(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  // get block number when last updated\r\n  async getLastUpdatedBlockNumber() {\r\n    await this._init()\r\n    const res = await this.web3.eth.getStorageAt(this.contractAddress, 0)\r\n    //console.log('res', hexToNumber(res))\r\n    return hexToNumber(res)\r\n  }\r\n\r\n  // get block number when last updated\r\n  async getLatestBlockNumber() {\r\n    await this._init()\r\n    const res = await this.web3.eth.getBlockNumber()\r\n    //console.log('res', res)\r\n    return res\r\n  }\r\n\r\n  _calculateFee(volume, price, multiplier, feeRatio) {\r\n    return bg(volume)\r\n      .abs()\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(feeRatio)\r\n      .toString();\r\n  }\r\n  async _getBlockInfo(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\r\n    await this._init()\r\n    let events = [];\r\n    //let toBlock = await this._getBlockInfo(\"latest\");\r\n    let amount\r\n    if (['56', '97','127', '80001'].includes(this.chainId)) {\r\n      amount = 999\r\n    } else {\r\n      amount = 4999\r\n    }\r\n    if ((fromBlock + amount) > to) {\r\n      amount = to - fromBlock\r\n    }\r\n    while (fromBlock <= to) {\r\n      let es = await this.contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock: fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if ((fromBlock + amount) > to) {\r\n        amount = to - fromBlock\r\n      }\r\n    }\r\n    return events;\r\n  }\r\n}","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { naturalToDeri } from '../../shared/utils'\r\nimport { MAX_INT256 } from '../../shared/config';\r\nimport { perpetualPoolRouterAbi} from './abis';\r\n\r\nexport class PerpetualPoolRouter extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\r\n    this.poolAddress = ''\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    this.poolAddress = await this._call('pool');\r\n    return this.poolAddress\r\n  }\r\n\r\n  // === transaction ===\r\n  async addLiquidity(accountAddress, bTokenId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [bTokenId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeLiquidity(accountAddress, bTokenId, amount, isMaximum) {\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeLiquidity',\r\n        [bTokenId, MAX_INT256],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeLiquidity',\r\n        [bTokenId, naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async addMargin(accountAddress, bTokenId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addMargin',\r\n      [bTokenId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMargin(accountAddress, bTokenId, amount, isMaximum) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    if (isMaximum) {\r\n      //console.log('->', MAX_INT256)\r\n      return await this._transact(\r\n        'removeMargin',\r\n        [bTokenId, MAX_INT256],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeMargin',\r\n        [bTokenId, naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async trade(accountAddress, symbolId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  // with prices\r\n  async addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addLiquidityWithPrices',\r\n      [bTokenId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeLiquidityWithPrices',\r\n        [bTokenId, MAX_INT256, priceInfos],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeLiquidityWithPrices',\r\n        [bTokenId, naturalToDeri(amount), priceInfos],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addMarginWithPrices',\r\n      [bTokenId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeMarginWithPrices',\r\n        [bTokenId, MAX_INT256, priceInfos],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeMarginWithPrices',\r\n        [bTokenId, naturalToDeri(amount), priceInfos],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async tradeWithPrices(accountAddress, symbolId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'tradeWithPrices',\r\n      [symbolId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  // async liquidate(acountAddress) {\r\n  //   if (!this.poolAddress) {\r\n  //     await this.pool()\r\n  //   }\r\n  //   return await this._transact(\r\n  //     'liquidate',\r\n  //     [accountAddress],\r\n  //     accountAddress\r\n  //   );\r\n  // }\r\n\r\n}","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { lTokenAbi } from './abis';\r\n\r\nconst processAsset = (res) => {\r\n  return {\r\n    liquidity: deriToNatural(res[0]),\r\n    pnl: deriToNatural(res[1]),\r\n    lastCumulativePnl: deriToNatural(res[2]),\r\n  }\r\n}\r\nexport class LToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, lTokenAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async getAsset(accountAddress, bTokenId) {\r\n    const res = await this._call('getAsset', [accountAddress, bTokenId]);\r\n    if (Array.isArray(res)) {\r\n      return processAsset(res)\r\n    } else {\r\n      console.log('address', this.contractAddress)\r\n      console.log('res', res)\r\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress} ${bTokenId})`)\r\n    }\r\n  }\r\n  async getAssets(accountAddress) {\r\n    const res = await this._call('getAssets', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map(i => processAsset(i))\r\n    } else {\r\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n\r\n  // === transaction ===\r\n}","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { pTokenAbi } from './abis';\r\n\r\nconst processPosition = (res) => {\r\n  return {\r\n    volume: deriToNatural(res.volume),\r\n    cost: deriToNatural(res.cost),\r\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\r\n  }\r\n}\r\nexport class PToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async getMargin(accountAddress, bTokenId) {\r\n    const res = await this._call('getMargin', [accountAddress, bTokenId]);\r\n    return deriToNatural(res)\r\n  }\r\n  async getMargins(accountAddress) {\r\n    const res = await this._call('getMargins', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map((i) => deriToNatural(i))\r\n    }\r\n  }\r\n  async getPosition(accountAddress, symbolId) {\r\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\r\n    if (Array.isArray(res)) {\r\n      return processPosition(res)\r\n    } else {\r\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n  async getPositions(accountAddress) {\r\n    const res = await this._call('getPositions', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map((i) => processPosition(i))\r\n    }\r\n  }\r\n\r\n  // === transaction ===\r\n}","import {\r\n  PerpetualPool,\r\n  PerpetualPoolRouter,\r\n  LToken,\r\n  PToken,\r\n} from './contract';\r\n\r\nconst factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\nexport const perpetualPoolFactory = factory(PerpetualPool)\r\n\r\nexport const perpetualPoolRouterFactory = factory(PerpetualPoolRouter)\r\n\r\nexport const lTokenFactory = factory(LToken)\r\n\r\nexport const pTokenFactory = factory(PToken)","import { normalizeAddress, normalizeChainId } from \"../utils\"\r\nimport { DeriEnv, getBrokerConfig, getPoolConfig2 } from '../config';\r\nimport { brokerManagerFactory, pTokenAirdropFactory } from \"../factory\"\r\nimport { pTokenFactory } from \"../../v2/factory\"\r\n\r\nconst AIRDROP_PTOKEN_ADDRESS_BSC = '0x94e7f76eb542657Bc8d2a9aA321D79F66F7C8FfA'\r\nconst AIRDROP_PTOKEN_ADDRESS_BSCTESTNET = '0x3b88a9B5896a49AEb23Ca2Ee9892d28d3B8De5f6'\r\n\r\n\r\nexport const getBroker = async(chainId, accountAddress) => {\r\n  chainId = normalizeChainId(chainId)\r\n  accountAddress = normalizeAddress(accountAddress)\r\n  const {address: brokerAddress} = getBrokerConfig('v2', chainId)\r\n  let res = ''\r\n  try {\r\n    const brokerManager = brokerManagerFactory(chainId, brokerAddress)\r\n    res = await brokerManager.getBroker(accountAddress)\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n  return res\r\n}\r\n\r\nexport const setBroker = async(chainId, accountAddress, brokerAddress) => {\r\n  chainId = normalizeChainId(chainId)\r\n  accountAddress = normalizeAddress(accountAddress)\r\n  brokerAddress = normalizeAddress(brokerAddress);\r\n  const {address: brokerManagerAddress} = getBrokerConfig('v2', chainId)\r\n  let res\r\n  try {\r\n    const brokerManager = brokerManagerFactory(chainId, brokerManagerAddress)\r\n    const tx = await brokerManager.setBroker(accountAddress, brokerAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res\r\n}\r\n\r\nconst getAirdropPTokenAddress = () => {\r\n  const env = DeriEnv.get()\r\n  if (env === 'prod') {\r\n    return AIRDROP_PTOKEN_ADDRESS_BSC\r\n  } else {\r\n    return AIRDROP_PTOKEN_ADDRESS_BSCTESTNET\r\n  }\r\n}\r\n\r\nexport const airdropPToken = async (chainId, accountAddress) => {\r\n  let res\r\n  let contractAddress = getAirdropPTokenAddress()\r\n  try {\r\n    const tx = await pTokenAirdropFactory(chainId, contractAddress).airdropPToken(accountAddress)\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res\r\n}\r\n\r\nexport const getAirdropPTokenWhitelistCount = async (chainId) => {\r\n  let res\r\n  let contractAddress = getAirdropPTokenAddress()\r\n  try {\r\n    res = await pTokenAirdropFactory(chainId, contractAddress).totalWhitelistCount()\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return res\r\n}\r\n\r\nexport const isUserPTokenExist = async (chainId, poolAddress, accountAddress) => {\r\n  let res = ''\r\n  try {\r\n    const {pToken:pTokenAddress} = getPoolConfig2(poolAddress)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress)\r\n    const result = await pToken.balanceOf(accountAddress)\r\n    if (result === '1') {\r\n      res = true\r\n    } else if (result === '0') {\r\n      res = false\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return res\r\n}","import { getLpConfig } from '../config';\r\nimport { bTokenFactory, slpPoolFactory } from '../factory/contract';\r\n\r\n/**\r\n * Get liquidity info of SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.bTokenBalance\r\n * @returns {string} response.shares\r\n */\r\nexport const getSlpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\r\n      bToken.balanceOf(poolAddress),\r\n      bToken.balanceOf(accountAddress),\r\n      slpPool.getLiquidity(accountAddress),\r\n    ]);\r\n\r\n    return {\r\n      poolLiquidity: liquidity.toString(),\r\n      bTokenBalance: bTokenBalance.toString(),\r\n      shares: shares.toString(),\r\n      shareValue: '1',\r\n    };\r\n  }\r\n  console.log('no SlpPool address, please check');\r\n  return {};\r\n};\r\n\r\n/**\r\n * Add liquidity to SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addSlpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    try {\r\n      const tx = await slpPool.addLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity to SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeSlpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    try {\r\n      const tx = await slpPool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\n/**\r\n * Unlock the account in the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get account balance in Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getSlpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import { bTokenFactory, clp2PoolFactory } from '../factory/contract';\r\nimport { getLpConfig } from '../config/pool_v1';\r\n\r\nexport const getClp2LiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\r\n      bToken.balanceOf(poolAddress),\r\n      bToken.balanceOf(accountAddress),\r\n      clp2Pool.getLiquidity(accountAddress),\r\n    ]);\r\n\r\n    return {\r\n      poolLiquidity: liquidity.toString(),\r\n      bTokenBalance: bTokenBalance.toString(),\r\n      shares: shares.toString(),\r\n      shareValue: '1',\r\n    };\r\n  }\r\n  console.log('no Clp2Pool address, please check');\r\n  return {};\r\n};\r\n\r\nexport const addClp2Liquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clp2Pool.addLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const removeClp2Liquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clp2Pool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const getClp2WalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import { bg, getDailyBlockNumber } from '../../shared/utils';\r\n\r\nexport const calculateLiquidityUsed = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  poolMarginRatio\r\n) => {\r\n  return bg(\r\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\r\n  ).abs();\r\n}\r\n\r\nexport const calculateFundingRate = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  fundingRateCoefficient\r\n) => {\r\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\r\n  fundingRateCoefficient;\r\n}\r\n\r\nexport const processFundingRate = (chainId, fundingRate) => {\r\n  const annualBlockCount = getDailyBlockNumber(chainId);\r\n  return bg(fundingRate).times(annualBlockCount);\r\n};\r\n","import { bg, max, min } from '../../shared/utils';\r\n\r\nexport * from './fundingRate';\r\n\r\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\r\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\r\nexport const calculateMaxRemovableShares = (\r\n  lTokenBalance,\r\n  lTokenTotalSupply,\r\n  liquidity,\r\n  tradersNetVolume,\r\n  tradersNetCost,\r\n  multiplier,\r\n  minPoolMarginRatio,\r\n  price\r\n) => {\r\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\r\n  const value = bg(tradersNetVolume).times(price).times(multiplier);\r\n  const removable = bg(liquidity)\r\n    .plus(tradersNetCost)\r\n    .minus(value)\r\n    .minus(value.abs().times(minPoolMarginRatio));\r\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\r\n  return shares;\r\n};\r\n\r\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\r\n  bg(volume).eq(0) ? bg(0) : cost.div(volume).div(multiplier);\r\n\r\nexport const calculateMarginHeld = (\r\n  price,\r\n  volume,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  return bg(volume).abs().times(price).times(multiplier).times(minInitialMarginRatio)\r\n};\r\n\r\nexport const calculatePnl = (price, volume, multiplier, cost) => {\r\n  return bg(volume).times(price).times(multiplier).minus(cost);\r\n}\r\n\r\nexport const calculateMaxWithdrawMargin = (\r\n  price,\r\n  volume,\r\n  margin,\r\n  cost,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  if (volume.eq(0)) {\r\n    return margin;\r\n  }\r\n  const held = calculateMarginHeld(\r\n    price,\r\n    volume,\r\n    multiplier,\r\n    minInitialMarginRatio\r\n  );\r\n  const pnl = calculatePnl(price, volume, multiplier, cost);\r\n  const withdrawable = max(bg(margin).plus(pnl).minus(held.times(1.02)), bg(0));\r\n  return withdrawable;\r\n};\r\n\r\nexport const calculateLiquidationPrice = (\r\n  volume,\r\n  margin,\r\n  cost,\r\n  multiplier,\r\n  minMaintenanceMarginRatio\r\n) => {\r\n  const tmp = bg(cost).minus(margin).div(volume).div(multiplier);\r\n  let res = bg(volume).gt(0)\r\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\r\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\r\n  res = max(res, bg(0));\r\n  return res;\r\n};\r\n\r\nexport const isOrderValid = (\r\n  price,\r\n  margin,\r\n  volume,\r\n  liquidity,\r\n  tradersNetVolume,\r\n  multiplier,\r\n  minPoolMarginRatio,\r\n  minInitialMarginRatio,\r\n  newVolume,\r\n  amount\r\n) => {\r\n  const minMargin = bg(volume)\r\n    .plus(newVolume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(minInitialMarginRatio);\r\n  const poolMaxVolume = bg(liquidity)\r\n    .div(minPoolMarginRatio)\r\n    .div(price)\r\n    .div(multiplier);\r\n  if (bg(margin).plus(amount).gte(minMargin)) {\r\n    if (\r\n      bg(newVolume).lte(poolMaxVolume.minus(tradersNetVolume)) &&\r\n      bg(newVolume).gte(poolMaxVolume.negated().minus(tradersNetVolume))\r\n    ) {\r\n      return { success: true };\r\n    }\r\n    return { success: false, message: 'Pool insufficient liquidity' };\r\n  }\r\n  return { success: false, message: 'Trader insufficient margin' };\r\n};\r\n","import {\r\n  validateArgs,\r\n  deriToNatural,\r\n  numberToHex,\r\n  bg,\r\n} from '../../shared/utils';\r\nimport {\r\n  calculateFundingRate,\r\n  calculateLiquidityUsed,\r\n  processFundingRate,\r\n} from '../calculation';\r\nimport { ContractBase } from '../../shared/contract/contract_base';\r\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle';\r\n\r\n/* eslint-disable */\r\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class PerpetualPool extends ContractBase {\r\n  constructor(chainId, contractAddress, isProvider) {\r\n    super(chainId, contractAddress, POOL_ABI, isProvider);\r\n    // this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\r\n  }\r\n\r\n  async symbol() {\r\n    return await this._call('symbol');\r\n  }\r\n\r\n  async getStateValues() {\r\n    let result;\r\n    const defaultValue = bg(0);\r\n    try {\r\n      const res = await this._call('getStateValues');\r\n      //console.log(\"getStateValues() raw:\", res)\r\n      result = {\r\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\r\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\r\n        liquidity: deriToNatural(res.liquidity),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        cumuFundingRate: defaultValue,\r\n        cumuFundingRateBlock: defaultValue,\r\n        liquidity: defaultValue,\r\n        tradersNetCost: defaultValue,\r\n        tradersNetVolume: defaultValue,\r\n      };\r\n      console.log(`getStateValues: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async getParameters() {\r\n    let result;\r\n    const defaultValue = bg(0);\r\n    try {\r\n      const res = await this._call('getParameters');\r\n      // console.log(\"getParameters() raw: \", res)\r\n      result = {\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\r\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n        priceDelayAllowance: bg(res.priceDelayAllowance),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        multiplier: defaultValue,\r\n        feeRatio: defaultValue,\r\n        minPoolMarginRatio: defaultValue,\r\n        minInitialMarginRatio: defaultValue,\r\n        minMaintenanceMarginRatio: defaultValue,\r\n        minAddLiquidity: defaultValue,\r\n        redemptionFeeRatio: defaultValue,\r\n        fundingRateCoefficient: defaultValue,\r\n        minLiquidationReward: defaultValue,\r\n        maxLiquidationReward: defaultValue,\r\n        liquidationCutRatio: defaultValue,\r\n        priceDelayAllowance: defaultValue,\r\n      };\r\n      console.log(`getParameters: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  _getTransactionReceipt(tx) {\r\n    const self = this;\r\n    return function _transactionReceipt(resolve, reject) {\r\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\r\n        if (error) {\r\n          reject(error);\r\n        } else if (receipt == null) {\r\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\r\n        } else if (receipt.status === false) {\r\n          receipt.errorMessage = 'Transaction failed';\r\n          reject(receipt);\r\n        } else {\r\n          resolve(receipt);\r\n        }\r\n      });\r\n    };\r\n  }\r\n  async _estimatedGas(method, args, accountAddress) {\r\n    // !this.accountAddress &&\r\n    //   console.log('please do setAccount(accountAddress) first');\r\n    const MAX_GAS_AMOUNT = 582731\r\n    let gas = 0;\r\n    for (let i = 0; i < 2; i++) {\r\n      try {\r\n        gas = await this.contract.methods[method](...args).estimateGas({\r\n          from: accountAddress,\r\n        });\r\n        gas = parseInt(gas * 1.25);\r\n        break;\r\n      } catch (err) {\r\n        //console.log(\"err\", err);\r\n      }\r\n    }\r\n    if (gas == 0) gas = MAX_GAS_AMOUNT;\r\n    if (gas > MAX_GAS_AMOUNT) gas = MAX_GAS_AMOUNT;\r\n    return gas;\r\n  }\r\n\r\n  // overwrite to use signed price to tx\r\n  async _transact(method, args = [], accountAddress) {\r\n    await this._init()\r\n    const symbol = await this.symbol()\r\n    const oracle = await getPriceInfoForV1(symbol);\r\n    let signed = [oracle.timestamp, oracle.price, parseInt(oracle.v).toString(), oracle.r, oracle.s];\r\n\r\n    const gas = await this._estimatedGas(method, [...args, ...signed], accountAddress)\r\n\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n\r\n  async getFundingRate() {\r\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\r\n    const symbol = await this.symbol()\r\n    price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\r\n    try {\r\n      const stateValues = await this.getStateValues();\r\n      const parameters = await this.getParameters();\r\n      const { tradersNetVolume, liquidity } = stateValues;\r\n      const {\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        minPoolMarginRatio,\r\n      } = parameters;\r\n      const args1 = [\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        liquidity,\r\n        fundingRateCoefficient,\r\n      ];\r\n      if (!validateArgs(...args1)) {\r\n        fundingRate = '0';\r\n        fundingRatePerBlock = '0';\r\n      } else {\r\n        fundingRatePerBlock = calculateFundingRate(...args1);\r\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\r\n      }\r\n      const args2 = [\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        liquidity,\r\n        minPoolMarginRatio,\r\n      ];\r\n      if (!validateArgs(...args2)) {\r\n        liquidityUsed = '0';\r\n      } else {\r\n        liquidityUsed = calculateLiquidityUsed(...args2);\r\n      }\r\n      return {\r\n        price,\r\n        multiplier: multiplier.toString(),\r\n        fundingRate: fundingRate,\r\n        fundingRatePerBlock: fundingRatePerBlock,\r\n        tradersNetVolume: tradersNetVolume.toString(),\r\n        liquidity: liquidity.toString(),\r\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n        liquidityUsed: liquidityUsed,\r\n        poolMarginRatio: minPoolMarginRatio.toString(),\r\n      };\r\n    } catch (err) {\r\n      console.log('PerpetualPool#gerFundingRate():', err);\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  async depositMargin(accountAddress, amount) {\r\n    let res;\r\n    try {\r\n      let tx = await this._transact(\r\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [amount],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      console.log('here');\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  }\r\n\r\n  // util methods, it's extract shared/utils now\r\n  async _getBlockInfo(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\r\n    await this._init()\r\n    let events = [];\r\n    //let toBlock = await this._getBlockInfo(\"latest\");\r\n    //toBlock = toBlock.number;\r\n    let amount;\r\n    if (['56', '137', '97', '80001'].includes(this.chainId)) {\r\n      amount = 999;\r\n    } else {\r\n      amount = 4999;\r\n    }\r\n    if (fromBlock + amount > to) {\r\n      amount = to - fromBlock;\r\n    }\r\n    while (fromBlock <= to) {\r\n      //console.log('tick')\r\n      let es = await this.contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if (fromBlock + amount > to) {\r\n        amount = to - fromBlock;\r\n      }\r\n    }\r\n    return events;\r\n  }\r\n  async _getTimeStamp(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n  _calculateFee(volume, price, multiplier, feeRatio) {\r\n    return bg(volume)\r\n      .abs()\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(feeRatio)\r\n      .toString();\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { deriToNatural, bg } from '../../shared/utils';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class PTokenContract extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n    //this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async getPositionInfo(accountAddress) {\r\n    let result = {};\r\n    try {\r\n      const res = await this._call('getPosition(address)', [accountAddress]);\r\n      //console.log(\"getPositionInfo() raw:\", res)\r\n      result = {\r\n        volume: deriToNatural(res[0]),\r\n        cost: deriToNatural(res[1]),\r\n        lastCumuFundingRate: deriToNatural(res[2]),\r\n        margin: deriToNatural(res[3]),\r\n        lastUpdateTimestamp: bg(res[4]),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        volume: bg(0),\r\n        cost: bg(0),\r\n        lastCumuFundingRate: bg(0),\r\n        margin: bg(0),\r\n        lastUpdateTimestamp: bg(0),\r\n      };\r\n      //console.log(`getPositionInfo: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { deriToNatural } from '../../shared/utils';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class LTokenContract extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n    //this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async balance(accountAddress) {\r\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\r\n    //console.log(\"> lToken balance\", res.toString())\r\n    return res;\r\n  }\r\n\r\n  async balanceOf(accountAddress) {\r\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\r\n    //console.log(\"> lToken balance\", res.toString())\r\n    return res;\r\n  }\r\n\r\n  async totalSupply() {\r\n    const res = deriToNatural(await this._call('totalSupply'));\r\n    //console.log(\"> lToken totalSupply\", res.toString())\r\n    return res;\r\n  }\r\n}\r\n","import { PerpetualPool } from './contract/perpetual_pool';\r\n//import { BTokenContract } from './contract/bToken';\r\nimport { PTokenContract } from './contract/p_token';\r\nimport { LTokenContract } from './contract/l_token';\r\n\r\nexport const perpetualPoolFactory = (() => {\r\n  const perpetualPoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\r\n      return perpetualPoolInstanceMap[key];\r\n    }\r\n    const perpetualPool = new PerpetualPool(\r\n      chainId,\r\n      contractAddress,\r\n    );\r\n    // console.log(\"new PerpetualPoolContract\");\r\n    perpetualPoolInstanceMap[key] = perpetualPool;\r\n    return perpetualPool;\r\n  };\r\n})();\r\n\r\nexport const pTokenFactory = (function () {\r\n  const pTokenInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\r\n      return pTokenInstanceMap[key];\r\n    }\r\n    const pToken = new PTokenContract(\r\n      chainId,\r\n      contractAddress,\r\n    );\r\n    // console.log(\"new PTokenContract\")\r\n    pTokenInstanceMap[key] = pToken;\r\n    return pToken;\r\n  };\r\n})();\r\n\r\nexport const lTokenFactory = (function () {\r\n  const lTokenInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\r\n      return lTokenInstanceMap[key];\r\n    }\r\n    const lToken = new LTokenContract(\r\n      chainId,\r\n      contractAddress,\r\n    );\r\n    lTokenInstanceMap[key] = lToken;\r\n    return lToken;\r\n  };\r\n})();\r\n\r\n","import {\r\n  bTokenFactory,\r\n  clpPoolFactory,\r\n} from '../factory/contract';\r\nimport { lTokenFactory } from '../../v1/factory';\r\nimport { bg } from '../utils';\r\nimport { getLpConfig } from '../config';\r\n\r\n/**\r\n * Get liquidity Info of the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.totalSupply\r\n * @returns {string} response.poolLiquidity\r\n * @returns {string} response.shares\r\n * @returns {string} response.shareValue\r\n * @returns {string} response.maxRemovableShares\r\n */\r\nexport const getClpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { lTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const clpPool = clpPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress);\r\n  //lToken.setAccount(accountAddress);\r\n\r\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n  ]);\r\n  const { liquidity } = await clpPool.getStateValues();\r\n  //console.log(liquidity);\r\n\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: (lTokenTotalSupply.eq(0)\r\n      ? bg(0)\r\n      : liquidity.div(lTokenTotalSupply)\r\n    ).toString(),\r\n    maxRemovableShares: lTokenBalance.toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Add liquidity to the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addClpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clpPool = clpPoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clpPool.addLiquidity(accountAddress, amount);\r\n      console.log(tx, typeof tx);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity of the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeClpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clpPool = clpPoolFactory(chainId, poolAddress);\r\n    try {\r\n      const tx = await clpPool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isClpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\n/**\r\n * Unlock the account in the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockClp = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get account balance in Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getClpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import {\r\n  getSlpLiquidityInfo,\r\n  getSlpWalletBalance,\r\n  isSlpUnlocked,\r\n} from './slp_pool_api';\r\nimport {\r\n  getClp2LiquidityInfo,\r\n  getClp2WalletBalance,\r\n  isClp2Unlocked,\r\n} from './clp2_pool_api';\r\nimport {\r\n  getClpLiquidityInfo,\r\n  getClpWalletBalance,\r\n  isClpUnlocked,\r\n} from './clp_pool_api';\r\nimport { getLpConfig } from '../config'\r\n\r\n/**\r\n * Get liquidity info of LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.bTokenBalance\r\n * @returns {string} response.shares\r\n */\r\nexport const getLpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`getLpLiquidityInfo(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Check account is unlocked in the lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await isClpUnlocked(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`isLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Get account balance in lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getLpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await getClpWalletBalance(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`getLpWalletBalance(): invalid lp type ${type}`);\r\n  }\r\n};\r\n","import { getLpConfig } from '../config';\r\nimport { unlockSlp, addSlpLiquidity, removeSlpLiquidity } from './slp_pool_api';\r\nimport { unlockClp, addClpLiquidity, removeClpLiquidity } from './clp_pool_api';\r\nimport {\r\n  unlockClp2,\r\n  addClp2Liquidity,\r\n  removeClp2Liquidity,\r\n} from './clp2_pool_api';\r\n\r\n/**\r\n * Unlock the account in the lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await unlockSlp(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await unlockClp(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await unlockClp2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`unlockLp(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Add liquidity to LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addLpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (type === 'clp') {\r\n    return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (type === 'clp2') {\r\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    console.log(`addLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Remove liquidity to LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeLpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await removeSlpLiquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else if (type === 'clp') {\r\n    return await removeClpLiquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else if (type === 'clp2') {\r\n    return await removeClp2Liquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else {\r\n    console.log(`removeLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n","import { TERC20Factory } from \"..\"\r\nimport { catchTxApiError, normalizeChainId } from \"../utils\"\r\n\r\nexport const mintTERC20 = async (chainId, bTokenAddress, accountAddress) => {\r\n  const args = [chainId, bTokenAddress, accountAddress];\r\n  return catchTxApiError(async (chainId, bTokenAddress, accountAddress) => {\r\n    chainId = normalizeChainId(chainId);\r\n    const testERC20 = TERC20Factory(chainId, bTokenAddress);\r\n    // send tx\r\n    return await testERC20.mint(accountAddress);\r\n  }, args);\r\n};","import { DeriEnv } from \"../shared/config/env\";\r\nimport { normalizeChainId } from \"../shared/utils/validate\";\r\n\r\nexport const openPoolChainIds = () => {\r\n  const configs = {\r\n    prod: ['56'],\r\n    dev: ['97'],\r\n    testnet: ['97'],\r\n  }\r\n  const env = DeriEnv.get()\r\n  if (Array.isArray(configs[env])) {\r\n    return configs[env]\r\n  } else {\r\n    throw new Error(`-- invalid env for openPoolChainIds: ${env}`)\r\n  }\r\n};\r\n\r\nexport const getPoolV2LiteManagerConfig = (chainId) => {\r\n  chainId = normalizeChainId(chainId)\r\n  const configs = {\r\n    prod: [\r\n      {\r\n        chainId: \"56\",\r\n        address: \"0x5e3318aeaa226dc11571f19b96240d88b64702dc\",\r\n        initialBlock: \"10133599\",\r\n      },\r\n    ],\r\n    dev: [\r\n      {\r\n        chainId: \"97\",\r\n        address: \"0x7A55ed377361802fad1Ae3d944cDbAA3c7694757\",\r\n        initialBlock: \"11034400\",\r\n      },\r\n    ],\r\n    testnet: [\r\n      {\r\n        chainId: \"97\",\r\n        address: \"0x7A55ed377361802fad1Ae3d944cDbAA3c7694757\",\r\n        initialBlock: \"11034400\",\r\n      },\r\n    ],\r\n  };\r\n  const env = DeriEnv.get();\r\n  const res = configs[env].find((c) => c.chainId === chainId);\r\n  if (res && res.address) {\r\n    return res\r\n  } else {\r\n    throw new Error(`-- getPoolV2LiteManagerConfig: cannot find config with env(${env}) and chainId(${chainId})`)\r\n  }\r\n};\r\n\r\nexport const getOracleFactoryChainlinkConfig = (chainId) => {\r\n  chainId = normalizeChainId(chainId)\r\n  const configs = {\r\n    prod: [\r\n      {\r\n        chainId: '56',\r\n        address: '0x5052fa10d68F4146B66bc15fd8cCb1674B482026',\r\n        initialBlock: '11017943',\r\n      },\r\n    ],\r\n    dev: [\r\n      {\r\n        chainId: '97',\r\n        address: '0xFD1f981375f95e971E8fC0756f4daAF5784e5376',\r\n        initialBlock: '12440610',\r\n      },\r\n    ],\r\n  };\r\n  const env = DeriEnv.get();\r\n  const res = configs[env].find((c) => c.chainId === chainId);\r\n  if (res && res.address) {\r\n    return res\r\n  } else {\r\n    throw new Error(`-- getOracleFactoryChainlinkConfig: cannot find config with env(${env}) and chainId(${chainId})`)\r\n  }\r\n};\r\n\r\n\r\nexport const expandPoolConfigV2LiteOpen = (config) => {\r\n  const pools = config.pools;\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.symbols.length; i++) {\r\n        const symbol = pool.symbols[i];\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: symbol.symbol,\r\n          symbolId: symbol.symbolId,\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          offchainSymbols: pool.offchainSymbols,\r\n          unit: symbol.unit,\r\n          version: 'v2_lite_open',\r\n          isOpen: true,\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};","export const perpetualPoolLiteAbi = [{\"inputs\":[{\"internalType\":\"uint256[7]\",\"name\":\"parameters\",\"type\":\"uint256[7]\"},{\"internalType\":\"address[5]\",\"name\":\"addresses\",\"type\":\"address[5]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"addSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidatorQualifierAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolFeeCollector\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"minPoolMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minInitialMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"maxLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"liquidationCutRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"protocolFeeCollectRatio\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeAccrued\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getSymbol\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"multiplier\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"feeRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"fundingRateCoefficient\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cumulativeFundingRate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"internalType\":\"struct IPerpetualPoolLite.SymbolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"setSymbolParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n\r\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n\r\nexport const perpetualPoolLiteManagerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolTemplate_\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector_\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"protocolFeeCutRatio_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"creator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"CreatePool\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pairedTokenAddress\", \"type\": \"address\" } ], \"name\": \"createPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getNumPools\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"poolTemplate\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"name\": \"pools\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCollector\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCutRatio\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\r\n\r\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\r\n\r\nexport const chainlinkFeedAbi = [ {\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}, {\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","// this file is generated by script, don't modify it !!!\r\nexport const oracleFactoryChainlinkAbi = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"}],\"name\":\"AddFeed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"CreateOracle\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"symbols\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"feeds\",\"type\":\"address[]\"}],\"name\":\"addFeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","// this file is generated by script, don't modify it !!!\r\nexport const oracleFactoryOffChainAbi = [\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"string\",\r\n        \"name\": \"symbol\",\r\n        \"type\": \"string\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"signer\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"delayAllowance\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"oracle\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"CreateOracleOffChain\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"string\",\r\n        \"name\": \"symbol\",\r\n        \"type\": \"string\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"signer\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"delayAllowance\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"oracle\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"CreateVolatilityOracleOffChain\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" },\r\n      { \"internalType\": \"address\", \"name\": \"signer\", \"type\": \"address\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"delayAllowance\", \"type\": \"uint256\" }\r\n    ],\r\n    \"name\": \"createOracle\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" },\r\n      { \"internalType\": \"address\", \"name\": \"signer\", \"type\": \"address\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"delayAllowance\", \"type\": \"uint256\" }\r\n    ],\r\n    \"name\": \"createVolatilityOracle\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }\r\n    ],\r\n    \"name\": \"getOracle\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }\r\n    ],\r\n    \"name\": \"getVolatilityOracle\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  }\r\n]\r\n\r\n","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { pTokenLiteAbi } from './abis';\r\n\r\nconst processPosition = (res) => {\r\n  return {\r\n    volume: deriToNatural(res.volume),\r\n    cost: deriToNatural(res.cost),\r\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\r\n  }\r\n}\r\nexport class PTokenLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenLiteAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async ownerOf(tokenId) {\r\n    return await this._call('ownerOf', [tokenId]);\r\n  }\r\n  async getMargin(accountAddress) {\r\n    const res = await this._call('getMargin', [accountAddress]);\r\n    return deriToNatural(res)\r\n  }\r\n  async getPosition(accountAddress, symbolId) {\r\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\r\n    if (Array.isArray(res)) {\r\n      return processPosition(res)\r\n    } else {\r\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n  async getActiveSymbolIds() {\r\n    return await this._call('getActiveSymbolIds');\r\n  }\r\n  async isActiveSymbolId(symbolId) {\r\n    return await this._call('isActiveSymbolId', [symbolId]);\r\n  }\r\n  async isApprovedForAll(owner, operator) {\r\n    return await this._call('isApprovedForAll', [owner, operator]);\r\n  }\r\n  async getApproved(tokenId) {\r\n    return await this._call('getApproved', [tokenId]);\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    return await this._call('getNumPositionHolders', [symbolId]);\r\n  }\r\n\r\n  // === transaction ===\r\n}\r\n","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { perpetualPoolLiteManagerAbi } from './abis.js'\r\n\r\nexport class PerpetualPoolLiteManager extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolLiteManagerAbi)\r\n  }\r\n\r\n  // query\r\n  async getNumPools() {\r\n    const res = await this._call('getNumPools', [])\r\n    return res\r\n  }\r\n  async poolTemplate() {\r\n    const res = await this._call('poolTemplate', [])\r\n    return res\r\n  }\r\n  async pools(poolId) {\r\n    const res = await this._call('pools', [poolId])\r\n    return res\r\n  }\r\n  async protocolFeeCollector() {\r\n    const res = await this._call('protocolFeeCollector', [])\r\n    return res\r\n  }\r\n  async protocolFeeCutRatio() {\r\n    const res = await this._call('protocolFeeCutRatio', [])\r\n    return res\r\n  }\r\n\r\n  // tx\r\n  async createPool(accountAddress, parameters, bTokenAddress, pairedTokenAddress) {\r\n    return await this._transact('createPool', [parameters, bTokenAddress, pairedTokenAddress], accountAddress)\r\n  }\r\n\r\n}","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { perpetualPoolLiteViewerAbi } from './abis';\r\n\r\nexport class PerpetualPoolLiteViewer extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\r\n  }\r\n  async getOffChainOracleSymbols(poolAddress) {\r\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\r\n    //return res.filter((s) => s && s !== '');\r\n    return res\r\n  }\r\n}\r\n","import { factory } from '../shared/utils/factory'\r\nimport { OracleFactoryChainlinkAdapter, OracleFactoryOffChainAdapter } from './adapter'\r\nimport { ChainlinkFeed } from './contract/chainlink_feed'\r\nimport { OracleFactoryChainlink } from './contract/gen/OracleFactoryChainlink'\r\nimport { OracleFactoryOffChain } from './contract/gen/OracleFactoryOffChain'\r\nimport { PerpetualPoolLite } from './contract/perpetual_pool'\r\nimport { PerpetualPoolLiteManager } from './contract/perpetual_pool_lite_manager'\r\nimport { PerpetualPoolLiteViewer } from './contract/perpetual_pool_lite_viewer'\r\n\r\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite)\r\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)\r\nexport const perpetualPoolLiteManagerFactory = factory(PerpetualPoolLiteManager)\r\nexport const chainlinkFeedFactory = factory(ChainlinkFeed)\r\n\r\n\r\nexport const oracleFactoryChainlinkFactory = factory(OracleFactoryChainlinkAdapter(OracleFactoryChainlink))\r\nexport const oracleFactoryOffChainFactory = factory(OracleFactoryOffChainAdapter(OracleFactoryOffChain))","import {\r\n  bTokenFactory,\r\n  deriToNatural,\r\n  fetchJson,\r\n  getHttpBase,\r\n} from '../../shared';\r\nimport { ContractBase } from '../../shared/contract/contract_base';\r\nimport { normalizeSymbolUnit } from '../../shared/config/token';\r\nimport { perpetualPoolLiteAbi } from './abis';\r\nimport { PTokenLite } from './p_token';\r\n\r\nexport class PerpetualPoolLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\r\n  }\r\n\r\n  async init() {\r\n    await this._init();\r\n    if (!this.pTokenAddress|| !this.pToken ) {\r\n      await  this.updateAddresses()\r\n      // console.log(this.addresses, this.parameters)\r\n      //this.bToken = bTokenFactory(this.chainId, bTokenAddress);\r\n      //this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\r\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress);\r\n\r\n    }\r\n  }\r\n\r\n\r\n  async updateAddresses() {\r\n    if (!this.bTokenAddress || !this.pTokenAddress) {\r\n     const res = await this._call('getAddresses');\r\n    // update this state\r\n     this.bTokenAddress = res.bTokenAddress;\r\n     this.lTokenAddress= res.lTokenAddress;\r\n     this.pTokenAddress= res.pTokenAddress;\r\n    }\r\n  }\r\n\r\n  async controller() {\r\n    const res = await this._call('controller');\r\n    return res\r\n  }\r\n\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n  async getSymbol(symbolId) {\r\n    const res = await this._call('getSymbol', [symbolId]);\r\n    return {\r\n      symbol: res.symbol,\r\n      oracleAddress: res.oracleAddress,\r\n      multiplier: deriToNatural(res.multiplier),\r\n      feeRatio: deriToNatural(res.feeRatio),\r\n      fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n      price: deriToNatural(res.price),\r\n      cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n      tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n      tradersNetCost: deriToNatural(res.tradersNetCost),\r\n    };\r\n  }\r\n  async getSymbols() {\r\n    await this.updateAddresses()\r\n    if (!this.pToken) {\r\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress)\r\n    }\r\n    // update this state\r\n    this.symbolIds = await this.pToken.getActiveSymbolIds()\r\n    this.symbols = await Promise.all(\r\n      this.symbolIds.reduce((acc, i) => acc.concat([this.getSymbol(i)]), [])\r\n    );\r\n    return this.symbols\r\n  }\r\n  async getBTokenSymbol() {\r\n    await this.updateAddresses()\r\n    if (!this.bToken) {\r\n      this.bToken = bTokenFactory(this.chainId, this.bTokenAddress)\r\n    }\r\n    // update this state\r\n    this.bTokenSymbol = await this.bToken.symbol()\r\n    return this.bTokenSymbol\r\n  }\r\n  async getPoolExtraInfo() {\r\n    const url = `${getHttpBase()}/pool_extra_info/${this.contractAddress}`\r\n    const res = await fetchJson(url)\r\n    //console.log(res)\r\n    if (res.success) {\r\n      return res.data\r\n    } else {\r\n\r\n      console.log(`-- getInitialBlock(): ${url} => ${res.message}`)\r\n      return  {\r\n        block_number: '1000000000',\r\n        version: '',\r\n      }\r\n    }\r\n  }\r\n  async getConfig() {\r\n    const [bToken, symbols, extraInfo] = await Promise.all([\r\n      this.getBTokenSymbol(),\r\n      this.getSymbols(),\r\n      this.getPoolExtraInfo(),\r\n    ])\r\n    return {\r\n      pool: this.contractAddress,\r\n      pToken: this.pTokenAddress,\r\n      lToken: this.lTokenAddress,\r\n      bToken: this.bTokenAddress,\r\n      bTokenSymbol: bToken,\r\n      symbols: symbols.map((s, index) => ({\r\n        symbolId: this.symbolIds[index],\r\n        symbol: s.symbol,\r\n        unit: normalizeSymbolUnit(s.symbol),\r\n      })),\r\n      initialBlock:extraInfo.block_number,\r\n      type: 'perpetual',\r\n      version:extraInfo.version,\r\n      versionId: 'v2_lite',\r\n      chainId: this.chainId,\r\n    }\r\n  }\r\n\r\n  // tx\r\n  async addSymbol(accountAddress, parameters) {\r\n    return await this._transact('addSymbol', parameters, accountAddress)\r\n  }\r\n\r\n  async removeSymbol(accountAddress, symbolId) {\r\n    return await this._transact('removeSymbol', [symbolId], accountAddress)\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { chainlinkFeedAbi } from './abis';\r\n\r\nexport class ChainlinkFeed extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, chainlinkFeedAbi);\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('description');\r\n    return res.split('/').map((s) => s.trim()).join('')\r\n  }\r\n}\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { oracleFactoryChainlinkAbi } from '../abi/oracleFactoryChainlinkAbi.js'\r\n\r\nexport class OracleFactoryChainlink extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, oracleFactoryChainlinkAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async getFeed(symbol) {\r\n    const res = await this._call('getFeed', [symbol])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getOracle(symbol) {\r\n    const res = await this._call('getOracle', [symbol])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  async createOracle(accountAddress, symbol) {\r\n    return await this._transact('createOracle', [symbol], accountAddress)\r\n  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { oracleFactoryOffChainAbi } from '../abi/oracleFactoryOffChainAbi.js'\r\n\r\nexport class OracleFactoryOffChain extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, oracleFactoryOffChainAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async getOracle(symbol) {\r\n    const res = await this._call('getOracle', [symbol])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getVolatilityOracle(symbol) {\r\n    const res = await this._call('getVolatilityOracle', [symbol])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  async createOracle(accountAddress, symbol, signer, delayAllowance) {\r\n    return await this._transact('createOracle', [symbol, signer, delayAllowance], accountAddress)\r\n  }\r\n  async createVolatilityOracle(accountAddress, symbol, signer, delayAllowance) {\r\n    return await this._transact('createVolatilityOracle', [symbol, signer, delayAllowance], accountAddress)\r\n  }\r\n\r\n}","import { catchApiError } from \"../../shared/utils/api\"\r\nimport { DeriEnv } from \"../../shared/config/env\"\r\nimport { getJsonConfig } from \"../../shared/config/config\"\r\nimport { normalizeChainId, toChecksumAddress, validateObjectKeyExist } from \"../../shared/utils\"\r\nimport { poolProcessor, poolValidator } from \"../../shared/config/config_processor\"\r\nimport { fetchJson, getBlockInfo, getHttpBase, getPastEvents, getPoolViewerConfig } from \"../../shared\"\r\nimport { expandPoolConfigV2LiteOpen, getOracleFactoryChainlinkConfig, getPoolV2LiteManagerConfig, openPoolChainIds } from \"../config\"\r\nimport { oracleFactoryChainlinkFactory, perpetualPoolLiteFactory, perpetualPoolLiteManagerFactory, perpetualPoolLiteViewerFactory } from \"../factory\"\r\n\r\nexport const getPoolOpenConfigList = async (...args) => {\r\n  return catchApiError(\r\n    async () => {\r\n      let configs = [];\r\n      const chainIds = openPoolChainIds()\r\n      configs = await chainIds.reduce(async (acc, chainId) => {\r\n        //console.log('chainId', chainId)\r\n        const { address: poolManagerAddress } = getPoolV2LiteManagerConfig(\r\n          chainId\r\n        );\r\n        const poolManager = perpetualPoolLiteManagerFactory(\r\n          chainId,\r\n          poolManagerAddress\r\n        );\r\n        // get pool numbers\r\n        const poolNums = parseInt(await poolManager.getNumPools());\r\n        const numsArray = [...Array(poolNums).keys()];\r\n        // get pool addresses\r\n        const addresses = await Promise.all(\r\n          numsArray.reduce(\r\n            (acc, id) => acc.concat([poolManager.pools(id.toString())]),\r\n            []\r\n          )\r\n        );\r\n        // get pools config\r\n        const res = await Promise.all(\r\n          addresses.reduce(\r\n            (acc, address) =>\r\n              acc.concat([\r\n                perpetualPoolLiteFactory(chainId, address).getConfig(),\r\n              ]),\r\n            []\r\n          )\r\n        );\r\n        return acc.concat(res);\r\n      }, []);\r\n      return configs.sort((a,b) => parseInt(b.initialBlock) - parseInt(a.initialBlock));\r\n    },\r\n    args,\r\n    'getPoolOpenConfigList',\r\n    []\r\n  );\r\n};\r\n\r\nexport const getPoolOpenOracleList = async(...args) => {\r\n  return catchApiError(\r\n    async (chainId, accountAddress) => {\r\n    chainId = normalizeChainId(chainId)\r\n    const oracleFactoryConfig = getOracleFactoryChainlinkConfig(chainId);\r\n    const oracleFactory = oracleFactoryChainlinkFactory(\r\n      chainId,\r\n      oracleFactoryConfig.address\r\n    );\r\n    await oracleFactory._init()\r\n    let eventBlock, oracles= [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/oracle/${chainId}/${accountAddress}`\r\n    );\r\n    if (res && res.success) {\r\n      eventBlock = parseInt(res.data.eventBlock);\r\n      if (res.data.oracles && Array.isArray(res.data.oracles)) {\r\n        oracles = res.data.oracles;\r\n      }\r\n      if (eventBlock === 0) {\r\n        eventBlock = parseInt(oracleFactoryConfig.initialBlock);\r\n      }\r\n      const toBlock = await getBlockInfo(chainId, 'latest');\r\n      // fetch online\r\n      let events = await getPastEvents(\r\n        chainId,\r\n        oracleFactory.contract,\r\n        'CreateOracle',\r\n        {},\r\n        eventBlock,\r\n        toBlock.number\r\n      );\r\n      if (events.length > 0) {\r\n        for (let i = 0; i < events.length; i++) {\r\n          const event = events[i];\r\n          const info = event.returnValues;\r\n          oracles.push({\r\n            chainId,\r\n            symbol: info.symbol,\r\n            address: info.oracle,\r\n            blockNumber: event.blockNumber,\r\n          });\r\n        }\r\n        return oracles\r\n          .sort((a, b) => parseInt(b.blockNumber) - parseInt(a.blockNumber))\r\n          .reduce((acc, i) => {\r\n            return acc.find((a) => a.symbol === i.symbol) ? acc : [...acc, i];\r\n          }, []);\r\n      } else {\r\n        return oracles\r\n      }\r\n    } else {\r\n      return [];\r\n    }\r\n      //return getOracleConfigList('v2_lite_open', DeriEnv.get()).filter((o) => o.chainId === chainId);\r\n    },\r\n    args,\r\n    'getPoolOpenOracleInfos',\r\n    []\r\n  );\r\n};\r\n\r\nexport const getPoolController = async(chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  return catchApiError(\r\n    async (chainId, poolAddress) => {\r\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      return await perpetualPoolLite.controller();\r\n    },\r\n    [chainId, poolAddress],\r\n    'getPoolController',\r\n    ''\r\n  );\r\n}\r\nexport const isPoolController = async (chainId, poolAddress, controller) => {\r\n  chainId = normalizeChainId(chainId);\r\n  return catchApiError(\r\n    async (chainId, poolAddress, controller) => {\r\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      const poolController = await perpetualPoolLite.controller();\r\n      return (\r\n        toChecksumAddress(controller) === toChecksumAddress(poolController)\r\n      );\r\n    },\r\n    [chainId, poolAddress, controller],\r\n    'isPoolController',\r\n    false\r\n  );\r\n};\r\n\r\nexport const getExpandedPoolOpenConfigList = async () => {\r\n  const env = DeriEnv.get()\r\n  const version = 'v2_lite_open'\r\n  let config = getJsonConfig(version, env);\r\n\r\n  config.pools =  await getPoolOpenConfigList()\r\n  const pools = config.pools\r\n  if (pools && Array.isArray(pools)) {\r\n    for (let i = 0; i < pools.length; i++) {\r\n      poolProcessor[version](pools[i])\r\n      poolValidator[version](pools[i])\r\n    }\r\n  }\r\n  validateObjectKeyExist(['oracle'], config, 'oracle');\r\n  return expandPoolConfigV2LiteOpen(config);\r\n}\r\n\r\nexport const getPoolAllSymbolNames = async (chainId, poolAddress) => {\r\n  return catchApiError(\r\n    async (chainId, poolAddress) => {\r\n      const viewerAddress = getPoolViewerConfig(chainId, 'v2_lite');\r\n      const poolViewer = perpetualPoolLiteViewerFactory(chainId, viewerAddress);\r\n      return await poolViewer.getOffChainOracleSymbols(poolAddress);\r\n    },\r\n    [chainId.toString(), poolAddress],\r\n    'getPoolAllSymbolNames ',\r\n    []\r\n  );\r\n};\r\n\r\nexport const getPoolAcitveSymbolIds = async (...args) => {\r\n  return catchApiError(\r\n    async (chainId, poolAddress) => {\r\n      chainId = chainId.toString()\r\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      await perpetualPoolLite.init()\r\n      return await perpetualPoolLite.pToken.getActiveSymbolIds()\r\n    },\r\n    args,\r\n    'getPoolActiveSymbolIds',\r\n    []\r\n  );\r\n};\r\n\r\n\r\n// v2lite open config list cache\r\nexport const openConfigListCache = (() => {\r\n  let cache = {\r\n    data: [],\r\n    timestamp: 0,\r\n  };\r\n  return {\r\n    async update() {\r\n      const oldData = cache.data\r\n      try {\r\n        if (Date.now()/1000 - cache.timestamp >= 10) {\r\n        //if (Date.now()/1000 - cache.timestamp > 60) {\r\n          cache.data = await getPoolOpenConfigList()\r\n          cache.timestamp = Date.now()/1000\r\n          //res = 'v2 lite open config list is updated'\r\n        }\r\n      } catch(err) {\r\n        console.log(err)\r\n        cache.data = oldData\r\n        //res = `v2 lite open config list updating with error: ${err}`\r\n      }\r\n      // res && console.log(res)\r\n      return cache.data\r\n    },\r\n    updatedAt() {\r\n      return cache.timestamp\r\n    },\r\n    get() {\r\n      return cache.data\r\n    }\r\n  }\r\n})()\r\n","import { getJsonConfig } from './config';\r\nimport { DeriEnv } from './env';\r\nimport { getPoolV1ConfigList } from './pool_v1';\r\nimport { LITE_AND_OPTION_VERSIONS, VERSIONS } from './version';\r\n// import { validateObjectKeyExist } from '../utils';\r\nimport { poolProcessor, poolValidator } from './config_processor';\r\nimport { openConfigListCache } from '../../v2_lite_open/api/query_api';\r\n\r\nconst expandPoolConfigV2 = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.bTokens.length; i++) {\r\n        const bToken = pool.bTokens[i];\r\n        for (let i = 0; i < pool.symbols.length; i++) {\r\n          const symbol = pool.symbols[i];\r\n          result.push({\r\n            pool: pool.pool,\r\n            pToken: pool.pToken,\r\n            lToken: pool.lToken,\r\n            router: pool.router,\r\n            initialBlock: pool.initialBlock,\r\n            chainId: pool.chainId,\r\n            bToken: bToken.bToken,\r\n            bTokenId: bToken.bTokenId,\r\n            bTokenSymbol: bToken.bTokenSymbol,\r\n            symbol: symbol.symbol,\r\n            symbolId: symbol.symbolId,\r\n            unit: symbol.unit,\r\n            type: 'perpetual',\r\n            version: 'v2',\r\n            versionId: pool.versionId,\r\n            isOption: false,\r\n          });\r\n        }\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nconst expandPoolConfigV2Lite = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.symbols.length; i++) {\r\n        const symbol = pool.symbols[i];\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: symbol.symbol,\r\n          symbolId: symbol.symbolId,\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          offchainSymbols: pool.offchainSymbols,\r\n          unit: symbol.unit,\r\n          type: 'perpetual',\r\n          version: 'v2_lite',\r\n          versionId: pool.versionId,\r\n          isOption: false,\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nconst expandPoolConfigOption = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.symbols.length; i++) {\r\n        const symbol = pool.symbols[i];\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          pricer: pool.pricer,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: symbol.symbol,\r\n          symbolId: symbol.symbolId,\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          offchainSymbols: pool.offchainSymbols,\r\n          volatilitySymbols: pool.volatilitySymbols,\r\n          unit: symbol.unit,\r\n          type: 'option',\r\n          version: 'option',\r\n          versionId: pool.versionId,\r\n          isOption: true,\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nconst expandPoolConfigV2LiteOpen = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      if (pool.symbols.length > 0) {\r\n        for (let i = 0; i < pool.symbols.length; i++) {\r\n          const symbol = pool.symbols[i];\r\n          result.push({\r\n            pool: pool.pool,\r\n            pToken: pool.pToken,\r\n            lToken: pool.lToken,\r\n            initialBlock: pool.initialBlock,\r\n            chainId: pool.chainId,\r\n            bToken: pool.bToken,\r\n            bTokenSymbol: pool.bTokenSymbol,\r\n            symbol: symbol.symbol,\r\n            symbolId: symbol.symbolId,\r\n            offchainSymbolIds: pool.offchainSymbolIds,\r\n            offchainSymbols: pool.offchainSymbols,\r\n            unit: symbol.unit,\r\n            type: 'perpetual',\r\n            version: 'v2_lite_open',\r\n            versionId: pool.versionId,\r\n            isOpen: true,\r\n          });\r\n        }\r\n      } else {\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: '--',\r\n          symbolId: '',\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          offchainSymbols: pool.offchainSymbols,\r\n          unit: '',\r\n          type: 'perpetual',\r\n          version: 'v2_lite_open',\r\n          versionId: pool.versionId,\r\n          isOpen: true,\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nexport const getConfig = (version='v2', env='dev') => {\r\n  let config = getJsonConfig(version, env);\r\n  if (version === 'v2_lite_open') {\r\n    //if (Date.now()/1000 - openConfigListCache.updatedAt() < 15) {\r\n      //console.log('hit openConfigListCache')\r\n    config.pools = openConfigListCache.get()\r\n    //}\r\n  }\r\n\r\n  const pools = config.pools;\r\n  if (pools && Array.isArray(pools)) {\r\n    for (let i = 0; i < pools.length; i++) {\r\n      poolProcessor[version](pools[i])\r\n      poolValidator[version](pools[i])\r\n    }\r\n  }\r\n\r\n  //validateObjectKeyExist(['oracle'], config, 'oracle');\r\n  //validateObjectKeyExist(['brokerManager'], configs[env], 'brokerManager')\r\n  return config;\r\n};\r\n\r\nexport const getPoolConfigList = (version = 'v2', env = 'dev') => {\r\n  let config;\r\n  config = getConfig(version, env);\r\n  if (version === 'v2') {\r\n    return expandPoolConfigV2(config);\r\n  } else if (version === 'v2_lite') {\r\n    return expandPoolConfigV2Lite(config, version);\r\n  } else if (version === 'v2_lite_open') {\r\n    return expandPoolConfigV2LiteOpen(config);\r\n  } else if (version === 'option') {\r\n    return expandPoolConfigOption(config);\r\n  }\r\n};\r\n\r\nexport const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId, version='v2') => {\r\n  bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\r\n  symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\r\n  const poolConfigList = getPoolConfigList(version, DeriEnv.get())\r\n  const check = bTokenId != null\r\n    ? symbolId != null\r\n      ? (i) =>\r\n          i.pool === poolAddress &&\r\n          i.bTokenId === bTokenId &&\r\n          i.symbolId === symbolId\r\n      : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\r\n    : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\r\n  if (poolConfigList.length > 0) {\r\n    const res = poolConfigList.filter(check)\r\n    if (res && res.length > 0) {\r\n      return res\r\n    }\r\n  }\r\n  throw new Error(`getFilteredPoolConfigList(): cannot find the pool config by ${poolAddress} bTokenId(${bTokenId}) and symbolId(${symbolId})`)\r\n}\r\n\r\nexport const getPoolConfig = (poolAddress, bTokenId, symbolId) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  // check the bToken in v2_lite\r\n  if (LITE_AND_OPTION_VERSIONS.includes(version)) {\r\n    bTokenId = undefined\r\n  }\r\n  const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId, version)\r\n  return res[0]\r\n}\r\nexport const getFilteredPoolConfig  = getPoolConfig\r\n\r\n\r\nexport const getPoolVersion = (poolAddress) => {\r\n  let pools = VERSIONS.reduce((acc, version) => {\r\n    return acc.concat(getConfig(version, DeriEnv.get())['pools'])\r\n  }, [])\r\n  // add v1 config\r\n  pools = pools.concat(getPoolV1ConfigList(DeriEnv.get()))\r\n  const index = pools.findIndex((v) => v.pool === poolAddress)\r\n  //console.log('pools index', index)\r\n  if (index >= 0) {\r\n    return pools[index].version\r\n  }\r\n}\r\n\r\nexport const getPoolVersionId = (poolAddress) => {\r\n  let pools = VERSIONS.reduce((acc, version) => {\r\n    return acc.concat(getConfig(version, DeriEnv.get())['pools'])\r\n  }, [])\r\n  // add v1 config\r\n  pools = pools.concat(getPoolV1ConfigList(DeriEnv.get()))\r\n  const index = pools.findIndex((v) => v.pool === poolAddress)\r\n  if (index >= 0) {\r\n    return pools[index].versionId\r\n  }\r\n}\r\n\r\nexport const _getPoolConfig = (poolAddress) => {\r\n  const version = getPoolVersion(poolAddress);\r\n  // console.log('version', version)\r\n  const config = getConfig(version, DeriEnv.get());\r\n  const pools = config.pools;\r\n  let pool = pools.find((p) => p.pool === poolAddress);\r\n  //console.log(pool)\r\n  if (pool) {\r\n    return pool;\r\n  } else {\r\n    throw new Error(`getPoolConfig, cannot find pool config by pool address ${poolAddress}`)\r\n  }\r\n};\r\n\r\nexport const getPoolConfig2 = (poolAddress, bTokenId, symbolId) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  const defaultBToken = {\r\n    bTokenId: '',\r\n    bTokenSymbol: '',\r\n    bToken: '',\r\n  };\r\n  const defaultSymbol = {\r\n    symbolId: '',\r\n    symbol: '',\r\n    unit: '',\r\n  };\r\n  let bToken, symbol;\r\n  if (pool.bTokens && (bTokenId !== undefined || bTokenId !== null)) {\r\n    bToken = pool.bTokens.find((b) => b.bTokenId === bTokenId)\r\n  }\r\n  if (pool.symbols && (symbolId !== undefined || symbolId !== null)) {\r\n    symbol = pool.symbols.find((b) => b.symbolId === symbolId) || defaultSymbol;\r\n  }\r\n  bToken = bToken || defaultBToken;\r\n  symbol = symbol || defaultSymbol\r\n  return {\r\n    pool: pool.pool,\r\n    pToken: pool.pToken,\r\n    lToken: pool.lToken,\r\n    router: pool.router,\r\n    bTokenCount: pool.bTokenCount,\r\n    symbolCount: pool.symbolCount,\r\n    initialBlock: pool.initialBlock,\r\n    chainId: pool.chainId,\r\n    bToken: bToken.bToken,\r\n    bTokenId: bToken.bTokenId,\r\n    bTokenSymbol: bToken.bTokenSymbol,\r\n    symbol: symbol.symbol,\r\n    symbolId: symbol.symbolId,\r\n    unit: symbol.unit,\r\n    version: 'v2',\r\n  };\r\n};\r\n\r\nexport const getPoolBTokenList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.bTokens.map((b) => {\r\n    return {\r\n      bTokenId: b.bTokenId,\r\n      bTokenSymbol: b.bTokenSymbol,\r\n      bTokenAddress: b.bToken,\r\n    };\r\n  });\r\n};\r\n\r\nexport const getPoolBTokenIdList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.bTokens.map((b) => b.bTokenId);\r\n};\r\n\r\nexport const getPoolSymbolList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.symbols.map((s) => {\r\n    return {\r\n      symbol: s.symbol,\r\n      symbolId: s.symbolId,\r\n      unit: s.unit,\r\n    };\r\n  });\r\n};\r\n\r\nexport const getPoolSymbolIdList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.symbols.map((b) => b.symbolId);\r\n};\r\n\r\nexport const getPoolViewerConfig = (chainId, version=\"v2_lite\") => {\r\n  const env = DeriEnv.get()\r\n  const config = getJsonConfig(version, env)\r\n  const viewers = config.poolViewer.filter((v) => v.chainId === chainId.toString())\r\n  if (viewers.length > 0) {\r\n    return viewers[0].address\r\n  } else {\r\n    throw new Error(`getPoolViewerConfig(): invalid chainId(${chainId}) or version(${version}).`);\r\n  }\r\n};","import { getJsonConfig } from './config';\r\nimport { DeriEnv } from './env';\r\n\r\nexport const getBrokerConfigList = (version) => {\r\n  const config = getJsonConfig(version, DeriEnv.get())\r\n  if (config.brokerManager) {\r\n    return config.brokerManager\r\n  } else {\r\n    // default value\r\n    return []\r\n  }\r\n};\r\n\r\nexport const getBrokerConfig = (version='v2', chainId) => {\r\n  const filteredByChainId = getBrokerConfigList(version).filter((c) =>c.chainId === chainId);\r\n  if (filteredByChainId.length > 0) {\r\n    return filteredByChainId[0];\r\n  }\r\n  throw new Error(`getBrokerConfig(): invalid chainId(${chainId}).`);\r\n};\r\n","import { perpetualPoolFactory } from '../factory';\r\nimport { getPriceFromRest } from '../../shared/utils/oracle';\r\nimport { io } from 'socket.io-client';\r\n\r\n/** @module apiCache */\r\n/**\r\n * fundingRateCache Object\r\n * @name fundingRateCache\r\n * @property {function} get - Get the funding rate from cache\r\n * @property {function} set - set the funding rate cache\r\n */\r\nexport const fundingRateCache = (function () {\r\n  let resourceMap = {};\r\n  return {\r\n    get(chainId, contractAddress) {\r\n      const key = `${chainId}.${contractAddress}`;\r\n      if (Object.keys(resourceMap).includes(key)) {\r\n        return resourceMap[key];\r\n      }\r\n      console.log(`Cache key is not in resourceMap: ${key}`);\r\n      return undefined;\r\n    },\r\n    set(chainId, contractAddress, resource) {\r\n      const key = `${chainId}.${contractAddress}`;\r\n      resourceMap[key] = resource;\r\n    },\r\n  };\r\n})();\r\n\r\nexport const accountAddressCache = (function () {\r\n  let _accountAddress = '';\r\n  return {\r\n    get() {\r\n      if (_accountAddress === '') {\r\n        console.log(\"please init 'accountAddress' first\");\r\n      }\r\n      return _accountAddress;\r\n    },\r\n    set(value) {\r\n      if (typeof value === 'string' && value !== '') {\r\n        _accountAddress = value;\r\n      }\r\n    },\r\n  };\r\n})();\r\n\r\n/**\r\n * priceCache Object\r\n * @name priceCache\r\n * @property {function} get - Get the price from cache\r\n * @property {function} update - Set the price to automatic update during a time interval\r\n * @property {function} clear - Clear the the automatic update of the price\r\n */\r\nexport const priceCache = (function () {\r\n  let _price = '';\r\n  let _interval = null;\r\n  return {\r\n    get() {\r\n      if (_price === '') {\r\n        console.log(\"please init 'price' first\");\r\n      }\r\n      return _price;\r\n    },\r\n    async _update(poolAddress, symbol) {\r\n      try {\r\n        const res = await getPriceFromRest(symbol);\r\n        if (res !== '') {\r\n          _price = res;\r\n        }\r\n      } catch (err) {\r\n        console.log(`priceCache.update: ${err}`)\r\n      }\r\n    },\r\n    update(poolAddress, symbol) {\r\n      const self = this;\r\n      _interval = setInterval(() => {\r\n        // console.log('tick')\r\n        self._update(poolAddress, symbol);\r\n      }, 3000);\r\n    },\r\n    clear() {\r\n      if (_interval) {\r\n        clearInterval(_interval);\r\n      }\r\n      _price = '';\r\n    },\r\n  };\r\n})();\r\n\r\n/**\r\n * PerpetualPoolParametersCache Object\r\n * @name PerpetualPoolParametersCache\r\n * @property {function} get - Get the perpetualPoolParameters from cache\r\n * @property {function} update - Set the perpetualPoolParameters\r\n */\r\n\r\nexport const PerpetualPoolParametersCache = (function () {\r\n  let _parameters = {};\r\n  return {\r\n    get() {\r\n      if (!_parameters.multiplier) {\r\n        console.log(\"please init 'perpetual pool parameters' first\");\r\n      }\r\n      return _parameters;\r\n    },\r\n    async update(chainId, poolAddress) {\r\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n      const res = await perpetualPool.getParameters();\r\n      if (res.multiplier) {\r\n        _parameters = res;\r\n      }\r\n      return res;\r\n    },\r\n  };\r\n})();\r\n\r\n// websocket instance\r\nexport const wsInstance = (function(){\r\n  let _ws = null;\r\n  return {\r\n    get() {\r\n      if (_ws) {\r\n        return _ws\r\n      } else {\r\n        console.log('wsInstance.get() error: ws instance is not init')\r\n      }\r\n    },\r\n    set(url) {\r\n      try {\r\n        const ws = io(url, {\r\n          transports: ['websocket'],\r\n          path: '/ws',\r\n        });\r\n        ws.on('connect', () => {\r\n          console.log('hello from ws:', ws.id);\r\n        })\r\n        if (ws) {\r\n          _ws = ws\r\n        } else {\r\n          console.log('wsInstance.get() error: ws instance is not init')\r\n        }\r\n      } catch (err) {\r\n        console.log('wsInstance.set():', err)\r\n      }\r\n    },\r\n    getOrSet(url) {\r\n      if (!_ws) {\r\n        this.set(url)\r\n      }\r\n      return _ws\r\n    }\r\n  }\r\n})();\r\n","import {\r\n  bTokenFactory,\r\n  bg,\r\n  formatBN,\r\n  naturalToDeri,\r\n  getPoolV1Config,\r\n  deriToNatural,\r\n} from '../../shared';\r\nimport {\r\n  lTokenFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n} from '../factory';\r\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle'\r\nimport {\r\n  calculateMaxRemovableShares,\r\n  calculateMaxWithdrawMargin,\r\n  isOrderValid,\r\n} from '../calculation';\r\n\r\n/**\r\n * Unlock the account in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Deposit margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string|number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\r\n};\r\n\r\n/**\r\n * Withdraw margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n\r\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\r\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\r\n  const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\r\n\r\n  const maxWithdrawMargin = calculateMaxWithdrawMargin(\r\n    price,\r\n    volume,\r\n    margin,\r\n    cost,\r\n    multiplier,\r\n    minInitialMarginRatio\r\n  );\r\n  if (bg(amount).lte(maxWithdrawMargin)) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'amount exceeds allowed' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  //const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const decimals = await bToken.decimals();\r\n  const BONE = 10 ** decimals;\r\n  amount = formatBN(bg(amount).multipliedBy(BONE));\r\n  let res;\r\n  try {\r\n    const tx = await bToken._transact('mint', [amount], accountAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Add liquidity in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  let res;\r\n  try {\r\n    const tx = await pPool._transact(\r\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n      [naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} shares\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  shares\r\n) => {\r\n  const { lTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\r\n  //lToken.setAccount(accountAddress);\r\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\r\n\r\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n    lToken.balance(accountAddress),\r\n    lToken.totalSupply(),\r\n  ]);\r\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\r\n  const {\r\n    liquidity,\r\n    tradersNetVolume,\r\n    tradersNetCost,\r\n  } = await pPool.getStateValues();\r\n\r\n  const maxRemovableShares = calculateMaxRemovableShares(\r\n    lTokenBalance,\r\n    lTokenTotalSupply,\r\n    liquidity,\r\n    tradersNetVolume,\r\n    tradersNetCost,\r\n    multiplier,\r\n    minPoolMarginRatio,\r\n    price\r\n  );\r\n  let res;\r\n  if (bg(shares).lte(maxRemovableShares)) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(shares)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'shares exceeds allowed' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Trade with margin in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} newVolume\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  amount = '0'\r\n) => {\r\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\r\n  const {\r\n    multiplier,\r\n    minInitialMarginRatio,\r\n    minPoolMarginRatio,\r\n  } = await pPool.getParameters();\r\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\r\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\r\n  let res;\r\n  const orderValidation = isOrderValid(\r\n    price,\r\n    margin,\r\n    volume,\r\n    liquidity,\r\n    tradersNetVolume,\r\n    multiplier,\r\n    minPoolMarginRatio,\r\n    minInitialMarginRatio,\r\n    bg(newVolume),\r\n    bg(amount)\r\n  );\r\n  if (orderValidation.success) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: orderValidation.message };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Close position in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\r\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n  let { volume } = await pToken.getPositionInfo(accountAddress);\r\n  volume = volume.negated();\r\n  let res;\r\n  if (!volume.eq(0)) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(volume), '0'],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res;\r\n};\r\n","import {\r\n  //naturalToDeri,\r\n  deriToNatural,\r\n  hexToString,\r\n  toChecksumAddress,\r\n  hexToNumber,\r\n  hexToNumberString,\r\n  bg,\r\n} from '../../shared/utils';\r\nimport { getPoolV1Config } from '../../shared/config';\r\n\r\nimport { databaseFactory } from '../../shared/factory';\r\nimport { perpetualPoolFactory } from '../factory';\r\n\r\nconst processTradeEvent = async (\r\n  perpetualPool,\r\n  bTokenSymbol,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const transactionFee = perpetualPool._calculateFee(\r\n    tradeVolume,\r\n    price,\r\n    multiplier,\r\n    feeRatio\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(multiplier);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    baseToken: bTokenSymbol,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: bg(volume).times(multiplier).toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  // console.log(JSON.stringify(res))\r\n  return res;\r\n};\r\n\r\nconst processLiquidateEvent = async (\r\n  info,\r\n  txHash,\r\n  bTokenSymbol,\r\n  multiplier\r\n) => {\r\n  // console.log(info)\r\n  const volume = deriToNatural(info.volume).abs();\r\n  // const cost = deriToNatural(info.cost).abs()\r\n  // const margin = info.margin\r\n  const timestamp = `${info.timestamp}000`;\r\n  const price = deriToNatural(info.price);\r\n  // const liquidator = info.liquidator\r\n  // const reward = info.reward\r\n  const national = volume.times(price).times(multiplier);\r\n  // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\r\n\r\n  const res = {\r\n    direction: 'Liquidation',\r\n    baseToken: bTokenSymbol,\r\n    price: price.toString(),\r\n    notional: national.toString(),\r\n    volume: bg(volume).times(multiplier).toString(),\r\n    transactionFee: '0',\r\n    transactionHash: txHash.toString(),\r\n    time: timestamp,\r\n    // cost: naturalToDeri(cost).toString(),\r\n    // margin: margin.toString(),\r\n    // liquidator,\r\n    // reward: reward.toString(),\r\n  };\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get the user trade history\r\n * @async\r\n * @method\r\n * @param {string} chainId - Chain Id\r\n * @param {string} poolAddress - Pool Address\r\n * @param {string} accountAddress - Account Address\r\n * @returns {Object[]} response\r\n * @returns {string} response[].direction\r\n * @returns {string} response[].baseToken\r\n * @returns {string} response[].price\r\n * @returns {string} response[].notional\r\n * @returns {string} response[].volume\r\n * @returns {string} response[].transactionFee\r\n * @returns {string} response[].time - Timestamp of the trade\r\n */\r\n\r\nexport const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\r\n  const keyMeta = `${chainId}.${poolAddress}`;\r\n  const db = databaseFactory();\r\n  let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\r\n    db.getValues([`${keyMeta}.tradeHistoryBlock`]),\r\n    db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\r\n  ]);\r\n  tradeFromBlock = hexToNumber(tradeFromBlock[0]);\r\n  liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\r\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\r\n    // console.log(tradeFromBlock, liquidateFromBlock)\r\n    const [\r\n      tradeHistoryOffline,\r\n      tradeHistoryOnline,\r\n      liquidateHistoryOffline,\r\n      liquidateHistoryOnline,\r\n    ] = await Promise.all([\r\n      getTradeHistoryOffline(chainId, poolAddress, accountAddress),\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline\r\n      .concat(liquidateHistoryOnline)\r\n      .concat(tradeHistoryOffline)\r\n      .concat(liquidateHistoryOffline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  } else {\r\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\r\n    tradeFromBlock = parseInt(initialBlock);\r\n    liquidateFromBlock = parseInt(initialBlock);\r\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  }\r\n};\r\n\r\n// get trade history combined from cache and from online pull\r\nconst getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\r\n  // console.log(chainId, poolAddress, accountAddress)\r\n  let result = [];\r\n  // use dev database\r\n  const db = databaseFactory();\r\n  const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\r\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\r\n    accountAddress\r\n  )}.trade`;\r\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const count = hexToNumber(res);\r\n\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const {\r\n    multiplier,\r\n  } = await perpetualPool.getParameters();\r\n  try {\r\n    if (count && count >= 0) {\r\n      let keyArray = [];\r\n      for (let i = count; i > 0; i--) {\r\n        const key = `${keyMeta}.${i.toString()}`;\r\n        keyArray = keyArray.concat([\r\n          `${key}.direction`,\r\n          `${key}.baseToken`,\r\n          `${key}.price`,\r\n          `${key}.notional`,\r\n          `${key}.volume`,\r\n          `${key}.transactionFee`,\r\n          `${key}.transactionHash`,\r\n          `${key}.time`,\r\n        ]);\r\n      }\r\n      // console.log(keyArray)\r\n      const tradeHistoryLength = keyArray.length / 8;\r\n      // console.log(`trade history length: ${tradeHistoryLength}`)\r\n      const resp = await db.getValues(keyArray);\r\n      for (let i = 0; i < tradeHistoryLength; i++) {\r\n        const indexBase = i * 8;\r\n        //console.log(resp[indexBase + 6].trim());\r\n        const item = {\r\n          direction: hexToString(resp[indexBase]).trim(),\r\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\r\n          price: deriToNatural(resp[indexBase + 2]).toString(),\r\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\r\n          volume: bg(deriToNatural(resp[indexBase + 4])).times(multiplier).toString(),\r\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\r\n          transactionHash: resp[indexBase + 6],\r\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\r\n        };\r\n        result.push(item);\r\n      }\r\n    } else {\r\n      result = [];\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    result = [];\r\n  }\r\n  return result;\r\n};\r\n\r\n// get trade history online from the Block number\r\nexport const getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  fromBlock\r\n) => {\r\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\r\n  // console.log(poolAddr, bTokenAddress);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //perpetualPool.setAccount(accountAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n  const filters = { owner: accountAddress };\r\n  const events = await perpetualPool._getPastEvents(\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n  const {\r\n    multiplier,\r\n    feeRatio,\r\n    minInitialMarginRatio,\r\n  } = await perpetualPool.getParameters();\r\n\r\n  const result = [];\r\n  // console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    // const info = item.returnValues;\r\n    const res = await processTradeEvent(\r\n      perpetualPool,\r\n      bTokenSymbol,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n      minInitialMarginRatio\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\n// get liquidate history online from the Block number\r\nexport const getLiquidateHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  fromBlock\r\n) => {\r\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\r\n  // console.log(poolAddr, bTokenAddress);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //perpetualPool.setAccount(accountAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n  const filters = { owner: accountAddress };\r\n  const events = await perpetualPool._getPastEvents(\r\n    'Liquidate',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n  const { multiplier } = await perpetualPool.getParameters();\r\n\r\n  const result = [];\r\n  // console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    // const info = item.returnValues;\r\n    const res = await processLiquidateEvent(\r\n      item.returnValues,\r\n      item.transactionHash,\r\n      bTokenSymbol,\r\n      multiplier\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\n// get trade history combined from cache and from online pull\r\nconst getLiquidateHistoryOffline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  let result = [];\r\n  // use dev database\r\n  const db = databaseFactory();\r\n  const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\r\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\r\n    accountAddress\r\n  )}.liquidate`;\r\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const count = hexToNumber(res);\r\n\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const {\r\n    multiplier,\r\n  } = await perpetualPool.getParameters();\r\n  try {\r\n    if (count && count >= 0) {\r\n      let keyArray = [];\r\n      for (let i = count; i > 0; i--) {\r\n        const key = `${keyMeta}.${i.toString()}`;\r\n        keyArray = keyArray.concat([\r\n          `${key}.direction`,\r\n          `${key}.baseToken`,\r\n          `${key}.price`,\r\n          `${key}.notional`,\r\n          `${key}.volume`,\r\n          `${key}.transactionFee`,\r\n          `${key}.transactionHash`,\r\n          `${key}.time`,\r\n        ]);\r\n      }\r\n      // console.log(keyArray)\r\n      const liquidateHistoryLength = keyArray.length / 8;\r\n      const resp = await db.getValues(keyArray);\r\n      for (let i = 0; i < liquidateHistoryLength; i++) {\r\n        const indexBase = i * 8;\r\n        const item = {\r\n          direction: hexToString(resp[indexBase]).trim(),\r\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\r\n          price: deriToNatural(resp[indexBase + 2]).toString(),\r\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\r\n          volume: bg(deriToNatural(resp[indexBase + 4])).times(multiplier).toString(),\r\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\r\n          transactionHash: resp[indexBase + 6],\r\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\r\n        };\r\n        result.push(item);\r\n      }\r\n    } else {\r\n      result = [];\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    result = [];\r\n  }\r\n  return result;\r\n};\r\n","// const\r\nimport { getPoolV1Config } from '../../shared/config';\r\nimport { bg, deriToNatural, getHttpBase, fetchJson } from '../../shared/utils';\r\nimport {\r\n  getTradeHistoryOnline,\r\n} from './trade_history_api';\r\nimport { perpetualPoolFactory } from '../factory';\r\n\r\n/**\r\n * Get specification from REST API, please refer {@link getSpecification}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getSpecification2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/specification/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get funding rate from REST API, please refer {@link getFundingRate}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getFundingRate2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/funding_rate/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity used from REST API, please refer {@link getLiquidityUsed}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getLiquidityUsed2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/liquidity_used/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get funding rate cache from REST API, it used to 'fundingRateCache.update(chainId, poolAddress, result)'\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getFundingRateCache2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/funding_rate_cache/${poolAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    let result = res.data;\r\n    result.price = bg(result.price);\r\n    result.fundingRate = bg(result.fundingRate);\r\n    result.liquidityUsed = bg(result.liquidityUsed);\r\n    return result;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get position info from REST API, please refer {@link getPositionInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getPositionInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/position_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity info from REST API, please refer {@link getLiquidityInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance from REST API, please refer {@link getWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity of the slp pool from REST API, please refer {@link getSlpLiquidityInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getSlpLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/slp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the slp pool from REST API, please refer {@link getSlpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getSlpWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/slp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the clp pool from REST API, please refer {@link getClpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getClpLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/clp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the clp pool from REST API, please refer {@link getSlpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getClpWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/clp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the deri pool from REST API, please refer {@link getDeriBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getDeriBalance2 = async (chainId, poolAddress, accountAddress) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/deri_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get the user trade history from REST API, please refer {@link getTradeHistory}\r\n * @async\r\n * @method\r\n * @param {string} chainId - Chain Id\r\n * @param {string} poolAddress - Pool Address\r\n * @param {string} accountAddress - Account Address\r\n * @returns {Object[]} response\r\n */\r\nexport const getTradeHistory2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  let tradeFromBlock, liquidateFromBlock, tradeHistory;\r\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n    liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\r\n    tradeHistory = res.data.tradeHistory;\r\n  }\r\n\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const {\r\n    multiplier,\r\n  } = await perpetualPool.getParameters();\r\n  tradeHistory = tradeHistory.filter((i) => i).map((i) => {\r\n    return {\r\n      direction: i.direction.trim(),\r\n      baseToken: bTokenSymbol,\r\n      price: deriToNatural(i.price).toString(),\r\n      notional: deriToNatural(i.notional).toString(),\r\n      volume: deriToNatural(i.volume).times(multiplier).toString(),\r\n      transactionFee: deriToNatural(i.transactionFee).toString(),\r\n      transactionHash: i.transactionHash,\r\n      time: i.time.toString(),\r\n    };\r\n  });\r\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\r\n    // console.log(tradeFromBlock, liquidateFromBlock)\r\n    const [tradeHistoryOnline ] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      )\r\n    ]);\r\n    const result = tradeHistoryOnline.concat(tradeHistory);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  } else {\r\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\r\n    tradeFromBlock = parseInt(initialBlock);\r\n    liquidateFromBlock = parseInt(initialBlock);\r\n    const [tradeHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  }\r\n};\r\n","import {\r\n  validateArgs,\r\n  naturalWithPercentage,\r\n  deriToNatural,\r\n  bg,\r\n} from '../../shared/utils';\r\nimport {\r\n  bTokenFactory,\r\n} from '../../shared/factory';\r\nimport { getPoolV1Config } from '../../shared';\r\nimport { getPriceFromRest } from '../../shared/utils/oracle';\r\nimport { getPoolInfoApy } from '../../shared/api/database_api';\r\nimport {\r\n  lTokenFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n} from '../factory';\r\nimport {\r\n  fundingRateCache,\r\n  PerpetualPoolParametersCache,\r\n  priceCache,\r\n} from './api_v1_globals';\r\nimport {\r\n  calculateFundingRate,\r\n  calculateLiquidityUsed,\r\n  calculateShareValue,\r\n  calculateMaxRemovableShares,\r\n  calculateEntryPrice,\r\n  calculateMarginHeld,\r\n  calculatePnl,\r\n  calculateLiquidationPrice,\r\n  processFundingRate,\r\n} from '../calculation';\r\n\r\n/**\r\n * Get the contract information\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.addresses\r\n * @returns {string} response.symbol\r\n * @returns {string} response.bTokenSymbol\r\n * @returns {string} response.multiplier\r\n * @returns {string} response.feeRatio\r\n * @returns {string} response.minPoo\r\n * @returns {string} response.minPoolMarginRatio\r\n * @returns {string} response.minInitialMarginRatio\r\n * @returns {string} response.minMaintenanceMarginRatio\r\n * @returns {string} response.minAddLiquidity\r\n * @returns {string} response.redemptionFeeRatio\r\n * @returns {string} response.fundingRateCoefficient\r\n * @returns {string} response.minLiquidationReward\r\n * @returns {string} response.maxLiquidationReward\r\n * @returns {string} response.liquidationCutRatio\r\n * @returns {string} response.priceDelayAllowance\r\n */\r\nexport const getSpecification = async (\r\n  chainId,\r\n  poolAddress,\r\n  //accountAddress,\r\n) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const {\r\n    multiplier,\r\n    feeRatio,\r\n    minPoolMarginRatio,\r\n    minInitialMarginRatio,\r\n    minMaintenanceMarginRatio,\r\n    minAddLiquidity,\r\n    redemptionFeeRatio,\r\n    fundingRateCoefficient,\r\n    minLiquidationReward,\r\n    maxLiquidationReward,\r\n    liquidationCutRatio,\r\n    priceDelayAllowance,\r\n  } = await pPool.getParameters();\r\n  let symbol = await pPool.symbol();\r\n  const bTokenSymbol = await bToken.symbol();\r\n\r\n  // fix symbol BTCUSD issue, will remove later\r\n  // if (poolAddress === '0xA2D7316Bc60AA9463DfB78379d25E77371990507') {\r\n  //   symbol = 'iMEME'\r\n  // }\r\n\r\n  return {\r\n    addresses: poolAddress,\r\n    symbol,\r\n    bTokenSymbol,\r\n    multiplier: multiplier.toString(),\r\n    feeRatio: feeRatio.toString(),\r\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n    minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n    minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n    minAddLiquidity: minAddLiquidity.toString(),\r\n    redemptionFeeRatio: redemptionFeeRatio.toString(),\r\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n    minLiquidationReward: minLiquidationReward.toString(),\r\n    maxLiquidationReward: maxLiquidationReward.toString(),\r\n    liquidationCutRatio: liquidationCutRatio.toString(),\r\n    priceDelayAllowance: priceDelayAllowance.toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Get position Information of the user\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.volume\r\n * @returns {string} response.averageEntryPrice\r\n * @returns {string} response.margin\r\n * @returns {string} response.marginHeld\r\n * @returns {string} response.unrealizedPnl\r\n * @returns {string} response.liquidationPrice\r\n */\r\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\r\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n  const {\r\n    multiplier,\r\n    minInitialMarginRatio,\r\n    minMaintenanceMarginRatio,\r\n  } = await pPool.getParameters();\r\n  const symbol = await pPool.symbol()\r\n  //console.log('getPositionInfo', chainId, poolAddress, accountAddress, price);\r\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\r\n  const price = await getPriceFromRest(symbol);\r\n  if (price === '') {\r\n    return {\r\n      price,\r\n      volume: bg(volume).times(multiplier).toString(),\r\n      averageEntryPrice: calculateEntryPrice(\r\n        volume,\r\n        cost,\r\n        multiplier\r\n      ).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: '',\r\n      unrealizedPnl: '',\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        cost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n    };\r\n  } else {\r\n    return {\r\n      price,\r\n      volume: bg(volume).times(multiplier).toString(),\r\n      averageEntryPrice: calculateEntryPrice(\r\n        volume,\r\n        cost,\r\n        multiplier\r\n      ).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: calculateMarginHeld(\r\n        price,\r\n        volume,\r\n        multiplier,\r\n        minInitialMarginRatio\r\n      ).toString(),\r\n      unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        cost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get liquidity Info of the user\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.totalSupply\r\n * @returns {string} response.poolLiquidity\r\n * @returns {string} response.shares\r\n * @returns {string} response.shareValue\r\n * @returns {string} response.maxRemovableShares\r\n */\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { lTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\r\n  //lToken.setAccount(accountAddress);\r\n\r\n  const [lTokenBalance, lTokenTotalSupply, symbol] = await Promise.all([\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n    pPool.symbol(),\r\n  ]);\r\n  const price = await getPriceFromRest(symbol);\r\n  const {\r\n    liquidity,\r\n    tradersNetCost,\r\n    tradersNetVolume,\r\n  } = await pPool.getStateValues();\r\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\r\n  const poolDynamicEquity = liquidity.plus(\r\n    tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\r\n  );\r\n\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: calculateShareValue(\r\n      lTokenTotalSupply,\r\n      poolDynamicEquity\r\n    ).toString(),\r\n    maxRemovableShares: calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      tradersNetVolume,\r\n      tradersNetCost,\r\n      multiplier,\r\n      minPoolMarginRatio,\r\n      price\r\n    ).toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Get user balance in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {string} user balance\r\n */\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\n/**\r\n * Get estimate margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} volume\r\n * @param {string} leverage\r\n * @returns {string}\r\n */\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage\r\n) => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const { multiplier } = await pPool.getParameters();\r\n  const symbol = await pPool.symbol();\r\n  const price = await getPriceFromRest(symbol);\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .div(bg(leverage))\r\n    .toString();\r\n};\r\n\r\n/**\r\n * Get estimate Fee in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} volume\r\n * @returns {string}\r\n */\r\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\r\n  // const price = await getBTCUSDPrice(chainId, poolAddress);\r\n  let price = priceCache.get();\r\n  let parameters = PerpetualPoolParametersCache.get();\r\n  if (price === '') {\r\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const symbol = await pPool.symbol();\r\n    await priceCache._update(poolAddress, symbol);\r\n    price = priceCache.get();\r\n  }\r\n  // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\r\n  // const { multiplier, feeRatio } = await pPool.getParameters();\r\n  if (!parameters.multiplier) {\r\n    parameters = await PerpetualPoolParametersCache.update(\r\n      chainId,\r\n      poolAddress\r\n    );\r\n  }\r\n  //console.log('price', price);\r\n  const { multiplier, feeRatio } = parameters;\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(feeRatio)\r\n    .toString();\r\n};\r\n\r\n/**\r\n * Get funding rate of the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate0\r\n * @returns {string} response.fundingRatePerBlock\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.volume\r\n * @returns {string} response.tradersNetVolume\r\n */\r\nexport const getFundingRate = async (chainId, poolAddress) => {\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n\r\n  const res = await perpetualPool\r\n    .getFundingRate()\r\n    .catch((err) => console.log('getFundingRate', err));\r\n  fundingRateCache.set(chainId, poolAddress, res);\r\n  const poolInfo = await getPoolInfoApy(chainId, poolAddress);\r\n\r\n  if (res) {\r\n    // console.log(hexToNatural(res[0]));\r\n    const {\r\n      fundingRate,\r\n      fundingRatePerBlock,\r\n      liquidity,\r\n      tradersNetVolume,\r\n      multiplier,\r\n    } = res;\r\n    const volume = poolInfo.volume24h;\r\n    // fundingRate = processFundingRate(chainId, fundingRate);\r\n\r\n    return {\r\n      fundingRate0: naturalWithPercentage(fundingRate),\r\n      fundingRatePerBlock: bg(fundingRatePerBlock).toExponential(10),\r\n      liquidity: liquidity.toString(),\r\n      volume: deriToNatural(volume).toString(),\r\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString(),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress) => {\r\n  return fundingRateCache.get(chainId, poolAddress)\r\n}\r\n\r\n/**\r\n * Get estimate funding rate\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} newNetVolume\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate1\r\n */\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume\r\n) => {\r\n  let fundingRate1;\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool.getFundingRate();\r\n  }\r\n  if (res) {\r\n    const parameters = [\r\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.fundingRateCoefficient,\r\n    ];\r\n    if (!validateArgs(...parameters)) {\r\n      return {\r\n        fundingRate1: '0',\r\n      };\r\n    }\r\n    // console.log(parameters)\r\n    fundingRate1 = calculateFundingRate(...parameters);\r\n    fundingRate1 = processFundingRate(chainId, fundingRate1);\r\n    return {\r\n      fundingRate1: naturalWithPercentage(fundingRate1),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get liquidity used\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidityUsed0\r\n */\r\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool.getFundingRate();\r\n  }\r\n  if (res) {\r\n    const { liquidityUsed } = res;\r\n    return {\r\n      liquidityUsed0: naturalWithPercentage(liquidityUsed),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get estimate liquidity used\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} newNetVolume\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate1\r\n */\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume\r\n) => {\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool\r\n      .getFundingRate()\r\n      .catch((err) => console.log('getLiquidityUsed', err));\r\n  }\r\n  if (res) {\r\n    const parameters = [\r\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.poolMarginRatio,\r\n    ];\r\n    if (!validateArgs(...parameters)) {\r\n      return {\r\n        liquidityUsed1: '0',\r\n      };\r\n    }\r\n    const liquidityUsed1 = calculateLiquidityUsed(...parameters);\r\n    return {\r\n      liquidityUsed1: naturalWithPercentage(liquidityUsed1),\r\n    };\r\n  }\r\n};\r\n","\r\n/* eslint-disable */\r\nexport const perpetualPoolLiteAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address[5]\", \"name\": \"addresses\", \"type\": \"address[5]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"indexPrice\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"lastBlockNumber\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"lastBlockTimestamp\", \"type\": \"uint256\" } ], \"name\": \"executeMigrationSwitchToTimestamp\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getFundingPeriod\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"poolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"period\", \"type\": \"uint256\" } ], \"name\": \"setFundingPeriod\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const perpetualPoolLiteOldAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address[5]\", \"name\": \"addresses\", \"type\": \"address[5]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLastUpdateBlock\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLiquidity\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const bTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const lTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\r\n/* eslint-disable */","import { ContractBase } from '../../shared/contract'\r\nimport { deriToNatural } from '../../shared/utils';\r\nimport { lTokenLiteAbi } from './abis';\r\n\r\nexport class LTokenLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, lTokenLiteAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async balanceOf(accountAddress) {\r\n    const res = await this._call('balanceOf', [accountAddress]);\r\n    return deriToNatural(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply');\r\n    return deriToNatural(res);\r\n  }\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { pTokenLiteAbi } from './abis';\r\n\r\nconst processPosition = (res) => {\r\n  return {\r\n    volume: deriToNatural(res.volume),\r\n    cost: deriToNatural(res.cost),\r\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\r\n  }\r\n}\r\nexport class PTokenLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenLiteAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async ownerOf(tokenId) {\r\n    return await this._call('ownerOf', [tokenId]);\r\n  }\r\n  async getMargin(accountAddress) {\r\n    const res = await this._call('getMargin', [accountAddress]);\r\n    return deriToNatural(res)\r\n  }\r\n  async getPosition(accountAddress, symbolId) {\r\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\r\n    if (Array.isArray(res)) {\r\n      return processPosition(res)\r\n    } else {\r\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n  async getActiveSymbolIds() {\r\n    return await this._call('getActiveSymbolIds');\r\n  }\r\n  async isActiveSymbolId(symbolId) {\r\n    return await this._call('isActiveSymbolId', [symbolId]);\r\n  }\r\n  async isApprovedForAll(owner, operator) {\r\n    return await this._call('isApprovedForAll', [owner, operator]);\r\n  }\r\n  async getApproved(tokenId) {\r\n    return await this._call('getApproved', [tokenId]);\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    return await this._call('getNumPositionHolders', [symbolId]);\r\n  }\r\n\r\n  // === transaction ===\r\n}\r\n","import { ContractBase } from '../../shared';\r\nimport { perpetualPoolLiteViewerAbi } from './abis';\r\n\r\nexport class PerpetualPoolLiteViewer extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\r\n  }\r\n  async getOffChainOracleSymbols(poolAddress) {\r\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\r\n    //return res.filter((s) => s && s !== '');\r\n    return res\r\n  }\r\n}\r\n","import {\r\n  PerpetualPoolLite,\r\n  LTokenLite,\r\n  PTokenLite,\r\n  PerpetualPoolLiteViewer \r\n} from './contract';\r\nimport { PerpetualPoolLiteOld } from './contract/perpetual_pool_old';\r\n\r\nconst factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\nconst factoryWithUpgrade = (klass, klassOld, newPoolList) => {\r\n  let instances = {}\r\n  return (chainId, address, initialBlock='') => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      if (Array.isArray(newPoolList) && newPoolList.includes(address)) {\r\n        instances[key] = new klass(chainId, address, initialBlock);\r\n        return instances[key];\r\n      } else {\r\n        instances[key] = new klassOld(chainId, address, initialBlock);\r\n        return instances[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const perpetualPoolLiteFactory = factoryWithUpgrade(\r\n  PerpetualPoolLite,\r\n  PerpetualPoolLiteOld,\r\n  [\r\n    // // prod\r\n    // '0x3465A2a1D7523DAF811B1abE63bD9aE36D2753e0',\r\n    // '0x1a9b1B83C4592B9F315E933dF042F53D3e7E4819',\r\n    // '0xb144cCe7992f792a7C41C2a341878B28b8A11984',\r\n    // '0xa4eDe2C4CB210CD07DaFbCe56dA8d36b7d688cd0',\r\n    // // dev\r\n    // '0x6832DFE1359c158a15E50b31B97b3BCD9cb12701',\r\n\r\n    \"0x43701b4bf0430DeCFA41210327fE67Bf4651604C\",\r\n  ]\r\n);\r\n\r\nexport const lTokenLiteFactory = factory(LTokenLite)\r\n\r\nexport const pTokenLiteFactory = factory(PTokenLite)\r\n\r\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)","import {\r\n  //getPoolConfig,\r\n  ContractBase,\r\n  deriToNatural,\r\n  naturalToDeri,\r\n  //isEqualSet,\r\n  bTokenFactory,\r\n} from '../../shared';\r\nimport { checkOffChainOracleSymbol, getPriceInfos } from '../../shared/utils/oracle';\r\nimport { perpetualPoolLiteAbi } from './abis';\r\nimport { lTokenLiteFactory, pTokenLiteFactory } from '../factory';\r\n\r\nexport class PerpetualPoolLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\r\n  }\r\n\r\n  async init() {\r\n    // init web3 and contract\r\n    await this._init();\r\n    // init address and parameters\r\n    if (!this.addresses || !this.pToken) {\r\n      [this.addresses, this.parameters] = await Promise.all([\r\n        this.getAddresses(),\r\n        this.getParameters(),\r\n      ]);\r\n      const { bTokenAddress, lTokenAddress, pTokenAddress } = this.addresses;\r\n      // init bToken, pToken and lToken\r\n      this.bToken = bTokenFactory(this.chainId, bTokenAddress);\r\n      this.pToken = pTokenLiteFactory(this.chainId, pTokenAddress);\r\n      this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\r\n      this.bTokenSymbol = await this.bToken.symbol();\r\n    }\r\n    const symbolIds = await this.pToken.getActiveSymbolIds();\r\n    // update symbolIds\r\n    if (\r\n      !this.activeSymbolIds ||\r\n      this.activeSymbolIds.toString() !== symbolIds.toString() ||\r\n      !this.offChainOracleSymbolIds\r\n    ) {\r\n      this.activeSymbolIds = symbolIds;\r\n      this.symbols = await Promise.all(\r\n        this.activeSymbolIds.reduce(\r\n          (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n          []\r\n        )\r\n      );\r\n      this.activeSymbolNames = this.symbols.map((s) => s.symbol);\r\n      this.offChainOracleSymbols = await Promise.all(\r\n        this.symbols\r\n          .map((s) => s.oracleAddress)\r\n          .reduce(\r\n            (acc, o, index) => [\r\n              ...acc,\r\n              checkOffChainOracleSymbol(\r\n                this.chainId,\r\n                o,\r\n                this.symbols[index].symbol\r\n              ),\r\n            ],\r\n            []\r\n          )\r\n      );\r\n      this.offChainOracleSymbolIds = this.activeSymbolIds.reduce(\r\n        (acc, i, index) => {\r\n          return this.offChainOracleSymbols[index] === '' ? acc : [...acc, i];\r\n        },\r\n        []\r\n      );\r\n      this.offChainOracleSymbols = this.offChainOracleSymbols.filter(\r\n        (s) => s && s !== ''\r\n      );\r\n      //console.log('offchain', this.offChainOracleSymbols);\r\n    }\r\n  }\r\n\r\n  // update symbols\r\n  async getSymbols() {\r\n    await this.init()\r\n    this.symbols = await Promise.all(\r\n      this.activeSymbolIds.reduce(\r\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n        []\r\n      )\r\n    );\r\n    return this.symbols\r\n  }\r\n\r\n  // update positions\r\n  async getPositions(accountAddress) {\r\n    await this.init()\r\n    this.positions = await Promise.all(\r\n      this.activeSymbolIds.reduce(\r\n        (acc, symbolId) => [\r\n          ...acc,\r\n          this.pToken.getPosition(accountAddress, symbolId),\r\n        ],\r\n        []\r\n      )\r\n    );\r\n    return this.positions\r\n  }\r\n\r\n  async getAddresses() {\r\n    const res = await this._call('getAddresses');\r\n    return res;\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      // decimals0: res.decimals0,\r\n      // minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n\r\n  async getLastUpdateBlock() {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    return res[1]\r\n  }\r\n  async getLiquidity() {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    return deriToNatural(res[0])\r\n  }\r\n  async getProtocolFeeAccrued() {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    return deriToNatural(res[2])\r\n  }\r\n  // async getBTokenOracle(bTokenId) {\r\n  //   //bTokenId = parseInt(bTokenId)\r\n  //   return await this._call('getBTokenOracle', [bTokenId])\r\n  // }\r\n  async getSymbol(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    try {\r\n      const res = await this._call('getSymbol', [symbolId]);\r\n      return {\r\n        symbol: res.symbol,\r\n        symbolId: res.symbolId,\r\n        oracleAddress: res.oracleAddress,\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        price: deriToNatural(res.price),\r\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\r\n    }\r\n  }\r\n\r\n  // async getSymbolOracle(symbolId) {\r\n  //   //symbolId = parseInt(symbolId)\r\n  //   return await this._call('getSymbolOracle', [symbolId])\r\n  // }\r\n\r\n  async _getSymbolPrices() {\r\n    let prices = [];\r\n    await this.init()\r\n    if (this.offChainOracleSymbolIds.length > 0) {\r\n      const priceInfos = await getPriceInfos(this.offChainOracleSymbols);\r\n      prices = Object.values(priceInfos).reduce((acc, p, index) => {\r\n        acc.push([\r\n          this.offChainOracleSymbolIds[\r\n            this.offChainOracleSymbols.indexOf(Object.keys(priceInfos)[index])\r\n          ],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ]);\r\n        return acc;\r\n      }, []);\r\n    }\r\n    //console.log('prices', prices);\r\n    return prices;\r\n  }\r\n\r\n  // === transaction ===\r\n  async addLiquidity(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'removeLiquidity',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async addMargin(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'addMargin',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMargin(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'removeMargin',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async trade(accountAddress, symbolId, newVolume) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(newVolume), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n}\r\n","import {\r\n  //getPoolConfig,\r\n  ContractBase,\r\n  deriToNatural,\r\n  naturalToDeri,\r\n  //isEqualSet,\r\n  bTokenFactory,\r\n} from '../../shared';\r\nimport { checkOffChainOracleSymbol, getPriceInfos } from '../../shared/utils/oracle';\r\nimport { perpetualPoolLiteOldAbi} from './abis';\r\nimport { lTokenLiteFactory, pTokenLiteFactory } from '../factory';\r\n\r\nexport class PerpetualPoolLiteOld extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolLiteOldAbi);\r\n  }\r\n\r\n  async init() {\r\n    // init web3 and contract\r\n    await this._init();\r\n    // init address and parameters\r\n    if (!this.addresses || !this.pToken) {\r\n      [this.addresses, this.parameters] = await Promise.all([\r\n        this.getAddresses(),\r\n        this.getParameters(),\r\n      ]);\r\n      const { bTokenAddress, lTokenAddress, pTokenAddress } = this.addresses;\r\n      // init bToken, pToken and lToken\r\n      this.bToken = bTokenFactory(this.chainId, bTokenAddress);\r\n      this.pToken = pTokenLiteFactory(this.chainId, pTokenAddress);\r\n      this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\r\n      this.bTokenSymbol = await this.bToken.symbol();\r\n    }\r\n    const symbolIds = await this.pToken.getActiveSymbolIds();\r\n    // update symbolIds\r\n    if (\r\n      !this.activeSymbolIds ||\r\n      this.activeSymbolIds.toString() !== symbolIds.toString()\r\n    ) {\r\n      this.activeSymbolIds = symbolIds;\r\n      this.symbols = await Promise.all(\r\n        this.activeSymbolIds.reduce(\r\n          (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n          []\r\n        )\r\n      );\r\n      this.activeSymbolNames = this.symbols.map((s) => s.symbol);\r\n      this.offChainOracleSymbols = await Promise.all(\r\n        this.symbols.map((s) => s.oracleAddress).reduce(\r\n          (acc, o, index) => [\r\n            ...acc,\r\n            checkOffChainOracleSymbol(\r\n              this.chainId,\r\n              o,\r\n              this.symbols[index].symbol\r\n            ),\r\n          ],\r\n          []\r\n        )\r\n      );\r\n      this.offChainOracleSymbolIds = this.activeSymbolIds.reduce(\r\n        (acc, i, index) => {\r\n          return this.offChainOracleSymbols[index] === '' ? acc : [...acc, i];\r\n        },\r\n        []\r\n      );\r\n      this.offChainOracleSymbols = this.offChainOracleSymbols.filter(\r\n        (s) => s && s !== ''\r\n      );\r\n      //console.log('offchain', this.offChainOracleSymbols);\r\n    }\r\n  }\r\n\r\n  // update symbols\r\n  async getSymbols() {\r\n    await this.init()\r\n    this.symbols = await Promise.all(\r\n      this.activeSymbolIds.reduce(\r\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n        []\r\n      )\r\n    );\r\n    return this.symbols\r\n  }\r\n\r\n  // update positions\r\n  async getPositions(accountAddress) {\r\n    await this.init()\r\n    this.positions = await Promise.all(\r\n      this.activeSymbolIds.reduce(\r\n        (acc, symbolId) => [\r\n          ...acc,\r\n          this.pToken.getPosition(accountAddress, symbolId),\r\n        ],\r\n        []\r\n      )\r\n    );\r\n    return this.positions\r\n  }\r\n\r\n  async getAddresses() {\r\n    const res = await this._call('getAddresses');\r\n    return res;\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      // decimals0: res.decimals0,\r\n      // minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n  async getLastUpdateBlock() {\r\n    const res = await this._call('getLastUpdateBlock');\r\n    return parseInt(res);\r\n  }\r\n  async getProtocolFeeAccrued() {\r\n    const res = await this._call('getProtocolFeeAccrued');\r\n    return deriToNatural(res);\r\n  }\r\n  async getLiquidity() {\r\n    const res = await this._call('getLiquidity');\r\n    return deriToNatural(res);\r\n  }\r\n  // async getBTokenOracle(bTokenId) {\r\n  //   //bTokenId = parseInt(bTokenId)\r\n  //   return await this._call('getBTokenOracle', [bTokenId])\r\n  // }\r\n  async getSymbol(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    try {\r\n      const res = await this._call('getSymbol', [symbolId]);\r\n      return {\r\n        symbol: res.symbol,\r\n        oracleAddress: res.oracleAddress,\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        price: deriToNatural(res.price),\r\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\r\n    }\r\n  }\r\n\r\n  // async getSymbolOracle(symbolId) {\r\n  //   //symbolId = parseInt(symbolId)\r\n  //   return await this._call('getSymbolOracle', [symbolId])\r\n  // }\r\n\r\n  async _getSymbolPrices() {\r\n    let prices = [];\r\n    await this.init()\r\n    if (this.offChainOracleSymbolIds.length > 0) {\r\n      const priceInfos = await getPriceInfos(this.offChainOracleSymbols);\r\n      prices = Object.values(priceInfos).reduce((acc, p, index) => {\r\n        acc.push([\r\n          this.offChainOracleSymbolIds[\r\n            this.offChainOracleSymbols.indexOf(Object.keys(priceInfos)[index])\r\n          ],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ]);\r\n        return acc;\r\n      }, []);\r\n    }\r\n    //console.log('prices', prices);\r\n    return prices;\r\n  }\r\n\r\n  // === transaction ===\r\n  async addLiquidity(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'removeLiquidity',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async addMargin(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'addMargin',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMargin(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'removeMargin',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async trade(accountAddress, symbolId, newVolume) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(newVolume), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n}\r\n","import { catchApiError, bg, deriToNatural, getNetworkName } from '../../shared/utils';\r\nimport { databaseFactory } from '../../shared/factory';\r\nimport { calculateMaxRemovableShares, calculateShareValue } from '../../v1/calculation';\r\nimport { perpetualPoolLiteFactory } from '../factory';\r\n\r\n\r\nconst _getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\r\n  //const { lToken:lTokenAddress, pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', null, 'v2_lite')\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n  await perpetualPool.init()\r\n  // const bTokenSymbol = perpetualPool.bTokenSymbol\r\n  // const lToken = lTokenLiteFactory(chainId, lTokenAddress)\r\n  // const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n  const lToken = perpetualPool.lToken\r\n  // const pToken = perpetualPool.pToken\r\n  const parameterInfo = perpetualPool.parameters\r\n  const symbolIds = perpetualPool.activeSymbolIds\r\n  //const symbolIndex = symbolIds.indexOf(symbolId)\r\n  //const symbols = perpetualPool.symbols\r\n\r\n  const [liquidity, lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n    //perpetualPool.getParameters(),\r\n    perpetualPool.getLiquidity(),\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n    //pToken.getActiveSymbolIds(),\r\n  ])\r\n  const { minPoolMarginRatio } = parameterInfo;\r\n  let promises = []\r\n  for (let i = 0; i < symbolIds.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n  }\r\n  const symbols = await Promise.all(promises)\r\n  const totalPnl = symbols.reduce((acc, s) => {\r\n    return acc.plus(s.tradersNetVolume.times(s.price).times(s.multiplier).minus(s.tradersNetCost))\r\n  }, bg(0))\r\n  const poolDynamicEquity = liquidity.minus(totalPnl)\r\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0))\r\n  const value = symbols.reduce((acc, s) => acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier)), bg(0))\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: calculateShareValue(\r\n      lTokenTotalSupply,\r\n      poolDynamicEquity\r\n    ).toString(),\r\n    maxRemovableShares: calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      value,\r\n      cost,\r\n      minPoolMarginRatio\r\n    ).toString(),\r\n  };\r\n}\r\nexport const getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\r\n  return catchApiError(\r\n    _getLiquidityInfo,\r\n    [chainId, poolAddress, accountAddress],\r\n    'getLiquidityInfo',\r\n    {\r\n      totalSupply: '',\r\n      poolLiquidity: '',\r\n      shares: '',\r\n      shareValue: '',\r\n      maxRemovableShares: '',\r\n    }\r\n  );\r\n}\r\n\r\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        symbol:'',\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidity: '',\r\n    symbol:'',\r\n  };\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n};\r\n","import { catchTxApiError } from '../../shared/utils';\r\nimport { perpetualPoolLiteFactory } from '../factory.js';\r\n\r\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    return await perpetualPool.addLiquidity(accountAddress, amount)\r\n  }, args)\r\n}\r\n\r\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    return await perpetualPool.removeLiquidity(accountAddress, amount, isMaximum)\r\n  }, args)\r\n}\r\n","import { bg, max } from '../../shared/utils';\r\n\r\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\r\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\r\n\r\nexport const calculateMarginHeld = (\r\n  price,\r\n  volume,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\r\n};\r\n\r\nexport const calculatePnl = (price, volume, multiplier, cost) => {\r\n  return volume.times(price).times(multiplier).minus(cost);\r\n}\r\n\r\n// export const calculateMaxWithdrawMargin = (\r\n//   price,\r\n//   volume,\r\n//   margin,\r\n//   cost,\r\n//   multiplier,\r\n//   minInitialMarginRatio\r\n// ) => {\r\n//   if (volume.eq(0)) {\r\n//     return margin;\r\n//   }\r\n//   const held = calculateMarginHeld(\r\n//     price,\r\n//     volume,\r\n//     multiplier,\r\n//     minInitialMarginRatio\r\n//   );\r\n//   const pnl = calculatePnl(price, volume, multiplier, cost);\r\n//   const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\r\n//   return withdrawable;\r\n// };\r\n\r\nexport const calculateLiquidationPrice = (\r\n  volume,\r\n  margin,\r\n  cost,\r\n  dynamicCost,\r\n  multiplier,\r\n  minMaintenanceMarginRatio\r\n) => {\r\n  const tmp = bg(cost).minus(margin);\r\n  let res = bg(volume).gt(0)\r\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier)\r\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier);\r\n  res = max(res, bg(0));\r\n  return res;\r\n};\r\n\r\nexport const isOrderValid = (\r\n  //price,\r\n  margin,\r\n  marginHeld,\r\n  liquidity,\r\n  liquidityUsed,\r\n  // multiplier,\r\n  // minPoolMarginRatio,\r\n  // newVolume,\r\n) => {\r\n  const minMargin = marginHeld;\r\n  // const poolMaxVolume = liquidity.minus(liquidityUsed)\r\n  //   .div(minPoolMarginRatio)\r\n  //   .div(price)\r\n  //   .div(multiplier);\r\n  if (margin.gte(minMargin)) {\r\n    // if (\r\n    //   newVolume.lte(poolMaxVolume) &&\r\n    //   newVolume.gte(poolMaxVolume.negated())\r\n    // ) {\r\n    if (liquidity.minus(liquidityUsed).gte(0)) {\r\n      return { success: true };\r\n    }\r\n    return { success: false, error: 'Pool has insufficient liquidity' };\r\n  }\r\n  return { success: false, error: 'Trader has insufficient margin' };\r\n};\r\n\r\nexport const calculateTxFee = (volume, price, multiplier, feeRatio) => {\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(feeRatio)\r\n    .toString();\r\n};","import { bg, getDailyBlockNumber, validateArgs } from '../../shared/utils';\r\n\r\nexport const calculateLiquidityUsed = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  poolMarginRatio\r\n) => {\r\n  if (\r\n    validateArgs(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      poolMarginRatio\r\n    )\r\n  ) {\r\n    return bg(tradersNetVolume)\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(poolMarginRatio)\r\n      .div(liquidity)\r\n      .abs();\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      poolMarginRatio,\r\n    ];\r\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\r\n  }\r\n}\r\n\r\nexport const calculateFundingRate = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  fundingRateCoefficient\r\n) => {\r\n  if (\r\n    validateArgs(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      fundingRateCoefficient\r\n    )\r\n  ) {\r\n    return bg(liquidity).eq(0) ? bg(0) : bg(tradersNetVolume)\r\n      .times(price)\r\n      // .times(price)\r\n      // .times(multiplier)\r\n      .times(multiplier)\r\n      .times(fundingRateCoefficient)\r\n      .div(liquidity);\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      fundingRateCoefficient\r\n    ];\r\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\r\n  }\r\n};\r\n\r\nexport const processFundingRate = (chainId, fundingRate) => {\r\n  const annualBlockCount = getDailyBlockNumber(chainId);\r\n  //console.log(annualBlockCount);\r\n  return bg(fundingRate).times(annualBlockCount);\r\n};\r\n\r\nexport const calculateFundingFee = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  fundingRateCoefficient,\r\n  dynamicEquity,\r\n  cumulativeFundingRate,\r\n  lastCumulativeFundingRate,\r\n  lastUpdatedBlockNumber,\r\n  latestBlockNumber,\r\n  volume,\r\n) => {\r\n  if (bg(volume).eq(0)) {\r\n    return '0'\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      dynamicEquity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    ];\r\n    if (\r\n      validateArgs(...args)\r\n    ) {\r\n      return bg(dynamicEquity).eq(0) ? bg(0) : bg(tradersNetVolume)\r\n        .times(price)\r\n        .times(multiplier)\r\n        .times(price)\r\n        .times(multiplier)\r\n        .times(fundingRateCoefficient)\r\n        .div(dynamicEquity)\r\n        .times(bg(latestBlockNumber).minus(lastUpdatedBlockNumber))\r\n        .plus(cumulativeFundingRate)\r\n        .minus(lastCumulativeFundingRate)\r\n        .times(volume)\r\n    } else {\r\n      console.log(`calculateFundingFee: invalid args: ${args}`);\r\n      return 'NaN'\r\n    }\r\n  }\r\n};","import { bg, max, min } from '../../shared/utils'\r\n\r\nexport const calculateBTokenDynamicEquities = (bTokens) => {\r\n  //const dynamicEquities = bTokens.map((b) => bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\r\n  //const totalDynamicEquity = dynamicEquities.reduce((accum, d) => accum.plus(d), bg(0))\r\n  const totalDynamicEquity = bTokens.reduce((accum, b) => accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)), bg(0))\r\n  return totalDynamicEquity\r\n}\r\n\r\nexport const isBToken0RatioValid = (bTokens, bTokenId, amount, bToken0Ratio) => {\r\n  bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).plus(amount)\r\n  const totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\r\n  const b = bTokens['0']\r\n  const dynamicEquity = bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\r\n  //console.log('estimatedBToken0Ratio',dynamicEquity.div(totalDynamicEquity).toString())\r\n  // use 1 as efficient\r\n  if (\r\n    !totalDynamicEquity.eq(0) &&\r\n    dynamicEquity.div(totalDynamicEquity).times('1').lt(bToken0Ratio)\r\n  ) {\r\n    return { success: false, error: 'Trader has insufficient bToken0' };\r\n  } else {\r\n    return { success: true };\r\n  }\r\n}\r\n\r\nexport const isPoolMarginRatioValid = (bTokens, bTokenId, amount, userLiquidity, symbols, poolMarginRatio) => {\r\n  if (bg(amount).gte(userLiquidity)) {\r\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(userLiquidity)\r\n  } else {\r\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(amount)\r\n  }\r\n  let totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\r\n  let totalCost = bg(0)\r\n  for (let i=0; i<symbols.length; i++) {\r\n    const s = symbols[i]\r\n    if (!bg(s.tradersNetVolume).eq(0)) {\r\n      const cost = bg(s.tradersNetVolume).times(s.price).times(s.multiplier)\r\n      totalDynamicEquity = totalDynamicEquity.plus(s.tradersNetCost).minus(cost)\r\n      totalCost = totalCost.plus(cost.abs())\r\n    }\r\n  }\r\n  //console.log(totalDynamicEquity.toString(), totalCost.toString())\r\n  if (\r\n    !totalCost.eq(0) &&\r\n    totalDynamicEquity.div(totalCost).times('1').lt(poolMarginRatio)\r\n  ) {\r\n    return { success: false, error: 'Trader has insufficient liquidity' };\r\n  } else {\r\n    return { success: true };\r\n  }\r\n}\r\n\r\n\r\nexport const calculateMaxRemovableLiquidity = (\r\n  bToken,\r\n  userLiquidity,\r\n  cost,\r\n  pnl,\r\n  restLiquidity,\r\n  minPoolMarginRatio,\r\n) => {\r\n  if (bg(cost).eq(0)) {\r\n    return userLiquidity;\r\n  } else {\r\n    return max(\r\n      min(\r\n        bg(bToken.liquidity).minus(\r\n          bg(minPoolMarginRatio)\r\n            .times(cost)\r\n            .plus(pnl)\r\n            .minus(restLiquidity)\r\n            .div(bToken.price)\r\n            .div(bToken.discount)\r\n        ).times('0.98'),\r\n        bg(userLiquidity)\r\n      ),\r\n      bg(0)\r\n    );\r\n  }\r\n};\r\n\r\n// for v1 mining\r\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\r\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\r\n\r\nexport const calculateMaxRemovableShares = (\r\n  lTokenBalance,\r\n  lTokenTotalSupply,\r\n  liquidity,\r\n  value,\r\n  cost,\r\n  minPoolMarginRatio,\r\n) => {\r\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\r\n  const removable = bg(liquidity)\r\n    .plus(cost)\r\n    .minus(value)\r\n    .minus(bg(value).abs().times(minPoolMarginRatio));\r\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\r\n  return shares;\r\n};\r\n","export const priceCache = (function(){\r\n  let _prices = {}\r\n  return {\r\n    get(poolAddress, symbolId) {\r\n      const key = `${poolAddress}.${symbolId}`\r\n      if (Object.keys(_prices).includes(key)) {\r\n        const [price, ] = _prices[key].split('|')\r\n        //if (parseInt(timestamp) - Date.now() < 10000) {\r\n          return price\r\n        //}\r\n      }\r\n      console.log('please init priceCache first')\r\n    },\r\n    // update(chainId, poolAddress, symbolId) {\r\n    //   // place holder\r\n    // },\r\n    set(poolAddress, symbolId, val) {\r\n      if (!isNaN(parseFloat(val))) {\r\n        const timestamp = Date.now().toString()\r\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\r\n      }\r\n    }\r\n  }\r\n})()\r\n\r\nexport const fundingRateCache = (function () {\r\n  let resourceMap = {};\r\n  return {\r\n    get(chainId, contractAddress, symbolId) {\r\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\r\n      if (Object.keys(resourceMap).includes(key)) {\r\n        return resourceMap[key];\r\n      }\r\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\r\n      return undefined;\r\n    },\r\n    set(chainId, contractAddress, symbolId, resource) {\r\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\r\n      resourceMap[key] = resource;\r\n    },\r\n  };\r\n})();\r\n\r\nexport const liquidatePriceCache = (function() {\r\n  let _cache = {}\r\n  return {\r\n    get(address) {\r\n      if (Object.keys(_cache).includes(address)) {\r\n        return _cache[address]\r\n      } else {\r\n        return {}\r\n      }\r\n    },\r\n    set(address, val) {\r\n      _cache[address] = val\r\n    },\r\n  }\r\n})()\r\n","import { fromWei } from \"../shared\";\r\nimport { getOraclePriceFromCache2, oraclePricesCache } from \"../shared/utils/oracle\";\r\n\r\nexport const getSymbolPrices = async (chainId, symbols, offChainSymbolIds, offChainSymbolNames) => {\r\n  const onChainOracleAddressWithPlaceHolder = symbols.map((s) =>\r\n    offChainSymbolIds.indexOf(s.symbolId) > -1\r\n      ? ''\r\n      : s.oracleAddress\r\n  );\r\n\r\n  const onChainSymbolPrices = await Promise.all(\r\n    onChainOracleAddressWithPlaceHolder\r\n      .reduce((acc, address, index) => {\r\n        const _symbol = symbols.map((s) => s.symbol)[index];\r\n        if (address !== '') {\r\n          return acc.concat(\r\n            getOraclePriceFromCache2.get(chainId, _symbol, address)\r\n          );\r\n        } else {\r\n          return acc.concat('');\r\n        }\r\n      }, [])\r\n      .filter((f) => f !== '')\r\n  );\r\n\r\n  const res =  await oraclePricesCache.get(offChainSymbolNames)\r\n  const offChainSymbolPrices = offChainSymbolNames.map((s) => fromWei(res[s].price))\r\n\r\n  // combine offChain and onChain symbol prices\r\n  const symbolPrices = onChainOracleAddressWithPlaceHolder.map((o) => {\r\n    if (o !== '') {\r\n      return onChainSymbolPrices.shift();\r\n    } else {\r\n      return offChainSymbolPrices.shift();\r\n    }\r\n  });\r\n  return symbolPrices\r\n};","import {\r\n  calculateEntryPrice,\r\n  calculateFundingRate,\r\n  calculateLiquidationPrice,\r\n  processFundingRate,\r\n  calculateFundingFee,\r\n} from '../../v2/calculation';\r\nimport { getPoolConfig } from \"../../shared/config\"\r\nimport { bTokenFactory } from \"../../shared/factory\"\r\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from \"../factory.js\"\r\nimport {\r\n  bg,\r\n  catchApiError,\r\n  getLatestBlockNumber,\r\n} from '../../shared/utils';\r\nimport { fundingRateCache, liquidatePriceCache, priceCache } from '../../shared/api/api_globals';\r\nimport { getIndexInfo } from '../../shared/config/token';\r\nimport { getSymbolPrices } from '../utils';\r\n\r\nexport const getSpecification = async(chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\r\n    //const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'v2_lite');\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n    const bTokenSymbol = perpetualPool.bTokenSymbol\r\n    const [symbolInfo, parameterInfo] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n    ])\r\n    const { symbol, multiplier, feeRatio, fundingRateCoefficient } = symbolInfo;\r\n    const {\r\n      minPoolMarginRatio,\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n    } = parameterInfo;\r\n\r\n    return {\r\n      symbol,\r\n      bTokenSymbol,\r\n      multiplier: multiplier.toString(),\r\n      feeRatio: feeRatio.toString(),\r\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n      minLiquidationReward: minLiquidationReward.toString(),\r\n      maxLiquidationReward: maxLiquidationReward.toString(),\r\n      liquidationCutRatio: liquidationCutRatio.toString(),\r\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n      indexConstituents: getIndexInfo(symbol),\r\n    }\r\n  }, args, 'getSpecification', {\r\n    symbol: '',\r\n    bTokenSymbol: '',\r\n    multiplier: '',\r\n    feeRatio: '',\r\n    fundingRateCoefficient: '',\r\n    minPoolMarginRatio: '',\r\n    minInitialMarginRatio: '',\r\n    minMaintenanceMarginRatio: '',\r\n    minLiquidationReward: '',\r\n    maxLiquidationReward: '',\r\n    liquidationCutRatio: '',\r\n    protocolFeeCollectRatio: '',\r\n    indexConstituents: { url: '', tokens: [] },\r\n  })\r\n}\r\n\r\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n    const pToken = perpetualPool.pToken\r\n    const parameterInfo = perpetualPool.parameters \r\n    const symbolIds = perpetualPool.activeSymbolIds\r\n    const symbolIndex = symbolIds.indexOf(symbolId)\r\n\r\n    if (symbolIndex > -1) {\r\n      let promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      }\r\n      const symbols = await Promise.all(promises);\r\n\r\n      //const symbol = symbols[symbolIndex].symbol\r\n      //const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\r\n      //const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\r\n      const [\r\n        symbolInfo,\r\n        liquidity,\r\n        lastUpdatedBlockNumber,\r\n        latestBlockNumber,\r\n        positionInfo,\r\n        margin,\r\n        //latestPrice,\r\n      ] = await Promise.all([\r\n        //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\r\n        perpetualPool.getSymbol(symbolId),\r\n        perpetualPool.getLiquidity(),\r\n        perpetualPool.getLastUpdateBlock(),\r\n        getLatestBlockNumber(chainId),\r\n        pToken.getPosition(accountAddress, symbolId),\r\n        pToken.getMargin(accountAddress),\r\n        //getOraclePriceFromCache2.get(chainId, symbol,oracleAddress),\r\n      ]);\r\n      //console.log(latestBlockNumber, lastUpdatedBlockNumber)\r\n      const { volume, cost, lastCumulativeFundingRate } = positionInfo;\r\n      const {\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        tradersNetVolume,\r\n        cumulativeFundingRate,\r\n      } = symbolInfo;\r\n      const {\r\n        minInitialMarginRatio,\r\n        minMaintenanceMarginRatio,\r\n      } = parameterInfo;\r\n\r\n      // promises = [];\r\n      // for (let i = 0; i < symbolIds.length; i++) {\r\n      //   promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      // }\r\n      //const symbols = await Promise.all(promises);\r\n\r\n      const symbolPrices = await getSymbolPrices(\r\n        chainId,\r\n        symbols,\r\n        perpetualPool.offChainOracleSymbolIds,\r\n        perpetualPool.offChainOracleSymbols\r\n      );\r\n      // promises = [];\r\n      // for (let i = 0; i < symbolIds.length; i++) {\r\n      //   const isOffchain = perpetualPool.offChainOracleSymbolIds.indexOf(symbolIds[i]) > -1\r\n      //   const address = isOffchain ? '' : symbols[i].oracleAddress\r\n      //   const _symbol = symbolList[i]\r\n      //   promises.push(\r\n      //     getOraclePriceFromCache2.get(chainId, _symbol, address),\r\n      //   );\r\n      // }\r\n      // const symbolPrices = await Promise.all(promises);\r\n      let price;\r\n      if (symbolIndex === '-1') {\r\n        price = '0';\r\n      } else {\r\n        price = symbolPrices[symbolIndex];\r\n        priceCache.set(poolAddress, symbolId, price);\r\n      }\r\n\r\n      promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n      }\r\n      const positions = await Promise.all(promises);\r\n\r\n      const marginHeld = symbols.reduce((acc, s, index) => {\r\n        return acc.plus(\r\n          bg(symbolPrices[index])\r\n            .times(s.multiplier)\r\n            .times(positions[index].volume)\r\n            .times(minInitialMarginRatio)\r\n            .abs()\r\n        );\r\n      }, bg(0));\r\n      const marginHeldBySymbol = bg(volume)\r\n        .abs()\r\n        .times(multiplier)\r\n        .times(price)\r\n        .times(minInitialMarginRatio);\r\n\r\n      const unrealizedPnl = symbols.reduce((acc, s, index) => {\r\n        return acc.plus(\r\n          bg(symbolPrices[index])\r\n            .times(s.multiplier)\r\n            .times(positions[index].volume)\r\n            .minus(positions[index].cost)\r\n        );\r\n      }, bg(0));\r\n      const unrealizedPnlList = symbols.map((s, index) => {\r\n        return [\r\n          s.symbol,\r\n          bg(symbolPrices[index])\r\n            .times(s.multiplier)\r\n            .times(positions[index].volume)\r\n            .minus(positions[index].cost)\r\n            .toString(),\r\n        ];\r\n      }, bg(0));\r\n\r\n      const totalCost = positions.reduce((accum, p) => {\r\n        return accum.plus(bg(p.cost));\r\n      }, bg(0));\r\n      const dynamicCost = symbols.reduce((accum, s, index) => {\r\n        if (index !== symbolIndex) {\r\n          return accum.plus(\r\n            bg(positions[index].volume)\r\n              .times(symbolPrices[index])\r\n              .times(s.multiplier)\r\n          );\r\n        } else {\r\n          return accum;\r\n        }\r\n      }, bg(0));\r\n\r\n      const fundingFee = calculateFundingFee(\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        liquidity,\r\n        cumulativeFundingRate,\r\n        lastCumulativeFundingRate,\r\n        lastUpdatedBlockNumber,\r\n        latestBlockNumber,\r\n        volume\r\n      );\r\n\r\n      liquidatePriceCache.set(poolAddress, {\r\n        volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        price,\r\n        multiplier,\r\n        minMaintenanceMarginRatio,\r\n      });\r\n\r\n      return {\r\n        symbol:symbols[symbolIndex].symbol,\r\n        price,\r\n        volume: bg(volume).times(symbols[symbolIndex].multiplier).toString(),\r\n        averageEntryPrice: calculateEntryPrice(\r\n          volume,\r\n          cost,\r\n          multiplier\r\n        ).toString(),\r\n        margin: margin.toString(),\r\n        marginHeld: marginHeld.toString(),\r\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n        unrealizedPnl: unrealizedPnl.toString(),\r\n        unrealizedPnlList,\r\n        fundingFee: fundingFee.toString(),\r\n        liquidationPrice: calculateLiquidationPrice(\r\n          volume,\r\n          margin,\r\n          totalCost,\r\n          dynamicCost,\r\n          multiplier,\r\n          minMaintenanceMarginRatio\r\n        ).toString(),\r\n      };\r\n    } else {\r\n      throw new Error(`-- getPostionInfo: invalid symbolId(${symbolId})`)\r\n    }\r\n  }, args, 'getPositionInfo', {\r\n      symbol: '',\r\n      price: '',\r\n      volume: '',\r\n      averageEntryPrice: '',\r\n      margin: '',\r\n      marginHeld: '',\r\n      marginHeldBySymbol: '',\r\n      unrealizedPnl: '',\r\n      unrealizedPnlList: [],\r\n      fundingFee: '',\r\n      liquidationPrice: '',\r\n  })\r\n}\r\n\r\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n    const pToken = perpetualPool.pToken\r\n    const parameterInfo = perpetualPool.parameters \r\n    const symbolIds = perpetualPool.activeSymbolIds\r\n    //const symbolIndex = symbolIds.indexOf(symbolId)\r\n\r\n      let promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      }\r\n      const symbols = await Promise.all(promises);\r\n\r\n      promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n      }\r\n      const positions = await Promise.all(promises);\r\n\r\n      // const symbol = symbols[symbolIndex].symbol\r\n      // const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\r\n      // const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\r\n      const [\r\n        liquidity,\r\n        lastUpdatedBlockNumber,\r\n        latestBlockNumber,\r\n        margin,\r\n      ] = await Promise.all([\r\n        //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\r\n        //perpetualPool.getSymbol(symbolId),\r\n        perpetualPool.getLiquidity(),\r\n        perpetualPool.getLastUpdateBlock(),\r\n        getLatestBlockNumber(chainId),\r\n        //pToken.getPosition(accountAddress, symbolId),\r\n        pToken.getMargin(accountAddress),\r\n        //getOraclePriceFromCache2.get(chainId, symbol,oracleAddress),\r\n      ]);\r\n      //console.log(latestBlockNumber, lastUpdatedBlockNumber)\r\n      const {\r\n        minInitialMarginRatio,\r\n        minMaintenanceMarginRatio,\r\n      } = parameterInfo;\r\n\r\n      const symbolList = symbols.map((s) => s.symbol);\r\n\r\n      const symbolPrices = await getSymbolPrices(\r\n        chainId,\r\n        symbols,\r\n        perpetualPool.offChainOracleSymbolIds,\r\n        perpetualPool.offChainOracleSymbols\r\n      );\r\n\r\n      // promises = [];\r\n      // for (let i = 0; i < symbolIds.length; i++) {\r\n      //   const isOffchain = perpetualPool.offChainOracleSymbolIds.indexOf(symbolIds[i]) > -1\r\n      //   const address = isOffchain ? '' : symbols[i].oracleAddress\r\n      //   const _symbol = symbolList[i]\r\n      //   promises.push(\r\n      //     getOraclePriceFromCache2.get(chainId, _symbol, address)\r\n      //   );\r\n      // }\r\n      // const symbolPrices = await Promise.all(promises);\r\n\r\n      const marginHeld = symbols.reduce((acc, s, index) => {\r\n        return acc.plus(\r\n          bg(symbolPrices[index])\r\n            .times(s.multiplier)\r\n            .times(positions[index].volume)\r\n            .times(minInitialMarginRatio)\r\n            .abs()\r\n        );\r\n      }, bg(0));\r\n\r\n      const totalCost = positions.reduce((accum, p) => {\r\n        return accum.plus(bg(p.cost));\r\n      }, bg(0));\r\n\r\n      return positions.map((p, index) => {\r\n      const symbolId = symbolList[index]\r\n      const symbol = symbols[index]\r\n      const price = symbolPrices[index]\r\n\r\n      const { volume, cost, lastCumulativeFundingRate } = p\r\n      const {\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        tradersNetVolume,\r\n        cumulativeFundingRate,\r\n      } = symbol;\r\n      priceCache.set(poolAddress, symbolId, price);\r\n\r\n      const unrealizedPnl = bg(symbolPrices[index]).times(symbol.multiplier).times(p.volume).minus(p.cost)\r\n\r\n      const dynamicCost = symbols.reduce((accum, s, idx) => {\r\n        if (idx !== index) {\r\n          return accum.plus(\r\n            bg(positions[idx].volume)\r\n              .times(symbolPrices[idx])\r\n              .times(s.multiplier)\r\n          );\r\n        } else {\r\n          return accum;\r\n        }\r\n      }, bg(0));\r\n      const fundingFee = calculateFundingFee(\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        liquidity,\r\n        cumulativeFundingRate,\r\n        lastCumulativeFundingRate,\r\n        lastUpdatedBlockNumber,\r\n        latestBlockNumber,\r\n        volume\r\n      );\r\n      const marginHeldBySymbol = bg(volume)\r\n        .abs()\r\n        .times(multiplier)\r\n        .times(price)\r\n        .times(minInitialMarginRatio);\r\n\r\n        return {\r\n          symbol: symbol.symbol,\r\n          symbolId: symbol.symbolId,\r\n          price,\r\n          volume: bg(volume).times(symbols[index].multiplier).toString(),\r\n          averageEntryPrice: calculateEntryPrice(\r\n            volume,\r\n            cost,\r\n            multiplier\r\n          ).toString(),\r\n          margin: margin.toString(),\r\n          marginHeld: marginHeld.toString(),\r\n          marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n          unrealizedPnl: unrealizedPnl.toString(),\r\n          //unrealizedPnlList,\r\n          fundingFee: fundingFee.toString(),\r\n          liquidationPrice: calculateLiquidationPrice(\r\n            volume,\r\n            margin,\r\n            totalCost,\r\n            dynamicCost,\r\n            multiplier,\r\n            minMaintenanceMarginRatio\r\n          ).toString(),\r\n        };\r\n      }).filter((p) => p.volume !== '0')\r\n  }, args, 'getPositionInfos', [])\r\n}\r\n\r\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', null, 'v2_lite')\r\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\r\n    return balance.toString()\r\n  }, args, 'getWalletBalance', '')\r\n}\r\n\r\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', null, 'v2_lite')\r\n    const bToken = bTokenFactory(chainId, bTokenAddress)\r\n    return await bToken.isUnlocked(accountAddress, poolAddress)\r\n  }, args, 'isUnlocked', '')\r\n}\r\n\r\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n  await perpetualPool.init()\r\n  const parameterInfo = perpetualPool.parameters\r\n  const symbolIds = perpetualPool.activeSymbolIds\r\n  const symbolIndex = symbolIds.indexOf(symbolId)\r\n\r\n  let promises = [];\r\n  for (let i = 0; i < symbolIds.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n\r\n  if (symbolIndex > -1) {\r\n    const symbolInfo = symbols[symbolIndex];\r\n    // const symbol = symbols[symbolIndex].symbol;\r\n    // const isOffchainOracleSymbol =\r\n    //   perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1;\r\n    // const oracleAddress = isOffchainOracleSymbol\r\n    //   ? ''\r\n    //   : symbols[symbolIndex].oracleAddress;\r\n    const [liquidity, prices] = await Promise.all([\r\n      perpetualPool.getLiquidity(),\r\n      getSymbolPrices(\r\n        chainId,\r\n        symbols,\r\n        perpetualPool.offChainOracleSymbolIds,\r\n        perpetualPool.offChainOracleSymbols\r\n      ),\r\n    ]);\r\n    const price = prices[symbolIndex]\r\n    priceCache.set(poolAddress, symbolId, price);\r\n    const {\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      tradersNetVolume,\r\n      feeRatio,\r\n    } = symbolInfo;\r\n    const { minPoolMarginRatio } = parameterInfo;\r\n    const fundingRateArgs = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      fundingRateCoefficient,\r\n    ];\r\n    const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs);\r\n    const fundingRate = processFundingRate(chainId, fundingRatePerBlock);\r\n\r\n    const liquidityUsedInAmount = symbols.reduce((accum, a) => {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume)\r\n          .times(a.price)\r\n          .times(a.multiplier)\r\n          .times(minPoolMarginRatio)\r\n          .abs()\r\n      );\r\n    }, bg(0));\r\n\r\n    const res = {\r\n      price,\r\n      multiplier: multiplier.toString(),\r\n      feeRatio: feeRatio.toString(),\r\n      tradersNetVolume: tradersNetVolume.toString(),\r\n      liquidity: liquidity.toString(),\r\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n      fundingRatePerBlock: fundingRatePerBlock,\r\n      fundingRate: fundingRate,\r\n      liquidityUsed: liquidityUsedInAmount.div(liquidity),\r\n    };\r\n    fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n    return res;\r\n  } else {\r\n    throw new Error(`-- getFundingRate: invalide symbolId(${symbolId})`);\r\n  }\r\n}\r\n\r\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\r\n  const args = [chainId, poolAddress, volume, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n\r\n    const symbolIds = perpetualPool.activeSymbolIds\r\n    const symbolIndex = perpetualPool.activeSymbolIds.indexOf(symbolId)\r\n\r\n    let promises = [];\r\n    for (let i = 0; i < symbolIds.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n    }\r\n    const symbols = await Promise.all(promises);\r\n    //const symbol = symbols[symbolIndex]\r\n    let price = priceCache.get(poolAddress, symbolId)\r\n    //console.log('symbol',symbol)\r\n\r\n    if (!price) {\r\n      // const symbolName = symbol.symbol;\r\n      // const isOffchainOracleSymbol =\r\n      //   perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1;\r\n      // const oracleAddress = isOffchainOracleSymbol ? '' : symbol.oracleAddress;\r\n      const prices = await getSymbolPrices(\r\n        chainId,\r\n        symbols,\r\n        perpetualPool.offChainOracleSymbolIds,\r\n        perpetualPool.offChainOracleSymbols\r\n      );\r\n      price = prices[symbolIndex]\r\n      priceCache.set(poolAddress, symbolId, price)\r\n    }\r\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!cache || !cache.multiplier) {\r\n      await _getFundingRate(chainId, poolAddress, symbolId)\r\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    }\r\n    const { multiplier, feeRatio } = cache;\r\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\r\n  }, args, 'getFundingFee', '')\r\n}\r\nexport const getEstimatedMargin = async(\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId,\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, volume, leverage, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\r\n    //const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\r\n    //console.log('symbol',symbol)\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n    const symbolIds = perpetualPool.activeSymbolIds\r\n    const symbolIndex = symbolIds.indexOf(symbolId)\r\n    let promises = [];\r\n    for (let i = 0; i < symbolIds.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n    }\r\n    const symbols = await Promise.all(promises);\r\n    if (symbolIndex > -1) {\r\n      // const symbol = symbols[symbolIndex].symbol\r\n      // const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\r\n      //const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\r\n\r\n      const prices = await getSymbolPrices(\r\n        chainId,\r\n        symbols,\r\n        perpetualPool.offChainOracleSymbolIds,\r\n        perpetualPool.offChainOracleSymbols\r\n      );\r\n      const price = prices[symbolIndex]\r\n      priceCache.set(poolAddress, symbolId, price)\r\n      const { multiplier } = symbols[symbolIndex]\r\n      return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\r\n    } else {\r\n      throw new Error(`-- getEstimatedMargin: invalid symbolId(${symbolId})`)\r\n    }\r\n\r\n  }, args, 'getEstimatedMargin', '')\r\n}\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\r\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\r\n}\r\n\r\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\r\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    const {fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume, multiplier} = res\r\n    return {\r\n      fundingRate0: fundingRate.times(100).toString(),\r\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\r\n      liquidity: liquidity.toString(),\r\n      volume: '-',\r\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString()\r\n    }\r\n  }, args, 'getFundingRate', {\r\n    fundingRate0: '',\r\n    fundingRatePerBlock: '',\r\n    liquidity: '',\r\n    volume: '',\r\n    tradersNetVolume: '',\r\n  })\r\n}\r\n\r\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newNetVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      const args = [\r\n        bg(res.tradersNetVolume).plus(newNetVolume).toString(),\r\n        res.price,\r\n        res.multiplier,\r\n        res.liquidity,\r\n        res.fundingRateCoefficient,\r\n      ];\r\n      let fundingRate1 = calculateFundingRate(...args);\r\n      fundingRate1 = processFundingRate(chainId, fundingRate1);\r\n      return {\r\n        fundingRate1: fundingRate1.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedFundingRate',\r\n    ''\r\n  );\r\n}\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      return {\r\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getLiquidityUsed',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newNetVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\r\n  return catchApiError(\r\n    async () => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      const { pToken: pTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        symbolId,\r\n        'v2_lite'\r\n      );\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\r\n      const symbolIds = await pToken.getActiveSymbolIds();\r\n      let promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      }\r\n      const symbols = await Promise.all(promises);\r\n\r\n      let liquidityUsed0 = symbols.reduce((acc, s, index) => {\r\n        if (index === parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(s.price)\r\n              .times(s.multiplier)\r\n              .times(s.tradersNetVolume.plus(newNetVolume))\r\n              .abs()\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.price).times(s.multiplier).times(s.tradersNetVolume).abs()\r\n          );\r\n        }\r\n      }, bg(0));\r\n      const liquidityUsed1 = liquidityUsed0\r\n        .times(res.minPoolMarginRatio)\r\n        .div(res.liquidity);\r\n      return {\r\n        liquidityUsed1: liquidityUsed1.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedLiquidityUsed',\r\n    ''\r\n  );\r\n}\r\n","import { catchTxApiError, bg } from '../../shared/utils';\r\nimport { isOrderValid } from '../../v2/calculation';\r\nimport { perpetualPoolLiteFactory } from '../factory.js';\r\n\r\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n    // const { bToken: bTokenAddress } = getPoolConfig(\r\n    //   poolAddress,\r\n    //   '0',\r\n    //   null,\r\n    //   'v2_lite'\r\n    // );\r\n    // const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    return await perpetualPool.bToken.unlock(accountAddress, poolAddress);\r\n  }, args);\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount) => {\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n      await perpetualPool.init()\r\n      return await perpetualPool.addMargin(accountAddress, amount);\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  isMaximum = false\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      await perpetualPool.init()\r\n      return await perpetualPool.removeMargin(\r\n        accountAddress,\r\n        amount,\r\n        isMaximum\r\n      );\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      await perpetualPool.init()\r\n      // const { pToken: pTokenAddress } = getPoolConfig(\r\n      //   poolAddress,\r\n      //   '0',\r\n      //   '0',\r\n      //   'v2_lite'\r\n      // );\r\n      // const pToken = pTokenLiteFactory(chainId, pTokenAddress);\r\n      // const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      const pToken = perpetualPool.pToken\r\n      const parameterInfo = perpetualPool.parameters\r\n      // const symbols = perpetualPool.symbols\r\n      const symbolIds = perpetualPool.activeSymbolIds\r\n      const [liquidity, margin] = await Promise.all([\r\n        //perpetualPool.getParameters(),\r\n        perpetualPool.getLiquidity(),\r\n        pToken.getMargin(accountAddress),\r\n        //pToken.getActiveSymbolIds(),\r\n      ]);\r\n      const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n      let promises = [];\r\n\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      }\r\n      const symbols = await Promise.all(promises);\r\n\r\n      promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n      }\r\n      const positions = await Promise.all(promises);\r\n\r\n      let marginHeld = symbols.reduce((acc, s, index) => {\r\n        if (index === parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(s.price)\r\n              .times(s.multiplier)\r\n              .times(positions[index].volume.plus(newVolume))\r\n              .abs()\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\r\n          );\r\n        }\r\n      }, bg(0));\r\n      marginHeld = marginHeld.times(minInitialMarginRatio);\r\n\r\n      let liquidityUsed = symbols.reduce((acc, s, index) => {\r\n        if (index === parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .plus(newVolume)\r\n              .times(s.price)\r\n              .times(s.multiplier)\r\n              .abs()\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\r\n          );\r\n        }\r\n      }, bg(0));\r\n      liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n\r\n      const orderValidation = isOrderValid(\r\n        margin,\r\n        marginHeld,\r\n        liquidity,\r\n        liquidityUsed\r\n      );\r\n      if (orderValidation.success) {\r\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error(orderValidation.error);\r\n      }\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, symbolId) => {\r\n      // const { pToken: pTokenAddress } = getPoolConfig(\r\n      //   poolAddress,\r\n      //   '0',\r\n      //   '0',\r\n      //   'v2_lite'\r\n      // );\r\n\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      await perpetualPool.init()\r\n      //const pToken = pTokenLiteFactory(chainId, pTokenAddress);\r\n      const pToken = perpetualPool.pToken\r\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n      if (!volume.eq(0)) {\r\n        const newVolume = volume.negated();\r\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error('no position to close');\r\n      }\r\n    },\r\n    args\r\n  );\r\n};\r\n","import { bg, deriToNatural, getBlockInfo, getPastEvents, getHttpBase, fetchJson } from '../../shared/utils';\r\nimport {\r\n  getPoolConfig,\r\n  getPoolConfig2,\r\n} from '../../shared/config';\r\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from '../factory';\r\nimport { calculateTxFee } from '../../v2/calculation/position';\r\n\r\nconst processTradeEvent = async (\r\n  chainId,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  bTokenSymbol,\r\n  symbols,\r\n  symbolIds,\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const symbolId = info.symbolId\r\n  const index = symbolIds.findIndex((s) => s === symbolId)\r\n  const symbol = symbols[index]\r\n  const transactionFee = calculateTxFee(\r\n    tradeVolume,\r\n    price,\r\n    symbol.multiplier,\r\n    symbol.feeRatio,\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(symbol.multiplier);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    baseToken: bTokenSymbol,\r\n    symbolId,\r\n    symbol: symbol && symbol.symbol,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    //volume: volume.toString(),\r\n    volume: bg(volume).times(symbol.multiplier).toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  return res;\r\n};\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  //console.log('symbolIdList', symbolIdList);\r\n  const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'v2_lite')\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n  const { pTokenAddress } = await perpetualPool.getAddresses()\r\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n  //const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  const symbolIdList = await pToken.getActiveSymbolIds()\r\n  const toBlock = await getBlockInfo(chainId, 'latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  let promises= []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  let symbols = await Promise.all(promises)\r\n\r\n  const filters =  { account: accountAddress }\r\n  let events = await getPastEvents(chainId, perpetualPool.contract,\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await processTradeEvent(\r\n      chainId,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      bTokenSymbol,\r\n      symbols,\r\n      symbolIdList,\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock, tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n    const symbolIds = perpetualPool.activeSymbolIds\r\n    //const symbolIndex = symbolIds.indexOf(symbolId)\r\n\r\n    let promises= []\r\n    for (let i=0; i<symbolIds.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIds[i]))\r\n    }\r\n    let symbols = await Promise.all(promises)\r\n\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .filter((i) => !(i.direction === 'LIQUIDATION' && i.symbolId === '0'))\r\n        .map((i) => {\r\n          if (i.direction !== 'LIQUIDATION') {\r\n            const index = symbolIds.indexOf(i.symbolId);\r\n            return {\r\n              direction: i.direction.trim(),\r\n              baseToken: i.baseToken.trim(),\r\n              symbolId: i.symbolId,\r\n              symbol: i.symbol,\r\n              price: deriToNatural(i.price).toString(),\r\n              notional: deriToNatural(i.notional).toString(),\r\n              //volume: deriToNatural(i.volume).toString(),\r\n              volume: deriToNatural(i.volume)\r\n                .times(symbols[index].multiplier)\r\n                .toString(),\r\n              transactionFee: deriToNatural(i.transactionFee).toString(),\r\n              transactionHash: i.transactionHash,\r\n              time: i.time.toString(),\r\n            };\r\n          } else {\r\n            if (i.volume !== '' && i.volume.indexOf(',') > -1 && !i.price.startsWith('NaN')) {\r\n              const ids = i.volume.split(',').reduce((acc, v, index) => {\r\n                if (v !== '0') {\r\n                  return acc.concat([index]);\r\n                } else {\r\n                  return acc\r\n                }\r\n              }, []);\r\n              const prices = i.price.split(',').map((s)=> deriToNatural(s))\r\n              const volumes = i.volume.split(',').map((v)=> deriToNatural(v))\r\n              return ids.map((id) => {\r\n                return {\r\n                  direction: i.direction.trim(),\r\n                  baseToken: i.baseToken.trim(),\r\n                  symbolId: id.toString(),\r\n                  symbol: symbols[id].symbol,\r\n                  volume: volumes[id].abs().times(symbols[id].multiplier).toString(),\r\n                  price: prices[id].toString(),\r\n                  notional: volumes[id].abs().times(prices[id]).times(symbols[id].multiplier).toString(),\r\n                  transactionFee: '0',\r\n                  transactionHash: i.transactionHash,\r\n                  time: i.time.toString(),\r\n                };\r\n              })\r\n            } else {\r\n              // handle missing price data\r\n              return {\r\n                direction: i.direction.trim(),\r\n                baseToken: i.baseToken.trim(),\r\n                symbolId: '',\r\n                symbol: '',\r\n                price: '',\r\n                notional: '',\r\n                //volume: deriToNatural(i.volume).toString(),\r\n                volume: '',\r\n                transactionFee: '0',\r\n                transactionHash: i.transactionHash,\r\n                time: i.time.toString(),\r\n              }\r\n            }\r\n          }\r\n        }).flat();\r\n    }\r\n      //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      // console.log(tradeFromBlock, liquidateFromBlock)\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n\r\n      const {initialBlock} = getPoolConfig2(poolAddress)\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch(err) {\r\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\r\n  }\r\n  return []\r\n};\r\n","const invalidValues = [NaN, null, undefined];\r\n\r\nfunction getEverlastingTimePriceAndDelta(S, K, V, T) {\r\n  let u = Math.sqrt(8 / V / V / T + 1);\r\n  let timeValue, delta;\r\n  if (S > K) {\r\n    timeValue = (K * Math.pow(S / K, (1 - u) / 2)) / u;\r\n    delta = ((1 - u) * timeValue) / S / 2;\r\n  } else if (S === K) {\r\n    timeValue = K / u;\r\n    delta = 0;\r\n  } else {\r\n    timeValue = (K * Math.pow(S / K, (1 + u) / 2)) / u;\r\n    delta = ((1 + u) * timeValue) / S / 2;\r\n  }\r\n  return [timeValue, delta];\r\n}\r\n\r\nfunction getDynamicInitialMarginRatio(\r\n  spot,\r\n  strike,\r\n  isCall,\r\n  initialMarginRatio,\r\n  minInitialMarginRatio\r\n) {\r\n  if ((isCall && spot >= strike) || (!isCall && strike >= spot)) {\r\n    return initialMarginRatio;\r\n  } else {\r\n    let otmRatio = (isCall ? strike - spot : spot - strike) / strike;\r\n    return Math.max(\r\n      (1 - otmRatio * 3) * initialMarginRatio,\r\n      minInitialMarginRatio\r\n    );\r\n  }\r\n}\r\n\r\n// multiple position for same underlier, e.x. BTCUSD\r\nfunction canLiquidateWithPrice(\r\n  pool,\r\n  trader,\r\n  symbols,\r\n  positions,\r\n  newUnderlierPrice\r\n) {\r\n  let newDynamicMargin = trader.dynamicMargin;\r\n  let newInitialMargin = trader.initialMargin;\r\n\r\n  for (let i = 0; i < symbols.length; i++) {\r\n    let symbol = symbols[i];\r\n    let position = positions[i];\r\n    if (position.volume === 0) {\r\n      continue;\r\n    }\r\n\r\n    let newIntrinsicValue = symbol.isCall\r\n      ? Math.max(newUnderlierPrice - symbol.strikePrice, 0)\r\n      : Math.max(symbol.strikePrice - newUnderlierPrice, 0);\r\n    let [newTimeValue, newDelta] = getEverlastingTimePriceAndDelta(\r\n      newUnderlierPrice,\r\n      symbol.strikePrice,\r\n      symbol.volatility,\r\n      pool.fundingPeriod\r\n    );\r\n    if (newIntrinsicValue > 0) {\r\n      newDelta += symbol.isCall ? 1 : -1;\r\n    }\r\n    let newPnl =\r\n      position.volume * (newIntrinsicValue + newTimeValue) * symbol.multiplier -\r\n      position.cost;\r\n    let newDynamicMarginRatio = getDynamicInitialMarginRatio(\r\n      newUnderlierPrice,\r\n      symbol.strikePrice,\r\n      symbol.isCall,\r\n      pool.initialMarginRatio,\r\n      0.01\r\n    );\r\n\r\n    newDynamicMargin = newDynamicMargin - position.pnl + newPnl;\r\n    newInitialMargin =\r\n      newInitialMargin -\r\n      Math.abs(\r\n        position.volume *\r\n          symbol.spotPrice *\r\n          symbol.multiplier *\r\n          symbol.dynamicMarginRatio\r\n      ) +\r\n      Math.abs(\r\n        position.volume *\r\n          newUnderlierPrice *\r\n          symbol.multiplier *\r\n          newDynamicMarginRatio\r\n      );\r\n  }\r\n\r\n  let newMaintenanceMargin =\r\n    (newInitialMargin * pool.maintenanceMarginRatio) / pool.initialMarginRatio;\r\n\r\n  if (\r\n    invalidValues.includes(newMaintenanceMargin) ||\r\n    invalidValues.includes(newDynamicMargin)\r\n  ) {\r\n    throw new Error(\r\n      `-- canLiquidateWithPrice: Invalid Margin value: ${newMaintenanceMargin} ${newDynamicMargin}`\r\n    );\r\n  }\r\n  return newMaintenanceMargin > newDynamicMargin;\r\n}\r\n\r\nexport function findLiquidationPrice(pool, trader, symbols, positions) {\r\n  if (symbols.length != positions.length) {\r\n    throw new Error(\r\n      'canLiquidateWithPrice: symbols and positions length not match'\r\n    );\r\n  }\r\n  if (symbols.length === 0) {\r\n    return {\r\n      numPositions: positions.length,\r\n      price1: null,\r\n      price2: null,\r\n    };\r\n  }\r\n  let head = symbols[0].symbol.slice(0, 6);\r\n  for (let i = 0; i < symbols.length; i++) {\r\n    if (!symbols[i].symbol.startsWith(head)) {\r\n      throw new Error('canLiquidateWithPrice: symbols not in same underlier');\r\n    }\r\n  }\r\n\r\n  if (trader.maintenanceMargin > trader.dynamicMargin) {\r\n    return {\r\n      numPositions: positions.length,\r\n      price1: symbols[0].spotPrice,\r\n      price2: symbols[0].spotPrice,\r\n    };\r\n  }\r\n\r\n  let final1, final2;\r\n  let price1, price2;\r\n  let l1, l2;\r\n\r\n  price1 = symbols[0].spotPrice / 10;\r\n  price2 = symbols[0].spotPrice;\r\n  l1 = canLiquidateWithPrice(pool, trader, symbols, positions, price1);\r\n  l2 = false;\r\n  while (true) {\r\n    if (l1 && l2) {\r\n      final1 = (price1 + price2) / 2;\r\n      break;\r\n    }\r\n    if (!l1 && !l2) {\r\n      final1 = null;\r\n      break;\r\n    }\r\n    if (price2 - price1 < symbols[0].spotPrice / 1000) {\r\n      final1 = (price1 + price2) / 2;\r\n      break;\r\n    }\r\n    let price = (price1 + price2) / 2;\r\n    let l = canLiquidateWithPrice(pool, trader, symbols, positions, price);\r\n    if (l === l1) price1 = price;\r\n    else price2 = price;\r\n  }\r\n\r\n  price1 = symbols[0].spotPrice;\r\n  price2 = symbols[0].spotPrice * 10;\r\n  l1 = false;\r\n  l2 = canLiquidateWithPrice(pool, trader, symbols, positions, price2);\r\n  while (true) {\r\n    if (l1 && l2) {\r\n      final2 = (price1 + price2) / 2;\r\n      break;\r\n    }\r\n    if (!l1 && !l2) {\r\n      final2 = null;\r\n      break;\r\n    }\r\n    if (price2 - price1 < symbols[0].spotPrice / 1000) {\r\n      final2 = (price1 + price2) / 2;\r\n      break;\r\n    }\r\n    let price = (price1 + price2) / 2;\r\n    let l = canLiquidateWithPrice(pool, trader, symbols, positions, price);\r\n    if (l === l1) price1 = price;\r\n    else price2 = price;\r\n  }\r\n\r\n  return {\r\n    numPositions: positions.length,\r\n    price1: final1,\r\n    price2: final2,\r\n  };\r\n}\r\n","import { bg, max, normalizeOptionSymbol, toNumberForObject } from \"../../shared\"\r\nimport { findLiquidationPrice } from './findLiquidationPrice2';\r\n\r\nexport const dynamicInitialMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\r\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\r\n    return initialMarginRatio\r\n  } else {\r\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\r\n    return max((bg(1).minus(otmRatio.times(3))).times(initialMarginRatio), bg(0.01))\r\n  }\r\n}\r\n\r\nexport const dynamicInitialPoolMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\r\n  // for pool\r\n  const initialPoolMarginRatio = bg(initialMarginRatio).times(10)\r\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\r\n    return initialMarginRatio\r\n  } else {\r\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\r\n    return max((bg(1).minus(otmRatio.times(3))).times(initialPoolMarginRatio), bg(0.01).times(10))\r\n  }\r\n}\r\n\r\nexport const getDeltaFundingPerSecond = (symbol, delta, price, totalDynamicEquity, newNetVolume)  => {\r\n  return bg(totalDynamicEquity).eq(0)\r\n    ? bg(0)\r\n    : bg(delta)\r\n        .times(bg(symbol.tradersNetVolume).plus(newNetVolume))\r\n        .times(price)\r\n        .times(price)\r\n        .times(symbol.multiplier)\r\n        .times(symbol.multiplier)\r\n        .times(symbol.deltaFundingCoefficient)\r\n        .div(totalDynamicEquity);\r\n} \r\nexport const getpremiumFunding = (symbol, premiumFundingCoefficient, totalDynamicEquity)  => {\r\n  return bg(totalDynamicEquity).eq(0)\r\n    ? bg(0)\r\n    : bg(symbol.timeValue)\r\n        .times(symbol.multiplier)\r\n        .times(premiumFundingCoefficient)\r\n        .div(totalDynamicEquity);\r\n} \r\n\r\nexport const getIntrinsicPrice = (price, strikePrice, isCall) => {\r\n  return isCall\r\n    ? max(bg(price).minus(strikePrice), bg(0))\r\n    : max(bg(strikePrice).minus(price), bg(0));\r\n};\r\n\r\n\r\nexport const getMarginHeldBySymbol = (\r\n  volume,\r\n  price,\r\n  symbol,\r\n  initialMarginRatio\r\n) => {\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(symbol.multiplier)\r\n    .times(\r\n      dynamicInitialMarginRatio(\r\n        price,\r\n        symbol.strikePrice,\r\n        symbol.isCall,\r\n        initialMarginRatio\r\n      )\r\n    );\r\n};\r\n\r\nexport const getAverageEntryPrice = (position, symbol) => {\r\n  return bg(position.volume).eq(0)\r\n    ? '0'\r\n    : bg(position.cost).div(position.volume).div(symbol.multiplier).toString();\r\n};\r\n\r\nexport const getLiquidationPrice = (state, symbolId)  => {\r\n  const { poolState, symbolState, traderState, positionState } = state;\r\n  const normalizedSymbol = normalizeOptionSymbol(symbolState[symbolId].symbol)\r\n  let res = findLiquidationPrice(\r\n    toNumberForObject(poolState, [\r\n      'initialMarginRatio',\r\n      'maintenanceMarginRatio',\r\n      'fundingPeriod',\r\n      'fundingCoefficient',\r\n      'marginMultiplier',\r\n      'liquidity',\r\n      'totalDynamicEquity',\r\n      'totalInitialMargin',\r\n    ]),\r\n    toNumberForObject(traderState, [\r\n      'margin',\r\n      'totalPnl',\r\n      'totalFundingAccrued',\r\n      'dynamicMargin',\r\n      'initialMargin',\r\n      'maintenanceMargin',\r\n    ]),\r\n    symbolState\r\n      .filter((s, index) => positionState[index].volume !== '0')\r\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\r\n      .map((s) =>\r\n        toNumberForObject(s, [\r\n          'multiplier',\r\n          'strikePrice',\r\n          'spotPrice',\r\n          'dpmmPrice',\r\n          'volatility',\r\n          'timePrice',\r\n          'dynamicMarginRatio',\r\n          'intrinsicValue',\r\n          'timeValue',\r\n          'delta',\r\n          'K',\r\n          'tradersNetVolume',\r\n          'tradersNetCost',\r\n          'cumulativeFundingRate',\r\n          'fundingPerSecond',\r\n        ])\r\n      ),\r\n    symbolState\r\n      .filter((s, index) => positionState[index].volume !== '0')\r\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\r\n      .map((s) =>\r\n        toNumberForObject(positionState[s.symbolId], [\r\n          'volume',\r\n          'cost',\r\n          'lastCumulativePremiumFundingRate',\r\n          'pnl',\r\n          'premiumFundingAccrued',\r\n        ])\r\n      )\r\n  );\r\n  res.underlier = normalizedSymbol\r\n  return res\r\n}\r\n\r\nexport const getLiquidationPrices = (state) => {\r\n  const { poolState, symbolState, traderState, positionState } = state;\r\n  const symbols = symbolState.filter((s, index) => positionState[index].volume !== '0').map((s) => s.symbol);\r\n  const oracleSymbols = symbols\r\n    .map((i) => normalizeOptionSymbol(i))\r\n    .filter((value, index, self) => self.indexOf(value) === index);\r\n\r\n  const liquidationPrices = oracleSymbols.map((oSymbol) => {\r\n    let res = findLiquidationPrice(\r\n      toNumberForObject(poolState, [\r\n        'initialMarginRatio',\r\n        'maintenanceMarginRatio',\r\n        'premiumFundingPeriod',\r\n        'premiumFundingCoefficient',\r\n        'liquidity',\r\n        'totalDynamicEquity',\r\n        'totalInitialMargin',\r\n      ]),\r\n      toNumberForObject(traderState, [\r\n        'margin',\r\n        'totalPnl',\r\n        'totalFundingAccrued',\r\n        'dynamicMargin',\r\n        'initialMargin',\r\n        'maintenanceMargin',\r\n      ]),\r\n      symbolState\r\n        .filter((s, index) => positionState[index].volume !== '0')\r\n        .filter((s) => s.symbol.startsWith(oSymbol))\r\n        .map((s) =>\r\n          toNumberForObject(s, [\r\n          'multiplier',\r\n          'strikePrice',\r\n          'spotPrice',\r\n          'dpmmPrice',\r\n          'underlierVolatility',\r\n          'timePrice',\r\n          'dynamicMarginRatio',\r\n          'intrinsicValue',\r\n          'timeValue',\r\n          'delta',\r\n          'K',\r\n          'tradersNetVolume',\r\n          'tradersNetCost',\r\n          'cumulativePremiumFundingRate',\r\n          'premiumFundingPerSecond',\r\n          ])\r\n        ),\r\n      symbolState\r\n        .filter((s, index) => positionState[index].volume !== '0')\r\n        .filter((s) => s.symbol.startsWith(oSymbol))\r\n        .map((s) =>\r\n          toNumberForObject(positionState[s.symbolId], [\r\n            'volume',\r\n            'cost',\r\n            'lastCumulativeDeltaFundingRate',\r\n            'lastCumulativePremiumFundingRate',\r\n            'pnl',\r\n            'deltaFundingAccrued',\r\n            'premiumFundingAccrued',\r\n          ])\r\n        )\r\n    );\r\n    return res;\r\n  });\r\n  return oracleSymbols.map((i, index) => { \r\n    liquidationPrices[index].underlier = i\r\n    return liquidationPrices[index]\r\n  })\r\n};","/* eslint-disable */\r\nexport const everlastingOptionAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[6]\", \"name\": \"parameters\", \"type\": \"uint256[6]\" }, { \"internalType\": \"address[6]\", \"name\": \"addresses\", \"type\": \"address[6]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"lp\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"lp\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"indexPrice\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeFee\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"uint256\", \"name\": \"strikePrice\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricerAddress\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolMarginMultiplier\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioITM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioOTM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IEverlastingOption.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"pTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" } ], \"name\": \"setPoolMarginMulitplier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\nexport const everlastingOptionViewerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"theoreticalPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetPosition\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" } ], \"name\": \"_calculateDpmmPrice\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"changePercent\", \"type\": \"int256\" } ], \"name\": \"_calculateOptionValueChange\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"change\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spot\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strike\", \"type\": \"int256\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" } ], \"name\": \"_getDynamicInitialMarginRatio\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"_getTraderPortfolio\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"_initState\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"str\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"start\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"end\", \"type\": \"uint256\" } ], \"name\": \"_slice\", \"outputs\": [ { \"internalType\": \"bytes\", \"name\": \"\", \"type\": \"bytes\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolFundingRates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolPrices\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderFunding\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderMargins\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getPoolStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getPriceOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getTraderStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getVolatilityOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\r\n\r\nexport const lTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\nexport const pTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate2\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"addSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getActiveSymbolIds\", \"outputs\": [ { \"internalType\": \"uint256[]\", \"name\": \"\", \"type\": \"uint256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getNumPositionHolders\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getTokenId\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"isActiveSymbolId\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\n/* eslint-enable */","import { ContractBase, deleteIndexedKey, fromWeiForObject } from '../../shared';\r\nimport { everlastingOptionViewerAbi } from './abis';\r\n\r\nexport class EverlastingOptionViewer extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, everlastingOptionViewerAbi);\r\n  }\r\n\r\n  // query\r\n  async _getTraderPortfolio(state, account) {\r\n    const res = await this._call('_getTraderPortfolio', [state, account]);\r\n    return res;\r\n  }\r\n  async _initState(poolAddress, oraclePrices) {\r\n    const res = await this._call('_initState', [poolAddress, oraclePrices]);\r\n    return res;\r\n  }\r\n  async _updateSymbolPrices(state) {\r\n    const res = await this._call('_updateSymbolPrices', [state]);\r\n    return res;\r\n  }\r\n  async getPoolStates(poolAddress, oraclePrices, oracleVolatilities) {\r\n    const res = await this._call('getPoolStates', [poolAddress, oraclePrices, oracleVolatilities]);\r\n    const symbolState = res[2].reduce((acc, i) => {\r\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\r\n        'multiplier',\r\n        'strikePrice',\r\n        'spotPrice',\r\n        'dpmmPrice',\r\n        'dynamicMarginRatio',\r\n        'intrinsicValue',\r\n        'timeValue',\r\n        'delta',\r\n        'alpha',\r\n        'K',\r\n        'tradersNetVolume',\r\n        'tradersNetCost',\r\n        //'cumulativeDeltaFundingRate',\r\n        'cumulativeFundingRate',\r\n        //'deltaFundingPerSecond',\r\n        'fundingPerSecond',\r\n        'volatility',\r\n      ]);\r\n      return acc.concat([symbol])\r\n    }, [])\r\n    return {\r\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\r\n        'initialMarginRatio',\r\n        'maintenanceMarginRatio',\r\n        'fundingPeriod',\r\n        'fundingCoefficient',\r\n        'liquidity',\r\n        'totalDynamicEquity',\r\n        'totalInitialMargin',\r\n      ]),\r\n      symbolState,\r\n    };\r\n  }\r\n  async getTraderStates(poolAddress, account, oraclePrices, oracleVolatilities) {\r\n    const res = await this._call('getTraderStates', [\r\n      poolAddress,\r\n      account,\r\n      oraclePrices,\r\n      oracleVolatilities,\r\n    ]);\r\n    const symbolState = res[2].reduce((acc, i) => {\r\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\r\n        'multiplier',\r\n        'strikePrice',\r\n        'spotPrice',\r\n        'dpmmPrice',\r\n        'dynamicMarginRatio',\r\n        'intrinsicValue',\r\n        'timeValue',\r\n        'delta',\r\n        'alpha',\r\n        'K',\r\n        'tradersNetVolume',\r\n        'tradersNetCost',\r\n        'cumulativeFundingRate',\r\n        //'deltaFundingPerSecond',\r\n        'fundingPerSecond',\r\n        'volatility',\r\n      ]);\r\n      return acc.concat([symbol])\r\n    }, [])\r\n    const positionState = res[3].reduce((acc, i) => {\r\n      const position = fromWeiForObject(deleteIndexedKey(i), [\r\n        'volume',\r\n        'cost',\r\n        'pnl',\r\n        //'lastCumulativeDeltaFundingRate',\r\n        'lastCumulativeFundingRate',\r\n        //'deltaFundingAccrued',\r\n        'fundingAccrued',\r\n      ])\r\n      return acc.concat([position])\r\n    }, [])\r\n    return {\r\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\r\n        'initialMarginRatio',\r\n        'maintenanceMarginRatio',\r\n        'fundingPeriod',\r\n        'fundingCoefficient',\r\n        'liquidity',\r\n        'totalDynamicEquity',\r\n        'totalInitialMargin',\r\n      ]),\r\n      traderState: fromWeiForObject(deleteIndexedKey(res[1]), [\r\n        'margin',\r\n        'totalPnl',\r\n        'totalFundingAccrued',\r\n        'dynamicMargin',\r\n        'initialMargin',\r\n        'maintenanceMargin',\r\n      ]),\r\n      symbolState: symbolState,\r\n      positionState: positionState,\r\n    };\r\n  }\r\n  async getVolatilityOracles(poolAddress) {\r\n    const res = await this._call('getVolatilityOracles', [poolAddress]);\r\n    return res;\r\n  }\r\n  async getPriceOracles(poolAddress) {\r\n    const res = await this._call('getPriceOracles', [poolAddress]);\r\n    return res;\r\n  }\r\n\r\n  // tx\r\n}\r\n","import { ContractBase, fromWei } from '../../shared'\r\nimport { lTokenOptionAbi } from './abis.js'\r\n\r\nexport class LTokenOption extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, lTokenOptionAbi)\r\n  }\r\n\r\n  // query\r\n  // async allowance(owner, spender) {\r\n  //   const res = await this._call('allowance', [owner, spender])\r\n  //   return res\r\n  // }\r\n  async balanceOf(account) {\r\n    const res = await this._call('balanceOf', [account])\r\n    return fromWei(res)\r\n  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return res\r\n  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return res\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return res\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return fromWei(res)\r\n  }\r\n\r\n  // tx\r\n  // async approve(accountAddress, spender, amount) {\r\n  //   return await this._transact('approve', [spender, amount], accountAddress)\r\n  // }\r\n  // async transfer(accountAddress, to, amount) {\r\n  //   return await this._transact('transfer', [to, amount], accountAddress)\r\n  // }\r\n  // async transferFrom(accountAddress, from, to, amount) {\r\n  //   return await this._transact('transferFrom', [from, to, amount], accountAddress)\r\n  // }\r\n\r\n}","import { ContractBase, fromWei } from '../../shared'\r\nimport { pTokenOptionAbi } from './abis.js'\r\n\r\nexport class PTokenOption extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenOptionAbi)\r\n  }\r\n\r\n  // query\r\n  async balanceOf(owner) {\r\n    const res = await this._call('balanceOf', [owner])\r\n    return res\r\n  }\r\n  async exists(owner) {\r\n    const res = await this._call('exists', [owner])\r\n    return res\r\n  }\r\n  async getActiveSymbolIds() {\r\n    const res = await this._call('getActiveSymbolIds', [])\r\n    return res\r\n  }\r\n  async getApproved(tokenId) {\r\n    const res = await this._call('getApproved', [tokenId])\r\n    return res\r\n  }\r\n  async getMargin(owner) {\r\n    const res = await this._call('getMargin', [owner])\r\n    return fromWei(res)\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    const res = await this._call('getNumPositionHolders', [symbolId])\r\n    return res\r\n  }\r\n  async getPosition(owner, symbolId) {\r\n    const res = await this._call('getPosition', [owner, symbolId])\r\n    return {\r\n      volume: fromWei(res[0]),\r\n      cost: fromWei(res[1]),\r\n      lastCumulativePremiumFundingRate: fromWei(res[2]),\r\n    };\r\n }\r\n  async getTokenId(owner) {\r\n    const res = await this._call('getTokenId', [owner])\r\n    return res\r\n  }\r\n  async isActiveSymbolId(symbolId) {\r\n    const res = await this._call('isActiveSymbolId', [symbolId])\r\n    return res\r\n  }\r\n  async isApprovedForAll(owner, operator) {\r\n    const res = await this._call('isApprovedForAll', [owner, operator])\r\n    return res\r\n  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return res\r\n  }\r\n  async ownerOf(tokenId) {\r\n    const res = await this._call('ownerOf', [tokenId])\r\n    return res\r\n  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return res\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return res\r\n  }\r\n  async totalMinted() {\r\n    const res = await this._call('totalMinted', [])\r\n    return res\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return res\r\n  }\r\n\r\n  // tx\r\n  async addMargin(accountAddress, owner, delta) {\r\n    return await this._transact('addMargin', [owner, delta], accountAddress)\r\n  }\r\n  async updateMargin(accountAddress, owner, margin) {\r\n    return await this._transact('updateMargin', [owner, margin], accountAddress)\r\n  }\r\n  async updatePosition(accountAddress, owner, symbolId, position) {\r\n    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\r\n  }\r\n\r\n  // async approve(accountAddress, operator, tokenId) {\r\n  //   return await this._transact('approve', [operator, tokenId], accountAddress)\r\n  // }\r\n  // async safeTransferFrom(accountAddress, from, to, tokenId) {\r\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\r\n  // }\r\n  // async safeTransferFrom(accountAddress, from, to, tokenId, data) {\r\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\r\n  // }\r\n  // async setApprovalForAll(accountAddress, operator, approved) {\r\n  //   return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\r\n  // }\r\n  // async toggleCloseOnly(accountAddress, symbolId) {\r\n  //   return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\r\n  // }\r\n  // async transferFrom(accountAddress, from, to, tokenId) {\r\n  //   return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\r\n  // }\r\n}","import { factory } from '../../shared';\r\nimport { EverlastingOptionViewer } from '../contract/everlasting_option_viewer';\r\nimport { LTokenOption } from '../contract/l_token_option';\r\nimport { PTokenOption } from '../contract/p_token_option';\r\n\r\nexport const everlastingOptionViewerFactory = factory(EverlastingOptionViewer);\r\nexport const lTokenOptionFactory = factory(LTokenOption);\r\nexport const pTokenOptionFactory = factory(PTokenOption);","import { getOracleVolatilitiesForOption } from \"../shared/utils/oracle\"\r\n\r\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms))\r\n\r\nexport const volatilitiesCache = (function() {\r\n  const cache = {}\r\n  const pending = {}\r\n  return {\r\n    async get(symbols=['BTCUSD']){\r\n      const key = symbols.join('_')\r\n      if (\r\n        !Object.keys(cache).includes(key) ||\r\n        Math.floor(Date.now() / 1000) - cache[key].timestamp > 30\r\n      ) {\r\n        const timestamp = Math.floor(Date.now() / 1000);\r\n        // pending is exit\r\n        if (Object.keys(pending).includes(key)) {\r\n          let retry = 10;\r\n          while (retry > 0) {\r\n            await delay(390);\r\n            if (!Object.keys(pending).includes(key)) {\r\n              //console.log('hit pending with cache');\r\n              return cache[key].data;\r\n            }\r\n          }\r\n          if (retry === 0) {\r\n            //console.log('hit pending expired');\r\n            const data = await getOracleVolatilitiesForOption(symbols);\r\n            cache[key] = {\r\n              data,\r\n              timestamp,\r\n            };\r\n            return cache[key].data;\r\n          }\r\n        } else {\r\n          pending[key] = true;\r\n          try {\r\n            //console.log('hit new');\r\n            const data = await getOracleVolatilitiesForOption(symbols);\r\n            cache[key] = {\r\n              data,\r\n              timestamp,\r\n            };\r\n            return cache[key].data;\r\n          } catch (err) {\r\n          } finally {\r\n            delete pending[key];\r\n          }\r\n        }\r\n      } else {\r\n        //console.log('hit cache');\r\n        return cache[key].data;\r\n      }\r\n    }\r\n  }\r\n})()\r\n\r\n// export const volatilityCache = (function() {\r\n//   const cache = {}\r\n//   return {\r\n//     async get(symbol){\r\n//       const key = symbol\r\n//       if (!Object.keys(cache).includes(key) || (Math.floor(Date.now()/1000) - cache[key].timestamp > 30)) {\r\n//         const timestamp = Math.floor(Date.now()/1000)\r\n//         const res = await getPriceInfo(symbol, 'option')\r\n//         const data = deriToNatural(res.volatility).toString()\r\n//         cache[key] = {\r\n//           data,\r\n//           timestamp,\r\n//         }\r\n//         //console.log('new key')\r\n//         return cache[key].data\r\n//       } else {\r\n//         return cache[key].data\r\n//       }\r\n//     }\r\n//   }\r\n// })()\r\n\r\n// export const volatilitiesCache2 = async (symbols) => {\r\n//   return await Promise.all(\r\n//     symbols.reduce((acc, s) => acc.concat(volatilityCache.get(s)), [])\r\n//   )\r\n// }\r\n","import {\r\n  ContractBase,\r\n  deleteIndexedKey,\r\n  fromWeiForObject,\r\n  fromWei,\r\n  naturalToDeri,\r\n  getPoolConfig,\r\n  getPoolViewerConfig,\r\n  isEqualSet,\r\n} from '../../shared';\r\nimport { getVolatilitySymbols } from '../../shared/config/token';\r\nimport { getOracleVolatilitiesForOption } from '../../shared/utils/oracle';\r\nimport {\r\n  everlastingOptionViewerFactory,\r\n  pTokenOptionFactory,\r\n} from '../factory/tokens';\r\nimport { volatilitiesCache } from '../utils';\r\nimport { everlastingOptionAbi } from './abis.js';\r\n\r\nexport class EverlastingOption extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, everlastingOptionAbi);\r\n\r\n    this.config = getPoolConfig(\r\n      contractAddress,\r\n      undefined,\r\n      undefined,\r\n      'option'\r\n    );\r\n    // this.offchainSymbolIds = this.config.offchainSymbolIds;\r\n    // this.offchainSymbols = this.config.offchainSymbols;\r\n    this.volatilitySymbols = this.config.volatilitySymbols;\r\n    this.bTokenAddress = this.config.bToken;\r\n    this.lTokenAddress = this.config.lToken;\r\n    this.pTokenAddress = this.config.pToken;\r\n    this.viewerAddress = getPoolViewerConfig(this.chainId, 'option');\r\n  }\r\n  async _updateConfig() {\r\n    if (!this.pToken) {\r\n      this.pToken = pTokenOptionFactory(this.chainId, this.pTokenAddress);\r\n    }\r\n    if (!this.viewer) {\r\n      this.viewer = everlastingOptionViewerFactory(\r\n        this.chainId,\r\n        this.viewerAddress\r\n      );\r\n    }\r\n\r\n    const activeSymbolIds = await this.pToken.getActiveSymbolIds();\r\n    if (\r\n      !this.activeSymbolIds ||\r\n      !isEqualSet(new Set(this.activeSymbolIds), new Set(activeSymbolIds))\r\n    ) {\r\n      // symbol is updated\r\n      const activeSymbols = await Promise.all(\r\n        activeSymbolIds.reduce((acc, i) => acc.concat([this.getSymbol(i)]), [])\r\n      );\r\n      const symbolVolatilities = (await volatilitiesCache.get(\r\n        activeSymbols.map((s) => s.symbol)\r\n      )).map((v) => v.volatility);\r\n      //console.log(symbolVolatilities)\r\n      const state = await this.viewer.getPoolStates(\r\n        this.contractAddress,\r\n        [],\r\n        symbolVolatilities\r\n      );\r\n      const { symbolState } = state;\r\n\r\n      // update state\r\n      this.activeSymbolIds = activeSymbolIds;\r\n      this.activeSymbols = symbolState.filter((s) =>\r\n        this.activeSymbolIds.includes(s.symbolId)\r\n      );\r\n      // for tx use\r\n      this.volatilitySymbols = getVolatilitySymbols(\r\n        this.activeSymbols.map((s) => s.symbol)\r\n      );\r\n    }\r\n  }\r\n\r\n  // query\r\n  // async OptionPricer() {\r\n  //   const res = await this._call('OptionPricer', []);\r\n  //   return res;\r\n  // }\r\n  // async PmmPricer() {\r\n  //   const res = await this._call('PmmPricer', []);\r\n  //   return res;\r\n  // }\r\n  // async _T() {\r\n  //   const res = await this._call('_T', []);\r\n  //   return fromWei(res);\r\n  // }\r\n  async getAddresses() {\r\n    const res = await this._call('getAddresses', []);\r\n    return deleteIndexedKey(res);\r\n  }\r\n  async getLastTimestamp() {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    return res[1];\r\n  }\r\n  async getLiquidity() {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    return fromWei(res[0]);\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters', []);\r\n    return fromWeiForObject(deleteIndexedKey(res), [\r\n      'initialMarginRatio',\r\n      'liquidationCutRatio',\r\n      'maintenanceMarginRatio',\r\n      'maxLiquidationReward',\r\n      'minLiquidationReward',\r\n      'minPoolMarginRatio',\r\n      'protocolFeeCollectRatio',\r\n    ]);\r\n  }\r\n  // async getProtocolFeeAccrued() {\r\n  //   const res = await this._call('getPoolStateValues', []);\r\n  //   return fromWei(res[2])\r\n  // }\r\n\r\n  async getSymbol(symbolId) {\r\n    const res = await this._call('getSymbol', [symbolId]);\r\n    return fromWeiForObject(deleteIndexedKey(res), [\r\n      'strikePrice',\r\n      'multiplier',\r\n      'feeRatioITM',\r\n      'feeRatioOTM',\r\n      'alpha',\r\n      'tradersNetVolume',\r\n      'tradersNetCost',\r\n      'cumulativeFundingRate',\r\n    ]);\r\n    // return {\r\n    //   symbolId: res[0],\r\n    //   symbol: res[1],\r\n    //   oracleAddress: res[2],\r\n    //   volatilityAddress: res[3],\r\n    //   isCall: res[4],\r\n    //   strikePrice: fromWei(res[5]),\r\n    //   multiplier: fromWei(res[6]),\r\n    //   feeRatio: fromWei(res[7]),\r\n    //   alpha: fromWei(res[8]),\r\n    //   tradersNetVolume: fromWei(res[9]),\r\n    //   tradersNetCost: fromWei(res[10]),\r\n    //   cumulativeFundingRate: fromWei(res[11]),\r\n    // };\r\n  }\r\n  async updateSymbols() {\r\n    if (!this.pToken) {\r\n      this.pToken = pTokenOptionFactory(this.chainId, this.pTokenAddress);\r\n    }\r\n    if (!this.activeSymbolIds) {\r\n      this.activeSymbolIds = await this.pToken.getActiveSymbolIds();\r\n    }\r\n    this.activeSymbols = await Promise.all(\r\n      this.activeSymbolIds.reduce(\r\n        (acc, i) => acc.concat([this.getSymbol(i)]),\r\n        []\r\n      )\r\n    );\r\n    return this.activeSymbols\r\n  }\r\n\r\n  // tx\r\n  async _getVolSymbolPrices() {\r\n    await this._updateConfig();\r\n    let volatilities = [];\r\n    if (this.volatilitySymbols.length > 0) {\r\n      const volatilityInfos = await getOracleVolatilitiesForOption(\r\n        this.activeSymbols.map((s) => s.symbol)\r\n      );\r\n      volatilities = Object.values(volatilityInfos).reduce((acc, p, index) => {\r\n        acc.push([\r\n          this.activeSymbolIds[index],\r\n          p.timestamp,\r\n          p.volatility,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ]);\r\n        return acc;\r\n      }, []);\r\n    }\r\n    //console.log('prices', prices);\r\n    return volatilities;\r\n  }\r\n\r\n  async addLiquidity(accountAddress, bAmount) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [naturalToDeri(bAmount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidity(accountAddress, lShares) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    return await this._transact(\r\n      'removeLiquidity',\r\n      [naturalToDeri(lShares), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async addMargin(accountAddress, bAmount) {\r\n    return await this._transact(\r\n      'addMargin',\r\n      [naturalToDeri(bAmount)],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeMargin(accountAddress, bAmount) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    return await this._transact(\r\n      'removeMargin',\r\n      [naturalToDeri(bAmount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async trade(accountAddress, symbolId, tradeVolume) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(tradeVolume), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n}\r\n","import { ContractBase, fromWei } from '../../shared'\r\n\r\nexport const optionPricerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"S\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"V\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"T\", \"type\": \"int256\" } ], \"name\": \"getEverlastingTimeValue\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"S\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"V\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"T\", \"type\": \"int256\" } ], \"name\": \"getEverlastingTimeValueAndDelta\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" } ]\r\n\r\nexport class OptionPricer extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, optionPricerAbi)\r\n  }\r\n\r\n  async getEverlastingTimeValueAndDelta(S, K, V, T) {\r\n    const res = await this._call('getEverlastingTimeValueAndDelta', [S, K, V, T])\r\n    return {\r\n      timeValue: fromWei(res.timeValue),\r\n      delta: fromWei(res.delta),\r\n    };\r\n  }\r\n}","import { factory } from '../../shared';\r\nimport { EverlastingOption } from '../contract/everlasting_option';\r\nimport { OptionPricer } from '../contract/option_pricer';\r\n\r\nexport const everlastingOptionFactory = factory(EverlastingOption);\r\nexport const optionPricerFactory = factory(OptionPricer);","import { getPoolConfig } from '../../shared/config';\r\nimport { catchApiError, bg } from '../../shared/utils';\r\nimport {\r\n  calculateMaxRemovableShares,\r\n  calculateShareValue,\r\n} from '../../v1/calculation';\r\nimport { everlastingOptionFactory } from '../factory/pool';\r\nimport {\r\n  lTokenOptionFactory,\r\n} from '../factory/tokens';\r\nimport { volatilitiesCache } from '../utils';\r\n\r\nconst _getLiquidityInfo = async (chainId, poolAddress, accountAddress) => {\r\n  const { lToken: lTokenAddress } = getPoolConfig(\r\n    poolAddress,\r\n    '0',\r\n    '0',\r\n    'option'\r\n  );\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  await optionPool._updateConfig()\r\n  const lToken = lTokenOptionFactory(chainId, lTokenAddress);\r\n  const [\r\n    lTokenBalance,\r\n    lTokenTotalSupply,\r\n  ] = await Promise.all([\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n  ]);\r\n\r\n  const symbols = optionPool.activeSymbols\r\n  const symbolVolatilities = await volatilitiesCache.get(symbols.map((s) => s.symbol))\r\n  const state = await optionPool.viewer.getPoolStates(poolAddress, [], symbolVolatilities.map((v) => v.volatility))\r\n  const { poolState } = state;\r\n  const { initialMarginRatio, liquidity, totalDynamicEquity } = poolState;\r\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0));\r\n  const value = symbols.reduce(\r\n    (acc, s) =>\r\n      acc.plus(bg(s.tradersNetVolume).times(s.strikePrice).times(s.multiplier)),\r\n    bg(0)\r\n  );\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: calculateShareValue(\r\n      lTokenTotalSupply,\r\n      totalDynamicEquity\r\n    ).toString(),\r\n    maxRemovableShares: calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      value,\r\n      cost,\r\n      bg(initialMarginRatio).times(10)\r\n    ).toString(),\r\n  };\r\n};\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  return catchApiError(\r\n    _getLiquidityInfo,\r\n    [chainId, poolAddress, accountAddress],\r\n    'getLiquidityInfo',\r\n    {\r\n      totalSupply: '',\r\n      poolLiquidity: '',\r\n      shares: '',\r\n      shareValue: '',\r\n      maxRemovableShares: '',\r\n    }\r\n  );\r\n};\r\n","import { catchTxApiError } from '../../shared/utils';\r\nimport { everlastingOptionFactory } from '../factory/pool.js';\r\n\r\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\r\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\r\n    return await optionPool.addLiquidity(accountAddress, amount)\r\n  }, args)\r\n}\r\n\r\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\r\n    return await optionPool.removeLiquidity(accountAddress, amount, isMaximum)\r\n  }, args)\r\n}\r\n","/*\r\n    1. Calculate the cost for user input volume\r\n    2. Calculate the final price if user input volume is traded\r\n*/\r\n\r\nexport function getMidPrice(tradersNetVolume, theoreticalPrice, K) {\r\n    return theoreticalPrice * (1 + K * tradersNetVolume)\r\n}\r\n\r\nexport function queryTradePMM(tradersNetVolume, theoreticalPrice, K, volume) {\r\n    return theoreticalPrice * (volume + ((tradersNetVolume + volume) ** 2 - tradersNetVolume ** 2) * K / 2)\r\n}\r\n","import {\r\n  bg,\r\n  max,\r\n  bTokenFactory,\r\n  catchApiError,\r\n  getPoolConfig,\r\n  fromWei,\r\n} from '../../shared';\r\nimport { fundingRateCache } from '../../shared/api/api_globals';\r\nimport { wrappedOracleFactory } from '../../shared/factory/oracle';\r\nimport { queryTradePMM } from '../calculation/PMM2';\r\nimport {\r\n  dynamicInitialMarginRatio,\r\n  dynamicInitialPoolMarginRatio,\r\n  getAverageEntryPrice,\r\n  //getDeltaFundingPerSecond,\r\n  getLiquidationPrice,\r\n  getLiquidationPrices,\r\n  getMarginHeldBySymbol,\r\n} from '../calculation/trade';\r\nimport { everlastingOptionFactory } from '../factory/pool';\r\nimport { volatilitiesCache } from '../utils';\r\nimport { getIndexInfo } from '../../shared/config/token';\r\n\r\n//\r\nconst SECONDS_IN_A_DAY = 86400;\r\n\r\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'option');\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool._updateConfig();\r\n      const [symbolInfo2, poolInfo2] = await Promise.all([\r\n        optionPool.getSymbol(symbolId),\r\n        optionPool.getParameters(),\r\n      ]);\r\n\r\n      const symbols = optionPool.activeSymbols\r\n      const symbolVolatilities = await volatilitiesCache.get(\r\n        symbols.map((s) => s.symbol)\r\n      );\r\n      const state = await optionPool.viewer.getPoolStates(\r\n        poolAddress,\r\n        [],\r\n        symbolVolatilities.map((v) => v.volatility)\r\n      );\r\n      const { symbolState } = state;\r\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\r\n      const symbolInfo = symbolState[symbolIndex];\r\n      const { dynamicMarginRatio, isCall } =\r\n        symbolInfo;\r\n      const { symbol, multiplier, feeRatioOTM, feeRatioITM } = symbolInfo2;\r\n      const {\r\n        initialMarginRatio,\r\n        maintenanceMarginRatio,\r\n        minLiquidationReward,\r\n        maxLiquidationReward,\r\n        liquidationCutRatio,\r\n        protocolFeeCollectRatio,\r\n      } = poolInfo2;\r\n\r\n      return {\r\n        symbol,\r\n        bTokenSymbol,\r\n        multiplier: multiplier.toString(),\r\n        feeRatioOTM: feeRatioOTM.toString(),\r\n        feeRatioITM: feeRatioITM.toString(),\r\n        //minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n        initialMarginRatioOrigin: initialMarginRatio.toString(),\r\n        initialMarginRatio: dynamicMarginRatio.toString(),\r\n        maintenanceMarginRatioOrigin: maintenanceMarginRatio.toString(),\r\n        maintenanceMarginRatio: bg(dynamicMarginRatio)\r\n          .times(maintenanceMarginRatio)\r\n          .div(initialMarginRatio)\r\n          .toString(),\r\n        minLiquidationReward: minLiquidationReward.toString(),\r\n        maxLiquidationReward: maxLiquidationReward.toString(),\r\n        liquidationCutRatio: liquidationCutRatio.toString(),\r\n        protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n        isCall: isCall,\r\n        indexConstituents: getIndexInfo(symbol),\r\n      };\r\n    },\r\n    args,\r\n    'getSpecification',\r\n    {\r\n      symbol: '',\r\n      bTokenSymbol: '',\r\n      multiplier: '',\r\n      feeRatio: '',\r\n      //minPoolMarginRatio: '',\r\n      initialMarginRatio: '',\r\n      maintenanceMarginRatio: '',\r\n      minLiquidationReward: '',\r\n      maxLiquidationReward: '',\r\n      liquidationCutRatio: '',\r\n      protocolFeeCollectRatio: '',\r\n      indexConstituents: { url: '', tokens: [] },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getPositionInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress, symbolId) => {\r\n      const { symbol: symbolName} = getPoolConfig(\r\n        poolAddress,\r\n        undefined,\r\n        symbolId,\r\n        'option'\r\n      );\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool._updateConfig();\r\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\r\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\r\n      const symbols = optionPool.activeSymbols\r\n      let symbolVolatilities = []\r\n      if (symbols && symbols.length > 0) {\r\n        [symbolVolatilities] = await Promise.all([\r\n          volatilitiesCache.get(\r\n            symbols.map((s) => s.symbol)\r\n          ),\r\n          //volatilityCache.get(`VOL-${normalizeOptionSymbol(symbolName)}`),\r\n        ]);\r\n      }\r\n      const state = await optionPool.viewer.getTraderStates(\r\n        poolAddress,\r\n        accountAddress,\r\n        [],\r\n        symbolVolatilities.map((v) => v.volatility)\r\n      );\r\n      const { poolState, symbolState, traderState, positionState } = state;\r\n      const { initialMarginRatio } = poolState;\r\n      const { margin, totalPnl, initialMargin } = traderState;\r\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\r\n      const volPrice = fromWei(symbolVolatilities[symbolIndex].volatility)\r\n      const symbol = symbolState[symbolIndex];\r\n      const position = positionState[symbolIndex];\r\n      const price = await wrappedOracleFactory(\r\n        chainId,\r\n        symbol.oracleAddress\r\n      ).getPrice();\r\n      return {\r\n        symbolId,\r\n        symbol: symbolName,\r\n        price,\r\n        strikePrice: symbol.strikePrice.toString(),\r\n        timePrice: symbol.timeValue.toString(),\r\n        markPrice: symbol.dpmmPrice.toString(),\r\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\r\n        averageEntryPrice: getAverageEntryPrice(position, symbol),\r\n        margin: margin.toString(),\r\n        marginHeld: initialMargin.toString(),\r\n        marginHeldBySymbol: getMarginHeldBySymbol(\r\n          position.volume,\r\n          price,\r\n          symbol,\r\n          initialMarginRatio\r\n        ).toString(),\r\n        unrealizedPnl: totalPnl,\r\n        unrealizedPnlList: symbolState\r\n          .filter((s, index) => positionState[index].pnl !== '0')\r\n          .map((s) => [s.symbol, positionState[symbolState.findIndex((oS) => oS.symbolId === s.symbolId)].pnl]),\r\n        premiumFundingAccrued: positionState[symbolIndex].fundingAccrued,\r\n        isCall: symbol.isCall,\r\n        volatility: bg(volPrice).times(100).toString(),\r\n        liquidationPrice: getLiquidationPrice(state, symbolId),\r\n      };\r\n    },\r\n    args,\r\n    'getPositionInfo',\r\n    {\r\n      price: '',\r\n      strikePrice: '',\r\n      timePrice: '',\r\n      volume: '',\r\n      averageEntryPrice: '',\r\n      margin: '',\r\n      marginHeld: '',\r\n      marginHeldBySymbol: '',\r\n      unrealizedPnl: '',\r\n      unrealizedPnlList: [],\r\n      premiumFundingAccrued: '',\r\n      liquidationPrice: '',\r\n      volatility: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getPositionInfos = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool._updateConfig();\r\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\r\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\r\n      const symbols = optionPool.activeSymbols\r\n      let [symbolVolatilities] = await Promise.all([\r\n        volatilitiesCache.get(\r\n          symbols.map((s) => s.symbol)\r\n        ),\r\n        //volatilitiesCache.(symbols.map((s) => s.symbol)),\r\n      ]);\r\n      let volPrices = symbolVolatilities.map((v) => fromWei(v.volatility))\r\n      symbolVolatilities = symbolVolatilities.map((v) => v.volatility)\r\n      const state = await optionPool.viewer.getTraderStates(\r\n        poolAddress,\r\n        accountAddress,\r\n        [],\r\n        symbolVolatilities\r\n      );\r\n      const { poolState, traderState, positionState, symbolState } = state;\r\n      const { initialMarginRatio } = poolState;\r\n      const { margin, initialMargin } = traderState;\r\n      const prices = await Promise.all(\r\n        symbols.reduce(\r\n          (acc, s) =>\r\n            acc.concat([\r\n              wrappedOracleFactory(chainId, s.oracleAddress).getPrice(),\r\n            ]),\r\n          []\r\n        )\r\n      );\r\n\r\n      const liquidationPrices = getLiquidationPrices(state);\r\n      return symbols\r\n        .filter((s) => positionState[s.symbolId].volume !== '0')\r\n        .map((s) => {\r\n          const vIndex = symbolState.findIndex(\r\n            (oS) => oS.symbolId === s.symbolId\r\n          );\r\n          return {\r\n            symbolId: s.symbolId,\r\n            symbol: s.symbol,\r\n            price: prices[vIndex],\r\n            // strikePrice: s.strikePrice.toString(),\r\n            // timePrice: s.timeValue.toString(),\r\n            volume: bg(positionState[vIndex].volume)\r\n              .times(symbolState[vIndex].multiplier)\r\n              .toString(),\r\n            averageEntryPrice: getAverageEntryPrice(positionState[vIndex], s),\r\n            margin: margin.toString(),\r\n            marginHeld: initialMargin.toString(),\r\n            marginHeldBySymbol: getMarginHeldBySymbol(\r\n              positionState[vIndex].volume,\r\n              prices[vIndex],\r\n              s,\r\n              initialMarginRatio\r\n            ).toString(),\r\n            unrealizedPnl: positionState[vIndex].pnl,\r\n            premiumFundingAccrued: positionState[vIndex].fundingAccrued,\r\n            isCall: s.isCall,\r\n            volatility: bg(volPrices[vIndex]).times(100).toString(),\r\n            liquidationPrice: liquidationPrices,\r\n          };\r\n        });\r\n    },\r\n    args,\r\n    'getPositionInfos',\r\n    []\r\n  );\r\n};\r\n\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      const { bToken: bTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        '0',\r\n        'option'\r\n      );\r\n      const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(\r\n        accountAddress\r\n      );\r\n      return balance.toString();\r\n    },\r\n    args,\r\n    'getWalletBalance',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      const { bToken: bTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        '0',\r\n        'option'\r\n      );\r\n      const bToken = bTokenFactory(chainId, bTokenAddress);\r\n      return await bToken.isUnlocked(accountAddress, poolAddress);\r\n    },\r\n    args,\r\n    'isUnlocked',\r\n    ''\r\n  );\r\n};\r\n\r\nconst _getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  //const { symbol } = getPoolConfig(poolAddress, undefined, symbolId, 'option')\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  await optionPool._updateConfig();\r\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\r\n  //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\r\n  const symbols = optionPool.activeSymbols;\r\n  const symbolVolatilities = (\r\n    await volatilitiesCache.get(symbols.map((s) => s.symbol))\r\n  ).map((v) => v.volatility);\r\n  const state = await optionPool.viewer.getPoolStates(\r\n    poolAddress,\r\n    [],\r\n    symbolVolatilities\r\n  );\r\n  const { poolState, symbolState } = state;\r\n  const { initialMarginRatio, totalDynamicEquity, liquidity } = poolState;\r\n  const curSymbolIndex = optionPool.activeSymbolIds.indexOf(symbolId);\r\n  if (curSymbolIndex < 0) {\r\n    throw new Error(\r\n      `getFundingRate(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n    );\r\n  }\r\n  const symbolInfo = symbolState[curSymbolIndex];\r\n\r\n  const prices = await Promise.all(\r\n    symbolState.reduce(\r\n      (acc, s) =>\r\n        acc.concat([wrappedOracleFactory(chainId, s.oracleAddress).getPrice()]),\r\n      []\r\n    )\r\n  );\r\n\r\n  const liquidityUsedInAmount = symbolState.reduce((acc, s, index) => {\r\n    return acc.plus(\r\n      bg(s.tradersNetVolume)\r\n        .times(prices[index])\r\n        .times(s.multiplier)\r\n        .abs()\r\n        .times(\r\n          dynamicInitialPoolMarginRatio(\r\n            prices[index],\r\n            s.strikePrice,\r\n            s.isCall,\r\n            initialMarginRatio\r\n          )\r\n        )\r\n    );\r\n  }, bg(0));\r\n\r\n  const res = {\r\n    initialMarginRatio,\r\n    symbolIds: optionPool.activeSymbolIds,\r\n    symbols: symbolState,\r\n    liquidity,\r\n    totalDynamicEquity,\r\n    prices,\r\n    liquidityUsed: bg(liquidity).eq(0) ? bg(0) : liquidityUsedInAmount.div(liquidity),\r\n    premiumFunding: bg(symbolInfo.fundingPerSecond)\r\n      .div(symbolInfo.multiplier)\r\n      .times(SECONDS_IN_A_DAY)\r\n      .toString(),\r\n    premiumFundingPerSecond: bg(symbolInfo.fundingPerSecond).div(\r\n      symbolInfo.multiplier\r\n    ),\r\n  };\r\n  return res;\r\n};\r\n\r\nexport const getEstimatedFee = async (\r\n  chainId,\r\n  poolAddress,\r\n  volume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, volume, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, volume, symbolId) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      const symbolInfo = await optionPool.getSymbol(symbolId);\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      const { symbolIds, prices, symbols } = res;\r\n      const curSymbolIndex = symbolIds.indexOf(symbolId);\r\n      if (curSymbolIndex < 0) {\r\n        throw new Error(\r\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n        );\r\n      }\r\n      const symbol = symbols[curSymbolIndex];\r\n      //console.log(ivolume, prices[curSymbolIndex], symbol, intrinsicPrice.toString())\r\n      let fee\r\n      const intrinsicValue = symbol.isCall\r\n        ? max(bg(symbol.spotPrice).minus(symbol.strikePrice), bg(0))\r\n        : max(bg(symbol.strikePrice).minus(symbol.spotPrice), bg(0));\r\n      if (bg(intrinsicValue).gt(0)) {\r\n        fee = bg(volume)\r\n          .abs()\r\n          .times(symbol.multiplier)\r\n          .times(symbol.spotPrice)\r\n          .times(symbolInfo.feeRatioITM)\r\n          .toString();\r\n      } else {\r\n        fee = bg(volume)\r\n          .abs()\r\n          .times(symbol.multiplier)\r\n          .times(symbol.timeValue)\r\n          .times(symbolInfo.feeRatioOTM)\r\n          .toString();\r\n      }\r\n      return fee\r\n    },\r\n    args,\r\n    'getFundingFee',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId\r\n) => {\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\r\n  const [parameterInfo, symbol] = await Promise.all([\r\n    optionPool.getParameters(),\r\n    optionPool.getSymbol(symbolId),\r\n  ]);\r\n  const price = await wrappedOracleFactory(\r\n    chainId,\r\n    symbol.oracleAddress\r\n  ).getPrice();\r\n  const { initialMarginRatio } = parameterInfo;\r\n  const marginRatio = dynamicInitialMarginRatio(\r\n    price,\r\n    symbol.strikePrice,\r\n    symbol.isCall,\r\n    initialMarginRatio\r\n  );\r\n  //console.log(marginRatio, symbol.multiplier, price, volume)\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(symbol.multiplier)\r\n    .times(marginRatio);\r\n};\r\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\r\n  return fundingRateCache.get(chainId, poolAddress, symbolId);\r\n};\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      const res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      const curSymbolIndex = res.symbolIds.indexOf(symbolId);\r\n      if (curSymbolIndex < 0) {\r\n        throw new Error(\r\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n        );\r\n      }\r\n      return {\r\n        premiumFunding0: bg(res.premiumFunding).toString(),\r\n        premiumFundingPerSecond: res.premiumFundingPerSecond.toString(),\r\n        liquidity: res.liquidity.toString(),\r\n        volume: '-',\r\n        tradersNetVolume: res.symbols[curSymbolIndex].tradersNetVolume,\r\n      };\r\n    },\r\n    args,\r\n    'getFundingRate',\r\n    {\r\n      premiumFunding0: '',\r\n      premiumFundingPerSecond: '',\r\n      liquidity: '',\r\n      volume: '-',\r\n      tradersNetVolume: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\r\n  return catchApiError(\r\n    async () => {\r\n      // let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      // if (!res) {\r\n      //   res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      //   fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      // }\r\n      // const { symbolIds, symbols, prices, totalDynamicEquity } = res;\r\n      // const curSymbolIndex = symbolIds.indexOf(symbolId);\r\n      // if (curSymbolIndex < 0) {\r\n      //   throw new Error(\r\n      //     `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n      //   );\r\n      // }\r\n      // let symbol = symbols[curSymbolIndex];\r\n      // //console.log('symbol.tradersNetVolume0', symbol.tradersNetVolume)\r\n      // //symbol.tradersNetVolume = bg(symbol.tradersNetVolume).plus(newNetVolume).toString()\r\n      // //console.log('symbol.tradersNetVolume1', symbol.tradersNetVolume)\r\n      // const deltaFunding1 = getdeltaFundingPerSecond(\r\n      //   symbol,\r\n      //   symbol.delta,\r\n      //   prices[curSymbolIndex],\r\n      //   totalDynamicEquity,\r\n      //   newNetVolume\r\n      // );\r\n\r\n      return {\r\n        // deltaFunding1: bg(deltaFunding1)\r\n        //   .div(symbol.multiplier)\r\n        //   .times(SECONDS_IN_A_DAY)\r\n        //   .toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedFundingRate',\r\n    {\r\n    }\r\n  );\r\n};\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      }\r\n      return {\r\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getLiquidityUsed',\r\n    {\r\n      liquidityUsed0: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      }\r\n      const { symbolIds, symbols, prices, liquidity, initialMarginRatio } = res;\r\n\r\n      const liquidityUsedInAmount = symbols.reduce((acc, s, index) => {\r\n        if (symbolIds[index] == symbolId) {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .plus(newNetVolume)\r\n              .times(prices[index])\r\n              .times(s.multiplier)\r\n              .abs()\r\n              .times(\r\n                dynamicInitialPoolMarginRatio(\r\n                  prices[index],\r\n                  s.strikePrice,\r\n                  s.isCall,\r\n                  initialMarginRatio\r\n                )\r\n              )\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .times(prices[index])\r\n              .times(s.multiplier)\r\n              .abs()\r\n              .times(\r\n                dynamicInitialPoolMarginRatio(\r\n                  prices[index],\r\n                  s.strikePrice,\r\n                  s.isCall,\r\n                  initialMarginRatio\r\n                )\r\n              )\r\n          );\r\n        }\r\n      }, bg(0));\r\n      return {\r\n        liquidityUsed1: bg(liquidity).eq(0) ? '0' : liquidityUsedInAmount\r\n          .div(liquidity)\r\n          .times(100)\r\n          .toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedLiquidityUsed',\r\n    {\r\n      liquidityUsed1: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getEstimatedTimePrice = (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool._updateConfig();\r\n      const symbolVolatilities = (await volatilitiesCache.get(\r\n        optionPool.activeSymbols.map((s) => s.symbol)\r\n      )).map((v) => v.volatility);\r\n      const state = await optionPool.viewer.getPoolStates(\r\n        poolAddress,\r\n        [],\r\n        symbolVolatilities\r\n      );\r\n      const { symbolState } = state;\r\n\r\n      //const { liquidity } = poolState;\r\n      const index = symbolState.findIndex((s) => s.symbolId === symbolId);\r\n      if (index > -1) {\r\n        const {\r\n          tradersNetVolume,\r\n          multiplier,\r\n          intrinsicValue,\r\n          timeValue,\r\n          K,\r\n        } = symbolState[index];\r\n        //console.log(tradersNetVolume, multiplier, liquidity, quoteBalanceOffset, timePrice, K)\r\n        const args = [\r\n          bg(tradersNetVolume).times(multiplier).toNumber(),\r\n          bg(intrinsicValue).plus(timeValue).toNumber(),\r\n          bg(K).toNumber(),\r\n          bg(newNetVolume).times(multiplier).toNumber(),\r\n        ]\r\n\r\n        const res = queryTradePMM(...args);\r\n        //console.log('res', res)\r\n        return bg(res).div(newNetVolume).div(multiplier).toString();\r\n      } else {\r\n        console.log(\r\n          `invalid symbolId(${symbolId}) for the pool(${poolAddress})`\r\n        );\r\n        return '';\r\n      }\r\n    },\r\n    args,\r\n    'getEstimatedMarkPrice',\r\n    ''\r\n  );\r\n};\r\n","import { getPoolConfig } from '../../shared/config';\r\nimport { bTokenFactory } from '../../shared/factory';\r\nimport { catchTxApiError, bg } from '../../shared/utils';\r\n//import { isOrderValid } from '../../v2/calculation';\r\nimport { everlastingOptionFactory } from '../factory/pool.js';\r\nimport { pTokenOptionFactory} from '../factory/tokens';\r\n\r\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\r\n    const { bToken: bTokenAddress } = getPoolConfig(\r\n      poolAddress,\r\n      '0',\r\n      '0',\r\n      'option'\r\n    );\r\n    const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    return await bToken.unlock(accountAddress, poolAddress);\r\n  }, args);\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      return await optionPool.addMargin(accountAddress, amount);\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  isMaximum = false\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      return await optionPool.removeMargin(\r\n        accountAddress,\r\n        amount,\r\n        isMaximum\r\n      );\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\r\n      // const { pToken: pTokenAddress } = getPoolConfig(\r\n      //   poolAddress,\r\n      //   '0',\r\n      //   '0',\r\n      //   'option'\r\n      // );\r\n      // const pToken = pTokenOptionFactory(chainId, pTokenAddress);\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      // const [parameterInfo, liquidity, margin, symbolIds] = await Promise.all([\r\n      //   optionPool.getParameters(),\r\n      //   optionPool.getLiquidity(),\r\n      //   pToken.getMargin(accountAddress),\r\n      //   pToken.getActiveSymbolIds(),\r\n      // ]);\r\n      // no minInitialMarginRatio in option\r\n      // const { initialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n      // let promises = [];\r\n\r\n      // for (let i = 0; i < symbolIds.length; i++) {\r\n      //   promises.push(optionPool.getSymbol(symbolIds[i]));\r\n      // }\r\n      // const symbols = await Promise.all(promises);\r\n\r\n      // promises = [];\r\n      // for (let i = 0; i < symbolIds.length; i++) {\r\n      //   promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n      // }\r\n      // const positions = await Promise.all(promises);\r\n\r\n      // let marginHeld = symbols.reduce((acc, s, index) => {\r\n      //   if (index === parseInt(symbolId)) {\r\n      //     return acc.plus(\r\n      //       bg(s.price)\r\n      //         .times(s.multiplier)\r\n      //         .times(bg(positions[index]).volume.plus(newVolume))\r\n      //         .abs()\r\n      //     );\r\n      //   } else {\r\n      //     return acc.plus(\r\n      //       bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\r\n      //     );\r\n      //   }\r\n      // }, bg(0));\r\n      // marginHeld = marginHeld.times(initialMarginRatio);\r\n\r\n      // let liquidityUsed = symbols.reduce((acc, s, index) => {\r\n      //   if (index === parseInt(symbolId)) {\r\n      //     return acc.plus(\r\n      //       bg(s.tradersNetVolume)\r\n      //         .plus(newVolume)\r\n      //         .times(s.price)\r\n      //         .times(s.multiplier)\r\n      //         .abs()\r\n      //     );\r\n      //   } else {\r\n      //     return acc.plus(\r\n      //       bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\r\n      //     );\r\n      //   }\r\n      // }, bg(0));\r\n      // liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n\r\n      // const orderValidation = isOrderValid(\r\n      //   margin,\r\n      //   marginHeld,\r\n      //   liquidity,\r\n      //   liquidityUsed\r\n      // );\r\n      // if (orderValidation.success) {\r\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\r\n      // } else {\r\n      //   throw new Error(orderValidation.error);\r\n      // }\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, symbolId) => {\r\n      const { pToken: pTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        '0',\r\n        'option'\r\n      );\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      const pToken = pTokenOptionFactory(chainId, pTokenAddress);\r\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n      if (!bg(volume).eq(0)) {\r\n        const newVolume = bg(volume).negated().toString();\r\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error('no position to close');\r\n      }\r\n    },\r\n    args\r\n  );\r\n};\r\n","import { deriToNatural, naturalToDeri, bg, getBlockInfo, getPastEvents, getHttpBase, fetchJson, max } from '../../shared/utils';\r\nimport {\r\n  getPoolConfig,\r\n} from '../../shared/config';\r\nimport { everlastingOptionFactory, optionPricerFactory } from '../factory/pool';\r\n\r\nconst processTradeEvent = async (\r\n  chainId,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  bTokenSymbol,\r\n  symbolIdList,\r\n  symbols,\r\n  pricer,\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const tradeCost = deriToNatural(info.tradeCost);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const volume = tradeVolume.abs();\r\n  const symbolId = info.symbolId\r\n  const volatility = info.volatility\r\n  const index = symbolIdList.indexOf(symbolId)\r\n  const price = bg(tradeCost).div(bg(tradeVolume).times(symbols[index].multiplier))\r\n  const indexPrice = deriToNatural(info.spotPrice)\r\n\r\n  const intrinsicValue = symbols[index].isCall\r\n    ? max(indexPrice.minus(symbols[index].strikePrice), bg(0))\r\n    : max(bg(symbols[index].strikePrice).minus(indexPrice), bg(0));\r\n  let timeValue = '0';\r\n  if (intrinsicValue.lte(0)) {\r\n    const res  = await pricer.getEverlastingTimeValueAndDelta(\r\n      naturalToDeri(indexPrice),\r\n      naturalToDeri(symbols[index].strikePrice),\r\n      volatility,\r\n      naturalToDeri(bg(1).div(365).toString())\r\n    );\r\n    timeValue = res.timeValue\r\n  }\r\n  if (index > -1) {\r\n    return {\r\n      direction,\r\n      baseToken: bTokenSymbol,\r\n      symbolId,\r\n      symbol: symbols[index].symbol,\r\n      price: price.toString(),\r\n      indexPrice: indexPrice.toString(),\r\n      volume: volume.times(symbols[index].multiplier).toString(),\r\n      transactionHash: txHash.toString(),\r\n      notional: tradeVolume\r\n        .abs()\r\n        .times(indexPrice)\r\n        .times(multiplier[index])\r\n        .toString(),\r\n      contractValue: tradeVolume\r\n        .abs()\r\n        .times(price)\r\n        .times(multiplier[index])\r\n        .toString(),\r\n      transactionFee: intrinsicValue.gt(0)\r\n        ? volume\r\n            .times(symbols[index].multiplier)\r\n            .times(indexPrice)\r\n            .times(symbols[index].feeRatioITM)\r\n            .toString()\r\n        : volume\r\n            .times(symbols[index].multiplier)\r\n            .times(timeValue)\r\n            .times(symbols[index].feeRatioOTM)\r\n            .toString(),\r\n      time,\r\n    };\r\n  } else {\r\n    return null\r\n  }\r\n};\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  // const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  //console.log('symbolIdList', symbolIdList);\r\n  const { bTokenSymbol, pricer:pricerAddress } = getPoolConfig(poolAddress, undefined, undefined, 'option')\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  const pricer = optionPricerFactory(chainId, pricerAddress)\r\n  const [toBlock, ] = await Promise.all([\r\n    getBlockInfo(chainId, 'latest'),\r\n    optionPool._updateConfig(),\r\n  ]);\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n\r\n  let promises= []\r\n  for (let i=0; i<optionPool.activeSymbolIds.length; i++) {\r\n    promises.push(optionPool.getSymbol(optionPool.activeSymbolIds[i].toString()))\r\n  }\r\n  let symbols = await Promise.all(promises)\r\n  //let symbols = optionPool.activeSymbols\r\n  const multiplier = symbols.map((i) => i.multiplier.toString());\r\n\r\n  const filters =  { account: accountAddress }\r\n  let events = await getPastEvents(chainId, optionPool.contract,\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  let result = [];\r\n  //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await processTradeEvent(\r\n      chainId,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      bTokenSymbol,\r\n      optionPool.activeSymbolIds,\r\n      symbols,\r\n      pricer,\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  result = result.filter((tr) => tr !== null)\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock, tradeHistory = [];\r\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\r\n    const [res] = await Promise.all([\r\n      fetchJson(\r\n        `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n      ),\r\n      optionPool._updateConfig()\r\n    ]);\r\n    if (res && res.success) {\r\n      //console.log('his res', res.data)\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    const symbols = optionPool.activeSymbols\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .filter((i) => !(i.direction === 'LIQUIDATION' && i.symbolId === '0'))\r\n        .map((i) => {\r\n          const index = symbols.findIndex((s) => s.symbolId === i.symbolId)\r\n          if (index > -1 && i.direction !== 'LIQUIDATION') {\r\n            return {\r\n              direction: i.direction.trim(),\r\n              baseToken: i.baseToken.trim(),\r\n              symbolId: i.symbolId,\r\n              symbol: i.symbol,\r\n              price: deriToNatural(i.price).div(symbols[index].multiplier).toString(),\r\n              indexPrice: deriToNatural(i.indexPrice).toString(),\r\n              notional: deriToNatural(i.notional).toString(),\r\n              contractValue: deriToNatural(i.contractValue).toString(),\r\n              volume: deriToNatural(i.volume).times(symbols[index].multiplier).toString(),\r\n              transactionFee: deriToNatural(i.transactionFee).toString(),\r\n              transactionHash: i.transactionHash,\r\n              time: i.time.toString(),\r\n            };\r\n          }  else if (i.direction === 'LIQUIDATION') {\r\n            if (\r\n              i.volume !== '' &&\r\n              i.volume.indexOf(',') > -1 &&\r\n              !i.price.startsWith('NaN')\r\n            ) {\r\n              const ids = i.volume.split(',').reduce((acc, v, index) => {\r\n                if (v !== '0') {\r\n                  return acc.concat([index]);\r\n                } else {\r\n                  return acc;\r\n                }\r\n              }, []);\r\n              const prices = i.price.split(',').map((s) => deriToNatural(s));\r\n              const volumes = i.volume.split(',').map((v) => deriToNatural(v));\r\n              const res = ids.map((id) => {\r\n                return {\r\n                  direction: i.direction.trim(),\r\n                  baseToken: i.baseToken.trim(),\r\n                  symbolId: id.toString(),\r\n                  symbol: symbols[id].symbol,\r\n                  volume: volumes[id]\r\n                    .times(symbols[id].multiplier)\r\n                    .abs()\r\n                    .toString(),\r\n                  price: prices[id].toString(),\r\n                  indexPrice: '',\r\n                  notional: '',\r\n                  contractValue: volumes[id]\r\n                    .abs()\r\n                    .times(prices[id])\r\n                    .times(symbols[id].multiplier)\r\n                    .toString(),\r\n                  transactionFee: '0',\r\n                  transactionHash: i.transactionHash,\r\n                  time: i.time.toString(),\r\n                };\r\n              });\r\n              return res;\r\n            } else {\r\n              return {\r\n                direction: i.direction.trim(),\r\n                baseToken: i.baseToken.trim(),\r\n                symbolId: '',\r\n                symbol: '',\r\n                volume: '',\r\n                price: '',\r\n                indexPrice: '',\r\n                notional: '',\r\n                contractValue: '',\r\n                transactionFee: '0',\r\n                transactionHash: i.transactionHash,\r\n                time: i.time.toString(),\r\n              };\r\n            }\r\n          } else {\r\n            // i.symbolId is not in activeSymbols\r\n            return null\r\n          }\r\n        }).flat();\r\n    }\r\n    tradeHistory = tradeHistory.filter((tr) => tr !== null)\r\n    // fetch tradeHistory on the block with fromBlock from rest api\r\n    if (tradeFromBlock !== 0) {\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n      const {initialBlock} = getPoolConfig(poolAddress, undefined, symbolId, 'option')\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch(err) {\r\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\r\n  }\r\n  return []\r\n};\r\n","import { catchTxApiError, naturalToDeri, toChecksumAddress } from \"../../shared\"\r\nimport { normalizeChainId } from \"../../shared/utils/validate\";\r\nimport { getOracleFactoryChainlinkConfig, getPoolV2LiteManagerConfig } from \"../config\";\r\nimport { chainlinkFeedFactory, oracleFactoryChainlinkFactory, perpetualPoolLiteFactory, perpetualPoolLiteManagerFactory } from \"../factory\";\r\n\r\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\r\nexport const createPool = async(...args) => {\r\n  return catchTxApiError(async(chainId, accountAddress, parameters, bTokenAddress, pairedTokenAddress) => {\r\n      chainId = normalizeChainId(chainId)\r\n      const { address: poolManagerAddress } = getPoolV2LiteManagerConfig(chainId)\r\n      const poolManager = perpetualPoolLiteManagerFactory(\r\n        chainId,\r\n        poolManagerAddress\r\n      );\r\n      // process parameters\r\n      const newParameters = parameters.map((p) => naturalToDeri(p).toString())\r\n      // send tx\r\n     return await poolManager.createPool(accountAddress, newParameters, bTokenAddress, pairedTokenAddress)\r\n  }, args)\r\n}\r\n\r\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\r\nexport const addSymbol = async(...args) => {\r\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, parameters) => {\r\n      chainId = normalizeChainId(chainId)\r\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      // process parameters\r\n      const newParameters = parameters.map((p, index) => index > 2 ? naturalToDeri(p).toString() : p)\r\n      // send tx\r\n     return await perpetualPoolLite.addSymbol(accountAddress, newParameters)\r\n  }, args)\r\n}\r\n\r\nexport const createOracle = async(...args) => {\r\n  return catchTxApiError(async(chainId, accountAddress, feedAddress) => {\r\n      chainId = normalizeChainId(chainId)\r\n      feedAddress = toChecksumAddress(feedAddress)\r\n      const feedContract = chainlinkFeedFactory(chainId, feedAddress)\r\n      const symbol = await feedContract.symbol()\r\n      if (typeof symbol === 'string' && symbol !== '') {\r\n        const oracleFactoryConfig = getOracleFactoryChainlinkConfig(chainId);\r\n        const oracleFactory = oracleFactoryChainlinkFactory(\r\n          chainId,\r\n          oracleFactoryConfig.address\r\n        );\r\n        // process parameters\r\n        // send tx\r\n        return await oracleFactory.createOracle(\r\n          accountAddress,\r\n          symbol\r\n        );\r\n      } else {\r\n        throw new Error(\r\n          `-- createOracle: cannot get description of feedAddress(${feedAddress})`\r\n        );\r\n      }\r\n  }, args)\r\n}\r\n","import { DeriEnv } from \"../shared/config\"\r\n\r\nexport const getPTokenAirdropConfig = (chainId, env) => {\r\n  chainId = chainId.toString()\r\n  env = env || DeriEnv.get();\r\n  const config = {\r\n    prod: [\r\n      {\r\n        chainId: '56',\r\n        address: '0x055FD7f825cCD1b87092A1Ee40462c4c60dDD8ba',\r\n      },\r\n    ],\r\n    dev: [\r\n      {\r\n        chainId: '97',\r\n        address: '0x632D0f5d642B0d915cE1ad0772677FC589cc724d',\r\n      },\r\n    ],\r\n  };\r\n\r\n  if (Object.keys(config).includes(env)) {\r\n    const res = config[env].find((c) => c.chainId === chainId);\r\n    if (res) {\r\n      return res\r\n    }\r\n  } \r\n  throw new Error(`-- getPTokenAirdropConfig(), invalid env(${env}) or chainId(${chainId})`)\r\n};\r\n\r\nexport const getDeriVoteConfig = (chainId, env) => {\r\n  chainId = chainId.toString()\r\n  env = env || DeriEnv.get();\r\n  const config = {\r\n    prod: [\r\n      {\r\n        chainId: '1',\r\n        address: '0xb2b6907AdDa5a13673849CBD448f31be9C4A7424',\r\n      },\r\n      {\r\n        chainId: '56',\r\n        address: '0x27c116474D4E08df0A13935AF508E8922271F891',\r\n      },\r\n      {\r\n        chainId: '128',\r\n        address: '0x3752D67bfBe945a89787c7F6758A47C2D52988d4',\r\n      },\r\n      {\r\n        chainId: '137',\r\n        address: '0x6d05Fd927b5d184A8f848DA7D57C7228AEf80b85',\r\n      },\r\n    ],\r\n    dev: [\r\n      {\r\n        chainId: '97',\r\n        address: '0x37f3432B2166c6dB487c844C481Cba47ac98AD00',\r\n      },\r\n    ],\r\n  };\r\n\r\n  if (Object.keys(config).includes(env)) {\r\n    const res = config[env].find((c) => c.chainId === chainId);\r\n    if (res) {\r\n      return res\r\n    }\r\n  } \r\n  throw new Error(`-- getDeriVoteConfig(), invalid env(${env}) or chainId(${chainId})`)\r\n};\r\n","import Web3 from \"web3\";\r\nimport { bg } from \"../shared/utils\";\r\n\r\n// lang\r\nexport const isObject = (value) => typeof value === 'object' && value !== null\r\nexport const isArray = (value) => typeof value === 'object' && Array.isArray(value)\r\nexport const isFunction = (value) => typeof value === 'function'\r\n\r\n// convert\r\nexport const toWei = (number, unit = \"ether\") => {\r\n  return Web3.utils.toWei(number, unit);\r\n};\r\n\r\nexport const fromWei = (number, unit = \"ether\") => {\r\n  return Web3.utils.fromWei(number, unit);\r\n};\r\n\r\n// factory\r\nexport const contractFactory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\n// adapter\r\nconst processObjectResult = (val, propList = []) => {\r\n  return Object.keys(val).reduce((acc, prop) => {\r\n    if (typeof val[prop] === \"string\" && propList.includes(prop)) {\r\n      acc[prop] = bg(fromWei(val[prop])).toString();\r\n    } else {\r\n      acc[prop] = val[prop];\r\n    }\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\nconst processResult = (val, propList = []) => {\r\n  if (isArray(val)) {\r\n    return val.map((v) => processResult(v, propList));\r\n  } else if (isObject(val)) {\r\n    return processObjectResult(val, propList);\r\n  } else if (typeof val === \"string\") {\r\n    return bg(fromWei(val)).toString();\r\n  } else {\r\n    return val;\r\n  }\r\n};\r\n\r\nexport const processMethod = (klass, methodName, propList = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const res = await originMethod.apply(this, args);\r\n    return processResult(res, propList);\r\n  };\r\n  return klass;\r\n};\r\n\r\nexport const processTxMethod = (klass, methodName, toWeiArgPositions = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const newArgs = args.map((arg, index) =>\r\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\r\n    );\r\n    return await originMethod.apply(this, newArgs);\r\n  };\r\n  return klass;\r\n};","// this file is generated by script, don't modify it !!!\r\nexport const pTokenAirdropNULSAbi = [{\r\n        \"inputs\": [{\r\n                \"internalType\": \"address\",\r\n                \"name\": \"bTokenAddress\",\r\n                \"type\": \"address\"\r\n            }, {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"pTokenAddress\",\r\n                \"type\": \"address\"\r\n            }, {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"poolAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    }, {\r\n        \"anonymous\": false,\r\n        \"inputs\": [{\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            }, {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }, {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"index\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"AirdropPToken\",\r\n        \"type\": \"event\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"airdropPToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"getBTokenBalance\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [{\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"isAirdropPToken\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"isStartAirdrop\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"marginUnit\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"maxAirdropLimit\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"ownerAddress\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [{\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"marginUnit_\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setMarginUnit\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [{\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"maxAirdropLimit_\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setMaxAirdropLimit\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [{\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeUnit_\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"setTradeUnit\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"startAirdrop\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"stopAirdrop\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"totalAirdropCount\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"tradeUnit\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"withdrawBToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils'\r\nimport { pTokenAirdropNULSAbi } from '../abi/pTokenAirdropNULSAbi.js'\r\n\r\nexport class PTokenAirdropNULS extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenAirdropNULSAbi)\r\n  }\r\n\r\n  // query\r\n  //  async getBTokenBalance() {\r\n  //    const res = await this._call('getBTokenBalance', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async isAirdropPToken(account) {\r\n    const res = await this._call('isAirdropPToken', [account])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async isStartAirdrop() {\r\n  //    const res = await this._call('isStartAirdrop', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async marginUnit() {\r\n  //    const res = await this._call('marginUnit', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async maxAirdropLimit() {\r\n  //    const res = await this._call('maxAirdropLimit', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async ownerAddress() {\r\n  //    const res = await this._call('ownerAddress', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async totalAirdropCount() {\r\n    const res = await this._call('totalAirdropCount', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async tradeUnit() {\r\n  //    const res = await this._call('tradeUnit', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n\r\n  // tx\r\n  async airdropPToken(accountAddress) {\r\n    return await this._transact('airdropPToken', [], accountAddress)\r\n  }\r\n  //  async setMarginUnit(accountAddress, marginUnit_) {\r\n  //    return await this._transact('setMarginUnit', [marginUnit_], accountAddress)\r\n  //  }\r\n  //  async setMaxAirdropLimit(accountAddress, maxAirdropLimit_) {\r\n  //    return await this._transact('setMaxAirdropLimit', [maxAirdropLimit_], accountAddress)\r\n  //  }\r\n  //  async setTradeUnit(accountAddress, tradeUnit_) {\r\n  //    return await this._transact('setTradeUnit', [tradeUnit_], accountAddress)\r\n  //  }\r\n  //  async startAirdrop(accountAddress) {\r\n  //    return await this._transact('startAirdrop', [], accountAddress)\r\n  //  }\r\n  //  async stopAirdrop(accountAddress) {\r\n  //    return await this._transact('stopAirdrop', [], accountAddress)\r\n  //  }\r\n  //  async withdrawBToken(accountAddress) {\r\n  //    return await this._transact('withdrawBToken', [], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const deriVoteAbi = [\r\n  { \"inputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"voter\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"votingId\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"votingOption\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"Vote\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"controller\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"string\", \"name\": \"topic\", \"type\": \"string\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"nOptions\", \"type\": \"uint256\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"deadline\", \"type\": \"uint256\" }\r\n    ],\r\n    \"name\": \"initializeVote\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"name\",\r\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"numVotingOptions\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" }\r\n    ],\r\n    \"name\": \"setController\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"uint256\", \"name\": \"votingOption\", \"type\": \"uint256\" }\r\n    ],\r\n    \"name\": \"vote\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"votingDeadline\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"votingId\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" },\r\n      { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }\r\n    ],\r\n    \"name\": \"votingOptions\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"name\": \"votingTopics\",\r\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils'\r\nimport { deriVoteAbi } from '../abi/deriVoteAbi.js'\r\n\r\nexport class DeriVote extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, deriVoteAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async controller() {\r\n    const res = await this._call('controller', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async numVotingOptions() {\r\n    const res = await this._call('numVotingOptions', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async votingDeadline() {\r\n    const res = await this._call('votingDeadline', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async votingId() {\r\n    const res = await this._call('votingId', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async votingOptions(votingId, voter) {\r\n    const res = await this._call(\"votingOptions\", [votingId, voter]);\r\n    return deleteIndexedKey(res);\r\n  }\r\n  async votingTopics(votingId) {\r\n    const res = await this._call('votingTopics', [votingId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async initializeVote(accountAddress, topic, nOptions, deadline) {\r\n  //    return await this._transact('initializeVote', [topic, nOptions, deadline], accountAddress)\r\n  //  }\r\n  //  async setController(accountAddress, newController) {\r\n  //    return await this._transact('setController', [newController], accountAddress)\r\n  //  }\r\n  async vote(accountAddress, votingOption) {\r\n    return await this._transact('vote', [votingOption], accountAddress)\r\n  }\r\n\r\n}","import { contractFactory } from \"../utils\";\r\nimport { PTokenAirdropNULSAdapter, deriVoteAdapter } from \"./adapter\";\r\n\r\nimport { PTokenAirdropNULS } from \"./gen/PTokenAirdropNULS\";\r\nimport { DeriVote } from \"./gen/DeriVote.js\";\r\n\r\n// pToken airdrop\r\nexport const PTokenAirdropNULSFactory = contractFactory(\r\n  PTokenAirdropNULSAdapter(PTokenAirdropNULS)\r\n);\r\n\r\n// deri vote\r\nexport const deriVoteFactory = contractFactory(deriVoteAdapter(DeriVote));","import { catchApiError, catchTxApiError, bg } from \"../../shared/utils\";\r\nimport { perpetualPoolLiteFactory } from \"../../v2_lite/factory\";\r\nimport { getPTokenAirdropConfig } from \"../config\"\r\nimport { PTokenAirdropNULSFactory } from \"../contract/factory\"\r\n\r\nexport const isPTokenAirdropped = async (...args) => {\r\n  return catchApiError(async(chainId, accountAddress) => {\r\n    const config = getPTokenAirdropConfig(chainId);\r\n    return await PTokenAirdropNULSFactory(\r\n      chainId,\r\n      config.address\r\n    ).isAirdropPToken(accountAddress);\r\n  }, args, 'isPTokenAirdropped', '')\r\n};\r\n\r\nexport const totalAirdropCount = async (...args) => {\r\n  return catchApiError(async(chainId) => {\r\n    const config = getPTokenAirdropConfig(chainId);\r\n    return await PTokenAirdropNULSFactory(\r\n      chainId,\r\n      config.address\r\n    ).totalAirdropCount();\r\n  }, args, 'totalAirdropCount', '')\r\n};\r\n\r\nexport const isUserPTokenExist = async (...args) => {\r\n  return catchApiError(async (chainId, poolAddress, accountAddress) => {\r\n    let res = '';\r\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n    await pool.init()\r\n    const result = await pool.pToken.balanceOf(accountAddress);\r\n    if (result === '1') {\r\n      res = true;\r\n    } else if (result === '0') {\r\n      res = false;\r\n    }\r\n    return res;\r\n  }, args, 'isUserPTokenExist', '');\r\n};\r\n\r\nexport const isBTokenUnlocked = async(...args) => {\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n    await pool.init()\r\n    return await pool.bToken.isUnlocked(accountAddress, poolAddress)\r\n  }, args, 'isUnlocked', '')\r\n}\r\n\r\nexport const hasRequiredBalance = async(...args) => {\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n    await pool.init()\r\n    const res = await pool.bToken.balanceOf(accountAddress)\r\n    console.log('res', res)\r\n    return bg(res).gte(100)\r\n  }, args, 'hasRequiredBalance', '')\r\n}\r\n\r\n\r\n// tx\r\nexport const unlockBToken = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\r\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n    await pool.init()\r\n    return await pool.bToken.unlock(accountAddress, poolAddress);\r\n  }, args);\r\n};\r\n\r\nexport const airdropPToken = async (...args) => {\r\n  return catchTxApiError(async (chainId, accountAddress) => {\r\n    const config = getPTokenAirdropConfig(chainId);\r\n    return await PTokenAirdropNULSFactory(\r\n      chainId,\r\n      config.address\r\n    ).airdropPToken(accountAddress);\r\n  }, args);\r\n};\r\n","import { catchApiError, bg, deriToNatural, databaseActivityFactory, toChecksumAddress, DeriEnv, max } from '../../shared';\r\n\r\nconst range = (n) => (new Array(n)).fill(0).map((i,index) => index)\r\n\r\nconst keyPrefix = () => (DeriEnv.get() === 'prod' ? 'TE' : 'TE2');\r\n\r\nexport const getStakingTop10Users = async () => {\r\n  return catchApiError(\r\n    async () => {\r\n      const db = databaseActivityFactory();\r\n      const key = range(10).reduce(\r\n        (acc, i) =>\r\n          acc.concat([\r\n            `${keyPrefix()}.top.${i + 1}.account`,\r\n            `${keyPrefix()}.top.${i + 1}.fee`,\r\n            `${keyPrefix()}.top.${i + 1}.score`,\r\n            `${keyPrefix()}.top.${i + 1}.cont`,\r\n          ]),\r\n        []\r\n      );\r\n      //console.log(key)\r\n      const res = await db.getValues(key)\r\n      //console.log(res)\r\n      if (Array.isArray(res) && res.length === 4 * 10) {\r\n        let result = []\r\n        for (let i = 0; i < res.length; i++) {\r\n          if ((i + 1) % 4 === 0) {\r\n            const info = res.slice(i - 3, i + 1);\r\n            const index = (i + 1) / 4\r\n            result.push({\r\n              no: index,\r\n              userAddr: info[0].slice(0, 42),\r\n              feePaid: deriToNatural(info[1]).toString(),\r\n              score: deriToNatural(info[2]).toString(),\r\n              evgCoeff: deriToNatural(info[1]).eq(0)\r\n                ? '0'\r\n                : bg(info[3]).div(info[1]).toString(),\r\n              rewardBNB:\r\n                index <= 5\r\n                  ? index <= 4\r\n                    ? index <= 3\r\n                      ? index <= 2\r\n                        ? index <= 1\r\n                          ? '200000'\r\n                          : '100000'\r\n                        : '50000'\r\n                      : '35000'\r\n                    : '25000'\r\n                  : '18000',\r\n            });\r\n          }\r\n        }\r\n        return result.filter((r) => r.userAddr !== '0x0000000000000000000000000000000000000000')\r\n      } else {\r\n        return []\r\n      }\r\n    },\r\n    [],\r\n    'getStakingTop10Users',\r\n    [],\r\n  );\r\n};\r\n\r\nexport const getUserStakingInfo = async (accountAddress) => {\r\n  const args = [accountAddress];\r\n  return catchApiError(\r\n    async (accountAddress) => {\r\n      accountAddress = toChecksumAddress(accountAddress)\r\n      const db = databaseActivityFactory();\r\n      const key = [\r\n        `${keyPrefix()}.Q1.cont`,\r\n        `${keyPrefix()}.Q2.cont`,\r\n        `${keyPrefix()}.Q3.cont`,\r\n        `${keyPrefix()}.Q4.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q1.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q2.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q3.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q4.cont`,\r\n        `${keyPrefix()}.${accountAddress}.fee`,\r\n        `${keyPrefix()}.${accountAddress}.coef`,\r\n      ];\r\n      const res = await db.getValues(key)\r\n      const scoreQ1 = bg(res[0]).eq(0) ? '0': bg(10000).times(bg(res[4]).div(res[0]))\r\n      const scoreQ2 = bg(res[1]).eq(0) ? '0': bg(20000).times(bg(res[5]).div(res[1]))\r\n      const scoreQ3 = bg(res[2]).eq(0) ? '0': bg(30000).times(bg(res[6]).div(res[2]))\r\n      const scoreQ4 = bg(res[3]).eq(0) ? '0': bg(50000).times(bg(res[7]).div(res[3]))\r\n\r\n      const coef = deriToNatural(res[9])\r\n      return {\r\n        userAddr: accountAddress,\r\n        feePaid: deriToNatural(res[8]).toString(),\r\n        coef: max(coef, bg(1)).toString(),\r\n        score: bg(scoreQ1).plus(scoreQ2).plus(scoreQ3).plus(scoreQ4).toString()\r\n      }\r\n    },\r\n    args,\r\n    'getUserStakingInfo',\r\n    {\r\n      userAddr: '',\r\n      feePaid: '',\r\n      coef: '',\r\n      score: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getUserStakingReward = async (accountAddress) => {\r\n  const args = [accountAddress];\r\n  return catchApiError(\r\n    async (accountAddress) => {\r\n      accountAddress = toChecksumAddress(accountAddress)\r\n      const db = databaseActivityFactory();\r\n      const key = [\r\n        `${keyPrefix()}.Q1.cont`,\r\n        `${keyPrefix()}.Q2.cont`,\r\n        `${keyPrefix()}.Q3.cont`,\r\n        `${keyPrefix()}.Q4.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q1.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q2.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q3.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q4.cont`,\r\n        `${keyPrefix()}.top.1.account`,\r\n        `${keyPrefix()}.top.2.account`,\r\n        `${keyPrefix()}.top.3.account`,\r\n        `${keyPrefix()}.top.4.account`,\r\n        `${keyPrefix()}.top.5.account`,\r\n        `${keyPrefix()}.top.6.account`,\r\n        `${keyPrefix()}.top.7.account`,\r\n        `${keyPrefix()}.top.8.account`,\r\n        `${keyPrefix()}.top.9.account`,\r\n        `${keyPrefix()}.top.10.account`,\r\n      ];\r\n      const res = await db.getValues(key);\r\n      const scoreQ1 = bg(res[0]).eq(0) ? '0': bg(10000).times(bg(res[4]).div(res[0]))\r\n      const scoreQ2 = bg(res[1]).eq(0) ? '0': bg(20000).times(bg(res[5]).div(res[1]))\r\n      const scoreQ3 = bg(res[2]).eq(0) ? '0': bg(30000).times(bg(res[6]).div(res[2]))\r\n      const scoreQ4 = bg(res[3]).eq(0) ? '0': bg(50000).times(bg(res[7]).div(res[3]))\r\n      const score = bg(scoreQ1).plus(scoreQ2).plus(scoreQ3).plus(scoreQ4);\r\n      const rewardDERI = bg(1000000).times(bg(score).div(110000)).toString();\r\n\r\n      const topUsers = res.slice(8).map((u) => toChecksumAddress(u.slice(0, 42)));\r\n      let rewardBNB = '0';\r\n      if (topUsers.includes(accountAddress)) {\r\n        if (accountAddress === topUsers[0]) {\r\n          rewardBNB = '200000';\r\n        } else if (accountAddress === topUsers[1]) {\r\n          rewardBNB = '100000';\r\n        } else if (accountAddress === topUsers[2]) {\r\n          rewardBNB = '50000';\r\n        } else if (accountAddress === topUsers[3]) {\r\n          rewardBNB = '35000';\r\n        } else if (accountAddress === topUsers[4]) {\r\n          rewardBNB = '25000';\r\n        } else {\r\n          rewardBNB = '18000';\r\n        }\r\n      }\r\n      return {\r\n        userAddr: accountAddress,\r\n        rewardBNB,\r\n        rewardDERI,\r\n      };\r\n    },\r\n    args,\r\n    'getUserStakingReward',\r\n    { userAddr: '', rewardBNB: '', rewardDERI: '' }\r\n  );\r\n};\r\n\r\nexport const getUserStakingContribution = async (accountAddress) => {\r\n  const args = [accountAddress];\r\n  return catchApiError(\r\n    async (accountAddress) => {\r\n      accountAddress = toChecksumAddress(accountAddress);\r\n      const db = databaseActivityFactory();\r\n      const key = [\r\n        `${keyPrefix()}.Q1.cont`,\r\n        `${keyPrefix()}.Q2.cont`,\r\n        `${keyPrefix()}.Q3.cont`,\r\n        `${keyPrefix()}.Q4.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q1.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q2.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q3.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q4.cont`,\r\n      ];\r\n      const res = await db.getValues(key);\r\n      const scoreQ1 = bg(res[0]).eq(0) ? '0': bg(10000).times(bg(res[4]).div(res[0]))\r\n      const scoreQ2 = bg(res[1]).eq(0) ? '0': bg(20000).times(bg(res[5]).div(res[1]))\r\n      const scoreQ3 = bg(res[2]).eq(0) ? '0': bg(30000).times(bg(res[6]).div(res[2]))\r\n      const scoreQ4 = bg(res[3]).eq(0) ? '0': bg(50000).times(bg(res[7]).div(res[3]))\r\n\r\n      return {\r\n        userAddr: accountAddress,\r\n        totalContrib: deriToNatural(\r\n          bg(res[0]).plus(res[1]).plus(res[2]).plus(res[3])\r\n        ).toString(),\r\n        userContrib: deriToNatural(\r\n          bg(res[4]).plus(res[5]).plus(res[6]).plus(res[7])\r\n        ).toString(),\r\n        Q1Contrib: deriToNatural(res[0]).toString(),\r\n        Q2Contrib: deriToNatural(res[1]).toString(),\r\n        Q3Contrib: deriToNatural(res[2]).toString(),\r\n        Q4Contrib: deriToNatural(res[3]).toString(),\r\n        userQ1Contrib: deriToNatural(res[4]).toString(),\r\n        userQ2Contrib: deriToNatural(res[5]).toString(),\r\n        userQ3Contrib: deriToNatural(res[6]).toString(),\r\n        userQ4Contrib: deriToNatural(res[7]).toString(),\r\n        userQ1Point: scoreQ1.toString(),\r\n        userQ2Point: scoreQ2.toString(),\r\n        userQ3Point: scoreQ3.toString(),\r\n        userQ4Point: scoreQ4.toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getUserStakingContribution',\r\n    { userAddr: '', totalContrib: '', userContrib: '' }\r\n  );\r\n};","import { catchApiError, catchTxApiError, DeriEnv, fromWei, hexToNumberString, toChecksumAddress } from \"../../shared\";\r\nimport { databaseDeriVoteFactory } from \"../../shared/factory/database\";\r\nimport { getDeriVoteConfig } from \"../config\";\r\nimport { deriVoteFactory } from \"../contract/factory\";\r\n\r\nconst votingId = '2'\r\nconst keyPrefix = () => (DeriEnv.get() === 'prod' ? `VID${votingId}` : 'VID1');\r\n\r\n\r\nexport const getVotingResult = async() => {\r\n  return catchApiError(\r\n    async () => {\r\n      const db = databaseDeriVoteFactory();\r\n      const keys = [\r\n        `${keyPrefix()}.OP1.count`,\r\n        `${keyPrefix()}.OP2.count`,\r\n        `${keyPrefix()}.OP3.count`,\r\n      ];\r\n      const res = await db.getValues(keys);\r\n      return res.map((v) => fromWei(hexToNumberString(v)));\r\n    },\r\n    [],\r\n    'getOptionsVotingPowers',\r\n    ['', '', '']\r\n  );\r\n}\r\n\r\nexport const getUserVotingPower = async(accountAddress) => {\r\n  return catchApiError(async() => {\r\n    accountAddress = toChecksumAddress(accountAddress)\r\n    const db = databaseDeriVoteFactory()\r\n    const keys = [\r\n      `${keyPrefix()}.${accountAddress}.count`,\r\n    ]\r\n    const res = await db.getValues(keys)\r\n    return res.map((v) => fromWei(hexToNumberString(v)))[0]\r\n  }, [accountAddress], 'getUserVotingPowers', '')\r\n}\r\n\r\n\r\nexport const getUserVotingResult = async (accountAddress) => {\r\n  const args = [accountAddress];\r\n  return catchApiError(\r\n    async () => {\r\n      accountAddress = toChecksumAddress(accountAddress);\r\n      const db = databaseDeriVoteFactory();\r\n      const keys = [\r\n        `${keyPrefix()}.${accountAddress}.count`,\r\n        `${keyPrefix()}.${accountAddress}.option`,\r\n        `${keyPrefix()}.${accountAddress}.timestamp`,\r\n      ];\r\n      const res = await db.getValues(keys);\r\n      return {\r\n        votingPower: fromWei(hexToNumberString(res[0])),\r\n        option: hexToNumberString(res[1]),\r\n        timestamp: hexToNumberString(res[2]),\r\n      };\r\n    },\r\n    args,\r\n    'getVoteResult',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const vote = async(chainId, accountAddress, votingOption) => {\r\n  const args = [chainId, accountAddress, votingOption]\r\n  return catchTxApiError(async() => {\r\n    chainId = chainId.toString()\r\n    accountAddress = toChecksumAddress(accountAddress)\r\n    const config = getDeriVoteConfig(chainId)\r\n    const deriVote = deriVoteFactory(chainId, config.address)\r\n    const voteId = await deriVote.votingId()\r\n    if (voteId !== votingId) {\r\n      throw new Error(\r\n        `Deri Vote: votingId is not match (${votingId} !== ${voteId}) `\r\n      );\r\n    }\r\n    return await deriVote.vote(accountAddress, votingOption)\r\n  }, args)\r\n}","import {\r\n  DeriEnv,\r\n  getPoolConfigList as getPoolV2ConfigList,\r\n  getPoolV1ConfigList,\r\n  VERSIONS,\r\n} from '../shared/config';\r\nimport { getJsonConfig } from '../shared/config/config';\r\nimport { ALL_EXCEPT_OPEN_VERSIONS } from '../shared/config/version';\r\n\r\nexport const getContractAddressConfig = (env, version) => {\r\n  env = env || DeriEnv.get()\r\n  if (version === 'v1') {\r\n    return getPoolV1ConfigList(env);\r\n  } else if (VERSIONS.includes(version)) {\r\n    return getPoolV2ConfigList(version, env);\r\n  } else if (version === undefined) {\r\n    return ALL_EXCEPT_OPEN_VERSIONS.reduce((acc, v) => [...acc, ...getPoolV2ConfigList(v, env)], [])\r\n  } else {\r\n    throw new Error(`getContractAddressConfig: invalid version: ${version}`);\r\n  }\r\n};\r\n\r\nexport const getPoolConfigList = (env) => {\r\n  env = env || DeriEnv.get();\r\n  return ALL_EXCEPT_OPEN_VERSIONS.reduce((acc, v) => {\r\n    let res = []\r\n    const config = getJsonConfig(v, env);\r\n    if (config && config.pools) {\r\n      res = config.pools.map((p) => {\r\n        p.version = v\r\n        return p\r\n      })\r\n    }\r\n    return [...acc, ...res];\r\n  }, []);\r\n};\r\n","import {\r\n  getPoolConfig2,\r\n  getPoolBTokenIdList,\r\n  getPoolSymbolIdList,\r\n} from '../../shared/config';\r\nimport { databaseFactory } from '../../shared/factory';\r\nimport { bg, deriToNatural, getNetworkName } from '../../shared/utils';\r\nimport { lTokenFactory, perpetualPoolFactory } from '../factory';\r\nimport { calculateMaxRemovableLiquidity } from '../calculation';\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  try {\r\n    const { lToken: lTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const lToken = lTokenFactory(chainId, lTokenAddress);\r\n\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n    const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n\r\n    const [parameterInfo, bTokenInfo, lTokenAsset] = await Promise.all([\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getBToken(bTokenId),\r\n      lToken.getAsset(accountAddress, bTokenId),\r\n    ]);\r\n    const { minPoolMarginRatio } = parameterInfo;\r\n    let promises = [];\r\n    for (let i = 0; i < bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n    }\r\n    const bTokens = await Promise.all(promises);\r\n\r\n    promises = [];\r\n    for (let i = 0; i < symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n    }\r\n    const symbols = await Promise.all(promises);\r\n\r\n    const cost = symbols.reduce((accum, s) => {\r\n      return accum.plus(\r\n        bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\r\n      );\r\n    }, bg(0));\r\n    const totalPnl = symbols.reduce((accum, s) => {\r\n      return accum.plus(\r\n        bg(s.tradersNetVolume)\r\n          .times(s.price)\r\n          .times(s.multiplier)\r\n          .minus(s.tradersNetCost)\r\n      );\r\n    }, bg(0));\r\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\r\n      if (index === parseInt(bTokenId)) {\r\n        return accum.plus(b.pnl);\r\n      } else {\r\n        return accum.plus(\r\n          bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\r\n        );\r\n      }\r\n    }, bg(0));\r\n\r\n    const { liquidity: poolLiquidity } = bTokenInfo;\r\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset;\r\n    const maxRemovableShares = calculateMaxRemovableLiquidity(\r\n      bTokens[bTokenId],\r\n      liquidity,\r\n      cost,\r\n      totalPnl,\r\n      restLiquidity,\r\n      minPoolMarginRatio\r\n    );\r\n    const approximatePnl = pnl.plus(\r\n      bg(bTokens[bTokenId].cumulativePnl)\r\n        .minus(lastCumulativePnl)\r\n        .times(liquidity)\r\n    );\r\n    return {\r\n      //totalSupply: lTokenTotalSupply.toString(),\r\n      poolLiquidity: poolLiquidity.toString(),\r\n      // shares: liquidity.toString(),\r\n      // shareValue: '1',\r\n      // maxRemovableShares: liquidity.toString()\r\n      shares: liquidity.toString(),\r\n      pnl: approximatePnl.div(bTokens[bTokenId].price).toString(),\r\n      maxRemovableShares: maxRemovableShares.toString(),\r\n    };\r\n  } catch (err) {\r\n    console.log(`${err}`);\r\n  }\r\n  return {\r\n    poolLiquidity: '',\r\n    shares: '',\r\n    pnl: '',\r\n    maxRemovableShares: '',\r\n  };\r\n};\r\n\r\nexport const getPoolLiquidity = async (chainId, poolAddress, bTokenId) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity${bTokenId}`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        symbol: '',\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`);\r\n  }\r\n  return {\r\n    liquidity: '',\r\n    symbol: '',\r\n  };\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy${bTokenId}`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n        `${poolNetwork}.${poolAddress}.V2.multiplier${bTokenId}`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h, multiplier] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n        multiplier: deriToNatural(multiplier).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`);\r\n  }\r\n};\r\n","import { getPriceInfo } from '../../shared/utils/oracle';\r\nimport {\r\n  getPoolBTokenIdList,\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n} from '../../shared/config';\r\nimport {\r\n  perpetualPoolRouterFactory,\r\n  perpetualPoolFactory,\r\n  lTokenFactory,\r\n} from '../factory';\r\nimport { isBToken0RatioValid, isPoolMarginRatioValid } from '../calculation';\r\n\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\r\n  const validation = isBToken0RatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    minBToken0Ratio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.addLiquidity(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress);\r\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\r\n  const { liquidity: userLiquidity } = lTokenAsset;\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  promises = [];\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\r\n  const validation = isPoolMarginRatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    userLiquidity,\r\n    symbols,\r\n    minPoolMarginRatio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.removeLiquidity(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount,\r\n        isMaximum\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const addLiquidityWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\r\n  const validation = isBToken0RatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    minBToken0Ratio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      const promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.addLiquidityWithPrices(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount,\r\n        priceInfos\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const removeLiquidityWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n\r\n  const lToken = lTokenFactory(chainId, lTokenAddress);\r\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\r\n  const { liquidity: userLiquidity } = lTokenAsset;\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  promises = [];\r\n\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\r\n\r\n  const validation = isPoolMarginRatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    userLiquidity,\r\n    symbols,\r\n    minPoolMarginRatio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.removeLiquidityWithPrices(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount,\r\n        priceInfos,\r\n        isMaximum\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n","import { bTokenFactory } from '../../shared/factory';\r\nimport {\r\n  getPoolBTokenIdList,\r\n  getPoolBTokenList,\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n  getPoolSymbolList,\r\n} from '../../shared/config';\r\nimport { bg, min, max } from '../../shared/utils'\r\nimport { getOraclePrice } from '../../shared/utils/oracle'\r\nimport { getIndexInfo } from '../../shared/config/token';\r\nimport { fundingRateCache, liquidatePriceCache, priceCache } from '../../shared/api/api_globals';\r\nimport {\r\n  calculateEntryPrice,\r\n  calculateLiquidationPrice,\r\n  calculateFundingRate,\r\n  calculateFundingFee,\r\n  processFundingRate,\r\n} from '../calculation';\r\nimport { perpetualPoolFactory, pTokenFactory } from '../factory';\r\n\r\nexport const getSpecification = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    const {symbol } = getPoolConfig2(poolAddress, undefined, symbolId)\r\n    const bTokens = getPoolBTokenList(poolAddress)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const [symbolInfo, parameterInfo] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n    ])\r\n    const bTokenDiscounts = (await Promise.all(\r\n      bTokens.reduce(\r\n        (acc, b, index) =>\r\n          acc.concat([perpetualPool.getBToken(index.toString())]),\r\n        []\r\n      )\r\n    )).map((b) => b.discount);\r\n    const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\r\n    const {\r\n      minPoolMarginRatio,\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n    } = parameterInfo\r\n    return {\r\n      symbol: symbol,\r\n      bTokenSymbol: bTokens.map((b) => b.bTokenSymbol),\r\n      bTokenMultiplier: bTokenDiscounts.map((b) => b.toString()),\r\n      multiplier: multiplier.toString(),\r\n      feeRatio: feeRatio.toString(),\r\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n      //minAddLiquidity: minAddLiquidity.toString(),\r\n      //redemptionFeeRatio: redemptionFeeRatio.toString(),\r\n      minLiquidationReward: minLiquidationReward.toString(),\r\n      maxLiquidationReward: maxLiquidationReward.toString(),\r\n      liquidationCutRatio: liquidationCutRatio.toString(),\r\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n      indexConstituents: getIndexInfo(symbol)\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    symbol: '',\r\n    bTokenSymbol: [],\r\n    bTokenMultiplier: [],\r\n    multiplier: '',\r\n    feeRatio: '',\r\n    fundingRateCoefficient: '',\r\n    minPoolMarginRatio: '',\r\n    minInitialMarginRatio: '',\r\n    minMaintenanceMarginRatio: '',\r\n    minLiquidationReward: '',\r\n    maxLiquidationReward: '',\r\n    liquidationCutRatio: '',\r\n    protocolFeeCollectRatio: '',\r\n    indexConstituents: { url: '', tokens: [] },\r\n  };\r\n};\r\n\r\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\r\n  try {\r\n    const symbolConfigList = getPoolSymbolList(poolAddress)\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\r\n    const symbolList = symbolConfigList.map((i) => i.symbol)\r\n    //console.log('bTokenList', bTokenList)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    const [symbolInfo, parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margins, positions, latestPrice] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getLastUpdatedBlockNumber(),\r\n      perpetualPool.getLatestBlockNumber(),\r\n      pToken.getPosition(accountAddress, symbolId),\r\n      pToken.getMargins(accountAddress),\r\n      pToken.getPositions(accountAddress),\r\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)])\r\n    ])\r\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\r\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\r\n    const {\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n    } = parameterInfo\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const margin = bTokens.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n    }, bg(0))\r\n\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    promises = []\r\n    for (let i=0; i<symbolList.length; i++) {\r\n      promises.push(getOraclePrice(chainId, symbolList[i]))\r\n    }\r\n    const symbolPrices = await Promise.all(promises)\r\n    const price = symbolPrices[symbolId]\r\n    priceCache.set(poolAddress, symbolId, price)\r\n    const marginHeld = symbols.reduce((accum, s, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\r\n    }, bg(0))\r\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[symbolId]).times(minInitialMarginRatio)\r\n    //console.log('margin', margin.toString(), marginHeld.toString())\r\n    //\r\n    //const unrealizedPnl = bg(positions[symbolId].volume).times(price).times(multiplier).minus(positions[symbolId].cost)\r\n    const unrealizedPnl = symbols.reduce((accum, s, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n    }, bg(0))\r\n    const unrealizedPnlList = symbols.map((s, index) => {\r\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\r\n    })\r\n\r\n    const totalCost = positions.reduce((accum, a) => {\r\n      return accum.plus(bg(a.cost))\r\n    }, bg(0))\r\n    const dynamicCost = symbols.reduce((accum, s, index) => {\r\n      if (index !== parseInt(symbolId)) {\r\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\r\n      } else {\r\n        return accum\r\n      }\r\n    }, bg(0))\r\n    //console.log('cost', costTotal.toString())\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n    const fundingFee = calculateFundingFee(\r\n      tradersNetVolume,\r\n      latestPrice,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      liquidity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    );\r\n\r\n    // set liquidatePrice cache\r\n    liquidatePriceCache.set(poolAddress, {\r\n      volume,\r\n      margin,\r\n      totalCost,\r\n      dynamicCost,\r\n      price,\r\n      multiplier,\r\n      minMaintenanceMarginRatio,\r\n    });\r\n  return {\r\n      price: price,\r\n      volume: bg(volume).times(multiplier).toString(),\r\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: marginHeld.toString(),\r\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n      unrealizedPnl: unrealizedPnl.toString(),\r\n      unrealizedPnlList,\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n      fundingFee: fundingFee.toString()\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    volume: '',\r\n    averageEntryPrice: '',\r\n    margin: '',\r\n    marginHeld: '',\r\n    unrealizedPnl: '',\r\n    liquidationPrice: '',\r\n  };\r\n}\r\n\r\nexport const getPositionInfos = async (chainId, poolAddress, accountAddress) => {\r\n  try {\r\n    const symbolConfigList = getPoolSymbolList(poolAddress)\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\r\n    const symbolList = symbolConfigList.map((i) => i.symbol)\r\n    //console.log('bTokenList', bTokenList)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, '0')\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    const [parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, margins, positions] = await Promise.all([\r\n      //perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getLastUpdatedBlockNumber(),\r\n      perpetualPool.getLatestBlockNumber(),\r\n      //pToken.getPosition(accountAddress, symbolId),\r\n      pToken.getMargins(accountAddress),\r\n      pToken.getPositions(accountAddress),\r\n      //getOraclePrice(chainId, symbolList[parseInt(symbolId)])\r\n    ])\r\n    const {\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n    } = parameterInfo\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    promises = []\r\n    for (let i=0; i<symbolList.length; i++) {\r\n      promises.push(getOraclePrice(chainId, symbolList[i]))\r\n    }\r\n    const symbolPrices = await Promise.all(promises)\r\n\r\n    const margin = bTokens.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n    }, bg(0))\r\n\r\n    const marginHeld = symbols.reduce((accum, s, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\r\n    }, bg(0))\r\n    //\r\n    // const unrealizedPnlList = symbols.map((s, index) => {\r\n    //   return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\r\n    // })\r\n\r\n    //console.log('cost', costTotal.toString())\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n\r\n    return positions.map((p, index) => {\r\n      const symbol = symbols[index]\r\n      const symbolId = symbolIdList[index]\r\n      const price = symbolPrices[index]\r\n      priceCache.set(poolAddress, symbolId, price)\r\n      const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbol\r\n      const { volume, cost, lastCumulativeFundingRate } = p\r\n      const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[index]).times(minInitialMarginRatio)\r\n      const unrealizedPnl = bg(symbolPrices[index]).times(symbol.multiplier).times(p.volume).minus(p.cost)\r\n      const totalCost = positions.reduce((accum, a) => {\r\n        return accum.plus(bg(a.cost))\r\n      }, bg(0))\r\n      const dynamicCost = symbols.reduce((accum, s, idx) => {\r\n        if (idx !== index) {\r\n          return accum.plus(bg(positions[idx].volume).times(symbolPrices[idx]).times(s.multiplier))\r\n        } else {\r\n          return accum\r\n        }\r\n      }, bg(0))\r\n      const fundingFee = calculateFundingFee(\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        liquidity,\r\n        cumulativeFundingRate,\r\n        lastCumulativeFundingRate,\r\n        lastUpdatedBlockNumber,\r\n        latestBlockNumber,\r\n        volume,\r\n      );\r\n      return {\r\n        symbol: symbol.symbol,\r\n        symbolId: index.toString(),\r\n        price: symbolPrices[index],\r\n        volume: bg(p.volume).times(multiplier).toString(),\r\n        averageEntryPrice: calculateEntryPrice(p.volume, cost, multiplier).toString(),\r\n        margin: margin.toString(),\r\n        marginHeld: marginHeld.toString(),\r\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n        //unrealizedPnlList,\r\n        unrealizedPnl: unrealizedPnl.toString(),\r\n        liquidationPrice: calculateLiquidationPrice(\r\n          volume,\r\n          margin,\r\n          totalCost,\r\n          dynamicCost,\r\n          multiplier,\r\n          minMaintenanceMarginRatio\r\n        ).toString(),\r\n        fundingFee: fundingFee.toString()\r\n      };\r\n    }).filter((p) => p.volume !== '0')\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return []\r\n}\r\n\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  try {\r\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\r\n    return balance.toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return '';\r\n}\r\n\r\nexport const getEstimatedLiquidatePrice = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let {\r\n      volume,\r\n      margin,\r\n      totalCost,\r\n      dynamicCost,\r\n      price,\r\n      multiplier,\r\n      minMaintenanceMarginRatio,\r\n    } = liquidatePriceCache.get(poolAddress);\r\n    totalCost = bg(totalCost).plus(bg(newVolume).times(price).times(multiplier))\r\n    //console.log(totalCost.toString())\r\n    return calculateLiquidationPrice(\r\n      bg(volume).plus(newVolume),\r\n      margin,\r\n      totalCost,\r\n      dynamicCost,\r\n      multiplier,\r\n      minMaintenanceMarginRatio\r\n    ).toString();\r\n  } catch (err) {\r\n    console.log(`${err}`);\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => {\r\n  try {\r\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress)\r\n    return await bToken.isUnlocked(accountAddress, poolAddress)\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return false\r\n}\r\n\r\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\r\n  try {\r\n    let price = priceCache.get(poolAddress, symbolId)\r\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n    if (!price) {\r\n      //price = await getOraclePrice(poolAddress, symbolId)\r\n      price = await getOraclePrice(chainId, symbol)\r\n      priceCache.set(poolAddress, symbolId, price)\r\n    }\r\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!cache || !cache.multiplier) {\r\n      await _getFundingRate(chainId, poolAddress, symbolId)\r\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    }\r\n    const { multiplier, feeRatio } = cache;\r\n    //console.log(volume, price, multiplier, feeRatio)\r\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return ''\r\n}\r\n\r\nexport const getEstimatedMargin = async(\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const [price, symbolInfo ] = await Promise.all([\r\n      //getOraclePrice(poolAddress, symbolId),\r\n      getOraclePrice(chainId, symbol),\r\n      perpetualPool.getSymbol(symbolId),\r\n    ])\r\n    priceCache.set(poolAddress, symbolId, price)\r\n    const {multiplier} = symbolInfo\r\n    //console.log('m',multiplier.toString())\r\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return ''\r\n}\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\r\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\r\n}\r\n\r\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n  const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n  let bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n  let promiseList = []\r\n  for (let i=0; i<bTokenIdList.length; i++) {\r\n    promiseList.push(perpetualPool.getBToken(i))\r\n  }\r\n  const bTokenInfoList = await Promise.all(promiseList)\r\n  const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n  //const pnl = bTokenInfoList.reduce((accum, i) => accum.plus(i.pnl), bg(0))\r\n  //console.log('pnl', pnl.toString())\r\n\r\n  const [price, symbolInfo, parameterInfo ] = await Promise.all([\r\n    //getOraclePrice(poolAddress, symbolId),\r\n    getOraclePrice(chainId, symbol),\r\n    perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n  ])\r\n  priceCache.set(poolAddress, symbolId, price)\r\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\r\n  const { minPoolMarginRatio } = parameterInfo;\r\n  const fundingRateArgs = [\r\n    tradersNetVolume,\r\n    price,\r\n    multiplier,\r\n    liquidity,\r\n    fundingRateCoefficient,\r\n  ]\r\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\r\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\r\n  // const liquidityUsedArgs = [\r\n  //   tradersNetVolume,\r\n  //   price,\r\n  //   multiplier,\r\n  //   liquidity,\r\n  //   minPoolMarginRatio,\r\n  // ]\r\n  let symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  let promises = []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  const symbols = await Promise.all(promises)\r\n  //console.log('margin', margin.toString(), marginHeld.toString())\r\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\r\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\r\n  }, bg(0))\r\n\r\n  //const liquidityUsed = liquidityUsedInAmount.div(liquidity)\r\n  const res = {\r\n    price,\r\n    multiplier: multiplier.toString(),\r\n    feeRatio: feeRatio.toString(),\r\n    tradersNetVolume: tradersNetVolume.toString(),\r\n    liquidity: liquidity.toString(),\r\n    //pnl: pnl.toString(),\r\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n    fundingRatePerBlock: fundingRatePerBlock,\r\n    fundingRate: fundingRate,\r\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\r\n  }\r\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\r\n  return res\r\n}\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  try {\r\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    const { fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume, multiplier } = res\r\n    return {\r\n      fundingRate0: fundingRate.times(100).toString(),\r\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\r\n      liquidity: liquidity.toString(),\r\n      volume: '-',\r\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString()\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    fundingRate0: '',\r\n    fundingRatePerBlock: '',\r\n    liquidity: '',\r\n    volume: '',\r\n    tradersNetVolume: '',\r\n  };\r\n}\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    const args = [\r\n      bg(res.tradersNetVolume).plus(newNetVolume).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.fundingRateCoefficient,\r\n    ]\r\n    let fundingRate1 = calculateFundingRate(...args)\r\n    fundingRate1 = processFundingRate(chainId, fundingRate1)\r\n    return {\r\n      fundingRate1: fundingRate1.times(100).toString()\r\n    }\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    fundingRate1: '',\r\n  }\r\n}\r\n\r\nexport const getLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    return {\r\n      liquidityUsed0: res.liquidityUsed.times(100).toString(),\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidityUsed0: '',\r\n  }\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n    // const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    // const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    // const { volume } = pToken.getPosition(accountAddress, symbolId);\r\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\r\n    let promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    let liquidityUsed0 = symbols.reduce((accum, a, index) => {\r\n      if (index === parseInt(symbolId)) {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume.plus(newNetVolume)).abs())\r\n      } else {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume).abs())\r\n      }\r\n    }, bg(0))\r\n    //liquidityUsed0 = liquidityUsed0.times(res.minPoolMarginRatio)\r\n    //const liquidityUsed = bg(newNetVolume).times(res.price).times(res.multiplier).times(res.minPoolMarginRatio).div(res.liquidity)\r\n    const liquidityUsed1 = liquidityUsed0.times(res.minPoolMarginRatio).div(res.liquidity)\r\n    return {\r\n      liquidityUsed1: liquidityUsed1.times(100).toString()\r\n    }\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidityUsed1: '',\r\n  }\r\n}\r\n\r\n\r\nexport const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n  try {\r\n    let bTokenList = getPoolBTokenList(poolAddress)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    // let bTokenList = bTokensConfigList.map((i) => {\r\n    //   return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\r\n    // })\r\n    let promiseList = []\r\n    for (let i=0; i<bTokenList.length; i++) {\r\n      promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress).balanceOf(accountAddress))\r\n    }\r\n    const resultList = await Promise.all(promiseList)\r\n    for (let i=0; i<bTokenList.length; i++) {\r\n      bTokenList[i].walletBalance = resultList[i].toString()\r\n    }\r\n\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n    const [margins, positions, parameterInfo] = await Promise.all([\r\n      pToken.getMargins(accountAddress),\r\n      pToken.getPositions(accountAddress),\r\n      perpetualPool.getParameters(),\r\n    ]);\r\n    const { minInitialMarginRatio } = parameterInfo;\r\n\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const margin = bTokens.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n    }, bg(0))\r\n    //console.log('margin', margin.toString())\r\n\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n\r\n    promises = []\r\n    const symbolList = symbols.map((s) => s.symbol)\r\n    for (let i=0; i< symbols.length; i++) {\r\n      promises.push(getOraclePrice(chainId, symbolList[i]))\r\n    }\r\n    const symbolPrices = await Promise.all(promises)\r\n    //console.log(symbolPrices)\r\n\r\n    const marginHeld = symbols.reduce((accum, a, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(a.multiplier).times(positions[index].volume).abs().times(minInitialMarginRatio))\r\n    }, bg(0))\r\n    //console.log('marginHeld', marginHeld.toString())\r\n\r\n    const pnl = symbols.reduce((accum, a, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n    }, bg(0))\r\n    //console.log('pnl', pnl.toString())\r\n\r\n    bTokenList = bTokenList.map((i, index) => {\r\n      if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\r\n        i.availableBalance = max(min(margin.minus(marginHeld).plus(pnl).div(bTokens[index].price).div(bTokens[index].discount), margins[index]), bg(0)).toString()\r\n      } else {\r\n        i.availableBalance = '-'\r\n      }\r\n      return i\r\n    })\r\n    return bTokenList\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return []\r\n}\r\n\r\nexport const getFundingFee = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n    const symbolConfigList = getPoolSymbolList(poolAddress)\r\n    const symbolList = symbolConfigList.map((i) => i.symbol)\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    const [symbolInfo, positionInfo, price, lastUpdatedBlockNumber, latestBlockNumber] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      pToken.getPosition(accountAddress, symbolId),\r\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)]),\r\n      perpetualPool.getLastUpdatedBlockNumber(),\r\n      perpetualPool.getLatestBlockNumber(),\r\n    ])\r\n    const { volume, lastCumulativeFundingRate } = positionInfo\r\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate, } = symbolInfo;\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n    const fundingFee = calculateFundingFee(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      liquidity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    );\r\n  return fundingFee.toString()\r\n}\r\n","import {\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n  getPoolBTokenIdList,\r\n} from '../../shared/config';\r\nimport { bg } from '../../shared/utils';\r\nimport { getPriceInfo } from '../../shared/utils/oracle';\r\nimport { bTokenFactory } from '../../shared/factory';\r\nimport { isOrderValid } from '../calculation';\r\nimport {\r\n  perpetualPoolRouterFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n} from '../factory';\r\n\r\nexport const unlock = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const tx = await perpetualPoolRouter.addMargin(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const tx = await perpetualPoolRouter.removeMargin(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount,\r\n      isMaximum\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  const [parameterInfo, positions] = await Promise.all([\r\n    //  getOraclePrice(poolAddress, symbolId),\r\n    //  perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n    pToken.getPositions(accountAddress),\r\n    //pToken.getMargin(accountAddress, symbolId),\r\n  ]);\r\n\r\n  //const { multiplier } = symbolInfo;\r\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  const margins = await pToken.getMargins(accountAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const margin = bTokens.reduce((accum, i, index) => {\r\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\r\n  }, bg(0));\r\n\r\n  const liquidity = bTokens.reduce(\r\n    (accum, i) =>\r\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\r\n    bg(0)\r\n  );\r\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  promises = [];\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  let marginHeld = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.price)\r\n          .times(a.multiplier)\r\n          .times(positions[index].volume.plus(newVolume))\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  marginHeld = marginHeld.times(minInitialMarginRatio);\r\n\r\n  //console.log('margin', margin.toString(), marginHeld.toString())\r\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume)\r\n          .plus(newVolume)\r\n          .times(a.price)\r\n          .times(a.multiplier)\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n  //console.log('liquidityUsed', liquidityUsed.toString())\r\n\r\n  const orderValidation = isOrderValid(\r\n    //price,\r\n    margin,\r\n    marginHeld,\r\n    liquidity,\r\n    liquidityUsed\r\n    //multiplier,\r\n    //minPoolMarginRatio,\r\n    //bg(newVolume),\r\n  );\r\n  let res;\r\n  if (orderValidation.success) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.trade(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: orderValidation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n  const newVolume = volume.negated();\r\n  let res;\r\n  if (!volume.eq(0)) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.trade(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const depositMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const promises = symbolIdList.map(async (s) => {\r\n      return await getPriceInfo(s);\r\n    });\r\n    const prices = await Promise.all(promises);\r\n    const priceInfos = prices.map((p, index) => {\r\n      return [\r\n        symbolIdList[index],\r\n        p.timestamp,\r\n        p.price,\r\n        parseInt(p.v).toString(),\r\n        p.r,\r\n        p.s,\r\n      ];\r\n    });\r\n    const tx = await perpetualPoolRouter.addMarginWithPrices(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount,\r\n      priceInfos\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const withdrawMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const promises = symbolIdList.map(async (s) => {\r\n      return await getPriceInfo(s);\r\n    });\r\n    const prices = await Promise.all(promises);\r\n    const priceInfos = prices.map((p, index) => {\r\n      return [\r\n        symbolIdList[index],\r\n        p.timestamp,\r\n        p.price,\r\n        parseInt(p.v).toString(),\r\n        p.r,\r\n        p.s,\r\n      ];\r\n    });\r\n    const tx = await perpetualPoolRouter.removeMarginWithPrices(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount,\r\n      priceInfos,\r\n      isMaximum\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const tradeWithMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  //const [price, symbolInfo, parameterInfo, positions] = await Promise.all([\r\n  const [parameterInfo, positions] = await Promise.all([\r\n    //  getOraclePrice(poolAddress, symbolId),\r\n    //  perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n    pToken.getPositions(accountAddress),\r\n    //pToken.getMargin(accountAddress, symbolId),\r\n  ]);\r\n\r\n  //const { multiplier } = symbolInfo;\r\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  const margins = await pToken.getMargins(accountAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const margin = bTokens.reduce((accum, i, index) => {\r\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\r\n  }, bg(0));\r\n\r\n  const liquidity = bTokens.reduce(\r\n    (accum, i) =>\r\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\r\n    bg(0)\r\n  );\r\n  //console.log('liquidity', liquidity.toString())\r\n  promises = [];\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  let marginHeld = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.price)\r\n          .times(a.multiplier)\r\n          .times(positions[index].volume.plus(newVolume))\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  marginHeld = marginHeld.times(minInitialMarginRatio);\r\n\r\n  //console.log('margin', margin.toString(), marginHeld.toString())\r\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume.plus(newVolume))\r\n          .times(a.price)\r\n          .times(a.multiplier)\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n  //console.log('liquidityUsed', liquidityUsed.toString())\r\n\r\n  // const pnl = bTokens.reduce((accum, i) => accum.plus(i.pnl), bg(0))\r\n  // console.log('pnl', pnl.toString())\r\n\r\n  const orderValidation = isOrderValid(\r\n    //price,\r\n    margin,\r\n    marginHeld,\r\n    liquidity,\r\n    liquidityUsed\r\n    //multiplier,\r\n    //minPoolMarginRatio,\r\n    //bg(newVolume),\r\n  );\r\n  let res;\r\n  if (orderValidation.success) {\r\n    try {\r\n      promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.tradeWithPrices(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume,\r\n        priceInfos\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: orderValidation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const closePositionWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n  const newVolume = volume.negated();\r\n  let res;\r\n  if (!volume.eq(0)) {\r\n    try {\r\n      const promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.tradeWithPrices(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume,\r\n        priceInfos\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res;\r\n};\r\n","import { bg, deriToNatural, getHttpBase, fetchJson } from '../../shared/utils';\r\nimport {\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n} from '../../shared/config';\r\nimport { perpetualPoolFactory } from '../factory';\r\n\r\nconst processTradeEvent = async (\r\n  perpetualPool,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio,\r\n  symbols,\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const symbolId = info.symbolId\r\n  const symbol = symbols.find((s) => s.symbolId == info.symbolId)\r\n  const transactionFee = perpetualPool._calculateFee(\r\n    tradeVolume,\r\n    price,\r\n    multiplier[parseInt(symbolId)],\r\n    feeRatio[parseInt(symbolId)]\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    //baseToken: bTokenSymbol,\r\n    symbolId,\r\n    symbol: symbol && symbol.symbol,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: bg(volume).times(multiplier[parseInt(symbolId)]).toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  return res;\r\n};\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  //console.log('symbolIdList', symbolIdList);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  let promises= []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  let symbols = await Promise.all(promises)\r\n\r\n  const multiplier = symbols.map((i) => i.multiplier.toString());\r\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\r\n\r\n  const filters = { owner: accountAddress };\r\n  let events = await perpetualPool._getPastEvents(\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await processTradeEvent(\r\n      perpetualPool,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n      symbols,\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock, tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n    //console.log(symbolIdList)\r\n\r\n    let promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    //console.log(symbols)\r\n\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .filter((i) => !(i.direction === 'LIQUIDATION' && i.symbolId === '0'))\r\n        .map((i) => {\r\n          const index = parseInt(i.symbolId)\r\n          if (i.direction !== 'LIQUIDATION') {\r\n            return {\r\n              direction: i.direction.trim(),\r\n              //baseToken: i.baseToken.trim(),\r\n              symbolId: i.symbolId,\r\n              symbol: i.symbol,\r\n              price: deriToNatural(i.price).toString(),\r\n              notional: deriToNatural(i.notional).toString(),\r\n              volume: deriToNatural(i.volume).times(symbols[index].multiplier).toString(),\r\n              transactionFee: deriToNatural(i.transactionFee).toString(),\r\n              transactionHash: i.transactionHash,\r\n              time: i.time.toString(),\r\n            };\r\n          } else {\r\n            if (i.volume !== '' && i.volume.indexOf(',') > -1 && !i.price.startsWith('NaN')) {\r\n              const ids = i.volume.split(',').reduce((acc, v, index) => {\r\n                if (v !== '0') {\r\n                  return acc.concat([index]);\r\n                } else {\r\n                  return acc\r\n                }\r\n              }, []);\r\n            const prices = i.price.split(',').map((s)=> deriToNatural(s))\r\n            const volumes= i.volume.split(',').map((v)=> deriToNatural(v))\r\n            const res = ids.map((id) => {\r\n              return {\r\n                direction: i.direction.trim(),\r\n                symbolId: id.toString(),\r\n                symbol: symbols[id].symbol,\r\n                volume: volumes[id].times(symbols[id].multiplier).abs().toString(),\r\n                price: prices[id].toString(),\r\n                notional: volumes[id].abs().times(prices[id]).times(symbols[id].multiplier).toString(),\r\n                transactionFee: '0',\r\n                transactionHash: i.transactionHash,\r\n                time: i.time.toString(),\r\n              };\r\n            })\r\n            return res\r\n            } else {\r\n              return {\r\n                direction: i.direction.trim(),\r\n                symbolId: '',\r\n                symbol: '',\r\n                volume: '',\r\n                price: '',\r\n                notional: '',\r\n                transactionFee: '0',\r\n                transactionHash: i.transactionHash,\r\n                time: i.time.toString(),\r\n              }\r\n            }\r\n          }\r\n        }).flat();\r\n    }\r\n      //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      // console.log(tradeFromBlock, liquidateFromBlock)\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n\r\n      const {initialBlock} = getPoolConfig2(poolAddress)\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch(err) {\r\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\r\n  }\r\n  return []\r\n};\r\n","//import { getOracleServerUrl } from \"../shared/utils/index.js\";\r\n\r\nexport const isProdChain = (chainId) => {\r\n  return [\"1\", \"56\", \"128\", \"137\"].includes(chainId.toString());\r\n};\r\n\r\nexport const PRESERVED_SYMBOLS = [\"BTCUSD\", \"ETHUSD\", \"BNBUSD\"];\r\n\r\nexport const getOracleServerUrl = (chainId, symbol, type = \"futures\") => {\r\n  //if (/^[0-9]+$/.test(symbolId.toString())) {\r\n  let method = \"get_signed_price\";\r\n  if (type === \"option\") {\r\n    method = \"get_signed_volatility\";\r\n  }\r\n  if (PRESERVED_SYMBOLS.includes(symbol)) {\r\n    method = \"get_price\";\r\n    symbol = `${symbol}_v2_bsc`;\r\n  }\r\n  let baseUrl = isProdChain(chainId)\r\n    ? `https://oracle4.deri.finance/${method}`\r\n    : `https://oracle2.deri.finance/${method}`;\r\n  const addSymbolParam = (url, symbol) => `${url}?symbol=${symbol}`;\r\n\r\n  if (symbol) {\r\n    return addSymbolParam(baseUrl, symbol);\r\n  } else {\r\n    return baseUrl;\r\n  }\r\n};\r\n\r\nexport const getPriceInfos = async (chainId, symbolList) => {\r\n  let url = getOracleServerUrl(chainId);\r\n  let retry = 3;\r\n  //console.log('url', url)\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    res = await fetch(url, {\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(symbolList),\r\n    });\r\n    if (res.ok) {\r\n      priceInfo = await res.json();\r\n      if (priceInfo.status.toString() === \"200\" && priceInfo.data) {\r\n        return priceInfo.data;\r\n      }\r\n    }\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(\r\n      `!! getPriceInfos exceed max retry(3): ${symbolList} ${JSON.stringify(\r\n        priceInfo\r\n      )}`\r\n    );\r\n  }\r\n};\r\n","import { bg } from \"../shared\";\r\n\r\nexport const calculateK = (indexPrice, liquidity, alpha) => {\r\n  return bg(indexPrice).times(alpha).div(liquidity);\r\n};\r\nexport const calculateDpmmPrice = (\r\n  indexPrice,\r\n  K,\r\n  tradersNetVolume,\r\n  multiplier\r\n) => {\r\n  return bg(indexPrice).times(\r\n    bg(1).plus(bg(K).times(tradersNetVolume).times(multiplier))\r\n  );\r\n};\r\nexport const calculateDpmmCost = (\r\n  indexPrice,\r\n  K,\r\n  tradersNetVolume,\r\n  multiplier,\r\n  tradeVolume\r\n) => {\r\n  return bg(indexPrice).times(\r\n    bg(multiplier)\r\n      .times(tradersNetVolume)\r\n      .plus(bg(multiplier).times(tradeVolume))\r\n      .pow(2)\r\n      .minus(bg(multiplier).times(tradersNetVolume).pow(2))\r\n      .times(K)\r\n      .div(2)\r\n      .plus(bg(tradeVolume).times(multiplier))\r\n  );\r\n};","// this file is generated by script, don't modify it !!!\r\nimport { ERC20Factory, offChainOracleFactory} from \"../../shared/contract/factory.js\";\r\nimport {\r\n  toWei,\r\n  getLiquidity,\r\n  getProtocolFeeAccrued,\r\n  getLastTimestamp,\r\n  bg,\r\n  processResult,\r\n} from \"../../shared/utils/index.js\";\r\nimport { normalizeSymbolUnit, SECONDS_IN_A_DAY } from \"../../shared/config\";\r\nimport {  getOraclePriceFromCache2 } from '../../shared/utils/oracle'\r\nimport { getPriceInfos } from \"../utils.js\";\r\nimport { lTokenLiteFactory, pTokenLiteFactory } from \"./factory.js\";\r\nimport { calculateK, calculateDpmmPrice, calculateDpmmCost } from \"../calc\";\r\n\r\n\r\n// klass = addInstanceMethods(klass, [])\r\nconst addMethods = (klass, fns = []) => {\r\n  if (fns.length > 0) {\r\n    for (let i = 0; i < fns.length; i++) {\r\n      klass = fns[i](klass);\r\n    }\r\n    return klass;\r\n  } else {\r\n    return klass;\r\n  }\r\n};\r\nconst overrideMethods = (klass, fns = []) => {\r\n  if (fns.length > 0) {\r\n    for (let i = 0; i < fns.length; i++) {\r\n      const fn = fns[i][0]\r\n      const args = fns[i].slice(1)\r\n      // console.log(fn, args)\r\n      klass = fn(klass)(...args);\r\n    }\r\n    return klass;\r\n  } else {\r\n    return klass;\r\n  }\r\n};\r\n\r\nconst checkOffChainOracleSymbol = async (chainId, oracleAddress, symbol) => {\r\n  try {\r\n    await offChainOracleFactory(chainId, oracleAddress).signer()\r\n    return symbol\r\n  } catch (err) {\r\n  }\r\n  try {\r\n    await offChainOracleFactory(chainId, oracleAddress).signatory()\r\n    return symbol\r\n  } catch (err) {\r\n  }\r\n  return ''\r\n};\r\n\r\nconst processMethod = (klass) => (methodName, propList = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const res = await originMethod.apply(this, args);\r\n    return processResult(res, propList);\r\n  };\r\n  return klass;\r\n};\r\n\r\nconst processTxMethod = (klass) => (methodName, toWeiArgPositions = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const prices = await this._getSymbolPrices()\r\n    // console.log('prices', prices)\r\n    let newArgs = args.map((arg, index) =>\r\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\r\n    );\r\n    newArgs.push(prices)\r\n    return await originMethod.apply(this, newArgs);\r\n  };\r\n  return klass;\r\n};\r\n\r\nconst init = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype['init'] = async function (isEstimatedApi = false) {\r\n    await this._init();\r\n    if (!this.addresses || !this.activeSymbolIds) {\r\n      [this.addresses, this.parameters, this.state, this.fundingPeriod] = await Promise.all([\r\n        this.getAddresses(),\r\n        this.getParameters(),\r\n        this.getPoolStateValues(),\r\n        this.getFundingPeriod(),\r\n      ]);\r\n      this.fundingPeriod = parseInt(this.fundingPeriod);\r\n      // console.log(this.addresses, this.parameters)\r\n      const { bTokenAddress, lTokenAddress, pTokenAddress } = this.addresses;\r\n      this.bToken = ERC20Factory(this.chainId, bTokenAddress);\r\n      this.pToken = pTokenLiteFactory(this.chainId, pTokenAddress);\r\n      this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\r\n\r\n      // init tokens\r\n      [this.bTokenSymbol ] = await Promise.all([\r\n        this.bToken.symbol(),\r\n      ]);\r\n      this.symbols = []\r\n      this.positions = []\r\n\r\n    }\r\n    // update symbols\r\n    // estimated for estimated* api use to disable async call\r\n    if (!isEstimatedApi) {\r\n      const symbolIds = await this.pToken.getActiveSymbolIds();\r\n      if (\r\n        !this.activeSymbolIds ||\r\n        this.activeSymbolIds.toString() !== symbolIds.toString()\r\n      ) {\r\n        this.poolLiquidity = await this.getPoolLiquidity();\r\n        this.activeSymbolIds = symbolIds;\r\n        this.symbols = await Promise.all(\r\n          this.activeSymbolIds.reduce(\r\n            (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n            []\r\n          )\r\n        );\r\n        this.activeSymbolNames = this.symbols.map((s) => s.symbol);\r\n        this.offChainOracleSymbolNames = await Promise.all(\r\n          this.symbols\r\n            .map((s) => s.oracleAddress)\r\n            .reduce(\r\n              (acc, o, index) => [\r\n                ...acc,\r\n                checkOffChainOracleSymbol(\r\n                  this.chainId,\r\n                  o,\r\n                  this.symbols[index].symbol\r\n                ),\r\n              ],\r\n              []\r\n            )\r\n        );\r\n        this.offChainOracleSymbolIds = this.activeSymbolIds.reduce(\r\n          (acc, i, index) => {\r\n            return this.offChainOracleSymbolNames[index] === ''\r\n              ? acc\r\n              : [...acc, i];\r\n          },\r\n          []\r\n        );\r\n        this.offChainOracleSymbolNames = this.offChainOracleSymbolNames.filter(\r\n          (s) => s && s !== ''\r\n        );\r\n        console.log(\r\n          `${this.contractAddress} offchain`,\r\n          this.offChainOracleSymbolNames\r\n        );\r\n      }\r\n    }\r\n  };\r\n  return klass;\r\n};\r\n\r\n// this.addresses\r\n// this.parameters\r\n\r\nconst getConfig = (klass) => {\r\n  klass.prototype[\"getConfig\"] = async function () {\r\n    return {\r\n      pool: this.contractAddress,\r\n      pToken: this.addresses.pTokenAddress,\r\n      lToken: this.addresses.lTokenAddress,\r\n      bToken: this.addresses.bTokenAddress,\r\n      bTokenSymbol: this.bTokenSymbol,\r\n      symbols: this.symbols.map((s, index) => ({\r\n        symbolId: this.activeSymbolIds[index],\r\n        symbol: s.symbol,\r\n        unit: normalizeSymbolUnit(s.symbol),\r\n      })),\r\n      initialBlock: this.initialBlock,\r\n      type: \"perpetual\",\r\n      version: \"v2_lite\",\r\n      versionId: \"v2_lite_dpmm\",\r\n      chainId: this.chainId,\r\n    };\r\n  };\r\n  return klass;\r\n};\r\n\r\n// getStateValues\r\nconst getStateValues = (klass) => {\r\n  klass.prototype[\"getStateValues\"] = async function () {\r\n    const res = await this.getPoolStateValues()\r\n    // update\r\n    this.state = { ...this.state, ...res}\r\n    return this.state\r\n  }\r\n  return klass\r\n}\r\n\r\n// getSymbol()\r\nconst getSymbols = (klass) => {\r\n  klass.prototype[\"getSymbols\"] = async function (symbolId) {\r\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\r\n    const symbols = await Promise.all(\r\n      symbolIds.reduce(\r\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n        []\r\n      )\r\n    );\r\n\r\n    const indexPrices = await Promise.all(\r\n      symbols.map((s) => {\r\n        const oracleAddress = this.offChainOracleSymbolIds.includes(s.symbolId) ? '' : s.oracleAddress\r\n        return getOraclePriceFromCache2.get(this.chainId, s.symbol, oracleAddress)\r\n      })\r\n    )\r\n    symbols.forEach((s, index) => {\r\n      s.indexPrice = indexPrices[index]\r\n      s.K = calculateK(\r\n        s.indexPrice,\r\n        this.state.liquidity,\r\n        s.alpha\r\n      ).toString();\r\n      //console.log(s.K, s.indexPrice, s.tradersNetVolume, s.multiplier)\r\n      s.dpmmPrice = calculateDpmmPrice(\r\n        s.indexPrice,\r\n        s.K,\r\n        s.tradersNetVolume,\r\n        s.multiplier\r\n      ).toString();\r\n      //s.fundingPerSecond = bg(s.dpmmPrice).minus(s.indexPrice).times(s.multiplier).div(this.fundingPeriod).toString()\r\n      s.fundingPerSecond = bg(s.dpmmPrice).minus(s.indexPrice).div(this.fundingPeriod).toString()\r\n      s.funding = bg(s.fundingPerSecond).times(SECONDS_IN_A_DAY).toString()\r\n    });\r\n\r\n    // update\r\n    if (symbolId) {\r\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\r\n      if (symbolIndex > -1) {\r\n        this.symbols[symbolIndex] = symbols[0]\r\n      }\r\n    } else {\r\n      this.symbols = symbols\r\n    }\r\n    \r\n    return symbols\r\n  };\r\n  return klass\r\n};\r\n\r\n// get traders positions\r\nconst getPositions = (klass) => {\r\n  klass.prototype[\"getPositions\"] = async function (account, symbolId) {\r\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\r\n    const positions = await Promise.all(\r\n      symbolIds.reduce(\r\n        (acc, symbolId) => [...acc, this.pToken.getPosition(account,symbolId)],\r\n        []\r\n      )\r\n    );\r\n    await this.getLastTimestamp()\r\n\r\n    const timeDiff = bg(Math.floor(Date.now() / 1000)).minus(\r\n      this.state.lastTimestamp\r\n    );\r\n    positions.forEach((p, index) => {\r\n      const symbol = this.symbols[index];\r\n      p.fundingAccrued = bg(p.volume)\r\n        .times(\r\n          bg(symbol.cumulativeFundingRate)\r\n            .plus(bg(timeDiff).times(this.symbols[index].fundingPerSecond))\r\n            .minus(p.lastCumulativeFundingRate)\r\n        )\r\n        .toString();\r\n      p.traderPnl = calculateDpmmCost(\r\n        symbol.indexPrice,\r\n        symbol.K,\r\n        symbol.tradersNetVolume,\r\n        symbol.multiplier,\r\n        bg(p.volume).negated().toString()\r\n      )\r\n        .negated()\r\n        .minus(p.cost).toString();\r\n\r\n      p.notional = bg(p.volume).abs().times(symbol.indexPrice).times(symbol.multiplier).toString()\r\n    });\r\n\r\n    // update\r\n    if (symbolId) {\r\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\r\n      if (symbolIndex > -1) {\r\n        this.positions[symbolIndex] = positions[0]\r\n      }\r\n    } else {\r\n      this.positions = positions\r\n    }\r\n\r\n    return positions\r\n  };\r\n  return klass\r\n};\r\n\r\n// check is updated\r\nconst isSymbolsUpdated = (klass) => {\r\n  klass.prototype['isSymbolsUpdated'] = function() {\r\n    return Array.isArray(this.symbols) && this.symbols.length > 0 && this.symbols[0].K != null\r\n  }\r\n  return klass\r\n}\r\nconst isPositionsUpdated = (klass) => {\r\n  klass.prototype['isPositionsUpdated'] = function() {\r\n    return Array.isArray(this.positions) && this.positions.length > 0 && this.positions[0].volume != null\r\n  }\r\n  return klass\r\n}\r\n\r\nconst getTraderLiquidity = (klass) => {\r\n  klass.prototype[\"getTraderLiquidity\"] = async function(account) {\r\n    return await this.lToken.balanceOf(account)\r\n  }\r\n  return klass\r\n}\r\n\r\n\r\nconst getDynamicEquity = (klass) => {\r\n  klass.prototype['getDynamicEquity'] = async function() {\r\n    if (!this.isSymbolsUpdated) {\r\n      await this.getSymbols()\r\n    }\r\n    //console.log(this.symbols)\r\n    const res = bg(this.state.liquidity)\r\n      .plus(\r\n        this.symbols.reduce(\r\n          (acc, s) =>\r\n            acc\r\n              .plus(s.tradersNetCost)\r\n              .minus(\r\n                bg(s.tradersNetVolume).times(s.dpmmPrice).times(s.multiplier)\r\n              ),\r\n          bg(0)\r\n        )\r\n      )\r\n      .toString();\r\n    this.state.dynamicEquity = res\r\n    return res\r\n  }\r\n  return klass\r\n}\r\n\r\nconst getPoolRequiredMargin = (klass) => {\r\n  klass.prototype['getPoolRequiredMargin'] = async function () {\r\n    if (!this.isSymbolsUpdated) {\r\n      await this.getSymbols()\r\n    }\r\n    const { poolMarginRatio } = this.parameters;\r\n    return this.symbols\r\n      .reduce(\r\n        (acc, s) =>\r\n          acc.plus(\r\n            bg(s.tradersNetVolume).times(s.indexPrice).times(s.multiplier).abs()\r\n          ),\r\n        bg(0)\r\n      )\r\n      .times(poolMarginRatio).toString()\r\n  };\r\n  return klass\r\n}\r\n\r\nconst getTraderMarginStatus = (klass) => {\r\n  klass.prototype['getTraderMarginStatus'] = async function (account) {\r\n    if (!this.isSymbolsUpdated) {\r\n      await this.getSymbols()\r\n    }\r\n    if (!this.isPositionsUpdated) {\r\n      await this.getPositions(account)\r\n    }\r\n    if (!this.margin) {\r\n      this.margin = await this.pToken.getMargin(account)\r\n    }\r\n    // console.log(this.positions)\r\n    // console.log(this.symbols)\r\n    const { initialMarginRatio } = this.parameters;\r\n    let dynamicMargin = bg(this.margin), requiredInitialMargin = bg(0)\r\n    for (let i = 0; i < this.activeSymbolIds.length; i++) {\r\n      const s = this.symbols[i];\r\n      const p = this.positions[i];\r\n      dynamicMargin = dynamicMargin.plus(\r\n        bg(p.volume).times(s.dpmmPrice).times(s.multiplier).minus(p.cost)\r\n      );\r\n      requiredInitialMargin = requiredInitialMargin.plus(\r\n        bg(p.volume)\r\n          .times(s.indexPrice)\r\n          .times(s.multiplier)\r\n          .abs()\r\n          .times(initialMarginRatio)\r\n      );\r\n    }\r\n    return [dynamicMargin.toString(), requiredInitialMargin.toString()];\r\n  };\r\n  return klass\r\n}\r\n\r\nconst _getSymbolPrices = (klass) => {\r\n  klass.prototype[\"_getSymbolPrices\"] = async function () {\r\n    await this.init()\r\n    let prices = []\r\n    if (this.offChainOracleSymbolIds.length > 0) {\r\n        const priceInfos = await getPriceInfos(this.chainId, this.offChainOracleSymbols);\r\n        prices = Object.values(priceInfos).reduce((acc, p, index) => {\r\n        acc.push([\r\n            this.offChainOracleSymbolIds[\r\n            this.offChainOracleSymbols.indexOf(Object.keys(priceInfos)[index])\r\n            ],\r\n            p.timestamp,\r\n            p.price,\r\n            parseInt(p.v).toString(),\r\n            p.r,\r\n            p.s,\r\n        ]);\r\n        return acc;\r\n        }, []);\r\n    }\r\n    return prices;\r\n  };\r\n  return klass;\r\n};\r\n\r\nexport const perpetualPoolLiteAdapter = (klass) => {\r\n  //klass = processMethod(klass, \"getFundingPeriod\")\r\n\r\n  klass = addMethods(klass, [\r\n    init,\r\n\r\n    getConfig,\r\n    getLiquidity,\r\n    getLastTimestamp,\r\n    getProtocolFeeAccrued,\r\n    getStateValues,\r\n    getSymbols,\r\n    getPositions,\r\n    getDynamicEquity,\r\n    getPoolRequiredMargin,\r\n    getTraderMarginStatus,\r\n    isSymbolsUpdated,\r\n    isPositionsUpdated,\r\n    getTraderLiquidity,\r\n    _getSymbolPrices,\r\n  ]);\r\n\r\n  klass = overrideMethods(klass, [\r\n    [\r\n      processMethod,\r\n      'getParameters',\r\n      [\r\n        'poolMarginRatio',\r\n        'initialMarginRatio',\r\n        'maintenanceMarginRatio',\r\n        'minLiquidationReward',\r\n        'maxLiquidationReward',\r\n        'liquidationCutRatio',\r\n        'protocolFeeCollectRatio',\r\n      ],\r\n    ],\r\n    [processMethod, 'getPoolStateValues', ['liquidity', 'protocolFeeAccrued']],\r\n    [processMethod, 'getFundingPeriod'],\r\n    [\r\n      processMethod,\r\n      'getSymbol',\r\n      [\r\n        'multiplier',\r\n        'feeRatio',\r\n        'fundingRateCoefficient',\r\n        'price',\r\n        'alpha',\r\n        'cumulativeFundingRate',\r\n        'tradersNetVolume',\r\n        'tradersNetCost',\r\n      ],\r\n    ],\r\n  ]);\r\n\r\n  klass = overrideMethods(klass, [\r\n    [processTxMethod, 'addLiquidity', ['1']],\r\n    [processTxMethod, 'removeLiquidity', ['1']],\r\n    [processTxMethod, 'addMargin', ['1']],\r\n    [processTxMethod, 'removeMargin', ['1']],\r\n    [processTxMethod, 'trade', ['2']],\r\n  ]);\r\n\r\n  return klass;\r\n};\r\n\r\nexport const lTokenLiteAdapter = (klass) => {\r\n  return overrideMethods(klass, [\r\n    [processMethod, 'balanceOf'],\r\n    [processMethod, 'totalSupply'],\r\n  ]);\r\n};\r\n\r\nexport const pTokenLiteAdapter = (klass) => {\r\n  return overrideMethods(klass, [\r\n    [processMethod, 'getMargin'],\r\n    [\r\n      processMethod,\r\n      'getPosition',\r\n      ['volume', 'cost', 'lastCumulativeFundingRate'],\r\n    ],\r\n  ]);\r\n};\r\n\r\nexport const perpetualPoolLiteManagerAdapter = (klass) => {\r\n    // klass = processMethod(klass, 'symbol', []);\r\n    return klass\r\n}\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nexport const perpetualPoolLiteAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256[7]\",\r\n                \"name\": \"parameters\",\r\n                \"type\": \"uint256[7]\"\r\n            },\r\n            {\r\n                \"internalType\": \"address[5]\",\r\n                \"name\": \"addresses\",\r\n                \"type\": \"address[5]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lp\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lShares\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"AddLiquidity\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"AddMargin\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oldController\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newController\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"ChangeController\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"migrationTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"source\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"target\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"ExecuteMigration\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"liquidator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"reward\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Liquidate\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"migrationTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"source\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"target\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"PrepareMigration\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"collector\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ProtocolFeeCollection\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lp\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lShares\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"RemoveLiquidity\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"RemoveMargin\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"indexPrice\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeVolume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeCost\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeFee\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"Trade\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\r\n                \"name\": \"prices\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"addLiquidity\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"multiplier\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"feeRatio\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"alpha\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addSymbol\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"approveMigration\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"claimNewController\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"collectProtocolFee\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"controller\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"source\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"executeMigration\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"source\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lastTimestamp\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"executeMigrationWithTimestamp\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getAddresses\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"bTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"pTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"liquidatorQualifierAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"protocolFeeCollector\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getFundingPeriod\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getParameters\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"poolMarginRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"initialMarginRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"maintenanceMarginRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"minLiquidationReward\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"maxLiquidationReward\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"liquidationCutRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"protocolFeeCollectRatio\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getPoolStateValues\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"liquidity\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lastTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"protocolFeeAccrued\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getSymbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"string\",\r\n                        \"name\": \"symbol\",\r\n                        \"type\": \"string\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"oracleAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"multiplier\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"feeRatio\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"alpha\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"tradersNetVolume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"tradersNetCost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\r\n                \"name\": \"prices\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidate\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"pTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\r\n                \"name\": \"prices\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidate\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"migrationDestination\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"migrationTimestamp\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"target\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"graceDays\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"prepareMigration\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lShares\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\r\n                \"name\": \"prices\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"removeLiquidity\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\r\n                \"name\": \"prices\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"removeMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"removeSymbol\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"period\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setFundingPeriod\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newController\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setNewController\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"feeRatio\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"alpha\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setSymbolParameters\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"toggleCloseOnly\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeVolume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\r\n                \"name\": \"prices\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"trade\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nexport const lTokenLiteAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"name_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"allowance\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"decimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"pure\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"mint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"pool\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newPool\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setPool\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transfer\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nexport const pTokenLiteAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"name_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"ApprovalForAll\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"UpdateMargin\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"volume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"cost\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"lastCumulativeFundingRate\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"UpdatePosition\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"delta\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"addMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addSymbolId\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"exists\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getActiveSymbolIds\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256[]\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256[]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getApproved\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getMargin\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getNumPositionHolders\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getPosition\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"volume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPTokenLite.Position\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getTokenId\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"isActiveSymbolId\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"isApprovedForAll\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"mint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ownerOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"pool\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"removeSymbolId\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes\",\r\n                \"name\": \"data\",\r\n                \"type\": \"bytes\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"setApprovalForAll\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newPool\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setPool\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"bytes4\",\r\n                \"name\": \"interfaceId\",\r\n                \"type\": \"bytes4\"\r\n            }\r\n        ],\r\n        \"name\": \"supportsInterface\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"toggleCloseOnly\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalMinted\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"margin\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"updateMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"volume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPTokenLite.Position\",\r\n                \"name\": \"position\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"name\": \"updatePosition\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { contractFactory } from '../../shared/utils/index.js';\r\nimport {\r\n  perpetualPoolLiteAdapter,\r\n  lTokenLiteAdapter,\r\n  pTokenLiteAdapter,\r\n} from \"./adapter.js\";\r\n\r\nimport { PerpetualPoolLite } from './gen/PerpetualPoolLite.js';\r\nimport { LTokenLite } from './gen/LTokenLite.js';\r\nimport { PTokenLite } from './gen/PTokenLite.js';\r\n\r\n\r\nexport const perpetualPoolLiteDpmmFactory = contractFactory(\r\n  perpetualPoolLiteAdapter(PerpetualPoolLite)\r\n);\r\nexport const lTokenLiteFactory = contractFactory(lTokenLiteAdapter(LTokenLite));\r\nexport const pTokenLiteFactory = contractFactory(pTokenLiteAdapter(PTokenLite));\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { perpetualPoolLiteAbi } from '../abi/perpetualPoolLiteAbi.js'\r\n\r\nexport class PerpetualPoolLite extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, perpetualPoolLiteAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  //  async controller() {\r\n  //    const res = await this._call('controller', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getAddresses() {\r\n    const res = await this._call('getAddresses', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getFundingPeriod() {\r\n    const res = await this._call('getFundingPeriod', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getPoolStateValues() {\r\n    const res = await this._call('getPoolStateValues', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getSymbol(symbolId) {\r\n    const res = await this._call('getSymbol', [symbolId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async migrationDestination() {\r\n  //    const res = await this._call('migrationDestination', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async migrationTimestamp() {\r\n  //    const res = await this._call('migrationTimestamp', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n\r\n  // tx\r\n  async addLiquidity(accountAddress, bAmount, prices) {\r\n    return await this._transact('addLiquidity', [bAmount, prices], accountAddress)\r\n  }\r\n  async addMargin(accountAddress, bAmount) {\r\n    return await this._transact('addMargin', [bAmount], accountAddress)\r\n  }\r\n  //  async addSymbol(accountAddress, symbolId, symbol, oracleAddress, multiplier, feeRatio, alpha) {\r\n  //    return await this._transact('addSymbol', [symbolId, symbol, oracleAddress, multiplier, feeRatio, alpha], accountAddress)\r\n  //  }\r\n  //  async approveMigration(accountAddress) {\r\n  //    return await this._transact('approveMigration', [], accountAddress)\r\n  //  }\r\n  //  async claimNewController(accountAddress) {\r\n  //    return await this._transact('claimNewController', [], accountAddress)\r\n  //  }\r\n  //  async collectProtocolFee(accountAddress) {\r\n  //    return await this._transact('collectProtocolFee', [], accountAddress)\r\n  //  }\r\n  //  async executeMigration(accountAddress, source) {\r\n  //    return await this._transact('executeMigration', [source], accountAddress)\r\n  //  }\r\n  //  async executeMigrationWithTimestamp(accountAddress, source, lastTimestamp) {\r\n  //    return await this._transact('executeMigrationWithTimestamp', [source, lastTimestamp], accountAddress)\r\n  //  }\r\n  //  async liquidate(accountAddress, account, prices) {\r\n  //    return await this._transact('liquidate', [account, prices], accountAddress)\r\n  //  }\r\n  //  async liquidate(accountAddress, pTokenId, prices) {\r\n  //    return await this._transact('liquidate', [pTokenId, prices], accountAddress)\r\n  //  }\r\n  //  async prepareMigration(accountAddress, target, graceDays) {\r\n  //    return await this._transact('prepareMigration', [target, graceDays], accountAddress)\r\n  //  }\r\n  async removeLiquidity(accountAddress, lShares, prices) {\r\n    return await this._transact('removeLiquidity', [lShares, prices], accountAddress)\r\n  }\r\n  async removeMargin(accountAddress, bAmount, prices) {\r\n    return await this._transact('removeMargin', [bAmount, prices], accountAddress)\r\n  }\r\n  //  async removeSymbol(accountAddress, symbolId) {\r\n  //    return await this._transact('removeSymbol', [symbolId], accountAddress)\r\n  //  }\r\n  //  async setFundingPeriod(accountAddress, period) {\r\n  //    return await this._transact('setFundingPeriod', [period], accountAddress)\r\n  //  }\r\n  //  async setNewController(accountAddress, newController) {\r\n  //    return await this._transact('setNewController', [newController], accountAddress)\r\n  //  }\r\n  //  async setSymbolParameters(accountAddress, symbolId, oracleAddress, feeRatio, alpha) {\r\n  //    return await this._transact('setSymbolParameters', [symbolId, oracleAddress, feeRatio, alpha], accountAddress)\r\n  //  }\r\n  //  async toggleCloseOnly(accountAddress, symbolId) {\r\n  //    return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\r\n  //  }\r\n  async trade(accountAddress, symbolId, tradeVolume, prices) {\r\n    return await this._transact('trade', [symbolId, tradeVolume, prices], accountAddress)\r\n  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { lTokenLiteAbi } from '../abi/lTokenLiteAbi.js'\r\n\r\nexport class LTokenLite extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, lTokenLiteAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  //  async allowance(owner, spender) {\r\n  //    const res = await this._call('allowance', [owner, spender])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async balanceOf(account) {\r\n    const res = await this._call('balanceOf', [account])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async decimals() {\r\n  //    const res = await this._call('decimals', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async name() {\r\n  //    const res = await this._call('name', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async symbol() {\r\n  //    const res = await this._call('symbol', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async approve(accountAddress, spender, amount) {\r\n  //    return await this._transact('approve', [spender, amount], accountAddress)\r\n  //  }\r\n  //  async burn(accountAddress, account, amount) {\r\n  //    return await this._transact('burn', [account, amount], accountAddress)\r\n  //  }\r\n  //  async mint(accountAddress, account, amount) {\r\n  //    return await this._transact('mint', [account, amount], accountAddress)\r\n  //  }\r\n  //  async setPool(accountAddress, newPool) {\r\n  //    return await this._transact('setPool', [newPool], accountAddress)\r\n  //  }\r\n  //  async transfer(accountAddress, to, amount) {\r\n  //    return await this._transact('transfer', [to, amount], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, amount) {\r\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { pTokenLiteAbi } from '../abi/pTokenLiteAbi.js'\r\n\r\nexport class PTokenLite extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, pTokenLiteAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async balanceOf(owner) {\r\n    const res = await this._call('balanceOf', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async exists(owner) {\r\n    const res = await this._call('exists', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getActiveSymbolIds() {\r\n    const res = await this._call('getActiveSymbolIds', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async getApproved(tokenId) {\r\n  //    const res = await this._call('getApproved', [tokenId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getMargin(owner) {\r\n    const res = await this._call('getMargin', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    const res = await this._call('getNumPositionHolders', [symbolId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getPosition(owner, symbolId) {\r\n    const res = await this._call('getPosition', [owner, symbolId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async getTokenId(owner) {\r\n  //    const res = await this._call('getTokenId', [owner])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async isActiveSymbolId(symbolId) {\r\n    const res = await this._call('isActiveSymbolId', [symbolId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async isApprovedForAll(owner, operator) {\r\n  //    const res = await this._call('isApprovedForAll', [owner, operator])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async name() {\r\n  //    const res = await this._call('name', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async ownerOf(tokenId) {\r\n  //    const res = await this._call('ownerOf', [tokenId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async supportsInterface(interfaceId) {\r\n  //    const res = await this._call('supportsInterface', [interfaceId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async symbol() {\r\n  //    const res = await this._call('symbol', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async totalMinted() {\r\n  //    const res = await this._call('totalMinted', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async addMargin(accountAddress, owner, delta) {\r\n  //    return await this._transact('addMargin', [owner, delta], accountAddress)\r\n  //  }\r\n  //  async addSymbolId(accountAddress, symbolId) {\r\n  //    return await this._transact('addSymbolId', [symbolId], accountAddress)\r\n  //  }\r\n  //  async approve(accountAddress, operator, tokenId) {\r\n  //    return await this._transact('approve', [operator, tokenId], accountAddress)\r\n  //  }\r\n  //  async burn(accountAddress, owner) {\r\n  //    return await this._transact('burn', [owner], accountAddress)\r\n  //  }\r\n  //  async mint(accountAddress, owner) {\r\n  //    return await this._transact('mint', [owner], accountAddress)\r\n  //  }\r\n  //  async removeSymbolId(accountAddress, symbolId) {\r\n  //    return await this._transact('removeSymbolId', [symbolId], accountAddress)\r\n  //  }\r\n  //  async safeTransferFrom(accountAddress, from, to, tokenId) {\r\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\r\n  //  }\r\n  //  async safeTransferFrom(accountAddress, from, to, tokenId, data) {\r\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\r\n  //  }\r\n  //  async setApprovalForAll(accountAddress, operator, approved) {\r\n  //    return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\r\n  //  }\r\n  //  async setPool(accountAddress, newPool) {\r\n  //    return await this._transact('setPool', [newPool], accountAddress)\r\n  //  }\r\n  //  async toggleCloseOnly(accountAddress, symbolId) {\r\n  //    return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, tokenId) {\r\n  //    return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\r\n  //  }\r\n  //  async updateMargin(accountAddress, owner, margin) {\r\n  //    return await this._transact('updateMargin', [owner, margin], accountAddress)\r\n  //  }\r\n  //  async updatePosition(accountAddress, owner, symbolId, position) {\r\n  //    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\r\n  //  }\r\n\r\n}","import { bg, max, min } from '../../shared/utils';\r\nimport { checkSymbolId } from '../../shared/utils/derijsnext';\r\nimport { contractFactory } from '../../shared/utils/index.js';\r\nimport { getIndexInfo, SECONDS_IN_A_DAY } from '../../shared/config';\r\nimport { getOraclePriceFromCache2 } from '../../shared/utils/oracle';\r\nimport { calculateLiquidationPrice } from '../../v2/calculation';\r\nimport { calculateDpmmPrice } from '../calc';\r\nimport { perpetualPoolLiteDpmmFactory} from './factory';\r\nimport { liquidatePriceCache } from '../../shared/api/api_globals';\r\n\r\nexport class PoolViewer {\r\n  constructor(chainId, poolAddress) {\r\n    this.chainId = chainId;\r\n    this.poolAddress = poolAddress;\r\n    this.pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n  }\r\n  async init(isEstimatedApi) {\r\n    await this.pool.init(isEstimatedApi);\r\n  }\r\n\r\n  // =================\r\n  //  api\r\n  // =================\r\n  async getLiquidityInfo(accountAddress) {\r\n    await this.init();\r\n    const pool = this.pool;\r\n    const lToken = pool.lToken;\r\n    const [liquidity, lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n      pool.getPoolLiquidity(),\r\n      lToken.balanceOf(accountAddress),\r\n      lToken.totalSupply(),\r\n    ]);\r\n    const { poolMarginRatio } = pool.parameters;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const poolDynamicEquity = await pool.getDynamicEquity();\r\n    const shareValue = bg(lTokenTotalSupply).eq(0)\r\n      ? '0'\r\n      : bg(poolDynamicEquity).div(lTokenTotalSupply).toString();\r\n\r\n    const value = pool.symbols.reduce((acc, s) => {\r\n      return acc.plus(\r\n        bg(s.tradersNetVolume).times(s.multiplier).times(s.dpmmPrice)\r\n      );\r\n    }, bg(0));\r\n    const removable = bg(poolDynamicEquity).minus(\r\n      bg(value).times(poolMarginRatio)\r\n    );\r\n    return {\r\n      totalSupply: lTokenTotalSupply,\r\n      poolLiquidity: liquidity,\r\n      shares: lTokenBalance,\r\n      shareValue,\r\n      maxRemovableShares: max(\r\n        min(\r\n          bg(lTokenBalance),\r\n          bg(shareValue).eq(0) ? '0' : removable.div(shareValue)\r\n        ),\r\n        bg(0)\r\n      ),\r\n    };\r\n  }\r\n\r\n  async getSpecification(symbolId) {\r\n    await this.init();\r\n    const pool = this.pool;\r\n\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbolInfo = pool.symbols[symbolIndex];\r\n\r\n    const { symbol, multiplier, feeRatio } = symbolInfo;\r\n    const parameterInfo = pool.parameters;\r\n    return {\r\n      symbol,\r\n      bTokenSymbol: pool.bTokenSymbol,\r\n      multiplier,\r\n      feeRatio,\r\n      fundingRateCoefficient: bg(1).div(pool.fundingPeriod).toString(),\r\n      minPoolMarginRatio: parameterInfo.poolMarginRatio,\r\n      minInitialMarginRatio: parameterInfo.initialMarginRatio,\r\n      minMaintenanceMarginRatio: parameterInfo.maintenanceMarginRatio,\r\n      minLiquidationReward: parameterInfo.minLiquidationReward,\r\n      maxLiquidationReward: parameterInfo.maxLiquidationReward,\r\n      liquidationCutRatio: parameterInfo.liquidationCutRatio,\r\n      protocolFeeCollectRatio: parameterInfo.protocolFeeCollectRatio,\r\n      indexConstituents: getIndexInfo(symbol),\r\n    };\r\n  }\r\n\r\n  async getPositionInfo(accountAddress, symbolId) {\r\n    await this.init();\r\n    const pool = this.pool;\r\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\r\n    const symbolIndex = pool.activeSymbolIds.indexOf(symbolId);\r\n    if (symbolIndex > -1) {\r\n      const oracleAddress =\r\n        pool.offChainOracleSymbolIds.indexOf(symbolId) > -1\r\n          ? ''\r\n          : pool.symbols[symbolIndex].oracleAddress;\r\n      const [\r\n        symbols,\r\n        positions,\r\n        lastTimestamp,\r\n        margin,\r\n        fundingPeriod,\r\n        price,\r\n      ] = await Promise.all([\r\n        pool.getSymbols(),\r\n        pool.getPositions(accountAddress),\r\n        pool.getLastTimestamp(),\r\n        pool.pToken.getMargin(accountAddress),\r\n        pool.getFundingPeriod(),\r\n        getOraclePriceFromCache2.get(\r\n          this.chainId,\r\n          pool.symbols[symbolIndex].symbol,\r\n          oracleAddress\r\n        ),\r\n      ]);\r\n\r\n      const symbol = symbols[symbolIndex];\r\n      const position = positions[symbolIndex];\r\n      // const { volume } = position\r\n      // const { multiplier, indexPrice } = symbol\r\n      const marginHeld = symbols.reduce((acc, s, index) => {\r\n        return acc.plus(\r\n          bg(s.indexPrice)\r\n            .times(s.multiplier)\r\n            .times(positions[index].volume)\r\n            .times(initialMarginRatio)\r\n            .abs()\r\n        );\r\n      }, bg(0));\r\n      const marginHeldBySymbol = bg(position.volume)\r\n        .times(symbol.multiplier)\r\n        .times(symbol.indexPrice)\r\n        .times(initialMarginRatio)\r\n        .abs();\r\n\r\n      const unrealizedPnl = symbols.reduce((acc, s, index) => {\r\n        return acc.plus(\r\n          bg(s.dpmmPrice)\r\n            .times(s.multiplier)\r\n            .times(positions[index].volume)\r\n            .minus(positions[index].cost)\r\n        );\r\n      }, bg(0));\r\n      const unrealizedPnlList = symbols.map((s, index) => {\r\n        return [\r\n          s.symbol,\r\n          bg(s.dpmmPrice)\r\n            .times(s.multiplier)\r\n            .times(positions[index].volume)\r\n            .minus(positions[index].cost)\r\n            .toString(),\r\n        ];\r\n      });\r\n      const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\r\n      const dynamicCost = symbols.reduce((acc, s, index) => {\r\n        if (index !== parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(positions[index].volume).times(s.dpmmPrice).times(s.multiplier)\r\n          );\r\n        } else {\r\n          return acc;\r\n        }\r\n      }, bg(0));\r\n      const fundingFee = bg(symbol.cumulativeFundingRate)\r\n        .minus(position.lastCumulativeFundingRate)\r\n        .plus(\r\n          bg(symbol.dpmmPrice)\r\n            .minus(symbol.indexPrice)\r\n            .times(symbol.multiplier)\r\n            .div(fundingPeriod)\r\n            .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\r\n        )\r\n        .times(position.volume)\r\n        .toString();\r\n\r\n      //console.log(position.volume, margin, totalCost.toString(), dynamicCost.toString(), symbol.multiplier, maintenanceMarginRatio)\r\n\r\n      // set liquidatePrice cache\r\n      liquidatePriceCache.set(this.poolAddress, {\r\n        volume: position.volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        price,\r\n        multiplier: symbol.multiplier,\r\n        minMaintenanceMarginRatio: maintenanceMarginRatio,\r\n      });\r\n\r\n      return {\r\n        symbol: symbol.symbol,\r\n        price: price,\r\n        markPrice: symbol.dpmmPrice.toString(),\r\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\r\n        averageEntryPrice: bg(position.volume).eq(0)\r\n          ? '0'\r\n          : bg(position.cost)\r\n              .div(position.volume)\r\n              .div(symbol.multiplier)\r\n              .toString(),\r\n        margin: margin,\r\n        marginHeld: marginHeld.toString(),\r\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n        unrealizedPnl: unrealizedPnl.toString(),\r\n        unrealizedPnlList,\r\n        fundingFee,\r\n        liquidationPrice: calculateLiquidationPrice(\r\n          position.volume,\r\n          margin,\r\n          totalCost,\r\n          dynamicCost,\r\n          symbol.multiplier,\r\n          maintenanceMarginRatio\r\n        ).toString(),\r\n      };\r\n    }\r\n  }\r\n\r\n  async getPositionInfos(accountAddress) {\r\n    await this.init();\r\n    const pool = this.pool;\r\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\r\n    const [\r\n      symbols,\r\n      positions,\r\n      lastTimestamp,\r\n      margin,\r\n      fundingPeriod,\r\n    ] = await Promise.all([\r\n      pool.getSymbols(),\r\n      pool.getPositions(accountAddress),\r\n      pool.getLastTimestamp(),\r\n      pool.pToken.getMargin(accountAddress),\r\n      pool.getFundingPeriod(),\r\n    ]);\r\n    const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\r\n\r\n    return positions.map((p, index) => {\r\n      const symbolIndex = index;\r\n      const symbol = symbols[symbolIndex];\r\n      const position = positions[symbolIndex];\r\n      // const { volume } = position\r\n      // const { multiplier, indexPrice } = symbol\r\n      const marginHeld = symbols.reduce((acc, s, index) => {\r\n        return acc.plus(\r\n          bg(s.indexPrice)\r\n            .times(s.multiplier)\r\n            .times(positions[index].volume)\r\n            .times(initialMarginRatio)\r\n            .abs()\r\n        );\r\n      }, bg(0));\r\n      const marginHeldBySymbol = bg(position.volume)\r\n        .times(symbol.multiplier)\r\n        .times(symbol.indexPrice)\r\n        .times(initialMarginRatio)\r\n        .abs();\r\n      const unrealizedPnl = bg(symbol.dpmmPrice).times(symbol.multiplier).times(p.volume).minus(p.cost)\r\n      const dynamicCost = symbols.reduce((acc, s, idx) => {\r\n        if (idx !== index) {\r\n          return acc.plus(\r\n            bg(positions[idx].volume).times(s.dpmmPrice).times(s.multiplier)\r\n          );\r\n        } else {\r\n          return acc;\r\n        }\r\n      }, bg(0));\r\n      const fundingFee = bg(symbol.cumulativeFundingRate)\r\n        .minus(position.lastCumulativeFundingRate)\r\n        .plus(\r\n          bg(symbol.dpmmPrice)\r\n            .minus(symbol.indexPrice)\r\n            .times(symbol.multiplier)\r\n            .div(fundingPeriod)\r\n            .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\r\n        )\r\n        .times(position.volume)\r\n        .toString();\r\n      return {\r\n        symbol: symbol.symbol,\r\n        symbolId: symbol.symbolId,\r\n        price: symbol.indexPrice,\r\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\r\n        averageEntryPrice: bg(position.volume).eq(0)\r\n          ? '0'\r\n          : bg(position.cost)\r\n              .div(position.volume)\r\n              .div(symbol.multiplier)\r\n              .toString(),\r\n        margin: margin,\r\n        marginHeld: marginHeld.toString(),\r\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n        unrealizedPnl: unrealizedPnl.toString(),\r\n        fundingFee,\r\n        liquidationPrice: calculateLiquidationPrice(\r\n          position.volume,\r\n          margin,\r\n          totalCost,\r\n          dynamicCost,\r\n          symbol.multiplier,\r\n          maintenanceMarginRatio\r\n        ).toString(),\r\n      };\r\n    }).filter((p) => p.volume !== '0');\r\n  }\r\n\r\n  async getEstimatedMargin(accountAddress, volume, leverage, symbolId) {\r\n    await this.init(true);\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbol = pool.symbols[symbolIndex];\r\n    return bg(volume)\r\n      .abs()\r\n      .times(symbol.indexPrice)\r\n      .times(symbol.multiplier)\r\n      .div(leverage)\r\n      .toString();\r\n  }\r\n\r\n  async getEstimatedFee(volume, symbolId) {\r\n    await this.init(true);\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbol = pool.symbols[symbolIndex];\r\n    return bg(volume)\r\n      .abs()\r\n      .times(symbol.indexPrice)\r\n      .times(symbol.multiplier)\r\n      .times(symbol.feeRatio)\r\n      .toString();\r\n  }\r\n\r\n  async getFundingRate(symbolId) {\r\n    await this.init();\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbol = pool.symbols[symbolIndex];\r\n\r\n    const liquidity = pool.state.liquidity;\r\n    return {\r\n      funding0: symbol.funding,\r\n      fundingPerSecond: symbol.fundingPerSecond,\r\n      liquidity: liquidity,\r\n      volume: '-',\r\n      tradersNetVolume: bg(symbol.tradersNetVolume)\r\n        .times(symbol.multiplier)\r\n        .toString(),\r\n    };\r\n  }\r\n\r\n  async getEstimatedFundingRate(newVolume, symbolId) {\r\n    await this.init(true);\r\n    const pool = this.pool;\r\n\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbol = { ...pool.symbols[symbolIndex] };\r\n    symbol.dpmmPrice = calculateDpmmPrice(\r\n      symbol.indexPrice,\r\n      symbol.K,\r\n      bg(symbol.tradersNetVolume).plus(newVolume).toString(),\r\n      symbol.multiplier\r\n    ).toString();\r\n    symbol.fundingPerSecond = bg(symbol.dpmmPrice)\r\n      .minus(symbol.indexPrice)\r\n      //.times(symbol.multiplier)\r\n      .div(pool.fundingPeriod)\r\n      .toString();\r\n    return {\r\n      funding1: bg(symbol.fundingPerSecond).times(SECONDS_IN_A_DAY).toString(),\r\n    };\r\n  }\r\n\r\n  async getLiquidityUsed() {\r\n    await this.init();\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const { poolMarginRatio } = pool.parameters;\r\n    return pool.symbols\r\n      .reduce(\r\n        (acc, s) =>\r\n          acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .abs()\r\n              .times(s.indexPrice)\r\n              .times(s.multiplier)\r\n              .times(poolMarginRatio)\r\n          ),\r\n        bg(0)\r\n      )\r\n      .div(pool.state.liquidity)\r\n      .toString();\r\n  }\r\n\r\n  async getEstimatedLiquidityUsed(newVolume, symbolId) {\r\n    await this.init(true);\r\n    const pool = this.pool;\r\n\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n\r\n    const { poolMarginRatio } = pool.parameters;\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    //console.log(pool.symbols, poolMarginRatio, pool.state)\r\n    return pool.symbols\r\n      .reduce(\r\n        (acc, s, index) =>\r\n          index === symbolIndex\r\n            ? acc.plus(\r\n                bg(s.tradersNetVolume)\r\n                  .plus(newVolume)\r\n                  .abs()\r\n                  .times(s.indexPrice)\r\n                  .times(s.multiplier)\r\n                  .times(poolMarginRatio)\r\n              )\r\n            : acc.plus(\r\n                bg(s.tradersNetVolume)\r\n                  .abs()\r\n                  .times(s.indexPrice)\r\n                  .times(s.multiplier)\r\n                  .times(poolMarginRatio)\r\n              ),\r\n        bg(0)\r\n      )\r\n      .div(pool.state.liquidity)\r\n      .toString();\r\n  }\r\n\r\n  // =================\r\n  // static method\r\n  // =================\r\n}\r\n\r\nexport const poolViewerFactory = contractFactory(PoolViewer);\r\n","import {\r\n  deriToNatural,\r\n  getBlockInfo,\r\n  getPastEvents,\r\n  getHttpBase,\r\n  fetchJson,\r\n  bg,\r\n} from '../../shared/utils';\r\nimport {\r\n  getPoolConfig,\r\n  getPoolSymbolIdList,\r\n} from '../../shared/config';\r\nimport { perpetualPoolLiteDpmmFactory } from '../contract/factory';\r\n\r\nconst processTradeEvent = async (\r\n  chainId,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  bTokenSymbol,\r\n  symbols\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const symbolId = info.symbolId;\r\n  const symbol = symbols.find((s) => s.symbolId == info.symbolId);\r\n  const price = bg(info.tradeCost).div(info.tradeVolume).div(symbol.multiplier);\r\n  const notional = tradeVolume\r\n    .abs()\r\n    .times(price).times(symbol.multiplier)\r\n  const transactionFee = bg(notional).times(symbol.feeRatio)\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    baseToken: bTokenSymbol,\r\n    symbolId,\r\n    symbol: symbol && symbol.symbol,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: bg(volume).times(symbol.multiplier).toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  return res;\r\n};\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  //console.log('symbolIdList', symbolIdList);\r\n  const { bTokenSymbol } = getPoolConfig(\r\n    poolAddress,\r\n    undefined,\r\n    undefined,\r\n    'v2_lite'\r\n  );\r\n\r\n  //console.log('bTokenSymbol', bTokenSymbol)\r\n  const perpetualPool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n  await perpetualPool.init()\r\n  const toBlock = await getBlockInfo(chainId, 'latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  let promises = [];\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  let symbols = await Promise.all(promises);\r\n\r\n  const filters = { account: accountAddress };\r\n  let events = await getPastEvents(\r\n    chainId,\r\n    perpetualPool.contract,\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  //events = events.filter((i) => i.returnValues.symbolId === symbolId);\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await processTradeEvent(\r\n      chainId,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      bTokenSymbol,\r\n      symbols\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock,\r\n      tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    const perpetualPool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n    await perpetualPool.init()\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .map((i) => {\r\n          const symbolIndex = perpetualPool.activeSymbolIds.indexOf(i.symbolId)\r\n          if (symbolIndex > -1) {\r\n            return {\r\n              direction: i.direction.trim(),\r\n              baseToken: i.baseToken.trim(),\r\n              symbolId: i.symbolId,\r\n              symbol: i.symbol,\r\n              price: deriToNatural(i.price).toString(),\r\n              notional: deriToNatural(i.notional).toString(),\r\n              volume: deriToNatural(i.volume).times(perpetualPool.symbols[symbolIndex].multiplier).toString(),\r\n              transactionFee: deriToNatural(i.transactionFee).toString(),\r\n              transactionHash: i.transactionHash,\r\n              time: i.time.toString(),\r\n            };\r\n          } else {\r\n            return null\r\n          }\r\n        }).filter((i) => i != null)\r\n    }\r\n    //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      console.log(tradeFromBlock)\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n      const { initialBlock } = getPoolConfig(poolAddress);\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch (err) {\r\n    console.log(\r\n      `getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`\r\n    );\r\n  }\r\n  return [];\r\n};\r\n","import {\r\n  getPoolInfoApy,\r\n  getPoolLiquidity,\r\n} from '../../shared/api/database_api';\r\nimport {\r\n  getEstimatedFee,\r\n  getEstimatedFundingRate,\r\n  getEstimatedLiquidityUsed,\r\n  getEstimatedMargin,\r\n  getFundingRate,\r\n  getLiquidityInfo,\r\n  getLiquidityUsed,\r\n  getPositionInfo,\r\n  getPositionInfos,\r\n  getSpecification,\r\n  getWalletBalance,\r\n  isUnlocked,\r\n  getEstimatedTimePrice,\r\n} from './query_api';\r\nimport { getTradeHistory } from './trade_history_api';\r\nimport {\r\n  addLiquidity,\r\n  closePosition,\r\n  depositMargin,\r\n  removeLiquidity,\r\n  tradeWithMargin,\r\n  unlock,\r\n  withdrawMargin,\r\n} from './transaction_api';\r\n\r\nexport const api = {\r\n  // mining\r\n  getLiquidityInfo,\r\n  getPoolLiquidity,\r\n  getPoolInfoApy,\r\n  addLiquidity,\r\n  removeLiquidity,\r\n  // trading\r\n  getSpecification,\r\n  getPositionInfo,\r\n  getPositionInfos,\r\n  getWalletBalance,\r\n  isUnlocked,\r\n  getEstimatedFee,\r\n  getEstimatedMargin,\r\n  getFundingRate,\r\n  getEstimatedFundingRate,\r\n  getLiquidityUsed,\r\n  getEstimatedLiquidityUsed,\r\n  getEstimatedTimePrice,\r\n  getFundingRateCache: () => {},\r\n  unlock,\r\n  depositMargin,\r\n  withdrawMargin,\r\n  tradeWithMargin,\r\n  closePosition,\r\n  // tradeHistory\r\n  getTradeHistory,\r\n};\r\n","import { checkApiInput, checkApiInputWithoutAccount, checkSymbolId, checkTokenId } from '../../shared/utils/derijsnext';\r\nimport { catchApiError } from '../../shared/utils/api';\r\nimport { bg } from '../../shared/utils';\r\nimport { perpetualPoolLiteDpmmFactory } from '../contract/factory';\r\nimport { poolViewerFactory } from '../contract/PoolViewer';\r\nimport { calculateDpmmCost } from '../calc';\r\n\r\nexport const getLiquidityInfo = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const viewer = poolViewerFactory(chainId, poolAddress);\r\n      return await viewer.getLiquidityInfo(accountAddress);\r\n    },\r\n    args,\r\n    'getLiquidityInfo',\r\n    {\r\n      totalSupply: '',\r\n      poolLiquidity: '',\r\n      shares: '',\r\n      shareValue: '',\r\n      maxRemovableShares: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(chainId, poolAddress);\r\n      symbolId = checkTokenId(symbolId)\r\n      const viewer = poolViewerFactory(chainId, poolAddress);\r\n      return await viewer.getSpecification(symbolId);\r\n    },\r\n    args,\r\n    'getSpecification',\r\n    {\r\n      symbol: '',\r\n      bTokenSymbol: '',\r\n      multiplier: '',\r\n      feeRatio: '',\r\n      fundingRateCoefficient: '',\r\n      minPoolMarginRatio: '',\r\n      minInitialMarginRatio: '',\r\n      minMaintenanceMarginRatio: '',\r\n      minLiquidationReward: '',\r\n      maxLiquidationReward: '',\r\n      liquidationCutRatio: '',\r\n      protocolFeeCollectRatio: '',\r\n      indexConstituents: { tokens: [], url: '' },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress, symbolId) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const viewer = poolViewerFactory(chainId, poolAddress);\r\n      return await viewer.getPositionInfo(accountAddress, symbolId);\r\n    },\r\n    args,\r\n    'getPositionInfo',\r\n    {\r\n      price: '',\r\n      volume: '',\r\n      averageEntryPrice: '',\r\n      margin: '',\r\n      marginHeld: '',\r\n      marginHeldBySymbol: '',\r\n      unrealizedPnl: '',\r\n      unrealizedPnlList: [],\r\n      fundingFee: '',\r\n      liquidationPrice: '',\r\n    }\r\n  );\r\n}\r\n\r\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const viewer = poolViewerFactory(chainId, poolAddress);\r\n      return await viewer.getPositionInfos(accountAddress);\r\n    },\r\n    args,\r\n    'getPositionInfos',\r\n    []\r\n  );\r\n}\r\n\r\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\r\n  const args =  [chainId, poolAddress, accountAddress]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress)\r\n      await pool.init()\r\n      return await pool.bToken.balanceOf(accountAddress)\r\n  }, args, 'getWalletBalance', '')\r\n}\r\n\r\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.bToken.isUnlocked(accountAddress, poolAddress);\r\n    },\r\n    args,\r\n    'isUnlocked',\r\n    false,\r\n  );\r\n}\r\n\r\nexport const getEstimatedMargin = async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\r\n  const args = [chainId, poolAddress,accountAddress, volume, leverage, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const viewer = poolViewerFactory(chainId, poolAddress);\r\n      return await viewer.getEstimatedMargin(accountAddress, volume, leverage, symbolId);\r\n  }, args, 'getEstimatedMargin', '')\r\n}\r\n\r\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\r\n  const args = [chainId, poolAddress, volume, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const viewer = poolViewerFactory(chainId, poolAddress);\r\n      return await viewer.getEstimatedFee(volume, symbolId);\r\n  }, args, 'getEstimatedFee', '')\r\n}\r\n\r\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const viewer = poolViewerFactory(chainId, poolAddress);\r\n      return await viewer.getFundingRate(symbolId);\r\n    },\r\n    args,\r\n    'getFundingRate',\r\n    ''\r\n  );\r\n}\r\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, newVolume, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newVolume, symbolId) => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const viewer = poolViewerFactory(chainId, poolAddress);\r\n      return await viewer.getEstimatedFundingRate(newVolume, symbolId);\r\n    },\r\n    args,\r\n    'getEstimatedFundingRate',\r\n    ''\r\n  );\r\n}\r\n\r\nexport const getLiquidityUsed = async(chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const viewer = poolViewerFactory(chainId, poolAddress);\r\n      return await viewer.getLiquidityUsed(symbolId);\r\n    },\r\n    args,\r\n    'getLiquidityUsed',\r\n    ''\r\n  );\r\n}\r\n\r\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, newVolume, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newVolume, symbolId) => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const viewer = poolViewerFactory(chainId, poolAddress);\r\n      return await viewer.getEstimatedLiquidityUsed(newVolume, symbolId);\r\n    },\r\n    args,\r\n    'getEstimatedLiquidityUsed',\r\n    ''\r\n  );\r\n}\r\n\r\nexport const getEstimatedTimePrice = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress,\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const api = poolViewerFactory(chainId, poolAddress);\r\n      await api.init();\r\n      const pool = api.pool;\r\n      const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n      if (!pool.isSymbolsUpdated()) {\r\n        await pool.getSymbols();\r\n      }\r\n      const symbol = pool.symbols[symbolIndex];\r\n      console.log('dpmmPrice', symbol.dpmmPrice.toString(), symbol.indexPrice)\r\n      const cost = calculateDpmmCost(\r\n        symbol.indexPrice,\r\n        symbol.K,\r\n        symbol.tradersNetVolume,\r\n        symbol.multiplier,\r\n        newNetVolume\r\n      );\r\n      return bg(cost).div(symbol.multiplier).div(newNetVolume).toString();\r\n    },\r\n    [],\r\n    'getEstimatedTimePrice',\r\n    ''\r\n  );\r\n};\r\n","import { bg, catchTxApiError, checkAddress, checkApiInput, checkChainId } from \"../../shared\"\r\nimport { checkAmount } from \"../../shared/utils/derijsnext\";\r\nimport { perpetualPoolLiteDpmmFactory } from '../contract/factory.js'\r\n\r\n// mining\r\nexport const addLiquidity = async(...args) => {\r\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, amount) => {\r\n      chainId = checkChainId(chainId);\r\n      poolAddress = checkAddress(poolAddress);\r\n      accountAddress = checkAddress(accountAddress);\r\n      amount = checkAmount(amount)\r\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.addLiquidity(accountAddress, amount)\r\n  }, args )\r\n}\r\n\r\nexport const removeLiquidity = async (...args) => {\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      amount = checkAmount(amount)\r\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.removeLiquidity(accountAddress, amount);\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\n//trading\r\nexport const unlock = async (...args) => {\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n    await pool.init();\r\n    return await pool.bToken.unlock(accountAddress, poolAddress);\r\n  }, args);\r\n};\r\n\r\nexport const depositMargin = async (...args) => {\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    amount = checkAmount(amount)\r\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n    await pool.init();\r\n    return await pool.addMargin(accountAddress, amount);\r\n  }, args);\r\n};\r\n\r\nexport const withdrawMargin = async (...args) => {\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    amount = checkAmount(amount)\r\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n    await pool.init();\r\n    return await pool.removeMargin(accountAddress, amount);\r\n  }, args);\r\n};\r\n\r\nexport const tradeWithMargin = async(...args) => {\r\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, newVolume, symbolId) => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    newVolume = checkAmount(newVolume)\r\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n    await pool.init();\r\n    return await pool.trade(accountAddress, symbolId, newVolume);\r\n  }, args)\r\n}\r\n\r\nexport const closePosition = async(...args) => {\r\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n    await pool.init();\r\n    const {volume} = await pool.pToken.getPosition(accountAddress, symbolId)\r\n    if (!bg(volume).eq(0)) {\r\n      const newVolume = bg(volume).negated().toString()\r\n      return await pool.trade(accountAddress, symbolId, newVolume);\r\n    } else {\r\n      throw new Error('no position to close')\r\n    }\r\n  }, args)\r\n}","// this file is generated by script, don't modify it !!!\r\n// import { processMethod } from \"../../shared/utils/index.js\";\r\n\r\nimport { bg, toWei, fromWei, deriToNatural, processResult, getBlockInfo } from \"../../shared/utils/index.js\";\r\nimport { normalizeSymbolUnit, SECONDS_IN_A_DAY } from \"../../shared/config\";\r\n// import {\r\n//   processResult,\r\n// } from \"../../shared/utils/contract.js\";\r\n//import { range } from '../../shared/utils/lang.js'\r\nimport { ERC20Factory, offChainOracleFactory } from \"../../shared/contract/factory.js\";\r\nimport { lTokenFactory, perpetualPoolRouterDpmmFactory, pTokenFactory } from \"./factory.js\";\r\n\r\n\r\nimport { getOraclePriceFromCache2 } from '../../shared/utils/oracle';\r\nimport { calculateDpmmCost, calculateDpmmPrice, calculateK } from \"../../v2_lite_dpmm/calc.js\";\r\n\r\nconst range = (n) => {\r\n  if (typeof n === 'string' && /^\\d+$/.test(n) ) {\r\n    n = parseInt(n)\r\n  }\r\n  return [...Array(n).keys()]\r\n}\r\n\r\nconst addMethods = (klass, fns = []) => {\r\n  if (fns.length > 0) {\r\n    for (let i = 0; i < fns.length; i++) {\r\n      klass = fns[i](klass);\r\n    }\r\n    return klass;\r\n  } else {\r\n    return klass;\r\n  }\r\n};\r\nconst overrideMethods = (klass, fns = []) => {\r\n  if (fns.length > 0) {\r\n    for (let i = 0; i < fns.length; i++) {\r\n      const fn = fns[i][0]\r\n      const args = fns[i].slice(1)\r\n      // console.log(fn, args)\r\n      klass = fn(klass)(...args);\r\n    }\r\n    return klass;\r\n  } else {\r\n    return klass;\r\n  }\r\n};\r\nconst processMethod = (klass) => (methodName, propList = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const res = await originMethod.apply(this, args);\r\n    return processResult(res, propList);\r\n  };\r\n  return klass;\r\n};\r\n\r\nconst processTxMethod = (klass) => (methodName, toWeiArgPositions = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    //const prices = await this._getSymbolPrices()\r\n    let newArgs = args.map((arg, index) =>\r\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\r\n    );\r\n    //newArgs.push(prices)\r\n    return await originMethod.apply(this, newArgs);\r\n  };\r\n  return klass;\r\n};\r\n\r\n\r\nconst init = (klass) => {\r\n  klass.prototype.init = async function (isEstimatedApi = false) {\r\n    await this._init();\r\n    if (!this.addresses || !this.parameters) {\r\n      [this.addresses, this.parameters, this.state, this.lengths] =\r\n        await Promise.all([\r\n          this.getAddresses(),\r\n          this.getParameters(),\r\n          this.getPoolStateValues(),\r\n          this.getLengths(),\r\n        ]);\r\n      this.fundingPeriod = (3 * 24 * 3600).toString();\r\n      const { pTokenAddress, lTokenAddress, routerAddress } = this.addresses;\r\n      this.lToken = lTokenFactory(this.chainId, lTokenAddress);\r\n      this.pToken = pTokenFactory(this.chainId, pTokenAddress);\r\n      this.router = perpetualPoolRouterDpmmFactory(this.chainId, routerAddress)\r\n    }\r\n    if (!isEstimatedApi) {\r\n      const lengths = await this.getLengths();\r\n      if (\r\n        !this.symbols ||\r\n        !this.bTokens ||\r\n        this.lengths.toString() !== lengths.toString()\r\n      ) {\r\n        this.bTokenIds = range(lengths[0]).map((i) => i.toString());\r\n        this.activeSymbolIds = range(lengths[1]).map((i) => i.toString());\r\n        this.bTokens = await Promise.all(\r\n          this.bTokenIds.reduce(\r\n            (acc, bTokenId) => [...acc, this.getBToken(bTokenId)],\r\n            []\r\n          )\r\n        );\r\n        // update bToken price\r\n        for (let i = 0; i < this.bTokenIds.length; i++) {\r\n          if (i === 0) {\r\n            this.bTokens[i].price = \"1\";\r\n          } else {\r\n            this.bTokens[i].price = await offChainOracleFactory(\r\n              this.chainId,\r\n              this.bTokens[i].oracleAddress\r\n            ).getPrice();\r\n          }\r\n          this.bTokens[i].equity = bg(this.bTokens[i].liquidity)\r\n            .times(this.bTokens[i].price)\r\n            .times(this.bTokens[i].discount)\r\n            .plus(this.bTokens[i].pnl)\r\n            .toString();\r\n        }\r\n        this.bTokenSymbols = await Promise.all(\r\n          this.bTokens.reduce(\r\n            (acc, bToken) => [\r\n              ...acc,\r\n              ERC20Factory(this.chainId, bToken.bTokenAddress).symbol(),\r\n            ],\r\n            []\r\n          )\r\n        );\r\n        this.symbols = await Promise.all(\r\n          this.activeSymbolIds.reduce(\r\n            (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n            []\r\n          )\r\n        );\r\n        this.activeSymbolNames = this.symbols.map((s) => s.symbol);\r\n\r\n        // init\r\n        this.positions = [];\r\n        this.userState = {};\r\n        this.offChainOracleSymbolIds = [];\r\n        this.offChainOracleSymbolNames = [];\r\n\r\n        await this.getLiquidity()\r\n      }\r\n    }\r\n  };\r\n  return klass;\r\n};\r\nconst getConfig = (klass) => {\r\n  klass.prototype.getConfig = async function () {\r\n    return {\r\n      pool: this.contractAddress,\r\n      pToken: this.addresses.pTokenAddress,\r\n      lToken: this.addresses.lTokenAddress,\r\n      router: this.addresses.routerAddress,\r\n      bTokenSymbols: this.bTokenSymbols,\r\n      bTokens: this.bTokens.map((b, index) => ({\r\n        bTokenId: index.toString(),\r\n        bTokenSymbol: this.bTokenSymbols[index].toUpperCase(),\r\n        bToken: b.bTokenAddress,\r\n      })),\r\n      symbols: this.symbols.map((s, index) => ({\r\n        symbolId: index.toString(),\r\n        symbol: s.symbol,\r\n        unit: normalizeSymbolUnit(s.symbol),\r\n      })),\r\n      initialBlock: this.initialBlock,\r\n      type: \"perpetual\",\r\n      version: 'v2',\r\n      versionId: \"v2_dpmm\",\r\n      chainId: this.chainId,\r\n    };\r\n  };\r\n  return klass;\r\n};\r\n\r\nconst getLiquidity = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype.getLiquidity = async function () {\r\n    await this._init()\r\n    const res = this.bTokens.reduce((acc, b) => acc.plus(b.equity), bg(0)).toString()\r\n    this.state = this.state || {}\r\n    this.state.liquidity = res\r\n    return res\r\n  }\r\n  return klass\r\n}\r\n\r\nexport const getLastTimestamp = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype.getLastTimestamp = async function () {\r\n    const res = await this._call('getPoolStateValues', []);\r\n      return res[0]\r\n    }\r\n  return klass\r\n}\r\nexport const getProtocolFeeAccrued = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype.getProtocolFeeAccrued = async function () {\r\n    const res = await this._call('getPoolStateValues', []);\r\n      return fromWei(res[1])\r\n    }\r\n  return klass\r\n}\r\n\r\n// getStateValues\r\nconst getStateValues = (klass) => {\r\n  klass.prototype.getStateValues = async function () {\r\n    const res = await this.getPoolStateValues()\r\n    // update\r\n    this.state= { ...this.state, ...res}\r\n    return this.state\r\n  }\r\n  return klass\r\n}\r\n\r\nconst getBTokens = (klass) => {\r\n  klass.prototype.getBTokens = async function (bTokenId) {\r\n    const bTokenIds = bTokenId ? [bTokenId] : this.bTokenIds\r\n    const bTokens = await Promise.all(\r\n      bTokenIds.reduce(\r\n        (acc, bTokenId) => [...acc, this.getBToken(bTokenId)],\r\n        []\r\n      )\r\n    );\r\n    // update bToken price\r\n    for (let i = 0; i < this.bTokenIds.length; i++) {\r\n      if (i === 0) {\r\n        bTokens[i].price = \"1\";\r\n      } else {\r\n        bTokens[i].price = await offChainOracleFactory(\r\n          this.chainId,\r\n          this.bTokens[i].oracleAddress\r\n        ).getPrice();\r\n      }\r\n      bTokens[i].equity = bg(this.bTokens[i].liquidity)\r\n        .times(this.bTokens[i].price)\r\n        .times(this.bTokens[i].discount)\r\n        .plus(this.bTokens[i].pnl)\r\n        .toString();\r\n    }\r\n\r\n    // update\r\n    if (bTokenId) {\r\n      const bTokenIndex = this.bTokenIds.indexOf(bTokenId)\r\n      if (bTokenIndex > -1) {\r\n        this.bTokens[bTokenIndex] = bTokens[0]\r\n      }\r\n    } else {\r\n      this.bTokens = bTokens\r\n    }\r\n    return bTokens\r\n  };\r\n  return klass\r\n};\r\n\r\n// getSymbols()\r\nconst getSymbols = (klass) => {\r\n  klass.prototype.getSymbols = async function (symbolId) {\r\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\r\n    const symbols = await Promise.all(\r\n      symbolIds.reduce(\r\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n        []\r\n      )\r\n    );\r\n\r\n    const indexPrices = await Promise.all(\r\n      symbols.map((s) => {\r\n        const oracleAddress = this.offChainOracleSymbolIds.includes(s.symbolId)\r\n          ? ''\r\n          : s.oracleAddress;\r\n        return getOraclePriceFromCache2.get(\r\n          this.chainId,\r\n          s.symbol,\r\n          oracleAddress\r\n        );\r\n      })\r\n    );\r\n    symbols.forEach((s, index) => {\r\n      s.indexPrice = indexPrices[index];\r\n      s.tradersNetPosition = bg(s.tradersNetVolume).times(s.multiplier).toString();\r\n      s.notional = bg(s.tradersNetPosition).abs().times(s.indexPrice).toString(),\r\n      s.K = calculateK(s.indexPrice, this.state.liquidity, s.alpha).toString();\r\n      s.dpmmPrice = calculateDpmmPrice(\r\n        s.indexPrice,\r\n        s.K,\r\n        s.tradersNetVolume,\r\n        s.multiplier\r\n      );\r\n\r\n      const pnl = calculateDpmmCost(\r\n        s.indexPrice,\r\n        s.K,\r\n        s.tradersNetVolume,\r\n        s.multiplier,\r\n        bg(s.tradersNetVolume).negated().toString()\r\n      )\r\n        .negated()\r\n        .minus(s.tradersNetCost);\r\n      const ratePerSecond = bg(s.dpmmPrice)\r\n        .minus(s.indexPrice)\r\n        //.times(s.multiplier)\r\n        .div(this.fundingPeriod)\r\n        .toString();\r\n      const diff = bg(Math.floor(Date.now() / 1000)).minus(\r\n        this.state.lastTimestamp\r\n      );\r\n      s.fundingPerSecond = ratePerSecond\r\n      s.funding = bg(ratePerSecond).times(SECONDS_IN_A_DAY).toString()\r\n      s.pnl = pnl.toString()\r\n      s.undistributedPnl = bg(s.distributedUnrealizedPnl)\r\n        .minus(pnl)\r\n        .plus(bg(ratePerSecond).times(diff).times(s.tradersNetVolume))\r\n        .toString();\r\n    });\r\n\r\n    // update\r\n    if (symbolId) {\r\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\r\n      this.symbols[symbolIndex] = symbols[0]\r\n    } else {\r\n      this.symbols = symbols\r\n    }\r\n    \r\n    return symbols\r\n  };\r\n  return klass\r\n};\r\n\r\n// get traders positions\r\nconst getPositions = (klass) => {\r\n  klass.prototype.getPositions = async function (account, symbolId) {\r\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\r\n    const positions = await Promise.all(\r\n      symbolIds.reduce(\r\n        (acc, symbolId) => [...acc, this.pToken.getPosition(account, symbolId)],\r\n        []\r\n      )\r\n    );\r\n    const timeDiff = bg(Math.floor(Date.now() / 1000)).minus(\r\n      this.state.lastTimestamp\r\n    );\r\n    positions.forEach((p, index) => {\r\n      const symbol = this.symbols[index];\r\n      p.fundingAccrued = bg(p.volume)\r\n        .times(\r\n          bg(symbol.cumulativeFundingRate)\r\n            .plus(bg(timeDiff).times(this.symbols[index].fundingPerSecond))\r\n            .minus(p.lastCumulativeFundingRate)\r\n        )\r\n        .toString();\r\n      p.traderPnl = calculateDpmmCost(\r\n        symbol.indexPrice,\r\n        symbol.K,\r\n        symbol.tradersNetVolume,\r\n        symbol.multiplier,\r\n        bg(p.volume).negated().toString()\r\n      )\r\n        .negated()\r\n        .minus(p.cost).toString();\r\n\r\n      p.notional = bg(p.volume).abs().times(symbol.indexPrice).times(symbol.multiplier).toString()\r\n    });\r\n\r\n    // update\r\n    if (symbolId) {\r\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\r\n      if (symbolIndex > -1) {\r\n        this.positions[symbolIndex] = positions[0]\r\n      }\r\n    } else {\r\n      this.positions = positions\r\n    }\r\n\r\n    return positions\r\n  };\r\n  return klass\r\n};\r\n\r\nconst isBTokensUpdated = (klass) => {\r\n  klass.prototype.isBTokensUpdated = function() {\r\n    return Array.isArray(this.bTokens) && this.bTokens.length > 0 && this.bTokens[0].price != null\r\n  }\r\n  return klass\r\n}\r\nconst isSymbolsUpdated = (klass) => {\r\n  klass.prototype.isSymbolsUpdated = function() {\r\n    return Array.isArray(this.symbols) && this.symbols.length > 0 && this.symbols[0].indexPrice != null\r\n  }\r\n  return klass\r\n}\r\nconst isPositionsUpdated = (klass) => {\r\n  klass.prototype.isPositionsUpdated = function() {\r\n    return Array.isArray(this.positions) && this.positions.length > 0 && this.positions[0].fundingAccrued != null\r\n  }\r\n  return klass\r\n}\r\n\r\nconst getDynamicEquity = (klass) => {\r\n  klass.prototype['getDynamicEquity'] = async function() {\r\n    if (!this.isSymbolsUpdated()) {\r\n      await this.getSymbols();\r\n    }\r\n    //console.log(this.symbols)\r\n    const res = bg(this.state.liquidity)\r\n      .plus(\r\n        this.symbols.reduce((acc, s) => acc.plus(s.undistributedPnl), bg(0))\r\n      )\r\n      .toString();\r\n    this.state.dynamicEquity = res;\r\n    return res;\r\n  }\r\n  return klass\r\n}\r\n\r\nconst getTraderLiquidity = (klass) => {\r\n  klass.prototype[\"getTraderLiquidity\"] = async function(account) {\r\n    return await this.lToken.balanceOf(account)\r\n  }\r\n  return klass\r\n}\r\n\r\nconst getPoolRequiredMargin = (klass) => {\r\n  klass.prototype['getPoolRequiredMargin'] = async function () {\r\n    if (!this.isSymbolsUpdated()) {\r\n      await this.getSymbols()\r\n    }\r\n    const { minPoolMarginRatio } = this.parameters;\r\n    return this.symbols\r\n      .reduce(\r\n        (acc, s) =>\r\n          acc.plus(\r\n            bg(s.notional)\r\n          ),\r\n        bg(0)\r\n      )\r\n      .times(minPoolMarginRatio).toString()\r\n  };\r\n  return klass\r\n}\r\n\r\nconst getTraderMarginStatus = (klass) => {\r\n  klass.prototype['getTraderMarginStatus'] = async function (account) {\r\n    if (!this.isBTokensUpdated()) {\r\n      await this.getSymbols()\r\n    }\r\n    if (!this.isSymbolsUpdated()) {\r\n      await this.getSymbols()\r\n    }\r\n    if (!this.isPositionsUpdated()) {\r\n      await this.getPositions(account)\r\n    }\r\n    if (!this.userState.margins) {\r\n      this.userState.margins = await this.pToken.getMargins(account);\r\n    }\r\n\r\n    this.userState.totapPnl = this.positions.reduce((acc, p) => acc.plus(p.traderPnl), bg(0)).toString()\r\n    //this.userState.totalEquity = bg(this.userState.totalPnl).plus(this.userState.margins[0])\r\n    this.userState.totalEquity = this.userState.margins.reduce(\r\n      (acc, m, i) =>\r\n        acc.plus(\r\n          bg(m).times(this.bTokens[i].price).times(this.bTokens[i].discount)\r\n        ),\r\n      bg(this.userState.totalPnl)\r\n    );\r\n\r\n    this.userState.totalNotional = this.positions.reduce(\r\n      (acc, p) => acc.plus(p.notional),\r\n      bg(0)\r\n    );\r\n\r\n    return [this.userState.totalEquity, this.userState.totalNotional];\r\n  };\r\n  return klass\r\n}\r\n\r\nconst formatTradeEvent = (klass) => {\r\n  klass.prototype['formatTradeEvent'] = async function (event) {\r\n    const info = event.returnValues;\r\n    const tradeVolume = deriToNatural(info.tradeVolume);\r\n    const timeStamp = await getBlockInfo(this.chainId, event.blockNumber);\r\n\r\n    const direction = bg(tradeVolume).gt(0) ? 'LONG' : 'SHORT';\r\n    const trader = info.trader;\r\n    const symbolId = info.symbolId;\r\n    const time = timeStamp.timestamp * 1000;\r\n    const volume = bg(tradeVolume).abs().toString();\r\n    const txHash = event.transactionHash;\r\n\r\n    let res = {\r\n      direction,\r\n      trader,\r\n      symbolId,\r\n      // indexPrice: naturalToDeri(\r\n      //   bg(info.tradeCost).div(info.tradeVolume)\r\n      // ).toString(),\r\n      volume: volume.toString(),\r\n      transactionHash: txHash.toString(),\r\n      time,\r\n      extra: {},\r\n    };\r\n    const index = this.activeSymbolIds.indexOf(symbolId);\r\n    if (index === -1) {\r\n      res.price = '';\r\n      res.symbol = '';\r\n      res.notional = '';\r\n      //res.indexPrice = \"\";\r\n      res.transactionFee = '';\r\n    } else {\r\n      const price = bg(info.tradeCost)\r\n        .div(info.tradeVolume)\r\n        .div(this.symbols[index].multiplier)\r\n        .toString();\r\n      const notional = bg(tradeVolume)\r\n        .abs()\r\n        .times(price)\r\n        .times(this.symbols[index].multiplier)\r\n        .toString();\r\n      const transactionFee = bg(notional)\r\n        .times(this.symbols[index].feeRatio)\r\n        .toString();\r\n      res.price = price;\r\n      res.symbol = this.symbols[index].symbol;\r\n      res.notional = notional;\r\n      res.transactionFee = transactionFee;\r\n    }\r\n    console.log(JSON.stringify(res));\r\n    return res;\r\n  };\r\n  return klass\r\n};\r\n\r\n\r\nexport const perpetualPoolDpmmAdapter = (klass) => {\r\n    // klass = processMethod(klass, 'symbol', []);\r\n    klass = addMethods(klass, [\r\n        init,\r\n        getConfig,\r\n        getLiquidity,\r\n        getLastTimestamp,\r\n        getProtocolFeeAccrued,\r\n        getStateValues,\r\n        getBTokens,\r\n        getSymbols,\r\n        getPositions,\r\n        isBTokensUpdated,\r\n        isSymbolsUpdated,\r\n        isPositionsUpdated,\r\n        getDynamicEquity,\r\n        getTraderLiquidity,\r\n        getTraderMarginStatus,\r\n        getPoolRequiredMargin,\r\n        formatTradeEvent,\r\n    ])\r\n    klass = overrideMethods(klass, [\r\n      [\r\n        processMethod,\r\n        \"getParameters\",\r\n        [\r\n          \"initialMarginRatio\",\r\n          \"liquidationCutRatio\",\r\n          \"maintenanceMarginRatio\",\r\n          \"maxLiquidationReward\",\r\n          \"minBToken0Ratio\",\r\n          \"minPoolMarginRatio\",\r\n          \"protocolFeeCollectRatio\",\r\n        ],\r\n      ],\r\n      [\r\n        processMethod,\r\n        \"getBToken\",\r\n        [\"discount\", \"price\", \"liquidity\", \"pnl\", \"cumulativePnl\"],\r\n      ],\r\n      [\r\n        processMethod,\r\n        \"getSymbol\",\r\n        [\r\n          \"multiplier\",\r\n          \"feeRatio\",\r\n          //\"fundingRateCoefficient\",\r\n          \"alpha\",\r\n          \"distributedUnrealizedPnl\",\r\n          //\"price\",\r\n          \"cumulativeFundingRate\",\r\n          \"tradersNetVolume\",\r\n          \"tradersNetCost\",\r\n        ],\r\n      ],\r\n      [processMethod, \"getPoolStateValues\", [\"protocolFeeAccrued\"]],\r\n    ]);\r\n    return klass\r\n}\r\nexport const perpetualPoolRouterDpmmAdapter = (klass) => {\r\n  // klass = processMethod(klass, 'symbol', []);\r\n  klass = overrideMethods(klass, [\r\n    [processTxMethod, 'addLiquidity', ['2']],\r\n    //[processTxMethod, 'addLiquidityWithPrices', ['2']],\r\n    [processTxMethod, 'removeLiquidity', ['2']],\r\n    //[processTxMethod, 'removeLiquidityWithPrices', ['2']],\r\n    [processTxMethod, 'addMargin', ['2']],\r\n    //[processTxMethod, 'addMarginWithPrices', ['2']],\r\n    [processTxMethod, 'removeMargin', ['2']],\r\n    //[processTxMethod, 'removeMarginWithPrices', ['2']],\r\n    [processTxMethod, 'trade', ['2']],\r\n    //[processTxMethod, 'tradeWithPrices', ['2']],\r\n  ]);\r\n  return klass;\r\n};\r\n\r\nexport const lTokenAdapter = (klass) => {\r\n  // klass = processMethod(klass, 'symbol', []);\r\n  klass = overrideMethods(klass, [\r\n    [processMethod, 'getAsset', ['liquidity', 'pnl', 'lastCumulativePnl']],\r\n    [processMethod, 'getAssets', ['liquidity', 'pnl', 'lastCumulativePnl']],\r\n  ]);\r\n  return klass;\r\n};\r\n\r\nexport const pTokenAdapter = (klass) => {\r\n  klass = overrideMethods(klass, [\r\n    [processMethod, 'getMargins'],\r\n    [\r\n      processMethod,\r\n      'getPosition',\r\n      ['cost', 'volume', 'lastCumulativeFundingRate'],\r\n    ],\r\n    [\r\n      processMethod,\r\n      'getPositions',\r\n      ['cost', 'volume', 'lastCumulativeFundingRate'],\r\n    ],\r\n  ]);\r\n  return klass;\r\n};","// this file is generated by script, don't modify it !!!\r\nexport const lTokenAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"name_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"numBTokens_\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"ApprovalForAll\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"liquidity\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"pnl\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"lastCumulativePnl\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"UpdateAsset\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"exists\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getApproved\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getAsset\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"liquidity\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"pnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativePnl\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct ILToken.Asset\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getAssets\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"liquidity\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"pnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativePnl\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct ILToken.Asset[]\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getTokenId\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"isApprovedForAll\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"mint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"numBTokens\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ownerOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"pool\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes\",\r\n                \"name\": \"data\",\r\n                \"type\": \"bytes\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"setApprovalForAll\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"num\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setNumBTokens\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newPool\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setPool\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"bytes4\",\r\n                \"name\": \"interfaceId\",\r\n                \"type\": \"bytes4\"\r\n            }\r\n        ],\r\n        \"name\": \"supportsInterface\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalMinted\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"liquidity\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"pnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativePnl\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct ILToken.Asset\",\r\n                \"name\": \"asset\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"name\": \"updateAsset\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nexport const pTokenAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"name_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"numSymbols_\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"numBTokens_\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"ApprovalForAll\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"UpdateMargin\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"volume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"cost\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"lastCumulativeFundingRate\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"UpdatePosition\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"exists\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getApproved\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getMargin\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getMargins\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"int256[]\",\r\n                \"name\": \"\",\r\n                \"type\": \"int256[]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getPosition\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"volume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPToken.Position\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getPositions\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"volume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPToken.Position[]\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getTokenId\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"isApprovedForAll\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"mint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"numBTokens\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"numSymbols\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ownerOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"pool\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes\",\r\n                \"name\": \"data\",\r\n                \"type\": \"bytes\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"setApprovalForAll\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"num\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setNumBTokens\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"num\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setNumSymbols\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newPool\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setPool\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"bytes4\",\r\n                \"name\": \"interfaceId\",\r\n                \"type\": \"bytes4\"\r\n            }\r\n        ],\r\n        \"name\": \"supportsInterface\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalMinted\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"updateMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256[]\",\r\n                \"name\": \"margins\",\r\n                \"type\": \"int256[]\"\r\n            }\r\n        ],\r\n        \"name\": \"updateMargins\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"volume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPToken.Position\",\r\n                \"name\": \"position\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"name\": \"updatePosition\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nexport const perpetualPoolAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256[9]\",\r\n                \"name\": \"parameters\",\r\n                \"type\": \"uint256[9]\"\r\n            },\r\n            {\r\n                \"internalType\": \"address[4]\",\r\n                \"name\": \"addresses\",\r\n                \"type\": \"address[4]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lp\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"AddLiquidity\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"AddMargin\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"liquidator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"reward\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Liquidate\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"collector\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ProtocolFeeCollection\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lp\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"RemoveLiquidity\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"RemoveMargin\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"indexPrice\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeVolume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeCost\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeFee\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"Trade\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"bTokenAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"swapperAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"oracleAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"decimals\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"discount\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"liquidity\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"pnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cumulativePnl\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPool.BTokenInfo\",\r\n                \"name\": \"info\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"name\": \"addBToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lp\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addLiquidity\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"string\",\r\n                        \"name\": \"symbol\",\r\n                        \"type\": \"string\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"oracleAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"multiplier\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"feeRatio\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"alpha\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"distributedUnrealizedPnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"tradersNetVolume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"tradersNetCost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPool.SymbolInfo\",\r\n                \"name\": \"info\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"name\": \"addSymbol\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"targetPool\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"approveBTokenForTargetPool\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"collectProtocolFee\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getAddresses\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"pTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"routerAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"protocolFeeCollector\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getBToken\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"bTokenAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"swapperAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"oracleAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"decimals\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"discount\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"liquidity\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"pnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cumulativePnl\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPool.BTokenInfo\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getLengths\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getParameters\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"decimals0\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"minBToken0Ratio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"minPoolMarginRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"initialMarginRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"maintenanceMarginRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"minLiquidationReward\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"maxLiquidationReward\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"liquidationCutRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"protocolFeeCollectRatio\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getPoolStateValues\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lastTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"protocolFeeAccrued\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getSymbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"string\",\r\n                        \"name\": \"symbol\",\r\n                        \"type\": \"string\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"oracleAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"multiplier\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"feeRatio\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"alpha\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"distributedUnrealizedPnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"tradersNetVolume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"tradersNetCost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPool.SymbolInfo\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getSymbolOracle\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"liquidator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidate\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"sourcePool\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"balance\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"bTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"swapperAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"decimals\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"discount\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"liquidity\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"pnl\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"cumulativePnl\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"migrateBToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lastTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"protocolFeeAccrued\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"migratePoolStateValues\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"multiplier\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"feeRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"alpha\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"distributedUnrealizedPnl\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradersNetVolume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradersNetCost\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"cumulativeFundingRate\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"migrateSymbol\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lp\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"removeLiquidity\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"removeMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"swapperAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"discount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setBTokenParameters\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"targetPool\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setPoolForLTokenAndPToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"feeRatio\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"alpha\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setSymbolParameters\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeVolume\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"trade\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nexport const perpetualPoolRouterAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"pTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"liquidatorQualifierAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oldController\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newController\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"ChangeController\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"migrationTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"source\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"target\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"ExecuteMigration\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"migrationTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"source\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"target\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"PrepareMigration\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"bTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"swapperAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"discount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addBToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addLiquidity\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"addLiquidityWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"addMarginWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"multiplier\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"feeRatio\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"alpha\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addSymbol\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"approveMigration\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"claimNewController\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"controller\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"sourceRouter\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"executeMigration\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"sourceRouter\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lastTimestamp\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"executeMigrationWithTimestamp\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidate\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"pTokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidate\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"pTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidateWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidateWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"liquidatorQualifier\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"migrationDestination\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"migrationTimestamp\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"pool\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"target\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"graceDays\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"prepareMigration\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"removeLiquidity\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"removeLiquidityWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"removeMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"removeMarginWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"swapperAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"discount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setBTokenParameters\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"qualifierAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setLiquidatorQualifier\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newController\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setNewController\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"poolAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setPool\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"feeRatio\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"alpha\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setSymbolParameters\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeVolume\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"trade\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeVolume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"tradeWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { contractFactory } from '../../shared/utils/index.js';\r\nimport { perpetualPoolDpmmAdapter, perpetualPoolRouterDpmmAdapter, lTokenAdapter, pTokenAdapter } from './adapter.js';\r\n\r\nimport { LToken } from './gen/LToken.js';\r\nimport { PToken } from './gen/PToken.js';\r\nimport { PerpetualPool} from './gen/PerpetualPool';\r\nimport { PerpetualPoolRouter} from './gen/PerpetualPoolRouter';\r\n\r\nexport const lTokenFactory = contractFactory(lTokenAdapter(LToken));\r\nexport const pTokenFactory = contractFactory(pTokenAdapter(PToken));\r\n\r\n// dpmm\r\nexport const perpetualPoolDpmmFactory = contractFactory(perpetualPoolDpmmAdapter(PerpetualPool));\r\nexport const perpetualPoolRouterDpmmFactory = contractFactory(perpetualPoolRouterDpmmAdapter(PerpetualPoolRouter));\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { lTokenAbi } from '../abi/lTokenAbi.js'\r\n\r\nexport class LToken extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, lTokenAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async balanceOf(owner) {\r\n    const res = await this._call('balanceOf', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async exists(owner) {\r\n  //    const res = await this._call('exists', [owner])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async getApproved(tokenId) {\r\n  //    const res = await this._call('getApproved', [tokenId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getAsset(owner, bTokenId) {\r\n    const res = await this._call('getAsset', [owner, bTokenId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getAssets(owner) {\r\n    const res = await this._call('getAssets', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async getTokenId(owner) {\r\n  //    const res = await this._call('getTokenId', [owner])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async isApprovedForAll(owner, operator) {\r\n  //    const res = await this._call('isApprovedForAll', [owner, operator])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async name() {\r\n  //    const res = await this._call('name', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async numBTokens() {\r\n  //    const res = await this._call('numBTokens', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async ownerOf(tokenId) {\r\n  //    const res = await this._call('ownerOf', [tokenId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async pool() {\r\n  //    const res = await this._call('pool', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async supportsInterface(interfaceId) {\r\n  //    const res = await this._call('supportsInterface', [interfaceId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async totalMinted() {\r\n  //    const res = await this._call('totalMinted', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async approve(accountAddress, operator, tokenId) {\r\n  //    return await this._transact('approve', [operator, tokenId], accountAddress)\r\n  //  }\r\n  //  async burn(accountAddress, owner) {\r\n  //    return await this._transact('burn', [owner], accountAddress)\r\n  //  }\r\n  //  async mint(accountAddress, owner) {\r\n  //    return await this._transact('mint', [owner], accountAddress)\r\n  //  }\r\n  //  async safeTransferFrom(accountAddress, from, to, tokenId) {\r\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\r\n  //  }\r\n  //  async safeTransferFrom(accountAddress, from, to, tokenId, data) {\r\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\r\n  //  }\r\n  //  async setApprovalForAll(accountAddress, operator, approved) {\r\n  //    return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\r\n  //  }\r\n  //  async setNumBTokens(accountAddress, num) {\r\n  //    return await this._transact('setNumBTokens', [num], accountAddress)\r\n  //  }\r\n  //  async setPool(accountAddress, newPool) {\r\n  //    return await this._transact('setPool', [newPool], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, tokenId) {\r\n  //    return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\r\n  //  }\r\n  //  async updateAsset(accountAddress, owner, bTokenId, asset) {\r\n  //    return await this._transact('updateAsset', [owner, bTokenId, asset], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { pTokenAbi } from '../abi/pTokenAbi.js'\r\n\r\nexport class PToken extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, pTokenAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async balanceOf(owner) {\r\n    const res = await this._call('balanceOf', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async exists(owner) {\r\n    const res = await this._call('exists', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async getApproved(tokenId) {\r\n  //    const res = await this._call('getApproved', [tokenId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getMargin(owner, bTokenId) {\r\n    const res = await this._call('getMargin', [owner, bTokenId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getMargins(owner) {\r\n    const res = await this._call('getMargins', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getPosition(owner, symbolId) {\r\n    const res = await this._call('getPosition', [owner, symbolId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getPositions(owner) {\r\n    const res = await this._call('getPositions', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async getTokenId(owner) {\r\n  //    const res = await this._call('getTokenId', [owner])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async isApprovedForAll(owner, operator) {\r\n  //    const res = await this._call('isApprovedForAll', [owner, operator])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async numBTokens() {\r\n    const res = await this._call('numBTokens', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async numSymbols() {\r\n    const res = await this._call('numSymbols', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async ownerOf(tokenId) {\r\n  //    const res = await this._call('ownerOf', [tokenId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async supportsInterface(interfaceId) {\r\n  //    const res = await this._call('supportsInterface', [interfaceId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async totalMinted() {\r\n    const res = await this._call('totalMinted', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async approve(accountAddress, operator, tokenId) {\r\n  //    return await this._transact('approve', [operator, tokenId], accountAddress)\r\n  //  }\r\n  //  async burn(accountAddress, owner) {\r\n  //    return await this._transact('burn', [owner], accountAddress)\r\n  //  }\r\n  //  async mint(accountAddress, owner) {\r\n  //    return await this._transact('mint', [owner], accountAddress)\r\n  //  }\r\n  //  async safeTransferFrom(accountAddress, from, to, tokenId) {\r\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\r\n  //  }\r\n  //  async safeTransferFrom(accountAddress, from, to, tokenId, data) {\r\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\r\n  //  }\r\n  //  async setApprovalForAll(accountAddress, operator, approved) {\r\n  //    return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\r\n  //  }\r\n  //  async setNumBTokens(accountAddress, num) {\r\n  //    return await this._transact('setNumBTokens', [num], accountAddress)\r\n  //  }\r\n  //  async setNumSymbols(accountAddress, num) {\r\n  //    return await this._transact('setNumSymbols', [num], accountAddress)\r\n  //  }\r\n  //  async setPool(accountAddress, newPool) {\r\n  //    return await this._transact('setPool', [newPool], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, tokenId) {\r\n  //    return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\r\n  //  }\r\n  //  async updateMargin(accountAddress, owner, bTokenId, amount) {\r\n  //    return await this._transact('updateMargin', [owner, bTokenId, amount], accountAddress)\r\n  //  }\r\n  //  async updateMargins(accountAddress, owner, margins) {\r\n  //    return await this._transact('updateMargins', [owner, margins], accountAddress)\r\n  //  }\r\n  //  async updatePosition(accountAddress, owner, symbolId, position) {\r\n  //    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { perpetualPoolAbi } from '../abi/perpetualPoolAbi.js'\r\n\r\nexport class PerpetualPool extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, perpetualPoolAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async getAddresses() {\r\n    const res = await this._call('getAddresses', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getBToken(bTokenId) {\r\n    const res = await this._call('getBToken', [bTokenId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getLengths() {\r\n    const res = await this._call('getLengths', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getPoolStateValues() {\r\n    const res = await this._call('getPoolStateValues', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getSymbol(symbolId) {\r\n    const res = await this._call('getSymbol', [symbolId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async getSymbolOracle(symbolId) {\r\n  //    const res = await this._call('getSymbolOracle', [symbolId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n\r\n  // tx\r\n  //  async addBToken(accountAddress, info) {\r\n  //    return await this._transact('addBToken', [info], accountAddress)\r\n  //  }\r\n  //  async addLiquidity(accountAddress, lp, bTokenId, bAmount) {\r\n  //    return await this._transact('addLiquidity', [lp, bTokenId, bAmount], accountAddress)\r\n  //  }\r\n  //  async addMargin(accountAddress, trader, bTokenId, bAmount) {\r\n  //    return await this._transact('addMargin', [trader, bTokenId, bAmount], accountAddress)\r\n  //  }\r\n  //  async addSymbol(accountAddress, info) {\r\n  //    return await this._transact('addSymbol', [info], accountAddress)\r\n  //  }\r\n  //  async approveBTokenForTargetPool(accountAddress, bTokenId, targetPool) {\r\n  //    return await this._transact('approveBTokenForTargetPool', [bTokenId, targetPool], accountAddress)\r\n  //  }\r\n  //  async collectProtocolFee(accountAddress) {\r\n  //    return await this._transact('collectProtocolFee', [], accountAddress)\r\n  //  }\r\n  //  async liquidate(accountAddress, liquidator, trader) {\r\n  //    return await this._transact('liquidate', [liquidator, trader], accountAddress)\r\n  //  }\r\n  //  async migrateBToken(accountAddress, sourcePool, balance, bTokenAddress, swapperAddress, oracleAddress, decimals, discount, liquidity, pnl, cumulativePnl) {\r\n  //    return await this._transact('migrateBToken', [sourcePool, balance, bTokenAddress, swapperAddress, oracleAddress, decimals, discount, liquidity, pnl, cumulativePnl], accountAddress)\r\n  //  }\r\n  //  async migratePoolStateValues(accountAddress, lastTimestamp, protocolFeeAccrued) {\r\n  //    return await this._transact('migratePoolStateValues', [lastTimestamp, protocolFeeAccrued], accountAddress)\r\n  //  }\r\n  //  async migrateSymbol(accountAddress, symbol, oracleAddress, multiplier, feeRatio, alpha, distributedUnrealizedPnl, tradersNetVolume, tradersNetCost, cumulativeFundingRate) {\r\n  //    return await this._transact('migrateSymbol', [symbol, oracleAddress, multiplier, feeRatio, alpha, distributedUnrealizedPnl, tradersNetVolume, tradersNetCost, cumulativeFundingRate], accountAddress)\r\n  //  }\r\n  //  async removeLiquidity(accountAddress, lp, bTokenId, bAmount) {\r\n  //    return await this._transact('removeLiquidity', [lp, bTokenId, bAmount], accountAddress)\r\n  //  }\r\n  //  async removeMargin(accountAddress, trader, bTokenId, bAmount) {\r\n  //    return await this._transact('removeMargin', [trader, bTokenId, bAmount], accountAddress)\r\n  //  }\r\n  //  async setBTokenParameters(accountAddress, bTokenId, swapperAddress, oracleAddress, discount) {\r\n  //    return await this._transact('setBTokenParameters', [bTokenId, swapperAddress, oracleAddress, discount], accountAddress)\r\n  //  }\r\n  //  async setPoolForLTokenAndPToken(accountAddress, targetPool) {\r\n  //    return await this._transact('setPoolForLTokenAndPToken', [targetPool], accountAddress)\r\n  //  }\r\n  //  async setSymbolParameters(accountAddress, symbolId, oracleAddress, feeRatio, alpha) {\r\n  //    return await this._transact('setSymbolParameters', [symbolId, oracleAddress, feeRatio, alpha], accountAddress)\r\n  //  }\r\n  //  async trade(accountAddress, trader, symbolId, tradeVolume) {\r\n  //    return await this._transact('trade', [trader, symbolId, tradeVolume], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { perpetualPoolRouterAbi } from '../abi/perpetualPoolRouterAbi.js'\r\n\r\nexport class PerpetualPoolRouter extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async controller() {\r\n    const res = await this._call('controller', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async liquidatorQualifier() {\r\n  //    const res = await this._call('liquidatorQualifier', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async migrationDestination() {\r\n  //    const res = await this._call('migrationDestination', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async migrationTimestamp() {\r\n  //    const res = await this._call('migrationTimestamp', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async addBToken(accountAddress, bTokenAddress, swapperAddress, oracleAddress, discount) {\r\n  //    return await this._transact('addBToken', [bTokenAddress, swapperAddress, oracleAddress, discount], accountAddress)\r\n  //  }\r\n  async addLiquidity(accountAddress, bTokenId, bAmount) {\r\n    return await this._transact('addLiquidity', [bTokenId, bAmount], accountAddress)\r\n  }\r\n  async addLiquidityWithPrices(accountAddress, bTokenId, bAmount, infos) {\r\n    return await this._transact('addLiquidityWithPrices', [bTokenId, bAmount, infos], accountAddress)\r\n  }\r\n  async addMargin(accountAddress, bTokenId, bAmount) {\r\n    return await this._transact('addMargin', [bTokenId, bAmount], accountAddress)\r\n  }\r\n  async addMarginWithPrices(accountAddress, bTokenId, bAmount, infos) {\r\n    return await this._transact('addMarginWithPrices', [bTokenId, bAmount, infos], accountAddress)\r\n  }\r\n  //  async addSymbol(accountAddress, symbol, oracleAddress, multiplier, feeRatio, alpha) {\r\n  //    return await this._transact('addSymbol', [symbol, oracleAddress, multiplier, feeRatio, alpha], accountAddress)\r\n  //  }\r\n  //  async approveMigration(accountAddress) {\r\n  //    return await this._transact('approveMigration', [], accountAddress)\r\n  //  }\r\n  //  async claimNewController(accountAddress) {\r\n  //    return await this._transact('claimNewController', [], accountAddress)\r\n  //  }\r\n  //  async executeMigration(accountAddress, sourceRouter) {\r\n  //    return await this._transact('executeMigration', [sourceRouter], accountAddress)\r\n  //  }\r\n  //  async executeMigrationWithTimestamp(accountAddress, sourceRouter, lastTimestamp) {\r\n  //    return await this._transact('executeMigrationWithTimestamp', [sourceRouter, lastTimestamp], accountAddress)\r\n  //  }\r\n  async liquidate(accountAddress, trader) {\r\n    return await this._transact('liquidate', [trader], accountAddress)\r\n  }\r\n  async liquidateWithPrices(accountAddress, trader, infos) {\r\n    return await this._transact('liquidateWithPrices', [trader, infos], accountAddress)\r\n  }\r\n  //  async prepareMigration(accountAddress, target, graceDays) {\r\n  //    return await this._transact('prepareMigration', [target, graceDays], accountAddress)\r\n  //  }\r\n  async removeLiquidity(accountAddress, bTokenId, bAmount) {\r\n    return await this._transact('removeLiquidity', [bTokenId, bAmount], accountAddress)\r\n  }\r\n  async removeLiquidityWithPrices(accountAddress, bTokenId, bAmount, infos) {\r\n    return await this._transact('removeLiquidityWithPrices', [bTokenId, bAmount, infos], accountAddress)\r\n  }\r\n  async removeMargin(accountAddress, bTokenId, bAmount) {\r\n    return await this._transact('removeMargin', [bTokenId, bAmount], accountAddress)\r\n  }\r\n  async removeMarginWithPrices(accountAddress, bTokenId, bAmount, infos) {\r\n    return await this._transact('removeMarginWithPrices', [bTokenId, bAmount, infos], accountAddress)\r\n  }\r\n  //  async setBTokenParameters(accountAddress, bTokenId, swapperAddress, oracleAddress, discount) {\r\n  //    return await this._transact('setBTokenParameters', [bTokenId, swapperAddress, oracleAddress, discount], accountAddress)\r\n  //  }\r\n  //  async setLiquidatorQualifier(accountAddress, qualifierAddress) {\r\n  //    return await this._transact('setLiquidatorQualifier', [qualifierAddress], accountAddress)\r\n  //  }\r\n  //  async setNewController(accountAddress, newController) {\r\n  //    return await this._transact('setNewController', [newController], accountAddress)\r\n  //  }\r\n  //  async setPool(accountAddress, poolAddress) {\r\n  //    return await this._transact('setPool', [poolAddress], accountAddress)\r\n  //  }\r\n  //  async setSymbolParameters(accountAddress, symbolId, oracleAddress, feeRatio, alpha) {\r\n  //    return await this._transact('setSymbolParameters', [symbolId, oracleAddress, feeRatio, alpha], accountAddress)\r\n  //  }\r\n  async trade(accountAddress, symbolId, tradeVolume) {\r\n    return await this._transact('trade', [symbolId, tradeVolume], accountAddress)\r\n  }\r\n  async tradeWithPrices(accountAddress, symbolId, tradeVolume, infos) {\r\n    return await this._transact('tradeWithPrices', [symbolId, tradeVolume, infos], accountAddress)\r\n  }\r\n\r\n}","import { contractFactory } from \"../../activity/utils\"\r\nimport { bg, max, min } from \"../../shared\"\r\nimport { SECONDS_IN_A_DAY } from \"../../shared/config\";\r\nimport { getIndexInfo } from \"../../shared/config/token\"\r\nimport { checkSymbolId, getLiquidity } from \"../../shared/utils/derijsnext\"\r\nimport {\r\n  calculateLiquidationPrice,\r\n  calculateMaxRemovableLiquidity,\r\n} from '../../v2/calculation';\r\nimport { perpetualPoolDpmmFactory } from './factory';\r\nimport { getOraclePriceFromCache2 } from '../../shared/utils/oracle';\r\nimport { calculateDpmmPrice } from \"../../v2_lite_dpmm/calc\";\r\nimport { ERC20Factory } from \"../../shared/contract/factory\";\r\nimport { liquidatePriceCache } from \"../../shared/api/api_globals\";\r\n\r\n// PoolApi \r\nexport class PoolApi {\r\n  constructor(chainId, poolAddress) {\r\n    this.chainId = chainId;\r\n    this.poolAddress = poolAddress;\r\n    this.pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n  }\r\n\r\n  async init(usedByEstimatedApi) {\r\n    await this.pool.init(usedByEstimatedApi);\r\n  }\r\n\r\n  // API\r\n  async getLiquidityInfo(accountAddress, bTokenId) {\r\n    if (!this.pool.isSymbolsUpdated()) {\r\n      await this.pool.getSymbols();\r\n    }\r\n    const pool = this.pool;\r\n    const [lTokenAsset, bTokens] = await Promise.all([\r\n      pool.lToken.getAsset(accountAddress, bTokenId),\r\n      pool.getBTokens(),\r\n    ]);\r\n    const { minPoolMarginRatio } = pool.parameters;\r\n    const bTokenIndex = pool.bTokenIds.indexOf(bTokenId.toString());\r\n    const { liquidity: poolLiquidity } = bTokens[bTokenIndex];\r\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset;\r\n    const cost = pool.symbols.reduce((acc, s) => acc.plus(s.notional), bg(0));\r\n    const totalPnl = pool.symbols.reduce((acc, s) => acc.plus(s.pnl), bg(0));\r\n\r\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\r\n      if (index === parseInt(bTokenId)) {\r\n        return accum.plus(b.pnl);\r\n      } else {\r\n        return accum.plus(\r\n          bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\r\n        );\r\n      }\r\n    }, bg(0));\r\n    const maxRemovableShares = calculateMaxRemovableLiquidity(\r\n      bTokens[bTokenIndex],\r\n      liquidity,\r\n      cost,\r\n      totalPnl,\r\n      restLiquidity,\r\n      minPoolMarginRatio\r\n    ).toString();\r\n    const approximatePnl = bg(pnl)\r\n      .plus(\r\n        bg(bTokens[bTokenIndex].cumulativePnl)\r\n          .minus(lastCumulativePnl)\r\n          .times(liquidity)\r\n      )\r\n      .toString();\r\n\r\n    return {\r\n      poolLiquidity,\r\n      shares: liquidity,\r\n      maxRemovableShares,\r\n      pnl: approximatePnl,\r\n    };\r\n  }\r\n\r\n  async getSpecification(symbolId) {\r\n    await this.init();\r\n    const pool = this.pool\r\n    const {\r\n      minPoolMarginRatio,\r\n      initialMarginRatio,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      maintenanceMarginRatio,\r\n      minBToken0Ratio,\r\n    } = pool.parameters;\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbolInfo = pool.symbols[symbolIndex];\r\n\r\n    const { symbol, multiplier, feeRatio } = symbolInfo;\r\n\r\n    return {\r\n      symbol,\r\n      bTokenSymbol: pool.bTokenSymbols,\r\n      bTokenMultiplier: pool.bTokens.map((b) => b.discount),\r\n      multiplier,\r\n      feeRatio,\r\n      fundingRateCoefficient: bg(1).div(pool.fundingPeriod).toString(),\r\n      minPoolMarginRatio,\r\n      minInitialMarginRatio: initialMarginRatio,\r\n      minMaintenanceMarginRatio: maintenanceMarginRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n      indexConstituents: getIndexInfo(symbol),\r\n    };\r\n  }\r\n\r\n  async getPositionInfo(accountAddress, symbolId) {\r\n    const pool = this.pool;\r\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const oracleAddress =\r\n      pool.offChainOracleSymbolIds.indexOf(symbolId) > -1\r\n        ? ''\r\n        : pool.symbols[symbolIndex].oracleAddress;\r\n    const [\r\n      bTokens,\r\n      symbols,\r\n      positions,\r\n      lastTimestamp,\r\n      margins,\r\n      price,\r\n    ] = await Promise.all([\r\n      pool.getBTokens(),\r\n      pool.getSymbols(),\r\n      pool.getPositions(accountAddress),\r\n      pool.getLastTimestamp(),\r\n      pool.pToken.getMargins(accountAddress),\r\n      getOraclePriceFromCache2.get(\r\n        this.chainId,\r\n        pool.symbols[symbolIndex].symbol,\r\n        oracleAddress\r\n      ),\r\n    ]);\r\n\r\n    const symbol = symbols[symbolIndex];\r\n    const position = positions[symbolIndex];\r\n    // const { volume } = position\r\n    // const { multiplier, indexPrice } = symbol\r\n    const margin = bTokens\r\n      .reduce(\r\n        (acc, b, index) =>\r\n          acc.plus(bg(b.price).times(b.discount).times(margins[index])),\r\n        bg(0)\r\n      )\r\n      .toString();\r\n    const marginHeld = symbols.reduce((acc, s, index) => {\r\n      return acc.plus(\r\n        bg(s.indexPrice)\r\n          .times(s.multiplier)\r\n          .times(positions[index].volume)\r\n          .times(initialMarginRatio)\r\n          .abs()\r\n      );\r\n    }, bg(0));\r\n    const marginHeldBySymbol = bg(position.volume)\r\n      .times(symbol.multiplier)\r\n      .times(symbol.indexPrice)\r\n      .times(initialMarginRatio)\r\n      .abs();\r\n\r\n    const unrealizedPnl = positions.reduce(\r\n      (acc, p) => acc.plus(p.traderPnl),\r\n      bg(0)\r\n    );\r\n    const unrealizedPnlList = symbols.map((s, index) => {\r\n      return [s.symbol, positions[index].traderPnl];\r\n    });\r\n    const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\r\n    const dynamicCost = symbols.reduce((acc, s, index) => {\r\n      if (index !== parseInt(symbolId)) {\r\n        return acc.plus(\r\n          bg(positions[index].volume).times(s.dpmmPrice).times(s.multiplier)\r\n        );\r\n      } else {\r\n        return acc;\r\n      }\r\n    }, bg(0));\r\n    const fundingFee = bg(symbol.cumulativeFundingRate)\r\n      .minus(position.lastCumulativeFundingRate)\r\n      .plus(\r\n        bg(symbol.dpmmPrice)\r\n          .minus(symbol.indexPrice)\r\n          .times(symbol.multiplier)\r\n          .div(pool.fundingPeriod)\r\n          .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\r\n      )\r\n      .times(position.volume)\r\n      .toString();\r\n\r\n    // set liquidatePrice cache\r\n    liquidatePriceCache.set(this.poolAddress, {\r\n      volume: position.volume,\r\n      margin,\r\n      totalCost,\r\n      dynamicCost,\r\n      price,\r\n      multiplier: symbol.multiplier,\r\n      minMaintenanceMarginRatio: maintenanceMarginRatio,\r\n    });\r\n\r\n    return {\r\n      symbol: symbol.symbol,\r\n      price: price,\r\n      markPrice: symbol.dpmmPrice.toString(),\r\n      volume: bg(position.volume).times(symbol.multiplier).toString(),\r\n      averageEntryPrice: bg(position.volume).eq(0)\r\n        ? '0'\r\n        : bg(position.cost)\r\n            .div(position.volume)\r\n            .div(symbol.multiplier)\r\n            .toString(),\r\n      margin: margin,\r\n      marginHeld: marginHeld.toString(),\r\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n      unrealizedPnl: unrealizedPnl.toString(),\r\n      unrealizedPnlList,\r\n      fundingFee,\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        position.volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        symbol.multiplier,\r\n        maintenanceMarginRatio\r\n      ).toString(),\r\n    };\r\n  }\r\n\r\n  async getPositionInfos(accountAddress) {\r\n    const pool = this.pool;\r\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\r\n    const [\r\n      bTokens,\r\n      symbols,\r\n      positions,\r\n      lastTimestamp,\r\n      margins,\r\n    ] = await Promise.all([\r\n      pool.getBTokens(),\r\n      pool.getSymbols(),\r\n      pool.getPositions(accountAddress),\r\n      pool.getLastTimestamp(),\r\n      pool.pToken.getMargins(accountAddress),\r\n    ]);\r\n    const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\r\n\r\n    return positions\r\n      .map((p, index) => {\r\n        const symbolIndex = index;\r\n        const symbol = symbols[symbolIndex];\r\n        const position = positions[symbolIndex];\r\n        const margin = bTokens\r\n          .reduce(\r\n            (acc, b, index) =>\r\n              acc.plus(bg(b.price).times(b.discount).times(margins[index])),\r\n            bg(0)\r\n          )\r\n          .toString();\r\n        const marginHeld = symbols.reduce((acc, s, index) => {\r\n          return acc.plus(\r\n            bg(s.indexPrice)\r\n              .times(s.multiplier)\r\n              .times(positions[index].volume)\r\n              .times(initialMarginRatio)\r\n              .abs()\r\n          );\r\n        }, bg(0));\r\n        const marginHeldBySymbol = bg(position.volume)\r\n          .times(symbol.multiplier)\r\n          .times(symbol.indexPrice)\r\n          .times(initialMarginRatio)\r\n          .abs();\r\n        const unrealizedPnl = p.traderPnl\r\n        const dynamicCost = symbols.reduce((acc, s, idx) => {\r\n          if (idx !== index) {\r\n            return acc.plus(\r\n              bg(positions[idx].volume).times(s.dpmmPrice).times(s.multiplier)\r\n            );\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, bg(0));\r\n        const fundingFee = bg(symbol.cumulativeFundingRate)\r\n          .minus(position.lastCumulativeFundingRate)\r\n          .plus(\r\n            bg(symbol.dpmmPrice)\r\n              .minus(symbol.indexPrice)\r\n              .times(symbol.multiplier)\r\n              .div(pool.fundingPeriod)\r\n              .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\r\n          )\r\n          .times(position.volume)\r\n          .toString();\r\n        return {\r\n          symbolId: symbolIndex.toString(),\r\n          symbol: symbol.symbol,\r\n          price: symbol.indexPrice,\r\n          volume: bg(position.volume).times(symbol.multiplier).toString(),\r\n          averageEntryPrice: bg(position.volume).eq(0)\r\n            ? '0'\r\n            : bg(position.cost)\r\n                .div(position.volume)\r\n                .div(symbol.multiplier)\r\n                .toString(),\r\n          margin: margin,\r\n          marginHeld: marginHeld.toString(),\r\n          marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n          unrealizedPnl: unrealizedPnl.toString(),\r\n          fundingFee,\r\n          liquidationPrice: calculateLiquidationPrice(\r\n            position.volume,\r\n            margin,\r\n            totalCost,\r\n            dynamicCost,\r\n            symbol.multiplier,\r\n            maintenanceMarginRatio\r\n          ).toString(),\r\n        };\r\n      })\r\n      .filter((p) => p.volume !== '0');\r\n  }\r\n\r\n  async getEstimatedMargin(accountAddress, volume, leverage, symbolId) {\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const { multiplier, indexPrice } = pool.symbols[symbolIndex];\r\n    return bg(volume)\r\n      .abs()\r\n      .times(multiplier)\r\n      .times(indexPrice)\r\n      .div(leverage)\r\n      .toString();\r\n  }\r\n\r\n  async getEstimatedFee(volume, symbolId) {\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const { multiplier, indexPrice, feeRatio } = pool.symbols[symbolIndex];\r\n    return bg(volume)\r\n      .abs()\r\n      .times(multiplier)\r\n      .times(indexPrice)\r\n      .times(feeRatio)\r\n      .toString();\r\n  }\r\n\r\n  async getFundingRate(symbolId) {\r\n    await this.init()\r\n    const pool = this.pool\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const {funding, fundingPerSecond, tradersNetVolume, multiplier } = pool.symbols[symbolIndex]\r\n    const liquidity = pool.state.liquidity\r\n    return {\r\n      funding0: funding,\r\n      fundingPerSecond,\r\n      liquidity: liquidity,\r\n      volume: '-',\r\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString(),\r\n    }\r\n  }\r\n\r\n\r\n  async getEstimatedFundingRate(newVolume, symbolId) {\r\n    const pool = this.pool\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbol = { ...pool.symbols[symbolIndex] };\r\n    symbol.dpmmPrice = calculateDpmmPrice(\r\n      symbol.indexPrice,\r\n      symbol.K,\r\n      bg(symbol.tradersNetVolume).plus(newVolume).toString(),\r\n      symbol.multiplier\r\n    ).toString();\r\n    symbol.fundingPerSecond = bg(symbol.dpmmPrice)\r\n      .minus(symbol.indexPrice)\r\n      //.times(symbol.multiplier)\r\n      .div(pool.fundingPeriod)\r\n      .toString();\r\n    return {\r\n      funding1: bg(symbol.fundingPerSecond).times(SECONDS_IN_A_DAY).toString(),\r\n    };\r\n  }\r\n\r\n  async getLiquidityUsed() {\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const { minPoolMarginRatio } = pool.parameters;\r\n    return pool.symbols\r\n      .reduce(\r\n        (acc, s) =>\r\n          acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .abs()\r\n              .times(s.indexPrice)\r\n              .times(s.multiplier)\r\n              .times(minPoolMarginRatio)\r\n          ),\r\n        bg(0)\r\n      )\r\n      .div(pool.state.liquidity)\r\n      .toString();\r\n  }\r\n\r\n  async getEstimatedLiquidityUsed(newVolume, symbolId) {\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n\r\n    const { minPoolMarginRatio } = pool.parameters;\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    //console.log(pool.symbols, poolMarginRatio, pool.stateValues)\r\n    return pool.symbols\r\n      .reduce(\r\n        (acc, s, index) =>\r\n          index === symbolIndex\r\n            ? acc.plus(\r\n                bg(s.tradersNetVolume)\r\n                  .plus(newVolume)\r\n                  .abs()\r\n                  .times(s.indexPrice)\r\n                  .times(s.multiplier)\r\n                  .times(minPoolMarginRatio)\r\n              )\r\n            : acc.plus(\r\n                bg(s.tradersNetVolume)\r\n                  .abs()\r\n                  .times(s.indexPrice)\r\n                  .times(s.multiplier)\r\n                  .times(minPoolMarginRatio)\r\n              ),\r\n        bg(0)\r\n      )\r\n      .div(pool.state.liquidity)\r\n      .toString();\r\n  }\r\n\r\n  async getPoolBTokensBySymbolId(accountAddress, symbolId) {\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    if (!pool.isPositionsUpdated()) {\r\n      await pool.getPositions(accountAddress);\r\n    }\r\n    const { initialMarginRatio } = pool.parameters\r\n    const margins = await pool.pToken.getMargins(accountAddress);\r\n    const balances = await Promise.all(\r\n      pool.bTokens.reduce(\r\n        (acc, i) => [\r\n          ...acc,\r\n          ERC20Factory(this.chainId, i.bTokenAddress).balanceOf(accountAddress),\r\n        ],\r\n        []\r\n      )\r\n    );\r\n\r\n    const margin = pool.bTokens.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n    }, bg(0)).toString()\r\n    const marginHeld = pool.symbols.reduce((acc, s, index) => {\r\n      return acc.plus(\r\n        bg(s.indexPrice)\r\n          .times(s.multiplier)\r\n          .times(pool.positions[index].volume)\r\n          .times(initialMarginRatio)\r\n          .abs()\r\n      );\r\n    }, bg(0)).toString();\r\n    const pnl = pool.positions.reduce((acc, p) => acc.plus(p.traderPnl), bg(0)).toString();\r\n\r\n    for (let i = 0; i < pool.bTokenIds.length; i++) {\r\n      const bToken = pool.bTokens[i]\r\n      bToken.walletBalance = balances[i]\r\n      bToken.availableBalance = max(\r\n        min(\r\n          bg(margin)\r\n            .minus(marginHeld)\r\n            .plus(pnl)\r\n            .div(pool.bTokens[i].price)\r\n            .div(pool.bTokens[i].discount),\r\n          bg(margins[i])\r\n        ),\r\n        bg(0)\r\n      ).toString();\r\n    }\r\n    return pool.bTokens.map((b, index) => {\r\n      return {\r\n        bTokenId: index.toString(),\r\n        bTokenAddress: b.bTokenAddress,\r\n        bTokenSymbol: pool.bTokenSymbols[index],\r\n        availableBalance: b.availableBalance,\r\n        walletBalance: b.walletBalance,\r\n      }\r\n    })\r\n  }\r\n\r\n  async getFundingFee(accountAddress, symbolId) {\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    if (!pool.isPositionsUpdated()) {\r\n      await pool.getPositions(accountAddress);\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    return pool.positions[symbolIndex].fundingAccrued;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport const poolApiFactory = contractFactory(PoolApi);","import { catchApiError } from '../../shared/utils/api';\r\n\r\nimport {\r\n  deriToNatural,\r\n  getBlockInfo,\r\n  getPastEvents,\r\n  getHttpBase,\r\n  fetchJson,\r\n  bg,\r\n} from '../../shared/utils';\r\nimport {\r\n  getPoolConfig,\r\n  getPoolSymbolIdList,\r\n} from '../../shared/config';\r\nimport { perpetualPoolDpmmFactory, perpetualPoolLiteDpmmFactory } from '../contract/factory';\r\n\r\n// const res = {\r\n//   direction,\r\n//   baseToken: bTokenSymbol,\r\n//   symbolId,\r\n//   symbol: symbol && symbol.symbol,\r\n//   price: price.toString(),\r\n//   notional: notional.toString(),\r\n//   volume: bg(volume).times(symbol.multiplier).toString(),\r\n//   transactionFee: transactionFee.toString(),\r\n//   transactionHash: txHash.toString(),\r\n//   time,\r\n// };\r\n\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  const perpetualPool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n  await perpetualPool.init()\r\n  const toBlock = await getBlockInfo(chainId, 'latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  const filters = { account: accountAddress };\r\n  let events = await getPastEvents(\r\n    chainId,\r\n    perpetualPool.contract,\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  //events = events.filter((i) => i.returnValues.symbolId === symbolId);\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await perpetualPool.formatTradeEvent(item)\r\n    result.unshift({\r\n      baseToken: '',\r\n      direction: res.direction,\r\n      volume: res.volume,\r\n      price: res.price,\r\n      notional: res.notional,\r\n      symbol: res.symbol,\r\n      symbolId: res.symbolId,\r\n      time: res.time,\r\n      transactionFee: res.transactionFee,\r\n      transactionHash: res.transactionHash,\r\n    });\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock,\r\n      tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    const perpetualPool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n    await perpetualPool.init()\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .map((i) => {\r\n          const symbolIndex = perpetualPool.activeSymbolIds.indexOf(i.symbolId)\r\n          if (symbolIndex > -1) {\r\n            return {\r\n              direction: i.direction.trim(),\r\n              baseToken: '',\r\n              symbolId: i.symbolId,\r\n              symbol: i.symbol,\r\n              price: deriToNatural(i.price).toString(),\r\n              notional: deriToNatural(i.notional).toString(),\r\n              volume: deriToNatural(i.volume).times(perpetualPool.symbols[symbolIndex].multiplier).toString(),\r\n              transactionFee: deriToNatural(i.transactionFee).toString(),\r\n              transactionHash: i.transactionHash,\r\n              time: i.time.toString(),\r\n            };\r\n          } else {\r\n            return null\r\n          }\r\n        }).filter((i) => i != null)\r\n    }\r\n    //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n      const { initialBlock } = getPoolConfig(poolAddress);\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch (err) {\r\n    console.log(\r\n      `getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`\r\n    );\r\n  }\r\n  return [];\r\n};\r\n","import {\r\n  getPoolInfoApy,\r\n  getPoolLiquidity,\r\n} from '../../v2/api/mining_query_api';\r\nimport {\r\n  getEstimatedFee,\r\n  getEstimatedFundingRate,\r\n  getEstimatedLiquidityUsed,\r\n  getEstimatedMargin,\r\n  getFundingRate,\r\n  getLiquidityInfo,\r\n  getLiquidityUsed,\r\n  getPositionInfo,\r\n  getPositionInfos,\r\n  getSpecification,\r\n  getWalletBalance,\r\n  isUnlocked,\r\n  getPoolBTokensBySymbolId,\r\n  getFundingFee,\r\n  getEstimatedTimePrice,\r\n} from './query_api';\r\nimport { getTradeHistory } from './trade_history_api';\r\nimport {\r\n  addLiquidity,\r\n  closePosition,\r\n  depositMargin,\r\n  removeLiquidity,\r\n  tradeWithMargin,\r\n  unlock,\r\n  withdrawMargin,\r\n} from './transaction_api';\r\n\r\nexport const api = {\r\n  // mining\r\n  getLiquidityInfo,\r\n  getPoolLiquidity,\r\n  getPoolInfoApy,\r\n  addLiquidity,\r\n  removeLiquidity,\r\n  // trading\r\n  getSpecification,\r\n  getPositionInfo,\r\n  getPositionInfos,\r\n  getWalletBalance,\r\n  isUnlocked,\r\n  getEstimatedFee,\r\n  getEstimatedMargin,\r\n  getFundingRate,\r\n  getEstimatedFundingRate,\r\n  getLiquidityUsed,\r\n  getEstimatedLiquidityUsed,\r\n  getEstimatedTimePrice,\r\n  getFundingRateCache: () => {},\r\n  unlock,\r\n  depositMargin,\r\n  withdrawMargin,\r\n  tradeWithMargin,\r\n  closePosition,\r\n  // tradeHistory\r\n  getTradeHistory,\r\n  // extra for v2\r\n  getPoolBTokensBySymbolId,\r\n  getFundingFee,\r\n};\r\n","import { checkApiInput, checkApiInputWithoutAccount, checkSymbolId, checkTokenId } from '../../shared/utils/derijsnext';\r\nimport { catchApiError } from '../../shared/utils/api';\r\nimport { poolApiFactory } from '../contract/PoolApi';\r\nimport { ERC20Factory } from '../../shared/contract/factory';\r\nimport { calculateDpmmCost } from '../../v2_lite_dpmm/calc';\r\nimport { bg } from '../../shared';\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      bTokenId = checkTokenId(bTokenId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getLiquidityInfo(accountAddress, bTokenId);\r\n    },\r\n    [],\r\n    'getLiquidityInfo',\r\n    {\r\n      maxRemovableShares: '',\r\n      pnl: '',\r\n      poolLiquidity: '',\r\n      shares: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getSpecification = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getSpecification(symbolId);\r\n    },\r\n    [],\r\n    'getSpecification',\r\n    {\r\n      symbol: '',\r\n      bTokenSymbol: [],\r\n      bTokenMultiplier: [],\r\n      multiplier: '',\r\n      feeRatio: '',\r\n      fundingRateCoefficient: '',\r\n      minPoolMarginRatio: '',\r\n      minInitialMarginRatio: '',\r\n      minMaintenanceMarginRatio: '',\r\n      liquidationCutRatio: '',\r\n      protocolFeeCollectRatio: '',\r\n      indexConstituents: { tokens: [], url: '' },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getPositionInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getPositionInfo(accountAddress, symbolId);\r\n    },\r\n    [],\r\n    'getPositionInfo',\r\n    {}\r\n  );\r\n};\r\n\r\nexport const getPositionInfos = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getPositionInfos(accountAddress);\r\n    },\r\n    [],\r\n    'getPositionInfos',\r\n    []\r\n  );\r\n};\r\n\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      bTokenId = checkTokenId(bTokenId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      const bTokenIndex = checkSymbolId(bTokenId, api.pool.bTokenIds);\r\n      const bTokenAddress = api.pool.bTokens[bTokenIndex].bTokenAddress;\r\n      const bToken = ERC20Factory(chainId, bTokenAddress);\r\n      return await bToken.balanceOf(accountAddress);\r\n    },\r\n    [],\r\n    'getWalletBalance',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const isUnlocked = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      bTokenId = checkTokenId(bTokenId);\r\n      const bTokenAddress = api.pool.bTokens[parseInt(bTokenId)].bTokenAddress;\r\n      const bToken = ERC20Factory(chainId, bTokenAddress);\r\n      return await bToken.isUnlocked(accountAddress, poolAddress);\r\n    },\r\n    [],\r\n    'isUnlocked',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId,\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init(true);\r\n      return await api.getEstimatedMargin(accountAddress, volume, leverage, symbolId);\r\n    },\r\n    [],\r\n    'getEstimatedMargin',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedFee = async (\r\n  chainId,\r\n  poolAddress,\r\n  volume,\r\n  symbolId,\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress,\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init(true);\r\n      return await api.getEstimatedFee(volume, symbolId);\r\n    },\r\n    [],\r\n    'getEstimatedFee',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getFundingRate(symbolId);\r\n    },\r\n    [],\r\n    'getFundingRate',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init(true);\r\n      return await api.getEstimatedFundingRate(newVolume, symbolId);\r\n    },\r\n    [],\r\n    'getFundingRate',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getLiquidityUsed();\r\n    },\r\n    [],\r\n    'getLiquidityUsed',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init(true);\r\n      return await api.getEstimatedLiquidityUsed(newVolume, symbolId);\r\n    },\r\n    [],\r\n    'getEstimatedLiquidityUsed',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getPoolBTokensBySymbolId = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      //symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getPoolBTokensBySymbolId(accountAddress, symbolId);\r\n    },\r\n    [],\r\n    'getPoolBTokensBySymbolId',\r\n    []\r\n  );\r\n};\r\n\r\n\r\nexport const getFundingFee = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getFundingFee(accountAddress, symbolId);\r\n    },\r\n    [],\r\n    'getFundingFee',\r\n    []\r\n  );\r\n};\r\n\r\nexport const getEstimatedTimePrice = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress,\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      const pool = api.pool;\r\n      const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n      if (!pool.isSymbolsUpdated()) {\r\n        await pool.getSymbols();\r\n      }\r\n      const symbol = pool.symbols[symbolIndex];\r\n      console.log('dpmmPrice', symbol.dpmmPrice.toString())\r\n      const cost = calculateDpmmCost(\r\n        symbol.indexPrice,\r\n        symbol.K,\r\n        symbol.tradersNetVolume,\r\n        symbol.multiplier,\r\n        newNetVolume\r\n      );\r\n      return bg(cost).div(symbol.multiplier).div(newNetVolume).toString();\r\n    },\r\n    [],\r\n    'getEstimatedTimePrice',\r\n    ''\r\n  );\r\n};\r\n","import {\r\n  bg,\r\n  checkApiInput,\r\n} from '../../shared';\r\nimport { ERC20Factory } from '../../shared/contract/factory';\r\nimport { catchTxApiError } from '../../shared/utils/api';\r\nimport { checkAmount, checkSymbolId, checkTokenId } from '../../shared/utils/derijsnext';\r\nimport { perpetualPoolDpmmFactory } from '../contract/factory.js';\r\n\r\n// mining\r\nexport const addLiquidity = async (chainId, poolAddress, accountAddress, amount, bTokenId) => {\r\n  return catchTxApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      amount = checkAmount(amount)\r\n      bTokenId = checkTokenId(bTokenId)\r\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.router.addLiquidity(accountAddress, bTokenId, amount);\r\n    },\r\n    []\r\n  );\r\n};\r\n\r\nexport const removeLiquidity = async (chainId, poolAddress, accountAddress, amount, bTokenId) => {\r\n  return catchTxApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      amount = checkAmount(amount)\r\n      bTokenId = checkTokenId(bTokenId)\r\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.router.removeLiquidity(accountAddress, bTokenId, amount);\r\n    },\r\n    []\r\n  );\r\n};\r\n\r\n//trading\r\nexport const unlock = async (chainId, poolAddress, accountAddress, bTokenId) => {\r\n  return catchTxApiError(async () => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    bTokenId = checkTokenId(bTokenId)\r\n    const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n    await pool.init();\r\n    const bTokenIndex = checkSymbolId(bTokenId, pool.bTokenIds)\r\n    const bTokenAddress = pool.bTokens[bTokenIndex].bTokenAddress;\r\n    const bToken = ERC20Factory(chainId, bTokenAddress);\r\n    return await bToken.unlock(accountAddress, poolAddress);\r\n  }, []);\r\n};\r\n\r\nexport const depositMargin = async (chainId, poolAddress, accountAddress, amount, bTokenId) => {\r\n  return catchTxApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      amount = checkAmount(amount)\r\n      bTokenId = checkTokenId(bTokenId)\r\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.router.addMargin(accountAddress, bTokenId, amount);\r\n    },\r\n    []\r\n  );\r\n};\r\n\r\nexport const withdrawMargin = async (chainId, poolAddress, accountAddress, amount, bTokenId) => {\r\n  return catchTxApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      amount = checkAmount(amount)\r\n      bTokenId = checkTokenId(bTokenId)\r\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.router.removeMargin(accountAddress, bTokenId, amount);\r\n    },\r\n    []\r\n  );\r\n};\r\n\r\nexport const tradeWithMargin = async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\r\n  return catchTxApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      newVolume = checkAmount(newVolume)\r\n      symbolId = checkTokenId(symbolId)\r\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.router.trade(accountAddress, symbolId, newVolume);\r\n    },\r\n    []\r\n  );\r\n};\r\n\r\nexport const closePosition = async (chainId, poolAddress, accountAddress, symbolId) => {\r\n  return catchTxApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      const { volume } = await pool.pToken.getPosition(\r\n        accountAddress,\r\n        symbolId\r\n      );\r\n      if (!bg(volume).eq(0)) {\r\n        const newVolume = bg(volume).negated().toString();\r\n        return await pool.router.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error('no position to close');\r\n      }\r\n    },\r\n    []\r\n  );\r\n};\r\n","//import { getLiquidityInfo2 } from '../v1/api/rest_api';\r\nimport {\r\n  getPoolVersionId,\r\n  LITE_VERSIONS,\r\n} from '../shared/config';\r\nimport {\r\n  getPoolLiquidity as getPoolLiquidity1,\r\n  getPoolInfoApy as getPoolInfoApy1,\r\n} from '../shared/api/database_api';\r\nimport { getLiquidityInfo2 } from '../v1/api';\r\nimport {\r\n  getLiquidityInfoV2,\r\n  getPoolInfoApyV2,\r\n  getPoolLiquidityV2,\r\n} from '../v2/api';\r\nimport {\r\n  getLiquidityInfoV2l,\r\n} from '../v2_lite/api';\r\nimport {\r\n  getLiquidityInfoOption,\r\n} from '../option/api';\r\n\r\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\r\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  const versionId = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(versionId)) {\r\n    return getLiquidityInfoV2l(chainId, poolAddress, accountAddress)\r\n  } else if (versionId === 'option') {\r\n    return getLiquidityInfoOption(chainId, poolAddress, accountAddress)\r\n  } else if (versionId === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getLiquidityInfo(chainId, poolAddress, accountAddress)\r\n  } else if (versionId === 'v2_dpmm') {\r\n    return apiV2Dpmm.getLiquidityInfo(chainId, poolAddress, accountAddress, bTokenId)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getLiquidityInfo2(chainId, poolAddress, accountAddress)\r\n  } else {\r\n    return getLiquidityInfoV2(chainId, poolAddress, accountAddress, bTokenId)\r\n  }\r\n};\r\n\r\nexport const getPoolLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  bTokenId,\r\n) => {\r\n  if (bTokenId != null) {\r\n    return getPoolLiquidityV2(chainId, poolAddress, bTokenId)\r\n  } else {\r\n    return getPoolLiquidity1(chainId, poolAddress)\r\n  }\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\r\n  if (bTokenId != null) {\r\n    return getPoolInfoApyV2(chainId, poolAddress, bTokenId)\r\n  } else {\r\n    return getPoolInfoApy1(chainId, poolAddress)\r\n  }\r\n};\r\n","//import {addLiquidity2, removeLiquidity2 } from '../v1/api/contract_transaction_api_v2';\r\nimport { getPoolVersionId, LITE_VERSIONS } from '../shared'\r\nimport { addLiquidity2, removeLiquidity2 } from '../v1/api';\r\nimport { addLiquidityV2, removeLiquidityV2 } from '../v2/api';\r\nimport { addLiquidityV2l, removeLiquidityV2l } from '../v2_lite/api';\r\nimport { addLiquidityOption, removeLiquidityOption } from '../option/api';\r\n\r\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\r\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\r\n\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n) => {\r\n  const versionId = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(versionId)) {\r\n    return addLiquidityV2l(chainId, poolAddress, accountAddress, amount)\r\n  } else if (versionId === 'option') {\r\n    return addLiquidityOption(chainId, poolAddress, accountAddress, amount);\r\n  } else if (versionId === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.addLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (versionId === 'v2_dpmm') {\r\n    return apiV2Dpmm.addLiquidity(chainId, poolAddress, accountAddress, amount, bTokenId);\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return addLiquidity2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return addLiquidityV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId\r\n    );\r\n  }\r\n}\r\n\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum,\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return removeLiquidityV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\r\n  } else if (version === 'option') {\r\n    return removeLiquidityOption(chainId, poolAddress, accountAddress, amount, isMaximum)\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.removeLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.removeLiquidity(chainId, poolAddress, accountAddress, amount, bTokenId);\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return removeLiquidity2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return removeLiquidityV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId,\r\n      isMaximum,\r\n    );\r\n  }\r\n}\r\n","import {\r\n  getEstimatedFundingRateOption,\r\n  getFundingRateCacheOption,\r\n  getFundingRateOption,\r\n  getLiquidityUsedOption,\r\n  getPositionInfoOption,\r\n  getPositionInfosOption,\r\n  getSpecificationOption,\r\n  getWalletBalanceOption,\r\n  getEstimatedFeeOption,\r\n  getEstimatedMarginOption,\r\n  getEstimatedLiquidityUsedOption,\r\n  getEstimatedTimePriceOption,\r\n  isUnlockedOption,\r\n} from '../option/api';\r\nimport { getPoolVersionId, isDeriUnlocked, LITE_VERSIONS } from '../shared';\r\nimport {\r\n  getPositionInfo2,\r\n  isUnlocked2,\r\n  getEstimatedMargin2,\r\n  getEstimatedFee2,\r\n  getEstimatedFundingRate2,\r\n  getEstimatedLiquidityUsed2,\r\n  getWalletBalance2,\r\n  getSpecification2,\r\n  getFundingRate2,\r\n  getLiquidityUsed2,\r\n  getFundingRateCache2,\r\n} from '../v1/api';\r\n\r\nimport {\r\n  getPositionInfoV2,\r\n  getPositionInfosV2,\r\n  isUnlockedV2,\r\n  getEstimatedMarginV2,\r\n  getEstimatedFeeV2,\r\n  getEstimatedFundingRateV2,\r\n  getEstimatedLiquidityUsedV2,\r\n  getSpecificationV2,\r\n  getWalletBalanceV2,\r\n  getFundingRateV2,\r\n  getLiquidityUsedV2,\r\n  getFundingRateCacheV2,\r\n  getEstimatedLiquidatePriceV2,\r\n  getPoolBTokensBySymbolId as getPoolBTokensBySymbolIdV2\r\n} from '../v2/api';\r\n\r\nimport {\r\n  getPositionInfoV2l,\r\n  getPositionInfosV2l,\r\n  isUnlockedV2l,\r\n  getEstimatedMarginV2l,\r\n  getEstimatedFeeV2l,\r\n  getEstimatedFundingRateV2l,\r\n  getEstimatedLiquidityUsedV2l,\r\n  getSpecificationV2l,\r\n  getWalletBalanceV2l,\r\n  getFundingRateV2l,\r\n  getLiquidityUsedV2l,\r\n  getFundingRateCacheV2l,\r\n} from '../v2_lite/api';\r\n\r\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\r\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\r\n\r\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getSpecificationV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getSpecificationOption(chainId, poolAddress, symbolId);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getSpecification(chainId, poolAddress, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getSpecification(chainId, poolAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getSpecification2(chainId, poolAddress);\r\n  } else {\r\n    return getSpecificationV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getPositionInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getPositionInfoV2l(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getPositionInfoOption(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getPositionInfo(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getPositionInfo(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getPositionInfo2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return getPositionInfoV2(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\r\n  const version = getPoolVersionId(poolAddress);\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getPositionInfosV2l(chainId, poolAddress, accountAddress)\r\n  } else if (version === 'option') {\r\n    return getPositionInfosOption(chainId, poolAddress, accountAddress)\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getPositionInfos(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getPositionInfos(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v1') {\r\n    return [\r\n      await getPositionInfo2(chainId, poolAddress, accountAddress),\r\n    ].filter((p) => p.volume !== '0');\r\n  } else if (version === 'v2') {\r\n    return getPositionInfosV2(chainId, poolAddress, accountAddress)\r\n  } else {\r\n    // return empty array for v1, v2, v2_lite\r\n    return []\r\n  }\r\n}\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getWalletBalanceV2l(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'option') {\r\n    return getWalletBalanceOption(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getWalletBalance(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getWalletBalance(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getWalletBalance2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return getWalletBalanceV2(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n};\r\n\r\nexport const isUnlocked = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return isUnlockedV2l(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'option') {\r\n    return isUnlockedOption(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.isUnlocked(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.isUnlocked(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n  if (accountAddress === undefined) {\r\n    return isDeriUnlocked(chainId, poolAddress);\r\n  } else if (bTokenId === undefined) {\r\n    return isUnlocked2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return isUnlockedV2(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedLiquidatePrice = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedLiquidatePriceV2(chainId, poolAddress, accountAddress, newVolume, symbolId);\r\n  } else if (version === 'option') {\r\n    // place holder\r\n    return ''\r\n  }\r\n  if (symbolId === undefined) {\r\n    // place holder\r\n    return ''\r\n  } else {\r\n    return getEstimatedLiquidatePriceV2(chainId, poolAddress, accountAddress, newVolume, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedFee = async (\r\n  chainId,\r\n  poolAddress,\r\n  volume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedFeeV2l(chainId, poolAddress, volume, symbolId);\r\n  } else if (version === 'option') {\r\n    return getEstimatedFeeOption(chainId, poolAddress, volume, symbolId);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getEstimatedFee(chainId, poolAddress, volume, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getEstimatedFee(chainId, poolAddress, volume, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedFee2(chainId, poolAddress, volume);\r\n  } else {\r\n    return getEstimatedFeeV2(chainId, poolAddress, volume, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedMarginV2l(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return getEstimatedMarginOption(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getEstimatedMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getEstimatedMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedMargin2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage\r\n    );\r\n  } else {\r\n    return getEstimatedMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getFundingRateV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getFundingRateOption(chainId, poolAddress, symbolId);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getFundingRate(chainId, poolAddress, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getFundingRate(\r\n      chainId,\r\n      poolAddress,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getFundingRate2(chainId, poolAddress);\r\n  } else {\r\n    return getFundingRateV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedFundingRateV2l(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return getEstimatedFundingRateOption(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getEstimatedFundingRate(chainId, poolAddress, newNetVolume, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getEstimatedFundingRate(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedFundingRate2(chainId, poolAddress, newNetVolume);\r\n  } else {\r\n    return getEstimatedFundingRateV2(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getLiquidityUsedV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getLiquidityUsedOption(chainId, poolAddress, symbolId);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getLiquidityUsed(chainId, poolAddress, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getLiquidityUsed(\r\n      chainId,\r\n      poolAddress,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getLiquidityUsed2(chainId, poolAddress);\r\n  } else {\r\n    return getLiquidityUsedV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedLiquidityUsedV2l(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return getEstimatedLiquidityUsedOption(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getEstimatedLiquidityUsed(chainId, poolAddress, newNetVolume, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getEstimatedLiquidityUsed(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedLiquidityUsed2(chainId, poolAddress, newNetVolume);\r\n  } else {\r\n    return getEstimatedLiquidityUsedV2(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getFundingRateCacheV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getFundingRateCacheOption(chainId, poolAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getFundingRateCache2(chainId, poolAddress);\r\n  } else {\r\n    return getFundingRateCacheV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getPoolBTokensBySymbolId = async (chainId, poolAddress, accountAddress) => {\r\n  const versionId = getPoolVersionId(poolAddress)\r\n  if (['v2', 'v2_dpmm'].includes(versionId)) {\r\n    if (versionId === 'v2') {\r\n      return await getPoolBTokensBySymbolIdV2(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await apiV2Dpmm.getPoolBTokensBySymbolId(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n    }\r\n  } else {\r\n    return []\r\n  }\r\n}\r\n\r\nexport const getEstimatedTimePrice = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n  ) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (version === 'option') {\r\n    return getEstimatedTimePriceOption(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getEstimatedTimePrice(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getEstimatedTimePrice(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else {\r\n    return '';\r\n  }\r\n};","import { closePositionOption, depositMarginOption, tradeWithMarginOption, unlockOption, withdrawMarginOption } from '../option/api';\r\nimport { getPoolVersionId, LITE_VERSIONS, unlockDeri } from '../shared';\r\nimport {\r\n  unlock2,\r\n  tradeWithMargin2,\r\n  closePosition2,\r\n  depositMargin2,\r\n  withdrawMargin2,\r\n} from '../v1/api';\r\nimport {\r\n  unlockV2,\r\n  tradeWithMarginV2,\r\n  closePositionV2,\r\n  depositMarginV2,\r\n  withdrawMarginV2,\r\n} from '../v2/api';\r\nimport {\r\n  unlockV2l,\r\n  tradeWithMarginV2l,\r\n  closePositionV2l,\r\n  depositMarginV2l,\r\n  withdrawMarginV2l,\r\n} from '../v2_lite/api';\r\n\r\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\r\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\r\n\r\nexport const unlock = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return unlockV2l(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'option') {\r\n    return unlockOption(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.unlock(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.unlock(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n  if (accountAddress === undefined) {\r\n    return unlockDeri(chainId, poolAddress);\r\n  } else if (bTokenId === undefined) {\r\n    return unlock2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return unlockV2(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return depositMarginV2l(chainId, poolAddress, accountAddress, amount);\r\n  } else if (version === 'option') {\r\n    return depositMarginOption(chainId, poolAddress, accountAddress, amount);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.depositMargin(chainId, poolAddress, accountAddress, amount);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.depositMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId\r\n    );\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return depositMargin2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return depositMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId\r\n    );\r\n  }\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return withdrawMarginV2l(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      isMaximum\r\n    );\r\n  } else if (version === 'option') {\r\n    return withdrawMarginOption(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      isMaximum\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.withdrawMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.withdrawMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId,\r\n    );\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return withdrawMargin2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return withdrawMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId,\r\n      isMaximum\r\n    );\r\n  }\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return tradeWithMarginV2l(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return tradeWithMarginOption(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.tradeWithMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    )\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.tradeWithMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return tradeWithMargin2(chainId, poolAddress, accountAddress, newVolume);\r\n  } else {\r\n    return tradeWithMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return closePositionV2l(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return closePositionOption(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.closePosition(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.closePosition(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      symbolId,\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return closePosition2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return closePositionV2(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n};\r\n","import { getPoolVersionId, LITE_VERSIONS } from '../shared';\r\nimport { getTradeHistoryOption } from '../option/api';\r\nimport { getTradeHistory2 } from '../v1/api';\r\nimport { getTradeHistoryV2 } from '../v2/api';\r\nimport { getTradeHistoryV2l } from '../v2_lite/api';\r\n\r\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\r\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getTradeHistoryV2l(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getTradeHistoryOption(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getTradeHistory(chainId, poolAddress, accountAddress, symbolId)\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getTradeHistory(chainId, poolAddress, accountAddress, symbolId)\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getTradeHistory2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return getTradeHistoryV2(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n};\r\n","import { io } from \"socket.io-client\";\r\nimport {equalIgnoreCase } from \"../utils/utils\";\r\n\r\nclass WebSocket {\r\n  constructor(){\r\n    this.socket = io(process.env.REACT_APP_WSS_URL, {\r\n      transports: ['websocket'],\r\n      withCredentials: true\r\n    })\r\n    this.events = [];\r\n    this.socket.on('connect', () => {\r\n      console.log('connect')\r\n      this.events.forEach(event => {\r\n        this.socket.emit(event[0],event[1]);\r\n      })\r\n    })\r\n    this.socket.on('disconnect',event => {\r\n      console.log('web socket disconnect,will reconnect auto')\r\n    })\r\n  }\r\n\r\n  subscribe(event = 'get_kline_update',params = {},onMessage,listener = 'kline_update'){\r\n    this.socket.on(listener,data => {\r\n      if (data.time_type === params.time_type && equalIgnoreCase(data.symbol,params.symbol) && onMessage) {\r\n        onMessage(data)\r\n      }\r\n    })\r\n    this.socket.emit(event, params)\r\n    if(this.findEvent(event,params) === -1){\r\n      this.events.push([event,params])\r\n    }\r\n  }\r\n\r\n  findEvent(event,params){\r\n    return this.events.findIndex(item => item[0] === event && item[1].symbol === params.symbol && item[1].time_type === params.time_type);\r\n  }\r\n\r\n  unsubscribe(event,params = {}){\r\n    this.socket.emit(event,params)\r\n    const pos = this.findEvent(event,params)\r\n    this.events.splice(pos,1)\r\n  }\r\n}\r\nexport default new WebSocket()","import React from 'react'\r\nimport Modal from 'react-modal/lib/components/Modal';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nconst withModal = Component => {\r\n  const appElement = document.getElementById('root')\r\n  const customizeStyle =  {\r\n    overlay: {\r\n      position: 'fixed',\r\n      zIndex : 2,\r\n      background : 'rgb(0 0 0 / 0.5)'\r\n    },\r\n    content: {\r\n      position: 'absolute',\r\n      border : 0,\r\n      background : 'none',\r\n      inset : 0,\r\n      overflow : 'initial'\r\n    }\r\n  };\r\n\r\n  class WithModal extends React.Component {\r\n    constructor(props){\r\n      super(props)\r\n      this.state = {\r\n        modalIsOpen : false\r\n      }\r\n    }\r\n\r\n    render(){\r\n      const {modalIsOpen,className,overlay = {}} = this.props\r\n      const overlayMerged = Object.assign(customizeStyle.overlay,{...overlay})\r\n      const mergedStyle = Object.assign(customizeStyle,{overlay :overlayMerged})\r\n      return (\r\n        <Modal isOpen={modalIsOpen} style={mergedStyle} appElement={appElement} portalClassName={this.props.intl.locale}>\r\n          <div className={className}>\r\n            <Component {...this.props} className={className} onClose={this.props.onClose}/>\r\n          </div>\r\n        </Modal>\r\n      )\r\n    }\r\n  }\r\n\r\n  return inject('intl')(observer(WithModal)) ;\r\n}\r\nexport default withModal;","import { makeAutoObservable, observable, action, computed } from \"mobx\";\r\nimport { storeVersion, restoreVersion } from \"../utils/utils\";\r\n\r\nclass Version {\r\n  current = 'v2';\r\n\r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      current : observable,\r\n      setCurrent : action,\r\n      isV1 : computed,\r\n      isV2 : computed,\r\n      isV2Lite : computed\r\n    })\r\n  }\r\n\r\n\r\n  setCurrent(version){\r\n    this.current = version;\r\n  }\r\n\r\n  switch(){\r\n    if(this.current === 'v1'){\r\n      this.setCurrent('v2')\r\n    } else {\r\n      this.setCurrent('v1')\r\n    }\r\n  }\r\n\r\n  get isV1() {\r\n    return this.current === 'v1'\r\n  }\r\n\r\n  get isV2(){\r\n    return this.current === 'v2'\r\n  }\r\n\r\n  get isV2Lite (){\r\n    return this.current === 'v2_lite'\r\n  }\r\n\r\n  get isOpen(){\r\n    return this.current === 'v2_lite_open'\r\n  }\r\n}\r\nexport default new Version()","import Web3 from 'web3';\r\nimport BigNumber from 'bignumber.js';\r\n\r\n// lang\r\nexport const isObject = (value) => typeof value === 'object' && value !== null\r\nexport const isArray = (value) => typeof value === 'object' && Array.isArray(value)\r\nexport const isFunction = (value) => typeof value === 'function'\r\n\r\n// == bg\r\nBigNumber.config({\r\n  DECIMAL_PLACES: 18,\r\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\r\n  EXPONENTIAL_AT: 256,\r\n});\r\n\r\nexport const bg = (value, base = 0) => {\r\n  if (base === 0) {\r\n    return BigNumber(value);\r\n  }\r\n  if (base > 0) {\r\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\r\n  }\r\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\r\n};\r\n\r\nexport const max = (value1, value2) => {\r\n  if (value1.gte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\nexport const min = (value1, value2) => {\r\n  if (value1.lte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\nexport const fromWei = (value) => bg(value, -18).toString()\r\n\r\nexport const toWei = (value) => bg(value, 18).toFixed(0).toString()\r\n\r\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\r\n\r\nexport const toHex = (value) => Web3.utils.toHex(value);\r\n\r\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\r\n\r\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\r\n\r\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\r\n\r\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\r\n\r\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\r\n\r\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\r\n\r\n\r\nexport const deriToNatural = (value) => bg(value, -18);\r\n\r\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\r\n\r\nexport const deriToString = (value) => bg(value).toString();\r\n\r\nexport const deriToBool = (value) => {\r\n  if (bg(value).toNumber() === 1) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const naturalWithPercentage = (value) =>\r\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\r\n\r\nexport const formatBN = (bigNumber) =>\r\n  bigNumber.toFormat().replaceAll(',', '').toString();\r\n\r\n// == convert\r\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);\r\n\r\n\r\n// == utils\r\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined'\r\nexport const isNodejs = () => typeof process !== 'undefined' && process.versions != null && process.versions.node != null\r\nexport const isJsDom = () => typeof window !== 'undefined' && navigator.userAgent.includes('jsdom')\r\n\r\n// == array set\r\nexport const isEqualSet = (set1, set2) => {\r\n  if (set1.size !== set2.size) return false;\r\n  for (let item of set1) {\r\n    if (!set2.has(item)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n\r\n\r\n// == contract gen\r\n// export const deleteIndexedKey = (obj) => {\r\n//   if (isObject(obj) && Object.keys(obj).length > 0) {\r\n//     const keys = Object.keys(obj);\r\n//     const intKeyCount = keys.reduce(\r\n//       (acc, k) => (intRegex.test(k) ? acc + 1 : acc),\r\n//       0\r\n//     );\r\n//     if (intKeyCount * 2 === keys.length) {\r\n//       let newObj = {};\r\n//       Object.keys(obj).forEach((k) => {\r\n//         if (!intRegex.test(k)) {\r\n//           newObj[k] = obj[k];\r\n//         }\r\n//       });\r\n//       return newObj;\r\n//     }\r\n//     return obj;\r\n//   } else {\r\n//     return obj;\r\n//   }\r\n// };\r\n\r\nexport const fromWeiForObject = (obj, keyList = []) => {\r\n  return Object.keys(obj).reduce((acc, i) => {\r\n    if (keyList.includes(i)) {\r\n      acc[i] = fromWei(obj[i]);\r\n    } else {\r\n      acc[i] = obj[i];\r\n    }\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\nexport const toNumberForObject = (obj, keyList = []) => {\r\n  return Object.keys(obj).reduce((acc, i) => {\r\n    if (keyList.includes(i)) {\r\n      acc[i] = bg(obj[i]).toNumber();\r\n    } else {\r\n      acc[i] = obj[i];\r\n    }\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\n\r\n// for frontend to display symbols\r\nexport const sortOptionSymbols = (symbolList) => {\r\n  const symbolArr = symbolList\r\n    .map((s) => s.symbol)\r\n    .map((s) => {\r\n      return s.split('-');\r\n    });\r\n  const unique = (value, index, self) => self.indexOf(value) === index\r\n  const to2 = (i) => i < 10 ? `0${i}` : i\r\n  const symbol = symbolArr.map((s) => s[0]).filter(unique)\r\n  const direction = symbolArr.map((s) => s[2]).filter(unique)\r\n  const price = symbolArr\r\n    .map((s) => s[1])\r\n    .filter(unique)\r\n    .sort((a, b) => parseInt(b) - parseInt(a));\r\n  return symbolList.map((i, index) => {\r\n    const index1 =  symbol.indexOf(symbolArr[index][0]) + 1\r\n    const index2 =  to2(direction.indexOf(symbolArr[index][2]) + 1)\r\n    const index3 =  to2(price.indexOf(symbolArr[index][1]) + 1)\r\n    i.index = parseInt(`${index1}${index2}${index3}`)\r\n    return i\r\n  }).sort((a, b) => a.index - b.index).map((i) => {\r\n    delete i.index\r\n    return i\r\n  })\r\n}\r\n\r\n","import { makeAutoObservable, observable, action, computed } from \"mobx\";\r\n\r\n\r\nclass Type {\r\n  current = null;\r\n  \r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      current:observable,\r\n      setCurrent : action,\r\n      isOption : computed,\r\n      isFuture : computed\r\n    })\r\n  }\r\n\r\n  setCurrent(type){\r\n    this.current = type;\r\n  }\r\n\r\n  get isOption() {\r\n    return this.current === 'option'\r\n  }\r\n\r\n  get isFuture() {\r\n    return this.current === 'future'\r\n  }\r\n}\r\nexport default new Type()","import { makeObservable, observable, action } from \"mobx\";\r\nimport { getContractAddressConfig, DeriEnv,sortOptionSymbols,openConfigListCache } from \"../lib/web3js/indexV2\";\r\n\r\nexport default class Config {\r\n  all = []\r\n\r\n  constructor(){\r\n    makeObservable(this,{\r\n      all : observable,\r\n      setAll : action\r\n    })\r\n  }\r\n\r\n  async load(version,isOptions){\r\n    let current = version && version.current;\r\n    if(isOptions){\r\n      current = 'option'\r\n    }\r\n    if(current === 'v2_lite_open'){\r\n       await openConfigListCache.update()\r\n    }\r\n    let configs = getContractAddressConfig(DeriEnv.get(),current)\r\n    if(isOptions){\r\n      configs = sortOptionSymbols(configs)\r\n    }\r\n    if(!isOptions && version){\r\n      configs = configs.filter(c => c.version === version.current && c.symbol !== '--')\r\n      //v2 不需要展示base token,需要合并相同的base token\r\n      if(version.isV2){\r\n        configs = configs.reduce((total,cur) => {\r\n          const pos = total.findIndex(c => c.symbol === cur.symbol && c.pool === cur.pool);\r\n          if(pos === -1 ){\r\n            total.push(cur)\r\n          }\r\n          return total;\r\n        },[])\r\n      }\r\n    }\r\n    this.setAll(configs)\r\n    return this.all;\r\n  }\r\n\r\n  setAll(all){\r\n    this.all = all;\r\n  }\r\n  \r\n}","\r\n\r\nimport BigNumber from 'bignumber.js'\r\nimport version from '../model/Version';\r\nimport type from '../model/Type';\r\nimport config from '../config.json'\r\n\r\nimport {\r\n  DeriEnv,\r\n  getPoolLiquidity,\r\n  getPoolInfoApy,\r\n  getUserInfoAll,\r\n  getLiquidityInfo\r\n} from '../lib/web3js/indexV2'\r\nconst versionKey = 'deri-current-version'\r\n\r\n\r\nconst env = DeriEnv.get();\r\nconst { chainInfo } = config[env]\r\n\r\nexport function bg(value, base = 0) {\r\n  if (base === 0) {\r\n    return BigNumber(value);\r\n  } else if (base > 0) {\r\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\r\n  } else {\r\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\r\n  }\r\n}\r\n\r\nexport function deriNatural(value) {\r\n  return bg(value, -18);\r\n}\r\n\r\nexport function formatAddress(address){\r\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\r\n}\r\n\r\nexport function formatBalance(balance){\r\n  return balance && (+balance).toFixed(4)\r\n}\r\n\r\nexport function eqInNumber(str1,str2){\r\n  return (+str1) === (+str2)\r\n}\r\n\r\nexport function isLP(address){\r\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\r\n}\r\nexport function isSushiLP(address){\r\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\r\n}\r\nexport function isCakeLP(address){\r\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\r\n}\r\n\r\nexport function sessionStorageKey(version){\r\n  return `${version}-current-trading-pool`\r\n}\r\n\r\nexport function convertToInternationalCurrencySystem (labelValue) {\r\n  \r\n  // Nine Zeroes for Billions\r\n  return Number.isNaN(labelValue) ? ''\r\n  : Math.abs(Number(labelValue)) >= 1.0e+9\r\n\r\n  ? (Math.abs(Number(labelValue)) / 1.0e+9).toFixed(2) + \"B\"\r\n  // Six Zeroes for Millions \r\n  : Math.abs(Number(labelValue)) >= 1.0e+6\r\n\r\n  ? (Math.abs(Number(labelValue)) / 1.0e+6).toFixed(2) + \"M\"\r\n  // Three Zeroes for Thousands\r\n  : Math.abs(Number(labelValue)) >= 1.0e+3\r\n\r\n  ? (Math.abs(Number(labelValue)) / 1.0e+3).toFixed(2) + \"K\"\r\n\r\n  : Math.abs(Number(labelValue).toFixed(2));\r\n\r\n}\r\n\r\n\r\n// export function storeVersion(version){\r\n//   sessionStorage.setItem(versionKey,version)\r\n// }\r\n\r\n// export function restoreVersion(){\r\n//   return sessionStorage.getItem(versionKey)\r\n// }\r\n\r\nexport function storeConfig(version,config){\r\n  if(config){\r\n    const key = sessionStorageKey(version);\r\n    sessionStorage.setItem(key,JSON.stringify(config))\r\n  }\r\n}\r\n\r\nexport function getConfigFromStore(version){\r\n  return JSON.parse(sessionStorage.getItem(sessionStorageKey(version)))\r\n}\r\n\r\nexport function storeChain(chainInfo){\r\n  sessionStorage.setItem('current-chain',JSON.stringify(chainInfo))\r\n}\r\nexport function restoreChain(){\r\n  return JSON.parse(sessionStorage.getItem('current-chain')) || {code : ''};\r\n}\r\n\r\nexport function storeLocale(locale){\r\n  sessionStorage.setItem('current-locale',locale)\r\n}\r\n\r\nexport function restoreLocale(){\r\n  return sessionStorage.getItem('current-locale')\r\n}\r\n\r\nexport function addParam(param,value,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  if(url.searchParams.has(param)){\r\n    url.searchParams.set(param,value);\r\n  } else {\r\n    url.searchParams.append(param,value);\r\n  }\r\n  return  url.toString();\r\n}\r\n\r\nexport function hasParam(param,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  return url.searchParams.has(param);\r\n}\r\n\r\nexport function getParam(param,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  return url.searchParams.get(param);\r\n}\r\n\r\nexport function getFormatSymbol(symbol){\r\n  const curChain = restoreChain();\r\n  if(type.isOption){\r\n    if(symbol.indexOf('-MARKPRICE') !== -1) {\r\n      symbol = symbol.substr(0,symbol.indexOf('-MARKPRICE'))\r\n    } else {\r\n      symbol = symbol.split('-')[0]\r\n    }\r\n  }\r\n  return version.isV2 || version.isV2Lite || type.isOption || version.current === 'v2_lite_open' ? `${symbol}_V2_${curChain ? curChain.code.toUpperCase() : 'BSC'}` : symbol\r\n}\r\n\r\nexport function equalIgnoreCase(str1,str2){\r\n  return str1 && str1.toUpperCase() === str2 && str2.toUpperCase()\r\n}\r\n\r\nexport function stripSymbol(symbol){\r\n  if(!symbol){\r\n    return symbol;\r\n  }\r\n  if(/-/.test(symbol)){\r\n    symbol = symbol.split('-')[0]\r\n  }\r\n  return symbol\r\n}\r\n\r\n\r\nexport const  secondsInRange = {\r\n  '1' : 60,\r\n  '5' : 300,\r\n  '15' : 900,\r\n  '30' : 1800,\r\n  '60' : 3600,\r\n  '1D' : 3600 * 24,\r\n  '1W' : 3600 * 24 * 7\r\n}\r\nexport const intervalRange = {\r\n  '1' : 'min',\r\n  '5' : '5min',\r\n  '15' : '15min',\r\n  '30' : '30min',\r\n  '60' : 'hour',\r\n  '1D' : 'day',\r\n  '1W' : 'week'\r\n}\r\n\r\n \r\nexport function calcRange(interval){\r\n  const timestamp = new Date().getTime() /1000 ;\r\n  let from,to;\r\n  if(interval !== '1W') {\r\n    to = Math.floor(timestamp / secondsInRange[interval] ) * secondsInRange[interval]\r\n    from  = to - secondsInRange[interval] * 200\r\n  } else {\r\n    to = Math.floor((timestamp - 345600) /secondsInRange[interval]) * secondsInRange[interval] + 345600\r\n    from = to - secondsInRange[interval] * 200\r\n  }\r\n  return [from,to]\r\n \r\n}\r\n\r\nexport function groupByNetwork(pools){\r\n  const all = []\r\n  pools.reduce((total, pool) => {\r\n    const find = total.find(item => eqInNumber(item['pool']['address'], pool['address']))\r\n    if (find && find.list.length < 5) {\r\n      find['list'].push(pool)\r\n    } else {\r\n      const poolInfo = {\r\n        pool: {\r\n          network: pool.network,\r\n          symbol: pool.symbol,\r\n          address: pool.address,\r\n          formatAdd: pool.formatAdd,\r\n          version: pool.version,\r\n          // innoDisplay : pool.version=== 'v2_lite' ? Intl.get('mining','v2_lite') : pool.version,\r\n          chainId: pool.chainId,\r\n          airdrop: pool.airdrop,\r\n          type: pool.type,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          bTokenId: pool.bTokenId,\r\n          symbolId: pool.symbolId\r\n        },\r\n        list: [pool]\r\n      }\r\n      total.push(poolInfo)\r\n    }\r\n    return total;\r\n  }, all)\r\n  return all;\r\n}\r\n\r\nexport function combineSymbolfromPoolConfig(configs){\r\n  return configs.reduce((total,config) => {\r\n    const pos = total.findIndex(item => item.chainId === config.chainId && (item.pool === config.pool) && config.version === item.version)\r\n    if((config.version === 'v2' || config.version === 'v2_lite' || config.version === 'option' || config.version === 'v2_lite_open' || config.version === 'v2_lite_dpmm')  \r\n        && pos > -1) {\r\n      if(total[pos].symbol.indexOf(config.symbol) === -1){\r\n        total[pos].symbol += `,${config.symbol}` \r\n      } else if(total.findIndex(item => item.bTokenSymbol === config.bTokenSymbol) === -1) {\r\n        total.push(config)\r\n      }\r\n    } else{\r\n      total.push(config)\r\n    }\r\n    return total;\r\n  },[]);\r\n}\r\n\r\nexport async function mapPoolInfo(config,wallet,chainInfo){\r\n  // const liqPool = await getPoolLiquidity(config.chainId,config.pool,config.bTokenId) || {}\r\n  // const apyPool = await getPoolInfoApy(config.chainId,config.pool,config.bTokenId) || {}\r\n  const pool = config.pool || ''\r\n  const item = { \r\n    network : chainInfo[config.chainId] && chainInfo[config.chainId].name,\r\n    // liquidity : liqPool.liquidity,\r\n    // apy :  ((+apyPool.apy) * 100).toFixed(2),\r\n    formatAdd : formatAddress(pool),\r\n    address : pool,\r\n    type : 'perpetual',\r\n    buttonText : 'STAKING',\r\n    multiplier : 1\r\n  }\r\n  // if(wallet && wallet.isConnected()){\r\n  //   const info = await getLiquidityInfo(config.chainId,config.pool,wallet.detail.account,config.bTokenId).catch(e => console.log(e));\r\n  //   const claimInfo = await getUserInfoAll(wallet.detail.account);\r\n  //   if(info){\r\n  //     item['pnl'] = info.pnl\r\n  //   }\r\n  //   if(claimInfo){\r\n  //     item['claimed'] = claimInfo.total;\r\n  //     item['unclaimed'] = claimInfo.amount\r\n  //   }\r\n  // }\r\n\r\n  return Object.assign(config,item)\r\n}\r\n\r\n\r\n\r\n","var map = {\n\t\"./de/Signin.json\": 565,\n\t\"./de/bridge.json\": 566,\n\t\"./de/broker.json\": 567,\n\t\"./de/dip-history-two.json\": 568,\n\t\"./de/dip-history.json\": 569,\n\t\"./de/dip-two.json\": 570,\n\t\"./de/faucet.json\": 571,\n\t\"./de/footer.json\": 572,\n\t\"./de/governance.json\": 573,\n\t\"./de/header.json\": 574,\n\t\"./de/home.json\": 575,\n\t\"./de/lite.json\": 576,\n\t\"./de/mining.json\": 577,\n\t\"./de/mobile-lite.json\": 578,\n\t\"./de/nuls.json\": 579,\n\t\"./de/permission.json\": 580,\n\t\"./de/pro.json\": 581,\n\t\"./de/team.json\": 582,\n\t\"./de/trading-mining.json\": 583,\n\t\"./en/Signin.json\": 584,\n\t\"./en/bridge.json\": 585,\n\t\"./en/broker.json\": 586,\n\t\"./en/dip-history-two.json\": 587,\n\t\"./en/dip-history.json\": 588,\n\t\"./en/dip-two.json\": 589,\n\t\"./en/faucet.json\": 590,\n\t\"./en/footer.json\": 591,\n\t\"./en/governance.json\": 592,\n\t\"./en/header.json\": 593,\n\t\"./en/home.json\": 594,\n\t\"./en/lite.json\": 595,\n\t\"./en/mining.json\": 596,\n\t\"./en/mobile-lite.json\": 597,\n\t\"./en/nuls.json\": 598,\n\t\"./en/permission.json\": 599,\n\t\"./en/pro.json\": 600,\n\t\"./en/team.json\": 601,\n\t\"./en/trading-mining.json\": 602,\n\t\"./fr/Signin.json\": 603,\n\t\"./fr/bridge.json\": 604,\n\t\"./fr/broker.json\": 605,\n\t\"./fr/dip-history-two.json\": 606,\n\t\"./fr/dip-history.json\": 607,\n\t\"./fr/dip-two.json\": 608,\n\t\"./fr/faucet.json\": 609,\n\t\"./fr/footer.json\": 610,\n\t\"./fr/governance.json\": 611,\n\t\"./fr/header.json\": 612,\n\t\"./fr/home.json\": 613,\n\t\"./fr/lite.json\": 614,\n\t\"./fr/mining.json\": 615,\n\t\"./fr/mobile-lite.json\": 616,\n\t\"./fr/nuls.json\": 617,\n\t\"./fr/permission.json\": 618,\n\t\"./fr/pro.json\": 619,\n\t\"./fr/team.json\": 620,\n\t\"./fr/trading-mining.json\": 621,\n\t\"./zh/Signin.json\": 622,\n\t\"./zh/bridge.json\": 623,\n\t\"./zh/broker.json\": 624,\n\t\"./zh/dip-history-two.json\": 625,\n\t\"./zh/dip-history.json\": 626,\n\t\"./zh/dip-two.json\": 627,\n\t\"./zh/faucet.json\": 628,\n\t\"./zh/footer.json\": 629,\n\t\"./zh/governance.json\": 630,\n\t\"./zh/header.json\": 631,\n\t\"./zh/home.json\": 632,\n\t\"./zh/lite.json\": 633,\n\t\"./zh/mining.json\": 634,\n\t\"./zh/mobile-lite.json\": 635,\n\t\"./zh/nuls.json\": 636,\n\t\"./zh/permission.json\": 637,\n\t\"./zh/pro.json\": 638,\n\t\"./zh/team.json\": 639,\n\t\"./zh/trading-mining.json\": 640\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 564;","import withModal from \"../hoc/withModal\"\r\nimport './loading.less'\r\n\r\nexport default withModal(() => (<div className='loading-mask'>\r\n  <div className=\"snippet\" data-title=\".dot-pulse\">\r\n      <div className=\"stage\">\r\n        <div className=\"dot-pulse\"></div>\r\n      </div>\r\n    </div>\r\n</div>))\r\n","import React, { useState, useEffect } from 'react'\r\nimport {isBrowser,isMobile,deviceDetect} from 'react-device-detect'\r\nimport LoadableComponent from './utils/LoadableComponent';\r\nimport { inject, observer } from 'mobx-react';\r\nimport LoadingMask from './components/Loading/LoadingMask';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport type from './model/Type'\r\nconst DesktopApp = LoadableComponent(() => import('./desktop/index'))\r\nconst MobileApp = LoadableComponent(() => import('./mobile/index'))\r\nconst getIsDesktop = () => window.screen.width > 1024;\r\nfunction Mask({loading}){\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  useEffect(() => {\r\n    setIsOpen(loading.isShowMask)\r\n    return () => {\r\n    }\r\n  }, [loading.isShowMask])\r\n  return <LoadingMask modalIsOpen={isOpen} overlay={{background : 'none',top : '80px'}}/>\r\n}\r\n\r\nconst MaskWrapper = inject('loading')(observer(Mask))\r\n\r\nfunction App({intl,loading}) {\r\n  const [isDesktop, setIsDesktop] = useState(getIsDesktop())\r\n  const isOptionsLite = useRouteMatch('/options/lite') ? true : false\r\n  const isOptionsPro = useRouteMatch('/options/pro') ? true : false\r\n  const isOption = isOptionsLite || isOptionsPro\r\n  const catagory = isOption ? 'option' : 'future'\r\n  type.setCurrent(catagory)\r\n\r\n  // useEffect(() => {\r\n  //   const onResize = () => {\r\n  //     if(getIsDesktop() !== isDesktop){\r\n  //       window.location.reload()\r\n  //     }\r\n  //   }\r\n  //   window.addEventListener(\"resize\", onResize);\r\n  //   return () => window.removeEventListener(\"resize\", onResize)\r\n  // },[]);\r\n  if(isBrowser){\r\n    return <><MaskWrapper/><DesktopApp locale={intl.locale}></DesktopApp></>\r\n  } else {\r\n    return <><MaskWrapper/><MobileApp locale={intl.locale}><Mask loading={loading}/></MobileApp></>\r\n  }\r\n}\r\n\r\nexport default inject('intl','loading')(observer(App)) ;\r\n","\r\nimport {getUserWalletBalance ,DeriEnv,connectWallet, isUnlocked,openConfigListCache, unlock } from \"../lib/web3js/indexV2\";\r\nimport config from '../config.json'\r\nimport { formatBalance, eqInNumber, storeChain } from \"../utils/utils\";\r\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\r\nimport version from './Version'\r\n\r\nclass Wallet {\r\n  \r\n  detail = {}\r\n  \r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      detail : observable,\r\n      setDetail : action,\r\n      supportV2 : computed,\r\n      supportV1 : computed,\r\n      supportAllVersion : computed,\r\n      supportChain : computed,\r\n      supportInnocation : computed,\r\n      supportOpen : computed\r\n    })\r\n  }\r\n\r\n  supportWeb3 = () => !!window.ethereum\r\n\r\n  isConnected = () => !!this.detail.account;\r\n\r\n\r\n  async isApproved(pool,bTokenId){\r\n    if(this.detail.chainId && this.supportChain){\r\n      if(version.isOpen){\r\n        await openConfigListCache.update()\r\n      }\r\n      const isApproved = await isUnlocked(this.detail.chainId,pool,this.detail.account,bTokenId).catch(e => console.error('load approve error'))\r\n      this.detail.isApproved = isApproved;\r\n      this.setDetail(this.detail)\r\n      return isApproved;\r\n    }\r\n  }\r\n\r\n  approve = async (pool,bTokenId) => {\r\n    if(this.detail.chainId){\r\n      const approved = await unlock(this.detail.chainId,pool,this.detail.account,bTokenId);\r\n      return approved\r\n    }\r\n  }\r\n\r\n  connect =  async () => {\r\n    const res = await connectWallet();\r\n    return new Promise(async (resolve,reject) => {\r\n      if(res.success){\r\n        const {chainId,account} = res\r\n        const wallet = await this.loadWalletBalance(chainId,account);      \r\n        resolve(wallet)\r\n      } else {\r\n        reject(null)\r\n      }\r\n    })\r\n  }\r\n\r\n  switchNetwork = async (network) => {\r\n    if(!this.isConnected()){\r\n      this.connect();\r\n    }\r\n    const chainInfo = config[DeriEnv.get()]['chainInfo']\r\n    const chainId =`0x${(parseInt(network.id)).toString(16)}`\r\n    network = chainInfo[parseInt(network.id)]\r\n    try {\r\n      await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId}],\r\n      });\r\n    } catch (error) {\r\n      // alert('err' + JSON.stringify(error))\r\n      if (error.code === 4902) {\r\n        try {\r\n          await window.ethereum.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [{chainId,...network.metamask}],\r\n          });\r\n        } catch (addError) {\r\n          console.error('err' ,addError)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  loadWalletBalance = async (chainId,account) => {\r\n    if(version.isOpen){\r\n      await openConfigListCache.update()\r\n    }\r\n    const balance = await getUserWalletBalance(chainId,account).catch(e => console.log('wallet account is not exist'))\r\n    const detail = {chainId,account,balance,formatBalance : formatBalance(balance)}\r\n    const env = DeriEnv.get();\r\n    const {chainInfo} = config[env]\r\n    \r\n    if(chainInfo[chainId]){\r\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\r\n      storeChain(chainInfo[chainId])\r\n    }\r\n    this.setDetail(detail)\r\n    return detail;\r\n  }\r\n\r\n  get = () => {\r\n    return this.detail;\r\n  }\r\n\r\n  setDetail(detail){\r\n    this.detail = detail;\r\n  }\r\n\r\n  refresh(){\r\n    this.loadWalletBalance(this.detail.chainId,this.detail.account);\r\n  }\r\n\r\n  isSupportChain(isOptions){\r\n    const chainId = this.detail.chainId\r\n    const env = DeriEnv.get();\r\n    const {chainInfo} = config[env]\r\n    if(isOptions){\r\n      return chainInfo[chainId] && chainInfo[chainId]['supportOptions']\r\n    } else {\r\n      return this.supportChain\r\n    }\r\n  }\r\n\r\n  get supportV2() {\r\n    return this.detail.supportV2\r\n  }\r\n\r\n  get supportV1(){\r\n    return this.detail.supportV1;\r\n  }\r\n\r\n  get supportAllVersion(){\r\n    return this.detail.supportV1 && this.detail.supportV2\r\n  }\r\n\r\n  get supportChain(){\r\n    return this.detail.supported\r\n  }\r\n\r\n  get supportInnovation(){\r\n    return this.detail.supportInnovation\r\n  }\r\n\r\n  get supportOpen(){\r\n    return this.detail.supportOpen\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\r\nimport { equalIgnoreCase } from \"../utils/utils\";\r\nimport webSocket from \"./WebSocket\";\r\n\r\nclass Oracle {\r\n  symbol = 'BTCUSD'\r\n  timeType = 'min'\r\n  index = 0.00\r\n  kData = []\r\n  ws = null\r\n  paused = false;\r\n  listeners = {}\r\n  already = false\r\n\r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      index : observable,\r\n      kData : observable,\r\n      setIndex : action,\r\n    })\r\n  }\r\n\r\n  load(symbol,timeType = 'min'){\r\n    webSocket.subscribe('get_kline_update',{symbol,time_type : 'min'},data => {\r\n      if(!this.paused && equalIgnoreCase(symbol,data.symbol)) {\r\n        this.setIndex(data.close)\r\n        for(const key of Object.keys(this.listeners)){\r\n          if(typeof this.listeners[key] === 'function'){\r\n            this.listeners[key](data)\r\n          }\r\n        }\r\n      }\r\n    })\r\n    if(symbol !== this.symbol){\r\n      this.unsubscribeBars(this.symbol)\r\n    }\r\n    this.setSymbol(symbol)\r\n    this.setTimeType(timeType);\r\n    this.already = true\r\n  }\r\n\r\n  addListener(id,listener){\r\n    if(!this.listeners[id]) {\r\n      this.listeners[id] = listener\r\n    }    \r\n  }\r\n\r\n  unsubscribeBars(symbol){\r\n    webSocket.unsubscribe('un_get_kline',{symbol : symbol,time_type : 'min'});\r\n  }\r\n\r\n\r\n  resume(){\r\n    this.setPause(false)\r\n  }\r\n\r\n  pause(){\r\n    this.setPause(true)\r\n  }\r\n\r\n  clean(){\r\n    this.unsubscribeBars(this.symbol);\r\n  }\r\n\r\n  setIndex(index){\r\n    if(!this.paused) {\r\n      this.index = index;\r\n    }\r\n  }\r\n\r\n  setSymbol(symbol){\r\n    this.symbol = symbol\r\n  }\r\n\r\n  setTimeType(timeType){\r\n    this.timeType = timeType;\r\n  }\r\n  setPause(paused){\r\n    this.paused = paused\r\n  }\r\n}\r\n\r\nexport default Oracle","import { getPositionInfo ,bg,getPositionInfos} from \"../lib/web3js/indexV2\"\r\nimport { eqInNumber } from '../utils/utils';\r\nimport type from \"./Type\";\r\n\r\nexport default class Position {\r\n\r\n   callback = () => {}\r\n   callbackALL = ()=>{}\r\n   wallet = null;\r\n   spec = null\r\n   counter = 0\r\n \r\n   mockPositionInfo = {\r\n    averageEntryPrice: \"\",\r\n    liquidationPrice: \"\",\r\n    margin: \"20000\",\r\n    marginHeld: \"10068.26538\",\r\n    marginHeldBySymbol : \"293.16152\",\r\n    unrealizedPnl: \"3.1311\",\r\n    volume: \"800\",\r\n    premiumFundingAccrued:'',\r\n    deltaFundingAccrued:'',\r\n    strikePrice:0,\r\n    timePrice:0,\r\n    volatility:0,\r\n    isCall:false,\r\n   }\r\n\r\n   async load(wallet,spec,callback){\r\n     this.wallet= wallet; \r\n     this.spec = spec\r\n     if(callback){\r\n      this.callback = callback\r\n     }\r\n     if(wallet && wallet.isConnected() && wallet.isSupportChain(type.isOption) && spec && spec.pool){\r\n      const position = await getPositionInfo(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\r\n      if(position){\r\n        if(this.callback){\r\n          this.callback(position)\r\n        }\r\n      }\r\n      return position;\r\n     }\r\n   }\r\n\r\n   async loadAll(wallet,spec,callback){\r\n    this.wallet= wallet; \r\n    this.spec = spec\r\n    if(callback){\r\n     this.callbackALL = callback\r\n    }\r\n    if(wallet && wallet.isConnected() && wallet.isSupportChain(type.isOption) && spec && spec.pool){\r\n      let res  = await getPositionInfos(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\r\n      let positions = [] \r\n      if(res.length) {\r\n        positions = res.map(item => {\r\n          item.balanceContract = bg(item.margin).plus(item.unrealizedPnl).toString()\r\n          item.direction = (+item.volume) > 0 ? 'LONG' : (!item.volume || eqInNumber(item.volume, 0) || !item.volume ? '--' : 'SHORT')\r\n          return item\r\n        })\r\n      }\r\n      if(positions){\r\n        if(this.callbackALL){\r\n          this.callbackALL(positions)\r\n        }\r\n      }\r\n      return positions;\r\n    }\r\n   } \r\n\r\n   startAll(){\r\n    this.paused = false;\r\n    if(!this.started){\r\n      this.runInAction(async () => await this.loadAll(this.wallet,this.spec))\r\n    }\r\n    this.started = true\r\n  }\r\n\r\n   start(){   \r\n    this.paused = false;\r\n    if(!this.startedAll){\r\n      this.runInAction(async () => await this.load(this.wallet,this.spec))\r\n    }\r\n    this.startedAll = true\r\n   }\r\n\r\n   runInAction(action){\r\n    this.timer = window.setTimeout(async () => {\r\n      if(!this.paused){\r\n        const position = await action();\r\n        if(position) {\r\n          this.runInAction(action);\r\n        }\r\n      }\r\n    },3000)\r\n   }\r\n\r\n   pause(){\r\n    this.paused = true\r\n   }\r\n\r\n   resume(){\r\n    this.clean();\r\n    this.start(this.callback)\r\n   }\r\n\r\n   clean(){\r\n     this.started = false;\r\n     this.startedAll = false;\r\n     this.paused = false;\r\n     this.timer = null;\r\n   }\r\n \r\n}","import { getSpecification } from \"../lib/web3js/indexV2\";\r\nimport { makeObservable, observable, action, computed } from \"mobx\";\r\nimport Intl from \"./Intl\";\r\nimport version from \"./Version\";\r\nimport type from \"./Type\";\r\n\r\nexport default class Contract {\r\n  info = {\r\n    bTokenSymbol:[\"BUSD\"],\r\n    symbol:'BTCUSD',\r\n    multiplier:'0.0001',\r\n    fundingRateCoefficient:'0.0000025',\r\n    deltaFundingCoefficient:'0.2',\r\n    minInitialMarginRatio:0.1,\r\n    initialMarginRatio:0.1,\r\n    minMaintenanceMarginRatio:0.05,\r\n    maintenanceMarginRatio:0.05,\r\n    feeRatio:0.0005,\r\n    underlier :'',\r\n    strike:0,\r\n    optionType:'C',\r\n    bTokenSymbolDisplay : ['BUSD']\r\n  }\r\n  // constructor(){\r\n  //   makeObservable(this,{\r\n  //     info : observable,\r\n  //     setInfo : action,\r\n  //     bTokenSymbolDisplay : computed\r\n  //   })\r\n  // }\r\n\r\n  async load(wallet,config){\r\n    if(wallet && wallet.supportChain && config && config.pool !== this.info.pool){\r\n      const spec = await getSpecification(wallet.detail.chainId,config.pool,config.symbolId);\r\n      spec.bTokenSymbol = this.bTokenSymbolDisplay(spec)\r\n      if(type.isOption){\r\n        spec.underlier = this.getUnderlierStrike(spec).underlier\r\n        spec.strike = this.getUnderlierStrike(spec).strike\r\n        spec.optionType = this.getUnderlierStrike(spec).optionType\r\n      }\r\n      this.setInfo(spec)\r\n    }\r\n    return this.info\r\n  }\r\n\r\n  setInfo(info){\r\n    this.info = info\r\n  }\r\n\r\n  getUnderlierStrike(spec){\r\n    let underlier = spec.symbol.split('-')[0]\r\n    let strike = spec.symbol.split('-')[1]\r\n    let optionType = spec.symbol.split('-')[2]\r\n    return {\r\n      underlier:underlier,\r\n      strike:strike,\r\n      optionType:optionType\r\n    }\r\n  }\r\n\r\n  bTokenSymbolDisplay(spec){\r\n    if(version.isV1 || version.isV2Lite || type.isOption || version.isOpen){\r\n      return [spec.bTokenSymbol];\r\n    }\r\n    return spec.bTokenSymbol;\r\n  }\r\n}","import { getTradeHistory } from \"../lib/web3js/indexV2\";\r\n\r\n\r\nexport default class History {\r\n\r\n   async load(wallet,config,isOptions){\r\n      if(wallet && wallet.isSupportChain(isOptions) && wallet.detail.chainId && config && config.pool){\r\n         const all = await getTradeHistory(wallet.detail.chainId,config.pool,wallet.detail.account,config.symbolId); \r\n         return all;\r\n      } else {\r\n         return []\r\n      }\r\n   }\r\n}","import { makeObservable, observable, action, computed } from \"mobx\";\r\n\r\nclass Loading {\r\n  isLoading = false\r\n  constructor(){\r\n    makeObservable(this,{\r\n      isLoading : observable,\r\n      setIsLoading : action,\r\n      loading : action,\r\n      isShowMask : computed\r\n    })\r\n  }\r\n\r\n  setIsLoading(isLoading){\r\n    this.isLoading = isLoading\r\n  }\r\n\r\n  loading(){\r\n    this.setIsLoading(true)\r\n  }\r\n\r\n  loaded(){\r\n    this.setIsLoading(false)\r\n  }\r\n\r\n  get isShowMask(){\r\n    return this.isLoading === true;\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default new Loading();","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {HashRouter} from 'react-router-dom'\r\nimport App from './App';\r\nimport './assets/deri.less';\r\nimport { Provider } from 'mobx-react';\r\nimport Wallet from './model/Wallet';\r\nimport Trading from './model/Trading';\r\nimport { DeriEnv } from './lib/web3js/indexV2';\r\nimport version from './model/Version';\r\nimport intl from './model/Intl';\r\nimport loading from './model/Loading';\r\nimport   type from './model/Type';\r\n\r\nconst wallet = new Wallet();\r\nconst trading = new Trading()\r\n\r\nif(process.env.NODE_ENV === 'production') {\r\n  DeriEnv.set('prod')\r\n}\r\nDeriEnv.set('testnet')\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider wallet={wallet} type={type}  trading={trading} version={version} intl={intl} loading={loading}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","import { observable, action, computed, makeObservable } from \"mobx\";\r\nimport Oracle from \"./Oracle\";\r\nimport Position from \"./Position\";\r\nimport Contract from \"./Contract\";\r\nimport History from './History'\r\nimport Config from \"./Config\";\r\nimport { eqInNumber, storeConfig, getConfigFromStore, restoreChain, getFormatSymbol } from \"../utils/utils\";\r\nimport { getFundingRate, priceCache } from \"../lib/web3js/indexV2\";\r\nimport { bg } from \"../lib/web3js/indexV2\";\r\nimport Intl from \"./Intl\";\r\nimport version from './Version'\r\nimport type from './Type'\r\nimport Type from \"./Type\";\r\n\r\n/**\r\n * 交易模型\r\n * 关联对象\r\n * 1. chain\r\n * 2. Oracle\r\n * 3. position\r\n * 4. contract\r\n * 5. history\r\n * 计算\r\n * 1. dynamic balance\r\n * 2. available blance\r\n * 响应事件\r\n * 1. chain change\r\n * 2. chain’s symbol changed\r\n * 3. index update\r\n * 4. volum change\r\n * 5. margin change\r\n * 输出\r\n * 1. dynamic balance\r\n * 2. margin\r\n * 3. available balance\r\n * 4. volume\r\n * 5. specs\r\n * 6. spec\r\n * 7. position\r\n * 8. contract\r\n * 9. fundingRate\r\n */\r\n\r\nexport default class Trading {\r\n  version = null;\r\n  wallet = null;\r\n  type = null;\r\n  configs = [] \r\n  config = null;\r\n  index = ''\r\n  volume = ''\r\n  paused = false\r\n  slideIncrementMargin = 0\r\n  position = {}\r\n  positions = []\r\n  contract = {}\r\n  fundingRate = {}\r\n  history = []\r\n  userSelectedDirection = 'long'\r\n  supportChain = true\r\n  optionsConfigs = {}\r\n\r\n  constructor(){\r\n    makeObservable(this,{\r\n      index : observable,\r\n      volume : observable,\r\n      slideIncrementMargin : observable,\r\n      fundingRate : observable,\r\n      position : observable,\r\n      positions : observable,\r\n      history : observable,\r\n      contract : observable,\r\n      userSelectedDirection : observable,\r\n      supportChain : observable,\r\n      setWallet :action,\r\n      setConfigs : action,\r\n      setOptionConfigs : action,\r\n      setConfig : action,\r\n      setIndex : action,\r\n      setContract : action,\r\n      setPosition : action,\r\n      setPositions : action,\r\n      setVolume : action,\r\n      setUserSelectedDirection : action,\r\n      // setSupportChain : action,\r\n      setFundingRate : action,\r\n      setHistory : action,\r\n      setSlideMargin : action,\r\n      amount : computed,\r\n      fundingRateTip : computed,\r\n      optionFundingRateTip : computed,\r\n      initialMarginRatioTip : computed,\r\n      maintenanceMarginRatioTip : computed,\r\n      TransactionFeeTip : computed,\r\n      dpmmFundingRateTip :computed,\r\n      fundingCoefficientTip :computed,\r\n      rateTip:computed,\r\n      multiplierTip : computed,\r\n      TotalNetPositionTip:computed,\r\n      direction : computed,\r\n      volumeDisplay : computed,\r\n      isNegative : computed,\r\n      isPositive : computed\r\n    })\r\n    this.configInfo = new Config();\r\n    this.oracle = new Oracle();\r\n    this.positionInfo = new Position()\r\n    this.contractInfo = new Contract();\r\n    this.historyInfo = new History()\r\n  }\r\n\r\n  /**\r\n   * 初始化\r\n   * wallet and version changed will init\r\n   */\r\n  async init(wallet,finishedCallback){  \r\n    const isOption = Type.isOption\r\n    const all = await this.configInfo.load(version,isOption);\r\n    //如果连上钱包，有可能当前链不支持\r\n    if(wallet.isConnected()){\r\n      this.setWallet(wallet);\r\n      this.setConfigs(all.filter(c => eqInNumber(wallet.detail.chainId,c.chainId)))\r\n      let defaultConfig = this.getDefaultConfig(this.configs,wallet);\r\n      //如果还是为空，则默认用所有config的第一条\r\n      if(!defaultConfig){\r\n        defaultConfig = all.length > 0 ? all[0] : {}\r\n      }\r\n      this.setConfig(defaultConfig);\r\n      //如果没有钱包或者链接的链不一致，设置默认config，BTCUSD\r\n    } else if(!wallet.isConnected() || !wallet.supportWeb3()){\r\n      //没有钱包插件\r\n      version.setCurrent('v2')\r\n      const all = await this.configInfo.load(version,isOption);\r\n      const defaultConfig = all.find(c => c.symbol === 'BTCUSD')\r\n      this.setConfig(defaultConfig)\r\n    }\r\n    this.loadByConfig(this.wallet,this.config,true,finishedCallback,isOption)\r\n    this.setVolume('')\r\n  }\r\n\r\n  async onSymbolChange(spec,finishedCallback,isOption){\r\n    const config = this.configs.find(config => config.pool === spec.pool && config.symbolId === spec.symbolId)\r\n    //v1 只需要比较池子地址，v2 需要比较symbolId\r\n    const changed = version.isV1 ? spec.pool !== this.config.pool : spec.symbolId !== this.config.symbolId\r\n    this.onChange(config,changed,finishedCallback,isOption)\r\n  }\r\n\r\n  async onChange(config,changed,finishedCallback,isOption){\r\n    if(config){\r\n      this.pause();\r\n      this.setConfig(config)\r\n      this.loadByConfig(this.wallet,config,changed,finishedCallback,isOption);  \r\n      if(changed){\r\n        this.store(config)\r\n      }    \r\n      this.resume()\r\n      this.setVolume('')\r\n    } else{\r\n      finishedCallback && finishedCallback()\r\n    }\r\n  }\r\n\r\n  async loadByConfig(wallet,config,symbolChanged,finishedCallback,isOption){\r\n     //切换指数\r\n    if(symbolChanged && config){\r\n      this.oracle.addListener('trading',data => {\r\n        this.setIndex(data.close)\r\n      })\r\n    }\r\n    if(wallet && wallet.isConnected && config){\r\n      Promise.all([\r\n        this.positionInfo.load(wallet,config,(position) => {\r\n          this.setPosition(position)\r\n          this.syncFundingRate(wallet,config,isOption)\r\n        }),\r\n        this.contractInfo.load(wallet,config,isOption),\r\n        this.loadFundingRate(wallet,config,isOption),\r\n        this.historyInfo.load(wallet,config,isOption),\r\n        this.positionInfo.loadAll(wallet,config,positions => this.setPositions(positions)),\r\n      ]).then(results => {\r\n        if(results.length === 5){\r\n          results[0] && this.setIndex(results[0].price) && this.setPosition(results[0]);\r\n          results[1] && this.setContract(results[1]);\r\n          results[2] && this.setFundingRate(results[2]);\r\n          results[3] && this.setHistory(results[3]);\r\n          results[4] && this.setPositions(results[4]);\r\n          // this.refreshCache();\r\n        } \r\n      }).finally(e => {\r\n        finishedCallback && finishedCallback()\r\n        this.oracle.load(getFormatSymbol(config.symbol))\r\n        this.positionInfo.start()\r\n        this.positionInfo.startAll();\r\n      })\r\n    } else {\r\n      finishedCallback && finishedCallback()\r\n    }\r\n  }\r\n\r\n  refreshCache(){\r\n    const {pool} = this.config;\r\n    const symbol = type.isOption ? this.config.symbol.split('-')[0] : this.config.symbol\r\n    priceCache.clear();\r\n    priceCache.update(pool,symbol)\r\n  }\r\n\r\n\r\n  //优先使用session storage 的，如果缓存跟用户当前链一直，则命中缓存，否则取当前配置第一条\r\n  getDefaultConfig(configs = [],wallet){\r\n    let defaultConfig = null;\r\n    if(configs.length > 0){    \r\n      const fromStore = this.getFromStore();\r\n      if(fromStore && eqInNumber(wallet.detail.chainId,fromStore.chainId)){\r\n        defaultConfig = fromStore;\r\n      }\r\n      if(defaultConfig){\r\n        //虽然从缓存获得config ，需要判断池子地址是否一致，否则用可用config的第一条\r\n        const pos = configs.findIndex(c => c.pool === defaultConfig.pool);\r\n        if(pos === -1){\r\n          defaultConfig = configs[0];\r\n        }\r\n      } else {\r\n        defaultConfig = configs[0]\r\n      }   \r\n    }\r\n    return defaultConfig;    \r\n  }\r\n \r\n  //存起来\r\n  store(config){\r\n    storeConfig(version.current,config)\r\n  }\r\n\r\n  getFromStore(){\r\n    return getConfigFromStore(version.current)\r\n  }\r\n\r\n  async syncFundingRate(){\r\n    //资金费率和仓位同步\r\n    const fundingRate = await this.loadFundingRate(this.wallet,this.config)   \r\n    if(fundingRate){\r\n      this.setFundingRate(fundingRate)      \r\n    }\r\n  }\r\n\r\n  async refresh(){\r\n    this.pause()\r\n    this.positionInfo.load(this.wallet,this.config, position  => {       \r\n      this.setPosition(position);\r\n      this.syncFundingRate();\r\n    });\r\n    this.positionInfo.loadAll(this.wallet,this.config,positions => this.setPositions(positions))\r\n    this.syncFundingRate();\r\n    this.wallet.loadWalletBalance(this.wallet.detail.chainId,this.wallet.detail.account)\r\n    const history = await this.historyInfo.load(this.wallet,this.config)\r\n    if(history){\r\n      this.setHistory(history)\r\n    }\r\n    this.positionInfo.start();\r\n    this.positionInfo.startAll();\r\n    this.setVolume('')\r\n    this.resume();\r\n  }\r\n\r\n  /**\r\n   * 暂停实时读取index和定时读取position\r\n   */\r\n  pause(){\r\n    this.setPaused(true)\r\n    this.oracle.pause();\r\n    this.positionInfo.pause();\r\n  }\r\n\r\n  /**\r\n   * 恢复读取\r\n   */\r\n  resume(){\r\n    this.setPaused(false)\r\n    this.oracle.resume();\r\n    this.positionInfo.resume();\r\n  }\r\n\r\n  setWallet(wallet){\r\n    this.wallet = wallet;\r\n  }\r\n\r\n  setConfigs(configs){\r\n    if(type.isOption){\r\n      this.setOptionConfigs(configs)\r\n    } \r\n    this.configs = configs\r\n  }\r\n\r\n  setOptionConfigs(configs){\r\n    this.optionsConfigs = this.groupConfigBySymbol(configs)\r\n  }\r\n\r\n  groupConfigBySymbol(configs = []){\r\n    return configs.reduce((total,config) => {\r\n      const symbol = config.symbol.split('-')[0]\r\n      if(!total[symbol]){\r\n        total[symbol] = []\r\n      }\r\n      total[symbol].push(config)\r\n      return total;\r\n    },[])\r\n  }\r\n\r\n  setConfig(config){\r\n    this.config = config\r\n  }\r\n\r\n  setIndex(index){\r\n    this.index = index;\r\n  }\r\n\r\n  setPosition(position){\r\n    if(position){\r\n      this.position = position\r\n    }\r\n  }\r\n\r\n  setPositions(positions){\r\n    if(positions){\r\n      this.positions = positions\r\n    }\r\n  }\r\n\r\n  setContract(contract){\r\n    this.contract = contract\r\n  }\r\n\r\n  setHistory(history){\r\n    this.history = history\r\n  }\r\n\r\n  setFundingRate(fundingRate){\r\n    this.fundingRate = fundingRate;\r\n  }\r\n\r\n  setVolume(volume){\r\n    this.volume = volume;\r\n  }\r\n\r\n  setPaused(paused){\r\n    this.paused = paused\r\n  }\r\n\r\n  setUserSelectedDirection(direction){\r\n    this.userSelectedDirection = direction\r\n  }\r\n\r\n  setSlideMargin(slideIncrementMargin){\r\n    if(slideIncrementMargin !== ''){\r\n      this.slideIncrementMargin =  slideIncrementMargin\r\n      const position = this.position;\r\n      const price = position.price || this.index\r\n      const increment = slideIncrementMargin - position.marginHeld\r\n      let MarginRatio = type.isOption ? this.contract.initialMarginRatio : this.contract.minInitialMarginRatio;\r\n      let volume =  increment / (price * this.contract.multiplier * MarginRatio);\r\n      // if(type.isOption){\r\n        volume = +volume * +this.contract.multiplier\r\n        let index = this.contract.multiplier.indexOf('.')\r\n        let num = this.contract.multiplier.slice(index);\r\n        let length = num.length \r\n        let value = volume.toString()\r\n        if(value.indexOf(\".\") !== '-1'){\r\n          value = value.substring(0,value.indexOf(\".\") + length)\r\n        }\r\n        this.setVolume(value)\r\n      // }else{\r\n      //   this.setVolume(volume.toFixed(0))\r\n      // }\r\n    }\r\n  }\r\n\r\n  clean(){\r\n    this.oracle.clean();\r\n    this.positionInfo.clean();\r\n    this.version = null;\r\n    this.configs = [] \r\n    this.config = null;\r\n    this.index = ''\r\n    this.volume = ''\r\n    this.fundingRate = {}\r\n    this.position = {}\r\n    this.positions = []\r\n    this.contract = {}\r\n    this.history = []\r\n    this.userSelectedDirection = 'long'\r\n    this.optionsConfigs = {}\r\n  }\r\n\r\n  get volumeDisplay(){\r\n    if((type.isFuture && Math.abs(this.volume) === 0 && isNaN(this.volume) )|| this.volume === '' || this.volume === '-' || this.volume === 'e') {\r\n      return '';\r\n    } else {\r\n      return Math.abs(this.volume)\r\n    }\r\n  }\r\n  \r\n  get amount(){\r\n    const position = this.position\r\n    const contract = this.contract;\r\n    let initVolume = this.volume === '' || isNaN(this.volume) ? 0 : Math.abs(this.volume)\r\n    // let optionVolume = type.isOption ? (+initVolume / +this.contract.multiplier):initVolume;\r\n    let optionVolume = (+initVolume / +this.contract.multiplier);\r\n    const volume = optionVolume\r\n    let {margin, marginHeldBySymbol:currentSymbolMarginHeld ,marginHeld,unrealizedPnl} = position\r\n    const price = position.price || this.index\r\n    //v2\r\n    let otherMarginHeld = bg(marginHeld).minus(currentSymbolMarginHeld)\r\n    otherMarginHeld = otherMarginHeld.isNaN() ? bg(0) : otherMarginHeld;\r\n    const contractValue = volume * price * contract.multiplier;\r\n    const incrementMarginHeld =  type.isOption ? contractValue * contract.initialMarginRatio : contractValue * contract.minInitialMarginRatio\r\n    let totalMarginHeld = bg(marginHeld) ;\r\n\r\n    //如果当前仓位为正仓用户做空或者当前仓位为负仓用户做多，总仓位相减,取绝对值\r\n    if((this.isPositive && this.userSelectedDirection === 'short') || (this.isNegative && this.userSelectedDirection === 'long')){\r\n      totalMarginHeld = totalMarginHeld.minus(incrementMarginHeld);\r\n      if(totalMarginHeld.lt(otherMarginHeld)){\r\n        totalMarginHeld =  otherMarginHeld.plus(otherMarginHeld.minus(totalMarginHeld).abs())        \r\n      } \r\n      currentSymbolMarginHeld = bg(currentSymbolMarginHeld).minus(incrementMarginHeld).abs().toFixed(2)\r\n    } else {\r\n      totalMarginHeld = bg(marginHeld).plus(incrementMarginHeld)\r\n      if(currentSymbolMarginHeld){\r\n        currentSymbolMarginHeld = bg(currentSymbolMarginHeld).plus(incrementMarginHeld).toFixed(2);\r\n      }\r\n    }\r\n\r\n    const dynBalance = margin && bg(margin).plus(unrealizedPnl).toFixed(2);    \r\n    //总保证金和当前symbol保证金不能超过余额\r\n    totalMarginHeld = totalMarginHeld.gt(dynBalance) ? dynBalance : totalMarginHeld.toFixed(2)\r\n    if(currentSymbolMarginHeld){\r\n      currentSymbolMarginHeld = (+currentSymbolMarginHeld) > (+dynBalance) ? dynBalance : (+currentSymbolMarginHeld).toFixed(2);\r\n    }\r\n    let available = bg(dynBalance).minus(totalMarginHeld).toFixed(2)\r\n    const exchanged = bg(volume).multipliedBy(contract.multiplier).toFixed(4)\r\n    const totalVolume = this.userSelectedDirection === 'short' ? (-this.volumeDisplay + (+position.volume)) : ((+this.volumeDisplay) +  (+position.volume))    \r\n    const totalContractValue = (+totalVolume) * price \r\n    const curContractValue = (+this.volumeDisplay) * price\r\n    const leverage = Math.abs(curContractValue / (+dynBalance)).toFixed(1);\r\n    const afterLeverage = Math.abs((+totalContractValue) / (+dynBalance)).toFixed(1); \r\n    available = (+available) < 0 ? 0 : available\r\n    return {\r\n      volume : this.volume,\r\n      dynBalance : dynBalance,\r\n      margin : totalMarginHeld,\r\n      available : available,\r\n      exchanged : exchanged,\r\n      currentSymbolMarginHeld : currentSymbolMarginHeld,\r\n      leverage : leverage,\r\n      afterLeverage : afterLeverage\r\n    }\r\n  }\r\n\r\n  get direction(){    \r\n    // 正仓\r\n    if(this.margin !== ''){\r\n      if((+this.position.volume) > 0) {\r\n        if(Math.abs(this.volume) > Math.abs(this.position.volume)) {\r\n          return 'long'\r\n        } else {\r\n          return 'short'\r\n        }\r\n      } else if((+this.position.volume) < 0){\r\n        //负仓\r\n        if((+this.volume) > Math.abs(+this.position.volume)){\r\n          return 'short'\r\n        } else {\r\n          return 'long'\r\n        }\r\n      }\r\n    }\r\n    return 0\r\n  }\r\n\r\n  //正仓\r\n  get isPositive(){\r\n    return bg(this.position.volume).gt(0);\r\n  }\r\n\r\n  //负仓\r\n  get isNegative(){\r\n    return bg(this.position.volume).isNegative();\r\n  }\r\n\r\n  //资金费率\r\n  async loadFundingRate(wallet,config,isOption){\r\n    if(config){\r\n      const chainId = wallet && wallet.isConnected() && wallet.isSupportChain(isOption) ? wallet.detail.chainId : config.chainId\r\n      if(config){    \r\n        const res = await getFundingRate(chainId,config.pool,config.symbolId).catch(e => console.error('getFundingRate was error,maybe network is wrong'))\r\n        return res;\r\n      }\r\n    }\r\n  }\r\n\r\n  get fundingRateTip(){    \r\n    if(version && version.isV2){\r\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\r\n        if(Intl.locale === 'zh'){\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n ${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol}`        \r\n        } else {\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')}`        \r\n        }\r\n        \r\n      }\r\n    } else {\r\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\r\n        if(Intl.locale === 'zh'){\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} `        \r\n        } else {\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')})`        \r\n        }        \r\n      }\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get optionFundingRateTip(){\r\n    if(this.fundingRate && this.fundingRate.premiumFundingPerSecond && this.config){\r\n      if(Intl.locale === 'zh'){\r\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\r\n      `\\n ${Intl.get('lite','per-second')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.config.bTokenSymbol} `        \r\n      } else {\r\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\r\n      `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.config.bTokenSymbol} ${Intl.get('lite','per-second')}`        \r\n      }\r\n    }\r\n    return ''\r\n  }\r\n  get dpmmFundingRateTip(){\r\n    if(this.fundingRate && this.fundingRate.fundingPerSecond && this.config){\r\n      if(Intl.locale === 'zh'){\r\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.fundingPerSecond}` +\r\n      `\\n ${Intl.get('lite','per-second')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingPerSecond} ${this.config.bTokenSymbol} `        \r\n      } else {\r\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.fundingPerSecond}` +\r\n      `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingPerSecond} ${this.config.bTokenSymbol} ${Intl.get('lite','per-second')}`        \r\n      }\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get rateTip(){\r\n    if(this.fundingRate && this.fundingRate.funding0 && this.position.markPrice){\r\n      return `${Intl.get('lite','rate-hover-one')} ${bg(this.fundingRate.funding0).div(bg(this.position.markPrice) ).times(bg(100)).toString()}% ${Intl.get('lite','rate-hover-two')}`\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get fundingCoefficientTip(){\r\n    if(this.contract && this.contract.fundingRateCoefficient && this.config.unit){\r\n      return `${Intl.get('lite','funding-coefficient-hove-one')} ${this.config.unit} ${Intl.get('lite','funding-coefficient-hove-two')} ${this.contract.fundingRateCoefficient}\r\n      ${Intl.get('lite','funding-coefficient-hove-three')} ${bg(this.contract.fundingRateCoefficient).times(bg(86400)).toString()} ${Intl.get('lite','per-day')}\r\n      `\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get initialMarginRatioTip(){\r\n    if(this.contract && this.contract.initialMarginRatioOrigin){\r\n      return `${Intl.get('lite','in-the-money-initial')} = ${this.contract.initialMarginRatioOrigin}` +\r\n      `\\n${Intl.get('lite','out-of-money-initial')} = ${Intl.get('lite','in-max')}(${this.contract.initialMarginRatioOrigin}${Intl.get('lite','otm-ratio-initial')} ${this.contract.initialMarginRatioOrigin / 10})` +\r\n      `\\n\\n${Intl.get('lite','otm-ratio-max')}`\r\n    }\r\n    return ''\r\n  }\r\n  get maintenanceMarginRatioTip(){\r\n    if(this.contract && this.contract.maintenanceMarginRatioOrigin){\r\n      return `${Intl.get('lite','in-the-money-maintenance')} = ${this.contract.maintenanceMarginRatioOrigin}` +\r\n      `\\n${Intl.get('lite','out-of-money-maintenance')} = ${Intl.get('lite','in-max')}(${this.contract.maintenanceMarginRatioOrigin}${Intl.get('lite','otm-ratio-maintenance')} ${this.contract.maintenanceMarginRatioOrigin / 10})` +\r\n      `\\n\\n${Intl.get('lite','otm-ratio-max')}`\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get multiplierTip(){\r\n    if(this.contract && this.config){\r\n      return `${Intl.get('lite','the-notional-value-of')} ${this.contract.multiplier}${this.config.unit}`\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get TransactionFeeTip(){\r\n    if(this.contract && (this.contract.feeRatioITM && this.contract.feeRatioOTM)){\r\n        return `${Intl.get('lite','transaction-fee-tip-in-the-money')} ${this.contract.underlier} ${Intl.get('lite','price')}  * ${bg(this.contract.feeRatioITM).times(bg(100)).toString()} %` +\r\n        `\\n ${Intl.get('lite','transaction-fee-tip-out-of-money')} * ${bg(this.contract.feeRatioOTM).times(bg(100)).toString()} %`\r\n    }\r\n    return ''\r\n  }\r\n  get TotalNetPositionTip(){\r\n    if(this.contract && this.fundingRate.tradersNetVolume && this.config){\r\n        return `${Intl.get('lite','notional-of-total-net-position')} ${this.fundingRate.tradersNetVolume} ${this.config.unit}`\r\n    }\r\n    return ''\r\n  }\r\n\r\n}"],"sourceRoot":""}