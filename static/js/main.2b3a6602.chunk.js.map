{"version":3,"sources":["model/Intl.js","utils/LoadableComponent.js","lib/web3js/shared/config/rest_server.js","lib/web3js/shared/config/env.js","lib/web3js/shared/config/constant.js","lib/web3js/shared/config/version.js","lib/web3js/shared/config/chain.js","lib/web3js/shared/config/database.js","lib/web3js/shared/config/config.js","lib/web3js/shared/utils/validate.js","lib/web3js/shared/config/pool_v1.js","lib/web3js/shared/utils/factory.js","lib/web3js/shared/utils/network.js","lib/web3js/shared/utils/chain.js","lib/web3js/shared/factory/web3.js","lib/web3js/shared/utils/web3.js","lib/web3js/shared/utils/api.js","lib/web3js/shared/utils/derijsnext.js","lib/web3js/shared/config/token.js","lib/web3js/shared/config/config_processor.js","lib/web3js/shared/contract/contract_base.js","lib/web3js/shared/contract/database/database.js","lib/web3js/shared/contract/database/database_wormhole.js","lib/web3js/shared/contract/database/database_airdrop.js","lib/web3js/shared/contract/abis.js","lib/web3js/shared/contract/oracle/wrapped_oracle.js","lib/web3js/shared/config/oracle.js","lib/web3js/shared/contract/abi/pancakePairAbi.js","lib/web3js/shared/contract/gen/PancakePair.js","lib/web3js/shared/contract/adapter.js","lib/web3js/shared/contract/abi/TERC20Abi.js","lib/web3js/shared/contract/abi/ERC20Abi.js","lib/web3js/shared/contract/abi/chainlinkOracleAbi.js","lib/web3js/shared/contract/abi/offChainOracleAbi.js","lib/web3js/shared/contract/abi/offChainVolatilityOracleAbi.js","lib/web3js/shared/contract/abi/TERC20MintLimitAbi.js","lib/web3js/shared/contract/abi/bTokenOracle1Abi.js","lib/web3js/shared/contract/factory.js","lib/web3js/shared/contract/gen/ERC20.js","lib/web3js/shared/contract/gen/TERC20.js","lib/web3js/shared/contract/gen/TERC20MintLimit.js","lib/web3js/shared/contract/gen/ChainlinkOracle.js","lib/web3js/shared/contract/gen/OffChainOracle.js","lib/web3js/shared/contract/gen/OffChainVolatilityOracle.js","lib/web3js/shared/contract/gen/BTokenOracle1.js","lib/web3js/shared/utils/oracle.js","lib/web3js/shared/contract/oracle/symbol_oracle_off_chain.js","lib/web3js/shared/contract/oracle/woo_oracle.js","lib/web3js/shared/factory/oracle.js","lib/web3js/shared/factory/database.js","lib/web3js/shared/factory/contract/b_token.js","lib/web3js/shared/contract/b_token.js","lib/web3js/shared/contract/TERC20.js","lib/web3js/shared/contract/deri/deri.js","lib/web3js/shared/contract/deri/mining_vault_pool.js","lib/web3js/shared/contract/deri/mining_vault_router.js","lib/web3js/shared/contract/deri/wormhole.js","lib/web3js/shared/factory/contract/deri.js","lib/web3js/shared/contract/lp_pool/slp_pool.js","lib/web3js/shared/contract/lp_pool/clp_pool.js","lib/web3js/shared/contract/lp_pool/clp2_pool.js","lib/web3js/shared/factory/contract/lp_pool.js","lib/web3js/shared/factory/contract/activity.js","lib/web3js/shared/contract/activity/broker_manager.js","lib/web3js/shared/contract/activity/ptoken_airdrop.js","lib/web3js/shared/api/wallet_api.js","lib/web3js/shared/api/database_api.js","lib/web3js/shared/api/deri_query_api.js","lib/web3js/shared/api/deri_transaction_api.js","lib/web3js/v2/contract/abis.js","lib/web3js/v2/contract/perpetual_pool.js","lib/web3js/v2/contract/perpetual_pool_router.js","lib/web3js/v2/contract/l_token.js","lib/web3js/v2/contract/p_token.js","lib/web3js/v2/factory.js","lib/web3js/shared/api/activity_api.js","lib/web3js/shared/api/slp_pool_api.js","lib/web3js/shared/api/clp2_pool_api.js","lib/web3js/v1/calculation/fundingRate.js","lib/web3js/v1/calculation/index.js","lib/web3js/v1/contract/perpetual_pool.js","lib/web3js/v1/contract/p_token.js","lib/web3js/v1/contract/l_token.js","lib/web3js/v1/factory.js","lib/web3js/shared/api/clp_pool_api.js","lib/web3js/shared/api/lp_pool_query_api.js","lib/web3js/shared/api/lp_pool_transaction_api.js","lib/web3js/shared/api/ERC20_api.js","lib/web3js/v2_lite_open/config.js","lib/web3js/v2_lite_open/adapter.js","lib/web3js/v2_lite_open/contract/abis.js","lib/web3js/v2_lite_open/contract/chainlink_feed.js","lib/web3js/v2_lite_open/contract/abi/oracleFactoryChainlinkAbi.js","lib/web3js/v2_lite_open/contract/abi/oracleFactoryOffChainAbi.js","lib/web3js/v2_lite_open/contract/p_token.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_manager.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_viewer.js","lib/web3js/v2_lite_open/factory.js","lib/web3js/v2_lite_open/contract/perpetual_pool.js","lib/web3js/v2_lite_open/contract/gen/OracleFactoryChainlink.js","lib/web3js/v2_lite_open/api/query_api.js","lib/web3js/v2_lite_open/contract/gen/OracleFactoryOffChain.js","lib/web3js/shared/config/pool.js","lib/web3js/shared/config/broker.js","lib/web3js/v1/api/api_v1_globals.js","lib/web3js/v1/api/contract_transaction_api.js","lib/web3js/v1/api/trade_history_api.js","lib/web3js/v1/api/rest_api.js","lib/web3js/v1/api/contract_query_api.js","lib/web3js/v2_lite/contract/abis.js","lib/web3js/v2_lite/factory.js","lib/web3js/v2_lite/contract/perpetual_pool.js","lib/web3js/v2_lite/contract/perpetual_pool_old.js","lib/web3js/v2_lite/contract/l_token.js","lib/web3js/v2_lite/contract/p_token.js","lib/web3js/v2_lite/contract/perpetual_pool_lite_viewer.js","lib/web3js/v2_lite/api/mining_query_api.js","lib/web3js/v2_lite/api/mining_transaction_api.js","lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/calculation/liquidity.js","lib/web3js/shared/api/api_globals.js","lib/web3js/v2_lite/utils.js","lib/web3js/v2_lite/api/trade_query_api.js","lib/web3js/v2_lite/api/trade_transaction_api.js","lib/web3js/v2_lite/api/trade_history_api.js","lib/web3js/option/calculation/findLiquidationPrice2.js","lib/web3js/option/calculation/trade.js","lib/web3js/option/contract/abis.js","lib/web3js/option/contract/everlasting_option_viewer.js","lib/web3js/option/contract/p_token_option.js","lib/web3js/option/factory/tokens.js","lib/web3js/option/contract/l_token_option.js","lib/web3js/option/utils.js","lib/web3js/option/contract/option_pricer.js","lib/web3js/option/factory/pool.js","lib/web3js/option/contract/everlasting_option.js","lib/web3js/option/api/mining_query_api.js","lib/web3js/option/calculation/PMM2.js","lib/web3js/option/api/trade_query_api.js","lib/web3js/option/api/trade_transaction_api.js","lib/web3js/option/api/trade_history_api.js","lib/web3js/v2_lite_open/api/transaction_api.js","lib/web3js/activity/config.js","lib/web3js/activity/utils.js","lib/web3js/activity/contract/abi/pTokenAirdropNULSAbi.js","lib/web3js/activity/contract/gen/PTokenAirdropNULS.js","lib/web3js/activity/contract/abi/deriVoteAbi.js","lib/web3js/activity/contract/gen/DeriVote.js","lib/web3js/activity/contract/factory.js","lib/web3js/activity/api/ptoken_airdrop.js","lib/web3js/activity/api/deri_staking.js","lib/web3js/activity/api/deri_vote.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/v2/api/mining_query_api.js","lib/web3js/v2/api/trade_query_api.js","lib/web3js/v2/api/trade_transaction_api.js","lib/web3js/v2/api/trade_history_api.js","lib/web3js/v2_lite_dpmm/utils.js","lib/web3js/v2_lite_dpmm/calc.js","lib/web3js/v2_lite_dpmm/contract/adapter.js","lib/web3js/v2_lite_dpmm/contract/abi/perpetualPoolLiteAbi.js","lib/web3js/v2_lite_dpmm/contract/abi/lTokenLiteAbi.js","lib/web3js/v2_lite_dpmm/contract/abi/pTokenLiteAbi.js","lib/web3js/v2_lite_dpmm/contract/factory.js","lib/web3js/v2_lite_dpmm/contract/gen/PerpetualPoolLite.js","lib/web3js/v2_lite_dpmm/contract/gen/LTokenLite.js","lib/web3js/v2_lite_dpmm/contract/gen/PTokenLite.js","lib/web3js/v2_lite_dpmm/contract/PoolApi.js","lib/web3js/v2_lite_dpmm/api/trade_history_api.js","lib/web3js/v2_lite_dpmm/api/index.js","lib/web3js/v2_lite_dpmm/api/query_api.js","lib/web3js/v2_lite_dpmm/api/transaction_api.js","lib/web3js/v2_dpmm/contract/adapter.js","lib/web3js/v2_dpmm/contract/abi/lTokenAbi.js","lib/web3js/v2_dpmm/contract/abi/pTokenAbi.js","lib/web3js/v2_dpmm/contract/abi/perpetualPoolAbi.js","lib/web3js/v2_dpmm/contract/abi/perpetualPoolRouterAbi.js","lib/web3js/v2_dpmm/contract/factory.js","lib/web3js/v2_dpmm/contract/gen/LToken.js","lib/web3js/v2_dpmm/contract/gen/PToken.js","lib/web3js/v2_dpmm/contract/gen/PerpetualPool.js","lib/web3js/v2_dpmm/contract/gen/PerpetualPoolRouter.js","lib/web3js/v2_dpmm/contract/PoolApi.js","lib/web3js/v2_dpmm/api/trade_history_api.js","lib/web3js/v2_dpmm/api/index.js","lib/web3js/v2_dpmm/api/query_api.js","lib/web3js/v2_dpmm/api/transaction_api.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/option/api/mining_transaction_api.js","lib/web3js/v2/api/mining_transaction_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js","model/WebSocket.js","components/hoc/withModal.js","model/Type.js","model/Version.js","lib/web3js/shared/utils/convert.js","model/Config.js","utils/utils.js","../lang).)*/.json$","components/Loading/LoadingMask.js","App.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Loading.js","index.js","model/Trading.js"],"names":["r","cache","require","keys","forEach","key","path","split","lang","page","toLowerCase","test","pageName","Intl","locale","makeObservable","this","observable","setLocale","action","dict","computed","localeLabel","language","navigator","prefix","restoreLocale","Object","supportedCatalog","includes","storeLocale","label","substr","toUpperCase","LoadingPage","NProgress","start","done","React","Component","LoadableComponent","component","Loadable","loader","loading","getRestServerConfig","env","process","DeriEnv","_deriEnv","get","set","value","Error","SECONDS_IN_A_DAY","LITE_VERSIONS","LITE_AND_OPTION_VERSIONS","VERSIONS","ALL_EXCEPT_OPEN_VERSIONS","PRESERVED_SYMBOLS","MAX_UINT256","MAX_INT256","getDBAddress","useProductionDB","getDBWormholeAddress","getDBAirdropAddress","getJsonConfig","version","configs","jsonConfig","JSON","parse","normalizeChainId","chainId","chainIds","res","toString","normalizeAddress","address","startsWith","length","Web3","utils","toChecksumAddress","validateArgs","args","every","i","isNaN","parseFloat","validateObjectKeyExist","keyList","val","valName","prop","validateIsArray","Array","isArray","getPoolV1ConfigList","pool","bToken","pToken","lToken","dToken","MiningVault","initialBlock","bTokenSymbol","symbol","unit","type","versionId","retired","getLpConfigList","isLp","getPreminingConfigList","staking","url","isInTvlRace","premining","getLpConfig","poolAddress","filter","c","p","bTokenAddress","lTokenAddress","console","log","getDeriConfig","Deri","Wormhole","getDeriConfigList","deriAddress","wormholeAddress","getPoolV1Config","concat","pTokenAddress","dTokenAdress","MinningVaultAddress","factory","klass","instances","deepClone","obj","clone","assign","from","shuffleArray","urls","newUrls","index","Math","floor","random","splice","getBlockNumber","a","blockNumber","duration","Number","MAX_SAFE_INTEGER","web3","providers","HttpProvider","startTime","Date","now","eth","getLatestRPCServer","slice","promises","push","Promise","all","blockNumbers","sort","b","latestBlockNumber","reduce","findIndex","getChainProviderUrl","async","provider_urls","getChainProviderUrls","getDailyBlockNumber","chainBlockNumberList","accum","getDailyBlockNumberConfig","parseInt","getNetworkName","poolNetwork","delay","ms","resolve","setTimeout","web3Factory","web3InstanceMap","pending","walletChainId","window","ethereum","request","method","isBrowser","isJsDom","retry","providerUrl","intRe","deleteIndexedKey","intKeyCount","acc","k","newObj","getLatestBlockNumber","getBlockInfo","getBlock","getPastEvents","contract","eventName","fromBlock","to","amount","events","es","toBlock","e","getHttpBase","fetchJson","resp","fetch","json","fetchRestApi","opts","catchApiError","func","methodName","defaultValue","err","catchTxApiError","success","transaction","error","errorMessage","message","checkChainId","checkAddress","checkApiInput","accountAddress","checkApiInputWithoutAccount","checkTokenId","tokenId","checkAmount","checkSymbolId","symbolId","symbolIds","indexOf","join","contractFactory","processResult","propList","map","v","fromWei","processObjectResult","processMethod","originMethod","prototype","apply","getLiquidity","_call","stateValues","liquidity","getLastTimestamp","lastTimestamp","getProtocolFeeAccrued","protocolFeeAccrued","bTokenPairs","AMUSDC","offchainSymbolPairs","AXSUSDT","MANAUSDT","MBOXUSDT","IBSCDEFI","IGAME","ALICEUSDT","SANDUSDT","QUICKUSDT","GHSTUSDT","AGLDUSDT","normalizeOptionSymbol","optionSymbol","getVolatilitySymbols","symbols","s","volSymbol","getNormalizedOptionSymbols","isUsedRestOracle","mapToSymbol","mapToSymbolInternal","values","normalizeSymbolUnit","re","RegExp","replace","getIndexInfo","internalSymbol","customIndexs","tokens","IMEME","poolProcessor","v2","v2_lite","v2_lite_open","config","option","poolValidator","ContractBase","constructor","contractAddress","contractAbi","Contract","_init","methods","call","gas","estimateGas","_getTransactionReceipt","tx","self","_transactionReceipt","reject","getTransactionReceipt","receipt","status","_estimatedGas","txRaw","numberToHex","data","encodeABI","params","CONTRACT_ABI","DatabaseContract","keyArray","DatabaseWormholeContract","DatabaseAirdropContract","bTokenAbi","TERC20Abi","symbolOracleOffChainAbi","wrappedOracleAbi","wooOracleAbi","brokerManagerAbi","pTokenAirdropAbi","WrappedOracle","decimal","deriToNatural","getOracleConfigList","oracle","pancakePairAbi","PancakePair","super","isUnlocked","allowance","bg","gt","unlock","_transact","getPrice","isQuoteToken0","qDecimals","bDecimals","pair","priceCumulativeLast1","priceCumulativeLast2","timestampLast1","timestampLast2","pancakePair","reserveQ","reserveB","timestamp","getReserves","_reserve0","_reserve1","_blockTimestampLast","price0CumulativeLast","price1CumulativeLast","price","tmpPairState","diff","minus","div","times","pow","ERC20Adapter","ERC20Abi","chainlinkOracleAbi","offChainOracleAbi","offChainVolatilityOracleAbi","TERC20MintLimitAbi","bTokenOracle1Abi","ERC20Factory","owner","spender","account","decimals","_balanceOf","offChainOracleFactory","offChainOracleAdapter","bTokenOracle1Factory","offChainVolatilityOracleAdapter","bTokenOracle1Adapter","getPriceInfoForV1","baseUrl","addSymbolParam","priceInfo","mode","ok","stringify","getOracleUrl","getPriceFromRest","getPriceInfo","volatility","mapToBTokenInternal","getPriceInfos","headers","body","symbolList","oraclePricesCache","RestOracle","getOraclePrice","filteredByChainId","getOracleConfig","oracleFactory","getOraclePriceFromCache2","oracleAddress","wrappedOracleFactory","getOraclePrice2","getOracleVolatilitiesForOption","oracleSymbols","Accept","getOracleInfosFromRest","os","volatilities","checkOffChainOracleSymbol","signer","signatory","SymbolOracleOffChain","WooOracle","wooOracleAddresses","instanceMap","wooOracleFactory","databaseFactory","databaseInstanceMap","database","databaseActivityFactory","databaseDeriVoteFactory","databaseWormholeFactory","databaseAirdropFactory","bTokenFactory","TERC20Factory","deriFactory","wormholeFactory","toChainId","toWormholeAddress","naturalToDeri","fromChainId","fromWormhole","fromNonce","miningVaultRouterFactory","miningVaultPoolFactory","SlpPool","ClpPool","minAddLiquidity","redemptionFeeRatio","Clp2Pool","slpPoolFactory","slpPoolInstanceMap","slpPool","clpPoolFactory","clpPoolInstanceMap","clpPool","clp2PoolFactory","clp2PoolInstanceMap","clp2Pool","brokerManagerFactory","brokerAddress","pTokenAirdropFactory","connectWallet","handleChainChanged","handleAccountChanged","accounts","on","location","reload","hexToNumber","getUserWalletBalance","walletAddress","balance","getBalance","getUserInfo","db","userAddress","getValues","catch","deadline","nonce","valid","deriToString","deriToBool","getUserInfoHarvest","harvestLp","harvestTrade","lp","trade","getUserInfoTotal","total","getUserInfoAll","userInfo","userInfoHarvest","userInfoTotal","getPoolLiquidity","getPoolInfoApy","apy","volume1h","volume24h","getLpPoolInfoApy","apy2","getUserInfoInPool","getUserInfoAllForAirDrop","v1","r1","s1","r2","s2","getUserWormholeSignature","databaseWormhole","signature","isDeriUnlocked","deri","getDeriBalance","balanceOf","mintDToken","miningVaultAddress","pools","getMiningVaultConfig","miningVault","freeze","wormhole","mintDeri","unlockDeri","mintAirdrop","filteredConfig","MiningVaultRouter","getMiningVaultRouterConfig","miningVaultRouter","mint","perpetualPoolAbi","perpetualPoolRouterAbi","lTokenAbi","pTokenAbi","PerpetualPool","bTokenCount","symbolCount","routerAddress","protocolFeeCollector","getLengths","getAddresses","getParameters","decimals0","minBToken0Ratio","minPoolMarginRatio","minInitialMarginRatio","minMaintenanceMarginRatio","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","protocolFeeCollectRatio","bTokenId","swapperAddress","discount","pnl","cumulativePnl","multiplier","feeRatio","fundingRateCoefficient","cumulativeFundingRate","tradersNetVolume","tradersNetCost","getStorageAt","volume","abs","PerpetualPoolRouter","isMaximum","priceInfos","processAsset","lastCumulativePnl","LToken","processPosition","cost","lastCumulativeFundingRate","PToken","perpetualPoolFactory","perpetualPoolRouterFactory","lTokenFactory","pTokenFactory","setBroker","getBrokerConfig","brokerManagerAddress","brokerManager","getAirdropPTokenAddress","airdropPToken","getAirdropPTokenWhitelistCount","totalWhitelistCount","isUserPTokenExist","getPoolConfig2","result","addSlpLiquidity","addLiquidity","removeSlpLiquidity","removeLiquidity","unlockSlp","addClp2Liquidity","removeClp2Liquidity","unlockClp2","calculateLiquidityUsed","poolMarginRatio","calculateFundingRate","processFundingRate","fundingRate","annualBlockCount","calculateShareValue","lTokenTotalSupply","eq","calculateMaxRemovableShares","lTokenBalance","shareValue","removable","plus","max","min","calculateEntryPrice","calculateMarginHeld","calculatePnl","calculateMaxWithdrawMargin","margin","held","calculateLiquidationPrice","tmp","isOrderValid","newVolume","minMargin","poolMaxVolume","gte","lte","negated","POOL_ABI","isProvider","cumuFundingRate","cumuFundingRateBlock","priceDelayAllowance","MAX_GAS_AMOUNT","signed","getStateValues","parameters","args1","fundingRatePerBlock","liquidityUsed","args2","PTokenContract","lastCumuFundingRate","lastUpdateTimestamp","LTokenContract","perpetualPoolInstanceMap","perpetualPool","pTokenInstanceMap","lTokenInstanceMap","addClpLiquidity","removeClpLiquidity","unlockClp","getLpLiquidityInfo","bTokenBalance","shares","poolLiquidity","getSlpLiquidityInfo","totalSupply","maxRemovableShares","getClpLiquidityInfo","getClp2LiquidityInfo","isLpUnlocked","isSlpUnlocked","isClpUnlocked","isClp2Unlocked","getLpWalletBalance","getSlpWalletBalance","getClpWalletBalance","getClp2WalletBalance","unlockLp","addLpLiquidity","removeLpLiquidity","mintTERC20","testERC20","openPoolChainIds","prod","dev","testnet","getPoolV2LiteManagerConfig","find","getOracleFactoryChainlinkConfig","perpetualPoolLiteAbi","pTokenLiteAbi","perpetualPoolLiteManagerAbi","perpetualPoolLiteViewerAbi","chainlinkFeedAbi","ChainlinkFeed","trim","oracleFactoryChainlinkAbi","oracleFactoryOffChainAbi","PTokenLite","operator","PerpetualPoolLiteManager","poolId","pairedTokenAddress","PerpetualPoolLiteViewer","perpetualPoolLiteFactory","updateAddresses","getActiveSymbolIds","getSymbol","block_number","extraInfo","getBTokenSymbol","getSymbols","getPoolExtraInfo","perpetualPoolLiteManagerFactory","chainlinkFeedFactory","oracleFactoryChainlinkFactory","getPoolOpenConfigList","delayAllowance","poolManagerAddress","poolManager","getNumPools","poolNums","numsArray","id","addresses","getConfig","getPoolOpenOracleList","oracleFactoryConfig","oracles","eventBlock","number","event","info","returnValues","isPoolController","controller","perpetualPoolLite","poolController","getPoolAcitveSymbolIds","init","openConfigListCache","update","oldData","updatedAt","getPoolConfigList","bTokens","router","isOption","flat","expandPoolConfigV2","offchainSymbolIds","offchainSymbols","expandPoolConfigV2Lite","isOpen","expandPoolConfigV2LiteOpen","pricer","volatilitySymbols","expandPoolConfigOption","getPoolConfig","getPoolVersion","undefined","poolConfigList","check","getFilteredPoolConfigList","getPoolVersionId","_getPoolConfig","defaultSymbol","getPoolBTokenList","getPoolBTokenIdList","getPoolSymbolList","getPoolSymbolIdList","getPoolViewerConfig","viewers","poolViewer","getBrokerConfigList","fundingRateCache","resourceMap","resource","priceCache","_accountAddress","_price","_interval","setInterval","_update","clear","clearInterval","PerpetualPoolParametersCache","_parameters","_ws","depositMargin","pPool","withdrawMargin","getPositionInfo","maxWithdrawMargin","tradeWithMargin","orderValidation","closePosition","processTradeEvent","txHash","tradeVolume","_getTimeStamp","timeStamp","direction","time","transactionFee","_calculateFee","notional","baseToken","transactionHash","getTradeHistoryOnline","_getBlockInfo","filters","_getPastEvents","item","unshift","getTradeHistory2","tradeFromBlock","tradeHistoryBlock","liquidateFromBlock","liquidateHistoryBlock","tradeHistory","tradeHistoryOnline","getSpecification","averageEntryPrice","marginHeld","unrealizedPnl","liquidationPrice","getLiquidityInfo","poolDynamicEquity","getWalletBalance","getEstimatedFee","getFundingRate","poolInfo","fundingRate0","naturalWithPercentage","toExponential","getEstimatedFundingRate","newNetVolume","fundingRate1","getLiquidityUsed","liquidityUsed0","getEstimatedLiquidityUsed","liquidityUsed1","perpetualPoolLiteOldAbi","lTokenLiteAbi","klassOld","newPoolList","factoryWithUpgrade","pTokenLiteFactory","lTokenLiteFactory","activeSymbolIds","offChainOracleSymbolIds","activeSymbolNames","offChainOracleSymbols","o","positions","getPosition","prices","_getSymbolPrices","_getLiquidityInfo","parameterInfo","totalPnl","dynamicCost","calculateFundingFee","dynamicEquity","lastUpdatedBlockNumber","calculateBTokenDynamicEquities","isBToken0RatioValid","bToken0Ratio","totalDynamicEquity","lt","isPoolMarginRatioValid","userLiquidity","totalCost","calculateMaxRemovableLiquidity","restLiquidity","_prices","liquidatePriceCache","_cache","getSymbolPrices","offChainSymbolIds","offChainSymbolNames","onChainOracleAddressWithPlaceHolder","_symbol","f","onChainSymbolPrices","offChainSymbolPrices","symbolPrices","shift","_getFundingRate","symbolIndex","symbolInfo","liquidityUsedInAmount","addMargin","removeMargin","getMargin","calculateTxFee","symbolIdList","invalidValues","NaN","getEverlastingTimePriceAndDelta","S","K","V","T","timeValue","delta","u","sqrt","getDynamicInitialMarginRatio","spot","strike","isCall","initialMarginRatio","otmRatio","canLiquidateWithPrice","trader","newUnderlierPrice","newDynamicMargin","dynamicMargin","newInitialMargin","initialMargin","position","newIntrinsicValue","strikePrice","fundingPeriod","newTimeValue","newPnl","newDynamicMarginRatio","spotPrice","dynamicMarginRatio","newMaintenanceMargin","maintenanceMarginRatio","findLiquidationPrice","numPositions","price1","price2","final1","final2","l1","l2","head","maintenanceMargin","dynamicInitialMarginRatio","dynamicInitialPoolMarginRatio","initialPoolMarginRatio","getMarginHeldBySymbol","getAverageEntryPrice","getLiquidationPrice","state","poolState","symbolState","traderState","positionState","normalizedSymbol","toNumberForObject","underlier","getLiquidationPrices","liquidationPrices","oSymbol","everlastingOptionAbi","everlastingOptionViewerAbi","lTokenOptionAbi","pTokenOptionAbi","everlastingOptionOldAbi","EverlastingOptionViewer","oraclePrices","oracleVolatilities","fromWeiForObject","PTokenOption","lastCumulativePremiumFundingRate","everlastingOptionViewerFactory","lTokenOptionFactory","pTokenOptionFactory","volatilitiesCache","optionPricerAbi","OptionPricer","everlastingOptionFactory","viewerAddress","viewer","isEqualSet","Set","activeSymbols","symbolVolatilities","getPoolStates","_updateConfig","volatilityInfos","bAmount","_getVolSymbolPrices","lShares","block","indexPrice","tradeFee","tradeCost","contractValue","extra","optionPricerFactory","optionPool","queryTradePMM","theoreticalPrice","symbolInfo2","poolInfo2","feeRatioOTM","feeRatioITM","initialMarginRatioOrigin","maintenanceMarginRatioOrigin","indexConstituents","symbolName","getTraderStates","volPrice","timePrice","markPrice","dpmmPrice","marginHeldBySymbol","unrealizedPnlList","oS","premiumFundingAccrued","fundingAccrued","getPositionInfos","volPrices","vIndex","curSymbolIndex","premiumFunding","fundingPerSecond","premiumFundingPerSecond","intrinsicValue","fee","premiumFunding0","getEverlastingTimeValueAndDelta","pricerAddress","formatTradeEvent","getPastEventsUseAbi","tr","createPool","newParameters","addSymbol","createOracle","feedAddress","feedContract","getPTokenAirdropConfig","getDeriVoteConfig","pTokenAirdropNULSAbi","PTokenAirdropNULS","deriVoteAbi","DeriVote","votingId","voter","votingOption","PTokenAirdropNULSFactory","deriVoteFactory","isPTokenAirdropped","isAirdropPToken","totalAirdropCount","isBTokenUnlocked","hasRequiredBalance","unlockBToken","keyPrefix","getStakingTop10Users","n","fill","no","userAddr","feePaid","score","evgCoeff","rewardBNB","getUserStakingInfo","scoreQ1","scoreQ2","scoreQ3","scoreQ4","coef","getUserStakingReward","rewardDERI","topUsers","getUserStakingContribution","totalContrib","userContrib","Q1Contrib","Q2Contrib","Q3Contrib","Q4Contrib","userQ1Contrib","userQ2Contrib","userQ3Contrib","userQ4Contrib","userQ1Point","userQ2Point","userQ3Point","userQ4Point","getVotingResult","hexToNumberString","getUserVotingPower","getUserVotingResult","votingPower","vote","deriVote","voteId","getContractAddressConfig","getPoolV2ConfigList","getBToken","bTokenDiscounts","bTokenMultiplier","symbolConfigList","bTokenIdList","getLastUpdatedBlockNumber","getMargins","getPositions","positionInfo","margins","latestPrice","fundingFee","idx","getEstimatedLiquidatePrice","promiseList","bTokenInfoList","getPoolBTokensBySymbolId","bTokenList","resultList","walletBalance","availableBalance","isProdChain","getOracleServerUrl","calculateK","alpha","calculateDpmmPrice","calculateDpmmCost","overrideMethods","fns","fn","processTxMethod","toWeiArgPositions","newArgs","arg","toWei","isEstimatedApi","getPoolStateValues","getFundingPeriod","offChainOracleSymbolNames","indexPrices","funding","timeDiff","traderPnl","isSymbolsUpdated","isPositionsUpdated","getTraderLiquidity","getDynamicEquity","getPoolRequiredMargin","getTraderMarginStatus","requiredInitialMargin","perpetualPoolLiteDpmmFactory","addMethods","perpetualPoolLiteAdapter","lTokenLiteAdapter","pTokenLiteAdapter","poolApiFactory","leverage","funding0","funding1","api","range","lengths","perpetualPoolRouterDpmmFactory","bTokenIds","equity","bTokenSymbols","userState","getBTokens","bTokenIndex","tradersNetPosition","ratePerSecond","undistributedPnl","distributedUnrealizedPnl","isBTokensUpdated","totapPnl","totalEquity","m","totalNotional","lTokenAdapter","pTokenAdapter","perpetualPoolDpmmFactory","perpetualPoolDpmmAdapter","perpetualPoolRouterDpmmAdapter","infos","usedByEstimatedApi","lTokenAsset","getAsset","balances","getLiquidityInfoV2l","getLiquidityInfoOption","apiV2lDpmm","apiV2Dpmm","getLiquidityInfo2","bTokenInfo","approximatePnl","getLiquidityInfoV2","getPoolLiquidityV2","getPoolLiquidity1","getPoolInfoApyV2","getPoolInfoApy1","addLiquidityV2l","addLiquidityOption","addLiquidity2","perpetualPoolRouter","validation","addLiquidityV2","removeLiquidityV2l","removeLiquidityOption","removeLiquidity2","removeLiquidityV2","getSpecificationV2l","getSpecificationOption","getSpecification2","getSpecificationV2","getLastUpdateBlock","getPositionInfoV2l","getPositionInfoOption","getPositionInfo2","getPositionInfoV2","getPositionInfosV2l","getPositionInfosOption","getPositionInfosV2","getWalletBalanceV2l","getWalletBalanceOption","getWalletBalance2","getWalletBalanceV2","isUnlockedV2l","isUnlockedOption","isUnlocked2","isUnlockedV2","getEstimatedLiquidatePriceV2","getEstimatedFeeV2l","getEstimatedFeeOption","getEstimatedFee2","getEstimatedFeeV2","getFundingRateV2l","getFundingRateOption","getFundingRate2","getFundingRateV2","getEstimatedFundingRateV2l","getEstimatedFundingRateOption","getEstimatedFundingRate2","getEstimatedFundingRateV2","getLiquidityUsedV2l","getLiquidityUsedOption","getLiquidityUsed2","getLiquidityUsedV2","getEstimatedLiquidityUsedV2l","getEstimatedLiquidityUsedOption","getEstimatedLiquidityUsed2","getEstimatedLiquidityUsedV2","getPoolBTokensBySymbolIdV2","getEstimatedTimePrice","toNumber","getEstimatedTimePriceOption","unlockV2l","unlockOption","unlock2","unlockV2","depositMarginV2l","depositMarginOption","depositMargin2","depositMarginV2","withdrawMarginV2l","withdrawMarginOption","withdrawMargin2","withdrawMarginV2","tradeWithMarginV2l","tradeWithMarginOption","tradeWithMargin2","tradeWithMarginV2","closePositionV2l","closePositionOption","closePosition2","closePositionV2","getTradeHistory","ids","volumes","getTradeHistoryV2l","getTradeHistoryOption","getTradeHistoryV2","WebSocket","socket","io","transports","withCredentials","emit","onMessage","listener","time_type","equalIgnoreCase","findEvent","pos","withModal","appElement","document","getElementById","customizeStyle","overlay","zIndex","background","content","border","inset","overflow","WithModal","props","modalIsOpen","className","overlayMerged","mergedStyle","style","portalClassName","intl","onClose","inject","observer","current","makeAutoObservable","setCurrent","isFuture","isV1","isV2","isV2Lite","zone","switch","BigNumber","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","base","repeat","value1","value2","toFixed","hexToString","hexToUtf8","sd","formatBN","bigNumber","toFormat","replaceAll","userAgent","set1","set2","size","has","sortOptionSymbols","symbolArr","unique","to2","index1","index2","index3","Config","setAll","isOptions","cur","chainInfo","formatAddress","formatBalance","eqInNumber","str1","str2","isLP","isSushiLP","isCakeLP","sessionStorageKey","convertToInternationalCurrencySystem","labelValue","storeConfig","sessionStorage","setItem","getConfigFromStore","getItem","storeChain","restoreChain","code","hasParam","param","urlString","href","URL","searchParams","getParam","getFormatSymbol","curChain","chain","getMarkpriceSymbol","Type","stripSymbol","secondsInRange","intervalRange","calcRange","interval","getTime","groupByNetwork","list","network","formatAdd","airdrop","combineSymbolfromPoolConfig","mapPoolInfo","wallet","name","buttonText","webpackContext","req","webpackContextResolve","__webpack_require__","module","exports","data-title","DesktopApp","MobileApp","Mask","useState","setIsOpen","useEffect","isShowMask","LoadingMask","top","MaskWrapper","screen","width","isOptionsLite","useRouteMatch","isOptionsPro","catagory","Wallet","detail","supportWeb3","isConnected","approve","approved","connect","loadWalletBalance","switchNetwork","metamask","supported","setDetail","supportV2","supportV1","supportAllVersion","supportChain","supportInnocation","supportOpen","isApproved","supportInnovation","Oracle","timeType","kData","ws","paused","listeners","already","setIndex","webSocket","subscribe","close","unsubscribeBars","setSymbol","setTimeType","unsubscribe","setPause","Position","callback","callbackALL","spec","counter","mockPositionInfo","deltaFundingAccrued","isSupportChain","balanceContract","startAll","started","runInAction","loadAll","startedAll","load","timer","pause","resume","clean","deltaFundingCoefficient","optionType","bTokenSymbolDisplay","getUnderlierStrike","setInfo","History","isLoading","setIsLoading","trading","slideIncrementMargin","history","userSelectedDirection","optionsConfigs","setWallet","setConfigs","setOptionConfigs","setConfig","setContract","setPosition","setPositions","setVolume","setUserSelectedDirection","setFundingRate","setHistory","setSlideMargin","fundingRateTip","optionFundingRateTip","initialMarginRatioTip","maintenanceMarginRatioTip","TransactionFeeTip","dpmmFundingRateTip","fundingCoefficientTip","rateTip","multiplierTip","TotalNetPositionTip","volumeDisplay","isNegative","isPositive","configInfo","contractInfo","historyInfo","finishedCallback","defaultConfig","getDefaultConfig","loadByConfig","changed","onChange","store","symbolChanged","addListener","syncFundingRate","loadFundingRate","then","results","finally","refreshCache","fromStore","getFromStore","setPaused","groupConfigBySymbol","markpriceSymbolFormat","increment","MarginRatio","substring","currentSymbolMarginHeld","otherMarginHeld","incrementMarginHeld","totalMarginHeld","dynBalance","available","exchanged","multipliedBy","totalContractValue","curContractValue","afterLeverage","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2b3a6602.chunk.js","sourcesContent":["import { makeObservable, observable, action, computed } from \"mobx\";\nimport { restoreLocale, storeLocale } from \"../utils/utils\";\nimport supportedCatalog from '../locales/lang.json'\n\n\nconst cache = {}\n\nfunction importAll(r){\n  return r.keys().forEach(key => {\n    const path = key.split('/')\n    const lang = path[1]\n    const page = path[2].split('.')[0].toLowerCase()\n    if(!cache[lang]) {\n      cache[lang] = {}\n    }\n    \n    if(/mobile-/.test(page)){\n      const pageName= page.split('-')[1]\n      if(!cache[lang][pageName]){ \n        cache[lang][pageName] = {}\n      }\n      cache[lang][pageName]['mobile'] = r(key)\n    } else {\n      cache[lang][page] = r(key)\n    }\n  });\n}\n//lang.json 是语言包目录，需要排除在外\nimportAll(require.context(`../locales/`,true,/^((?!lang).)*\\.json$/))\n\nclass Intl {\n  locale = 'en'\n  constructor(){\n    makeObservable(this,{\n      locale : observable,\n      setLocale : action,\n      dict : computed,\n      localeLabel: computed\n    })\n    const language = navigator.language\n    const prefix = language && language.split('-')[0]\n    const locale = restoreLocale()\n    if(locale && Object.keys(supportedCatalog).includes(locale) ){\n      this.locale = locale\n    } else if(prefix && Object.keys(supportedCatalog).includes(prefix)){\n      this.locale = prefix\n    }\n  }\n\n  setLocale(locale){\n    if(locale && supportedCatalog[locale]){\n      this.locale = locale;\n      storeLocale(locale)\n    }\n  }\n\n  get(page,key){\n    return cache[this.locale][page][key]\n  }\n\n  get dict(){         \n    return cache[this.locale]\n  }\n\n  get localeLabel(){\n    const label = supportedCatalog[this.locale];\n    return label ? label.substr(0,2).toUpperCase() : \"EN\" \n  }\n}\n\nexport default new Intl();","import React from 'react'\nimport Loadable from 'react-loadable'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\n\nclass LoadingPage extends React.Component {\n  //类似github页面加载的那个加载条\n  componentWillMount(){\n    NProgress.start()\n  }\n  componentWillUnmount(){\n    NProgress.done()\n  }\n  render () {\n    return (\n      <div/>\n    )\n  }\n}\n\nconst LoadableComponent = (component) => {\n  return Loadable({\n    loader: component,\n    loading: ()=><LoadingPage/>\n  })\n}\n\nexport default LoadableComponent","/**\n * Get REST server config\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {string} server url\n */\nexport const getRestServerConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    // for production\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://api.deri.finance';\n    //return 'https://alphaapi.deri.finance';\n  } else {\n    // for test\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://testnetapi.deri.finance';\n  }\n};\n\nexport const getRedisWorkerQueneConfig = (env = \"dev\") => {\n  if (env === \"prod\") {\n    return ['trade_tx_quene', 'trade_worker_group']\n  } else {\n    return ['trade_tx_quene_dev', 'trade_worker_group_dev']\n  }\n};\n","// export const DERI_ENV=\"dev\"\nexport const DeriEnv = (() => {\n  let _deriEnv = 'dev';\n  return {\n    get: () => _deriEnv,\n    set: (value) => {\n      if (value === 'dev' || value === 'prod' || value === 'testnet') {\n        _deriEnv = value;\n      } else {\n        throw new Error(\"please use 'dev', 'testnet' or 'prod' for DeriEnv\");\n      }\n    },\n  };\n})();\n","export const SECONDS_IN_A_DAY = 86400;  // 60 * 60 * 24","// versions\n//export const VERSIONS = ['v2', 'v2_lite', 'v2_lite_open']\nexport const LITE_VERSIONS = ['v2_lite', 'v2_lite_open'];\nexport const LITE_AND_OPTION_VERSIONS = [...LITE_VERSIONS, 'option'];\nexport const VERSIONS = ['v2', ...LITE_AND_OPTION_VERSIONS];\nexport const ALL_EXCEPT_OPEN_VERSIONS = [\n  'v2',\n  'v2_lite',\n  'option',\n];\nexport const PRESERVED_SYMBOLS = ['BTCUSD', 'ETHUSD', 'BNBUSD'];\n","// add a new chain: validateChainId, getChainProviderUrls, getNetworkName, getDailyBlockNumberConfig\nexport const getChainIds = () => {\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\n};\n\nexport const getChainProviderUrls = (chainId) => {\n  const chainProviderUrls = [\n    {\n      provider_urls: [\n        'https://mainnet.infura.io/v3/d0e6582644a845ee8d7c3c18683fec06',\n      ],\n      chainId: '1',\n    },\n    {\n      provider_urls: [\n        'https://bsc-dataseed.binance.org',\n        'https://bsc-dataseed1.defibit.io/',\n        'https://bsc-dataseed1.ninicoin.io/',\n      ],\n      chainId: '56',\n    },\n    {\n      provider_urls: ['https://http-mainnet.hecochain.com'],\n      chainId: '128',\n    },\n    {\n      provider_urls: [\n        'https://polygon-rpc.com',\n        //'https://rpc-mainnet.matic.network',\n        'https://rpc-mainnet.maticvigil.com',\n        //'https://rpc-mainnet.matic.quiknode.pro',\n        'https://matic-mainnet.chainstacklabs.com',\n        // 'https://matic-mainnet-full-rpc.bwarelabs.com',\n        // 'https://matic-mainnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '137',\n    },\n    {\n      provider_urls: [\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '3',\n    },\n    {\n      provider_urls: [\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '42',\n    },\n    {\n      provider_urls: [\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\n      ],\n      chainId: '97',\n    },\n    {\n      provider_urls: ['https://http-testnet.hecochain.com'],\n      chainId: '256',\n    },\n    {\n      provider_urls: [\n        'https://rpc-mumbai.matic.today',\n        'https://rpc-mumbai.maticvigil.com',\n        'https://matic-mumbai.chainstacklabs.com',\n        'https://matic-testnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '80001',\n    },\n  ];\n\n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\n  //console.log('res',res)\n  if (res.length > 0) {\n    return res[0].provider_urls\n  } else {\n    throw new Error(`getChainProviderUrls: no urls for chainId ${chainId}`)\n  }\n}\n\nexport const getDailyBlockNumberConfig = () => {\n  // let chainBlockNumberList = [\n  //   '2367422',\n  //   '2367422',\n  //   '10497304',\n  //   '10497304',\n  //   '10511369',\n  //   '10511369',\n  //   '14747860',\n  //   '14747860',\n  // ];\n\n  // compute matic aunual block number: block height(16309458, 10000000)\n  let chainBlockNumberList = [\n    '6486',\n    '6486',\n    '28759',\n    '28759',\n    '28798',\n    '28798',\n    '40405',\n    '40405',\n  ];\n  return getChainIds().reduce((accum, i, index) => {\n    accum[i] = chainBlockNumberList[index];\n    return accum;\n  }, {});\n};\n\n// MAX UINT/INT256\n// hex(2**256-1)\nexport const MAX_UINT256 =\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n// hex((2**255 -1) // 10**18)\nexport const MAX_INT256 =\n  '0x9392ee8e921d5d073aff322e62439fcf32d7f344649470f90';\n\n","export const getDBProviderUrls = () => [\n  'https://data-seed-prebsc-1-s1.binance.org:8545/',\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\n];\n\nexport const getDBAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n\nexport const getDBWormholeAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\n  }\n  // for test\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\n};\n\nexport const getDBAirdropAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n","import { DeriEnv } from './env';\nimport jsonConfig from '../resources/config.json';\nimport { VERSIONS } from './version';\n\nexport const getJsonConfig = (version, env) => {\n  env = env || DeriEnv.get();\n  // for browser and nodejs\n  let configs =\n    typeof jsonConfig === 'object' ? jsonConfig : JSON.parse(jsonConfig);\n  if (configs[version] && VERSIONS.includes(version)) {\n    configs = configs[version];\n    if (['prod', 'dev', 'testnet'].includes(env)) {\n      if (configs && configs[env]) {\n        return configs[env];\n      }\n    }\n  } else {\n    throw new Error(\n      `getJsonConfig(): invalid config of version '${version}' and env '${env}'`\n    );\n  }\n};\n","import { getChainIds } from '../config/chain';\nimport Web3 from 'web3';\n\n// validate\nexport const normalizeChainId = (chainId) => {\n  const chainIds = getChainIds()\n  let res = chainId ? chainId.toString() : chainId;\n  if (chainId && chainIds.includes(res)) {\n    return res;\n  } else {\n    throw new Error(`invalid chainId: ${chainId}`);\n  }\n};\n\nexport const normalizeAddress = (address) => {\n  if (typeof address === 'string' && address.startsWith('0x') && address.length == 42 ) {\n    return Web3.utils.toChecksumAddress(address);\n  } else {\n    throw new Error(`invalid address: ${address}`);\n  }\n};\n\nexport const validateArgs = (...args) =>\n  args.every((i) => !isNaN(parseFloat(i)));\n\nexport const validateObjectKeyExist = (keyList, val, valName) => {\n  const keys = Object.keys(val);\n  keyList.forEach((prop) => {\n    if (!keys.includes(prop)) {\n      throw new Error(\n        `validateConfig(): property ${prop} is not exist in the ${valName} config.`\n      );\n    }\n  });\n};\nexport const validateIsArray = (val, valName) => {\n  if (!Array.isArray(val)) {\n    throw new Error(\n      `validateConfig(): property ${valName} is an array in the config.`\n    );\n  }\n};\n","import { DeriEnv } from '../config'\nimport { normalizeChainId } from '../utils/validate'\n\nexport const getPoolV1ConfigList = (env = 'dev') => {\n  // production environment\n  if (env === 'prod') {\n    return [\n      {\n        pool: '0xAf081e1426f64e74117aD5F695D2A80482679DE5',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '7906919',\n        bTokenSymbol: 'BUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '56',\n        type: 'perpetual',\n        version: 'v1',\n        versionId: 'v1',\n        retired: true,\n      },\n      {\n        pool: '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '6753399',\n        bTokenSymbol: 'BUSD',\n        symbol: 'COIN',\n        unit: 'COIN',\n        chainId: '56',\n        type: 'perpetual',\n        version: 'v1',\n        versionId: 'v1',\n        retired: true,\n      },\n      {\n        pool: '0xD3f5E6D1a25dA1E64EDf7cb571f9fAD17FEb623c',\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '8005906',\n        bTokenSymbol: 'DERI',\n        symbol: 'iMEME',\n        unit: 'iMEME',\n        chainId: '56',\n        type: 'perpetual',\n        version: 'v1',\n        versionId: 'v1',\n        retired: true,\n      },\n      {\n        pool: '0x23779AAc1e74a65F27B4840A8E41F767Ce993118',\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548746',\n        bTokenSymbol: 'USDT',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        type: 'perpetual',\n        version: 'v1',\n        versionId: 'v1',\n        retired: true,\n      },\n      {\n        pool: '0x96a1F15676746b9339DBc185F277618359Ac6346',\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548827',\n        bTokenSymbol: 'BAC',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        type: 'perpetual',\n        version: 'v1',\n        versionId: 'v1',\n        retired: true,\n      },\n      {\n        pool: '0xBA7e183042c8796E26A5a2375927DE7B1AB99d97',\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        initialBlock: '5220431',\n        bTokenSymbol: 'HUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '128',\n        type: 'perpetual',\n        version: 'v1',\n        versionId: 'v1',\n        retired: true,\n      },\n    ];\n  } else if (env === 'dev') {\n    return [\n      {\n        pool: '0x372b640A00a0A6B73381e9363A39644a712cCc37',\n        bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\n        pToken: '0xB9113758D771750e9E8ECb359A19689eC89AC1a5',\n        lToken: '0xC727a10Be4740441BE74960296097aF39D701980',\n        initialBlock: '9378545',\n        bTokenSymbol: 'BUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '97',\n        type: 'perpetual',\n        version: 'v1',\n        versionId: 'v1',\n      },\n    ];\n  } else if (env === 'testnet') {\n    return [];\n  }\n};\n\n// export const getSlpContractAddressConfig = (env = 'dev') => {\n//   if (env === 'prod') {\n//     return [\n//       {\n//         pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n//         bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n//         pToken: '0x0000000000000000000000000000000000000000',\n//         lToken: '0x0000000000000000000000000000000000000000',\n//         dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n//         MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n//         chainId: '1',\n//         bTokenSymbol: 'DERI-USDT SLP',\n//         symbol: '--',\n//       },\n//     ];\n//   }\n//   console.log('getSlpContractAddressConfig(): no config for dev environment');\n//   return [];\n// };\n\n// export const getClpContractAddressConfig = (env = 'dev') => {\n//   if (env === 'prod') {\n//     return [\n//       {\n//         pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n//         pToken: '0x0000000000000000000000000000000000000000',\n//         lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n//         dToken: '0x0000000000000000000000000000000000000000',\n//         MiningVault: '0x0000000000000000000000000000000000000000',\n//         initialBlock: '6894880',\n//         chainId: '56',\n//         bTokenSymbol: 'CAKE-LP',\n//         symbol: '--',\n//         retired: true,\n//       },\n//     ];\n//   } else {\n//     return [];\n//   }\n// };\n// export const getClp2ContractAddressConfig = (env = 'dev') => {\n//   if (env === 'prod') {\n//     return [\n//       {\n//         pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n//         pToken: '0x0000000000000000000000000000000000000000',\n//         lToken: '0x0000000000000000000000000000000000000000',\n//         dToken: '0x0000000000000000000000000000000000000000',\n//         MiningVault: '0x0000000000000000000000000000000000000000',\n//         initialBlock: '699498',\n//         chainId: '56',\n//         bTokenSymbol: 'CAKE-LP SYRUP',\n//         symbol: '--',\n//       },\n//     ];\n//   } else {\n//     return [];\n//   }\n// };\n\nexport const getLpConfigList = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool:   '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        bTokenSymbol: 'DERI-USDT SLP',\n        symbol: '--',\n        type: 'slp',\n        isLp: true,\n      },\n      {\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '6894880',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP',\n        symbol: '--',\n        type: 'clp',\n        retired: true,\n        isLp: true,\n      },\n      {\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '699498',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP SYRUP',\n        symbol: '--',\n        type: 'clp2',\n        isLp: true,\n      },\n    ];\n  } else {\n    return [];\n  }\n};\n\nexport const getMiningVaultRouterConfig = (chainId) => {\n  const configs = [\n    {\n      MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\n      chainId: '56',\n    },\n  ];\n  const filteredConfig = configs.filter((i) => i.chainId === chainId);\n  if (filteredConfig.length > 0) {\n    return filteredConfig[0].MiningVaultRouter;\n  } else {\n    throw new Error(\n      `getMiningVaultRouterAddressConfig: no address for chainId ${chainId}`\n    );\n  }\n};\n\nexport const getDeriConfigList= (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\n        bTokenSymbol: 'DERI',\n        chainId: '1',\n      },\n      {\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\n        bTokenSymbol: 'DERI',\n        chainId: '56',\n      },\n      {\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\n        bTokenSymbol: 'DERI',\n        chainId: '128',\n      },\n    ];\n  }\n  return [\n    {\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\n      bTokenSymbol: 'DERI',\n      chainId: '3',\n    },\n    {\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\n      bTokenSymbol: 'DERI',\n      chainId: '97',\n    },\n    {\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\n      bTokenSymbol: 'DERI',\n      chainId: '256',\n    },\n  ];\n};\n\nexport const getPreminingConfigList = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        bToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xe91cb8ba06028f38e231F7099e9B97CEDd2f2736',\n        pool: '0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/0/0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        bTokenSymbol: 'WBNB',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x8518054fa6b7E0d4834bfD152c9BA5BDB856FD2B',\n        pool: '0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/1/0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        bTokenSymbol: 'CAKE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xa184088a740c695E156F91f5cC086a06bb78b827',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x167704539C9acAcF6f0C2D7AAeB4413339F86AaA',\n        pool: '0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/0/2/0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        bTokenSymbol: 'AUTO',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        pool: '0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/0/0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        bTokenSymbol: 'WHT',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        pool: '0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/1/0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        bTokenSymbol: 'MDX',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x3B50881F5646E809ef85Bb0016af3b2Ee5313d46',\n        pool: '0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/0/0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        bTokenSymbol: 'SUSHI',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0069b4Fb48e5B8E9CB6960f4c2468b625ACfb465',\n        pool: '0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/1/0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        bTokenSymbol: 'AAVE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xFFCfB31b6500E7e420CFE5D0df710DdF928F55FD',\n        pool: '0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/2/2/0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        bTokenSymbol: 'DERI-USDT SLP',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n    ];\n  } else {\n    return []\n  }\n};\n\n\n// export const getSlpConfig = (chainId, poolAddress) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getLpConfigList(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.pool === poolAddress);\n//   if (pool.length > 0) {\n//     return {\n//       poolAddress: pool[0].pool,\n//       bTokenAddress: pool[0].bToken,\n//       pTokenAddress: pool[0].pToken,\n//       lTokenAddress: pool[0].lToken,\n//       dTokenAdress: pool[0].dToken,\n//       MinningVaultAddress: pool[0].MiningVault,\n//     };\n//   }\n//   console.log(\n//     `getSlpConfig(): contract address is not found: ${chainId} ${poolAddress}`\n//   );\n//   return {};\n// };\n\n// export const getClp2Config= (chainId, poolAddress) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.pool === poolAddress);\n//   if (pool.length > 0) {\n//     return {\n//       poolAddress: pool[0].pool,\n//       bTokenAddress: pool[0].bToken,\n//       pTokenAddress: pool[0].pToken,\n//       lTokenAddress: pool[0].lToken,\n//       dTokenAdress: pool[0].dToken,\n//       MinningVaultAddress: pool[0].MiningVault,\n//     };\n//   }\n//   console.log(\n//     `getClp2Config(): contract address is not found: ${chainId} ${poolAddress}`\n//   );\n//   return {};\n// };\n\n// export const getClpConfig= (chainId, poolAddress) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.pool === poolAddress);\n//   if (pool.length > 0) {\n//     return {\n//       poolAddress: pool[0].pool,\n//       bTokenAddress: pool[0].bToken,\n//       lTokenAddress: pool[0].lToken,\n//     };\n//   }\n//   console.log(\n//     `getClpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n//   );\n//   return {};\n// };\n\nexport const getLpConfig = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getLpConfigList(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      lTokenAddress: pool[0].lToken,\n      type: pool[0].type,\n    };\n  }\n  console.log(\n    `getLpConfig(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getDeriConfig= (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pool = getDeriConfigList(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pool.length > 0) {\n    return {\n      deriAddress: pool[0].Deri,\n      wormholeAddress: pool[0].Wormhole,\n      bTokenSymbol: pool[0].bTokenSymbol,\n    };\n  }\n  console.log(\n    `getDeriConfig(): contract address is not found: ${chainId}`\n  );\n  return {};\n};\n\nexport const getMiningVaultConfig = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getPoolV1ConfigList(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pools.length > 0) {\n    if (pools[0].MiningVault) {\n      return pools[0].MiningVault;\n    }\n  }\n};\n\nexport const getPoolV1Config = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const env = DeriEnv.get()\n  const pools = getPoolV1ConfigList(env)\n    .concat(getPreminingConfigList(env))\n    .concat(getLpConfigList(env))\n    .filter((c) => c.chainId === chainId);\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n      bTokenSymbol: pool[0].bTokenSymbol,\n      symbol: pool[0].symbol,\n      unit: pool[0].unit,\n      initialBlock: pool[0].initialBlock,\n    };\n  } else {\n    throw new Error(\n      `getPoolV1Config(): contract address is not found: ${chainId} ${poolAddress}`\n    );\n  }\n}\n","export const factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}","import Web3 from 'web3';\n// == func\n// const np = () => {}\n// const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\n// refer to https://www.30secondsofcode.org/js/s/deep-clone\n// alternative: let clone = JSON.parse(JSON.stringify(obj))\nexport const deepClone = obj => {\n  if (obj === null) return null;\n  let clone = Object.assign({}, obj)\n  Object.keys(clone).forEach((key) => {\n    clone[key] = typeof obj[key] === 'object' ? deepClone(obj[key]) : obj[key];\n  });\n  // need recheck\n  if (Array.isArray(obj)) {\n    clone.length = obj.length\n    return Array.from(clone)\n  }\n  return clone\n}\n\nexport const shuffleArray = (urls) => {\n  const newUrls = deepClone(urls)\n  const length = urls.length\n  let res = []\n  for (let i = 0; i < length; i++) {\n    const index = Math.floor(Math.random() * urls.length)\n    res = res.concat(newUrls.splice(index,1))\n  }\n  return res\n}\n\nconst getBlockNumber = async (url) => {\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\n  try {\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\n    const startTime = Date.now()\n    res.blockNumber = await web3.eth.getBlockNumber()\n    res.duration = Date.now() - startTime\n  } catch (err) {\n    //console.log(`getBlockNumber(${url}) error: ${err}`)\n  }\n  return res\n};\n\nexport const getLatestRPCServer = async (urls = []) => {\n  urls = shuffleArray(urls)\n  // pick 2 random urls\n  urls = urls.length >= 2 ? urls.slice(0,2) : urls\n  let promises = []\n  for (let i = 0; i < urls.length; i++) {\n    promises.push(getBlockNumber(urls[i]));\n  }\n  let blockNumbers = await Promise.all(promises)\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\n  // console.log('blockNumbers',  blockNumbers)\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\n  const res = blockNumbers[index] && blockNumbers[index].url\n  // console.log(res)\n  if (res && res.startsWith('http')) {\n    return res\n  } else {\n    throw new Error(`getLatestRPCServer(): no alive RPC server in ${urls}`)\n  }\n};","import {\n  getChainProviderUrls,\n  getDailyBlockNumberConfig,\n} from '../config/chain';\nimport { normalizeChainId } from './validate';\nimport { getLatestRPCServer } from './network';\n\nexport const getChainProviderUrl = async (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const urls = getChainProviderUrls(chainId);\n  if (urls.length > 0) {\n   const url =  await getLatestRPCServer(urls);\n   // console.log('url', url)\n   return url\n  } else {\n    throw new Error(\n      `Cannot find the chain provider url with chainId: ${chainId}`\n    );\n  }\n};\n\nexport const getDailyBlockNumber = (chainId) => {\n  const blockNumbers = getDailyBlockNumberConfig();\n  if (blockNumbers[chainId]) {\n    return parseInt(blockNumbers[chainId]);\n  } else {\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\n  }\n};\n\nexport const getNetworkName = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let poolNetwork;\n  switch (chainId) {\n    case '1':\n      poolNetwork = 'ethereum';\n      break;\n    case '56':\n      poolNetwork = 'bsc';\n      break;\n    case '128':\n      poolNetwork = 'heco';\n      break;\n    case '3':\n      poolNetwork = 'ropsten';\n      break;\n    case '42':\n      poolNetwork = 'kovan';\n      break;\n    case '97':\n      poolNetwork = 'bsctestnet';\n      break;\n    case '256':\n      poolNetwork = 'hecotestnet';\n      break;\n    case '137':\n      poolNetwork = 'matic';\n      break;\n    case '80001':\n      poolNetwork = 'mumbai';\n      break;\n    default:\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\n  }\n  return poolNetwork;\n};","import Web3 from 'web3';\nimport { normalizeChainId } from '../utils/validate';\nimport { getChainProviderUrl } from '../utils/chain';\nimport { isBrowser, isJsDom } from '../utils/convert';\n\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\nexport const web3Factory = (function () {\n  const web3InstanceMap = {};\n  let pending = {}\n  let walletChainId = null\n  return {\n    async get(chainId) {\n      chainId = normalizeChainId(chainId)\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\n        //console.log('hit web3 cache')\n        return web3InstanceMap[chainId];\n      }\n      // for mining page should not depends wallet network\n      if (!walletChainId && typeof window === 'object' && window.ethereum) {\n        walletChainId = await window.ethereum.request({ method: 'net_version' })\n      }\n      // using metaMask ethereum object\n      if (\n        isBrowser() &&\n        !isJsDom() &&\n        typeof window.ethereum === 'object' &&\n        walletChainId &&\n        chainId === walletChainId.toString()\n      ) {\n        //console.log('new ethereum web3 cache')\n        web3InstanceMap[chainId] = new Web3(window.ethereum);\n        return web3InstanceMap[chainId];\n      } else {\n        if (pending[chainId]) {\n          // wait for init\n          let retry = 8\n          while (retry > 0) {\n            await delay(500)\n            if (Object.keys(web3InstanceMap).includes(chainId)) {\n              // console.log('hit web3 cache')\n              return web3InstanceMap[chainId];\n            } else {\n              retry -= 1\n            }\n          }\n          // timeout\n          const providerUrl = await getChainProviderUrl(chainId);\n          //console.log('new web3 cache')\n          web3InstanceMap[chainId] = new Web3(\n            new Web3.providers.HttpProvider(providerUrl)\n          );\n          return web3InstanceMap[chainId];\n        } else {\n          // first init\n          pending[chainId] = true\n          try {\n            const providerUrl = await getChainProviderUrl(chainId);\n            //console.log('new web3 cache')\n            web3InstanceMap[chainId] = new Web3(\n              new Web3.providers.HttpProvider(providerUrl)\n            );\n          } catch(err) {\n            console.log(err.toString())\n          } finally {\n            delete pending[chainId]\n          }\n          return web3InstanceMap[chainId];\n        }\n      }\n    },\n  };\n})();","import { hexToNumber } from './convert';\nimport { web3Factory } from '../factory/web3'\n\nconst intRe = /^\\d+$/\n// adopt from derijs next\nexport const deleteIndexedKey = (obj) => {\n  if (typeof obj === 'object' && obj !== null &&  Object.keys(obj).length > 0) {\n    const keys = Object.keys(obj);\n    const intKeyCount = keys.reduce(\n      (acc, k) => (intRe.test(k) ? acc + 1 : acc),\n      0\n    );\n    //console.log(keys);\n    // is leaf array\n    if (intKeyCount * 2 === keys.length) {\n      let newObj = {};\n      Object.keys(obj).forEach((k) => {\n        if (!intRe.test(k)) {\n          newObj[k] = obj[k];\n        }\n      });\n      return newObj;\n    } else if (intKeyCount === keys.length) {\n      // is array container\n      let res = [];\n      for (let i = 0; i < keys.length; i++) {\n        if (Array.isArray(obj[i])) {\n          res.push(deleteIndexedKey(obj[i]));\n        } else {\n          res.push(obj[i]);\n        }\n      }\n      return res;\n    }\n  }\n  return obj;\n};\n\n  // get block number when last updated\n  export const getLastUpdatedBlockNumber = async(chainId, contractAddress, position = 0) => {\n    const web3 = await web3Factory.get(chainId)\n    const res = await web3.eth.getStorageAt(contractAddress, position)\n    //console.log('res', hexToNumber(res))\n    return hexToNumber(res)\n  }\n\n  // get block number when last updated\n  export const getLatestBlockNumber = async(chainId) => {\n    const web3 = await web3Factory.get(chainId)\n    const res = await web3.eth.getBlockNumber()\n    //console.log('res', res)\n    return res\n  }\n\n  export const getBlockInfo = async(chainId, blockNumber) => {\n    const web3 = await web3Factory.get(chainId)\n    return await web3.eth.getBlock(blockNumber);\n  }\n\n  export const getPastEvents = async(chainId, contract, eventName, filter = {}, fromBlock = 0, to = 0) => {\n    let events = [];\n    let amount\n    if (['56', '97', '127', '80001'].includes(chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }\n\n  export const getPastEventsUseAbi = async(chainId, contractAddress, contractAbi, eventName, filter = {}, fromBlock = 0, to = 0) => {\n    const web3 = await web3Factory.get(chainId)\n    const contract = new web3.eth.Contract(contractAbi, contractAddress);\n    let events = [];\n    let amount\n    if (['56', '97', '127', '80001'].includes(chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }","import {\n  getRestServerConfig,\n  DeriEnv,\n} from '../config'\n//import fetch from 'node-fetch'\n\n// get REST HTTP Base url\nexport const getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nexport const fetchJson = async (url) => {\n  const resp = await fetch(url);\n  return await resp.json();\n};\n\nexport const fetchRestApi = async (path, opts = { method: 'GET' }) => {\n  return await fetchJson(`${getHttpBase()}${path}`, opts);\n};\n\n// query api wrapper\nexport const catchApiError = async (func, args, methodName, defaultValue) => {\n  try {\n    const res = await func(...args)\n    return res\n  } catch (err) {\n    //console.log(`${methodName}: `, err.toString())\n    console.log(`${methodName}: `, err)\n  }\n  return defaultValue\n}\n\n// tx api wrapper\nexport const catchTxApiError = async (func, args) => {\n  let res;\n  try {\n    const result = await func(...args);\n    res = { success: true, transaction: result };\n  } catch (err) {\n    const message = err.errorMessage || err.message || 'Transaction failed';\n    res = { success: false, error: message};\n  }\n  return res;\n};\n\n","// utils for derijsnext, combine in one file\nimport { getChainIds } from '../config/chain';\nimport { fromWei, toWei, toChecksumAddress } from './convert';\n\nexport const checkChainId = (chainId) => {\n  chainId = chainId != null ? chainId.toString() : chainId \n  if (getChainIds().includes(chainId)) {\n    return chainId;\n  }\n  throw new Error(`invalid chainId '${chainId}'`);\n};\n\nexport const checkAddress = (address) => {\n  address = address != null ? address.toString() : address\n  try {\n    return toChecksumAddress(address)\n  } catch(err) {\n    // console.log('-- checkAddress(): ', err)\n    throw new Error(`invalid eth address '${address}'`)\n  }\n}\n\nexport const checkApiInput = (chainId, poolAddress, accountAddress) => {\n  return [\n    checkChainId(chainId),\n    checkAddress(poolAddress),\n    checkAddress(accountAddress),\n  ];\n};\n\nexport const checkApiInputWithoutAccount = (chainId, poolAddress) => {\n  return [checkChainId(chainId), checkAddress(poolAddress)];\n};\n\nexport const checkTokenId = (tokenId) => {\n  tokenId = tokenId != null ? tokenId.toString() : tokenId\n  if (/^\\d+$/.test(tokenId)) {\n    return tokenId\n  }\n  throw new Error(`invalid tokenId '${tokenId}'`)\n}\n\nexport const checkAmount = (amount) => {\n  amount = amount != null ? amount.toString() : amount\n  if (/^-?[\\d\\.]+$/.test(amount)) {\n    return amount\n  }\n  throw new Error(`invalid amount '${amount}'`)\n}\n\nexport const checkSymbolId = (symbolId, symbolIds) => {\n  if (symbolId != null) {\n    const index = symbolIds.indexOf(symbolId.toString())\n    if (index > -1) {\n      return index\n    }\n  }\n  throw new Error(`invalid symbolId '${symbolId}' for symbolIds(${symbolIds.join(',')}) `);\n};\n\n// factory\nexport const contractFactory = (klass) => {\n  let instances = {}\n  return (chainId, address, initialBlock='') => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address, initialBlock);\n      return instances[key];\n    }\n  }\n}\n\n// contract\nconst processObjectResult = (val, propList = []) => {\n  return Object.keys(val).reduce((acc, prop) => {\n    if (typeof val[prop] === \"string\" && propList.includes(prop)) {\n      acc[prop] = fromWei(val[prop]);\n    } else {\n      acc[prop] = val[prop];\n    }\n    return acc;\n  }, {});\n};\n\nexport const processResult = (val, propList = []) => {\n  if (Array.isArray(val)) {\n    return val.map((v) => processResult(v, propList));\n  } else if (typeof val === 'object' && val !== null) {\n    return processObjectResult(val, propList);\n  } else if (typeof val === \"string\") {\n    return fromWei(val);\n  } else {\n    return val;\n  }\n};\n\nexport const processMethod = (klass, methodName, propList = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const res = await originMethod.apply(this, args);\n    return processResult(res, propList);\n  };\n  return klass;\n};\n\nexport const processTxMethod = (klass, methodName, toWeiArgPositions = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const newArgs = args.map((arg, index) =>\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\n    );\n    return await originMethod.apply(this, newArgs);\n  };\n  return klass;\n};\n\n// api for v2_lite and option\nexport const getLiquidity = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype['getPoolLiquidity'] = async function () {\n    const res = await this._call('getPoolStateValues', []);\n    this.stateValues = this.stateValues || {}\n    this.stateValues.liquidity = fromWei(res[0]);\n    return this.stateValues.liquidity\n  };\n  return klass\n}\n\nexport const getLastTimestamp = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype['getLastTimestamp'] = async function () {\n    const res = await this._call('getPoolStateValues', []);\n    this.stateValues = this.stateValues || {}\n    this.stateValues.lastTimestamp = res[1];\n    return this.stateValues.lastTimestamp\n  };\n  return klass\n}\nexport const getProtocolFeeAccrued = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype['getProtocolFeeAccrued'] = async function () {\n    const res = await this._call('getPoolStateValues', []);\n    this.stateValues = this.stateValues || {}\n    this.stateValues.protocolFeeAccrued = fromWei(res[2]);\n    return this.stateValues.protocolFeeAccrued;\n  };\n  return klass;\n}","const bTokenPairs = {\n  AMUSDC: 'amUSDC',\n};\n\nconst offchainSymbolPairs = {\n  AXSUSDT: 'AXSUSDT',\n  MANAUSDT: 'MANAUSDT',\n  MBOXUSDT: 'MBOXUSDT',\n  IBSCDEFI: 'iBSCDEFI',\n  IGAME: 'iGAME',\n  ALICEUSDT: 'ALICEUSDT',\n  SANDUSDT: 'SANDUSDT',\n  QUICKUSDT: 'QUICKUSDT',\n  GHSTUSDT: 'GHSTUSDT',\n  AGLDUSDT: 'AGLDUSDT',\n};\n\nexport const normalizeOptionSymbol = (optionSymbol) => {\n  const res = optionSymbol.split('-')\n  if (res.length >= 2) {\n    return res[0]\n  } else {\n    throw new Error(`invalid option symbol:${optionSymbol}`)\n  }\n};\n\nexport const getNormalizedOptionSymbols = (symbols) => {\n  let res = []\n  symbols.forEach((s) => {\n    const volSymbol = normalizeOptionSymbol(s)\n    if (!res.includes(volSymbol)) {\n      res.push(volSymbol)\n    }\n  })\n  return res\n}\n\nexport const getVolatilitySymbols = (symbols) => {\n  return getNormalizedOptionSymbols(symbols).map((s) => `VOL-${s}`)\n}\n\nexport const isUsedRestOracle = (symbol) => {\n  return Object.keys(offchainSymbolPairs).includes(symbol);\n};\n\nexport const mapToSymbol = (symbol) => {\n  if (Object.keys(offchainSymbolPairs).includes(symbol)) {\n    return offchainSymbolPairs[symbol]\n  } else {\n    return symbol\n  }\n}\n\nexport const mapToSymbolInternal = (symbol) => {\n  const index = Object.values(offchainSymbolPairs).indexOf(symbol)\n  if (index > -1) {\n    return Object.keys(offchainSymbolPairs)[index]\n  } else {\n    return symbol\n  }\n}\n\nexport const mapToBToken = (bToken) => {\n  if (Object.keys(bTokenPairs).includes(bToken)) {\n    return bTokenPairs[bToken]\n  } else {\n    return bToken\n  }\n}\n\nexport const mapToBTokenInternal = (bToken) => {\n  const index = Object.values(bTokenPairs).indexOf(bToken)\n  if (index !== -1) {\n    return Object.keys(bTokenPairs)[index]\n  } else {\n    return bToken\n  }\n}\n\nexport const normalizeSymbolUnit = (symbol) => {\n  const prefix = ['USD', 'USDT'];\n  const re = new RegExp(`(${prefix.join('|')})$`);\n  if (typeof symbol === 'string') {\n    return mapToSymbol(symbol).replace(re, '');\n  }\n  console.log(`symbol(${symbol}) is not a string type`);\n  return symbol;\n};\n\nexport const getIndexInfo = (symbol) => {\n  const internalSymbol = mapToSymbolInternal(symbol);\n  const customIndexs = {\n    IGAME: {\n      tokens: ['AXS', 'MANA', 'SAND', 'ALICE', 'TLM', 'DPET', 'SKILL'],\n      url: 'https://docs.deri.finance/products/index/game-index',\n    },\n    IBSCDEFI: {\n      tokens: ['CAKE', 'XVS', 'MDX', 'AUTO', 'BAKE', 'BUNNY'],\n      url: 'https://docs.deri.finance/products/index/bsc-defi-index',\n    },\n    IMEME: {\n      tokens: ['DOGE', 'SHIB', 'ELON', 'LOWB', 'PIG', 'SAFEMOON', 'MONA'],\n      url: 'https://docs.deri.finance/products/index/meme-index',\n    },\n  };\n  if (Object.keys(customIndexs).includes(internalSymbol)) {\n    return customIndexs[internalSymbol];\n  } else {\n    return { tokens: [], url: '' };\n  }\n};","import { validateObjectKeyExist, validateIsArray } from '../utils';\nimport {\n  isUsedRestOracle,\n  mapToBToken,\n  mapToSymbol,\n  getVolatilitySymbols,\n} from './token';\n\nconst validatePoolV2 = (pool) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'router',\n      'initialBlock',\n      'bTokens',\n      'symbols',\n      'chainId',\n      'symbolCount',\n      'bTokenCount',\n    ],\n    pool,\n    ''\n  );\n  validateIsArray(pool['bTokens'], 'bTokens');\n  pool['bTokens'].forEach((prop) => {\n    validateObjectKeyExist(\n      ['bTokenId', 'bTokenSymbol', 'bToken'],\n      prop,\n      'bToken'\n    );\n  });\n  validateIsArray(pool['symbols'], 'symbols');\n  pool['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n};\n\nconst processPoolV2 = (pool) => {\n  // process pool \n  pool['bTokenCount'] = pool['bTokens'].length;\n  pool['symbolCount'] = pool['symbols'].length;\n  pool['bTokens'].forEach((b) => b['bTokenSymbol'] = mapToBToken(b['bTokenSymbol']))\n  pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n};\n\nconst validatePoolV2Lite = (pool) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'initialBlock',\n      'bToken',\n      'bTokenSymbol',\n      'symbols',\n      'chainId',\n      'offchainSymbolIds',\n      'offchainSymbols',\n      'symbolCount',\n    ],\n    pool,\n    ''\n  );\n  validateIsArray(pool['symbols'], 'symbols');\n  pool['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n  validateIsArray(pool['offchainSymbolIds'], 'offchainSymbolIds');\n  validateIsArray(pool['offchainSymbols'], 'offchainSymbols');\n};\n\nconst processPoolV2Lite = (pool) => {\n  // process pool\n  if (!pool['symbolCount']) {\n    pool['symbolCount'] = pool['symbols'].length;\n  }\n  if (!pool['offchainSymbolIds'] && !pool['offchainSymbols']) {\n    pool['offchainSymbolIds'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\n    pool['offchainSymbols'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\n    pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n  }\n};\n\nconst validateConfigV2LiteOpen = (config) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'initialBlock',\n      'bToken',\n      'bTokenSymbol',\n      'symbols',\n      'chainId',\n      'offchainSymbolIds',\n      'offchainSymbols',\n      'symbolCount',\n    ],\n    config,\n    ''\n  );\n  validateIsArray(config['symbols'], 'symbols');\n  config['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n  validateIsArray(config['offchainSymbolIds'], 'offchainSymbolIds');\n};\n\nconst processConfigV2LiteOpen = (config) => {\n  // process config\n  if (!config['symbolCount']) {\n    config['symbolCount'] = config['symbols'].length;\n  }\n  if (!config['offchainSymbolIds'] && !config['offchainSymbols']) {\n    config['offchainSymbolIds'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\n    config['offchainSymbols'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\n    config['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n  }\n};\n\nconst validatePoolOption = (pool) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'initialBlock',\n      'bToken',\n      // 'pricer',\n      'bTokenSymbol',\n      'symbols',\n      'chainId',\n      // 'offchainSymbolIds',\n      // 'offchainSymbols',\n      'symbolCount',\n      'volatilitySymbols',\n    ],\n    pool,\n    ''\n  );\n  validateIsArray(pool['symbols'], 'symbols');\n  pool['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n  // validateIsArray(pool['offchainSymbolIds'], 'offchainSymbolIds');\n  // validateIsArray(pool['offchainSymbols'], 'offchainSymbols');\n  validateIsArray(pool['volatilitySymbols'], 'volatilitySymbols');\n};\n\nconst processPoolOption = (pool) => {\n  // process pool \n  pool['symbolCount'] = pool['symbols'].length;\n  if (!pool['volatilitySymbols']) {\n    // pool['offchainSymbolIds'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\n    // pool['offchainSymbols'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\n    pool['volatilitySymbols'] = getVolatilitySymbols(\n      pool['symbols'].map((s) => s.symbol)\n    ); \n    pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n  }\n};\n\nexport const poolProcessor = {\n  v2: processPoolV2,\n  v2_lite: processPoolV2Lite,\n  v2_lite_open: processConfigV2LiteOpen,\n  option: processPoolOption,\n};\n\nexport const poolValidator = {\n  v2: validatePoolV2,\n  v2_lite: validatePoolV2Lite,\n  v2_lite_open: validateConfigV2LiteOpen,\n  option: validatePoolOption,\n};","import { web3Factory } from '../factory/web3';\nimport { numberToHex } from '../utils/convert';\n\nconst MAX_GAS_AMOUNT = 832731;\n//const RE_ERROR_MSG = /\\\"message\\\":\\s\\\"execution\\sreverted:([\\w\\s]+)\\\"/\nconst RE_ERROR_MSG = /\"message\":\\s\"execution\\sreverted:([\\w\\s]+)\"/\n\nexport class ContractBase {\n  constructor(chainId, contractAddress, contractAbi) {\n    this.chainId = chainId;\n    this.contractAddress = contractAddress;\n    this.contractAbi = contractAbi;\n  }\n\n  async _init() {\n    // re-init web3 and contract when web3 instance is null\n    if (!this.web3) {\n      this.web3 = await web3Factory.get(this.chainId);\n      this.contract = new this.web3.eth.Contract(\n        this.contractAbi,\n        this.contractAddress\n      );\n    }\n  }\n\n  async _call(method, args = []) {\n    let res\n    let retry = 2\n    while (retry > 0) {\n      try {\n        await this._init()\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch(err) {\n        retry -= 1\n        // remove web3 instance to re-init\n        this.web3 = null\n        if (err.toString().includes('Invalid JSON RPC response')) {\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\n        } else {\n          //console.log('error:', err.toString())\n        }\n      }\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`The contract(${this.contractAddress}) '${method}([${args}])' failed with max retry 2.`)\n    }\n    return res\n  }\n\n  async _estimatedGas(method, args = [], accountAddress) {\n    await this._init()\n    let gas = 0;\n    for (let i = 0; i < 2; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (error) {\n        console.log(`-- estimatedGas: ${error}`)\n        // const res = error.toString().split('\\n').join('').match(RE_ERROR_MSG)\n        // if (Array.isArray(res) && res.length >= 2) {\n        //   throw new Error(res[1].trim())\n        // }\n      }\n    }\n    if (gas === 0) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt === null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          //receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _transact(method, args=[], accountAddress) {\n    await this._init()\n    const gas = await this._estimatedGas(method, args, accountAddress)\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods[method](...args).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\n  }\n\n}\n","import { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseContract extends ContractBase {\n  constructor(contractAddress) {\n    super('97', contractAddress, CONTRACT_ABI);\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray]);\n  }\n}\n","//import { DatabaseBaseContract } from './database_base'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseWormholeContract extends ContractBase {\n  constructor(contractAddress) {\n    super('97', contractAddress, CONTRACT_ABI);\n  }\n\n  async signature(accountAddress) {\n    return await this._call('signature', [accountAddress])\n  }\n}\n","//import { DatabaseBaseContract } from './database_base'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseAirdropContract extends ContractBase {\n  constructor(contractAddress) {\n    super('97', contractAddress, CONTRACT_ABI)\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray])\n  }\n}\n","/* eslint-disable */\n// base token contract abi\nexport const bTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const TERC20Abi = [{ \"inputs\": [{ \"internalType\": \"string\", \"name\": \"_name\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"_symbol\", \"type\": \"string\" }, { \"internalType\": \"uint8\", \"name\": \"_decimals\", \"type\": \"uint8\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [{ \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\n// oracle contract abis\nexport const symbolOracleOffChainAbi = [ {\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}, { \"inputs\": [], \"name\": \"signer\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, {\"inputs\":[],\"name\":\"signatory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"} ]\nexport const chainlinkOracleAbi = [{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"event\",\"name\":\"AnswerUpdated\",\"inputs\":[{\"type\":\"int256\",\"name\":\"current\",\"internalType\":\"int256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"NewRound\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"address\",\"name\":\"startedBy\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferRequested\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"acceptOwnership\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AccessControllerInterface\"}],\"name\":\"accessController\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"name\":\"aggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"confirmAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint8\",\"name\":\"\",\"internalType\":\"uint8\"}],\"name\":\"decimals\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"string\",\"name\":\"\",\"internalType\":\"string\"}],\"name\":\"description\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"getAnswer\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"getRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getTimestamp\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"latestAnswer\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestRound\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"latestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestTimestamp\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address payable\"}],\"name\":\"owner\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"phaseAggregators\",\"inputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}],\"name\":\"phaseId\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"proposeAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"proposedAggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedGetRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedLatestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setController\",\"inputs\":[{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"transferOwnership\",\"inputs\":[{\"type\":\"address\",\"name\":\"_to\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"version\",\"inputs\":[]}]\nexport const wrappedOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\nexport const wooOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feed_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\n// activity contract abis\nexport const brokerManagerAbi = [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"SetBroker\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBroker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"setBroker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const pTokenAirdropAbi = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"poolRouterAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AddWhitelist\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AirdropPToken\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"userAddress\", \"type\": \"address\" } ], \"name\": \"addWhitelist\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"airdropPToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getBTokenBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isStartAirdrop\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"ownerAddress\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"startAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"stopAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalAirdropCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalWhitelistCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"withdrawBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n/* eslint-enable */","import { ContractBase } from \"../contract_base\";\nimport { wrappedOracleAbi } from '../abis';\nimport { deriToNatural } from \"../../utils\";\n\nexport class WrappedOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, wrappedOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  // decimals refers https://docs.chain.link/docs/matic-addresses\n  async getPrice() {\n    // console.log('hit wrapped oracle')\n    const res = await this._call('getPrice');\n    if (res) {\n      return deriToNatural(res).toString()\n    }\n  }\n}\n","import { getJsonConfig } from './config';\nimport { DeriEnv } from './env';\nimport { mapToSymbolInternal } from './token';\n\nexport const getOracleConfigList = (version='v2', env) => {\n  const config = getJsonConfig(version, env || DeriEnv.get())\n  return config.oracle\n};\n\nexport const getOracleConfig = (version='v2', chainId, symbol) => {\n  symbol = mapToSymbolInternal(symbol)\n  const oracles = getOracleConfigList(version)\n  const filteredByChainId = oracles.filter((c) =>\n    symbol\n      ? c.chainId === chainId && c.symbol === symbol\n      : c.chainId === chainId\n  );\n  if (filteredByChainId.length > 0) {\n    if (symbol) {\n      return filteredByChainId[0];\n    } else {\n      return filteredByChainId;\n    }\n  }\n  //console.log(`getOracleConfig(): invalid chainId(${chainId}) or symbol(${symbol}).`);\n};\n","// this file is generated by script, don't modify it !!!\nexport const pancakePairAbi = [\n  {\n    \"inputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"sender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount0\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount1\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"Burn\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"sender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount0\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount1\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"sender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount0In\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount1In\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount0Out\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount1Out\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"Swap\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint112\",\n        \"name\": \"reserve0\",\n        \"type\": \"uint112\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint112\",\n        \"name\": \"reserve1\",\n        \"type\": \"uint112\"\n      }\n    ],\n    \"name\": \"Sync\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"DOMAIN_SEPARATOR\",\n    \"outputs\": [{ \"internalType\": \"bytes32\", \"name\": \"\", \"type\": \"bytes32\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"MINIMUM_LIQUIDITY\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"PERMIT_TYPEHASH\",\n    \"outputs\": [{ \"internalType\": \"bytes32\", \"name\": \"\", \"type\": \"bytes32\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" },\n      { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"name\": \"balanceOf\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }],\n    \"name\": \"burn\",\n    \"outputs\": [\n      { \"internalType\": \"uint256\", \"name\": \"amount0\", \"type\": \"uint256\" },\n      { \"internalType\": \"uint256\", \"name\": \"amount1\", \"type\": \"uint256\" }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [{ \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"factory\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getReserves\",\n    \"outputs\": [\n      { \"internalType\": \"uint112\", \"name\": \"_reserve0\", \"type\": \"uint112\" },\n      { \"internalType\": \"uint112\", \"name\": \"_reserve1\", \"type\": \"uint112\" },\n      {\n        \"internalType\": \"uint32\",\n        \"name\": \"_blockTimestampLast\",\n        \"type\": \"uint32\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"_token0\", \"type\": \"address\" },\n      { \"internalType\": \"address\", \"name\": \"_token1\", \"type\": \"address\" }\n    ],\n    \"name\": \"initialize\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"kLast\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }],\n    \"name\": \"mint\",\n    \"outputs\": [\n      { \"internalType\": \"uint256\", \"name\": \"liquidity\", \"type\": \"uint256\" }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"name\": \"nonces\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" },\n      { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" },\n      { \"internalType\": \"uint256\", \"name\": \"deadline\", \"type\": \"uint256\" },\n      { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" },\n      { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" },\n      { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" }\n    ],\n    \"name\": \"permit\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"price0CumulativeLast\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"price1CumulativeLast\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }],\n    \"name\": \"skim\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      { \"internalType\": \"uint256\", \"name\": \"amount0Out\", \"type\": \"uint256\" },\n      { \"internalType\": \"uint256\", \"name\": \"amount1Out\", \"type\": \"uint256\" },\n      { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" },\n      { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }\n    ],\n    \"name\": \"swap\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"sync\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"token0\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"token1\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" },\n      { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { pancakePairAbi } from '../abi/pancakePairAbi.js'\n\nexport class PancakePair extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, pancakePairAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  //  async DOMAIN_SEPARATOR() {\n  //    const res = await this._call('DOMAIN_SEPARATOR', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async MINIMUM_LIQUIDITY() {\n  //    const res = await this._call('MINIMUM_LIQUIDITY', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async PERMIT_TYPEHASH() {\n  //    const res = await this._call('PERMIT_TYPEHASH', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async allowance(, ) {\n  //    const res = await this._call('allowance', [, ])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async balanceOf() {\n  //    const res = await this._call('balanceOf', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async decimals() {\n  //    const res = await this._call('decimals', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async factory() {\n  //    const res = await this._call('factory', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getReserves() {\n    const res = await this._call('getReserves', [])\n    return deleteIndexedKey(res)\n  }\n  //  async kLast() {\n  //    const res = await this._call('kLast', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async name() {\n    const res = await this._call('name', [])\n    return deleteIndexedKey(res)\n  }\n  //  async nonces() {\n  //    const res = await this._call('nonces', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async price0CumulativeLast() {\n    const res = await this._call('price0CumulativeLast', [])\n    return deleteIndexedKey(res)\n  }\n  async price1CumulativeLast() {\n    const res = await this._call('price1CumulativeLast', [])\n    return deleteIndexedKey(res)\n  }\n  //  async symbol() {\n  //    const res = await this._call('symbol', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async token0() {\n  //    const res = await this._call('token0', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async token1() {\n  //    const res = await this._call('token1', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async approve(accountAddress, spender, value) {\n  //    return await this._transact('approve', [spender, value], accountAddress)\n  //  }\n  //  async burn(accountAddress, to) {\n  //    return await this._transact('burn', [to], accountAddress)\n  //  }\n  //  async initialize(accountAddress, _token0, _token1) {\n  //    return await this._transact('initialize', [_token0, _token1], accountAddress)\n  //  }\n  //  async mint(accountAddress, to) {\n  //    return await this._transact('mint', [to], accountAddress)\n  //  }\n  //  async permit(accountAddress, owner, spender, value, deadline, v, r, s) {\n  //    return await this._transact('permit', [owner, spender, value, deadline, v, r, s], accountAddress)\n  //  }\n  //  async skim(accountAddress, to) {\n  //    return await this._transact('skim', [to], accountAddress)\n  //  }\n  //  async swap(accountAddress, amount0Out, amount1Out, to, data) {\n  //    return await this._transact('swap', [amount0Out, amount1Out, to, data], accountAddress)\n  //  }\n  //  async sync(accountAddress) {\n  //    return await this._transact('sync', [], accountAddress)\n  //  }\n  //  async transfer(accountAddress, to, value) {\n  //    return await this._transact('transfer', [to, value], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, value) {\n  //    return await this._transact('transferFrom', [from, to, value], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nimport { processMethod } from \"../../shared/utils/derijsnext.js\";\nimport { bg } from \"../../shared/utils/index.js\";\nimport { MAX_UINT256} from '../config'\nimport { PancakePair } from \"./gen/PancakePair.js\";\n\nconst isUnlocked = (klass) => {\n  klass.prototype[\"isUnlocked\"] = async function (accountAddress, poolAddress) {\n    const allowance = await this.allowance(accountAddress, poolAddress)\n    //console.log(accountAddress, poolAddress)\n    const res = bg(allowance).gt(0)\n    return res\n  };\n  return klass\n};\n\nconst unlock = (klass) => {\n  klass.prototype['unlock'] = async function (accountAddress, poolAddress) {\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  };\n  return klass;\n};\n\nconst getPrice = (klass) => {\n  klass.prototype['getPrice'] = async function() {\n    const [\n      isQuoteToken0,\n      qDecimals,\n      bDecimals,\n      pair,\n      priceCumulativeLast1,\n      priceCumulativeLast2,\n      timestampLast1,\n      timestampLast2,\n    ] = await Promise.all([\n      this.isQuoteToken0(),\n      this.qDecimals(),\n      this.bDecimals(),\n      this.pair(),\n      this.priceCumulativeLast1(),\n      this.priceCumulativeLast2(),\n      this.timestampLast1(),\n      this.timestampLast2(),\n    ]);\n\n    const pancakePair = new PancakePair(this.chainId, pair)\n    let reserveQ, reserveB, timestamp\n    if (isQuoteToken0) {\n      const res = await pancakePair.getReserves();\n      reserveQ = res._reserve0\n      reserveB = res._reserve1\n      timestamp = res._blockTimestampLast\n    } else {\n      const res = await pancakePair.getReserves();\n      reserveB = res._reserve0\n      reserveQ = res._reserve1\n      timestamp = res._blockTimestampLast\n    }\n    const [price0CumulativeLast, price1CumulativeLast] = await Promise.all([\n      pancakePair.price0CumulativeLast(),\n      pancakePair.price1CumulativeLast(),\n    ])\n    let tmpPairState = {}\n\n    if (timestamp !== timestampLast2) {\n      tmpPairState.priceCumulativeLast1 = priceCumulativeLast2;\n      tmpPairState.timestampLast1 = timestampLast2;\n      tmpPairState.priceCumulativeLast2 = isQuoteToken0\n        ? price0CumulativeLast\n        : price1CumulativeLast;\n      tmpPairState.timestampLast2 = timestamp;\n    } else {\n      tmpPairState = {\n        priceCumulativeLast1,\n        priceCumulativeLast2,\n        timestampLast1,\n        timestampLast2,\n      };\n    }\n\n    let price\n    const diff = bg(qDecimals).minus(bDecimals)\n    if (tmpPairState.timestampLast1 !== '0') {\n      //console.log('not equal')\n      price = bg(tmpPairState.priceCumulativeLast2)\n        .minus(tmpPairState.priceCumulativeLast1)\n        .div(\n          bg(tmpPairState.timestampLast2).minus(tmpPairState.timestampLast1)\n        ).times(bg(10).pow(diff)).div(bg(2).pow(112));\n    } else {\n      //console.log('equal')\n      price = bg(reserveB).times(bg(10).pow(diff)).div(reserveQ).toString()\n    }\n    return price\n  }\n  return klass\n}\n\nexport const ERC20Adapter = (klass) => {\n    klass = processMethod(klass, 'totalSupply');\n    //klass = processMethod(klass, 'balanceOf'); // use ERC20.decimals\n\n    klass = isUnlocked(klass);\n    klass = unlock(klass);\n    return klass\n}\n\nexport const chainlinkOracleAdapter= (klass) => {\n    klass = processMethod(klass, 'getPrice');\n    return klass\n}\n\nexport const offChainOracleAdapter= (klass) => {\n    klass = processMethod(klass, 'getPrice');\n    return klass\n}\n\nexport const offChainVolatilityOracleAdapter= (klass) => {\n    klass = processMethod(klass, 'getVolatility');\n    return klass\n}\n\nexport const bTokenOracle1Adapter = (klass) => {\n  //klass = processMethod(klass, 'getPrice');\n  klass = getPrice(klass);\n  return klass;\n};\n\n// export const bTokenSwapper1Adapter = (klass) => {\n//   //klass = processMethod(klass, 'getPrice');\n//   return klass;\n// };\n\nexport const pancakePairAdapter = (klass) => {\n  //klass = processMethod(klass, 'getPrice');\n  return klass;\n};","// this file is generated by script, don't modify it !!!\nexport const TERC20Abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_name\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_symbol\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"_decimals\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nexport const ERC20Abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"pure\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nexport const chainlinkOracleAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"feed_\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"feed\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"feedDecimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getPrice\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nexport const offChainOracleAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"signer_\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"delayAllowance_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"delayAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getPrice\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"price\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"delayAllowance_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setDelayAllowance\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"signer_\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setSigner\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"signer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"timestamp\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"timestamp_\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"price_\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"v_\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"r_\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"s_\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"updatePrice\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nexport const offChainVolatilityOracleAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"signer_\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"delayAllowance_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"delayAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getVolatility\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"delayAllowance_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setDelayAllowance\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"signer_\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setSigner\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"signer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"timestamp\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"timestamp_\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"volatility_\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"v_\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"r_\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"s_\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"updateVolatility\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"volatility\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nexport const TERC20MintLimitAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_name\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_symbol\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"_decimals\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"controller\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"controllerBurn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"controllerMint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"mintAmount\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"mintPeriod\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"mintTimestamp\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setMintAmount\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"period\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setMintPeriod\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nexport const bTokenOracle1Abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"pair_\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"quote_\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"base_\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"isQuoteToken0_\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"bDecimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"base\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getPrice\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"isQuoteToken0\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pair\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"priceCumulativeLast1\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"priceCumulativeLast2\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"qDecimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"quote\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"timestampLast1\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"timestampLast2\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { contractFactory } from '../../shared/utils/derijsnext.js';\nimport { ERC20Adapter, chainlinkOracleAdapter, offChainOracleAdapter, offChainVolatilityOracleAdapter, bTokenSwapper1Adapter, pancakePairAdapter, bTokenOracle1Adapter } from './adapter.js';\n\nimport { TERC20 } from './gen/TERC20.js';\nimport { ERC20 } from './gen/ERC20.js';\nimport { ChainlinkOracle} from './gen/ChainlinkOracle.js';\nimport { OffChainOracle} from './gen/OffChainOracle.js';\nimport { OffChainVolatilityOracle} from './gen/OffChainVolatilityOracle.js';\nimport { TERC20MintLimit } from './gen/TERC20MintLimit.js';\n//import { BTokenSwapper1 } from './gen/BTokenSwapper1.js';\nimport { PancakePair } from './gen/PancakePair.js';\nimport { BTokenOracle1 } from './gen/BTokenOracle1.js';\n\n// ERC20\nexport const ERC20Factory = contractFactory(ERC20Adapter(ERC20));\nexport const TERC20Factory = contractFactory(ERC20Adapter(TERC20)); // for test only\nexport const TERC20MintLimitFactory = contractFactory(ERC20Adapter(TERC20MintLimit)); // for test only\n\n\n// oracle\nexport const symbolOracleChainlinkFactory = contractFactory(chainlinkOracleAdapter(ChainlinkOracle));\nexport const offChainOracleFactory = contractFactory(offChainOracleAdapter(OffChainOracle));\nexport const volatilityOracleOffChainFactory = contractFactory(offChainVolatilityOracleAdapter(OffChainVolatilityOracle));\n\n// swapper\nexport const bTokenOracle1Factory = contractFactory(bTokenOracle1Adapter(BTokenOracle1))\n//export const bTokenSwapper1Factory = contractFactory(bTokenSwapper1Adapter(BTokenSwapper1))\nexport const pancakePairFactory = contractFactory(pancakePairAdapter(PancakePair))\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey, bg } from '../../../shared/utils/index.js'\nimport { ERC20Abi } from '../abi/ERC20Abi.js'\n\nexport class ERC20 extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, ERC20Abi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async allowance(owner, spender) {\n    const res = await this._call('allowance', [owner, spender])\n    return deleteIndexedKey(res)\n  }\n  async _balanceOf(account) {\n    return await this._call('balanceOf', [account])\n  }\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals).toString();\n  }\n\n   async decimals() {\n     const res = await this._call('decimals', [])\n     return deleteIndexedKey(res)\n   }\n   async name() {\n     const res = await this._call('name', [])\n     return deleteIndexedKey(res)\n   }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async approve(accountAddress, spender, amount) {\n    return await this._transact('approve', [spender, amount], accountAddress)\n  }\n  //  async transfer(accountAddress, to, amount) {\n  //    return await this._transact('transfer', [to, amount], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, amount) {\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey, bg } from '../../../shared/utils/index.js'\nimport { TERC20Abi } from '../abi/TERC20Abi.js'\n\nexport class TERC20 extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, TERC20Abi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async allowance(owner, spender) {\n    const res = await this._call('allowance', [owner, spender])\n    return deleteIndexedKey(res)\n  }\n  async _balanceOf(account) {\n    return await this._call('balanceOf', [account])\n  }\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n  async decimals() {\n    const res = await this._call('decimals', [])\n    return deleteIndexedKey(res)\n  }\n  async name() {\n    const res = await this._call('name', [])\n    return deleteIndexedKey(res)\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async approve(accountAddress, spender, amount) {\n    return await this._transact('approve', [spender, amount], accountAddress)\n  }\n  //  async burn(accountAddress, account, amount) {\n  //    return await this._transact('burn', [account, amount], accountAddress)\n  //  }\n  async mint(accountAddress, account, amount) {\n    return await this._transact('mint', [account, amount], accountAddress)\n  }\n  //  async transfer(accountAddress, to, amount) {\n  //    return await this._transact('transfer', [to, amount], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, amount) {\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey, bg } from '../../../shared/utils/index.js'\nimport { TERC20MintLimitAbi } from '../abi/TERC20MintLimitAbi.js'\n\nexport class TERC20MintLimit extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, TERC20MintLimitAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async allowance(owner, spender) {\n    const res = await this._call('allowance', [owner, spender])\n    return deleteIndexedKey(res)\n  }\n  async _balanceOf() {\n    return await this._call('balanceOf', [])\n  }\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n  //  async controller() {\n  //    const res = await this._call('controller', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async decimals() {\n    const res = await this._call('decimals', [])\n    return deleteIndexedKey(res)\n  }\n  //  async mintAmount() {\n  //    const res = await this._call('mintAmount', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async mintPeriod() {\n  //    const res = await this._call('mintPeriod', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async mintTimestamp() {\n  //    const res = await this._call('mintTimestamp', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async name() {\n    const res = await this._call('name', [])\n    return deleteIndexedKey(res)\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async approve(accountAddress, spender, amount) {\n    return await this._transact('approve', [spender, amount], accountAddress)\n  }\n  //  async burn(accountAddress) {\n  //    return await this._transact('burn', [], accountAddress)\n  //  }\n  //  async controllerBurn(accountAddress, account, amount) {\n  //    return await this._transact('controllerBurn', [account, amount], accountAddress)\n  //  }\n  //  async controllerMint(accountAddress, account, amount) {\n  //    return await this._transact('controllerMint', [account, amount], accountAddress)\n  //  }\n  async mint(accountAddress) {\n    return await this._transact('mint', [], accountAddress)\n  }\n  //  async setMintAmount(accountAddress, amount) {\n  //    return await this._transact('setMintAmount', [amount], accountAddress)\n  //  }\n  //  async setMintPeriod(accountAddress, period) {\n  //    return await this._transact('setMintPeriod', [period], accountAddress)\n  //  }\n  //  async transfer(accountAddress, to, amount) {\n  //    return await this._transact('transfer', [to, amount], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, amount) {\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { chainlinkOracleAbi } from '../abi/chainlinkOracleAbi.js'\n\nexport class ChainlinkOracle extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, chainlinkOracleAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  //  async decimals() {\n  //    const res = await this._call('decimals', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async feed() {\n  //    const res = await this._call('feed', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async feedDecimals() {\n  //    const res = await this._call('feedDecimals', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getPrice() {\n    const res = await this._call('getPrice', [])\n    return deleteIndexedKey(res)\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n\n\n}","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { offChainOracleAbi } from '../abi/offChainOracleAbi.js'\n\nexport class OffChainOracle extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, offChainOracleAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  //  async delayAllowance() {\n  //    const res = await this._call('delayAllowance', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getPrice() {\n    const res = await this._call('getPrice', [])\n    return deleteIndexedKey(res)\n  }\n  //  async price() {\n  //    const res = await this._call('price', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async signer() {\n    const res = await this._call('signer', [])\n    return deleteIndexedKey(res)\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  //  async timestamp() {\n  //    const res = await this._call('timestamp', [])\n  //    return deleteIndexedKey(res)\n  //  }\n\n  // tx\n  //  async setDelayAllowance(accountAddress, delayAllowance_) {\n  //    return await this._transact('setDelayAllowance', [delayAllowance_], accountAddress)\n  //  }\n  //  async setSigner(accountAddress, signer_) {\n  //    return await this._transact('setSigner', [signer_], accountAddress)\n  //  }\n  //  async updatePrice(accountAddress, timestamp_, price_, v_, r_, s_) {\n  //    return await this._transact('updatePrice', [timestamp_, price_, v_, r_, s_], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { offChainVolatilityOracleAbi } from '../abi/offChainVolatilityOracleAbi.js'\n\nexport class OffChainVolatilityOracle extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, offChainVolatilityOracleAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  //  async delayAllowance() {\n  //    const res = await this._call('delayAllowance', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getVolatility() {\n    const res = await this._call('getVolatility', [])\n    return deleteIndexedKey(res)\n  }\n  async signer() {\n    const res = await this._call('signer', [])\n    return deleteIndexedKey(res)\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  //  async timestamp() {\n  //    const res = await this._call('timestamp', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async volatility() {\n  //    const res = await this._call('volatility', [])\n  //    return deleteIndexedKey(res)\n  //  }\n\n  // tx\n  //  async setDelayAllowance(accountAddress, delayAllowance_) {\n  //    return await this._transact('setDelayAllowance', [delayAllowance_], accountAddress)\n  //  }\n  //  async setSigner(accountAddress, signer_) {\n  //    return await this._transact('setSigner', [signer_], accountAddress)\n  //  }\n  //  async updateVolatility(accountAddress, timestamp_, volatility_, v_, r_, s_) {\n  //    return await this._transact('updateVolatility', [timestamp_, volatility_, v_, r_, s_], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { bTokenOracle1Abi } from '../abi/bTokenOracle1Abi.js'\n\nexport class BTokenOracle1 extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, bTokenOracle1Abi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async bDecimals() {\n    const res = await this._call('bDecimals', [])\n    return deleteIndexedKey(res)\n  }\n  //  async base() {\n  //    const res = await this._call('base', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async isQuoteToken0() {\n    const res = await this._call('isQuoteToken0', [])\n    return deleteIndexedKey(res)\n  }\n  async pair() {\n    const res = await this._call('pair', [])\n    return deleteIndexedKey(res)\n  }\n  async priceCumulativeLast1() {\n    const res = await this._call('priceCumulativeLast1', [])\n    return deleteIndexedKey(res)\n  }\n  async priceCumulativeLast2() {\n    const res = await this._call('priceCumulativeLast2', [])\n    return deleteIndexedKey(res)\n  }\n  async qDecimals() {\n    const res = await this._call('qDecimals', [])\n    return deleteIndexedKey(res)\n  }\n  //  async quote() {\n  //    const res = await this._call('quote', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async timestampLast1() {\n    const res = await this._call('timestampLast1', [])\n    return deleteIndexedKey(res)\n  }\n  async timestampLast2() {\n    const res = await this._call('timestampLast2', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async getPrice(accountAddress) {\n  //    return await this._transact('getPrice', [], accountAddress)\n  //  }\n\n}","import { getOracleConfig } from '../config/oracle';\nimport { normalizeChainId } from './validate';\nimport { DeriEnv } from '../config/env';\nimport { oracleFactory, wrappedOracleFactory } from '../factory/oracle';\nimport { deriToNatural } from './convert';\nimport {\n  mapToSymbolInternal,\n  mapToBTokenInternal,\n  normalizeOptionSymbol,\n} from '../config/token';\nimport { PRESERVED_SYMBOLS } from '../config/version';\nimport { offChainOracleFactory } from '../contract/factory';\n\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n\nexport const getPriceInfoForV1 = async(symbol) => {\n  const env = DeriEnv.get();\n  let method = 'get_signed_price'\n  let url\n  let baseUrl =\n    env === 'prod'\n      ? `https://oracle4.deri.finance/${method}`\n      : `https://oracle2.deri.finance/${method}`;\n  const addSymbolParam = (url, symbol) =>\n    `${url}?symbol=${symbol}`;\n  if (symbol) {\n    url = addSymbolParam(baseUrl, symbol);\n  } else {\n    url = baseUrl;\n  }\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\n    if (res.ok) {\n      priceInfo = await res.json();\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\n        return priceInfo.data\n        //return deriToNatural(priceInfo.data.price).toString()\n      }\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(`getPriceFromV1 exceed max retry(3): ${symbol} => ${JSON.stringify(priceInfo)}`);\n  }\n}\n\n\nexport const getOracleUrl = (symbol, type='futures') => {\n  const env = DeriEnv.get();\n  //if (/^[0-9]+$/.test(symbolId.toString())) {\n  let method = 'get_signed_price'\n  if (type === 'option') {\n    method = 'get_signed_volatility'\n  }\n  if (PRESERVED_SYMBOLS.includes(symbol)) {\n    method = 'get_price'\n    symbol = `${symbol}_v2_bsc`\n  }\n  let baseUrl =\n    env === 'prod'\n      ? `https://oracle4.deri.finance/${method}`\n      : `https://oracle2.deri.finance/${method}`;\n  const addSymbolParam = (url, symbol) =>\n    `${url}?symbol=${symbol}`;\n\n  if (symbol) {\n    return addSymbolParam(baseUrl, symbol);\n  } else {\n    return baseUrl;\n  }\n};\n\nexport const getPriceFromRest = async(symbol, type='futures') => {\n  const res = await getPriceInfo(symbol, type)\n  if (type === 'futures' && res.price) {\n    return PRESERVED_SYMBOLS.includes(symbol) ? res.price : deriToNatural(res.price).toString()\n  } else if (type === 'option' && res.volatility) {\n    return deriToNatural(res.volatility).toString()\n  } else {\n    throw new Error(`getPrice() invalid format: ${JSON.stringify(res)}`)\n  }\n}\n\n// from oracle rest api\nexport const getPriceInfo = async (symbol, type='futures') => {\n  symbol = mapToBTokenInternal(symbol)\n  let url = getOracleUrl(symbol, type);\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    try {\n      res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\n      if (res.ok) {\n        priceInfo = await res.json();\n        if (priceInfo.status.toString() === '200' && priceInfo.data) {\n          return priceInfo.data\n        }\n      }\n    } catch(err) {\n      //console.log(err.toString())\n      retry -= 1;\n    }\n  }\n  if (retry === 0) {\n    throw new Error(`fetch oracle info exceed max retry(3): ${symbol} => ${JSON.stringify(priceInfo)}`);\n  }\n};\n\nexport const getOracleInfosFromRest = async (symbolList, type = 'future') => {\n  let url = getOracleUrl(null, type);\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    try {\n      res = await fetch(url, {\n        mode: \"cors\",\n        cache: \"no-cache\",\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(symbolList),\n      });\n      if (res.ok) {\n        priceInfo = await res.json();\n        if (priceInfo.status.toString() === \"200\" && priceInfo.data) {\n          return priceInfo.data;\n        }\n      }\n    } catch (err) {}\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(`getOracleInfosFromRest exceed max retry(3): ${symbolList}`);\n  }\n};\n\n// cache\n// export const getOraclePriceFromCache = (function () {\n//   console.log('-- getOraclePriceFromCache will remove in next version ' )\n//   let cache = {};\n//   return {\n//     async get(chainId, symbol = '_', version = 'v2') {\n//       const key = `${chainId}_${symbol}_${version}`\n//       if (\n//         Object.keys(cache).includes(key) &&\n//         Math.floor(Date.now() / 1000) - cache[key].timestamp < 5\n//       ) {\n//         return cache[key].data;\n//       } else {\n//         const data = await getOraclePrice(chainId, symbol, version);\n//         cache[key] = {\n//           data,\n//           timestamp: Math.floor(Date.now() / 1000),\n//         };\n//         return cache[key].data;\n//       }\n//     },\n//   };\n// })();\n\nexport const getPriceInfos = async (symbolList) => {\n  let url = getOracleUrl();\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    res = await fetch(url, {\n      mode: 'cors',\n      cache: 'no-cache',\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(symbolList),\n    });\n    if (res.ok) {\n      priceInfo = await res.json();\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\n        return priceInfo.data\n      }\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(`fetch oracle infos exceed max retry(3): ${symbolList} ${JSON.stringify(priceInfo)}`);\n  }\n};\n\nexport const oraclePricesCache = (function(){\n  const cache = {}\n  const pending = {}\n  return {\n    async get(symbols=[]) {\n      const key = symbols.join('_')\n      if (\n        !Object.keys(cache).includes(key) ||\n        Math.floor(Date.now() / 1000) - cache[key].timestamp > 3\n      ) {\n        const timestamp = Math.floor(Date.now() / 1000);\n        // pending is exit\n        if (Object.keys(pending).includes(key)) {\n          let retry = 10;\n          while (retry > 0) {\n            await delay(390);\n            if (!Object.keys(pending).includes(key)) {\n              //console.log('hit pending with cache');\n              return cache[key].data;\n            }\n          }\n          if (retry === 0) {\n            //console.log('hit pending expired');\n            const data = await getPriceInfos(symbols);\n            cache[key] = {\n              data,\n              timestamp,\n            };\n            return cache[key].data;\n          }\n        } else {\n          pending[key] = true;\n          try {\n            //console.log('hit new');\n            const data = await getPriceInfos(symbols);\n            cache[key] = {\n              data,\n              timestamp,\n            };\n            return cache[key].data;\n          } catch (err) {\n          } finally {\n            delete pending[key];\n          }\n        }\n      } else {\n        //console.log('hit cache');\n        return cache[key].data;\n      }\n    }\n  }\n})()\n\nexport const RestOracle = (symbol) => {\n  return {\n    getPrice: async function () {\n      return getPriceFromRest(symbol)\n    }\n  }\n};\n\nexport const getOraclePrice = async (chainId, symbol, version='v2') => {\n  chainId = normalizeChainId(chainId);\n  symbol = mapToSymbolInternal(symbol)\n  const config = getOracleConfig(version, chainId, symbol);\n  if (config && config.address) {\n    const oracle = oracleFactory(\n      chainId,\n      config.address,\n      symbol,\n      config.decimal,\n    );\n    return await oracle.getPrice();\n  } else {\n    // for new added symbol and not updated to config yet\n    const priceInfo = await getPriceInfo(symbol, version);\n    return deriToNatural(priceInfo.price).toString();\n  }\n};\n\nexport const getOraclePrice2 = async (chainId, symbol, oracleAddress, version='v2_lite') => {\n  chainId = normalizeChainId(chainId);\n  symbol = mapToSymbolInternal(symbol)\n  if (oracleAddress !== '') {\n    const oracle = wrappedOracleFactory(chainId, oracleAddress)\n    return await oracle.getPrice();\n  } else {\n    // for new added symbol and not updated to config yet\n    const priceInfo = await getPriceInfo(symbol, version);\n    return deriToNatural(priceInfo.price).toString();\n  }\n};\n\n// cache\nexport const getOraclePriceFromCache2 = (function () {\n  let cache = {};\n  return {\n    async get(chainId, symbol = '_', oracleAddress, version = 'v2_lite') {\n      const key = `${chainId}_${symbol}_${oracleAddress}`\n      if (\n        Object.keys(cache).includes(key) &&\n        Math.floor(Date.now() / 1000) - cache[key].timestamp < 5\n      ) {\n        return cache[key].data;\n      } else {\n        const data = await getOraclePrice2(chainId, symbol, oracleAddress, version);\n        cache[key] = {\n          data,\n          timestamp: Math.floor(Date.now() / 1000),\n        };\n        return cache[key].data;\n      }\n    },\n  };\n})();\n\n// export const getOraclePriceForOption = async (chainId, symbol) => {\n//   return await getOraclePrice(chainId, normalizeOptionSymbol(symbol), 'option');\n// };\n\n// for viewer use\n// export const getOraclePricesForOption = async (chainId, symbols) => {\n//   const oracleSymbols = symbols\n//     .map((i) => normalizeOptionSymbol(i))\n//     .filter((value, index, self) => self.indexOf(value) === index);\n//   const oracleSymbolPrices = await Promise.all(\n//     oracleSymbols.reduce(\n//       (acc, i) => acc.concat([getOraclePrice(chainId, i, 'option')]),\n//       []\n//     )\n//   );\n//   return symbols.map((s) => {\n//     return toWei(oracleSymbolPrices[oracleSymbols.indexOf(normalizeOptionSymbol(s))]);\n//   });\n// };\n\n// // for tx use\n// export const getOracleVolatilityForOption = async (symbols) => {\n//   const volSymbols = getVolatilitySymbols(symbols)\n//   //volSymbols.map((s) => `VOL-${s.toUpperCase()}`)\n\n//   const volatilities = await Promise.all(\n//     volSymbols.reduce((acc, i) => acc.concat([getPriceInfo(i, 'option')]), [])\n//   );\n//   //return volatilities;\n//   return symbols.map((s) => {\n//     return volatilities[volSymbols.indexOf(`VOL-${normalizeOptionSymbol(s)}`)];\n//   });\n// };\n\n// for viewer use\nexport const getOracleVolatilitiesForOption = async (symbols) => {\n  const oracleSymbols = symbols\n    .map((i) => normalizeOptionSymbol(i))\n    .filter((value, index, self) => self.indexOf(value) === index);\n  const res = await getOracleInfosFromRest(oracleSymbols.map((os) => `VOL-${os}`), 'option')\n  const volatilities = oracleSymbols.map((s) => res[`VOL-${s}`])\n  return symbols.map((s) => {\n    return volatilities[oracleSymbols.indexOf(normalizeOptionSymbol(s))];\n  });\n};\n\n// check symbol is used offchain oracle\nexport const checkOffChainOracleSymbol = async (chainId, oracleAddress, symbol) => {\n  try {\n    await offChainOracleFactory(chainId, oracleAddress).signer()\n    return symbol\n  } catch (err) {\n  }\n  try {\n    await offChainOracleFactory(chainId, oracleAddress).signatory()\n    return symbol\n  } catch (err) {\n  }\n  return \"\"\n};","import { ContractBase } from \"../contract_base\";\nimport { symbolOracleOffChainAbi } from '../abis';\nimport { deriToNatural } from '../../utils';\n\nexport class SymbolOracleOffChain extends ContractBase {\n  constructor(chainId, address) {\n    super(chainId, address, symbolOracleOffChainAbi);\n  }\n  async getPrice() {\n    const res = await this._call('getPrice', []);\n    return deriToNatural(res);\n  }\n  async signer() {\n    await this._init();\n    const res = await this.contract.methods['signer']().call();\n    return res;\n  }\n  async signatory() {\n    await this._init();\n    const res = await this.contract.methods['signatory']().call();\n    return res;\n  }\n}","import { ContractBase } from \"../contract_base\";\nimport { wooOracleAbi } from '../abis';\nimport { deriToNatural } from \"../../utils\";\n\nexport class WooOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, wooOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  async getPrice() {\n    //console.log('hit woo oracle')\n    const res = await this._call('getPrice');\n    if (res) {\n      return deriToNatural(res).toString()\n    }\n  }\n}\n","import { isUsedRestOracle } from '../config/token';\nimport { RestOracle } from '../utils/oracle';\nimport { WrappedOracle } from '../contract/oracle/wrapped_oracle';\nimport { factory } from '../utils/factory';\nimport { SymbolOracleOffChain } from '../contract/oracle/symbol_oracle_off_chain';\nimport { WooOracle } from '../contract/oracle/woo_oracle';\n\nconst wooOracleAddresses = [\n  '0xC686B6336c0F949EAdFa5D61C4aAaE5Fe0687302',\n  '0x60Dda0aD29f033d36189bCe4C818fe9Ce3a95206',\n  '0xa356c0559e0DdFF9281bF8f061035E7097a84Fa4',\n]\n\nexport const oracleFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, symbol, decimal = '18') => {\n    const key = address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      if (isUsedRestOracle(symbol)) {\n        instanceMap[key] = RestOracle(symbol);\n      } else if (wooOracleAddresses.includes(address)) {\n        instanceMap[key] = wooOracleFactory(chainId, address, symbol, decimal);\n      } else if (['56', '137', '97', '80001'].includes(chainId)) {\n        instanceMap[key] = wrappedOracleFactory(chainId, address, symbol, decimal);\n      } else {\n        throw new Error(\n          `please setup oracle contract for the chain(${chainId})`\n        );\n      }\n      return instanceMap[key];\n    }\n  };\n})();\n\nexport const wrappedOracleFactory = factory(WrappedOracle);\nexport const wooOracleFactory = factory(WooOracle);\nexport const symbolOracleOffChainFactory = factory(SymbolOracleOffChain);\n","import {\n  getDBAddress,\n  getDBWormholeAddress,\n  getDBAirdropAddress,\n  DeriEnv,\n} from '../config';\nimport {\n  DatabaseAirdropContract,\n  DatabaseContract,\n  DatabaseWormholeContract,\n} from '../contract';\n\nexport const databaseFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseActivityFactory = (() => {\n  const databaseInstanceMap = {};\n  return () => {\n    const address = DeriEnv.get() === 'prod' ? '0x75E04C816F206939a92AE7B23015ce3ef21aE571' : '0x7C1267188379f57d92e640E519151229E1eA5565'\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseDeriVoteFactory = (() => {\n  const databaseInstanceMap = {};\n  return () => {\n    const address =\n      DeriEnv.get() === 'prod'\n        ? '0x9Ced1529C238bD36B3A05cECF979a30c0C40b286'\n        : '0x7C1267188379f57d92e640E519151229E1eA5565';\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseWormholeFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBWormholeAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseWormholeContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseAirdropFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAirdropAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    //console.log('---airdrop key', key)\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseAirdropContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n","import { factory } from '../../utils/factory';\nimport { BToken } from '../../contract/b_token';\nimport { TERC20 } from '../../contract/TERC20';\n\nexport const bTokenFactory = factory(BToken);\nexport const TERC20Factory = factory(TERC20)","import { deriToNatural, bg } from '../utils'\nimport { MAX_UINT256} from '../config'\nimport { ContractBase } from './contract_base'\nimport { bTokenAbi } from './abis';\n\n\nexport class BToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, bTokenAbi);\n  }\n  // === query ===\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n  async _balanceOf(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n\n  async isUnlocked(accountAddress, poolAddress) {\n    const allowance = await this._call('allowance', [\n      accountAddress,\n      poolAddress,\n    ]);\n    return bg(allowance).gt(0);\n  }\n\n  // === transaction ===\n  async unlock(accountAddress, poolAddress) {\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  }\n}","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from './contract_base'\nimport { deleteIndexedKey } from '../utils'\nimport { TERC20Abi } from './abis'\n\nexport class TERC20 extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, TERC20Abi)\n  }\n\n  // query\n  async allowance(owner, spender) {\n    const res = await this._call('allowance', [owner, spender])\n    return deleteIndexedKey(res)\n  }\n  async balanceOf(account) {\n    const res = await this._call('balanceOf', [account])\n    return deleteIndexedKey(res)\n  }\n  //  async decimals() {\n  //    const res = await this._call('decimals', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async name() {\n  //    const res = await this._call('name', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async approve(accountAddress, spender, amount) {\n    return await this._transact('approve', [spender, amount], accountAddress)\n  }\n  // only for testnet\n  async mint(accountAddress) {\n    return await this._transact('mint', [], accountAddress)\n  }\n  //  async transfer(accountAddress, to, amount) {\n  //    return await this._transact('transfer', [to, amount], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, amount) {\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  //  }\n\n}","import { deriToNatural, bg } from '../../utils';\nimport { MAX_UINT256 } from '../../config';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DeriContract extends ContractBase {\n  constructor(chainId, contractAddress ) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n  }\n\n  async isUnlocked(accountAddress, poolAddress) {\n    let allowance = await this._call('allowance', [\n      accountAddress,\n      poolAddress,\n    ]);\n    return deriToNatural(allowance).gt(0);\n  }\n  async unlock(accountAddress, poolAddress) {\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n\n  async _balanceOf(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n}\n","import { numberToHex } from '../../utils'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"\",\"deployedBytecode\":\"\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\n/* eslint-enable */\n\nexport class MiningVaultPool extends ContractBase {\n  constructor(chainId, contractAddress ) {\n    super(chainId, contractAddress, CONTRACT_ABI['abi']);\n  }\n  async mintDToken(accountAddress, ...args) {\n    await this._init()\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    //console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import { numberToHex } from '../../utils'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class MiningVaultRouter extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async mint(accountAddress, ...args) {\n    await this._init()\n    //console.log(accountAddress, args)\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    //console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    //console.log('txRaw', txRaw)\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import { getDeriConfig } from '../../config';\nimport { naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class WormholeContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI );\n  }\n  async freeze(accountAddress, amount, toChainId) {\n    const { wormholeAddress: toWormholeAddress } = getDeriConfig(\n      toChainId\n    );\n    return this._transact(\n      'freeze',\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\n      accountAddress\n    );\n  }\n\n  async mintDeri(\n    accountAddress,\n    amount,\n    fromChainId,\n    fromWormhole,\n    fromNonce,\n    v,\n    r,\n    s\n  ) {\n    return this._transact(\n      'claim',\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\n      accountAddress\n    );\n  }\n}\n","import { DeriContract } from \"../../contract/deri/deri\";\nimport { MiningVaultPool } from \"../../contract/deri/mining_vault_pool\";\nimport { MiningVaultRouter } from \"../../contract/deri/mining_vault_router\";\nimport { WormholeContract } from \"../../contract/deri/wormhole\";\nimport { factory } from \"../../utils\"\n\n\nexport const deriFactory = factory(DeriContract)\n\nexport const wormholeFactory = factory(WormholeContract)\n\nexport const miningVaultRouterFactory = factory(MiningVaultRouter)\n\nexport const miningVaultPoolFactory = factory(MiningVaultPool)","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class SlpPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    const res = await this._call('userInfo', [152, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class ClpPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('addLiquidity', args, accountAddress);\n  }\n\n  async removeLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('removeLiquidity', args, accountAddress);\n  }\n\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n    };\n  }\n\n  async getStateValues() {\n    const res = await this._call('getStateValues');\n    return {\n      liquidity: deriToNatural(res),\n    };\n  }\n\n  async getLiquidity() {\n    const res = await this._call('getStateValues');\n    if (res && res.liquidity) {\n      return deriToNatural(res.liquidity);\n    }\n    throw new Error(\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\n    );\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class Clp2Pool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    //console.log('hit clp2')\n    const res = await this._call('userInfo', [391, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}","import { SlpPool } from '../../contract/lp_pool/slp_pool'\nimport { ClpPool } from '../../contract/lp_pool/clp_pool'\nimport { Clp2Pool } from '../../contract/lp_pool/clp2_pool'\n\nexport const slpPoolFactory = (function () {\n  const slpPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\n      return slpPoolInstanceMap[key];\n    }\n    const slpPool = new SlpPool(chainId, contractAddress);\n    slpPoolInstanceMap[key] = slpPool;\n    return slpPool;\n  };\n})();\n\nexport const clpPoolFactory = (function () {\n  const clpPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\n      return clpPoolInstanceMap[key];\n    }\n    const clpPool = new ClpPool(chainId, contractAddress);\n    clpPoolInstanceMap[key] = clpPool;\n    return clpPool;\n  };\n})();\n\nexport const clp2PoolFactory = (function () {\n  const clp2PoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\n      return clp2PoolInstanceMap[key];\n    }\n    const clp2Pool = new Clp2Pool(chainId, contractAddress);\n    clp2PoolInstanceMap[key] = clp2Pool;\n    return clp2Pool;\n  };\n})();\n\n// export const lpPoolFactory = (function () {\n//   const lpPoolInstanceMap = {};\n//   return (chainId, contractAddress, isProvider = false) => {\n//     let key;\n//     if (isProvider) {\n//       key = `${chainId}.${contractAddress}.isProvider`;\n//     } else {\n//       key = `${chainId}.${contractAddress}`;\n//     }\n//     if (Object.keys(lpPoolInstanceMap).includes(key)) {\n//       return lpPoolInstanceMap[key];\n//     } else {\n//       let lpPool;\n//       const { type } = getLpContractAddress(chainId, contractAddress);\n//       console.log(`lp type: ${type}`);\n//       if (type === 'slp') {\n//         lpPool = new SlpPool(chainId, contractAddress, isProvider);\n//       } else if (type === 'clp') {\n//         lpPool = new ClpPool(chainId, contractAddress, isProvider);\n//       }\n//       lpPoolInstanceMap[key] = lpPool;\n//       return lpPool;\n//     }\n//   };\n// })();","import { factory } from '../../utils/factory';\nimport { BrokerManager } from '../../contract/activity/broker_manager';\nimport { PTokenAirdrop } from '../../contract/activity/ptoken_airdrop';\n\nexport const brokerManagerFactory = factory(BrokerManager);\nexport const pTokenAirdropFactory = factory(PTokenAirdrop);\n","import { ContractBase } from \"../contract_base\";\nimport { brokerManagerAbi } from '../abis';\n\nexport class BrokerManager extends ContractBase {\n  constructor(chainId, address) {\n    super(chainId, address, brokerManagerAbi)\n  }\n  // query\n  async getBroker(accountAddress) {\n    return await this._call('getBroker', [accountAddress])\n  }\n\n  // transaction\n  async setBroker(accountAddress, brokerAddress) {\n    return await this._transact(\n      'setBroker',\n      [brokerAddress],\n      accountAddress\n    );\n  }\n}","import { ContractBase } from '../contract_base'\nimport { pTokenAirdropAbi } from '../abis'\n\nexport class PTokenAirdrop extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, pTokenAirdropAbi)\n  }\n  async getBTokenBalance() {\n    return await this._call('getBTokenBalance', [])\n  }\n  async totalWhitelistCount() {\n    return await this._call('totalWhitelistCount', [])\n  }\n  async airdropPToken(accountAddress) {\n    return await this._transact('airdropPToken', [], accountAddress)\n  }\n}","import { hexToNumber, fromWei } from '../utils';\nimport { web3Factory } from '../factory';\nimport { normalizeAddress } from '../utils';\n\n/**\n * check ethereum client status for web browser\n * @function\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.isMetaMask - check if it is MetaMask client\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const hasWallet = () => {\n  if (window.ethereum && window.ethereum.isMetaMask) {\n    return { success: true, isMetaMask: true };\n  }\n  return {\n    success: false,\n    error:\n      'The browser is not support ethereum wallet, please install MetaMask to proceed.',\n  };\n};\n\n/**\n *  Connect wallet using MetaMask account\n * @async\n * @function\n * @param {function} [handleChainChanged] - Callback when chainId changed\n * @param {function} [handleAccountChanged]  - callback when account changed\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.chainId - chain Id\n * @returns {string} response.account - account address\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const connectWallet = async (\n  handleChainChanged,\n  handleAccountChanged\n) => {\n  if (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {\n    const accounts = await window.ethereum.request({\n      method: 'eth_requestAccounts',\n    });\n    const chainId = parseInt(\n      await window.ethereum.request({ method: 'net_version' })\n    );\n    // const chainId = hexToNumber(\n    //   await window.ethereum.request({ method: 'eth_chainId' })\n    // );\n    const account = Array.isArray(accounts) && accounts[0];\n\n    // await web3.eth.requestAccounts().then(console.log)\n    window.ethereum.on('accountsChanged', (accounts) => {\n      let account;\n      if (accounts.length > 0) {\n        account = accounts[0];\n      } else {\n        account = '';\n      }\n      if (typeof handleAccountChanged === 'function') {\n        handleAccountChanged(account);\n      } else {\n        window.location.reload();\n      }\n      //console.log('accountChanged', account);\n    });\n    window.ethereum.on('chainChanged', (chainId) => {\n      let res = hexToNumber(chainId);\n      if (typeof handleChainChanged === 'function') {\n        handleChainChanged(res);\n      } else {\n        window.location.reload();\n      }\n      //console.log('chainChanged', res);\n    });\n    return { success: true, account, chainId };\n  }\n  return {\n    success: false,\n    error: 'Cannot connect wallet, please install MetaMask.',\n  };\n};\n\nexport const getUserWalletBalance = async (chainId, walletAddress) => {\n  //const web3 = web3Factory(chainId);\n  walletAddress = normalizeAddress(walletAddress)\n  const web3 = await web3Factory.get(chainId);\n  const balance = await web3.eth.getBalance(walletAddress);\n  return fromWei(balance);\n};\n","import { databaseFactory, databaseAirdropFactory } from '../factory';\nimport {\n  toChecksumAddress,\n  getNetworkName,\n  deriToString,\n  deriToBool,\n  deriToNatural,\n  //getPoolContractAddress,\n} from '../utils';\nimport { getPoolV1Config } from '../config/pool_v1'\n// import { getLiquidityUsed } from \"./contractApi\";\n\nexport const getUserInfo = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v`,\n      `${userAddress}.claim.r`,\n      `${userAddress}.claim.s`,\n      `${userAddress}.claim.valid`,\n    ])\n    .catch((err) => console.log('getUserInfo', err));\n  if (res) {\n    const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v: deriToString(v),\n      r,\n      s,\n      valid: deriToBool(valid),\n    };\n  }\n};\n\nexport const getUserInfoHarvest = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.harvest.lp`,\n      `${userAddress}.claim.harvest.trade`,\n    ])\n    .catch((err) => console.log('getUserInfoHarvest', err));\n  if (res) {\n    const [harvestLp, harvestTrade] = res;\n    return {\n      lp: deriToNatural(harvestLp).toString(),\n      trade: deriToNatural(harvestTrade).toString(),\n    };\n  }\n};\n\nexport const getUserInfoTotal = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([`${userAddress}.claim.total`])\n    .catch((err) => console.log('getUserInfoTotal', err));\n  if (res) {\n    const [total] = res;\n    return {\n      total: deriToNatural(total).toString(),\n    };\n  }\n};\n\n/**\n * Get user claim info from database\n * @async\n * @method\n * @param {string} userAddress - account address\n * @returns {Object} response\n * @returns {string} resposne.chainId\n * @returns {BigNumber} response.amount\n * @returns {string} response.deadline\n * @returns {string} response.nonce\n * @returns {string} response.v\n * @returns {string} response.r\n * @returns {string} response.s\n * @returns {bool} response.valid\n * @returns {BigNumber} response.lp\n * @returns {BigNumber} response.trade\n * @returns {string} response.total\n */\nexport const getUserInfoAll = async (userAddress) => {\n  const [userInfo, userInfoHarvest, userInfoTotal] = await Promise.all([\n    getUserInfo(userAddress),\n    getUserInfoHarvest(userAddress),\n    getUserInfoTotal(userAddress),\n  ]);\n  return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\n};\n\n/**\n * Get pool liquidity\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {symbol} response.symbol\n */\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    //const { symbol } = getPoolV1Config(chainId, poolAddress)\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        //symbol,\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n  return {\n    liquidity: ''\n  }\n};\n\nexport const getPoolLiquidityAll = async (pools) => {\n  // use the dev database\n  const db = databaseFactory();\n  if (Array.isArray(pools)) {\n    const keys = pools.reduce((acc, pool) => {\n      if (pool.version === 'v2' && pool.bTokenId) {\n        return acc.concat([\n          `${pool.chainId}.${pool.pool}.liquidity${pool.bTokenId}`,\n        ]);\n      } else {\n        return acc.concat([`${pool.chainId}.${pool.pool}.liquidity`]);\n      }\n    }, []);\n    try {\n      const res = await db.getValues(keys);\n      if (res) {\n        return res.map((i) => deriToNatural(i));\n      }\n    } catch (err) {\n      console.log(err.toString());\n    }\n    return [];\n  }\n};\n\nexport const getPoolInfoApyAll = async (pools) => {\n  // use the dev database\n  const db = databaseFactory(true);\n  if (Array.isArray(pools)) {\n    const keys = pools.reduce((acc, pool) => {\n      const poolNetwork = getNetworkName(pool.chainId.toString());\n      if (pool.version === 'v2' && pool.bTokenId) {\n        return acc.concat([`${poolNetwork}.${pool.pool}.apy${pool.bTokenId}`]);\n      } else {\n        return acc.concat([`${poolNetwork}.${pool.pool}.apy`]);\n      }\n    }, []);\n    try {\n      console.log('keys', keys)\n      const res = await db.getValues(keys);\n      if (res) {\n        return res.map((i) => deriToNatural(i));\n      }\n    } catch (err) {\n      console.log(err.toString());\n    }\n    return [];\n  }\n};\n\n/**\n * Get pool apy\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.apy2`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, apy2, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        apy2: deriToNatural(apy2).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\n// export const getClpPoolInfoApy = async (chainId, poolAddress) => {\n//   const db = databaseFactory(true);\n//   try {\n//     const poolNetwork = getNetworkName(chainId);\n//     const res = await db\n//       .getValues([\n//         `${poolNetwork}.${poolAddress}.apy`,\n//         `${poolNetwork}.${poolAddress}.apy2`,\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\n//       ])\n//       .catch((err) => console.log('getPoolInfoApy', err));\n//     if (res) {\n//       const [apy, apy2, volume1h, volume24h] = res;\n//       return {\n//         apy: deriToNatural(apy).toString(),\n//         apy2: deriToNatural(apy2).toString(),\n//         volume1h: deriToNatural(volume1h).toString(),\n//         volume24h: deriToNatural(volume24h).toString(),\n//       };\n//     }\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n\n/**\n * Get user info of the pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} userAddress\n * @returns {Object} response\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\n  const db = databaseFactory(true);\n  //const {poolAddress} = getPoolContractAddress(chainId, poolAddress);\n  userAddress = toChecksumAddress(userAddress);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getUserInfoInPool', err));\n    if (res) {\n      const [volume1h, volume24h] = res;\n      return {\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\n  const db = databaseAirdropFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v1`,\n      `${userAddress}.claim.r1`,\n      `${userAddress}.claim.s1`,\n      `${userAddress}.claim.v2`,\n      `${userAddress}.claim.r2`,\n      `${userAddress}.claim.s2`,\n      `${userAddress}.claim.valid`,\n      // `${userAddress}.claim.harvest.lp`,\n      // `${userAddress}.claim.harvest.trade`,\n      // `${userAddress}.claim.total`,\n    ])\n    .catch((err) => console.log('getUserInfoAllForAirDrop', err));\n  if (res) {\n    const [\n      chainId,\n      amount,\n      deadline,\n      nonce,\n      v1,\n      r1,\n      s1,\n      v2,\n      r2,\n      s2,\n      valid,\n      // harvestLp,\n      // harvestTrade,\n      // total,\n    ] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v1: deriToString(v1),\n      r1,\n      s1,\n      v2: deriToString(v2),\n      r2,\n      s2,\n      valid: deriToBool(valid),\n      // lp: deriToNatural(harvestLp),\n      // trade: deriToNatural(harvestTrade),\n      // total: deriToString(total),\n    };\n  }\n};\n","import { getDeriConfig } from '../config';\nimport {\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory';\n/**\n * Get user signature of the wormhole pool\n * @async\n * @method\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getUserWormholeSignature = async (accountAddress) => {\n  const databaseWormhole = databaseWormholeFactory(true);\n  return await databaseWormhole.signature(accountAddress);\n};\n\n/**\n * Check account is unlocked in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\n  const deri = deriFactory(chainId, deriAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  return await deri.isUnlocked(accountAddress, wormholeAddress);\n};\n\n/**\n * Get deri balance in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string}\n */\nexport const getDeriBalance = async (chainId, accountAddress) => {\n  const { deriAddress } = getDeriConfig(chainId);\n  const deri = deriFactory(chainId, deriAddress);\n  return (await deri.balanceOf(accountAddress)).toString();\n};","import {\n  miningVaultPoolFactory,\n  miningVaultRouterFactory,\n  wormholeFactory,\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory';\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from '../api/database_api';\nimport {\n  getDeriConfig,\n  getMiningVaultRouterConfig,\n  getMiningVaultConfig,\n} from '../config';\nimport { naturalToDeri } from '../../shared/utils';\n\n/**\n * Mint DToken in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDToken = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAll(accountAddress);\n  const amount = naturalToDeri(userInfo.amount);\n  const { deadline } = userInfo;\n  const { nonce } = userInfo;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultConfig(chainId);\n    if (miningVaultAddress) {\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\n      //miningVault.setAccount(accountAddress);\n      try {\n        const tx = await miningVault.mintDToken(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * freeze Deri in current wormhole pool to the specified chain\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @param {string} toChainId\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\n  const { wormholeAddress } = getDeriConfig(chainId);\n  const wormhole = wormholeFactory(chainId, wormholeAddress);\n  //wormhole.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await wormhole.freeze(accountAddress, amount, toChainId);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Deri in wormhole pool\n * @async\n * @method\n * @param {string} toChainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDeri = async (toChainId, accountAddress) => {\n  let res;\n  const databaseWormhole = databaseWormholeFactory(true);\n  // const userInfo = await getUserInfoAll(accountAddress);\n  const userInfo = await databaseWormhole.signature(accountAddress);\n  // console.log(userInfo)\n  const { amount } = userInfo;\n  const { fromChainId } = userInfo;\n  const { fromWormhole } = userInfo;\n  const fromNonce = userInfo.nonce;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const { wormholeAddress } = getDeriConfig(toChainId);\n    if (wormholeAddress) {\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\n      //wormhole.setAccount(accountAddress);\n      try {\n        const tx = await wormhole.mintDeri(\n          accountAddress,\n          amount,\n          fromChainId,\n          fromWormhole,\n          fromNonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the wormhole address in chain ${fromChainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * Unlock the account in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockDeri = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\n  const deri = deriFactory(chainId, deriAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  let res;\n  try {\n    const tx = await deri.unlock(accountAddress, wormholeAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Airdrop in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintAirdrop = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAllForAirDrop(accountAddress);\n  const amount = naturalToDeri(userInfo.amount).toString();\n  const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultRouterConfig(chainId);\n    // console.log(\"miningVaultAddress\", miningVaultAddress)\n    // console.log(\"userInfo\", userInfo)\n    if (miningVaultAddress) {\n      const miningVaultRouter = miningVaultRouterFactory(\n        chainId,\n        miningVaultAddress\n      );\n      try {\n        const tx = await miningVaultRouter.mint(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v1,\n          r1,\n          s1,\n          v2,\n          r2,\n          s2\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault router address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};","\n/* eslint-disable */\nexport const perpetualPoolAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[9]\", \"name\": \"parameters\", \"type\": \"uint256[9]\" }, { \"internalType\": \"address[4]\", \"name\": \"addresses\", \"type\": \"address[4]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"targetPool\", \"type\": \"address\" } ], \"name\": \"approvePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourcePool\", \"type\": \"address\" } ], \"name\": \"executePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"routerAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBToken\", \"outputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBTokenOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLengths\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"decimals0\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"minBToken0Ratio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbolOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const perpetualPoolRouterAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourceRouter\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"liquidateWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"liquidatorQualifier\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"qualifierAddress\", \"type\": \"address\" } ], \"name\": \"setLiquidatorQualifier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"tradeWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const lTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"name\": \"UpdateAsset\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getAsset\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getAssets\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"asset\", \"type\": \"tuple\" } ], \"name\": \"updateAsset\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const pTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numSymbols_\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargins\", \"outputs\": [ { \"internalType\": \"int256[]\", \"name\": \"\", \"type\": \"int256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getPositions\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numSymbols\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumSymbols\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"margins\", \"type\": \"int256[]\" } ], \"name\": \"updateMargins\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n/* eslint-disable */","import { ContractBase } from '../../shared/contract/contract_base'\nimport { deriToNatural, hexToNumber, bg } from '../../shared/utils'\nimport { perpetualPoolAbi } from './abis';\n\nexport class PerpetualPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolAbi)\n\n    this.bTokenCount= 0\n    this.symbolCount= 0\n\n    this.lTokenAddress = ''\n    this.pTokenAddress = ''\n    this.routerAddress = ''\n    this.protocolFeeCollector = ''\n\n    this.protocolFeeAccrued = 0\n  }\n\n  async _update() {\n    await Promise.all([\n      this.getLengths(),\n      this.getAddresses(),\n      this.getParameters(),\n    ]);\n  }\n\n  async getLengths() {\n    try {\n      const res = await this._call('getLengths')\n      //console.log(res[0])\n      if (res[0] && res[1]) {\n        this.bTokenCount= parseInt(res[0])\n        this.symbolCount= parseInt(res[1])\n      }\n    } catch(err) {\n      throw new Error(`PerpetualPool#_getLength error: ${err}`)\n    }\n  }\n  async getAddresses() {\n    try {\n      const res = await this._call('getAddresses')\n      this.lTokenAddress = res.lTokenAddress\n      this.pTokenAddress = res.pTokenAddress\n      this.routerAddress = res.routerAddress\n      this.protocolFeeCollector = res.protocolFeeCollector\n    } catch (err) {\n      throw new Error(`PerpetualPool#_getAddress error: ${err}`)\n    }\n  }\n  async getParameters() {\n    const res = await this._call('getParameters')\n    return {\n      decimals0: res.decimals0,\n      minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getProtocolFeeAccrued() {\n    const res =  await this._call('getProtocolFeeAccrued')\n    this.protocolFeeAccrued = deriToNatural(res)\n  }\n  async getBToken(bTokenId) {\n    try {\n      //bTokenId = parseInt(bTokenId)\n      const res = await this._call('getBToken', [bTokenId]);\n      return {\n        bTokenAddress: res.bTokenAddress,\n        swapperAddress: res.bTokenAddress,\n        oracleAddress: res.oracleAddress,\n        decimals: res.decimals,\n        discount: deriToNatural(res.discount),\n        price: deriToNatural(res.price),\n        liquidity: deriToNatural(res.liquidity),\n        pnl: deriToNatural(res.pnl),\n        cumulativePnl: deriToNatural(res.cumulativePnl),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getBToken error: ${err}`);\n    }\n  }\n  async getBTokenOracle(bTokenId) {\n    //bTokenId = parseInt(bTokenId)\n    return await this._call('getBTokenOracle', [bTokenId])\n  }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res =  await this._call('getSymbol', [symbolId])\n      return {\n        symbol: res.symbol,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n  async getSymbolOracle(symbolId) {\n    //symbolId = parseInt(symbolId)\n    return await this._call('getSymbolOracle', [symbolId])\n  }\n\n  // trade history query methods\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  // get block number when last updated\n  async getLastUpdatedBlockNumber() {\n    await this._init()\n    const res = await this.web3.eth.getStorageAt(this.contractAddress, 0)\n    //console.log('res', hexToNumber(res))\n    return hexToNumber(res)\n  }\n\n  // get block number when last updated\n  async getLatestBlockNumber() {\n    await this._init()\n    const res = await this.web3.eth.getBlockNumber()\n    //console.log('res', res)\n    return res\n  }\n\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    let amount\n    if (['56', '97','127', '80001'].includes(this.chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }\n}","import { ContractBase } from '../../shared/contract/contract_base'\nimport { naturalToDeri } from '../../shared/utils'\nimport { MAX_INT256 } from '../../shared/config';\nimport { perpetualPoolRouterAbi} from './abis';\n\nexport class PerpetualPoolRouter extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\n    this.poolAddress = ''\n  }\n\n  // === query ===\n  async pool() {\n    this.poolAddress = await this._call('pool');\n    return this.poolAddress\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidity',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeLiquidity(accountAddress, bTokenId, amount, isMaximum) {\n    if (isMaximum) {\n      return await this._transact(\n        'removeLiquidity',\n        [bTokenId, MAX_INT256],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeLiquidity',\n        [bTokenId, naturalToDeri(amount)],\n        accountAddress\n      );\n    }\n  }\n\n  async addMargin(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMargin',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, bTokenId, amount, isMaximum) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    if (isMaximum) {\n      //console.log('->', MAX_INT256)\n      return await this._transact(\n        'removeMargin',\n        [bTokenId, MAX_INT256],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeMargin',\n        [bTokenId, naturalToDeri(amount)],\n        accountAddress\n      );\n    }\n  }\n\n  async trade(accountAddress, symbolId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  // with prices\n  async addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidityWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n  async removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\n    if (isMaximum) {\n      return await this._transact(\n        'removeLiquidityWithPrices',\n        [bTokenId, MAX_INT256, priceInfos],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeLiquidityWithPrices',\n        [bTokenId, naturalToDeri(amount), priceInfos],\n        accountAddress\n      );\n    }\n  }\n\n  async addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMarginWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  async removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    if (isMaximum) {\n      return await this._transact(\n        'removeMarginWithPrices',\n        [bTokenId, MAX_INT256, priceInfos],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeMarginWithPrices',\n        [bTokenId, naturalToDeri(amount), priceInfos],\n        accountAddress\n      );\n    }\n  }\n\n  async tradeWithPrices(accountAddress, symbolId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'tradeWithPrices',\n      [symbolId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  // async liquidate(acountAddress) {\n  //   if (!this.poolAddress) {\n  //     await this.pool()\n  //   }\n  //   return await this._transact(\n  //     'liquidate',\n  //     [accountAddress],\n  //     accountAddress\n  //   );\n  // }\n\n}","import { ContractBase } from '../../shared/contract/contract_base'\nimport { deriToNatural } from '../../shared/utils'\nimport { lTokenAbi } from './abis';\n\nconst processAsset = (res) => {\n  return {\n    liquidity: deriToNatural(res[0]),\n    pnl: deriToNatural(res[1]),\n    lastCumulativePnl: deriToNatural(res[2]),\n  }\n}\nexport class LToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenAbi)\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getAsset(accountAddress, bTokenId) {\n    const res = await this._call('getAsset', [accountAddress, bTokenId]);\n    if (Array.isArray(res)) {\n      return processAsset(res)\n    } else {\n      console.log('address', this.contractAddress)\n      console.log('res', res)\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress} ${bTokenId})`)\n    }\n  }\n  async getAssets(accountAddress) {\n    const res = await this._call('getAssets', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map(i => processAsset(i))\n    } else {\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress})`)\n    }\n  }\n\n  // === transaction ===\n}","import { ContractBase } from '../../shared/contract/contract_base'\nimport { deriToNatural } from '../../shared/utils'\nimport { pTokenAbi } from './abis';\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getMargin(accountAddress, bTokenId) {\n    const res = await this._call('getMargin', [accountAddress, bTokenId]);\n    return deriToNatural(res)\n  }\n  async getMargins(accountAddress) {\n    const res = await this._call('getMargins', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => deriToNatural(i))\n    }\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getPositions(accountAddress) {\n    const res = await this._call('getPositions', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => processPosition(i))\n    }\n  }\n\n  // === transaction ===\n}","import {\n  PerpetualPool,\n  PerpetualPoolRouter,\n  LToken,\n  PToken,\n} from './contract';\n\nconst factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\nexport const perpetualPoolFactory = factory(PerpetualPool)\n\nexport const perpetualPoolRouterFactory = factory(PerpetualPoolRouter)\n\nexport const lTokenFactory = factory(LToken)\n\nexport const pTokenFactory = factory(PToken)","import { normalizeAddress, normalizeChainId } from \"../utils\"\nimport { DeriEnv, getBrokerConfig, getPoolConfig2 } from '../config';\nimport { brokerManagerFactory, pTokenAirdropFactory } from \"../factory\"\nimport { pTokenFactory } from \"../../v2/factory\"\n\nconst AIRDROP_PTOKEN_ADDRESS_BSC = '0x94e7f76eb542657Bc8d2a9aA321D79F66F7C8FfA'\nconst AIRDROP_PTOKEN_ADDRESS_BSCTESTNET = '0x3b88a9B5896a49AEb23Ca2Ee9892d28d3B8De5f6'\n\n\nexport const getBroker = async(chainId, accountAddress) => {\n  chainId = normalizeChainId(chainId)\n  accountAddress = normalizeAddress(accountAddress)\n  const {address: brokerAddress} = getBrokerConfig('v2', chainId)\n  let res = ''\n  try {\n    const brokerManager = brokerManagerFactory(chainId, brokerAddress)\n    res = await brokerManager.getBroker(accountAddress)\n  } catch (err) {\n    console.log(err)\n  }\n  return res\n}\n\nexport const setBroker = async(chainId, accountAddress, brokerAddress) => {\n  chainId = normalizeChainId(chainId)\n  accountAddress = normalizeAddress(accountAddress)\n  brokerAddress = normalizeAddress(brokerAddress);\n  const {address: brokerManagerAddress} = getBrokerConfig('v2', chainId)\n  let res\n  try {\n    const brokerManager = brokerManagerFactory(chainId, brokerManagerAddress)\n    const tx = await brokerManager.setBroker(accountAddress, brokerAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res\n}\n\nconst getAirdropPTokenAddress = () => {\n  const env = DeriEnv.get()\n  if (env === 'prod') {\n    return AIRDROP_PTOKEN_ADDRESS_BSC\n  } else {\n    return AIRDROP_PTOKEN_ADDRESS_BSCTESTNET\n  }\n}\n\nexport const airdropPToken = async (chainId, accountAddress) => {\n  let res\n  let contractAddress = getAirdropPTokenAddress()\n  try {\n    const tx = await pTokenAirdropFactory(chainId, contractAddress).airdropPToken(accountAddress)\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res\n}\n\nexport const getAirdropPTokenWhitelistCount = async (chainId) => {\n  let res\n  let contractAddress = getAirdropPTokenAddress()\n  try {\n    res = await pTokenAirdropFactory(chainId, contractAddress).totalWhitelistCount()\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return res\n}\n\nexport const isUserPTokenExist = async (chainId, poolAddress, accountAddress) => {\n  let res = ''\n  try {\n    const {pToken:pTokenAddress} = getPoolConfig2(poolAddress)\n    const pToken = pTokenFactory(chainId, pTokenAddress)\n    const result = await pToken.balanceOf(accountAddress)\n    if (result === '1') {\n      res = true\n    } else if (result === '0') {\n      res = false\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return res\n}","import { getLpConfig } from '../config';\nimport { bTokenFactory, slpPoolFactory } from '../factory/contract';\n\n/**\n * Get liquidity info of SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getSlpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress);\n    //bToken.setAccount(accountAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balanceOf(poolAddress),\n      bToken.balanceOf(accountAddress),\n      slpPool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  }\n  console.log('no SlpPool address, please check');\n  return {};\n};\n\n/**\n * Add liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\n/**\n * Unlock the account in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getSlpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n","import { bTokenFactory, clp2PoolFactory } from '../factory/contract';\nimport { getLpConfig } from '../config/pool_v1';\n\nexport const getClp2LiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balanceOf(poolAddress),\n      bToken.balanceOf(accountAddress),\n      clp2Pool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  }\n  console.log('no Clp2Pool address, please check');\n  return {};\n};\n\nexport const addClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const removeClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const getClp2WalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n","import { bg, getDailyBlockNumber } from '../../shared/utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  return bg(\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\n  ).abs();\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\n  fundingRateCoefficient;\n}\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  return bg(fundingRate).times(annualBlockCount);\n};\n","import { bg, max, min } from '../../shared/utils';\n\nexport * from './fundingRate';\n\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  tradersNetVolume,\n  tradersNetCost,\n  multiplier,\n  minPoolMarginRatio,\n  price\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const value = bg(tradersNetVolume).times(price).times(multiplier);\n  const removable = bg(liquidity)\n    .plus(tradersNetCost)\n    .minus(value)\n    .minus(value.abs().times(minPoolMarginRatio));\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\n  return shares;\n};\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  bg(volume).eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return bg(volume).abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return bg(volume).times(price).times(multiplier).minus(cost);\n}\n\nexport const calculateMaxWithdrawMargin = (\n  price,\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  if (volume.eq(0)) {\n    return margin;\n  }\n  const held = calculateMarginHeld(\n    price,\n    volume,\n    multiplier,\n    minInitialMarginRatio\n  );\n  const pnl = calculatePnl(price, volume, multiplier, cost);\n  const withdrawable = max(bg(margin).plus(pnl).minus(held.times(1.02)), bg(0));\n  return withdrawable;\n};\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = bg(cost).minus(margin).div(volume).div(multiplier);\n  let res = bg(volume).gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  price,\n  margin,\n  volume,\n  liquidity,\n  tradersNetVolume,\n  multiplier,\n  minPoolMarginRatio,\n  minInitialMarginRatio,\n  newVolume,\n  amount\n) => {\n  const minMargin = bg(volume)\n    .plus(newVolume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(minInitialMarginRatio);\n  const poolMaxVolume = bg(liquidity)\n    .div(minPoolMarginRatio)\n    .div(price)\n    .div(multiplier);\n  if (bg(margin).plus(amount).gte(minMargin)) {\n    if (\n      bg(newVolume).lte(poolMaxVolume.minus(tradersNetVolume)) &&\n      bg(newVolume).gte(poolMaxVolume.negated().minus(tradersNetVolume))\n    ) {\n      return { success: true };\n    }\n    return { success: false, message: 'Pool insufficient liquidity' };\n  }\n  return { success: false, message: 'Trader insufficient margin' };\n};\n","import {\n  validateArgs,\n  deriToNatural,\n  numberToHex,\n  bg,\n} from '../../shared/utils';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  processFundingRate,\n} from '../calculation';\nimport { ContractBase } from '../../shared/contract/contract_base';\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle';\n\n/* eslint-disable */\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PerpetualPool extends ContractBase {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, POOL_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\n  }\n\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async getStateValues() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getStateValues');\n      //console.log(\"getStateValues() raw:\", res)\n      result = {\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\n        liquidity: deriToNatural(res.liquidity),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      result = {\n        cumuFundingRate: defaultValue,\n        cumuFundingRateBlock: defaultValue,\n        liquidity: defaultValue,\n        tradersNetCost: defaultValue,\n        tradersNetVolume: defaultValue,\n      };\n      console.log(`getStateValues: ${err}`);\n    }\n    return result;\n  }\n\n  async getParameters() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getParameters');\n      // console.log(\"getParameters() raw: \", res)\n      result = {\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n        priceDelayAllowance: bg(res.priceDelayAllowance),\n      };\n    } catch (err) {\n      result = {\n        multiplier: defaultValue,\n        feeRatio: defaultValue,\n        minPoolMarginRatio: defaultValue,\n        minInitialMarginRatio: defaultValue,\n        minMaintenanceMarginRatio: defaultValue,\n        minAddLiquidity: defaultValue,\n        redemptionFeeRatio: defaultValue,\n        fundingRateCoefficient: defaultValue,\n        minLiquidationReward: defaultValue,\n        maxLiquidationReward: defaultValue,\n        liquidationCutRatio: defaultValue,\n        priceDelayAllowance: defaultValue,\n      };\n      console.log(`getParameters: ${err}`);\n    }\n    return result;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt == null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _estimatedGas(method, args, accountAddress) {\n    // !this.accountAddress &&\n    //   console.log('please do setAccount(accountAddress) first');\n    const MAX_GAS_AMOUNT = 582731\n    let gas = 0;\n    for (let i = 0; i < 2; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (err) {\n        //console.log(\"err\", err);\n      }\n    }\n    if (gas == 0) gas = MAX_GAS_AMOUNT;\n    if (gas > MAX_GAS_AMOUNT) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  // overwrite to use signed price to tx\n  async _transact(method, args = [], accountAddress) {\n    await this._init()\n    const symbol = await this.symbol()\n    const oracle = await getPriceInfoForV1(symbol);\n    let signed = [oracle.timestamp, oracle.price, parseInt(oracle.v).toString(), oracle.r, oracle.s];\n\n    const gas = await this._estimatedGas(method, [...args, ...signed], accountAddress)\n\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n\n  async getFundingRate() {\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\n    const symbol = await this.symbol()\n    price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n    try {\n      const stateValues = await this.getStateValues();\n      const parameters = await this.getParameters();\n      const { tradersNetVolume, liquidity } = stateValues;\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        minPoolMarginRatio,\n      } = parameters;\n      const args1 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        fundingRateCoefficient,\n      ];\n      if (!validateArgs(...args1)) {\n        fundingRate = '0';\n        fundingRatePerBlock = '0';\n      } else {\n        fundingRatePerBlock = calculateFundingRate(...args1);\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\n      }\n      const args2 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        minPoolMarginRatio,\n      ];\n      if (!validateArgs(...args2)) {\n        liquidityUsed = '0';\n      } else {\n        liquidityUsed = calculateLiquidityUsed(...args2);\n      }\n      return {\n        price,\n        multiplier: multiplier.toString(),\n        fundingRate: fundingRate,\n        fundingRatePerBlock: fundingRatePerBlock,\n        tradersNetVolume: tradersNetVolume.toString(),\n        liquidity: liquidity.toString(),\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\n        liquidityUsed: liquidityUsed,\n        poolMarginRatio: minPoolMarginRatio.toString(),\n      };\n    } catch (err) {\n      console.log('PerpetualPool#gerFundingRate():', err);\n      throw err;\n    }\n  }\n\n  async depositMargin(accountAddress, amount) {\n    let res;\n    try {\n      let tx = await this._transact(\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [amount],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      console.log('here');\n      res = { success: false, error: err };\n    }\n    return res;\n  }\n\n  // util methods, it's extract shared/utils now\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    //toBlock = toBlock.number;\n    let amount;\n    if (['56', '137', '97', '80001'].includes(this.chainId)) {\n      amount = 999;\n    } else {\n      amount = 4999;\n    }\n    if (fromBlock + amount > to) {\n      amount = to - fromBlock;\n    }\n    while (fromBlock <= to) {\n      //console.log('tick')\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if (fromBlock + amount > to) {\n        amount = to - fromBlock;\n      }\n    }\n    return events;\n  }\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n}\n","import { ContractBase } from '../../shared/contract/contract_base';\nimport { deriToNatural, bg } from '../../shared/utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PTokenContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async getPositionInfo(accountAddress) {\n    let result = {};\n    try {\n      const res = await this._call('getPosition(address)', [accountAddress]);\n      //console.log(\"getPositionInfo() raw:\", res)\n      result = {\n        volume: deriToNatural(res[0]),\n        cost: deriToNatural(res[1]),\n        lastCumuFundingRate: deriToNatural(res[2]),\n        margin: deriToNatural(res[3]),\n        lastUpdateTimestamp: bg(res[4]),\n      };\n    } catch (err) {\n      result = {\n        volume: bg(0),\n        cost: bg(0),\n        lastCumuFundingRate: bg(0),\n        margin: bg(0),\n        lastUpdateTimestamp: bg(0),\n      };\n      //console.log(`getPositionInfo: ${err}`);\n    }\n    return result;\n  }\n\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n}\n","import { ContractBase } from '../../shared/contract/contract_base';\nimport { deriToNatural } from '../../shared/utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class LTokenContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async balance(accountAddress) {\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\n    //console.log(\"> lToken balance\", res.toString())\n    return res;\n  }\n\n  async balanceOf(accountAddress) {\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\n    //console.log(\"> lToken balance\", res.toString())\n    return res;\n  }\n\n  async totalSupply() {\n    const res = deriToNatural(await this._call('totalSupply'));\n    //console.log(\"> lToken totalSupply\", res.toString())\n    return res;\n  }\n}\n","import { PerpetualPool } from './contract/perpetual_pool';\n//import { BTokenContract } from './contract/bToken';\nimport { PTokenContract } from './contract/p_token';\nimport { LTokenContract } from './contract/l_token';\n\nexport const perpetualPoolFactory = (() => {\n  const perpetualPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\n      return perpetualPoolInstanceMap[key];\n    }\n    const perpetualPool = new PerpetualPool(\n      chainId,\n      contractAddress,\n    );\n    // console.log(\"new PerpetualPoolContract\");\n    perpetualPoolInstanceMap[key] = perpetualPool;\n    return perpetualPool;\n  };\n})();\n\nexport const pTokenFactory = (function () {\n  const pTokenInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\n      return pTokenInstanceMap[key];\n    }\n    const pToken = new PTokenContract(\n      chainId,\n      contractAddress,\n    );\n    // console.log(\"new PTokenContract\")\n    pTokenInstanceMap[key] = pToken;\n    return pToken;\n  };\n})();\n\nexport const lTokenFactory = (function () {\n  const lTokenInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\n      return lTokenInstanceMap[key];\n    }\n    const lToken = new LTokenContract(\n      chainId,\n      contractAddress,\n    );\n    lTokenInstanceMap[key] = lToken;\n    return lToken;\n  };\n})();\n\n","import {\n  bTokenFactory,\n  clpPoolFactory,\n} from '../factory/contract';\nimport { lTokenFactory } from '../../v1/factory';\nimport { bg } from '../utils';\nimport { getLpConfig } from '../config';\n\n/**\n * Get liquidity Info of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getClpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getLpConfig(chainId, poolAddress);\n  const clpPool = clpPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { liquidity } = await clpPool.getStateValues();\n  //console.log(liquidity);\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: (lTokenTotalSupply.eq(0)\n      ? bg(0)\n      : liquidity.div(lTokenTotalSupply)\n    ).toString(),\n    maxRemovableShares: lTokenBalance.toString(),\n  };\n};\n\n/**\n * Add liquidity to the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clpPool.addLiquidity(accountAddress, amount);\n      console.log(tx, typeof tx);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    try {\n      const tx = await clpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isClpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\n/**\n * Unlock the account in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockClp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getClpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n","import {\n  getSlpLiquidityInfo,\n  getSlpWalletBalance,\n  isSlpUnlocked,\n} from './slp_pool_api';\nimport {\n  getClp2LiquidityInfo,\n  getClp2WalletBalance,\n  isClp2Unlocked,\n} from './clp2_pool_api';\nimport {\n  getClpLiquidityInfo,\n  getClpWalletBalance,\n  isClpUnlocked,\n} from './clp_pool_api';\nimport { getLpConfig } from '../config'\n\n/**\n * Get liquidity info of LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getLpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpLiquidityInfo(): invalid lp type ${type}`);\n  }\n};\n\n\n/**\n * Check account is unlocked in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await isClpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`isLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Get account balance in lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getLpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpWalletBalance(): invalid lp type ${type}`);\n  }\n};\n","import { getLpConfig } from '../config';\nimport { unlockSlp, addSlpLiquidity, removeSlpLiquidity } from './slp_pool_api';\nimport { unlockClp, addClpLiquidity, removeClpLiquidity } from './clp_pool_api';\nimport {\n  unlockClp2,\n  addClp2Liquidity,\n  removeClp2Liquidity,\n} from './clp2_pool_api';\n\n/**\n * Unlock the account in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await unlockSlp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await unlockClp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await unlockClp2(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`unlockLp(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Add liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp') {\n    return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp2') {\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\n  } else {\n    console.log(`addLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Remove liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await removeSlpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp') {\n    return await removeClpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp2') {\n    return await removeClp2Liquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else {\n    console.log(`removeLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n","import { TERC20Factory } from \"..\"\nimport { catchTxApiError, normalizeChainId } from \"../utils\"\n\nexport const mintTERC20 = async (chainId, bTokenAddress, accountAddress) => {\n  const args = [chainId, bTokenAddress, accountAddress];\n  return catchTxApiError(async (chainId, bTokenAddress, accountAddress) => {\n    chainId = normalizeChainId(chainId);\n    const testERC20 = TERC20Factory(chainId, bTokenAddress);\n    // send tx\n    return await testERC20.mint(accountAddress);\n  }, args);\n};","import { DeriEnv } from \"../shared/config/env\";\nimport { normalizeChainId } from \"../shared/utils/validate\";\n\nexport const openPoolChainIds = () => {\n  const configs = {\n    prod: ['56'],\n    dev: ['97'],\n    testnet: ['97'],\n  }\n  const env = DeriEnv.get()\n  if (Array.isArray(configs[env])) {\n    return configs[env]\n  } else {\n    throw new Error(`-- invalid env for openPoolChainIds: ${env}`)\n  }\n};\n\nexport const getPoolV2LiteManagerConfig = (chainId) => {\n  chainId = normalizeChainId(chainId)\n  const configs = {\n    prod: [\n      {\n        chainId: \"56\",\n        address: \"0x5e3318aeaa226dc11571f19b96240d88b64702dc\",\n        initialBlock: \"10133599\",\n      },\n    ],\n    dev: [\n      {\n        chainId: \"97\",\n        address: \"0x7A55ed377361802fad1Ae3d944cDbAA3c7694757\",\n        initialBlock: \"11034400\",\n      },\n    ],\n    testnet: [\n      {\n        chainId: \"97\",\n        address: \"0x7A55ed377361802fad1Ae3d944cDbAA3c7694757\",\n        initialBlock: \"11034400\",\n      },\n    ],\n  };\n  const env = DeriEnv.get();\n  const res = configs[env].find((c) => c.chainId === chainId);\n  if (res && res.address) {\n    return res\n  } else {\n    throw new Error(`-- getPoolV2LiteManagerConfig: cannot find config with env(${env}) and chainId(${chainId})`)\n  }\n};\n\nexport const getOracleFactoryChainlinkConfig = (chainId) => {\n  chainId = normalizeChainId(chainId)\n  const configs = {\n    prod: [\n      {\n        chainId: '56',\n        address: '0x5052fa10d68F4146B66bc15fd8cCb1674B482026',\n        initialBlock: '11017943',\n      },\n    ],\n    dev: [\n      {\n        chainId: '97',\n        address: '0xFD1f981375f95e971E8fC0756f4daAF5784e5376',\n        initialBlock: '12440610',\n      },\n    ],\n  };\n  const env = DeriEnv.get();\n  const res = configs[env].find((c) => c.chainId === chainId);\n  if (res && res.address) {\n    return res\n  } else {\n    throw new Error(`-- getOracleFactoryChainlinkConfig: cannot find config with env(${env}) and chainId(${chainId})`)\n  }\n};\n\n\nexport const expandPoolConfigV2LiteOpen = (config) => {\n  const pools = config.pools;\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.symbols.length; i++) {\n        const symbol = pool.symbols[i];\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          unit: symbol.unit,\n          version: 'v2_lite_open',\n          isOpen: true,\n        });\n      }\n      return result;\n    })\n    .flat();\n};","export const OracleFactoryChainlinkAdapter = (klass) => {\n  //klass = processMethod(klass, 'symbol')\n  return klass;\n};\n\nexport const OracleFactoryOffChainAdapter = (klass) => {\n  //klass = processMethod(klass, 'symbol')\n  return klass;\n};\n\n","export const perpetualPoolLiteAbi = [{\"inputs\":[{\"internalType\":\"uint256[7]\",\"name\":\"parameters\",\"type\":\"uint256[7]\"},{\"internalType\":\"address[5]\",\"name\":\"addresses\",\"type\":\"address[5]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"addSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidatorQualifierAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolFeeCollector\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"minPoolMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minInitialMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"maxLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"liquidationCutRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"protocolFeeCollectRatio\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeAccrued\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getSymbol\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"multiplier\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"feeRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"fundingRateCoefficient\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cumulativeFundingRate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"internalType\":\"struct IPerpetualPoolLite.SymbolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"setSymbolParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\nexport const perpetualPoolLiteManagerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolTemplate_\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector_\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"protocolFeeCutRatio_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"creator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"CreatePool\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pairedTokenAddress\", \"type\": \"address\" } ], \"name\": \"createPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getNumPools\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"poolTemplate\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"name\": \"pools\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCollector\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCutRatio\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n\nexport const chainlinkFeedAbi = [ {\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}, {\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","import { ContractBase } from '../../shared/contract/contract_base';\nimport { chainlinkFeedAbi } from './abis';\n\nexport class ChainlinkFeed extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, chainlinkFeedAbi);\n  }\n  async symbol() {\n    const res = await this._call('description');\n    return res.split('/').map((s) => s.trim()).join('')\n  }\n}\n","// this file is generated by script, don't modify it !!!\nexport const oracleFactoryChainlinkAbi = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"}],\"name\":\"AddFeed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"CreateOracle\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"symbols\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"feeds\",\"type\":\"address[]\"}],\"name\":\"addFeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","// this file is generated by script, don't modify it !!!\nexport const oracleFactoryOffChainAbi = [\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"symbol\",\n        \"type\": \"string\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"signer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"delayAllowance\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"oracle\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"CreateOracleOffChain\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"symbol\",\n        \"type\": \"string\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"signer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"delayAllowance\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"oracle\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"CreateVolatilityOracleOffChain\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" },\n      { \"internalType\": \"address\", \"name\": \"signer\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"delayAllowance\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"createOracle\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" },\n      { \"internalType\": \"address\", \"name\": \"signer\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"delayAllowance\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"createVolatilityOracle\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }\n    ],\n    \"name\": \"getOracle\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }\n    ],\n    \"name\": \"getVolatilityOracle\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n]\n\n","import { ContractBase } from '../../shared/contract/contract_base'\nimport { deriToNatural } from '../../shared/utils'\nimport { pTokenLiteAbi } from './abis';\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenLiteAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async ownerOf(tokenId) {\n    return await this._call('ownerOf', [tokenId]);\n  }\n  async getMargin(accountAddress) {\n    const res = await this._call('getMargin', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getActiveSymbolIds() {\n    return await this._call('getActiveSymbolIds');\n  }\n  async isActiveSymbolId(symbolId) {\n    return await this._call('isActiveSymbolId', [symbolId]);\n  }\n  async isApprovedForAll(owner, operator) {\n    return await this._call('isApprovedForAll', [owner, operator]);\n  }\n  async getApproved(tokenId) {\n    return await this._call('getApproved', [tokenId]);\n  }\n  async getNumPositionHolders(symbolId) {\n    return await this._call('getNumPositionHolders', [symbolId]);\n  }\n\n  // === transaction ===\n}\n","import { ContractBase } from '../../shared/contract/contract_base';\nimport { perpetualPoolLiteManagerAbi } from './abis.js'\n\nexport class PerpetualPoolLiteManager extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteManagerAbi)\n  }\n\n  // query\n  async getNumPools() {\n    const res = await this._call('getNumPools', [])\n    return res\n  }\n  async poolTemplate() {\n    const res = await this._call('poolTemplate', [])\n    return res\n  }\n  async pools(poolId) {\n    const res = await this._call('pools', [poolId])\n    return res\n  }\n  async protocolFeeCollector() {\n    const res = await this._call('protocolFeeCollector', [])\n    return res\n  }\n  async protocolFeeCutRatio() {\n    const res = await this._call('protocolFeeCutRatio', [])\n    return res\n  }\n\n  // tx\n  async createPool(accountAddress, parameters, bTokenAddress, pairedTokenAddress) {\n    return await this._transact('createPool', [parameters, bTokenAddress, pairedTokenAddress], accountAddress)\n  }\n\n}","import { ContractBase } from '../../shared/contract/contract_base';\nimport { perpetualPoolLiteViewerAbi } from './abis';\n\nexport class PerpetualPoolLiteViewer extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\n  }\n  async getOffChainOracleSymbols(poolAddress) {\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\n    //return res.filter((s) => s && s !== '');\n    return res\n  }\n}\n","import { factory } from '../shared/utils/factory'\nimport { OracleFactoryChainlinkAdapter, OracleFactoryOffChainAdapter } from './adapter'\nimport { ChainlinkFeed } from './contract/chainlink_feed'\nimport { OracleFactoryChainlink } from './contract/gen/OracleFactoryChainlink'\nimport { OracleFactoryOffChain } from './contract/gen/OracleFactoryOffChain'\nimport { PerpetualPoolLite } from './contract/perpetual_pool'\nimport { PerpetualPoolLiteManager } from './contract/perpetual_pool_lite_manager'\nimport { PerpetualPoolLiteViewer } from './contract/perpetual_pool_lite_viewer'\n\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite)\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)\nexport const perpetualPoolLiteManagerFactory = factory(PerpetualPoolLiteManager)\nexport const chainlinkFeedFactory = factory(ChainlinkFeed)\n\n\nexport const oracleFactoryChainlinkFactory = factory(OracleFactoryChainlinkAdapter(OracleFactoryChainlink))\nexport const oracleFactoryOffChainFactory = factory(OracleFactoryOffChainAdapter(OracleFactoryOffChain))","import {\n  bTokenFactory,\n  deriToNatural,\n  fetchJson,\n  getHttpBase,\n} from '../../shared';\nimport { ContractBase } from '../../shared/contract/contract_base';\nimport { normalizeSymbolUnit } from '../../shared/config/token';\nimport { perpetualPoolLiteAbi } from './abis';\nimport { PTokenLite } from './p_token';\n\nexport class PerpetualPoolLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\n  }\n\n  async init() {\n    await this._init();\n    if (!this.pTokenAddress|| !this.pToken ) {\n      await  this.updateAddresses()\n      // console.log(this.addresses, this.parameters)\n      //this.bToken = bTokenFactory(this.chainId, bTokenAddress);\n      //this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress);\n\n    }\n  }\n\n\n  async updateAddresses() {\n    if (!this.bTokenAddress || !this.pTokenAddress) {\n     const res = await this._call('getAddresses');\n    // update this state\n     this.bTokenAddress = res.bTokenAddress;\n     this.lTokenAddress= res.lTokenAddress;\n     this.pTokenAddress= res.pTokenAddress;\n    }\n  }\n\n  async controller() {\n    const res = await this._call('controller');\n    return res\n  }\n\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getSymbol(symbolId) {\n    const res = await this._call('getSymbol', [symbolId]);\n    return {\n      symbol: res.symbol,\n      oracleAddress: res.oracleAddress,\n      multiplier: deriToNatural(res.multiplier),\n      feeRatio: deriToNatural(res.feeRatio),\n      fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n      price: deriToNatural(res.price),\n      cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n      tradersNetVolume: deriToNatural(res.tradersNetVolume),\n      tradersNetCost: deriToNatural(res.tradersNetCost),\n    };\n  }\n  async getSymbols() {\n    await this.updateAddresses()\n    if (!this.pToken) {\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress)\n    }\n    // update this state\n    this.symbolIds = await this.pToken.getActiveSymbolIds()\n    this.symbols = await Promise.all(\n      this.symbolIds.reduce((acc, i) => acc.concat([this.getSymbol(i)]), [])\n    );\n    return this.symbols\n  }\n  async getBTokenSymbol() {\n    await this.updateAddresses()\n    if (!this.bToken) {\n      this.bToken = bTokenFactory(this.chainId, this.bTokenAddress)\n    }\n    // update this state\n    this.bTokenSymbol = await this.bToken.symbol()\n    return this.bTokenSymbol\n  }\n  async getPoolExtraInfo() {\n    const url = `${getHttpBase()}/pool_extra_info/${this.contractAddress}`\n    const res = await fetchJson(url)\n    //console.log(res)\n    if (res.success) {\n      return res.data\n    } else {\n\n      console.log(`-- getInitialBlock(): ${url} => ${res.message}`)\n      return  {\n        block_number: '1000000000',\n        version: '',\n      }\n    }\n  }\n  async getConfig() {\n    const [bToken, symbols, extraInfo] = await Promise.all([\n      this.getBTokenSymbol(),\n      this.getSymbols(),\n      this.getPoolExtraInfo(),\n    ])\n    return {\n      pool: this.contractAddress,\n      pToken: this.pTokenAddress,\n      lToken: this.lTokenAddress,\n      bToken: this.bTokenAddress,\n      bTokenSymbol: bToken,\n      symbols: symbols.map((s, index) => ({\n        symbolId: this.symbolIds[index],\n        symbol: s.symbol,\n        unit: normalizeSymbolUnit(s.symbol),\n      })),\n      initialBlock:extraInfo.block_number,\n      type: 'perpetual',\n      version:extraInfo.version,\n      versionId: 'v2_lite',\n      chainId: this.chainId,\n    }\n  }\n\n  // tx\n  async addSymbol(accountAddress, parameters) {\n    return await this._transact('addSymbol', parameters, accountAddress)\n  }\n\n  async removeSymbol(accountAddress, symbolId) {\n    return await this._transact('removeSymbol', [symbolId], accountAddress)\n  }\n}\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { oracleFactoryChainlinkAbi } from '../abi/oracleFactoryChainlinkAbi.js'\n\nexport class OracleFactoryChainlink extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, oracleFactoryChainlinkAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async getFeed(symbol) {\n    const res = await this._call('getFeed', [symbol])\n    return deleteIndexedKey(res)\n  }\n  async getOracle(symbol) {\n    const res = await this._call('getOracle', [symbol])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async createOracle(accountAddress, symbol) {\n    return await this._transact('createOracle', [symbol], accountAddress)\n  }\n\n}","import { catchApiError } from \"../../shared/utils/api\"\nimport { DeriEnv } from \"../../shared/config/env\"\nimport { getJsonConfig } from \"../../shared/config/config\"\nimport { normalizeChainId, toChecksumAddress, validateObjectKeyExist } from \"../../shared/utils\"\nimport { poolProcessor, poolValidator } from \"../../shared/config/config_processor\"\nimport { fetchJson, getBlockInfo, getHttpBase, getPastEvents, getPoolViewerConfig } from \"../../shared\"\nimport { expandPoolConfigV2LiteOpen, getOracleFactoryChainlinkConfig, getPoolV2LiteManagerConfig, openPoolChainIds } from \"../config\"\nimport { oracleFactoryChainlinkFactory, perpetualPoolLiteFactory, perpetualPoolLiteManagerFactory, perpetualPoolLiteViewerFactory } from \"../factory\"\n\nexport const getPoolOpenConfigList = async (...args) => {\n  return catchApiError(\n    async () => {\n      let configs = [];\n      const chainIds = openPoolChainIds()\n      configs = await chainIds.reduce(async (acc, chainId) => {\n        //console.log('chainId', chainId)\n        const { address: poolManagerAddress } = getPoolV2LiteManagerConfig(\n          chainId\n        );\n        const poolManager = perpetualPoolLiteManagerFactory(\n          chainId,\n          poolManagerAddress\n        );\n        // get pool numbers\n        const poolNums = parseInt(await poolManager.getNumPools());\n        const numsArray = [...Array(poolNums).keys()];\n        // get pool addresses\n        const addresses = await Promise.all(\n          numsArray.reduce(\n            (acc, id) => acc.concat([poolManager.pools(id.toString())]),\n            []\n          )\n        );\n        // get pools config\n        const res = await Promise.all(\n          addresses.reduce(\n            (acc, address) =>\n              acc.concat([\n                perpetualPoolLiteFactory(chainId, address).getConfig(),\n              ]),\n            []\n          )\n        );\n        return acc.concat(res);\n      }, []);\n      return configs.sort((a,b) => parseInt(b.initialBlock) - parseInt(a.initialBlock));\n    },\n    args,\n    'getPoolOpenConfigList',\n    []\n  );\n};\n\nexport const getPoolOpenOracleList = async(...args) => {\n  return catchApiError(\n    async (chainId, accountAddress) => {\n    chainId = normalizeChainId(chainId)\n    const oracleFactoryConfig = getOracleFactoryChainlinkConfig(chainId);\n    const oracleFactory = oracleFactoryChainlinkFactory(\n      chainId,\n      oracleFactoryConfig.address\n    );\n    await oracleFactory._init()\n    let eventBlock, oracles= [];\n    const res = await fetchJson(\n      `${getHttpBase()}/oracle/${chainId}/${accountAddress}`\n    );\n    if (res && res.success) {\n      eventBlock = parseInt(res.data.eventBlock);\n      if (res.data.oracles && Array.isArray(res.data.oracles)) {\n        oracles = res.data.oracles;\n      }\n      if (eventBlock === 0) {\n        eventBlock = parseInt(oracleFactoryConfig.initialBlock);\n      }\n      const toBlock = await getBlockInfo(chainId, 'latest');\n      // fetch online\n      let events = await getPastEvents(\n        chainId,\n        oracleFactory.contract,\n        'CreateOracle',\n        {},\n        eventBlock,\n        toBlock.number\n      );\n      if (events.length > 0) {\n        for (let i = 0; i < events.length; i++) {\n          const event = events[i];\n          const info = event.returnValues;\n          oracles.push({\n            chainId,\n            symbol: info.symbol,\n            address: info.oracle,\n            blockNumber: event.blockNumber,\n          });\n        }\n        return oracles\n          .sort((a, b) => parseInt(b.blockNumber) - parseInt(a.blockNumber))\n          .reduce((acc, i) => {\n            return acc.find((a) => a.symbol === i.symbol) ? acc : [...acc, i];\n          }, []);\n      } else {\n        return oracles\n      }\n    } else {\n      return [];\n    }\n      //return getOracleConfigList('v2_lite_open', DeriEnv.get()).filter((o) => o.chainId === chainId);\n    },\n    args,\n    'getPoolOpenOracleInfos',\n    []\n  );\n};\n\nexport const getPoolController = async(chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  return catchApiError(\n    async (chainId, poolAddress) => {\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n      return await perpetualPoolLite.controller();\n    },\n    [chainId, poolAddress],\n    'getPoolController',\n    ''\n  );\n}\nexport const isPoolController = async (chainId, poolAddress, controller) => {\n  chainId = normalizeChainId(chainId);\n  return catchApiError(\n    async (chainId, poolAddress, controller) => {\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n      const poolController = await perpetualPoolLite.controller();\n      return (\n        toChecksumAddress(controller) === toChecksumAddress(poolController)\n      );\n    },\n    [chainId, poolAddress, controller],\n    'isPoolController',\n    false\n  );\n};\n\nexport const getExpandedPoolOpenConfigList = async () => {\n  const env = DeriEnv.get()\n  const version = 'v2_lite_open'\n  let config = getJsonConfig(version, env);\n\n  config.pools =  await getPoolOpenConfigList()\n  const pools = config.pools\n  if (pools && Array.isArray(pools)) {\n    for (let i = 0; i < pools.length; i++) {\n      poolProcessor[version](pools[i])\n      poolValidator[version](pools[i])\n    }\n  }\n  validateObjectKeyExist(['oracle'], config, 'oracle');\n  return expandPoolConfigV2LiteOpen(config);\n}\n\nexport const getPoolAllSymbolNames = async (chainId, poolAddress) => {\n  return catchApiError(\n    async (chainId, poolAddress) => {\n      const viewerAddress = getPoolViewerConfig(chainId, 'v2_lite');\n      const poolViewer = perpetualPoolLiteViewerFactory(chainId, viewerAddress);\n      return await poolViewer.getOffChainOracleSymbols(poolAddress);\n    },\n    [chainId.toString(), poolAddress],\n    'getPoolAllSymbolNames ',\n    []\n  );\n};\n\nexport const getPoolAcitveSymbolIds = async (...args) => {\n  return catchApiError(\n    async (chainId, poolAddress) => {\n      chainId = chainId.toString()\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n      await perpetualPoolLite.init()\n      return await perpetualPoolLite.pToken.getActiveSymbolIds()\n    },\n    args,\n    'getPoolActiveSymbolIds',\n    []\n  );\n};\n\n\n// v2lite open config list cache\nexport const openConfigListCache = (() => {\n  let cache = {\n    data: [],\n    timestamp: 0,\n  };\n  return {\n    async update() {\n      const oldData = cache.data\n      try {\n        if (Date.now()/1000 - cache.timestamp >= 10) {\n        //if (Date.now()/1000 - cache.timestamp > 60) {\n          cache.data = await getPoolOpenConfigList()\n          cache.timestamp = Date.now()/1000\n          //res = 'v2 lite open config list is updated'\n        }\n      } catch(err) {\n        console.log(err)\n        cache.data = oldData\n        //res = `v2 lite open config list updating with error: ${err}`\n      }\n      // res && console.log(res)\n      return cache.data\n    },\n    updatedAt() {\n      return cache.timestamp\n    },\n    get() {\n      return cache.data\n    }\n  }\n})()\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { oracleFactoryOffChainAbi } from '../abi/oracleFactoryOffChainAbi.js'\n\nexport class OracleFactoryOffChain extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, oracleFactoryOffChainAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async getOracle(symbol) {\n    const res = await this._call('getOracle', [symbol])\n    return deleteIndexedKey(res)\n  }\n  async getVolatilityOracle(symbol) {\n    const res = await this._call('getVolatilityOracle', [symbol])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async createOracle(accountAddress, symbol, signer, delayAllowance) {\n    return await this._transact('createOracle', [symbol, signer, delayAllowance], accountAddress)\n  }\n  async createVolatilityOracle(accountAddress, symbol, signer, delayAllowance) {\n    return await this._transact('createVolatilityOracle', [symbol, signer, delayAllowance], accountAddress)\n  }\n\n}","import { getJsonConfig } from './config';\nimport { DeriEnv } from './env';\nimport { getPoolV1ConfigList } from './pool_v1';\nimport { LITE_AND_OPTION_VERSIONS, VERSIONS } from './version';\n// import { validateObjectKeyExist } from '../utils';\nimport { poolProcessor, poolValidator } from './config_processor';\nimport { openConfigListCache } from '../../v2_lite_open/api/query_api';\n\nconst expandPoolConfigV2 = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.bTokens.length; i++) {\n        const bToken = pool.bTokens[i];\n        for (let i = 0; i < pool.symbols.length; i++) {\n          const symbol = pool.symbols[i];\n          result.push({\n            pool: pool.pool,\n            pToken: pool.pToken,\n            lToken: pool.lToken,\n            router: pool.router,\n            initialBlock: pool.initialBlock,\n            chainId: pool.chainId,\n            bToken: bToken.bToken,\n            bTokenId: bToken.bTokenId,\n            bTokenSymbol: bToken.bTokenSymbol,\n            symbol: symbol.symbol,\n            symbolId: symbol.symbolId,\n            unit: symbol.unit,\n            type: 'perpetual',\n            version: 'v2',\n            versionId: pool.versionId,\n            isOption: false,\n          });\n        }\n      }\n      return result;\n    })\n    .flat();\n};\n\nconst expandPoolConfigV2Lite = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.symbols.length; i++) {\n        const symbol = pool.symbols[i];\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          unit: symbol.unit,\n          type: 'perpetual',\n          version: 'v2_lite',\n          versionId: pool.versionId,\n          isOption: false,\n        });\n      }\n      return result;\n    })\n    .flat();\n};\n\nconst expandPoolConfigOption = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.symbols.length; i++) {\n        const symbol = pool.symbols[i];\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          pricer: pool.pricer,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          volatilitySymbols: pool.volatilitySymbols,\n          unit: symbol.unit,\n          type: 'option',\n          version: 'option',\n          versionId: pool.versionId,\n          isOption: true,\n        });\n      }\n      return result;\n    })\n    .flat();\n};\n\nconst expandPoolConfigV2LiteOpen = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      if (pool.symbols.length > 0) {\n        for (let i = 0; i < pool.symbols.length; i++) {\n          const symbol = pool.symbols[i];\n          result.push({\n            pool: pool.pool,\n            pToken: pool.pToken,\n            lToken: pool.lToken,\n            initialBlock: pool.initialBlock,\n            chainId: pool.chainId,\n            bToken: pool.bToken,\n            bTokenSymbol: pool.bTokenSymbol,\n            symbol: symbol.symbol,\n            symbolId: symbol.symbolId,\n            offchainSymbolIds: pool.offchainSymbolIds,\n            offchainSymbols: pool.offchainSymbols,\n            unit: symbol.unit,\n            type: 'perpetual',\n            version: 'v2_lite_open',\n            versionId: pool.versionId,\n            isOpen: true,\n          });\n        }\n      } else {\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: '--',\n          symbolId: '',\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          unit: '',\n          type: 'perpetual',\n          version: 'v2_lite_open',\n          versionId: pool.versionId,\n          isOpen: true,\n        });\n      }\n      return result;\n    })\n    .flat();\n};\n\nexport const getConfig = (version='v2', env='dev') => {\n  let config = getJsonConfig(version, env);\n  if (version === 'v2_lite_open') {\n    //if (Date.now()/1000 - openConfigListCache.updatedAt() < 15) {\n      //console.log('hit openConfigListCache')\n    config.pools = openConfigListCache.get()\n    //}\n  }\n\n  const pools = config.pools;\n  if (pools && Array.isArray(pools)) {\n    for (let i = 0; i < pools.length; i++) {\n      poolProcessor[version](pools[i])\n      poolValidator[version](pools[i])\n    }\n  }\n\n  //validateObjectKeyExist(['oracle'], config, 'oracle');\n  //validateObjectKeyExist(['brokerManager'], configs[env], 'brokerManager')\n  return config;\n};\n\nexport const getPoolConfigList = (version = 'v2', env = 'dev') => {\n  let config;\n  config = getConfig(version, env);\n  if (version === 'v2') {\n    return expandPoolConfigV2(config);\n  } else if (version === 'v2_lite') {\n    return expandPoolConfigV2Lite(config, version);\n  } else if (version === 'v2_lite_open') {\n    return expandPoolConfigV2LiteOpen(config);\n  } else if (version === 'option') {\n    return expandPoolConfigOption(config);\n  }\n};\n\nexport const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId, version='v2') => {\n  bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\n  symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\n  const poolConfigList = getPoolConfigList(version, DeriEnv.get())\n  const check = bTokenId != null\n    ? symbolId != null\n      ? (i) =>\n          i.pool === poolAddress &&\n          i.bTokenId === bTokenId &&\n          i.symbolId === symbolId\n      : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\n    : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\n  if (poolConfigList.length > 0) {\n    const res = poolConfigList.filter(check)\n    if (res && res.length > 0) {\n      return res\n    }\n  }\n  throw new Error(`getFilteredPoolConfigList(): cannot find the pool config by ${poolAddress} bTokenId(${bTokenId}) and symbolId(${symbolId})`)\n}\n\nexport const getPoolConfig = (poolAddress, bTokenId, symbolId) => {\n  const version = getPoolVersion(poolAddress)\n  //console.log('version', version, poolAddress)\n  // check the bToken in v2_lite\n  if (LITE_AND_OPTION_VERSIONS.includes(version)) {\n    bTokenId = undefined\n  }\n  const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId, version)\n  return res[0]\n}\nexport const getFilteredPoolConfig  = getPoolConfig\n\n\nexport const getPoolVersion = (poolAddress) => {\n  let pools = VERSIONS.reduce((acc, version) => {\n    return acc.concat(getConfig(version, DeriEnv.get())['pools'])\n  }, [])\n  //console.log(pools)\n  // add v1 config\n  pools = pools.concat(getPoolV1ConfigList(DeriEnv.get()))\n  const index = pools.findIndex((v) => v.pool === poolAddress)\n  //console.log('pools index', index)\n  if (index >= 0) {\n    return pools[index].version\n  }\n}\n\nexport const getPoolVersionId = (poolAddress) => {\n  let pools = VERSIONS.reduce((acc, version) => {\n    return acc.concat(getConfig(version, DeriEnv.get())['pools'])\n  }, [])\n  // add v1 config\n  pools = pools.concat(getPoolV1ConfigList(DeriEnv.get()))\n  const index = pools.findIndex((v) => v.pool === poolAddress)\n  if (index >= 0) {\n    return pools[index].versionId\n  }\n}\n\nexport const _getPoolConfig = (poolAddress) => {\n  const version = getPoolVersion(poolAddress);\n  // console.log('version', version)\n  const config = getConfig(version, DeriEnv.get());\n  const pools = config.pools;\n  let pool = pools.find((p) => p.pool === poolAddress);\n  //console.log(pool)\n  if (pool) {\n    return pool;\n  } else {\n    throw new Error(`getPoolConfig, cannot find pool config by pool address ${poolAddress}`)\n  }\n};\n\nexport const getPoolConfig2 = (poolAddress, bTokenId, symbolId) => {\n  const pool = _getPoolConfig(poolAddress);\n  const defaultBToken = {\n    bTokenId: '',\n    bTokenSymbol: '',\n    bToken: '',\n  };\n  const defaultSymbol = {\n    symbolId: '',\n    symbol: '',\n    unit: '',\n  };\n  let bToken, symbol;\n  if (pool.bTokens && (bTokenId !== undefined || bTokenId !== null)) {\n    bToken = pool.bTokens.find((b) => b.bTokenId === bTokenId)\n  }\n  if (pool.symbols && (symbolId !== undefined || symbolId !== null)) {\n    symbol = pool.symbols.find((b) => b.symbolId === symbolId) || defaultSymbol;\n  }\n  bToken = bToken || defaultBToken;\n  symbol = symbol || defaultSymbol\n  return {\n    pool: pool.pool,\n    pToken: pool.pToken,\n    lToken: pool.lToken,\n    router: pool.router,\n    bTokenCount: pool.bTokenCount,\n    symbolCount: pool.symbolCount,\n    initialBlock: pool.initialBlock,\n    chainId: pool.chainId,\n    bToken: bToken.bToken,\n    bTokenId: bToken.bTokenId,\n    bTokenSymbol: bToken.bTokenSymbol,\n    symbol: symbol.symbol,\n    symbolId: symbol.symbolId,\n    unit: symbol.unit,\n    version: 'v2',\n  };\n};\n\nexport const getPoolBTokenList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.bTokens.map((b) => {\n    return {\n      bTokenId: b.bTokenId,\n      bTokenSymbol: b.bTokenSymbol,\n      bTokenAddress: b.bToken,\n    };\n  });\n};\n\nexport const getPoolBTokenIdList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.bTokens.map((b) => b.bTokenId);\n};\n\nexport const getPoolSymbolList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.symbols.map((s) => {\n    return {\n      symbol: s.symbol,\n      symbolId: s.symbolId,\n      unit: s.unit,\n    };\n  });\n};\n\nexport const getPoolSymbolIdList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.symbols.map((b) => b.symbolId);\n};\n\nexport const getPoolViewerConfig = (chainId, version=\"v2_lite\") => {\n  const env = DeriEnv.get()\n  const config = getJsonConfig(version, env)\n  const viewers = config.poolViewer.filter((v) => v.chainId === chainId.toString())\n  if (viewers.length > 0) {\n    return viewers[0].address\n  } else {\n    throw new Error(`getPoolViewerConfig(): invalid chainId(${chainId}) or version(${version}).`);\n  }\n};","import { getJsonConfig } from './config';\nimport { DeriEnv } from './env';\n\nexport const getBrokerConfigList = (version) => {\n  const config = getJsonConfig(version, DeriEnv.get())\n  if (config.brokerManager) {\n    return config.brokerManager\n  } else {\n    // default value\n    return []\n  }\n};\n\nexport const getBrokerConfig = (version='v2', chainId) => {\n  const filteredByChainId = getBrokerConfigList(version).filter((c) =>c.chainId === chainId);\n  if (filteredByChainId.length > 0) {\n    return filteredByChainId[0];\n  }\n  throw new Error(`getBrokerConfig(): invalid chainId(${chainId}).`);\n};\n","import { perpetualPoolFactory } from '../factory';\nimport { getPriceFromRest } from '../../shared/utils/oracle';\nimport { io } from 'socket.io-client';\n\n/** @module apiCache */\n/**\n * fundingRateCache Object\n * @name fundingRateCache\n * @property {function} get - Get the funding rate from cache\n * @property {function} set - set the funding rate cache\n */\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress) {\n      const key = `${chainId}.${contractAddress}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`Cache key is not in resourceMap: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, resource) {\n      const key = `${chainId}.${contractAddress}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();\n\nexport const accountAddressCache = (function () {\n  let _accountAddress = '';\n  return {\n    get() {\n      if (_accountAddress === '') {\n        console.log(\"please init 'accountAddress' first\");\n      }\n      return _accountAddress;\n    },\n    set(value) {\n      if (typeof value === 'string' && value !== '') {\n        _accountAddress = value;\n      }\n    },\n  };\n})();\n\n/**\n * priceCache Object\n * @name priceCache\n * @property {function} get - Get the price from cache\n * @property {function} update - Set the price to automatic update during a time interval\n * @property {function} clear - Clear the the automatic update of the price\n */\nexport const priceCache = (function () {\n  let _price = '';\n  let _interval = null;\n  return {\n    get() {\n      if (_price === '') {\n        console.log(\"please init 'price' first\");\n      }\n      return _price;\n    },\n    async _update(poolAddress, symbol) {\n      try {\n        const res = await getPriceFromRest(symbol);\n        if (res !== '') {\n          _price = res;\n        }\n      } catch (err) {\n        console.log(`priceCache.update: ${err}`)\n      }\n    },\n    update(poolAddress, symbol) {\n      const self = this;\n      _interval = setInterval(() => {\n        // console.log('tick')\n        self._update(poolAddress, symbol);\n      }, 3000);\n    },\n    clear() {\n      if (_interval) {\n        clearInterval(_interval);\n      }\n      _price = '';\n    },\n  };\n})();\n\n/**\n * PerpetualPoolParametersCache Object\n * @name PerpetualPoolParametersCache\n * @property {function} get - Get the perpetualPoolParameters from cache\n * @property {function} update - Set the perpetualPoolParameters\n */\n\nexport const PerpetualPoolParametersCache = (function () {\n  let _parameters = {};\n  return {\n    get() {\n      if (!_parameters.multiplier) {\n        console.log(\"please init 'perpetual pool parameters' first\");\n      }\n      return _parameters;\n    },\n    async update(chainId, poolAddress) {\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n      const res = await perpetualPool.getParameters();\n      if (res.multiplier) {\n        _parameters = res;\n      }\n      return res;\n    },\n  };\n})();\n\n// websocket instance\nexport const wsInstance = (function(){\n  let _ws = null;\n  return {\n    get() {\n      if (_ws) {\n        return _ws\n      } else {\n        console.log('wsInstance.get() error: ws instance is not init')\n      }\n    },\n    set(url) {\n      try {\n        const ws = io(url, {\n          transports: ['websocket'],\n          path: '/ws',\n        });\n        ws.on('connect', () => {\n          console.log('hello from ws:', ws.id);\n        })\n        if (ws) {\n          _ws = ws\n        } else {\n          console.log('wsInstance.get() error: ws instance is not init')\n        }\n      } catch (err) {\n        console.log('wsInstance.set():', err)\n      }\n    },\n    getOrSet(url) {\n      if (!_ws) {\n        this.set(url)\n      }\n      return _ws\n    }\n  }\n})();\n","import {\n  bTokenFactory,\n  bg,\n  formatBN,\n  naturalToDeri,\n  getPoolV1Config,\n  deriToNatural,\n} from '../../shared';\nimport {\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle'\nimport {\n  calculateMaxRemovableShares,\n  calculateMaxWithdrawMargin,\n  isOrderValid,\n} from '../calculation';\n\n/**\n * Unlock the account in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Deposit margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string|number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\n};\n\n/**\n * Withdraw margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n  const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\n\n  const maxWithdrawMargin = calculateMaxWithdrawMargin(\n    price,\n    volume,\n    margin,\n    cost,\n    multiplier,\n    minInitialMarginRatio\n  );\n  if (bg(amount).lte(maxWithdrawMargin)) {\n    try {\n      const tx = await pPool._transact(\n        'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'amount exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Mint in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  //const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const decimals = await bToken.decimals();\n  const BONE = 10 ** decimals;\n  amount = formatBN(bg(amount).multipliedBy(BONE));\n  let res;\n  try {\n    const tx = await bToken._transact('mint', [amount], accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Add liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await pPool._transact(\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n      [naturalToDeri(amount)],\n      accountAddress\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} shares\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares\n) => {\n  const { lTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const {\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n  } = await pPool.getStateValues();\n\n  const maxRemovableShares = calculateMaxRemovableShares(\n    lTokenBalance,\n    lTokenTotalSupply,\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n    multiplier,\n    minPoolMarginRatio,\n    price\n  );\n  let res;\n  if (bg(shares).lte(maxRemovableShares)) {\n    try {\n      const tx = await pPool._transact(\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(shares)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'shares exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Trade with margin in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} newVolume\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minPoolMarginRatio,\n  } = await pPool.getParameters();\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\n  let res;\n  const orderValidation = isOrderValid(\n    price,\n    margin,\n    volume,\n    liquidity,\n    tradersNetVolume,\n    multiplier,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    bg(newVolume),\n    bg(amount)\n  );\n  if (orderValidation.success) {\n    try {\n      const tx = await pPool._transact(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.message };\n  }\n  return res;\n};\n\n/**\n * Close position in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  let { volume } = await pToken.getPositionInfo(accountAddress);\n  volume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const tx = await pPool._transact(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(volume), '0'],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n","import {\n  //naturalToDeri,\n  deriToNatural,\n  hexToString,\n  toChecksumAddress,\n  hexToNumber,\n  hexToNumberString,\n  bg,\n} from '../../shared/utils';\nimport { getPoolV1Config } from '../../shared/config';\n\nimport { databaseFactory } from '../../shared/factory';\nimport { perpetualPoolFactory } from '../factory';\n\nconst processTradeEvent = async (\n  perpetualPool,\n  bTokenSymbol,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier,\n    feeRatio\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: bg(volume).times(multiplier).toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  // console.log(JSON.stringify(res))\n  return res;\n};\n\nconst processLiquidateEvent = async (\n  info,\n  txHash,\n  bTokenSymbol,\n  multiplier\n) => {\n  // console.log(info)\n  const volume = deriToNatural(info.volume).abs();\n  // const cost = deriToNatural(info.cost).abs()\n  // const margin = info.margin\n  const timestamp = `${info.timestamp}000`;\n  const price = deriToNatural(info.price);\n  // const liquidator = info.liquidator\n  // const reward = info.reward\n  const national = volume.times(price).times(multiplier);\n  // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\n\n  const res = {\n    direction: 'Liquidation',\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: national.toString(),\n    volume: bg(volume).times(multiplier).toString(),\n    transactionFee: '0',\n    transactionHash: txHash.toString(),\n    time: timestamp,\n    // cost: naturalToDeri(cost).toString(),\n    // margin: margin.toString(),\n    // liquidator,\n    // reward: reward.toString(),\n  };\n  return res;\n};\n\n/**\n * Get the user trade history\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n * @returns {string} response[].direction\n * @returns {string} response[].baseToken\n * @returns {string} response[].price\n * @returns {string} response[].notional\n * @returns {string} response[].volume\n * @returns {string} response[].transactionFee\n * @returns {string} response[].time - Timestamp of the trade\n */\n\nexport const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\n  const keyMeta = `${chainId}.${poolAddress}`;\n  const db = databaseFactory();\n  let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\n    db.getValues([`${keyMeta}.tradeHistoryBlock`]),\n    db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\n  ]);\n  tradeFromBlock = hexToNumber(tradeFromBlock[0]);\n  liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [\n      tradeHistoryOffline,\n      tradeHistoryOnline,\n      liquidateHistoryOffline,\n      liquidateHistoryOnline,\n    ] = await Promise.all([\n      getTradeHistoryOffline(chainId, poolAddress, accountAddress),\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n      .concat(liquidateHistoryOnline)\n      .concat(tradeHistoryOffline)\n      .concat(liquidateHistoryOffline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n\n// get trade history combined from cache and from online pull\nconst getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\n  // console.log(chainId, poolAddress, accountAddress)\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.trade`;\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const {\n    multiplier,\n  } = await perpetualPool.getParameters();\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const tradeHistoryLength = keyArray.length / 8;\n      // console.log(`trade history length: ${tradeHistoryLength}`)\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < tradeHistoryLength; i++) {\n        const indexBase = i * 8;\n        //console.log(resp[indexBase + 6].trim());\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: bg(deriToNatural(resp[indexBase + 4])).times(multiplier).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n\n// get trade history online from the Block number\nexport const getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const {\n    multiplier,\n    feeRatio,\n    minInitialMarginRatio,\n  } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processTradeEvent(\n      perpetualPool,\n      bTokenSymbol,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      minInitialMarginRatio\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get liquidate history online from the Block number\nexport const getLiquidateHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Liquidate',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const { multiplier } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processLiquidateEvent(\n      item.returnValues,\n      item.transactionHash,\n      bTokenSymbol,\n      multiplier\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get trade history combined from cache and from online pull\nconst getLiquidateHistoryOffline = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.liquidate`;\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const {\n    multiplier,\n  } = await perpetualPool.getParameters();\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const liquidateHistoryLength = keyArray.length / 8;\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < liquidateHistoryLength; i++) {\n        const indexBase = i * 8;\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: bg(deriToNatural(resp[indexBase + 4])).times(multiplier).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n","// const\nimport { getPoolV1Config } from '../../shared/config';\nimport { bg, deriToNatural, getHttpBase, fetchJson } from '../../shared/utils';\nimport {\n  getTradeHistoryOnline,\n} from './trade_history_api';\nimport { perpetualPoolFactory } from '../factory';\n\n/**\n * Get specification from REST API, please refer {@link getSpecification}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getSpecification2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/specification/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate from REST API, please refer {@link getFundingRate}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRate2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/funding_rate/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity used from REST API, please refer {@link getLiquidityUsed}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getLiquidityUsed2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/liquidity_used/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate cache from REST API, it used to 'fundingRateCache.update(chainId, poolAddress, result)'\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRateCache2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/funding_rate_cache/${poolAddress}`\n  );\n  if (res && res.success) {\n    let result = res.data;\n    result.price = bg(result.price);\n    result.fundingRate = bg(result.fundingRate);\n    result.liquidityUsed = bg(result.liquidityUsed);\n    return result;\n  }\n  return res;\n};\n\n/**\n * Get position info from REST API, please refer {@link getPositionInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getPositionInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/position_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity info from REST API, please refer {@link getLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance from REST API, please refer {@link getWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity of the slp pool from REST API, please refer {@link getSlpLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the slp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getClpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the deri pool from REST API, please refer {@link getDeriBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getDeriBalance2 = async (chainId, poolAddress, accountAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/deri_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get the user trade history from REST API, please refer {@link getTradeHistory}\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n */\nexport const getTradeHistory2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let tradeFromBlock, liquidateFromBlock, tradeHistory;\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\n  const res = await fetchJson(\n    `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n    liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\n    tradeHistory = res.data.tradeHistory;\n  }\n\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const {\n    multiplier,\n  } = await perpetualPool.getParameters();\n  tradeHistory = tradeHistory.filter((i) => i).map((i) => {\n    return {\n      direction: i.direction.trim(),\n      baseToken: bTokenSymbol,\n      price: deriToNatural(i.price).toString(),\n      notional: deriToNatural(i.notional).toString(),\n      volume: deriToNatural(i.volume).times(multiplier).toString(),\n      transactionFee: deriToNatural(i.transactionFee).toString(),\n      transactionHash: i.transactionHash,\n      time: i.time.toString(),\n    };\n  });\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [tradeHistoryOnline ] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      )\n    ]);\n    const result = tradeHistoryOnline.concat(tradeHistory);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n","import {\n  validateArgs,\n  naturalWithPercentage,\n  deriToNatural,\n  bg,\n} from '../../shared/utils';\nimport {\n  bTokenFactory,\n} from '../../shared/factory';\nimport { getPoolV1Config } from '../../shared';\nimport { getPriceFromRest } from '../../shared/utils/oracle';\nimport { getPoolInfoApy } from '../../shared/api/database_api';\nimport {\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\nimport {\n  fundingRateCache,\n  PerpetualPoolParametersCache,\n  priceCache,\n} from './api_v1_globals';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  calculateShareValue,\n  calculateMaxRemovableShares,\n  calculateEntryPrice,\n  calculateMarginHeld,\n  calculatePnl,\n  calculateLiquidationPrice,\n  processFundingRate,\n} from '../calculation';\n\n/**\n * Get the contract information\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.addresses\n * @returns {string} response.symbol\n * @returns {string} response.bTokenSymbol\n * @returns {string} response.multiplier\n * @returns {string} response.feeRatio\n * @returns {string} response.minPoo\n * @returns {string} response.minPoolMarginRatio\n * @returns {string} response.minInitialMarginRatio\n * @returns {string} response.minMaintenanceMarginRatio\n * @returns {string} response.minAddLiquidity\n * @returns {string} response.redemptionFeeRatio\n * @returns {string} response.fundingRateCoefficient\n * @returns {string} response.minLiquidationReward\n * @returns {string} response.maxLiquidationReward\n * @returns {string} response.liquidationCutRatio\n * @returns {string} response.priceDelayAllowance\n */\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  //accountAddress,\n) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    feeRatio,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n    minAddLiquidity,\n    redemptionFeeRatio,\n    fundingRateCoefficient,\n    minLiquidationReward,\n    maxLiquidationReward,\n    liquidationCutRatio,\n    priceDelayAllowance,\n  } = await pPool.getParameters();\n  let symbol = await pPool.symbol();\n  const bTokenSymbol = await bToken.symbol();\n\n  // fix symbol BTCUSD issue, will remove later\n  // if (poolAddress === '0xA2D7316Bc60AA9463DfB78379d25E77371990507') {\n  //   symbol = 'iMEME'\n  // }\n\n  return {\n    addresses: poolAddress,\n    symbol,\n    bTokenSymbol,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    minInitialMarginRatio: minInitialMarginRatio.toString(),\n    minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n    minAddLiquidity: minAddLiquidity.toString(),\n    redemptionFeeRatio: redemptionFeeRatio.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minLiquidationReward: minLiquidationReward.toString(),\n    maxLiquidationReward: maxLiquidationReward.toString(),\n    liquidationCutRatio: liquidationCutRatio.toString(),\n    priceDelayAllowance: priceDelayAllowance.toString(),\n  };\n};\n\n/**\n * Get position Information of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.volume\n * @returns {string} response.averageEntryPrice\n * @returns {string} response.margin\n * @returns {string} response.marginHeld\n * @returns {string} response.unrealizedPnl\n * @returns {string} response.liquidationPrice\n */\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n  } = await pPool.getParameters();\n  const symbol = await pPool.symbol()\n  //console.log('getPositionInfo', chainId, poolAddress, accountAddress, price);\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n  const price = await getPriceFromRest(symbol);\n  if (price === '') {\n    return {\n      price,\n      volume: bg(volume).times(multiplier).toString(),\n      averageEntryPrice: calculateEntryPrice(\n        volume,\n        cost,\n        multiplier\n      ).toString(),\n      margin: margin.toString(),\n      marginHeld: '',\n      unrealizedPnl: '',\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        cost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n    };\n  } else {\n    return {\n      price,\n      volume: bg(volume).times(multiplier).toString(),\n      averageEntryPrice: calculateEntryPrice(\n        volume,\n        cost,\n        multiplier\n      ).toString(),\n      margin: margin.toString(),\n      marginHeld: calculateMarginHeld(\n        price,\n        volume,\n        multiplier,\n        minInitialMarginRatio\n      ).toString(),\n      unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        cost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n    };\n  }\n};\n\n/**\n * Get liquidity Info of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply, symbol] = await Promise.all([\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n    pPool.symbol(),\n  ]);\n  const price = await getPriceFromRest(symbol);\n  const {\n    liquidity,\n    tradersNetCost,\n    tradersNetVolume,\n  } = await pPool.getStateValues();\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const poolDynamicEquity = liquidity.plus(\n    tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\n  );\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      tradersNetVolume,\n      tradersNetCost,\n      multiplier,\n      minPoolMarginRatio,\n      price\n    ).toString(),\n  };\n};\n\n/**\n * Get user balance in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {string} user balance\n */\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n\n/**\n * Check account is unlocked in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\n/**\n * Get estimate margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} volume\n * @param {string} leverage\n * @returns {string}\n */\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const { multiplier } = await pPool.getParameters();\n  const symbol = await pPool.symbol();\n  const price = await getPriceFromRest(symbol);\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .div(bg(leverage))\n    .toString();\n};\n\n/**\n * Get estimate Fee in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} volume\n * @returns {string}\n */\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\n  // const price = await getBTCUSDPrice(chainId, poolAddress);\n  let price = priceCache.get();\n  let parameters = PerpetualPoolParametersCache.get();\n  if (price === '') {\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\n    const symbol = await pPool.symbol();\n    await priceCache._update(poolAddress, symbol);\n    price = priceCache.get();\n  }\n  // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\n  // const { multiplier, feeRatio } = await pPool.getParameters();\n  if (!parameters.multiplier) {\n    parameters = await PerpetualPoolParametersCache.update(\n      chainId,\n      poolAddress\n    );\n  }\n  //console.log('price', price);\n  const { multiplier, feeRatio } = parameters;\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};\n\n/**\n * Get funding rate of the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.fundingRate0\n * @returns {string} response.fundingRatePerBlock\n * @returns {string} response.liquidity\n * @returns {string} response.volume\n * @returns {string} response.tradersNetVolume\n */\nexport const getFundingRate = async (chainId, poolAddress) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n\n  const res = await perpetualPool\n    .getFundingRate()\n    .catch((err) => console.log('getFundingRate', err));\n  fundingRateCache.set(chainId, poolAddress, res);\n  const poolInfo = await getPoolInfoApy(chainId, poolAddress);\n\n  if (res) {\n    // console.log(hexToNatural(res[0]));\n    const {\n      fundingRate,\n      fundingRatePerBlock,\n      liquidity,\n      tradersNetVolume,\n      multiplier,\n    } = res;\n    const volume = poolInfo.volume24h;\n    // fundingRate = processFundingRate(chainId, fundingRate);\n\n    return {\n      fundingRate0: naturalWithPercentage(fundingRate),\n      fundingRatePerBlock: bg(fundingRatePerBlock).toExponential(10),\n      liquidity: liquidity.toString(),\n      volume: deriToNatural(volume).toString(),\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString(),\n    };\n  }\n};\n\nexport const getFundingRateCache = async(chainId, poolAddress) => {\n  return fundingRateCache.get(chainId, poolAddress)\n}\n\n/**\n * Get estimate funding rate\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let fundingRate1;\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ];\n    if (!validateArgs(...parameters)) {\n      return {\n        fundingRate1: '0',\n      };\n    }\n    // console.log(parameters)\n    fundingRate1 = calculateFundingRate(...parameters);\n    fundingRate1 = processFundingRate(chainId, fundingRate1);\n    return {\n      fundingRate1: naturalWithPercentage(fundingRate1),\n    };\n  }\n};\n\n/**\n * Get liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidityUsed0\n */\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const { liquidityUsed } = res;\n    return {\n      liquidityUsed0: naturalWithPercentage(liquidityUsed),\n    };\n  }\n};\n\n/**\n * Get estimate liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool\n      .getFundingRate()\n      .catch((err) => console.log('getLiquidityUsed', err));\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.poolMarginRatio,\n    ];\n    if (!validateArgs(...parameters)) {\n      return {\n        liquidityUsed1: '0',\n      };\n    }\n    const liquidityUsed1 = calculateLiquidityUsed(...parameters);\n    return {\n      liquidityUsed1: naturalWithPercentage(liquidityUsed1),\n    };\n  }\n};\n","\n/* eslint-disable */\nexport const perpetualPoolLiteAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address[5]\", \"name\": \"addresses\", \"type\": \"address[5]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"indexPrice\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"lastBlockNumber\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"lastBlockTimestamp\", \"type\": \"uint256\" } ], \"name\": \"executeMigrationSwitchToTimestamp\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getFundingPeriod\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"poolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"period\", \"type\": \"uint256\" } ], \"name\": \"setFundingPeriod\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const perpetualPoolLiteOldAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address[5]\", \"name\": \"addresses\", \"type\": \"address[5]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLastUpdateBlock\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLiquidity\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const bTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const lTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n/* eslint-disable */","import {\n  PerpetualPoolLite,\n  LTokenLite,\n  PTokenLite,\n  PerpetualPoolLiteViewer \n} from './contract';\nimport { PerpetualPoolLiteOld } from './contract/perpetual_pool_old';\n\nconst factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\nconst factoryWithUpgrade = (klass, klassOld, newPoolList) => {\n  let instances = {}\n  return (chainId, address, initialBlock='') => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      if (Array.isArray(newPoolList) && newPoolList.includes(address)) {\n        instances[key] = new klass(chainId, address, initialBlock);\n        return instances[key];\n      } else {\n        instances[key] = new klassOld(chainId, address, initialBlock);\n        return instances[key];\n      }\n    }\n  }\n}\n\nexport const perpetualPoolLiteFactory = factoryWithUpgrade(\n  PerpetualPoolLite,\n  PerpetualPoolLiteOld,\n  [\n    // // prod\n    // '0x3465A2a1D7523DAF811B1abE63bD9aE36D2753e0',\n    // '0x1a9b1B83C4592B9F315E933dF042F53D3e7E4819',\n    // '0xb144cCe7992f792a7C41C2a341878B28b8A11984',\n    // '0xa4eDe2C4CB210CD07DaFbCe56dA8d36b7d688cd0',\n    // // dev\n    // '0x6832DFE1359c158a15E50b31B97b3BCD9cb12701',\n\n    \"0x43701b4bf0430DeCFA41210327fE67Bf4651604C\",\n  ]\n);\n\nexport const lTokenLiteFactory = factory(LTokenLite)\n\nexport const pTokenLiteFactory = factory(PTokenLite)\n\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)","import {\n  //getPoolConfig,\n  ContractBase,\n  deriToNatural,\n  naturalToDeri,\n  //isEqualSet,\n  bTokenFactory,\n} from '../../shared';\nimport { checkOffChainOracleSymbol, getPriceInfos } from '../../shared/utils/oracle';\nimport { perpetualPoolLiteAbi } from './abis';\nimport { lTokenLiteFactory, pTokenLiteFactory } from '../factory';\n\nexport class PerpetualPoolLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\n  }\n\n  async init() {\n    // init web3 and contract\n    await this._init();\n    // init address and parameters\n    if (!this.addresses || !this.pToken) {\n      [this.addresses, this.parameters] = await Promise.all([\n        this.getAddresses(),\n        this.getParameters(),\n      ]);\n      const { bTokenAddress, lTokenAddress, pTokenAddress } = this.addresses;\n      // init bToken, pToken and lToken\n      this.bToken = bTokenFactory(this.chainId, bTokenAddress);\n      this.pToken = pTokenLiteFactory(this.chainId, pTokenAddress);\n      this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\n      this.bTokenSymbol = await this.bToken.symbol();\n    }\n    const symbolIds = await this.pToken.getActiveSymbolIds();\n    // update symbolIds\n    if (\n      !this.activeSymbolIds ||\n      this.activeSymbolIds.toString() !== symbolIds.toString() ||\n      !this.offChainOracleSymbolIds\n    ) {\n      this.activeSymbolIds = symbolIds;\n      this.symbols = await Promise.all(\n        this.activeSymbolIds.reduce(\n          (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n          []\n        )\n      );\n      this.activeSymbolNames = this.symbols.map((s) => s.symbol);\n      this.offChainOracleSymbols = await Promise.all(\n        this.symbols\n          .map((s) => s.oracleAddress)\n          .reduce(\n            (acc, o, index) => [\n              ...acc,\n              checkOffChainOracleSymbol(\n                this.chainId,\n                o,\n                this.symbols[index].symbol\n              ),\n            ],\n            []\n          )\n      );\n      this.offChainOracleSymbolIds = this.activeSymbolIds.reduce(\n        (acc, i, index) => {\n          return this.offChainOracleSymbols[index] === '' ? acc : [...acc, i];\n        },\n        []\n      );\n      this.offChainOracleSymbols = this.offChainOracleSymbols.filter(\n        (s) => s && s !== ''\n      );\n      //console.log('offchain', this.offChainOracleSymbols);\n    }\n  }\n\n  // update symbols\n  async getSymbols() {\n    await this.init()\n    this.symbols = await Promise.all(\n      this.activeSymbolIds.reduce(\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n        []\n      )\n    );\n    return this.symbols\n  }\n\n  // update positions\n  async getPositions(accountAddress) {\n    await this.init()\n    this.positions = await Promise.all(\n      this.activeSymbolIds.reduce(\n        (acc, symbolId) => [\n          ...acc,\n          this.pToken.getPosition(accountAddress, symbolId),\n        ],\n        []\n      )\n    );\n    return this.positions\n  }\n\n  async getAddresses() {\n    const res = await this._call('getAddresses');\n    return res;\n  }\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      // decimals0: res.decimals0,\n      // minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n\n  async getLastUpdateBlock() {\n    const res = await this._call('getPoolStateValues', []);\n    return res[1]\n  }\n  async getLiquidity() {\n    const res = await this._call('getPoolStateValues', []);\n    return deriToNatural(res[0])\n  }\n  async getProtocolFeeAccrued() {\n    const res = await this._call('getPoolStateValues', []);\n    return deriToNatural(res[2])\n  }\n  // async getBTokenOracle(bTokenId) {\n  //   //bTokenId = parseInt(bTokenId)\n  //   return await this._call('getBTokenOracle', [bTokenId])\n  // }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res = await this._call('getSymbol', [symbolId]);\n      return {\n        symbol: res.symbol,\n        symbolId: res.symbolId,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n\n  // async getSymbolOracle(symbolId) {\n  //   //symbolId = parseInt(symbolId)\n  //   return await this._call('getSymbolOracle', [symbolId])\n  // }\n\n  async _getSymbolPrices() {\n    let prices = [];\n    await this.init()\n    if (this.offChainOracleSymbolIds.length > 0) {\n      const priceInfos = await getPriceInfos(this.offChainOracleSymbols);\n      prices = Object.values(priceInfos).reduce((acc, p, index) => {\n        acc.push([\n          this.offChainOracleSymbolIds[\n            this.offChainOracleSymbols.indexOf(Object.keys(priceInfos)[index])\n          ],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ]);\n        return acc;\n      }, []);\n    }\n    //console.log('prices', prices);\n    return prices;\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'addLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'removeLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async addMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'addMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'removeMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async trade(accountAddress, symbolId, newVolume) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(newVolume), prices],\n      accountAddress\n    );\n  }\n}\n","import {\n  //getPoolConfig,\n  ContractBase,\n  deriToNatural,\n  naturalToDeri,\n  //isEqualSet,\n  bTokenFactory,\n} from '../../shared';\nimport { checkOffChainOracleSymbol, getPriceInfos } from '../../shared/utils/oracle';\nimport { perpetualPoolLiteOldAbi} from './abis';\nimport { lTokenLiteFactory, pTokenLiteFactory } from '../factory';\n\nexport class PerpetualPoolLiteOld extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteOldAbi);\n  }\n\n  async init() {\n    // init web3 and contract\n    await this._init();\n    // init address and parameters\n    if (!this.addresses || !this.pToken) {\n      [this.addresses, this.parameters] = await Promise.all([\n        this.getAddresses(),\n        this.getParameters(),\n      ]);\n      const { bTokenAddress, lTokenAddress, pTokenAddress } = this.addresses;\n      // init bToken, pToken and lToken\n      this.bToken = bTokenFactory(this.chainId, bTokenAddress);\n      this.pToken = pTokenLiteFactory(this.chainId, pTokenAddress);\n      this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\n      this.bTokenSymbol = await this.bToken.symbol();\n    }\n    const symbolIds = await this.pToken.getActiveSymbolIds();\n    // update symbolIds\n    if (\n      !this.activeSymbolIds ||\n      this.activeSymbolIds.toString() !== symbolIds.toString()\n    ) {\n      this.activeSymbolIds = symbolIds;\n      this.symbols = await Promise.all(\n        this.activeSymbolIds.reduce(\n          (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n          []\n        )\n      );\n      this.activeSymbolNames = this.symbols.map((s) => s.symbol);\n      this.offChainOracleSymbols = await Promise.all(\n        this.symbols.map((s) => s.oracleAddress).reduce(\n          (acc, o, index) => [\n            ...acc,\n            checkOffChainOracleSymbol(\n              this.chainId,\n              o,\n              this.symbols[index].symbol\n            ),\n          ],\n          []\n        )\n      );\n      this.offChainOracleSymbolIds = this.activeSymbolIds.reduce(\n        (acc, i, index) => {\n          return this.offChainOracleSymbols[index] === '' ? acc : [...acc, i];\n        },\n        []\n      );\n      this.offChainOracleSymbols = this.offChainOracleSymbols.filter(\n        (s) => s && s !== ''\n      );\n      //console.log('offchain', this.offChainOracleSymbols);\n    }\n  }\n\n  // update symbols\n  async getSymbols() {\n    await this.init()\n    this.symbols = await Promise.all(\n      this.activeSymbolIds.reduce(\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n        []\n      )\n    );\n    return this.symbols\n  }\n\n  // update positions\n  async getPositions(accountAddress) {\n    await this.init()\n    this.positions = await Promise.all(\n      this.activeSymbolIds.reduce(\n        (acc, symbolId) => [\n          ...acc,\n          this.pToken.getPosition(accountAddress, symbolId),\n        ],\n        []\n      )\n    );\n    return this.positions\n  }\n\n  async getAddresses() {\n    const res = await this._call('getAddresses');\n    return res;\n  }\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      // decimals0: res.decimals0,\n      // minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getLastUpdateBlock() {\n    const res = await this._call('getLastUpdateBlock');\n    return parseInt(res);\n  }\n  async getProtocolFeeAccrued() {\n    const res = await this._call('getProtocolFeeAccrued');\n    return deriToNatural(res);\n  }\n  async getLiquidity() {\n    const res = await this._call('getLiquidity');\n    return deriToNatural(res);\n  }\n  // async getBTokenOracle(bTokenId) {\n  //   //bTokenId = parseInt(bTokenId)\n  //   return await this._call('getBTokenOracle', [bTokenId])\n  // }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res = await this._call('getSymbol', [symbolId]);\n      return {\n        symbol: res.symbol,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n\n  // async getSymbolOracle(symbolId) {\n  //   //symbolId = parseInt(symbolId)\n  //   return await this._call('getSymbolOracle', [symbolId])\n  // }\n\n  async _getSymbolPrices() {\n    let prices = [];\n    await this.init()\n    if (this.offChainOracleSymbolIds.length > 0) {\n      const priceInfos = await getPriceInfos(this.offChainOracleSymbols);\n      prices = Object.values(priceInfos).reduce((acc, p, index) => {\n        acc.push([\n          this.offChainOracleSymbolIds[\n            this.offChainOracleSymbols.indexOf(Object.keys(priceInfos)[index])\n          ],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ]);\n        return acc;\n      }, []);\n    }\n    //console.log('prices', prices);\n    return prices;\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'addLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'removeLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async addMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'addMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'removeMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async trade(accountAddress, symbolId, newVolume) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(newVolume), prices],\n      accountAddress\n    );\n  }\n}\n","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural } from '../../shared/utils';\nimport { lTokenLiteAbi } from './abis';\n\nexport class LTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenLiteAbi)\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    const res = await this._call('balanceOf', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n}\n","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural } from '../../shared/utils'\nimport { pTokenLiteAbi } from './abis';\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenLiteAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async ownerOf(tokenId) {\n    return await this._call('ownerOf', [tokenId]);\n  }\n  async getMargin(accountAddress) {\n    const res = await this._call('getMargin', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getActiveSymbolIds() {\n    return await this._call('getActiveSymbolIds');\n  }\n  async isActiveSymbolId(symbolId) {\n    return await this._call('isActiveSymbolId', [symbolId]);\n  }\n  async isApprovedForAll(owner, operator) {\n    return await this._call('isApprovedForAll', [owner, operator]);\n  }\n  async getApproved(tokenId) {\n    return await this._call('getApproved', [tokenId]);\n  }\n  async getNumPositionHolders(symbolId) {\n    return await this._call('getNumPositionHolders', [symbolId]);\n  }\n\n  // === transaction ===\n}\n","import { ContractBase } from '../../shared';\nimport { perpetualPoolLiteViewerAbi } from './abis';\n\nexport class PerpetualPoolLiteViewer extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\n  }\n  async getOffChainOracleSymbols(poolAddress) {\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\n    //return res.filter((s) => s && s !== '');\n    return res\n  }\n}\n","import { catchApiError, bg, deriToNatural, getNetworkName } from '../../shared/utils';\nimport { databaseFactory } from '../../shared/factory';\nimport { calculateMaxRemovableShares, calculateShareValue } from '../../v1/calculation';\nimport { perpetualPoolLiteFactory } from '../factory';\n\n\nconst _getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  //const { lToken:lTokenAddress, pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', null, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  await perpetualPool.init()\n  // const bTokenSymbol = perpetualPool.bTokenSymbol\n  // const lToken = lTokenLiteFactory(chainId, lTokenAddress)\n  // const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  const lToken = perpetualPool.lToken\n  // const pToken = perpetualPool.pToken\n  const parameterInfo = perpetualPool.parameters\n  const symbolIds = perpetualPool.activeSymbolIds\n  //const symbolIndex = symbolIds.indexOf(symbolId)\n  //const symbols = perpetualPool.symbols\n\n  const [liquidity, lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    //perpetualPool.getParameters(),\n    perpetualPool.getLiquidity(),\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n    //pToken.getActiveSymbolIds(),\n  ])\n  const { minPoolMarginRatio } = parameterInfo;\n  let promises = []\n  for (let i = 0; i < symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\n  }\n  const symbols = await Promise.all(promises)\n  const totalPnl = symbols.reduce((acc, s) => {\n    return acc.plus(s.tradersNetVolume.times(s.price).times(s.multiplier).minus(s.tradersNetCost))\n  }, bg(0))\n  const poolDynamicEquity = liquidity.minus(totalPnl)\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0))\n  const value = symbols.reduce((acc, s) => acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier)), bg(0))\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      value,\n      cost,\n      minPoolMarginRatio\n    ).toString(),\n  };\n}\nexport const getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  return catchApiError(\n    _getLiquidityInfo,\n    [chainId, poolAddress, accountAddress],\n    'getLiquidityInfo',\n    {\n      totalSupply: '',\n      poolLiquidity: '',\n      shares: '',\n      shareValue: '',\n      maxRemovableShares: '',\n    }\n  );\n}\n\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol:'',\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidity: '',\n    symbol:'',\n  };\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n};\n","import { catchTxApiError } from '../../shared/utils';\nimport { perpetualPoolLiteFactory } from '../factory.js';\n\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\n  const args = [chainId, poolAddress, accountAddress, amount]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.addLiquidity(accountAddress, amount)\n  }, args)\n}\n\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.removeLiquidity(accountAddress, amount, isMaximum)\n  }, args)\n}\n","import { bg, max } from '../../shared/utils';\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return volume.times(price).times(multiplier).minus(cost);\n}\n\n// export const calculateMaxWithdrawMargin = (\n//   price,\n//   volume,\n//   margin,\n//   cost,\n//   multiplier,\n//   minInitialMarginRatio\n// ) => {\n//   if (volume.eq(0)) {\n//     return margin;\n//   }\n//   const held = calculateMarginHeld(\n//     price,\n//     volume,\n//     multiplier,\n//     minInitialMarginRatio\n//   );\n//   const pnl = calculatePnl(price, volume, multiplier, cost);\n//   const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\n//   return withdrawable;\n// };\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  dynamicCost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = bg(cost).minus(margin);\n  let res = bg(volume).gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier)\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier);\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  //price,\n  margin,\n  marginHeld,\n  liquidity,\n  liquidityUsed,\n  // multiplier,\n  // minPoolMarginRatio,\n  // newVolume,\n) => {\n  const minMargin = marginHeld;\n  // const poolMaxVolume = liquidity.minus(liquidityUsed)\n  //   .div(minPoolMarginRatio)\n  //   .div(price)\n  //   .div(multiplier);\n  if (margin.gte(minMargin)) {\n    // if (\n    //   newVolume.lte(poolMaxVolume) &&\n    //   newVolume.gte(poolMaxVolume.negated())\n    // ) {\n    if (liquidity.minus(liquidityUsed).gte(0)) {\n      return { success: true };\n    }\n    return { success: false, error: 'Pool has insufficient liquidity' };\n  }\n  return { success: false, error: 'Trader has insufficient margin' };\n};\n\nexport const calculateTxFee = (volume, price, multiplier, feeRatio) => {\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};","import { bg, getDailyBlockNumber, validateArgs } from '../../shared/utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio\n    )\n  ) {\n    return bg(tradersNetVolume)\n      .times(price)\n      .times(multiplier)\n      .times(poolMarginRatio)\n      .div(liquidity)\n      .abs();\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio,\n    ];\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\n  }\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    )\n  ) {\n    return bg(liquidity).eq(0) ? bg(0) : bg(tradersNetVolume)\n      .times(price)\n      // .times(price)\n      // .times(multiplier)\n      .times(multiplier)\n      .times(fundingRateCoefficient)\n      .div(liquidity);\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    ];\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\n  }\n};\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  //console.log(annualBlockCount);\n  return bg(fundingRate).times(annualBlockCount);\n};\n\nexport const calculateFundingFee = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  fundingRateCoefficient,\n  dynamicEquity,\n  cumulativeFundingRate,\n  lastCumulativeFundingRate,\n  lastUpdatedBlockNumber,\n  latestBlockNumber,\n  volume,\n) => {\n  if (bg(volume).eq(0)) {\n    return '0'\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      fundingRateCoefficient,\n      dynamicEquity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    ];\n    if (\n      validateArgs(...args)\n    ) {\n      return bg(dynamicEquity).eq(0) ? bg(0) : bg(tradersNetVolume)\n        .times(price)\n        .times(multiplier)\n        .times(price)\n        .times(multiplier)\n        .times(fundingRateCoefficient)\n        .div(dynamicEquity)\n        .times(bg(latestBlockNumber).minus(lastUpdatedBlockNumber))\n        .plus(cumulativeFundingRate)\n        .minus(lastCumulativeFundingRate)\n        .times(volume)\n    } else {\n      console.log(`calculateFundingFee: invalid args: ${args}`);\n      return 'NaN'\n    }\n  }\n};","import { bg, max, min } from '../../shared/utils'\n\nexport const calculateBTokenDynamicEquities = (bTokens) => {\n  //const dynamicEquities = bTokens.map((b) => bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\n  //const totalDynamicEquity = dynamicEquities.reduce((accum, d) => accum.plus(d), bg(0))\n  const totalDynamicEquity = bTokens.reduce((accum, b) => accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)), bg(0))\n  return totalDynamicEquity\n}\n\nexport const isBToken0RatioValid = (bTokens, bTokenId, amount, bToken0Ratio) => {\n  bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).plus(amount)\n  const totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  const b = bTokens['0']\n  const dynamicEquity = bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\n  //console.log('estimatedBToken0Ratio',dynamicEquity.div(totalDynamicEquity).toString())\n  // use 1 as efficient\n  if (\n    !totalDynamicEquity.eq(0) &&\n    dynamicEquity.div(totalDynamicEquity).times('1').lt(bToken0Ratio)\n  ) {\n    return { success: false, error: 'Trader has insufficient bToken0' };\n  } else {\n    return { success: true };\n  }\n}\n\nexport const isPoolMarginRatioValid = (bTokens, bTokenId, amount, userLiquidity, symbols, poolMarginRatio) => {\n  if (bg(amount).gte(userLiquidity)) {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(userLiquidity)\n  } else {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(amount)\n  }\n  let totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  let totalCost = bg(0)\n  for (let i=0; i<symbols.length; i++) {\n    const s = symbols[i]\n    if (!bg(s.tradersNetVolume).eq(0)) {\n      const cost = bg(s.tradersNetVolume).times(s.price).times(s.multiplier)\n      totalDynamicEquity = totalDynamicEquity.plus(s.tradersNetCost).minus(cost)\n      totalCost = totalCost.plus(cost.abs())\n    }\n  }\n  //console.log(totalDynamicEquity.toString(), totalCost.toString())\n  if (\n    !totalCost.eq(0) &&\n    totalDynamicEquity.div(totalCost).times('1').lt(poolMarginRatio)\n  ) {\n    return { success: false, error: 'Trader has insufficient liquidity' };\n  } else {\n    return { success: true };\n  }\n}\n\n\nexport const calculateMaxRemovableLiquidity = (\n  bToken,\n  userLiquidity,\n  cost,\n  pnl,\n  restLiquidity,\n  minPoolMarginRatio,\n) => {\n  if (bg(cost).eq(0)) {\n    return userLiquidity;\n  } else {\n    return max(\n      min(\n        bg(bToken.liquidity).minus(\n          bg(minPoolMarginRatio)\n            .times(cost)\n            .plus(pnl)\n            .minus(restLiquidity)\n            .div(bToken.price)\n            .div(bToken.discount)\n        ).times('0.98'),\n        bg(userLiquidity)\n      ),\n      bg(0)\n    );\n  }\n};\n\n// for v1 mining\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\n\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  value,\n  cost,\n  minPoolMarginRatio,\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const removable = bg(liquidity)\n    .plus(cost)\n    .minus(value)\n    .minus(bg(value).abs().times(minPoolMarginRatio));\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\n  return shares;\n};\n","export const priceCache = (function(){\n  let _prices = {}\n  return {\n    get(poolAddress, symbolId) {\n      const key = `${poolAddress}.${symbolId}`\n      if (Object.keys(_prices).includes(key)) {\n        const [price, ] = _prices[key].split('|')\n        //if (parseInt(timestamp) - Date.now() < 10000) {\n          return price\n        //}\n      }\n      console.log('please init priceCache first')\n    },\n    // update(chainId, poolAddress, symbolId) {\n    //   // place holder\n    // },\n    set(poolAddress, symbolId, val) {\n      if (!isNaN(parseFloat(val))) {\n        const timestamp = Date.now().toString()\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\n      }\n    }\n  }\n})()\n\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress, symbolId) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, symbolId, resource) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();\n\nexport const liquidatePriceCache = (function() {\n  let _cache = {}\n  return {\n    get(address) {\n      if (Object.keys(_cache).includes(address)) {\n        return _cache[address]\n      } else {\n        return {}\n      }\n    },\n    set(address, val) {\n      _cache[address] = val\n    },\n  }\n})()\n","import { fromWei } from \"../shared\";\nimport { getOraclePriceFromCache2, oraclePricesCache } from \"../shared/utils/oracle\";\n\nexport const getSymbolPrices = async (chainId, symbols, offChainSymbolIds, offChainSymbolNames) => {\n  const onChainOracleAddressWithPlaceHolder = symbols.map((s) =>\n    offChainSymbolIds.indexOf(s.symbolId) > -1\n      ? ''\n      : s.oracleAddress\n  );\n\n  const onChainSymbolPrices = await Promise.all(\n    onChainOracleAddressWithPlaceHolder\n      .reduce((acc, address, index) => {\n        const _symbol = symbols.map((s) => s.symbol)[index];\n        if (address !== '') {\n          return acc.concat(\n            getOraclePriceFromCache2.get(chainId, _symbol, address)\n          );\n        } else {\n          return acc.concat('');\n        }\n      }, [])\n      .filter((f) => f !== '')\n  );\n\n  const res =  await oraclePricesCache.get(offChainSymbolNames)\n  const offChainSymbolPrices = offChainSymbolNames.map((s) => fromWei(res[s].price))\n\n  // combine offChain and onChain symbol prices\n  const symbolPrices = onChainOracleAddressWithPlaceHolder.map((o) => {\n    if (o !== '') {\n      return onChainSymbolPrices.shift();\n    } else {\n      return offChainSymbolPrices.shift();\n    }\n  });\n  return symbolPrices\n};","import {\n  calculateEntryPrice,\n  calculateFundingRate,\n  calculateLiquidationPrice,\n  processFundingRate,\n  calculateFundingFee,\n} from '../../v2/calculation';\nimport { getPoolConfig } from \"../../shared/config\"\nimport { bTokenFactory } from \"../../shared/factory\"\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from \"../factory.js\"\nimport {\n  bg,\n  catchApiError,\n  getLatestBlockNumber,\n} from '../../shared/utils';\nimport { fundingRateCache, liquidatePriceCache, priceCache } from '../../shared/api/api_globals';\nimport { getIndexInfo } from '../../shared/config/token';\nimport { getSymbolPrices } from '../utils';\n\nexport const getSpecification = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    //const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'v2_lite');\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const bTokenSymbol = perpetualPool.bTokenSymbol\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const { symbol, multiplier, feeRatio, fundingRateCoefficient } = symbolInfo;\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo;\n\n    return {\n      symbol,\n      bTokenSymbol,\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n      indexConstituents: getIndexInfo(symbol),\n    }\n  }, args, 'getSpecification', {\n    symbol: '',\n    bTokenSymbol: '',\n    multiplier: '',\n    feeRatio: '',\n    fundingRateCoefficient: '',\n    minPoolMarginRatio: '',\n    minInitialMarginRatio: '',\n    minMaintenanceMarginRatio: '',\n    minLiquidationReward: '',\n    maxLiquidationReward: '',\n    liquidationCutRatio: '',\n    protocolFeeCollectRatio: '',\n    indexConstituents: { url: '', tokens: [] },\n  })\n}\n\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const pToken = perpetualPool.pToken\n    const parameterInfo = perpetualPool.parameters \n    const symbolIds = perpetualPool.activeSymbolIds\n    const symbolIndex = symbolIds.indexOf(symbolId)\n\n    if (symbolIndex > -1) {\n      let promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      //const symbol = symbols[symbolIndex].symbol\n      //const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\n      //const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\n      const [\n        symbolInfo,\n        liquidity,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        positionInfo,\n        margin,\n        //latestPrice,\n      ] = await Promise.all([\n        //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\n        perpetualPool.getSymbol(symbolId),\n        perpetualPool.getLiquidity(),\n        perpetualPool.getLastUpdateBlock(),\n        getLatestBlockNumber(chainId),\n        pToken.getPosition(accountAddress, symbolId),\n        pToken.getMargin(accountAddress),\n        //getOraclePriceFromCache2.get(chainId, symbol,oracleAddress),\n      ]);\n      //console.log(latestBlockNumber, lastUpdatedBlockNumber)\n      const { volume, cost, lastCumulativeFundingRate } = positionInfo;\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        tradersNetVolume,\n        cumulativeFundingRate,\n      } = symbolInfo;\n      const {\n        minInitialMarginRatio,\n        minMaintenanceMarginRatio,\n      } = parameterInfo;\n\n      // promises = [];\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      // }\n      //const symbols = await Promise.all(promises);\n\n      const symbolPrices = await getSymbolPrices(\n        chainId,\n        symbols,\n        perpetualPool.offChainOracleSymbolIds,\n        perpetualPool.offChainOracleSymbols\n      );\n      // promises = [];\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   const isOffchain = perpetualPool.offChainOracleSymbolIds.indexOf(symbolIds[i]) > -1\n      //   const address = isOffchain ? '' : symbols[i].oracleAddress\n      //   const _symbol = symbolList[i]\n      //   promises.push(\n      //     getOraclePriceFromCache2.get(chainId, _symbol, address),\n      //   );\n      // }\n      // const symbolPrices = await Promise.all(promises);\n      let price;\n      if (symbolIndex === '-1') {\n        price = '0';\n      } else {\n        price = symbolPrices[symbolIndex];\n        priceCache.set(poolAddress, symbolId, price);\n      }\n\n      promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      }\n      const positions = await Promise.all(promises);\n\n      const marginHeld = symbols.reduce((acc, s, index) => {\n        return acc.plus(\n          bg(symbolPrices[index])\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .times(minInitialMarginRatio)\n            .abs()\n        );\n      }, bg(0));\n      const marginHeldBySymbol = bg(volume)\n        .abs()\n        .times(multiplier)\n        .times(price)\n        .times(minInitialMarginRatio);\n\n      const unrealizedPnl = symbols.reduce((acc, s, index) => {\n        return acc.plus(\n          bg(symbolPrices[index])\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .minus(positions[index].cost)\n        );\n      }, bg(0));\n      const unrealizedPnlList = symbols.map((s, index) => {\n        return [\n          s.symbol,\n          bg(symbolPrices[index])\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .minus(positions[index].cost)\n            .toString(),\n        ];\n      }, bg(0));\n\n      const totalCost = positions.reduce((accum, p) => {\n        return accum.plus(bg(p.cost));\n      }, bg(0));\n      const dynamicCost = symbols.reduce((accum, s, index) => {\n        if (index !== symbolIndex) {\n          return accum.plus(\n            bg(positions[index].volume)\n              .times(symbolPrices[index])\n              .times(s.multiplier)\n          );\n        } else {\n          return accum;\n        }\n      }, bg(0));\n\n      const fundingFee = calculateFundingFee(\n        tradersNetVolume,\n        price,\n        multiplier,\n        fundingRateCoefficient,\n        liquidity,\n        cumulativeFundingRate,\n        lastCumulativeFundingRate,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        volume\n      );\n\n      liquidatePriceCache.set(poolAddress, {\n        volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        price,\n        multiplier,\n        minMaintenanceMarginRatio,\n      });\n\n      return {\n        symbol:symbols[symbolIndex].symbol,\n        price,\n        volume: bg(volume).times(symbols[symbolIndex].multiplier).toString(),\n        averageEntryPrice: calculateEntryPrice(\n          volume,\n          cost,\n          multiplier\n        ).toString(),\n        margin: margin.toString(),\n        marginHeld: marginHeld.toString(),\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\n        unrealizedPnl: unrealizedPnl.toString(),\n        unrealizedPnlList,\n        fundingFee: fundingFee.toString(),\n        liquidationPrice: calculateLiquidationPrice(\n          volume,\n          margin,\n          totalCost,\n          dynamicCost,\n          multiplier,\n          minMaintenanceMarginRatio\n        ).toString(),\n      };\n    } else {\n      throw new Error(`-- getPostionInfo: invalid symbolId(${symbolId})`)\n    }\n  }, args, 'getPositionInfo', {\n      symbol: '',\n      price: '',\n      volume: '',\n      averageEntryPrice: '',\n      margin: '',\n      marginHeld: '',\n      marginHeldBySymbol: '',\n      unrealizedPnl: '',\n      unrealizedPnlList: [],\n      fundingFee: '',\n      liquidationPrice: '',\n  })\n}\n\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const pToken = perpetualPool.pToken\n    const parameterInfo = perpetualPool.parameters \n    const symbolIds = perpetualPool.activeSymbolIds\n    //const symbolIndex = symbolIds.indexOf(symbolId)\n\n      let promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      }\n      const positions = await Promise.all(promises);\n\n      // const symbol = symbols[symbolIndex].symbol\n      // const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\n      // const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\n      const [\n        liquidity,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        margin,\n      ] = await Promise.all([\n        //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\n        //perpetualPool.getSymbol(symbolId),\n        perpetualPool.getLiquidity(),\n        perpetualPool.getLastUpdateBlock(),\n        getLatestBlockNumber(chainId),\n        //pToken.getPosition(accountAddress, symbolId),\n        pToken.getMargin(accountAddress),\n        //getOraclePriceFromCache2.get(chainId, symbol,oracleAddress),\n      ]);\n      //console.log(latestBlockNumber, lastUpdatedBlockNumber)\n      const {\n        minInitialMarginRatio,\n        minMaintenanceMarginRatio,\n      } = parameterInfo;\n\n      const symbolList = symbols.map((s) => s.symbol);\n\n      const symbolPrices = await getSymbolPrices(\n        chainId,\n        symbols,\n        perpetualPool.offChainOracleSymbolIds,\n        perpetualPool.offChainOracleSymbols\n      );\n\n      // promises = [];\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   const isOffchain = perpetualPool.offChainOracleSymbolIds.indexOf(symbolIds[i]) > -1\n      //   const address = isOffchain ? '' : symbols[i].oracleAddress\n      //   const _symbol = symbolList[i]\n      //   promises.push(\n      //     getOraclePriceFromCache2.get(chainId, _symbol, address)\n      //   );\n      // }\n      // const symbolPrices = await Promise.all(promises);\n\n      const marginHeld = symbols.reduce((acc, s, index) => {\n        return acc.plus(\n          bg(symbolPrices[index])\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .times(minInitialMarginRatio)\n            .abs()\n        );\n      }, bg(0));\n\n      const totalCost = positions.reduce((accum, p) => {\n        return accum.plus(bg(p.cost));\n      }, bg(0));\n\n      return positions.map((p, index) => {\n      const symbolId = symbolList[index]\n      const symbol = symbols[index]\n      const price = symbolPrices[index]\n\n      const { volume, cost, lastCumulativeFundingRate } = p\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        tradersNetVolume,\n        cumulativeFundingRate,\n      } = symbol;\n      priceCache.set(poolAddress, symbolId, price);\n\n      const unrealizedPnl = bg(symbolPrices[index]).times(symbol.multiplier).times(p.volume).minus(p.cost)\n\n      const dynamicCost = symbols.reduce((accum, s, idx) => {\n        if (idx !== index) {\n          return accum.plus(\n            bg(positions[idx].volume)\n              .times(symbolPrices[idx])\n              .times(s.multiplier)\n          );\n        } else {\n          return accum;\n        }\n      }, bg(0));\n      const fundingFee = calculateFundingFee(\n        tradersNetVolume,\n        price,\n        multiplier,\n        fundingRateCoefficient,\n        liquidity,\n        cumulativeFundingRate,\n        lastCumulativeFundingRate,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        volume\n      );\n      const marginHeldBySymbol = bg(volume)\n        .abs()\n        .times(multiplier)\n        .times(price)\n        .times(minInitialMarginRatio);\n\n        return {\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          price,\n          volume: bg(volume).times(symbols[index].multiplier).toString(),\n          averageEntryPrice: calculateEntryPrice(\n            volume,\n            cost,\n            multiplier\n          ).toString(),\n          margin: margin.toString(),\n          marginHeld: marginHeld.toString(),\n          marginHeldBySymbol: marginHeldBySymbol.toString(),\n          unrealizedPnl: unrealizedPnl.toString(),\n          //unrealizedPnlList,\n          fundingFee: fundingFee.toString(),\n          liquidationPrice: calculateLiquidationPrice(\n            volume,\n            margin,\n            totalCost,\n            dynamicCost,\n            multiplier,\n            minMaintenanceMarginRatio\n          ).toString(),\n        };\n      }).filter((p) => p.volume !== '0')\n  }, args, 'getPositionInfos', [])\n}\n\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', null, 'v2_lite')\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\n    return balance.toString()\n  }, args, 'getWalletBalance', '')\n}\n\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', null, 'v2_lite')\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.isUnlocked(accountAddress, poolAddress)\n  }, args, 'isUnlocked', '')\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  await perpetualPool.init()\n  const parameterInfo = perpetualPool.parameters\n  const symbolIds = perpetualPool.activeSymbolIds\n  const symbolIndex = symbolIds.indexOf(symbolId)\n\n  let promises = [];\n  for (let i = 0; i < symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\n  }\n  const symbols = await Promise.all(promises);\n\n  if (symbolIndex > -1) {\n    const symbolInfo = symbols[symbolIndex];\n    // const symbol = symbols[symbolIndex].symbol;\n    // const isOffchainOracleSymbol =\n    //   perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1;\n    // const oracleAddress = isOffchainOracleSymbol\n    //   ? ''\n    //   : symbols[symbolIndex].oracleAddress;\n    const [liquidity, prices] = await Promise.all([\n      perpetualPool.getLiquidity(),\n      getSymbolPrices(\n        chainId,\n        symbols,\n        perpetualPool.offChainOracleSymbolIds,\n        perpetualPool.offChainOracleSymbols\n      ),\n    ]);\n    const price = prices[symbolIndex]\n    priceCache.set(poolAddress, symbolId, price);\n    const {\n      multiplier,\n      fundingRateCoefficient,\n      tradersNetVolume,\n      feeRatio,\n    } = symbolInfo;\n    const { minPoolMarginRatio } = parameterInfo;\n    const fundingRateArgs = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient,\n    ];\n    const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs);\n    const fundingRate = processFundingRate(chainId, fundingRatePerBlock);\n\n    const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n      return accum.plus(\n        bg(a.tradersNetVolume)\n          .times(a.price)\n          .times(a.multiplier)\n          .times(minPoolMarginRatio)\n          .abs()\n      );\n    }, bg(0));\n\n    const res = {\n      price,\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      tradersNetVolume: tradersNetVolume.toString(),\n      liquidity: liquidity.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      fundingRatePerBlock: fundingRatePerBlock,\n      fundingRate: fundingRate,\n      liquidityUsed: liquidityUsedInAmount.div(liquidity),\n    };\n    fundingRateCache.set(chainId, poolAddress, symbolId, res);\n    return res;\n  } else {\n    throw new Error(`-- getFundingRate: invalide symbolId(${symbolId})`);\n  }\n}\n\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\n  const args = [chainId, poolAddress, volume, symbolId]\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n\n    const symbolIds = perpetualPool.activeSymbolIds\n    const symbolIndex = perpetualPool.activeSymbolIds.indexOf(symbolId)\n\n    let promises = [];\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\n    }\n    const symbols = await Promise.all(promises);\n    //const symbol = symbols[symbolIndex]\n    let price = priceCache.get(poolAddress, symbolId)\n    //console.log('symbol',symbol)\n\n    if (!price) {\n      // const symbolName = symbol.symbol;\n      // const isOffchainOracleSymbol =\n      //   perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1;\n      // const oracleAddress = isOffchainOracleSymbol ? '' : symbol.oracleAddress;\n      const prices = await getSymbolPrices(\n        chainId,\n        symbols,\n        perpetualPool.offChainOracleSymbolIds,\n        perpetualPool.offChainOracleSymbols\n      );\n      price = prices[symbolIndex]\n      priceCache.set(poolAddress, symbolId, price)\n    }\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!cache || !cache.multiplier) {\n      await _getFundingRate(chainId, poolAddress, symbolId)\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    }\n    const { multiplier, feeRatio } = cache;\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n  }, args, 'getFundingFee', '')\n}\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  const args = [chainId, poolAddress, accountAddress, volume, leverage, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\n    //const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\n    //console.log('symbol',symbol)\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const symbolIds = perpetualPool.activeSymbolIds\n    const symbolIndex = symbolIds.indexOf(symbolId)\n    let promises = [];\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\n    }\n    const symbols = await Promise.all(promises);\n    if (symbolIndex > -1) {\n      // const symbol = symbols[symbolIndex].symbol\n      // const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\n      //const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\n\n      const prices = await getSymbolPrices(\n        chainId,\n        symbols,\n        perpetualPool.offChainOracleSymbolIds,\n        perpetualPool.offChainOracleSymbols\n      );\n      const price = prices[symbolIndex]\n      priceCache.set(poolAddress, symbolId, price)\n      const { multiplier } = symbols[symbolIndex]\n      return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n    } else {\n      throw new Error(`-- getEstimatedMargin: invalid symbolId(${symbolId})`)\n    }\n\n  }, args, 'getEstimatedMargin', '')\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\n    const {fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume, multiplier} = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString()\n    }\n  }, args, 'getFundingRate', {\n    fundingRate0: '',\n    fundingRatePerBlock: '',\n    liquidity: '',\n    volume: '',\n    tradersNetVolume: '',\n  })\n}\n\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const args = [\n        bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n        res.price,\n        res.multiplier,\n        res.liquidity,\n        res.fundingRateCoefficient,\n      ];\n      let fundingRate1 = calculateFundingRate(...args);\n      fundingRate1 = processFundingRate(chainId, fundingRate1);\n      return {\n        fundingRate1: fundingRate1.times(100).toString(),\n      };\n    },\n    args,\n    'getEstimatedFundingRate',\n    ''\n  );\n}\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      return {\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\n      };\n    },\n    args,\n    'getLiquidityUsed',\n    ''\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async () => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const { pToken: pTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        symbolId,\n        'v2_lite'\n      );\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      const symbolIds = await pToken.getActiveSymbolIds();\n      let promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      let liquidityUsed0 = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.price)\n              .times(s.multiplier)\n              .times(s.tradersNetVolume.plus(newNetVolume))\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.price).times(s.multiplier).times(s.tradersNetVolume).abs()\n          );\n        }\n      }, bg(0));\n      const liquidityUsed1 = liquidityUsed0\n        .times(res.minPoolMarginRatio)\n        .div(res.liquidity);\n      return {\n        liquidityUsed1: liquidityUsed1.times(100).toString(),\n      };\n    },\n    args,\n    'getEstimatedLiquidityUsed',\n    ''\n  );\n}\n","import { catchTxApiError, bg } from '../../shared/utils';\nimport { isOrderValid } from '../../v2/calculation';\nimport { perpetualPoolLiteFactory } from '../factory.js';\n\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    // const { bToken: bTokenAddress } = getPoolConfig(\n    //   poolAddress,\n    //   '0',\n    //   null,\n    //   'v2_lite'\n    // );\n    // const bToken = bTokenFactory(chainId, bTokenAddress);\n    return await perpetualPool.bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount) => {\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n      await perpetualPool.init()\n      return await perpetualPool.addMargin(accountAddress, amount);\n    },\n    args\n  );\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  isMaximum = false\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      await perpetualPool.init()\n      return await perpetualPool.removeMargin(\n        accountAddress,\n        amount,\n        isMaximum\n      );\n    },\n    args\n  );\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      await perpetualPool.init()\n      // const { pToken: pTokenAddress } = getPoolConfig(\n      //   poolAddress,\n      //   '0',\n      //   '0',\n      //   'v2_lite'\n      // );\n      // const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      // const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      const pToken = perpetualPool.pToken\n      const parameterInfo = perpetualPool.parameters\n      // const symbols = perpetualPool.symbols\n      const symbolIds = perpetualPool.activeSymbolIds\n      const [liquidity, margin] = await Promise.all([\n        //perpetualPool.getParameters(),\n        perpetualPool.getLiquidity(),\n        pToken.getMargin(accountAddress),\n        //pToken.getActiveSymbolIds(),\n      ]);\n      const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n      let promises = [];\n\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      }\n      const positions = await Promise.all(promises);\n\n      let marginHeld = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.price)\n              .times(s.multiplier)\n              .times(positions[index].volume.plus(newVolume))\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\n          );\n        }\n      }, bg(0));\n      marginHeld = marginHeld.times(minInitialMarginRatio);\n\n      let liquidityUsed = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .plus(newVolume)\n              .times(s.price)\n              .times(s.multiplier)\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\n          );\n        }\n      }, bg(0));\n      liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n\n      const orderValidation = isOrderValid(\n        margin,\n        marginHeld,\n        liquidity,\n        liquidityUsed\n      );\n      if (orderValidation.success) {\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error(orderValidation.error);\n      }\n    },\n    args\n  );\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      // const { pToken: pTokenAddress } = getPoolConfig(\n      //   poolAddress,\n      //   '0',\n      //   '0',\n      //   'v2_lite'\n      // );\n\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      await perpetualPool.init()\n      //const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      const pToken = perpetualPool.pToken\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\n      if (!volume.eq(0)) {\n        const newVolume = volume.negated();\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error('no position to close');\n      }\n    },\n    args\n  );\n};\n","import { bg, deriToNatural, getBlockInfo, getPastEvents, getHttpBase, fetchJson } from '../../shared/utils';\nimport {\n  getPoolConfig,\n  getPoolConfig2,\n} from '../../shared/config';\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from '../factory';\nimport { calculateTxFee } from '../../v2/calculation/position';\n\nconst processTradeEvent = async (\n  chainId,\n  info,\n  blockNumber,\n  txHash,\n  bTokenSymbol,\n  symbols,\n  symbolIds,\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const index = symbolIds.findIndex((s) => s === symbolId)\n  const symbol = symbols[index]\n  const transactionFee = calculateTxFee(\n    tradeVolume,\n    price,\n    symbol.multiplier,\n    symbol.feeRatio,\n  );\n  const notional = tradeVolume.abs().times(price).times(symbol.multiplier);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    symbolId,\n    symbol: symbol && symbol.symbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    //volume: volume.toString(),\n    volume: bg(volume).times(symbol.multiplier).toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  //console.log('symbolIdList', symbolIdList);\n  const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n  const { pTokenAddress } = await perpetualPool.getAddresses()\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  //const symbolIdList = getPoolSymbolIdList(poolAddress)\n  const symbolIdList = await pToken.getActiveSymbolIds()\n  const toBlock = await getBlockInfo(chainId, 'latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const filters =  { account: accountAddress }\n  let events = await getPastEvents(chainId, perpetualPool.contract,\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      chainId,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      bTokenSymbol,\n      symbols,\n      symbolIdList,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const symbolIds = perpetualPool.activeSymbolIds\n    //const symbolIndex = symbolIds.indexOf(symbolId)\n\n    let promises= []\n    for (let i=0; i<symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]))\n    }\n    let symbols = await Promise.all(promises)\n\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => !(i.direction === 'LIQUIDATION' && i.symbolId === '0'))\n        .map((i) => {\n          if (i.direction !== 'LIQUIDATION') {\n            const index = symbolIds.indexOf(i.symbolId);\n            return {\n              direction: i.direction.trim(),\n              baseToken: i.baseToken.trim(),\n              symbolId: i.symbolId,\n              symbol: i.symbol,\n              price: deriToNatural(i.price).toString(),\n              notional: deriToNatural(i.notional).toString(),\n              //volume: deriToNatural(i.volume).toString(),\n              volume: deriToNatural(i.volume)\n                .times(symbols[index].multiplier)\n                .toString(),\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else {\n            if (i.volume !== '' && i.volume.indexOf(',') > -1 && !i.price.startsWith('NaN')) {\n              const ids = i.volume.split(',').reduce((acc, v, index) => {\n                if (v !== '0') {\n                  return acc.concat([index]);\n                } else {\n                  return acc\n                }\n              }, []);\n              const prices = i.price.split(',').map((s)=> deriToNatural(s))\n              const volumes = i.volume.split(',').map((v)=> deriToNatural(v))\n              return ids.map((id) => {\n                return {\n                  direction: i.direction.trim(),\n                  baseToken: i.baseToken.trim(),\n                  symbolId: id.toString(),\n                  symbol: symbols[id].symbol,\n                  volume: volumes[id].abs().times(symbols[id].multiplier).toString(),\n                  price: prices[id].toString(),\n                  notional: volumes[id].abs().times(prices[id]).times(symbols[id].multiplier).toString(),\n                  transactionFee: '0',\n                  transactionHash: i.transactionHash,\n                  time: i.time.toString(),\n                };\n              })\n            } else {\n              // handle missing price data\n              return {\n                direction: i.direction.trim(),\n                baseToken: i.baseToken.trim(),\n                symbolId: '',\n                symbol: '',\n                price: '',\n                notional: '',\n                //volume: deriToNatural(i.volume).toString(),\n                volume: '',\n                transactionFee: '0',\n                transactionHash: i.transactionHash,\n                time: i.time.toString(),\n              }\n            }\n          }\n        }).flat();\n    }\n      //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n\n      const {initialBlock} = getPoolConfig2(poolAddress)\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","const invalidValues = [NaN, null, undefined];\n\nfunction getEverlastingTimePriceAndDelta(S, K, V, T) {\n  let u = Math.sqrt(8 / V / V / T + 1);\n  let timeValue, delta;\n  if (S > K) {\n    timeValue = (K * Math.pow(S / K, (1 - u) / 2)) / u;\n    delta = ((1 - u) * timeValue) / S / 2;\n  } else if (S === K) {\n    timeValue = K / u;\n    delta = 0;\n  } else {\n    timeValue = (K * Math.pow(S / K, (1 + u) / 2)) / u;\n    delta = ((1 + u) * timeValue) / S / 2;\n  }\n  return [timeValue, delta];\n}\n\nfunction getDynamicInitialMarginRatio(\n  spot,\n  strike,\n  isCall,\n  initialMarginRatio,\n  minInitialMarginRatio\n) {\n  if ((isCall && spot >= strike) || (!isCall && strike >= spot)) {\n    return initialMarginRatio;\n  } else {\n    let otmRatio = (isCall ? strike - spot : spot - strike) / strike;\n    return Math.max(\n      (1 - otmRatio * 3) * initialMarginRatio,\n      minInitialMarginRatio\n    );\n  }\n}\n\n// multiple position for same underlier, e.x. BTCUSD\nfunction canLiquidateWithPrice(\n  pool,\n  trader,\n  symbols,\n  positions,\n  newUnderlierPrice\n) {\n  let newDynamicMargin = trader.dynamicMargin;\n  let newInitialMargin = trader.initialMargin;\n\n  for (let i = 0; i < symbols.length; i++) {\n    let symbol = symbols[i];\n    let position = positions[i];\n    if (position.volume === 0) {\n      continue;\n    }\n\n    let newIntrinsicValue = symbol.isCall\n      ? Math.max(newUnderlierPrice - symbol.strikePrice, 0)\n      : Math.max(symbol.strikePrice - newUnderlierPrice, 0);\n    let [newTimeValue, newDelta] = getEverlastingTimePriceAndDelta(\n      newUnderlierPrice,\n      symbol.strikePrice,\n      symbol.volatility,\n      pool.fundingPeriod\n    );\n    if (newIntrinsicValue > 0) {\n      newDelta += symbol.isCall ? 1 : -1;\n    }\n    let newPnl =\n      position.volume * (newIntrinsicValue + newTimeValue) * symbol.multiplier -\n      position.cost;\n    let newDynamicMarginRatio = getDynamicInitialMarginRatio(\n      newUnderlierPrice,\n      symbol.strikePrice,\n      symbol.isCall,\n      pool.initialMarginRatio,\n      0.01\n    );\n\n    newDynamicMargin = newDynamicMargin - position.pnl + newPnl;\n    newInitialMargin =\n      newInitialMargin -\n      Math.abs(\n        position.volume *\n          symbol.spotPrice *\n          symbol.multiplier *\n          symbol.dynamicMarginRatio\n      ) +\n      Math.abs(\n        position.volume *\n          newUnderlierPrice *\n          symbol.multiplier *\n          newDynamicMarginRatio\n      );\n  }\n\n  let newMaintenanceMargin =\n    (newInitialMargin * pool.maintenanceMarginRatio) / pool.initialMarginRatio;\n\n  if (\n    invalidValues.includes(newMaintenanceMargin) ||\n    invalidValues.includes(newDynamicMargin)\n  ) {\n    throw new Error(\n      `-- canLiquidateWithPrice: Invalid Margin value: ${newMaintenanceMargin} ${newDynamicMargin}`\n    );\n  }\n  return newMaintenanceMargin > newDynamicMargin;\n}\n\nexport function findLiquidationPrice(pool, trader, symbols, positions) {\n  if (symbols.length != positions.length) {\n    throw new Error(\n      'canLiquidateWithPrice: symbols and positions length not match'\n    );\n  }\n  if (symbols.length === 0) {\n    return {\n      numPositions: positions.length,\n      price1: null,\n      price2: null,\n    };\n  }\n  let head = symbols[0].symbol.slice(0, 6);\n  for (let i = 0; i < symbols.length; i++) {\n    if (!symbols[i].symbol.startsWith(head)) {\n      throw new Error('canLiquidateWithPrice: symbols not in same underlier');\n    }\n  }\n\n  if (trader.maintenanceMargin > trader.dynamicMargin) {\n    return {\n      numPositions: positions.length,\n      price1: symbols[0].spotPrice,\n      price2: symbols[0].spotPrice,\n    };\n  }\n\n  let final1, final2;\n  let price1, price2;\n  let l1, l2;\n\n  price1 = symbols[0].spotPrice / 10;\n  price2 = symbols[0].spotPrice;\n  l1 = canLiquidateWithPrice(pool, trader, symbols, positions, price1);\n  l2 = false;\n  while (true) {\n    if (l1 && l2) {\n      final1 = (price1 + price2) / 2;\n      break;\n    }\n    if (!l1 && !l2) {\n      final1 = null;\n      break;\n    }\n    if (price2 - price1 < symbols[0].spotPrice / 1000) {\n      final1 = (price1 + price2) / 2;\n      break;\n    }\n    let price = (price1 + price2) / 2;\n    let l = canLiquidateWithPrice(pool, trader, symbols, positions, price);\n    if (l === l1) price1 = price;\n    else price2 = price;\n  }\n\n  price1 = symbols[0].spotPrice;\n  price2 = symbols[0].spotPrice * 10;\n  l1 = false;\n  l2 = canLiquidateWithPrice(pool, trader, symbols, positions, price2);\n  while (true) {\n    if (l1 && l2) {\n      final2 = (price1 + price2) / 2;\n      break;\n    }\n    if (!l1 && !l2) {\n      final2 = null;\n      break;\n    }\n    if (price2 - price1 < symbols[0].spotPrice / 1000) {\n      final2 = (price1 + price2) / 2;\n      break;\n    }\n    let price = (price1 + price2) / 2;\n    let l = canLiquidateWithPrice(pool, trader, symbols, positions, price);\n    if (l === l1) price1 = price;\n    else price2 = price;\n  }\n\n  return {\n    numPositions: positions.length,\n    price1: final1,\n    price2: final2,\n  };\n}\n","import { bg, max, normalizeOptionSymbol, toNumberForObject } from \"../../shared\"\nimport { findLiquidationPrice } from './findLiquidationPrice2';\n\nexport const dynamicInitialMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\n    return initialMarginRatio\n  } else {\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\n    return max((bg(1).minus(otmRatio.times(3))).times(initialMarginRatio), bg(0.01))\n  }\n}\n\nexport const dynamicInitialPoolMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\n  // for pool\n  const initialPoolMarginRatio = bg(initialMarginRatio).times(10)\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\n    return initialMarginRatio\n  } else {\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\n    return max((bg(1).minus(otmRatio.times(3))).times(initialPoolMarginRatio), bg(0.01).times(10))\n  }\n}\n\nexport const getDeltaFundingPerSecond = (symbol, delta, price, totalDynamicEquity, newNetVolume)  => {\n  return bg(totalDynamicEquity).eq(0)\n    ? bg(0)\n    : bg(delta)\n        .times(bg(symbol.tradersNetVolume).plus(newNetVolume))\n        .times(price)\n        .times(price)\n        .times(symbol.multiplier)\n        .times(symbol.multiplier)\n        .times(symbol.deltaFundingCoefficient)\n        .div(totalDynamicEquity);\n} \nexport const getpremiumFunding = (symbol, premiumFundingCoefficient, totalDynamicEquity)  => {\n  return bg(totalDynamicEquity).eq(0)\n    ? bg(0)\n    : bg(symbol.timeValue)\n        .times(symbol.multiplier)\n        .times(premiumFundingCoefficient)\n        .div(totalDynamicEquity);\n} \n\nexport const getIntrinsicPrice = (price, strikePrice, isCall) => {\n  return isCall\n    ? max(bg(price).minus(strikePrice), bg(0))\n    : max(bg(strikePrice).minus(price), bg(0));\n};\n\n\nexport const getMarginHeldBySymbol = (\n  volume,\n  price,\n  symbol,\n  initialMarginRatio\n) => {\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(symbol.multiplier)\n    .times(\n      dynamicInitialMarginRatio(\n        price,\n        symbol.strikePrice,\n        symbol.isCall,\n        initialMarginRatio\n      )\n    );\n};\n\nexport const getAverageEntryPrice = (position, symbol) => {\n  return bg(position.volume).eq(0)\n    ? '0'\n    : bg(position.cost).div(position.volume).div(symbol.multiplier).toString();\n};\n\nexport const getLiquidationPrice = (state, symbolId)  => {\n  const { poolState, symbolState, traderState, positionState } = state;\n  const normalizedSymbol = normalizeOptionSymbol(symbolState[symbolId].symbol)\n  let res = findLiquidationPrice(\n    toNumberForObject(poolState, [\n      'initialMarginRatio',\n      'maintenanceMarginRatio',\n      'fundingPeriod',\n      'fundingCoefficient',\n      'marginMultiplier',\n      'liquidity',\n      'totalDynamicEquity',\n      'totalInitialMargin',\n    ]),\n    toNumberForObject(traderState, [\n      'margin',\n      'totalPnl',\n      'totalFundingAccrued',\n      'dynamicMargin',\n      'initialMargin',\n      'maintenanceMargin',\n    ]),\n    symbolState\n      .filter((s, index) => positionState[index].volume !== '0')\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\n      .map((s) =>\n        toNumberForObject(s, [\n          'multiplier',\n          'strikePrice',\n          'spotPrice',\n          'dpmmPrice',\n          'volatility',\n          'timePrice',\n          'dynamicMarginRatio',\n          'intrinsicValue',\n          'timeValue',\n          'delta',\n          'K',\n          'tradersNetVolume',\n          'tradersNetCost',\n          'cumulativeFundingRate',\n          'fundingPerSecond',\n        ])\n      ),\n    symbolState\n      .filter((s, index) => positionState[index].volume !== '0')\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\n      .map((s) =>\n        toNumberForObject(positionState[s.symbolId], [\n          'volume',\n          'cost',\n          'lastCumulativePremiumFundingRate',\n          'pnl',\n          'premiumFundingAccrued',\n        ])\n      )\n  );\n  res.underlier = normalizedSymbol\n  return res\n}\n\nexport const getLiquidationPrices = (state) => {\n  const { poolState, symbolState, traderState, positionState } = state;\n  const symbols = symbolState.filter((s, index) => positionState[index].volume !== '0').map((s) => s.symbol);\n  const oracleSymbols = symbols\n    .map((i) => normalizeOptionSymbol(i))\n    .filter((value, index, self) => self.indexOf(value) === index);\n\n  const liquidationPrices = oracleSymbols.map((oSymbol) => {\n    let res = findLiquidationPrice(\n      toNumberForObject(poolState, [\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'premiumFundingPeriod',\n        'premiumFundingCoefficient',\n        'liquidity',\n        'totalDynamicEquity',\n        'totalInitialMargin',\n      ]),\n      toNumberForObject(traderState, [\n        'margin',\n        'totalPnl',\n        'totalFundingAccrued',\n        'dynamicMargin',\n        'initialMargin',\n        'maintenanceMargin',\n      ]),\n      symbolState\n        .filter((s, index) => positionState[index].volume !== '0')\n        .filter((s) => s.symbol.startsWith(oSymbol))\n        .map((s) =>\n          toNumberForObject(s, [\n          'multiplier',\n          'strikePrice',\n          'spotPrice',\n          'dpmmPrice',\n          'underlierVolatility',\n          'timePrice',\n          'dynamicMarginRatio',\n          'intrinsicValue',\n          'timeValue',\n          'delta',\n          'K',\n          'tradersNetVolume',\n          'tradersNetCost',\n          'cumulativePremiumFundingRate',\n          'premiumFundingPerSecond',\n          ])\n        ),\n      symbolState\n        .filter((s, index) => positionState[index].volume !== '0')\n        .filter((s) => s.symbol.startsWith(oSymbol))\n        .map((s) =>\n          toNumberForObject(positionState[s.symbolId], [\n            'volume',\n            'cost',\n            'lastCumulativeDeltaFundingRate',\n            'lastCumulativePremiumFundingRate',\n            'pnl',\n            'deltaFundingAccrued',\n            'premiumFundingAccrued',\n          ])\n        )\n    );\n    return res;\n  });\n  return oracleSymbols.map((i, index) => { \n    liquidationPrices[index].underlier = i\n    return liquidationPrices[index]\n  })\n};","/* eslint-disable */\nexport const everlastingOptionAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[6]\", \"name\": \"parameters\", \"type\": \"uint256[6]\" }, { \"internalType\": \"address[6]\", \"name\": \"addresses\", \"type\": \"address[6]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"lp\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"lp\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"indexPrice\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeFee\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"uint256\", \"name\": \"strikePrice\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricerAddress\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolMarginMultiplier\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioITM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioOTM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IEverlastingOption.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"pTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" } ], \"name\": \"setPoolMarginMulitplier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\nexport const everlastingOptionViewerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"theoreticalPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetPosition\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" } ], \"name\": \"_calculateDpmmPrice\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"changePercent\", \"type\": \"int256\" } ], \"name\": \"_calculateOptionValueChange\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"change\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spot\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strike\", \"type\": \"int256\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" } ], \"name\": \"_getDynamicInitialMarginRatio\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"_getTraderPortfolio\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"_initState\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"str\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"start\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"end\", \"type\": \"uint256\" } ], \"name\": \"_slice\", \"outputs\": [ { \"internalType\": \"bytes\", \"name\": \"\", \"type\": \"bytes\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolFundingRates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolPrices\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderFunding\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderMargins\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getPoolStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getPriceOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getTraderStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getVolatilityOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n\nexport const lTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\nexport const pTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate2\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"addSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getActiveSymbolIds\", \"outputs\": [ { \"internalType\": \"uint256[]\", \"name\": \"\", \"type\": \"uint256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getNumPositionHolders\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getTokenId\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"isActiveSymbolId\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\nexport const everlastingOptionOldAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[6]\", \"name\": \"parameters\", \"type\": \"uint256[6]\" }, { \"internalType\": \"address[6]\", \"name\": \"addresses\", \"type\": \"address[6]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"uint256\", \"name\": \"strikePrice\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricerAddress\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolMarginMultiplier\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioITM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioOTM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IEverlastingOption.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" } ], \"name\": \"setPoolMarginMulitplier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\n/* eslint-enable */","import { ContractBase, deleteIndexedKey, fromWeiForObject } from '../../shared';\nimport { everlastingOptionViewerAbi } from './abis';\n\nexport class EverlastingOptionViewer extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, everlastingOptionViewerAbi);\n  }\n\n  // query\n  async _getTraderPortfolio(state, account) {\n    const res = await this._call('_getTraderPortfolio', [state, account]);\n    return res;\n  }\n  async _initState(poolAddress, oraclePrices) {\n    const res = await this._call('_initState', [poolAddress, oraclePrices]);\n    return res;\n  }\n  async _updateSymbolPrices(state) {\n    const res = await this._call('_updateSymbolPrices', [state]);\n    return res;\n  }\n  async getPoolStates(poolAddress, oraclePrices, oracleVolatilities) {\n    const res = await this._call('getPoolStates', [poolAddress, oraclePrices, oracleVolatilities]);\n    const symbolState = res[2].reduce((acc, i) => {\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\n        'multiplier',\n        'strikePrice',\n        'spotPrice',\n        'dpmmPrice',\n        'dynamicMarginRatio',\n        'intrinsicValue',\n        'timeValue',\n        'delta',\n        'alpha',\n        'K',\n        'tradersNetVolume',\n        'tradersNetCost',\n        //'cumulativeDeltaFundingRate',\n        'cumulativeFundingRate',\n        //'deltaFundingPerSecond',\n        'fundingPerSecond',\n        'volatility',\n      ]);\n      return acc.concat([symbol])\n    }, [])\n    return {\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'fundingPeriod',\n        'fundingCoefficient',\n        'liquidity',\n        'totalDynamicEquity',\n        'totalInitialMargin',\n      ]),\n      symbolState,\n    };\n  }\n  async getTraderStates(poolAddress, account, oraclePrices, oracleVolatilities) {\n    const res = await this._call('getTraderStates', [\n      poolAddress,\n      account,\n      oraclePrices,\n      oracleVolatilities,\n    ]);\n    const symbolState = res[2].reduce((acc, i) => {\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\n        'multiplier',\n        'strikePrice',\n        'spotPrice',\n        'dpmmPrice',\n        'dynamicMarginRatio',\n        'intrinsicValue',\n        'timeValue',\n        'delta',\n        'alpha',\n        'K',\n        'tradersNetVolume',\n        'tradersNetCost',\n        'cumulativeFundingRate',\n        //'deltaFundingPerSecond',\n        'fundingPerSecond',\n        'volatility',\n      ]);\n      return acc.concat([symbol])\n    }, [])\n    const positionState = res[3].reduce((acc, i) => {\n      const position = fromWeiForObject(deleteIndexedKey(i), [\n        'volume',\n        'cost',\n        'pnl',\n        //'lastCumulativeDeltaFundingRate',\n        'lastCumulativeFundingRate',\n        //'deltaFundingAccrued',\n        'fundingAccrued',\n      ])\n      return acc.concat([position])\n    }, [])\n    return {\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'fundingPeriod',\n        'fundingCoefficient',\n        'liquidity',\n        'totalDynamicEquity',\n        'totalInitialMargin',\n      ]),\n      traderState: fromWeiForObject(deleteIndexedKey(res[1]), [\n        'margin',\n        'totalPnl',\n        'totalFundingAccrued',\n        'dynamicMargin',\n        'initialMargin',\n        'maintenanceMargin',\n      ]),\n      symbolState: symbolState,\n      positionState: positionState,\n    };\n  }\n  async getVolatilityOracles(poolAddress) {\n    const res = await this._call('getVolatilityOracles', [poolAddress]);\n    return res;\n  }\n  async getPriceOracles(poolAddress) {\n    const res = await this._call('getPriceOracles', [poolAddress]);\n    return res;\n  }\n\n  // tx\n}\n","import { ContractBase, fromWei } from '../../shared'\nimport { pTokenOptionAbi } from './abis.js'\n\nexport class PTokenOption extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenOptionAbi)\n  }\n\n  // query\n  async balanceOf(owner) {\n    const res = await this._call('balanceOf', [owner])\n    return res\n  }\n  async exists(owner) {\n    const res = await this._call('exists', [owner])\n    return res\n  }\n  async getActiveSymbolIds() {\n    const res = await this._call('getActiveSymbolIds', [])\n    return res\n  }\n  async getApproved(tokenId) {\n    const res = await this._call('getApproved', [tokenId])\n    return res\n  }\n  async getMargin(owner) {\n    const res = await this._call('getMargin', [owner])\n    return fromWei(res)\n  }\n  async getNumPositionHolders(symbolId) {\n    const res = await this._call('getNumPositionHolders', [symbolId])\n    return res\n  }\n  async getPosition(owner, symbolId) {\n    const res = await this._call('getPosition', [owner, symbolId])\n    return {\n      volume: fromWei(res[0]),\n      cost: fromWei(res[1]),\n      lastCumulativePremiumFundingRate: fromWei(res[2]),\n    };\n }\n  async getTokenId(owner) {\n    const res = await this._call('getTokenId', [owner])\n    return res\n  }\n  async isActiveSymbolId(symbolId) {\n    const res = await this._call('isActiveSymbolId', [symbolId])\n    return res\n  }\n  async isApprovedForAll(owner, operator) {\n    const res = await this._call('isApprovedForAll', [owner, operator])\n    return res\n  }\n  async name() {\n    const res = await this._call('name', [])\n    return res\n  }\n  async ownerOf(tokenId) {\n    const res = await this._call('ownerOf', [tokenId])\n    return res\n  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return res\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return res\n  }\n  async totalMinted() {\n    const res = await this._call('totalMinted', [])\n    return res\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return res\n  }\n\n  // tx\n  async addMargin(accountAddress, owner, delta) {\n    return await this._transact('addMargin', [owner, delta], accountAddress)\n  }\n  async updateMargin(accountAddress, owner, margin) {\n    return await this._transact('updateMargin', [owner, margin], accountAddress)\n  }\n  async updatePosition(accountAddress, owner, symbolId, position) {\n    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\n  }\n\n  // async approve(accountAddress, operator, tokenId) {\n  //   return await this._transact('approve', [operator, tokenId], accountAddress)\n  // }\n  // async safeTransferFrom(accountAddress, from, to, tokenId) {\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\n  // }\n  // async safeTransferFrom(accountAddress, from, to, tokenId, data) {\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\n  // }\n  // async setApprovalForAll(accountAddress, operator, approved) {\n  //   return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\n  // }\n  // async toggleCloseOnly(accountAddress, symbolId) {\n  //   return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\n  // }\n  // async transferFrom(accountAddress, from, to, tokenId) {\n  //   return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\n  // }\n}","import { factory } from '../../shared';\nimport { EverlastingOptionViewer } from '../contract/everlasting_option_viewer';\nimport { LTokenOption } from '../contract/l_token_option';\nimport { PTokenOption } from '../contract/p_token_option';\n\nexport const everlastingOptionViewerFactory = factory(EverlastingOptionViewer);\nexport const lTokenOptionFactory = factory(LTokenOption);\nexport const pTokenOptionFactory = factory(PTokenOption);","import { ContractBase, fromWei } from '../../shared'\nimport { lTokenOptionAbi } from './abis.js'\n\nexport class LTokenOption extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenOptionAbi)\n  }\n\n  // query\n  // async allowance(owner, spender) {\n  //   const res = await this._call('allowance', [owner, spender])\n  //   return res\n  // }\n  async balanceOf(account) {\n    const res = await this._call('balanceOf', [account])\n    return fromWei(res)\n  }\n  async name() {\n    const res = await this._call('name', [])\n    return res\n  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return res\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return res\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return fromWei(res)\n  }\n\n  // tx\n  // async approve(accountAddress, spender, amount) {\n  //   return await this._transact('approve', [spender, amount], accountAddress)\n  // }\n  // async transfer(accountAddress, to, amount) {\n  //   return await this._transact('transfer', [to, amount], accountAddress)\n  // }\n  // async transferFrom(accountAddress, from, to, amount) {\n  //   return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  // }\n\n}","import { getOracleVolatilitiesForOption } from \"../shared/utils/oracle\"\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n\nexport const volatilitiesCache = (function() {\n  const cache = {}\n  const pending = {}\n  return {\n    async get(symbols=['BTCUSD']){\n      const key = symbols.join('_')\n      if (\n        !Object.keys(cache).includes(key) ||\n        Math.floor(Date.now() / 1000) - cache[key].timestamp > 30\n      ) {\n        const timestamp = Math.floor(Date.now() / 1000);\n        // pending is exit\n        if (Object.keys(pending).includes(key)) {\n          let retry = 10;\n          while (retry > 0) {\n            await delay(390);\n            if (!Object.keys(pending).includes(key)) {\n              //console.log('hit pending with cache');\n              return cache[key].data;\n            }\n          }\n          if (retry === 0) {\n            //console.log('hit pending expired');\n            const data = await getOracleVolatilitiesForOption(symbols);\n            cache[key] = {\n              data,\n              timestamp,\n            };\n            return cache[key].data;\n          }\n        } else {\n          pending[key] = true;\n          try {\n            //console.log('hit new');\n            const data = await getOracleVolatilitiesForOption(symbols);\n            cache[key] = {\n              data,\n              timestamp,\n            };\n            return cache[key].data;\n          } catch (err) {\n          } finally {\n            delete pending[key];\n          }\n        }\n      } else {\n        //console.log('hit cache');\n        return cache[key].data;\n      }\n    }\n  }\n})()\n\n// export const volatilityCache = (function() {\n//   const cache = {}\n//   return {\n//     async get(symbol){\n//       const key = symbol\n//       if (!Object.keys(cache).includes(key) || (Math.floor(Date.now()/1000) - cache[key].timestamp > 30)) {\n//         const timestamp = Math.floor(Date.now()/1000)\n//         const res = await getPriceInfo(symbol, 'option')\n//         const data = deriToNatural(res.volatility).toString()\n//         cache[key] = {\n//           data,\n//           timestamp,\n//         }\n//         //console.log('new key')\n//         return cache[key].data\n//       } else {\n//         return cache[key].data\n//       }\n//     }\n//   }\n// })()\n\n// export const volatilitiesCache2 = async (symbols) => {\n//   return await Promise.all(\n//     symbols.reduce((acc, s) => acc.concat(volatilityCache.get(s)), [])\n//   )\n// }\n","import { ContractBase, fromWei } from '../../shared'\n\nexport const optionPricerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"S\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"V\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"T\", \"type\": \"int256\" } ], \"name\": \"getEverlastingTimeValue\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"S\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"V\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"T\", \"type\": \"int256\" } ], \"name\": \"getEverlastingTimeValueAndDelta\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" } ]\n\nexport class OptionPricer extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, optionPricerAbi)\n  }\n\n  async getEverlastingTimeValueAndDelta(S, K, V, T) {\n    const res = await this._call('getEverlastingTimeValueAndDelta', [S, K, V, T])\n    return {\n      timeValue: fromWei(res.timeValue),\n      delta: fromWei(res.delta),\n    };\n  }\n}","import { factory } from '../../shared';\nimport { EverlastingOption } from '../contract/everlasting_option';\nimport { OptionPricer } from '../contract/option_pricer';\n\nexport const everlastingOptionFactory = factory(EverlastingOption);\nexport const optionPricerFactory = factory(OptionPricer);","import {\n  ContractBase,\n  deleteIndexedKey,\n  fromWeiForObject,\n  fromWei,\n  naturalToDeri,\n  getPoolConfig,\n  getPoolViewerConfig,\n  isEqualSet,\n  getBlockInfo,\n  deriToNatural,\n  bg,\n} from '../../shared';\nimport { getVolatilitySymbols } from '../../shared/config/token';\nimport { getOracleVolatilitiesForOption } from '../../shared/utils/oracle';\nimport {\n  everlastingOptionViewerFactory,\n  pTokenOptionFactory,\n} from '../factory/tokens';\nimport { volatilitiesCache } from '../utils';\nimport { everlastingOptionAbi } from './abis.js';\n\nexport class EverlastingOption extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, everlastingOptionAbi);\n\n    this.config = getPoolConfig(\n      contractAddress,\n      undefined,\n      undefined,\n      'option'\n    );\n    // this.offchainSymbolIds = this.config.offchainSymbolIds;\n    // this.offchainSymbols = this.config.offchainSymbols;\n    this.volatilitySymbols = this.config.volatilitySymbols;\n    this.bTokenAddress = this.config.bToken;\n    this.lTokenAddress = this.config.lToken;\n    this.pTokenAddress = this.config.pToken;\n    this.viewerAddress = getPoolViewerConfig(this.chainId, 'option');\n  }\n  async _updateConfig() {\n    if (!this.pToken) {\n      this.pToken = pTokenOptionFactory(this.chainId, this.pTokenAddress);\n    }\n    if (!this.viewer) {\n      this.viewer = everlastingOptionViewerFactory(\n        this.chainId,\n        this.viewerAddress\n      );\n    }\n\n    const activeSymbolIds = await this.pToken.getActiveSymbolIds();\n    if (\n      !this.activeSymbolIds ||\n      !isEqualSet(new Set(this.activeSymbolIds), new Set(activeSymbolIds))\n    ) {\n      // symbol is updated\n      const activeSymbols = await Promise.all(\n        activeSymbolIds.reduce((acc, i) => acc.concat([this.getSymbol(i)]), [])\n      );\n      const symbolVolatilities = (await volatilitiesCache.get(\n        activeSymbols.map((s) => s.symbol)\n      )).map((v) => v.volatility);\n      //console.log(symbolVolatilities)\n      const state = await this.viewer.getPoolStates(\n        this.contractAddress,\n        [],\n        symbolVolatilities\n      );\n      const { symbolState } = state;\n\n      // update state\n      this.activeSymbolIds = activeSymbolIds;\n      this.activeSymbols = symbolState.filter((s) =>\n        this.activeSymbolIds.includes(s.symbolId)\n      );\n      // for tx use\n      this.volatilitySymbols = getVolatilitySymbols(\n        this.activeSymbols.map((s) => s.symbol)\n      );\n\n      this.symbols = await Promise.all(\n        this.activeSymbolIds.reduce(\n          (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n          []\n        )\n      );\n    }\n  }\n\n  // query\n  // async OptionPricer() {\n  //   const res = await this._call('OptionPricer', []);\n  //   return res;\n  // }\n  // async PmmPricer() {\n  //   const res = await this._call('PmmPricer', []);\n  //   return res;\n  // }\n  // async _T() {\n  //   const res = await this._call('_T', []);\n  //   return fromWei(res);\n  // }\n  async getAddresses() {\n    const res = await this._call('getAddresses', []);\n    return deleteIndexedKey(res);\n  }\n  async getLastTimestamp() {\n    const res = await this._call('getPoolStateValues', []);\n    return res[1];\n  }\n  async getLiquidity() {\n    const res = await this._call('getPoolStateValues', []);\n    return fromWei(res[0]);\n  }\n  async getParameters() {\n    const res = await this._call('getParameters', []);\n    return fromWeiForObject(deleteIndexedKey(res), [\n      'initialMarginRatio',\n      'liquidationCutRatio',\n      'maintenanceMarginRatio',\n      'maxLiquidationReward',\n      'minLiquidationReward',\n      'minPoolMarginRatio',\n      'protocolFeeCollectRatio',\n    ]);\n  }\n  // async getProtocolFeeAccrued() {\n  //   const res = await this._call('getPoolStateValues', []);\n  //   return fromWei(res[2])\n  // }\n\n  async getSymbol(symbolId) {\n    const res = await this._call('getSymbol', [symbolId]);\n    return fromWeiForObject(deleteIndexedKey(res), [\n      'strikePrice',\n      'multiplier',\n      'feeRatioITM',\n      'feeRatioOTM',\n      'alpha',\n      'tradersNetVolume',\n      'tradersNetCost',\n      'cumulativeFundingRate',\n    ]);\n  }\n  async updateSymbols() {\n    if (!this.pToken) {\n      this.pToken = pTokenOptionFactory(this.chainId, this.pTokenAddress);\n    }\n    if (!this.activeSymbolIds) {\n      this.activeSymbolIds = await this.pToken.getActiveSymbolIds();\n    }\n    this.activeSymbols = await Promise.all(\n      this.activeSymbolIds.reduce(\n        (acc, i) => acc.concat([this.getSymbol(i)]),\n        []\n      )\n    );\n    return this.activeSymbols\n  }\n\n  // tx\n  async _getVolSymbolPrices() {\n    await this._updateConfig();\n    let volatilities = [];\n    if (this.volatilitySymbols.length > 0) {\n      const volatilityInfos = await getOracleVolatilitiesForOption(\n        this.activeSymbols.map((s) => s.symbol)\n      );\n      volatilities = Object.values(volatilityInfos).reduce((acc, p, index) => {\n        acc.push([\n          this.activeSymbolIds[index],\n          p.timestamp,\n          p.volatility,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ]);\n        return acc;\n      }, []);\n    }\n    //console.log('prices', prices);\n    return volatilities;\n  }\n\n  async addLiquidity(accountAddress, bAmount) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'addLiquidity',\n      [naturalToDeri(bAmount), prices],\n      accountAddress\n    );\n  }\n  async removeLiquidity(accountAddress, lShares) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'removeLiquidity',\n      [naturalToDeri(lShares), prices],\n      accountAddress\n    );\n  }\n  async addMargin(accountAddress, bAmount) {\n    return await this._transact(\n      'addMargin',\n      [naturalToDeri(bAmount)],\n      accountAddress\n    );\n  }\n  async removeMargin(accountAddress, bAmount) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'removeMargin',\n      [naturalToDeri(bAmount), prices],\n      accountAddress\n    );\n  }\n  async trade(accountAddress, symbolId, tradeVolume) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(tradeVolume), prices],\n      accountAddress\n    );\n  }\n\n  // trade history\n  async formatTradeEvent(event) {\n    const info = event.returnValues;\n    const tradeVolume = deriToNatural(info.tradeVolume).toString();\n    const block = await getBlockInfo(this.chainId, event.blockNumber);\n    const symbolId = info.symbolId;\n    const indexPrice = deriToNatural(info.indexPrice).toString();\n    const index = this.activeSymbolIds.indexOf(symbolId);\n    if (index > -1) {\n      const symbol = this.symbols[index];\n      const tradeFee = info.tradeFee;\n\n      const direction =\n        tradeFee !== \"-1\"\n          ? bg(tradeVolume).gt(0)\n            ? \"LONG\"\n            : \"SHORT\"\n          : \"LIQUIDATION\";\n      const price = bg(info.tradeCost)\n        .div(info.tradeVolume)\n        .div(symbol.multiplier)\n        .toString();\n      const notional = bg(tradeVolume)\n        .abs()\n        .times(indexPrice)\n        .times(symbol.multiplier)\n        .toString();\n      const contractValue = bg(tradeVolume)\n        .abs()\n        .times(price)\n        .times(symbol.multiplier)\n        .toString();\n\n      const res = {\n        symbolId: info.symbolId,\n        symbol: symbol.symbol,\n        trader: info.trader,\n        direction,\n        volume: bg(tradeVolume).abs().toString(),\n        price,\n        indexPrice,\n        notional,\n        contractValue,\n        transactionFee:\n          tradeFee === \"-1\" ? \"0\" : deriToNatural(tradeFee).toString(),\n        transactionHash: event.transactionHash,\n        time: block.timestamp * 1000,\n        extra: {},\n      };\n      //console.log(JSON.stringify(res));\n      return res;\n    } else {\n      return null;\n    }\n  }\n}\n","import { getPoolConfig } from '../../shared/config';\nimport { catchApiError, bg } from '../../shared/utils';\nimport {\n  calculateMaxRemovableShares,\n  calculateShareValue,\n} from '../../v1/calculation';\nimport { everlastingOptionFactory } from '../factory/pool';\nimport {\n  lTokenOptionFactory,\n} from '../factory/tokens';\nimport { volatilitiesCache } from '../utils';\n\nconst _getLiquidityInfo = async (chainId, poolAddress, accountAddress) => {\n  const { lToken: lTokenAddress } = getPoolConfig(\n    poolAddress,\n    '0',\n    '0',\n    'option'\n  );\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  await optionPool._updateConfig()\n  const lToken = lTokenOptionFactory(chainId, lTokenAddress);\n  const [\n    lTokenBalance,\n    lTokenTotalSupply,\n  ] = await Promise.all([\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n  ]);\n\n  const symbols = optionPool.activeSymbols\n  const symbolVolatilities = await volatilitiesCache.get(symbols.map((s) => s.symbol))\n  const state = await optionPool.viewer.getPoolStates(poolAddress, [], symbolVolatilities.map((v) => v.volatility))\n  const { poolState } = state;\n  const { initialMarginRatio, liquidity, totalDynamicEquity } = poolState;\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0));\n  const value = symbols.reduce(\n    (acc, s) =>\n      acc.plus(bg(s.tradersNetVolume).times(s.strikePrice).times(s.multiplier)),\n    bg(0)\n  );\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      totalDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      value,\n      cost,\n      bg(initialMarginRatio).times(10)\n    ).toString(),\n  };\n};\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(\n    _getLiquidityInfo,\n    [chainId, poolAddress, accountAddress],\n    'getLiquidityInfo',\n    {\n      totalSupply: '',\n      poolLiquidity: '',\n      shares: '',\n      shareValue: '',\n      maxRemovableShares: '',\n    }\n  );\n};\n","/*\n    1. Calculate the cost for user input volume\n    2. Calculate the final price if user input volume is traded\n*/\n\nexport function getMidPrice(tradersNetVolume, theoreticalPrice, K) {\n    return theoreticalPrice * (1 + K * tradersNetVolume)\n}\n\nexport function queryTradePMM(tradersNetVolume, theoreticalPrice, K, volume) {\n    return theoreticalPrice * (volume + ((tradersNetVolume + volume) ** 2 - tradersNetVolume ** 2) * K / 2)\n}\n","import {\n  bg,\n  max,\n  bTokenFactory,\n  catchApiError,\n  getPoolConfig,\n  fromWei,\n} from '../../shared';\nimport { fundingRateCache } from '../../shared/api/api_globals';\nimport { wrappedOracleFactory } from '../../shared/factory/oracle';\nimport { queryTradePMM } from '../calculation/PMM2';\nimport {\n  dynamicInitialMarginRatio,\n  dynamicInitialPoolMarginRatio,\n  getAverageEntryPrice,\n  //getDeltaFundingPerSecond,\n  getLiquidationPrice,\n  getLiquidationPrices,\n  getMarginHeldBySymbol,\n} from '../calculation/trade';\nimport { everlastingOptionFactory } from '../factory/pool';\nimport { volatilitiesCache } from '../utils';\nimport { getIndexInfo } from '../../shared/config/token';\n\n//\nconst SECONDS_IN_A_DAY = 86400;\n\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'option');\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      const [symbolInfo2, poolInfo2] = await Promise.all([\n        optionPool.getSymbol(symbolId),\n        optionPool.getParameters(),\n      ]);\n\n      const symbols = optionPool.activeSymbols\n      const symbolVolatilities = await volatilitiesCache.get(\n        symbols.map((s) => s.symbol)\n      );\n      const state = await optionPool.viewer.getPoolStates(\n        poolAddress,\n        [],\n        symbolVolatilities.map((v) => v.volatility)\n      );\n      const { symbolState } = state;\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\n      const symbolInfo = symbolState[symbolIndex];\n      const { dynamicMarginRatio, isCall } =\n        symbolInfo;\n      const { symbol, multiplier, feeRatioOTM, feeRatioITM } = symbolInfo2;\n      const {\n        initialMarginRatio,\n        maintenanceMarginRatio,\n        minLiquidationReward,\n        maxLiquidationReward,\n        liquidationCutRatio,\n        protocolFeeCollectRatio,\n      } = poolInfo2;\n\n      return {\n        symbol,\n        bTokenSymbol,\n        multiplier: multiplier.toString(),\n        feeRatioOTM: feeRatioOTM.toString(),\n        feeRatioITM: feeRatioITM.toString(),\n        //minPoolMarginRatio: minPoolMarginRatio.toString(),\n        initialMarginRatioOrigin: initialMarginRatio.toString(),\n        initialMarginRatio: dynamicMarginRatio.toString(),\n        maintenanceMarginRatioOrigin: maintenanceMarginRatio.toString(),\n        maintenanceMarginRatio: bg(dynamicMarginRatio)\n          .times(maintenanceMarginRatio)\n          .div(initialMarginRatio)\n          .toString(),\n        minLiquidationReward: minLiquidationReward.toString(),\n        maxLiquidationReward: maxLiquidationReward.toString(),\n        liquidationCutRatio: liquidationCutRatio.toString(),\n        protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n        isCall: isCall,\n        indexConstituents: getIndexInfo(symbol),\n      };\n    },\n    args,\n    'getSpecification',\n    {\n      symbol: '',\n      bTokenSymbol: '',\n      multiplier: '',\n      feeRatio: '',\n      //minPoolMarginRatio: '',\n      initialMarginRatio: '',\n      maintenanceMarginRatio: '',\n      minLiquidationReward: '',\n      maxLiquidationReward: '',\n      liquidationCutRatio: '',\n      protocolFeeCollectRatio: '',\n      indexConstituents: { url: '', tokens: [] },\n    }\n  );\n};\n\nexport const getPositionInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      const { symbol: symbolName} = getPoolConfig(\n        poolAddress,\n        undefined,\n        symbolId,\n        'option'\n      );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\n      const symbols = optionPool.activeSymbols\n      let symbolVolatilities = []\n      if (symbols && symbols.length > 0) {\n        [symbolVolatilities] = await Promise.all([\n          volatilitiesCache.get(\n            symbols.map((s) => s.symbol)\n          ),\n          //volatilityCache.get(`VOL-${normalizeOptionSymbol(symbolName)}`),\n        ]);\n      }\n      const state = await optionPool.viewer.getTraderStates(\n        poolAddress,\n        accountAddress,\n        [],\n        symbolVolatilities.map((v) => v.volatility)\n      );\n      const { poolState, symbolState, traderState, positionState } = state;\n      const { initialMarginRatio } = poolState;\n      const { margin, totalPnl, initialMargin } = traderState;\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\n      const volPrice = fromWei(symbolVolatilities[symbolIndex].volatility)\n      const symbol = symbolState[symbolIndex];\n      const position = positionState[symbolIndex];\n      const price = await wrappedOracleFactory(\n        chainId,\n        symbol.oracleAddress\n      ).getPrice();\n      return {\n        symbolId,\n        symbol: symbolName,\n        price,\n        strikePrice: symbol.strikePrice.toString(),\n        timePrice: symbol.timeValue.toString(),\n        markPrice: symbol.dpmmPrice.toString(),\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\n        averageEntryPrice: getAverageEntryPrice(position, symbol),\n        margin: margin.toString(),\n        marginHeld: initialMargin.toString(),\n        marginHeldBySymbol: getMarginHeldBySymbol(\n          position.volume,\n          price,\n          symbol,\n          initialMarginRatio\n        ).toString(),\n        unrealizedPnl: totalPnl,\n        unrealizedPnlList: symbolState\n          .filter((s, index) => positionState[index].pnl !== '0')\n          .map((s) => [s.symbol, positionState[symbolState.findIndex((oS) => oS.symbolId === s.symbolId)].pnl]),\n        premiumFundingAccrued: positionState[symbolIndex].fundingAccrued,\n        isCall: symbol.isCall,\n        volatility: bg(volPrice).times(100).toString(),\n        liquidationPrice: getLiquidationPrice(state, symbolId),\n      };\n    },\n    args,\n    'getPositionInfo',\n    {\n      price: '',\n      strikePrice: '',\n      timePrice: '',\n      volume: '',\n      averageEntryPrice: '',\n      margin: '',\n      marginHeld: '',\n      marginHeldBySymbol: '',\n      unrealizedPnl: '',\n      unrealizedPnlList: [],\n      premiumFundingAccrued: '',\n      liquidationPrice: '',\n      volatility: '',\n    }\n  );\n};\n\nexport const getPositionInfos = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\n      const symbols = optionPool.activeSymbols\n      let [symbolVolatilities] = await Promise.all([\n        volatilitiesCache.get(\n          symbols.map((s) => s.symbol)\n        ),\n        //volatilitiesCache.(symbols.map((s) => s.symbol)),\n      ]);\n      let volPrices = symbolVolatilities.map((v) => fromWei(v.volatility))\n      symbolVolatilities = symbolVolatilities.map((v) => v.volatility)\n      const state = await optionPool.viewer.getTraderStates(\n        poolAddress,\n        accountAddress,\n        [],\n        symbolVolatilities\n      );\n      const { poolState, traderState, positionState, symbolState } = state;\n      const { initialMarginRatio } = poolState;\n      const { margin, initialMargin } = traderState;\n      const prices = await Promise.all(\n        symbols.reduce(\n          (acc, s) =>\n            acc.concat([\n              wrappedOracleFactory(chainId, s.oracleAddress).getPrice(),\n            ]),\n          []\n        )\n      );\n\n      const liquidationPrices = getLiquidationPrices(state);\n      return symbols\n        .filter((s) => positionState[s.symbolId].volume !== '0')\n        .map((s) => {\n          const vIndex = symbolState.findIndex(\n            (oS) => oS.symbolId === s.symbolId\n          );\n          return {\n            symbolId: s.symbolId,\n            symbol: s.symbol,\n            price: prices[vIndex],\n            // strikePrice: s.strikePrice.toString(),\n            // timePrice: s.timeValue.toString(),\n            volume: bg(positionState[vIndex].volume)\n              .times(symbolState[vIndex].multiplier)\n              .toString(),\n            averageEntryPrice: getAverageEntryPrice(positionState[vIndex], s),\n            margin: margin.toString(),\n            marginHeld: initialMargin.toString(),\n            marginHeldBySymbol: getMarginHeldBySymbol(\n              positionState[vIndex].volume,\n              prices[vIndex],\n              s,\n              initialMarginRatio\n            ).toString(),\n            unrealizedPnl: positionState[vIndex].pnl,\n            premiumFundingAccrued: positionState[vIndex].fundingAccrued,\n            isCall: s.isCall,\n            volatility: bg(volPrices[vIndex]).times(100).toString(),\n            liquidationPrice: liquidationPrices,\n          };\n        });\n    },\n    args,\n    'getPositionInfos',\n    []\n  );\n};\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      const { bToken: bTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'option'\n      );\n      const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(\n        accountAddress\n      );\n      return balance.toString();\n    },\n    args,\n    'getWalletBalance',\n    ''\n  );\n};\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      const { bToken: bTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'option'\n      );\n      const bToken = bTokenFactory(chainId, bTokenAddress);\n      return await bToken.isUnlocked(accountAddress, poolAddress);\n    },\n    args,\n    'isUnlocked',\n    ''\n  );\n};\n\nconst _getFundingRate = async (chainId, poolAddress, symbolId) => {\n  //const { symbol } = getPoolConfig(poolAddress, undefined, symbolId, 'option')\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  await optionPool._updateConfig();\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\n  //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\n  const symbols = optionPool.activeSymbols;\n  const symbolVolatilities = (\n    await volatilitiesCache.get(symbols.map((s) => s.symbol))\n  ).map((v) => v.volatility);\n  const state = await optionPool.viewer.getPoolStates(\n    poolAddress,\n    [],\n    symbolVolatilities\n  );\n  const { poolState, symbolState } = state;\n  const { initialMarginRatio, totalDynamicEquity, liquidity } = poolState;\n  const curSymbolIndex = optionPool.activeSymbolIds.indexOf(symbolId);\n  if (curSymbolIndex < 0) {\n    throw new Error(\n      `getFundingRate(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n    );\n  }\n  const symbolInfo = symbolState[curSymbolIndex];\n\n  const prices = await Promise.all(\n    symbolState.reduce(\n      (acc, s) =>\n        acc.concat([wrappedOracleFactory(chainId, s.oracleAddress).getPrice()]),\n      []\n    )\n  );\n\n  const liquidityUsedInAmount = symbolState.reduce((acc, s, index) => {\n    return acc.plus(\n      bg(s.tradersNetVolume)\n        .times(prices[index])\n        .times(s.multiplier)\n        .abs()\n        .times(\n          dynamicInitialPoolMarginRatio(\n            prices[index],\n            s.strikePrice,\n            s.isCall,\n            initialMarginRatio\n          )\n        )\n    );\n  }, bg(0));\n\n  const res = {\n    initialMarginRatio,\n    symbolIds: optionPool.activeSymbolIds,\n    symbols: symbolState,\n    liquidity,\n    totalDynamicEquity,\n    prices,\n    liquidityUsed: bg(liquidity).eq(0) ? bg(0) : liquidityUsedInAmount.div(liquidity),\n    premiumFunding: bg(symbolInfo.fundingPerSecond)\n      .div(symbolInfo.multiplier)\n      .times(SECONDS_IN_A_DAY)\n      .toString(),\n    premiumFundingPerSecond: bg(symbolInfo.fundingPerSecond).div(\n      symbolInfo.multiplier\n    ),\n  };\n  return res;\n};\n\nexport const getEstimatedFee = async (\n  chainId,\n  poolAddress,\n  volume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, volume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, volume, symbolId) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      const symbolInfo = await optionPool.getSymbol(symbolId);\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const { symbolIds, prices, symbols } = res;\n      const curSymbolIndex = symbolIds.indexOf(symbolId);\n      if (curSymbolIndex < 0) {\n        throw new Error(\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n        );\n      }\n      const symbol = symbols[curSymbolIndex];\n      //console.log(ivolume, prices[curSymbolIndex], symbol, intrinsicPrice.toString())\n      let fee\n      const intrinsicValue = symbol.isCall\n        ? max(bg(symbol.spotPrice).minus(symbol.strikePrice), bg(0))\n        : max(bg(symbol.strikePrice).minus(symbol.spotPrice), bg(0));\n      if (bg(intrinsicValue).gt(0)) {\n        fee = bg(volume)\n          .abs()\n          .times(symbol.multiplier)\n          .times(symbol.spotPrice)\n          .times(symbolInfo.feeRatioITM)\n          .toString();\n      } else {\n        fee = bg(volume)\n          .abs()\n          .times(symbol.multiplier)\n          .times(symbol.timeValue)\n          .times(symbolInfo.feeRatioOTM)\n          .toString();\n      }\n      return fee\n    },\n    args,\n    'getFundingFee',\n    ''\n  );\n};\n\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId\n) => {\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\n  const [parameterInfo, symbol] = await Promise.all([\n    optionPool.getParameters(),\n    optionPool.getSymbol(symbolId),\n  ]);\n  const price = await wrappedOracleFactory(\n    chainId,\n    symbol.oracleAddress\n  ).getPrice();\n  const { initialMarginRatio } = parameterInfo;\n  const marginRatio = dynamicInitialMarginRatio(\n    price,\n    symbol.strikePrice,\n    symbol.isCall,\n    initialMarginRatio\n  );\n  //console.log(marginRatio, symbol.multiplier, price, volume)\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(symbol.multiplier)\n    .times(marginRatio);\n};\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId);\n};\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      const res = await _getFundingRate(chainId, poolAddress, symbolId);\n      fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      const curSymbolIndex = res.symbolIds.indexOf(symbolId);\n      if (curSymbolIndex < 0) {\n        throw new Error(\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n        );\n      }\n      return {\n        premiumFunding0: bg(res.premiumFunding).toString(),\n        premiumFundingPerSecond: res.premiumFundingPerSecond.toString(),\n        liquidity: res.liquidity.toString(),\n        volume: '-',\n        tradersNetVolume: res.symbols[curSymbolIndex].tradersNetVolume,\n      };\n    },\n    args,\n    'getFundingRate',\n    {\n      premiumFunding0: '',\n      premiumFundingPerSecond: '',\n      liquidity: '',\n      volume: '-',\n      tradersNetVolume: '',\n    }\n  );\n};\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\n  return catchApiError(\n    async () => {\n      // let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      // if (!res) {\n      //   res = await _getFundingRate(chainId, poolAddress, symbolId);\n      //   fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      // }\n      // const { symbolIds, symbols, prices, totalDynamicEquity } = res;\n      // const curSymbolIndex = symbolIds.indexOf(symbolId);\n      // if (curSymbolIndex < 0) {\n      //   throw new Error(\n      //     `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n      //   );\n      // }\n      // let symbol = symbols[curSymbolIndex];\n      // //console.log('symbol.tradersNetVolume0', symbol.tradersNetVolume)\n      // //symbol.tradersNetVolume = bg(symbol.tradersNetVolume).plus(newNetVolume).toString()\n      // //console.log('symbol.tradersNetVolume1', symbol.tradersNetVolume)\n      // const deltaFunding1 = getdeltaFundingPerSecond(\n      //   symbol,\n      //   symbol.delta,\n      //   prices[curSymbolIndex],\n      //   totalDynamicEquity,\n      //   newNetVolume\n      // );\n\n      return {\n        // deltaFunding1: bg(deltaFunding1)\n        //   .div(symbol.multiplier)\n        //   .times(SECONDS_IN_A_DAY)\n        //   .toString(),\n      };\n    },\n    args,\n    'getEstimatedFundingRate',\n    {\n    }\n  );\n};\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      }\n      return {\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\n      };\n    },\n    args,\n    'getLiquidityUsed',\n    {\n      liquidityUsed0: '',\n    }\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      }\n      const { symbolIds, symbols, prices, liquidity, initialMarginRatio } = res;\n\n      const liquidityUsedInAmount = symbols.reduce((acc, s, index) => {\n        if (symbolIds[index] == symbolId) {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .plus(newNetVolume)\n              .times(prices[index])\n              .times(s.multiplier)\n              .abs()\n              .times(\n                dynamicInitialPoolMarginRatio(\n                  prices[index],\n                  s.strikePrice,\n                  s.isCall,\n                  initialMarginRatio\n                )\n              )\n          );\n        } else {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .times(prices[index])\n              .times(s.multiplier)\n              .abs()\n              .times(\n                dynamicInitialPoolMarginRatio(\n                  prices[index],\n                  s.strikePrice,\n                  s.isCall,\n                  initialMarginRatio\n                )\n              )\n          );\n        }\n      }, bg(0));\n      return {\n        liquidityUsed1: bg(liquidity).eq(0) ? '0' : liquidityUsedInAmount\n          .div(liquidity)\n          .times(100)\n          .toString(),\n      };\n    },\n    args,\n    'getEstimatedLiquidityUsed',\n    {\n      liquidityUsed1: '',\n    }\n  );\n};\n\nexport const getEstimatedTimePrice = (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      const symbolVolatilities = (await volatilitiesCache.get(\n        optionPool.activeSymbols.map((s) => s.symbol)\n      )).map((v) => v.volatility);\n      const state = await optionPool.viewer.getPoolStates(\n        poolAddress,\n        [],\n        symbolVolatilities\n      );\n      const { symbolState } = state;\n\n      //const { liquidity } = poolState;\n      const index = symbolState.findIndex((s) => s.symbolId === symbolId);\n      if (index > -1) {\n        const {\n          tradersNetVolume,\n          multiplier,\n          intrinsicValue,\n          timeValue,\n          K,\n        } = symbolState[index];\n        //console.log(tradersNetVolume, multiplier, liquidity, quoteBalanceOffset, timePrice, K)\n        const args = [\n          bg(tradersNetVolume).times(multiplier).toNumber(),\n          bg(intrinsicValue).plus(timeValue).toNumber(),\n          bg(K).toNumber(),\n          bg(newNetVolume).times(multiplier).toNumber(),\n        ]\n\n        const res = queryTradePMM(...args);\n        //console.log('res', res)\n        return bg(res).div(newNetVolume).div(multiplier).toString();\n      } else {\n        console.log(\n          `invalid symbolId(${symbolId}) for the pool(${poolAddress})`\n        );\n        return '';\n      }\n    },\n    args,\n    'getEstimatedMarkPrice',\n    ''\n  );\n};\n","import { getPoolConfig } from '../../shared/config';\nimport { bTokenFactory } from '../../shared/factory';\nimport { catchTxApiError, bg } from '../../shared/utils';\n//import { isOrderValid } from '../../v2/calculation';\nimport { everlastingOptionFactory } from '../factory/pool.js';\nimport { pTokenOptionFactory} from '../factory/tokens';\n\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    const { bToken: bTokenAddress } = getPoolConfig(\n      poolAddress,\n      '0',\n      '0',\n      'option'\n    );\n    const bToken = bTokenFactory(chainId, bTokenAddress);\n    return await bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      return await optionPool.addMargin(accountAddress, amount);\n    },\n    args\n  );\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  isMaximum = false\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      return await optionPool.removeMargin(\n        accountAddress,\n        amount,\n        isMaximum\n      );\n    },\n    args\n  );\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n      // const { pToken: pTokenAddress } = getPoolConfig(\n      //   poolAddress,\n      //   '0',\n      //   '0',\n      //   'option'\n      // );\n      // const pToken = pTokenOptionFactory(chainId, pTokenAddress);\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      // const [parameterInfo, liquidity, margin, symbolIds] = await Promise.all([\n      //   optionPool.getParameters(),\n      //   optionPool.getLiquidity(),\n      //   pToken.getMargin(accountAddress),\n      //   pToken.getActiveSymbolIds(),\n      // ]);\n      // no minInitialMarginRatio in option\n      // const { initialMarginRatio, minPoolMarginRatio } = parameterInfo;\n      // let promises = [];\n\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   promises.push(optionPool.getSymbol(symbolIds[i]));\n      // }\n      // const symbols = await Promise.all(promises);\n\n      // promises = [];\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      // }\n      // const positions = await Promise.all(promises);\n\n      // let marginHeld = symbols.reduce((acc, s, index) => {\n      //   if (index === parseInt(symbolId)) {\n      //     return acc.plus(\n      //       bg(s.price)\n      //         .times(s.multiplier)\n      //         .times(bg(positions[index]).volume.plus(newVolume))\n      //         .abs()\n      //     );\n      //   } else {\n      //     return acc.plus(\n      //       bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\n      //     );\n      //   }\n      // }, bg(0));\n      // marginHeld = marginHeld.times(initialMarginRatio);\n\n      // let liquidityUsed = symbols.reduce((acc, s, index) => {\n      //   if (index === parseInt(symbolId)) {\n      //     return acc.plus(\n      //       bg(s.tradersNetVolume)\n      //         .plus(newVolume)\n      //         .times(s.price)\n      //         .times(s.multiplier)\n      //         .abs()\n      //     );\n      //   } else {\n      //     return acc.plus(\n      //       bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\n      //     );\n      //   }\n      // }, bg(0));\n      // liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n\n      // const orderValidation = isOrderValid(\n      //   margin,\n      //   marginHeld,\n      //   liquidity,\n      //   liquidityUsed\n      // );\n      // if (orderValidation.success) {\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\n      // } else {\n      //   throw new Error(orderValidation.error);\n      // }\n    },\n    args\n  );\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      const { pToken: pTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'option'\n      );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      const pToken = pTokenOptionFactory(chainId, pTokenAddress);\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\n      if (!bg(volume).eq(0)) {\n        const newVolume = bg(volume).negated().toString();\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error('no position to close');\n      }\n    },\n    args\n  );\n};\n","import {\n  deriToNatural,\n  naturalToDeri,\n  bg,\n  getBlockInfo,\n  getPastEvents,\n  getPastEventsUseAbi,\n  getHttpBase,\n  fetchJson,\n  max,\n} from '../../shared/utils';\nimport { getPoolConfig, DeriEnv } from '../../shared/config';\nimport { everlastingOptionFactory, optionPricerFactory } from '../factory/pool';\nimport { everlastingOptionOldAbi } from '../contract/abis';\n\nconst processTradeEvent = async (\n  chainId,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  bTokenSymbol,\n  symbolIdList,\n  symbols,\n  pricer\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const tradeCost = deriToNatural(info.tradeCost);\n  const time = `${+timeStamp.timestamp}000`;\n  const volume = tradeVolume.abs();\n  const symbolId = info.symbolId;\n  const volatility = info.volatility;\n  const index = symbolIdList.indexOf(symbolId);\n  const price = bg(tradeCost).div(\n    bg(tradeVolume).times(symbols[index].multiplier)\n  );\n  const indexPrice = deriToNatural(info.spotPrice);\n\n  const intrinsicValue = symbols[index].isCall\n    ? max(indexPrice.minus(symbols[index].strikePrice), bg(0))\n    : max(bg(symbols[index].strikePrice).minus(indexPrice), bg(0));\n  let timeValue = '0';\n  if (intrinsicValue.lte(0)) {\n    const res = await pricer.getEverlastingTimeValueAndDelta(\n      naturalToDeri(indexPrice),\n      naturalToDeri(symbols[index].strikePrice),\n      volatility,\n      naturalToDeri(bg(1).div(365).toString())\n    );\n    timeValue = res.timeValue;\n  }\n  if (index > -1) {\n    return {\n      direction,\n      baseToken: bTokenSymbol,\n      symbolId,\n      symbol: symbols[index].symbol,\n      price: price.toString(),\n      indexPrice: indexPrice.toString(),\n      volume: volume.times(symbols[index].multiplier).toString(),\n      transactionHash: txHash.toString(),\n      notional: tradeVolume\n        .abs()\n        .times(indexPrice)\n        .times(multiplier[index])\n        .toString(),\n      contractValue: tradeVolume\n        .abs()\n        .times(price)\n        .times(multiplier[index])\n        .toString(),\n      transactionFee: intrinsicValue.gt(0)\n        ? volume\n            .times(symbols[index].multiplier)\n            .times(indexPrice)\n            .times(symbols[index].feeRatioITM)\n            .toString()\n        : volume\n            .times(symbols[index].multiplier)\n            .times(timeValue)\n            .times(symbols[index].feeRatioOTM)\n            .toString(),\n      time,\n    };\n  } else {\n    return null;\n  }\n};\n\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n  // const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  const { bTokenSymbol, pricer: pricerAddress } = getPoolConfig(\n    poolAddress,\n    undefined,\n    undefined,\n    'option'\n  );\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  const pricer = optionPricerFactory(chainId, pricerAddress);\n  const [toBlock] = await Promise.all([\n    getBlockInfo(chainId, 'latest'),\n    optionPool._updateConfig(),\n  ]);\n  fromBlock = parseInt(fromBlock);\n\n  let promises = [];\n  for (let i = 0; i < optionPool.activeSymbolIds.length; i++) {\n    promises.push(\n      optionPool.getSymbol(optionPool.activeSymbolIds[i].toString())\n    );\n  }\n  let symbols = await Promise.all(promises);\n  //let symbols = optionPool.activeSymbols\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n\n  const filters = { account: accountAddress };\n  let result = [];\n\n  if (DeriEnv.get() === 'testnet') {\n    let events = await getPastEvents(\n      chainId,\n      optionPool.contract,\n      'Trade',\n      filters,\n      fromBlock,\n      toBlock.number\n    );\n\n    //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n    console.log('online events length:', events.length);\n    for (let i = 0; i < events.length; i++) {\n      const item = events[i];\n      let res;\n      res = await optionPool.formatTradeEvent(item);\n      if (res) {\n        const symbolIndex = optionPool.activeSymbolIds.indexOf(res.symbolId);\n        result.unshift({\n          baseToken: bTokenSymbol,\n          direction: res.direction,\n          volume: bg(res.volume)\n            .times(optionPool.symbols[symbolIndex].multiplier)\n            .toString(),\n          price: res.price,\n          indexPrice: res.indexPrice,\n          notional: res.notional,\n          symbol: res.symbol,\n          symbolId: res.symbolId,\n          time: res.time,\n          contractValue: res.contractValue,\n          transactionFee: res.transactionFee,\n          transactionHash: res.transactionHash,\n        });\n      }\n    }\n  } else {\n    let events = await getPastEventsUseAbi(\n      chainId,\n      poolAddress,\n      everlastingOptionOldAbi,\n      'Trade',\n      filters,\n      fromBlock,\n      toBlock.number\n    );\n\n    // console.log('old online events length:', events.length, fromBlock, toBlock.number);\n    //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n    for (let i = 0; i < events.length; i++) {\n      const item = events[i];\n      const res = await processTradeEvent(\n        chainId,\n        item.returnValues,\n        item.blockNumber,\n        item.transactionHash,\n        multiplier,\n        bTokenSymbol,\n        optionPool.activeSymbolIds,\n        symbols,\n        pricer\n      );\n      res && result.unshift(res);\n    }\n  }\n  result = result.filter((tr) => tr !== null);\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock,\n      tradeHistory = [];\n    const optionPool = everlastingOptionFactory(chainId, poolAddress);\n    const [res] = await Promise.all([\n      fetchJson(\n        `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n      ),\n      optionPool._updateConfig(),\n    ]);\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    const symbols = optionPool.activeSymbols;\n    //console.log('history ', tradeHistory)\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => !(i.direction === 'LIQUIDATION' && i.symbolId === '0'))\n        .map((i) => {\n          const index = symbols.findIndex((s) => s.symbolId === i.symbolId);\n          if (index > -1 && i.direction !== 'LIQUIDATION') {\n            return {\n              direction: i.direction.trim(),\n              baseToken: i.baseToken.trim(),\n              symbolId: i.symbolId,\n              symbol: i.symbol,\n              price: deriToNatural(i.price)\n                .div(symbols[index].multiplier)\n                .toString(),\n              indexPrice: deriToNatural(i.indexPrice).toString(),\n              notional: deriToNatural(i.notional).toString(),\n              contractValue: deriToNatural(i.contractValue).toString(),\n              volume: deriToNatural(i.volume)\n                .times(symbols[index].multiplier)\n                .toString(),\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else if (i.direction === 'LIQUIDATION') {\n            if (\n              i.volume !== '' &&\n              i.volume.indexOf(',') > -1 &&\n              !i.price.startsWith('NaN')\n            ) {\n              const ids = i.volume.split(',').reduce((acc, v, index) => {\n                if (v !== '0') {\n                  return acc.concat([index]);\n                } else {\n                  return acc;\n                }\n              }, []);\n              const prices = i.price.split(',').map((s) => deriToNatural(s));\n              const volumes = i.volume.split(',').map((v) => deriToNatural(v));\n              const res = ids.map((id) => {\n                return {\n                  direction: i.direction.trim(),\n                  baseToken: i.baseToken.trim(),\n                  symbolId: id.toString(),\n                  symbol: symbols[id].symbol,\n                  volume: volumes[id]\n                    .times(symbols[id].multiplier)\n                    .abs()\n                    .toString(),\n                  price: prices[id].toString(),\n                  indexPrice: '',\n                  notional: '',\n                  contractValue: volumes[id]\n                    .abs()\n                    .times(prices[id])\n                    .times(symbols[id].multiplier)\n                    .toString(),\n                  transactionFee: '0',\n                  transactionHash: i.transactionHash,\n                  time: i.time.toString(),\n                };\n              });\n              return res;\n            } else {\n              return {\n                direction: i.direction.trim(),\n                baseToken: i.baseToken.trim(),\n                symbolId: '',\n                symbol: '',\n                volume: '',\n                price: '',\n                indexPrice: '',\n                notional: '',\n                contractValue: '',\n                transactionFee: '0',\n                transactionHash: i.transactionHash,\n                time: i.time.toString(),\n              };\n            }\n          } else {\n            // i.symbolId is not in activeSymbols\n            return null;\n          }\n        })\n        .flat();\n    }\n    tradeHistory = tradeHistory.filter((tr) => tr !== null);\n    // fetch tradeHistory on the block with fromBlock from rest api\n    //console.log('tradeFromBlock', tradeFromBlock)\n    if (tradeFromBlock !== 0) {\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n      const { initialBlock } = getPoolConfig(\n        poolAddress,\n        undefined,\n        symbolId,\n        'option'\n      );\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch (err) {\n    console.log(\n      `getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`\n    );\n  }\n  return [];\n};\n","import { catchTxApiError, naturalToDeri, toChecksumAddress } from \"../../shared\"\nimport { normalizeChainId } from \"../../shared/utils/validate\";\nimport { getOracleFactoryChainlinkConfig, getPoolV2LiteManagerConfig } from \"../config\";\nimport { chainlinkFeedFactory, oracleFactoryChainlinkFactory, perpetualPoolLiteFactory, perpetualPoolLiteManagerFactory } from \"../factory\";\n\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\nexport const createPool = async(...args) => {\n  return catchTxApiError(async(chainId, accountAddress, parameters, bTokenAddress, pairedTokenAddress) => {\n      chainId = normalizeChainId(chainId)\n      const { address: poolManagerAddress } = getPoolV2LiteManagerConfig(chainId)\n      const poolManager = perpetualPoolLiteManagerFactory(\n        chainId,\n        poolManagerAddress\n      );\n      // process parameters\n      const newParameters = parameters.map((p) => naturalToDeri(p).toString())\n      // send tx\n     return await poolManager.createPool(accountAddress, newParameters, bTokenAddress, pairedTokenAddress)\n  }, args)\n}\n\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\nexport const addSymbol = async(...args) => {\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, parameters) => {\n      chainId = normalizeChainId(chainId)\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n      // process parameters\n      const newParameters = parameters.map((p, index) => index > 2 ? naturalToDeri(p).toString() : p)\n      // send tx\n     return await perpetualPoolLite.addSymbol(accountAddress, newParameters)\n  }, args)\n}\n\nexport const createOracle = async(...args) => {\n  return catchTxApiError(async(chainId, accountAddress, feedAddress) => {\n      chainId = normalizeChainId(chainId)\n      feedAddress = toChecksumAddress(feedAddress)\n      const feedContract = chainlinkFeedFactory(chainId, feedAddress)\n      const symbol = await feedContract.symbol()\n      if (typeof symbol === 'string' && symbol !== '') {\n        const oracleFactoryConfig = getOracleFactoryChainlinkConfig(chainId);\n        const oracleFactory = oracleFactoryChainlinkFactory(\n          chainId,\n          oracleFactoryConfig.address\n        );\n        // process parameters\n        // send tx\n        return await oracleFactory.createOracle(\n          accountAddress,\n          symbol\n        );\n      } else {\n        throw new Error(\n          `-- createOracle: cannot get description of feedAddress(${feedAddress})`\n        );\n      }\n  }, args)\n}\n","import { DeriEnv } from \"../shared/config\"\n\nexport const getPTokenAirdropConfig = (chainId, env) => {\n  chainId = chainId.toString()\n  env = env || DeriEnv.get();\n  const config = {\n    prod: [\n      {\n        chainId: '56',\n        address: '0x055FD7f825cCD1b87092A1Ee40462c4c60dDD8ba',\n      },\n    ],\n    dev: [\n      {\n        chainId: '97',\n        address: '0x632D0f5d642B0d915cE1ad0772677FC589cc724d',\n      },\n    ],\n  };\n\n  if (Object.keys(config).includes(env)) {\n    const res = config[env].find((c) => c.chainId === chainId);\n    if (res) {\n      return res\n    }\n  } \n  throw new Error(`-- getPTokenAirdropConfig(), invalid env(${env}) or chainId(${chainId})`)\n};\n\nexport const getDeriVoteConfig = (chainId, env) => {\n  chainId = chainId.toString()\n  env = env || DeriEnv.get();\n  const config = {\n    prod: [\n      {\n        chainId: '1',\n        address: '0xb2b6907AdDa5a13673849CBD448f31be9C4A7424',\n      },\n      {\n        chainId: '56',\n        address: '0x27c116474D4E08df0A13935AF508E8922271F891',\n      },\n      {\n        chainId: '128',\n        address: '0x3752D67bfBe945a89787c7F6758A47C2D52988d4',\n      },\n      {\n        chainId: '137',\n        address: '0x6d05Fd927b5d184A8f848DA7D57C7228AEf80b85',\n      },\n    ],\n    dev: [\n      {\n        chainId: '97',\n        address: '0x37f3432B2166c6dB487c844C481Cba47ac98AD00',\n      },\n    ],\n  };\n\n  if (Object.keys(config).includes(env)) {\n    const res = config[env].find((c) => c.chainId === chainId);\n    if (res) {\n      return res\n    }\n  } \n  throw new Error(`-- getDeriVoteConfig(), invalid env(${env}) or chainId(${chainId})`)\n};\n","import Web3 from \"web3\";\nimport { bg } from \"../shared/utils\";\n\n// lang\nexport const isObject = (value) => typeof value === 'object' && value !== null\nexport const isArray = (value) => typeof value === 'object' && Array.isArray(value)\nexport const isFunction = (value) => typeof value === 'function'\n\n// convert\nexport const toWei = (number, unit = \"ether\") => {\n  return Web3.utils.toWei(number, unit);\n};\n\nexport const fromWei = (number, unit = \"ether\") => {\n  return Web3.utils.fromWei(number, unit);\n};\n\n// factory\nexport const contractFactory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\n// adapter\nconst processObjectResult = (val, propList = []) => {\n  return Object.keys(val).reduce((acc, prop) => {\n    if (typeof val[prop] === \"string\" && propList.includes(prop)) {\n      acc[prop] = bg(fromWei(val[prop])).toString();\n    } else {\n      acc[prop] = val[prop];\n    }\n    return acc;\n  }, {});\n};\n\nconst processResult = (val, propList = []) => {\n  if (isArray(val)) {\n    return val.map((v) => processResult(v, propList));\n  } else if (isObject(val)) {\n    return processObjectResult(val, propList);\n  } else if (typeof val === \"string\") {\n    return bg(fromWei(val)).toString();\n  } else {\n    return val;\n  }\n};\n\nexport const processMethod = (klass, methodName, propList = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const res = await originMethod.apply(this, args);\n    return processResult(res, propList);\n  };\n  return klass;\n};\n\nexport const processTxMethod = (klass, methodName, toWeiArgPositions = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const newArgs = args.map((arg, index) =>\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\n    );\n    return await originMethod.apply(this, newArgs);\n  };\n  return klass;\n};","// this file is generated by script, don't modify it !!!\nexport const pTokenAirdropNULSAbi = [{\n        \"inputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"bTokenAddress\",\n                \"type\": \"address\"\n            }, {\n                \"internalType\": \"address\",\n                \"name\": \"pTokenAddress\",\n                \"type\": \"address\"\n            }, {\n                \"internalType\": \"address\",\n                \"name\": \"poolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    }, {\n        \"anonymous\": false,\n        \"inputs\": [{\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }, {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }, {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"index\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"AirdropPToken\",\n        \"type\": \"event\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"airdropPToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"getBTokenBalance\",\n        \"outputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"isAirdropPToken\",\n        \"outputs\": [{\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"isStartAirdrop\",\n        \"outputs\": [{\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"marginUnit\",\n        \"outputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"maxAirdropLimit\",\n        \"outputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"ownerAddress\",\n        \"outputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"marginUnit_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setMarginUnit\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"maxAirdropLimit_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setMaxAirdropLimit\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [{\n                \"internalType\": \"int256\",\n                \"name\": \"tradeUnit_\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"setTradeUnit\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"startAirdrop\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"stopAirdrop\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"totalAirdropCount\",\n        \"outputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"tradeUnit\",\n        \"outputs\": [{\n                \"internalType\": \"int256\",\n                \"name\": \"\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"withdrawBToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils'\nimport { pTokenAirdropNULSAbi } from '../abi/pTokenAirdropNULSAbi.js'\n\nexport class PTokenAirdropNULS extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenAirdropNULSAbi)\n  }\n\n  // query\n  //  async getBTokenBalance() {\n  //    const res = await this._call('getBTokenBalance', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async isAirdropPToken(account) {\n    const res = await this._call('isAirdropPToken', [account])\n    return deleteIndexedKey(res)\n  }\n  //  async isStartAirdrop() {\n  //    const res = await this._call('isStartAirdrop', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async marginUnit() {\n  //    const res = await this._call('marginUnit', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async maxAirdropLimit() {\n  //    const res = await this._call('maxAirdropLimit', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async ownerAddress() {\n  //    const res = await this._call('ownerAddress', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async totalAirdropCount() {\n    const res = await this._call('totalAirdropCount', [])\n    return deleteIndexedKey(res)\n  }\n  //  async tradeUnit() {\n  //    const res = await this._call('tradeUnit', [])\n  //    return deleteIndexedKey(res)\n  //  }\n\n  // tx\n  async airdropPToken(accountAddress) {\n    return await this._transact('airdropPToken', [], accountAddress)\n  }\n  //  async setMarginUnit(accountAddress, marginUnit_) {\n  //    return await this._transact('setMarginUnit', [marginUnit_], accountAddress)\n  //  }\n  //  async setMaxAirdropLimit(accountAddress, maxAirdropLimit_) {\n  //    return await this._transact('setMaxAirdropLimit', [maxAirdropLimit_], accountAddress)\n  //  }\n  //  async setTradeUnit(accountAddress, tradeUnit_) {\n  //    return await this._transact('setTradeUnit', [tradeUnit_], accountAddress)\n  //  }\n  //  async startAirdrop(accountAddress) {\n  //    return await this._transact('startAirdrop', [], accountAddress)\n  //  }\n  //  async stopAirdrop(accountAddress) {\n  //    return await this._transact('stopAirdrop', [], accountAddress)\n  //  }\n  //  async withdrawBToken(accountAddress) {\n  //    return await this._transact('withdrawBToken', [], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const deriVoteAbi = [\n  { \"inputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"voter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"votingId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"votingOption\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Vote\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"controller\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"topic\", \"type\": \"string\" },\n      { \"internalType\": \"uint256\", \"name\": \"nOptions\", \"type\": \"uint256\" },\n      { \"internalType\": \"uint256\", \"name\": \"deadline\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"initializeVote\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"numVotingOptions\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" }\n    ],\n    \"name\": \"setController\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"uint256\", \"name\": \"votingOption\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"vote\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"votingDeadline\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"votingId\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" },\n      { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }\n    ],\n    \"name\": \"votingOptions\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"name\": \"votingTopics\",\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils'\nimport { deriVoteAbi } from '../abi/deriVoteAbi.js'\n\nexport class DeriVote extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, deriVoteAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async controller() {\n    const res = await this._call('controller', [])\n    return deleteIndexedKey(res)\n  }\n  async name() {\n    const res = await this._call('name', [])\n    return deleteIndexedKey(res)\n  }\n  async numVotingOptions() {\n    const res = await this._call('numVotingOptions', [])\n    return deleteIndexedKey(res)\n  }\n  async votingDeadline() {\n    const res = await this._call('votingDeadline', [])\n    return deleteIndexedKey(res)\n  }\n  async votingId() {\n    const res = await this._call('votingId', [])\n    return deleteIndexedKey(res)\n  }\n  async votingOptions(votingId, voter) {\n    const res = await this._call(\"votingOptions\", [votingId, voter]);\n    return deleteIndexedKey(res);\n  }\n  async votingTopics(votingId) {\n    const res = await this._call('votingTopics', [votingId])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async initializeVote(accountAddress, topic, nOptions, deadline) {\n  //    return await this._transact('initializeVote', [topic, nOptions, deadline], accountAddress)\n  //  }\n  //  async setController(accountAddress, newController) {\n  //    return await this._transact('setController', [newController], accountAddress)\n  //  }\n  async vote(accountAddress, votingOption) {\n    return await this._transact('vote', [votingOption], accountAddress)\n  }\n\n}","import { contractFactory } from \"../utils\";\nimport { PTokenAirdropNULSAdapter, deriVoteAdapter } from \"./adapter\";\n\nimport { PTokenAirdropNULS } from \"./gen/PTokenAirdropNULS\";\nimport { DeriVote } from \"./gen/DeriVote.js\";\n\n// pToken airdrop\nexport const PTokenAirdropNULSFactory = contractFactory(\n  PTokenAirdropNULSAdapter(PTokenAirdropNULS)\n);\n\n// deri vote\nexport const deriVoteFactory = contractFactory(deriVoteAdapter(DeriVote));","import { catchApiError, catchTxApiError, bg } from \"../../shared/utils\";\nimport { perpetualPoolLiteFactory } from \"../../v2_lite/factory\";\nimport { getPTokenAirdropConfig } from \"../config\"\nimport { PTokenAirdropNULSFactory } from \"../contract/factory\"\n\nexport const isPTokenAirdropped = async (...args) => {\n  return catchApiError(async(chainId, accountAddress) => {\n    const config = getPTokenAirdropConfig(chainId);\n    return await PTokenAirdropNULSFactory(\n      chainId,\n      config.address\n    ).isAirdropPToken(accountAddress);\n  }, args, 'isPTokenAirdropped', '')\n};\n\nexport const totalAirdropCount = async (...args) => {\n  return catchApiError(async(chainId) => {\n    const config = getPTokenAirdropConfig(chainId);\n    return await PTokenAirdropNULSFactory(\n      chainId,\n      config.address\n    ).totalAirdropCount();\n  }, args, 'totalAirdropCount', '')\n};\n\nexport const isUserPTokenExist = async (...args) => {\n  return catchApiError(async (chainId, poolAddress, accountAddress) => {\n    let res = '';\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\n    await pool.init()\n    const result = await pool.pToken.balanceOf(accountAddress);\n    if (result === '1') {\n      res = true;\n    } else if (result === '0') {\n      res = false;\n    }\n    return res;\n  }, args, 'isUserPTokenExist', '');\n};\n\nexport const isBTokenUnlocked = async(...args) => {\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\n    await pool.init()\n    return await pool.bToken.isUnlocked(accountAddress, poolAddress)\n  }, args, 'isUnlocked', '')\n}\n\nexport const hasRequiredBalance = async(...args) => {\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\n    await pool.init()\n    const res = await pool.bToken.balanceOf(accountAddress)\n    console.log('res', res)\n    return bg(res).gte(100)\n  }, args, 'hasRequiredBalance', '')\n}\n\n\n// tx\nexport const unlockBToken = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\n    await pool.init()\n    return await pool.bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const airdropPToken = async (...args) => {\n  return catchTxApiError(async (chainId, accountAddress) => {\n    const config = getPTokenAirdropConfig(chainId);\n    return await PTokenAirdropNULSFactory(\n      chainId,\n      config.address\n    ).airdropPToken(accountAddress);\n  }, args);\n};\n","import { catchApiError, bg, deriToNatural, databaseActivityFactory, toChecksumAddress, DeriEnv, max } from '../../shared';\n\nconst range = (n) => (new Array(n)).fill(0).map((i,index) => index)\n\nconst keyPrefix = () => (DeriEnv.get() === 'prod' ? 'TE' : 'TE2');\n\nexport const getStakingTop10Users = async () => {\n  return catchApiError(\n    async () => {\n      const db = databaseActivityFactory();\n      const key = range(10).reduce(\n        (acc, i) =>\n          acc.concat([\n            `${keyPrefix()}.top.${i + 1}.account`,\n            `${keyPrefix()}.top.${i + 1}.fee`,\n            `${keyPrefix()}.top.${i + 1}.score`,\n            `${keyPrefix()}.top.${i + 1}.cont`,\n          ]),\n        []\n      );\n      //console.log(key)\n      const res = await db.getValues(key)\n      //console.log(res)\n      if (Array.isArray(res) && res.length === 4 * 10) {\n        let result = []\n        for (let i = 0; i < res.length; i++) {\n          if ((i + 1) % 4 === 0) {\n            const info = res.slice(i - 3, i + 1);\n            const index = (i + 1) / 4\n            result.push({\n              no: index,\n              userAddr: info[0].slice(0, 42),\n              feePaid: deriToNatural(info[1]).toString(),\n              score: deriToNatural(info[2]).toString(),\n              evgCoeff: deriToNatural(info[1]).eq(0)\n                ? '0'\n                : bg(info[3]).div(info[1]).toString(),\n              rewardBNB:\n                index <= 5\n                  ? index <= 4\n                    ? index <= 3\n                      ? index <= 2\n                        ? index <= 1\n                          ? '200000'\n                          : '100000'\n                        : '50000'\n                      : '35000'\n                    : '25000'\n                  : '18000',\n            });\n          }\n        }\n        return result.filter((r) => r.userAddr !== '0x0000000000000000000000000000000000000000')\n      } else {\n        return []\n      }\n    },\n    [],\n    'getStakingTop10Users',\n    [],\n  );\n};\n\nexport const getUserStakingInfo = async (accountAddress) => {\n  const args = [accountAddress];\n  return catchApiError(\n    async (accountAddress) => {\n      accountAddress = toChecksumAddress(accountAddress)\n      const db = databaseActivityFactory();\n      const key = [\n        `${keyPrefix()}.Q1.cont`,\n        `${keyPrefix()}.Q2.cont`,\n        `${keyPrefix()}.Q3.cont`,\n        `${keyPrefix()}.Q4.cont`,\n        `${keyPrefix()}.${accountAddress}.Q1.cont`,\n        `${keyPrefix()}.${accountAddress}.Q2.cont`,\n        `${keyPrefix()}.${accountAddress}.Q3.cont`,\n        `${keyPrefix()}.${accountAddress}.Q4.cont`,\n        `${keyPrefix()}.${accountAddress}.fee`,\n        `${keyPrefix()}.${accountAddress}.coef`,\n      ];\n      const res = await db.getValues(key)\n      const scoreQ1 = bg(res[0]).eq(0) ? '0': bg(10000).times(bg(res[4]).div(res[0]))\n      const scoreQ2 = bg(res[1]).eq(0) ? '0': bg(20000).times(bg(res[5]).div(res[1]))\n      const scoreQ3 = bg(res[2]).eq(0) ? '0': bg(30000).times(bg(res[6]).div(res[2]))\n      const scoreQ4 = bg(res[3]).eq(0) ? '0': bg(50000).times(bg(res[7]).div(res[3]))\n\n      const coef = deriToNatural(res[9])\n      return {\n        userAddr: accountAddress,\n        feePaid: deriToNatural(res[8]).toString(),\n        coef: max(coef, bg(1)).toString(),\n        score: bg(scoreQ1).plus(scoreQ2).plus(scoreQ3).plus(scoreQ4).toString()\n      }\n    },\n    args,\n    'getUserStakingInfo',\n    {\n      userAddr: '',\n      feePaid: '',\n      coef: '',\n      score: '',\n    }\n  );\n};\n\nexport const getUserStakingReward = async (accountAddress) => {\n  const args = [accountAddress];\n  return catchApiError(\n    async (accountAddress) => {\n      accountAddress = toChecksumAddress(accountAddress)\n      const db = databaseActivityFactory();\n      const key = [\n        `${keyPrefix()}.Q1.cont`,\n        `${keyPrefix()}.Q2.cont`,\n        `${keyPrefix()}.Q3.cont`,\n        `${keyPrefix()}.Q4.cont`,\n        `${keyPrefix()}.${accountAddress}.Q1.cont`,\n        `${keyPrefix()}.${accountAddress}.Q2.cont`,\n        `${keyPrefix()}.${accountAddress}.Q3.cont`,\n        `${keyPrefix()}.${accountAddress}.Q4.cont`,\n        `${keyPrefix()}.top.1.account`,\n        `${keyPrefix()}.top.2.account`,\n        `${keyPrefix()}.top.3.account`,\n        `${keyPrefix()}.top.4.account`,\n        `${keyPrefix()}.top.5.account`,\n        `${keyPrefix()}.top.6.account`,\n        `${keyPrefix()}.top.7.account`,\n        `${keyPrefix()}.top.8.account`,\n        `${keyPrefix()}.top.9.account`,\n        `${keyPrefix()}.top.10.account`,\n      ];\n      const res = await db.getValues(key);\n      const scoreQ1 = bg(res[0]).eq(0) ? '0': bg(10000).times(bg(res[4]).div(res[0]))\n      const scoreQ2 = bg(res[1]).eq(0) ? '0': bg(20000).times(bg(res[5]).div(res[1]))\n      const scoreQ3 = bg(res[2]).eq(0) ? '0': bg(30000).times(bg(res[6]).div(res[2]))\n      const scoreQ4 = bg(res[3]).eq(0) ? '0': bg(50000).times(bg(res[7]).div(res[3]))\n      const score = bg(scoreQ1).plus(scoreQ2).plus(scoreQ3).plus(scoreQ4);\n      const rewardDERI = bg(1000000).times(bg(score).div(110000)).toString();\n\n      const topUsers = res.slice(8).map((u) => toChecksumAddress(u.slice(0, 42)));\n      let rewardBNB = '0';\n      if (topUsers.includes(accountAddress)) {\n        if (accountAddress === topUsers[0]) {\n          rewardBNB = '200000';\n        } else if (accountAddress === topUsers[1]) {\n          rewardBNB = '100000';\n        } else if (accountAddress === topUsers[2]) {\n          rewardBNB = '50000';\n        } else if (accountAddress === topUsers[3]) {\n          rewardBNB = '35000';\n        } else if (accountAddress === topUsers[4]) {\n          rewardBNB = '25000';\n        } else {\n          rewardBNB = '18000';\n        }\n      }\n      return {\n        userAddr: accountAddress,\n        rewardBNB,\n        rewardDERI,\n      };\n    },\n    args,\n    'getUserStakingReward',\n    { userAddr: '', rewardBNB: '', rewardDERI: '' }\n  );\n};\n\nexport const getUserStakingContribution = async (accountAddress) => {\n  const args = [accountAddress];\n  return catchApiError(\n    async (accountAddress) => {\n      accountAddress = toChecksumAddress(accountAddress);\n      const db = databaseActivityFactory();\n      const key = [\n        `${keyPrefix()}.Q1.cont`,\n        `${keyPrefix()}.Q2.cont`,\n        `${keyPrefix()}.Q3.cont`,\n        `${keyPrefix()}.Q4.cont`,\n        `${keyPrefix()}.${accountAddress}.Q1.cont`,\n        `${keyPrefix()}.${accountAddress}.Q2.cont`,\n        `${keyPrefix()}.${accountAddress}.Q3.cont`,\n        `${keyPrefix()}.${accountAddress}.Q4.cont`,\n      ];\n      const res = await db.getValues(key);\n      const scoreQ1 = bg(res[0]).eq(0) ? '0': bg(10000).times(bg(res[4]).div(res[0]))\n      const scoreQ2 = bg(res[1]).eq(0) ? '0': bg(20000).times(bg(res[5]).div(res[1]))\n      const scoreQ3 = bg(res[2]).eq(0) ? '0': bg(30000).times(bg(res[6]).div(res[2]))\n      const scoreQ4 = bg(res[3]).eq(0) ? '0': bg(50000).times(bg(res[7]).div(res[3]))\n\n      return {\n        userAddr: accountAddress,\n        totalContrib: deriToNatural(\n          bg(res[0]).plus(res[1]).plus(res[2]).plus(res[3])\n        ).toString(),\n        userContrib: deriToNatural(\n          bg(res[4]).plus(res[5]).plus(res[6]).plus(res[7])\n        ).toString(),\n        Q1Contrib: deriToNatural(res[0]).toString(),\n        Q2Contrib: deriToNatural(res[1]).toString(),\n        Q3Contrib: deriToNatural(res[2]).toString(),\n        Q4Contrib: deriToNatural(res[3]).toString(),\n        userQ1Contrib: deriToNatural(res[4]).toString(),\n        userQ2Contrib: deriToNatural(res[5]).toString(),\n        userQ3Contrib: deriToNatural(res[6]).toString(),\n        userQ4Contrib: deriToNatural(res[7]).toString(),\n        userQ1Point: scoreQ1.toString(),\n        userQ2Point: scoreQ2.toString(),\n        userQ3Point: scoreQ3.toString(),\n        userQ4Point: scoreQ4.toString(),\n      };\n    },\n    args,\n    'getUserStakingContribution',\n    { userAddr: '', totalContrib: '', userContrib: '' }\n  );\n};","import { catchApiError, catchTxApiError, DeriEnv, fromWei, hexToNumberString, toChecksumAddress } from \"../../shared\";\nimport { databaseDeriVoteFactory } from \"../../shared/factory/database\";\nimport { getDeriVoteConfig } from \"../config\";\nimport { deriVoteFactory } from \"../contract/factory\";\n\nconst votingId = '2'\nconst keyPrefix = () => (DeriEnv.get() === 'prod' ? `VID${votingId}` : 'VID1');\n\n\nexport const getVotingResult = async() => {\n  return catchApiError(\n    async () => {\n      const db = databaseDeriVoteFactory();\n      const keys = [\n        `${keyPrefix()}.OP1.count`,\n        `${keyPrefix()}.OP2.count`,\n        `${keyPrefix()}.OP3.count`,\n      ];\n      const res = await db.getValues(keys);\n      return res.map((v) => fromWei(hexToNumberString(v)));\n    },\n    [],\n    'getOptionsVotingPowers',\n    ['', '', '']\n  );\n}\n\nexport const getUserVotingPower = async(accountAddress) => {\n  return catchApiError(async() => {\n    accountAddress = toChecksumAddress(accountAddress)\n    const db = databaseDeriVoteFactory()\n    const keys = [\n      `${keyPrefix()}.${accountAddress}.count`,\n    ]\n    const res = await db.getValues(keys)\n    return res.map((v) => fromWei(hexToNumberString(v)))[0]\n  }, [accountAddress], 'getUserVotingPowers', '')\n}\n\n\nexport const getUserVotingResult = async (accountAddress) => {\n  const args = [accountAddress];\n  return catchApiError(\n    async () => {\n      accountAddress = toChecksumAddress(accountAddress);\n      const db = databaseDeriVoteFactory();\n      const keys = [\n        `${keyPrefix()}.${accountAddress}.count`,\n        `${keyPrefix()}.${accountAddress}.option`,\n        `${keyPrefix()}.${accountAddress}.timestamp`,\n      ];\n      const res = await db.getValues(keys);\n      return {\n        votingPower: fromWei(hexToNumberString(res[0])),\n        option: hexToNumberString(res[1]),\n        timestamp: hexToNumberString(res[2]),\n      };\n    },\n    args,\n    'getVoteResult',\n    ''\n  );\n};\n\nexport const vote = async(chainId, accountAddress, votingOption) => {\n  const args = [chainId, accountAddress, votingOption]\n  return catchTxApiError(async() => {\n    chainId = chainId.toString()\n    accountAddress = toChecksumAddress(accountAddress)\n    const config = getDeriVoteConfig(chainId)\n    const deriVote = deriVoteFactory(chainId, config.address)\n    const voteId = await deriVote.votingId()\n    if (voteId !== votingId) {\n      throw new Error(\n        `Deri Vote: votingId is not match (${votingId} !== ${voteId}) `\n      );\n    }\n    return await deriVote.vote(accountAddress, votingOption)\n  }, args)\n}","import {\n  DeriEnv,\n  getPoolConfigList as getPoolV2ConfigList,\n  getPoolV1ConfigList,\n  VERSIONS,\n} from '../shared/config';\nimport { getJsonConfig } from '../shared/config/config';\nimport { ALL_EXCEPT_OPEN_VERSIONS } from '../shared/config/version';\n\nexport const getContractAddressConfig = (env, version) => {\n  env = env || DeriEnv.get()\n  if (version === 'v1') {\n    return getPoolV1ConfigList(env);\n  } else if (VERSIONS.includes(version)) {\n    return getPoolV2ConfigList(version, env);\n  } else if (version === undefined) {\n    return ALL_EXCEPT_OPEN_VERSIONS.reduce((acc, v) => [...acc, ...getPoolV2ConfigList(v, env)], [])\n  } else {\n    throw new Error(`getContractAddressConfig: invalid version: ${version}`);\n  }\n};\n\nexport const getPoolConfigList = (env) => {\n  env = env || DeriEnv.get();\n  return ALL_EXCEPT_OPEN_VERSIONS.reduce((acc, v) => {\n    let res = []\n    const config = getJsonConfig(v, env);\n    if (config && config.pools) {\n      res = config.pools.map((p) => {\n        p.version = v\n        return p\n      })\n    }\n    return [...acc, ...res];\n  }, []);\n};\n","import {\n  getPoolConfig2,\n  getPoolBTokenIdList,\n  getPoolSymbolIdList,\n} from '../../shared/config';\nimport { databaseFactory } from '../../shared/factory';\nimport { bg, deriToNatural, getNetworkName } from '../../shared/utils';\nimport { lTokenFactory, perpetualPoolFactory } from '../factory';\nimport { calculateMaxRemovableLiquidity } from '../calculation';\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  try {\n    const { lToken: lTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const lToken = lTokenFactory(chainId, lTokenAddress);\n\n    const bTokenIdList = getPoolBTokenIdList(poolAddress);\n    const symbolIdList = getPoolSymbolIdList(poolAddress);\n\n    const [parameterInfo, bTokenInfo, lTokenAsset] = await Promise.all([\n      perpetualPool.getParameters(),\n      perpetualPool.getBToken(bTokenId),\n      lToken.getAsset(accountAddress, bTokenId),\n    ]);\n    const { minPoolMarginRatio } = parameterInfo;\n    let promises = [];\n    for (let i = 0; i < bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n    }\n    const bTokens = await Promise.all(promises);\n\n    promises = [];\n    for (let i = 0; i < symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n    }\n    const symbols = await Promise.all(promises);\n\n    const cost = symbols.reduce((accum, s) => {\n      return accum.plus(\n        bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\n      );\n    }, bg(0));\n    const totalPnl = symbols.reduce((accum, s) => {\n      return accum.plus(\n        bg(s.tradersNetVolume)\n          .times(s.price)\n          .times(s.multiplier)\n          .minus(s.tradersNetCost)\n      );\n    }, bg(0));\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\n      if (index === parseInt(bTokenId)) {\n        return accum.plus(b.pnl);\n      } else {\n        return accum.plus(\n          bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\n        );\n      }\n    }, bg(0));\n\n    const { liquidity: poolLiquidity } = bTokenInfo;\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset;\n    const maxRemovableShares = calculateMaxRemovableLiquidity(\n      bTokens[bTokenId],\n      liquidity,\n      cost,\n      totalPnl,\n      restLiquidity,\n      minPoolMarginRatio\n    );\n    const approximatePnl = pnl.plus(\n      bg(bTokens[bTokenId].cumulativePnl)\n        .minus(lastCumulativePnl)\n        .times(liquidity)\n    );\n    return {\n      //totalSupply: lTokenTotalSupply.toString(),\n      poolLiquidity: poolLiquidity.toString(),\n      // shares: liquidity.toString(),\n      // shareValue: '1',\n      // maxRemovableShares: liquidity.toString()\n      shares: liquidity.toString(),\n      pnl: approximatePnl.div(bTokens[bTokenId].price).toString(),\n      maxRemovableShares: maxRemovableShares.toString(),\n    };\n  } catch (err) {\n    console.log(`${err}`);\n  }\n  return {\n    poolLiquidity: '',\n    shares: '',\n    pnl: '',\n    maxRemovableShares: '',\n  };\n};\n\nexport const getPoolLiquidity = async (chainId, poolAddress, bTokenId) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity${bTokenId}`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol: '',\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`);\n  }\n  return {\n    liquidity: '',\n    symbol: '',\n  };\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy${bTokenId}`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n        `${poolNetwork}.${poolAddress}.V2.multiplier${bTokenId}`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h, multiplier] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n        multiplier: deriToNatural(multiplier).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`);\n  }\n};\n","import { bTokenFactory } from '../../shared/factory';\nimport {\n  getPoolBTokenIdList,\n  getPoolBTokenList,\n  getPoolConfig2,\n  getPoolSymbolIdList,\n  getPoolSymbolList,\n} from '../../shared/config';\nimport { bg, min, max } from '../../shared/utils'\nimport { getOraclePrice } from '../../shared/utils/oracle'\nimport { getIndexInfo } from '../../shared/config/token';\nimport { fundingRateCache, liquidatePriceCache, priceCache } from '../../shared/api/api_globals';\nimport {\n  calculateEntryPrice,\n  calculateLiquidationPrice,\n  calculateFundingRate,\n  calculateFundingFee,\n  processFundingRate,\n} from '../calculation';\nimport { perpetualPoolFactory, pTokenFactory } from '../factory';\n\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  try {\n    const {symbol } = getPoolConfig2(poolAddress, undefined, symbolId)\n    const bTokens = getPoolBTokenList(poolAddress)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const bTokenDiscounts = (await Promise.all(\n      bTokens.reduce(\n        (acc, b, index) =>\n          acc.concat([perpetualPool.getBToken(index.toString())]),\n        []\n      )\n    )).map((b) => b.discount);\n    const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo\n    return {\n      symbol: symbol,\n      bTokenSymbol: bTokens.map((b) => b.bTokenSymbol),\n      bTokenMultiplier: bTokenDiscounts.map((b) => b.toString()),\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      //minAddLiquidity: minAddLiquidity.toString(),\n      //redemptionFeeRatio: redemptionFeeRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n      indexConstituents: getIndexInfo(symbol)\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    symbol: '',\n    bTokenSymbol: [],\n    bTokenMultiplier: [],\n    multiplier: '',\n    feeRatio: '',\n    fundingRateCoefficient: '',\n    minPoolMarginRatio: '',\n    minInitialMarginRatio: '',\n    minMaintenanceMarginRatio: '',\n    minLiquidationReward: '',\n    maxLiquidationReward: '',\n    liquidationCutRatio: '',\n    protocolFeeCollectRatio: '',\n    indexConstituents: { url: '', tokens: [] },\n  };\n};\n\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\n  try {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    //console.log('bTokenList', bTokenList)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [symbolInfo, parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margins, positions, latestPrice] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n      pToken.getPosition(accountAddress, symbolId),\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)])\n    ])\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\n    const {\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n    } = parameterInfo\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    promises = []\n    for (let i=0; i<symbolList.length; i++) {\n      promises.push(getOraclePrice(chainId, symbolList[i]))\n    }\n    const symbolPrices = await Promise.all(promises)\n    const price = symbolPrices[symbolId]\n    priceCache.set(poolAddress, symbolId, price)\n    const marginHeld = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n    }, bg(0))\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[symbolId]).times(minInitialMarginRatio)\n    //console.log('margin', margin.toString(), marginHeld.toString())\n    //\n    //const unrealizedPnl = bg(positions[symbolId].volume).times(price).times(multiplier).minus(positions[symbolId].cost)\n    const unrealizedPnl = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    const unrealizedPnlList = symbols.map((s, index) => {\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n    })\n\n    const totalCost = positions.reduce((accum, a) => {\n      return accum.plus(bg(a.cost))\n    }, bg(0))\n    const dynamicCost = symbols.reduce((accum, s, index) => {\n      if (index !== parseInt(symbolId)) {\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\n      } else {\n        return accum\n      }\n    }, bg(0))\n    //console.log('cost', costTotal.toString())\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      latestPrice,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n\n    // set liquidatePrice cache\n    liquidatePriceCache.set(poolAddress, {\n      volume,\n      margin,\n      totalCost,\n      dynamicCost,\n      price,\n      multiplier,\n      minMaintenanceMarginRatio,\n    });\n  return {\n      price: price,\n      volume: bg(volume).times(multiplier).toString(),\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n      margin: margin.toString(),\n      marginHeld: marginHeld.toString(),\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\n      unrealizedPnl: unrealizedPnl.toString(),\n      unrealizedPnlList,\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n      fundingFee: fundingFee.toString()\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    volume: '',\n    averageEntryPrice: '',\n    margin: '',\n    marginHeld: '',\n    unrealizedPnl: '',\n    liquidationPrice: '',\n  };\n}\n\nexport const getPositionInfos = async (chainId, poolAddress, accountAddress) => {\n  try {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    //console.log('bTokenList', bTokenList)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, '0')\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, margins, positions] = await Promise.all([\n      //perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n      //pToken.getPosition(accountAddress, symbolId),\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      //getOraclePrice(chainId, symbolList[parseInt(symbolId)])\n    ])\n    const {\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n    } = parameterInfo\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    promises = []\n    for (let i=0; i<symbolList.length; i++) {\n      promises.push(getOraclePrice(chainId, symbolList[i]))\n    }\n    const symbolPrices = await Promise.all(promises)\n\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n\n    const marginHeld = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n    }, bg(0))\n    //\n    // const unrealizedPnlList = symbols.map((s, index) => {\n    //   return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n    // })\n\n    //console.log('cost', costTotal.toString())\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n\n    return positions.map((p, index) => {\n      const symbol = symbols[index]\n      const symbolId = symbolIdList[index]\n      const price = symbolPrices[index]\n      priceCache.set(poolAddress, symbolId, price)\n      const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbol\n      const { volume, cost, lastCumulativeFundingRate } = p\n      const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[index]).times(minInitialMarginRatio)\n      const unrealizedPnl = bg(symbolPrices[index]).times(symbol.multiplier).times(p.volume).minus(p.cost)\n      const totalCost = positions.reduce((accum, a) => {\n        return accum.plus(bg(a.cost))\n      }, bg(0))\n      const dynamicCost = symbols.reduce((accum, s, idx) => {\n        if (idx !== index) {\n          return accum.plus(bg(positions[idx].volume).times(symbolPrices[idx]).times(s.multiplier))\n        } else {\n          return accum\n        }\n      }, bg(0))\n      const fundingFee = calculateFundingFee(\n        tradersNetVolume,\n        price,\n        multiplier,\n        fundingRateCoefficient,\n        liquidity,\n        cumulativeFundingRate,\n        lastCumulativeFundingRate,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        volume,\n      );\n      return {\n        symbol: symbol.symbol,\n        symbolId: index.toString(),\n        price: symbolPrices[index],\n        volume: bg(p.volume).times(multiplier).toString(),\n        averageEntryPrice: calculateEntryPrice(p.volume, cost, multiplier).toString(),\n        margin: margin.toString(),\n        marginHeld: marginHeld.toString(),\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\n        //unrealizedPnlList,\n        unrealizedPnl: unrealizedPnl.toString(),\n        liquidationPrice: calculateLiquidationPrice(\n          volume,\n          margin,\n          totalCost,\n          dynamicCost,\n          multiplier,\n          minMaintenanceMarginRatio\n        ).toString(),\n        fundingFee: fundingFee.toString()\n      };\n    }).filter((p) => p.volume !== '0')\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return []\n}\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  try {\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\n    return balance.toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return '';\n}\n\nexport const getEstimatedLiquidatePrice = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId,\n) => {\n  try {\n    let {\n      volume,\n      margin,\n      totalCost,\n      dynamicCost,\n      price,\n      multiplier,\n      minMaintenanceMarginRatio,\n    } = liquidatePriceCache.get(poolAddress);\n    totalCost = bg(totalCost).plus(bg(newVolume).times(price).times(multiplier))\n    //console.log(totalCost.toString())\n    return calculateLiquidationPrice(\n      bg(volume).plus(newVolume),\n      margin,\n      totalCost,\n      dynamicCost,\n      multiplier,\n      minMaintenanceMarginRatio\n    ).toString();\n  } catch (err) {\n    console.log(`${err}`);\n  }\n  return '';\n};\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => {\n  try {\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.isUnlocked(accountAddress, poolAddress)\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return false\n}\n\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\n  try {\n    let price = priceCache.get(poolAddress, symbolId)\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n    if (!price) {\n      //price = await getOraclePrice(poolAddress, symbolId)\n      price = await getOraclePrice(chainId, symbol)\n      priceCache.set(poolAddress, symbolId, price)\n    }\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!cache || !cache.multiplier) {\n      await _getFundingRate(chainId, poolAddress, symbolId)\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    }\n    const { multiplier, feeRatio } = cache;\n    //console.log(volume, price, multiplier, feeRatio)\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return ''\n}\n\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  try {\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const [price, symbolInfo ] = await Promise.all([\n      //getOraclePrice(poolAddress, symbolId),\n      getOraclePrice(chainId, symbol),\n      perpetualPool.getSymbol(symbolId),\n    ])\n    priceCache.set(poolAddress, symbolId, price)\n    const {multiplier} = symbolInfo\n    //console.log('m',multiplier.toString())\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return ''\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n  const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n  let bTokenIdList = getPoolBTokenIdList(poolAddress)\n  let promiseList = []\n  for (let i=0; i<bTokenIdList.length; i++) {\n    promiseList.push(perpetualPool.getBToken(i))\n  }\n  const bTokenInfoList = await Promise.all(promiseList)\n  const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n  //const pnl = bTokenInfoList.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n  //console.log('pnl', pnl.toString())\n\n  const [price, symbolInfo, parameterInfo ] = await Promise.all([\n    //getOraclePrice(poolAddress, symbolId),\n    getOraclePrice(chainId, symbol),\n    perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n  ])\n  priceCache.set(poolAddress, symbolId, price)\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\n  const { minPoolMarginRatio } = parameterInfo;\n  const fundingRateArgs = [\n    tradersNetVolume,\n    price,\n    multiplier,\n    liquidity,\n    fundingRateCoefficient,\n  ]\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\n  // const liquidityUsedArgs = [\n  //   tradersNetVolume,\n  //   price,\n  //   multiplier,\n  //   liquidity,\n  //   minPoolMarginRatio,\n  // ]\n  let symbolIdList = getPoolSymbolIdList(poolAddress)\n  let promises = []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  const symbols = await Promise.all(promises)\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\n  }, bg(0))\n\n  //const liquidityUsed = liquidityUsedInAmount.div(liquidity)\n  const res = {\n    price,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    tradersNetVolume: tradersNetVolume.toString(),\n    liquidity: liquidity.toString(),\n    //pnl: pnl.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    fundingRatePerBlock: fundingRatePerBlock,\n    fundingRate: fundingRate,\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\n  }\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\n  return res\n}\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  try {\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\n    const { fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume, multiplier } = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString()\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    fundingRate0: '',\n    fundingRatePerBlock: '',\n    liquidity: '',\n    volume: '',\n    tradersNetVolume: '',\n  };\n}\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    const args = [\n      bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ]\n    let fundingRate1 = calculateFundingRate(...args)\n    fundingRate1 = processFundingRate(chainId, fundingRate1)\n    return {\n      fundingRate1: fundingRate1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    fundingRate1: '',\n  }\n}\n\nexport const getLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    return {\n      liquidityUsed0: res.liquidityUsed.times(100).toString(),\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidityUsed0: '',\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    // const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    // const pToken = pTokenFactory(chainId, pTokenAddress);\n    // const { volume } = pToken.getPosition(accountAddress, symbolId);\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\n    let promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    let liquidityUsed0 = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume.plus(newNetVolume)).abs())\n      } else {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume).abs())\n      }\n    }, bg(0))\n    //liquidityUsed0 = liquidityUsed0.times(res.minPoolMarginRatio)\n    //const liquidityUsed = bg(newNetVolume).times(res.price).times(res.multiplier).times(res.minPoolMarginRatio).div(res.liquidity)\n    const liquidityUsed1 = liquidityUsed0.times(res.minPoolMarginRatio).div(res.liquidity)\n    return {\n      liquidityUsed1: liquidityUsed1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidityUsed1: '',\n  }\n}\n\n\nexport const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId) => {\n  try {\n    let bTokenList = getPoolBTokenList(poolAddress)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    // let bTokenList = bTokensConfigList.map((i) => {\n    //   return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\n    // })\n    let promiseList = []\n    for (let i=0; i<bTokenList.length; i++) {\n      promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress).balanceOf(accountAddress))\n    }\n    const resultList = await Promise.all(promiseList)\n    for (let i=0; i<bTokenList.length; i++) {\n      bTokenList[i].walletBalance = resultList[i].toString()\n    }\n\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\n    const [margins, positions, parameterInfo] = await Promise.all([\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      perpetualPool.getParameters(),\n    ]);\n    const { minInitialMarginRatio } = parameterInfo;\n\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n    //console.log('margin', margin.toString())\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n\n    promises = []\n    const symbolList = symbols.map((s) => s.symbol)\n    for (let i=0; i< symbols.length; i++) {\n      promises.push(getOraclePrice(chainId, symbolList[i]))\n    }\n    const symbolPrices = await Promise.all(promises)\n    //console.log(symbolPrices)\n\n    const marginHeld = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(a.multiplier).times(positions[index].volume).abs().times(minInitialMarginRatio))\n    }, bg(0))\n    //console.log('marginHeld', marginHeld.toString())\n\n    const pnl = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    //console.log('pnl', pnl.toString())\n\n    bTokenList = bTokenList.map((i, index) => {\n      if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\n        i.availableBalance = max(min(margin.minus(marginHeld).plus(pnl).div(bTokens[index].price).div(bTokens[index].discount), margins[index]), bg(0)).toString()\n      } else {\n        i.availableBalance = '-'\n      }\n      return i\n    })\n    return bTokenList\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return []\n}\n\nexport const getFundingFee = async(chainId, poolAddress, accountAddress, symbolId) => {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [symbolInfo, positionInfo, price, lastUpdatedBlockNumber, latestBlockNumber] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      pToken.getPosition(accountAddress, symbolId),\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)]),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n    ])\n    const { volume, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate, } = symbolInfo;\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      price,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n  return fundingFee.toString()\n}\n","import {\n  getPoolConfig2,\n  getPoolSymbolIdList,\n  getPoolBTokenIdList,\n} from '../../shared/config';\nimport { bg } from '../../shared/utils';\nimport { getPriceInfo } from '../../shared/utils/oracle';\nimport { bTokenFactory } from '../../shared/factory';\nimport { isOrderValid } from '../calculation';\nimport {\n  perpetualPoolRouterFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\n\nexport const unlock = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const tx = await perpetualPoolRouter.addMargin(\n      accountAddress,\n      bTokenId,\n      amount\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const tx = await perpetualPoolRouter.removeMargin(\n      accountAddress,\n      bTokenId,\n      amount,\n      isMaximum\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  const [parameterInfo, positions] = await Promise.all([\n    //  getOraclePrice(poolAddress, symbolId),\n    //  perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n    pToken.getPositions(accountAddress),\n    //pToken.getMargin(accountAddress, symbolId),\n  ]);\n\n  //const { multiplier } = symbolInfo;\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  const margins = await pToken.getMargins(accountAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const margin = bTokens.reduce((accum, i, index) => {\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\n  }, bg(0));\n\n  const liquidity = bTokens.reduce(\n    (accum, i) =>\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\n    bg(0)\n  );\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\n  promises = [];\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  let marginHeld = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.price)\n          .times(a.multiplier)\n          .times(positions[index].volume.plus(newVolume))\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\n      );\n    }\n  }, bg(0));\n  marginHeld = marginHeld.times(minInitialMarginRatio);\n\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.tradersNetVolume)\n          .plus(newVolume)\n          .times(a.price)\n          .times(a.multiplier)\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\n      );\n    }\n  }, bg(0));\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n  //console.log('liquidityUsed', liquidityUsed.toString())\n\n  const orderValidation = isOrderValid(\n    //price,\n    margin,\n    marginHeld,\n    liquidity,\n    liquidityUsed\n    //multiplier,\n    //minPoolMarginRatio,\n    //bg(newVolume),\n  );\n  let res;\n  if (orderValidation.success) {\n    try {\n      const tx = await perpetualPoolRouter.trade(\n        accountAddress,\n        symbolId,\n        newVolume\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.error };\n  }\n  return res;\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\n  const newVolume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const tx = await perpetualPoolRouter.trade(\n        accountAddress,\n        symbolId,\n        newVolume\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n\nexport const depositMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const promises = symbolIdList.map(async (s) => {\n      return await getPriceInfo(s);\n    });\n    const prices = await Promise.all(promises);\n    const priceInfos = prices.map((p, index) => {\n      return [\n        symbolIdList[index],\n        p.timestamp,\n        p.price,\n        parseInt(p.v).toString(),\n        p.r,\n        p.s,\n      ];\n    });\n    const tx = await perpetualPoolRouter.addMarginWithPrices(\n      accountAddress,\n      bTokenId,\n      amount,\n      priceInfos\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const withdrawMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const promises = symbolIdList.map(async (s) => {\n      return await getPriceInfo(s);\n    });\n    const prices = await Promise.all(promises);\n    const priceInfos = prices.map((p, index) => {\n      return [\n        symbolIdList[index],\n        p.timestamp,\n        p.price,\n        parseInt(p.v).toString(),\n        p.r,\n        p.s,\n      ];\n    });\n    const tx = await perpetualPoolRouter.removeMarginWithPrices(\n      accountAddress,\n      bTokenId,\n      amount,\n      priceInfos,\n      isMaximum\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const tradeWithMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  //const [price, symbolInfo, parameterInfo, positions] = await Promise.all([\n  const [parameterInfo, positions] = await Promise.all([\n    //  getOraclePrice(poolAddress, symbolId),\n    //  perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n    pToken.getPositions(accountAddress),\n    //pToken.getMargin(accountAddress, symbolId),\n  ]);\n\n  //const { multiplier } = symbolInfo;\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  const margins = await pToken.getMargins(accountAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const margin = bTokens.reduce((accum, i, index) => {\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\n  }, bg(0));\n\n  const liquidity = bTokens.reduce(\n    (accum, i) =>\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\n    bg(0)\n  );\n  //console.log('liquidity', liquidity.toString())\n  promises = [];\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  let marginHeld = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.price)\n          .times(a.multiplier)\n          .times(positions[index].volume.plus(newVolume))\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\n      );\n    }\n  }, bg(0));\n  marginHeld = marginHeld.times(minInitialMarginRatio);\n\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.tradersNetVolume.plus(newVolume))\n          .times(a.price)\n          .times(a.multiplier)\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\n      );\n    }\n  }, bg(0));\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n  //console.log('liquidityUsed', liquidityUsed.toString())\n\n  // const pnl = bTokens.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n  // console.log('pnl', pnl.toString())\n\n  const orderValidation = isOrderValid(\n    //price,\n    margin,\n    marginHeld,\n    liquidity,\n    liquidityUsed\n    //multiplier,\n    //minPoolMarginRatio,\n    //bg(newVolume),\n  );\n  let res;\n  if (orderValidation.success) {\n    try {\n      promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.tradeWithPrices(\n        accountAddress,\n        symbolId,\n        newVolume,\n        priceInfos\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.error };\n  }\n  return res;\n};\n\nexport const closePositionWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\n  const newVolume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.tradeWithPrices(\n        accountAddress,\n        symbolId,\n        newVolume,\n        priceInfos\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n","import { bg, deriToNatural, getHttpBase, fetchJson } from '../../shared/utils';\nimport {\n  getPoolConfig2,\n  getPoolSymbolIdList,\n} from '../../shared/config';\nimport { perpetualPoolFactory } from '../factory';\n\nconst processTradeEvent = async (\n  perpetualPool,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio,\n  symbols,\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const symbol = symbols.find((s) => s.symbolId == info.symbolId)\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier[parseInt(symbolId)],\n    feeRatio[parseInt(symbolId)]\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    //baseToken: bTokenSymbol,\n    symbolId,\n    symbol: symbol && symbol.symbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: bg(volume).times(multiplier[parseInt(symbolId)]).toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\n\n  const filters = { owner: accountAddress };\n  let events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      perpetualPool,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      symbols,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\n    //console.log(symbolIdList)\n\n    let promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    //console.log(symbols)\n\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => !(i.direction === 'LIQUIDATION' && i.symbolId === '0'))\n        .map((i) => {\n          const index = parseInt(i.symbolId)\n          if (i.direction !== 'LIQUIDATION') {\n            return {\n              direction: i.direction.trim(),\n              //baseToken: i.baseToken.trim(),\n              symbolId: i.symbolId,\n              symbol: i.symbol,\n              price: deriToNatural(i.price).toString(),\n              notional: deriToNatural(i.notional).toString(),\n              volume: deriToNatural(i.volume).times(symbols[index].multiplier).toString(),\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else {\n            if (i.volume !== '' && i.volume.indexOf(',') > -1 && !i.price.startsWith('NaN')) {\n              const ids = i.volume.split(',').reduce((acc, v, index) => {\n                if (v !== '0') {\n                  return acc.concat([index]);\n                } else {\n                  return acc\n                }\n              }, []);\n            const prices = i.price.split(',').map((s)=> deriToNatural(s))\n            const volumes= i.volume.split(',').map((v)=> deriToNatural(v))\n            const res = ids.map((id) => {\n              return {\n                direction: i.direction.trim(),\n                symbolId: id.toString(),\n                symbol: symbols[id].symbol,\n                volume: volumes[id].times(symbols[id].multiplier).abs().toString(),\n                price: prices[id].toString(),\n                notional: volumes[id].abs().times(prices[id]).times(symbols[id].multiplier).toString(),\n                transactionFee: '0',\n                transactionHash: i.transactionHash,\n                time: i.time.toString(),\n              };\n            })\n            return res\n            } else {\n              return {\n                direction: i.direction.trim(),\n                symbolId: '',\n                symbol: '',\n                volume: '',\n                price: '',\n                notional: '',\n                transactionFee: '0',\n                transactionHash: i.transactionHash,\n                time: i.time.toString(),\n              }\n            }\n          }\n        }).flat();\n    }\n      //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n\n      const {initialBlock} = getPoolConfig2(poolAddress)\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","//import { getOracleServerUrl } from \"../shared/utils/index.js\";\n\nexport const isProdChain = (chainId) => {\n  return [\"1\", \"56\", \"128\", \"137\"].includes(chainId.toString());\n};\n\nexport const PRESERVED_SYMBOLS = [\"BTCUSD\", \"ETHUSD\", \"BNBUSD\"];\n\nexport const getOracleServerUrl = (chainId, symbol, type = \"futures\") => {\n  //if (/^[0-9]+$/.test(symbolId.toString())) {\n  let method = \"get_signed_price\";\n  if (type === \"option\") {\n    method = \"get_signed_volatility\";\n  }\n  if (PRESERVED_SYMBOLS.includes(symbol)) {\n    method = \"get_price\";\n    symbol = `${symbol}_v2_bsc`;\n  }\n  let baseUrl = isProdChain(chainId)\n    ? `https://oracle4.deri.finance/${method}`\n    : `https://oracle2.deri.finance/${method}`;\n  const addSymbolParam = (url, symbol) => `${url}?symbol=${symbol}`;\n\n  if (symbol) {\n    return addSymbolParam(baseUrl, symbol);\n  } else {\n    return baseUrl;\n  }\n};\n\nexport const getPriceInfos = async (chainId, symbolList) => {\n  let url = getOracleServerUrl(chainId);\n  let retry = 3;\n  //console.log('url', url)\n  let res, priceInfo;\n  while (retry > 0) {\n    res = await fetch(url, {\n      mode: \"cors\",\n      cache: \"no-cache\",\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(symbolList),\n    });\n    if (res.ok) {\n      priceInfo = await res.json();\n      if (priceInfo.status.toString() === \"200\" && priceInfo.data) {\n        return priceInfo.data;\n      }\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(\n      `!! getPriceInfos exceed max retry(3): ${symbolList} ${JSON.stringify(\n        priceInfo\n      )}`\n    );\n  }\n};\n","import { bg } from \"../shared\";\n\nexport const calculateK = (indexPrice, liquidity, alpha) => {\n  return bg(indexPrice).times(alpha).div(liquidity);\n};\nexport const calculateDpmmPrice = (\n  indexPrice,\n  K,\n  tradersNetVolume,\n  multiplier\n) => {\n  return bg(indexPrice).times(\n    bg(1).plus(bg(K).times(tradersNetVolume).times(multiplier))\n  );\n};\nexport const calculateDpmmCost = (\n  indexPrice,\n  K,\n  tradersNetVolume,\n  multiplier,\n  tradeVolume\n) => {\n  return bg(indexPrice).times(\n    bg(multiplier)\n      .times(tradersNetVolume)\n      .plus(bg(multiplier).times(tradeVolume))\n      .pow(2)\n      .minus(bg(multiplier).times(tradersNetVolume).pow(2))\n      .times(K)\n      .div(2)\n      .plus(bg(tradeVolume).times(multiplier))\n  );\n};","// this file is generated by script, don't modify it !!!\nimport { ERC20Factory, offChainOracleFactory} from \"../../shared/contract/factory.js\";\nimport {\n  toWei,\n  getLiquidity,\n  getProtocolFeeAccrued,\n  getLastTimestamp,\n  bg,\n  processResult,\n  deriToNatural,\n  getBlockInfo,\n} from \"../../shared/utils/index.js\";\nimport { normalizeSymbolUnit, SECONDS_IN_A_DAY } from \"../../shared/config\";\nimport {  getOraclePriceFromCache2 } from '../../shared/utils/oracle'\nimport { getPriceInfos } from \"../utils.js\";\nimport { lTokenLiteFactory, pTokenLiteFactory } from \"./factory.js\";\nimport { calculateK, calculateDpmmPrice, calculateDpmmCost } from \"../calc\";\n\n\n// klass = addInstanceMethods(klass, [])\nconst addMethods = (klass, fns = []) => {\n  if (fns.length > 0) {\n    for (let i = 0; i < fns.length; i++) {\n      klass = fns[i](klass);\n    }\n    return klass;\n  } else {\n    return klass;\n  }\n};\nconst overrideMethods = (klass, fns = []) => {\n  if (fns.length > 0) {\n    for (let i = 0; i < fns.length; i++) {\n      const fn = fns[i][0]\n      const args = fns[i].slice(1)\n      // console.log(fn, args)\n      klass = fn(klass)(...args);\n    }\n    return klass;\n  } else {\n    return klass;\n  }\n};\n\nconst checkOffChainOracleSymbol = async (chainId, oracleAddress, symbol) => {\n  try {\n    await offChainOracleFactory(chainId, oracleAddress).signer()\n    return symbol\n  } catch (err) {\n  }\n  try {\n    await offChainOracleFactory(chainId, oracleAddress).signatory()\n    return symbol\n  } catch (err) {\n  }\n  return ''\n};\n\nconst processMethod = (klass) => (methodName, propList = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const res = await originMethod.apply(this, args);\n    return processResult(res, propList);\n  };\n  return klass;\n};\n\nconst processTxMethod = (klass) => (methodName, toWeiArgPositions = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const prices = await this._getSymbolPrices()\n    // console.log('prices', prices)\n    let newArgs = args.map((arg, index) =>\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\n    );\n    newArgs.push(prices)\n    return await originMethod.apply(this, newArgs);\n  };\n  return klass;\n};\n\nconst init = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype['init'] = async function (isEstimatedApi = false) {\n    await this._init();\n    if (!this.addresses || !this.activeSymbolIds) {\n      [this.addresses, this.parameters, this.state, this.fundingPeriod] = await Promise.all([\n        this.getAddresses(),\n        this.getParameters(),\n        this.getPoolStateValues(),\n        this.getFundingPeriod(),\n      ]);\n      this.fundingPeriod = parseInt(this.fundingPeriod);\n      // console.log(this.addresses, this.parameters)\n      const { bTokenAddress, lTokenAddress, pTokenAddress } = this.addresses;\n      this.bToken = ERC20Factory(this.chainId, bTokenAddress);\n      this.pToken = pTokenLiteFactory(this.chainId, pTokenAddress);\n      this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\n\n      // init tokens\n      [this.bTokenSymbol ] = await Promise.all([\n        this.bToken.symbol(),\n      ]);\n      this.symbols = []\n      this.positions = []\n\n    }\n    // update symbols\n    // estimated for estimated* api use to disable async call\n    if (!isEstimatedApi) {\n      const symbolIds = await this.pToken.getActiveSymbolIds();\n      if (\n        !this.activeSymbolIds ||\n        this.activeSymbolIds.toString() !== symbolIds.toString()\n      ) {\n        this.poolLiquidity = await this.getPoolLiquidity();\n        this.activeSymbolIds = symbolIds;\n        this.symbols = await Promise.all(\n          this.activeSymbolIds.reduce(\n            (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n            []\n          )\n        );\n        this.activeSymbolNames = this.symbols.map((s) => s.symbol);\n        this.offChainOracleSymbolNames = await Promise.all(\n          this.symbols\n            .map((s) => s.oracleAddress)\n            .reduce(\n              (acc, o, index) => [\n                ...acc,\n                checkOffChainOracleSymbol(\n                  this.chainId,\n                  o,\n                  this.symbols[index].symbol\n                ),\n              ],\n              []\n            )\n        );\n        this.offChainOracleSymbolIds = this.activeSymbolIds.reduce(\n          (acc, i, index) => {\n            return this.offChainOracleSymbolNames[index] === ''\n              ? acc\n              : [...acc, i];\n          },\n          []\n        );\n        this.offChainOracleSymbolNames = this.offChainOracleSymbolNames.filter(\n          (s) => s && s !== ''\n        );\n        console.log(\n          `${this.contractAddress} offchain`,\n          this.offChainOracleSymbolNames\n        );\n      }\n    }\n  };\n  return klass;\n};\n\n// this.addresses\n// this.parameters\n\nconst getConfig = (klass) => {\n  klass.prototype[\"getConfig\"] = async function () {\n    return {\n      pool: this.contractAddress,\n      pToken: this.addresses.pTokenAddress,\n      lToken: this.addresses.lTokenAddress,\n      bToken: this.addresses.bTokenAddress,\n      bTokenSymbol: this.bTokenSymbol,\n      symbols: this.symbols.map((s, index) => ({\n        symbolId: this.activeSymbolIds[index],\n        symbol: s.symbol,\n        unit: normalizeSymbolUnit(s.symbol),\n      })),\n      initialBlock: this.initialBlock,\n      type: \"perpetual\",\n      version: \"v2_lite\",\n      versionId: \"v2_lite_dpmm\",\n      chainId: this.chainId,\n    };\n  };\n  return klass;\n};\n\n// getStateValues\nconst getStateValues = (klass) => {\n  klass.prototype[\"getStateValues\"] = async function () {\n    const res = await this.getPoolStateValues()\n    // update\n    this.state = { ...this.state, ...res}\n    return this.state\n  }\n  return klass\n}\n\n// getSymbol()\nconst getSymbols = (klass) => {\n  klass.prototype[\"getSymbols\"] = async function (symbolId) {\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\n    const symbols = await Promise.all(\n      symbolIds.reduce(\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n        []\n      )\n    );\n\n    const indexPrices = await Promise.all(\n      symbols.map((s) => {\n        const oracleAddress = this.offChainOracleSymbolIds.includes(s.symbolId) ? '' : s.oracleAddress\n        return getOraclePriceFromCache2.get(this.chainId, s.symbol, oracleAddress)\n      })\n    )\n    symbols.forEach((s, index) => {\n      s.indexPrice = indexPrices[index]\n      s.K = calculateK(\n        s.indexPrice,\n        this.state.liquidity,\n        s.alpha\n      ).toString();\n      //console.log(s.K, s.indexPrice, s.tradersNetVolume, s.multiplier)\n      s.dpmmPrice = calculateDpmmPrice(\n        s.indexPrice,\n        s.K,\n        s.tradersNetVolume,\n        s.multiplier\n      ).toString();\n      s.fundingPerSecond = bg(s.dpmmPrice).minus(s.indexPrice).times(s.multiplier).div(this.fundingPeriod).toString()\n      //s.fundingPerSecond = bg(s.dpmmPrice).minus(s.indexPrice).div(this.fundingPeriod).toString()\n      s.funding = bg(s.fundingPerSecond).times(SECONDS_IN_A_DAY).toString()\n    });\n\n    // update\n    if (symbolId) {\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\n      if (symbolIndex > -1) {\n        this.symbols[symbolIndex] = symbols[0]\n      }\n    } else {\n      this.symbols = symbols\n    }\n    \n    return symbols\n  };\n  return klass\n};\n\n// get traders positions\nconst getPositions = (klass) => {\n  klass.prototype[\"getPositions\"] = async function (account, symbolId) {\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\n    const positions = await Promise.all(\n      symbolIds.reduce(\n        (acc, symbolId) => [...acc, this.pToken.getPosition(account,symbolId)],\n        []\n      )\n    );\n    await this.getLastTimestamp()\n\n    const timeDiff = bg(Math.floor(Date.now() / 1000)).minus(\n      this.state.lastTimestamp\n    );\n    positions.forEach((p, index) => {\n      const symbol = this.symbols[index];\n      p.fundingAccrued = bg(p.volume)\n        .times(\n          bg(symbol.cumulativeFundingRate)\n            .plus(bg(timeDiff).times(this.symbols[index].fundingPerSecond))\n            .minus(p.lastCumulativeFundingRate)\n        )\n        .toString();\n      p.traderPnl = calculateDpmmCost(\n        symbol.indexPrice,\n        symbol.K,\n        symbol.tradersNetVolume,\n        symbol.multiplier,\n        bg(p.volume).negated().toString()\n      )\n        .negated()\n        .minus(p.cost).toString();\n\n      p.notional = bg(p.volume).abs().times(symbol.indexPrice).times(symbol.multiplier).toString()\n    });\n\n    // update\n    if (symbolId) {\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\n      if (symbolIndex > -1) {\n        this.positions[symbolIndex] = positions[0]\n      }\n    } else {\n      this.positions = positions\n    }\n\n    return positions\n  };\n  return klass\n};\n\n// check is updated\nconst isSymbolsUpdated = (klass) => {\n  klass.prototype['isSymbolsUpdated'] = function() {\n    return Array.isArray(this.symbols) && this.symbols.length > 0 && this.symbols[0].K != null\n  }\n  return klass\n}\nconst isPositionsUpdated = (klass) => {\n  klass.prototype['isPositionsUpdated'] = function() {\n    return Array.isArray(this.positions) && this.positions.length > 0 && this.positions[0].volume != null\n  }\n  return klass\n}\n\nconst getTraderLiquidity = (klass) => {\n  klass.prototype[\"getTraderLiquidity\"] = async function(account) {\n    return await this.lToken.balanceOf(account)\n  }\n  return klass\n}\n\n\nconst getDynamicEquity = (klass) => {\n  klass.prototype['getDynamicEquity'] = async function() {\n    if (!this.isSymbolsUpdated) {\n      await this.getSymbols()\n    }\n    //console.log(this.symbols)\n    const res = bg(this.state.liquidity)\n      .plus(\n        this.symbols.reduce(\n          (acc, s) =>\n            acc\n              .plus(s.tradersNetCost)\n              .minus(\n                bg(s.tradersNetVolume).times(s.dpmmPrice).times(s.multiplier)\n              ),\n          bg(0)\n        )\n      )\n      .toString();\n    this.state.dynamicEquity = res\n    return res\n  }\n  return klass\n}\n\nconst getPoolRequiredMargin = (klass) => {\n  klass.prototype['getPoolRequiredMargin'] = async function () {\n    if (!this.isSymbolsUpdated) {\n      await this.getSymbols()\n    }\n    const { poolMarginRatio } = this.parameters;\n    return this.symbols\n      .reduce(\n        (acc, s) =>\n          acc.plus(\n            bg(s.tradersNetVolume).times(s.indexPrice).times(s.multiplier).abs()\n          ),\n        bg(0)\n      )\n      .times(poolMarginRatio).toString()\n  };\n  return klass\n}\n\nconst getTraderMarginStatus = (klass) => {\n  klass.prototype['getTraderMarginStatus'] = async function (account) {\n    if (!this.isSymbolsUpdated) {\n      await this.getSymbols()\n    }\n    if (!this.isPositionsUpdated) {\n      await this.getPositions(account)\n    }\n    if (!this.margin) {\n      this.margin = await this.pToken.getMargin(account)\n    }\n    // console.log(this.positions)\n    // console.log(this.symbols)\n    const { initialMarginRatio } = this.parameters;\n    let dynamicMargin = bg(this.margin), requiredInitialMargin = bg(0)\n    for (let i = 0; i < this.activeSymbolIds.length; i++) {\n      const s = this.symbols[i];\n      const p = this.positions[i];\n      dynamicMargin = dynamicMargin.plus(\n        bg(p.volume).times(s.dpmmPrice).times(s.multiplier).minus(p.cost)\n      );\n      requiredInitialMargin = requiredInitialMargin.plus(\n        bg(p.volume)\n          .times(s.indexPrice)\n          .times(s.multiplier)\n          .abs()\n          .times(initialMarginRatio)\n      );\n    }\n    return [dynamicMargin.toString(), requiredInitialMargin.toString()];\n  };\n  return klass\n}\n\nconst formatTradeEvent = (klass) => {\n  klass.prototype['formatTradeEvent'] = async function (event) {\n    const info = event.returnValues;\n    const tradeVolume = deriToNatural(info.tradeVolume);\n    const block = await getBlockInfo(this.chainId, event.blockNumber);\n    const symbolId = info.symbolId;\n    const index = this.activeSymbolIds.indexOf(symbolId);\n    if (index > -1) {\n      const symbol = this.symbols[index];\n      const tradeFee = info.tradeFee;\n\n      const direction =\n        tradeFee !== '-1'\n          ? bg(tradeVolume).gt(0)\n            ? 'LONG'\n            : 'SHORT'\n          : 'LIQUIDATION';\n      const price = bg(info.tradeCost)\n        .div(info.tradeVolume)\n        .div(symbol.multiplier)\n        .toString();\n      const notional = bg(tradeVolume)\n        .abs()\n        .times(price)\n        .times(symbol.multiplier)\n        .toString();\n\n      const res = {\n        symbolId: info.symbolId,\n        symbol: symbol.symbol,\n        trader: info.trader,\n        direction,\n        volume: bg(tradeVolume).abs().toString(),\n        price: price,\n        indexPrice: deriToNatural(info.indexPrice).toString(),\n        notional: notional,\n        transactionFee:\n          tradeFee === '-1' ? '0' : deriToNatural(tradeFee).toString(),\n        transactionHash: event.transactionHash,\n        time: block.timestamp * 1000,\n        extra: {},\n      };\n      return res;\n    } else {\n      return null;\n    }\n  };\n  return klass\n};\n\nconst _getSymbolPrices = (klass) => {\n  klass.prototype[\"_getSymbolPrices\"] = async function () {\n    await this.init()\n    let prices = []\n    if (this.offChainOracleSymbolIds.length > 0) {\n        const priceInfos = await getPriceInfos(this.chainId, this.offChainOracleSymbols);\n        prices = Object.values(priceInfos).reduce((acc, p, index) => {\n        acc.push([\n            this.offChainOracleSymbolIds[\n            this.offChainOracleSymbols.indexOf(Object.keys(priceInfos)[index])\n            ],\n            p.timestamp,\n            p.price,\n            parseInt(p.v).toString(),\n            p.r,\n            p.s,\n        ]);\n        return acc;\n        }, []);\n    }\n    return prices;\n  };\n  return klass;\n};\n\nexport const perpetualPoolLiteAdapter = (klass) => {\n  //klass = processMethod(klass, \"getFundingPeriod\")\n\n  klass = addMethods(klass, [\n    init,\n\n    getConfig,\n    getLiquidity,\n    getLastTimestamp,\n    getProtocolFeeAccrued,\n    getStateValues,\n    getSymbols,\n    getPositions,\n    getDynamicEquity,\n    getPoolRequiredMargin,\n    getTraderMarginStatus,\n    isSymbolsUpdated,\n    isPositionsUpdated,\n    getTraderLiquidity,\n    formatTradeEvent,\n    _getSymbolPrices,\n  ]);\n\n  klass = overrideMethods(klass, [\n    [\n      processMethod,\n      'getParameters',\n      [\n        'poolMarginRatio',\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'minLiquidationReward',\n        'maxLiquidationReward',\n        'liquidationCutRatio',\n        'protocolFeeCollectRatio',\n      ],\n    ],\n    [processMethod, 'getPoolStateValues', ['liquidity', 'protocolFeeAccrued']],\n    [processMethod, 'getFundingPeriod'],\n    [\n      processMethod,\n      'getSymbol',\n      [\n        'multiplier',\n        'feeRatio',\n        'fundingRateCoefficient',\n        'price',\n        'alpha',\n        'cumulativeFundingRate',\n        'tradersNetVolume',\n        'tradersNetCost',\n      ],\n    ],\n  ]);\n\n  klass = overrideMethods(klass, [\n    [processTxMethod, 'addLiquidity', ['1']],\n    [processTxMethod, 'removeLiquidity', ['1']],\n    [processTxMethod, 'addMargin', ['1']],\n    [processTxMethod, 'removeMargin', ['1']],\n    [processTxMethod, 'trade', ['2']],\n  ]);\n\n  return klass;\n};\n\nexport const lTokenLiteAdapter = (klass) => {\n  return overrideMethods(klass, [\n    [processMethod, 'balanceOf'],\n    [processMethod, 'totalSupply'],\n  ]);\n};\n\nexport const pTokenLiteAdapter = (klass) => {\n  return overrideMethods(klass, [\n    [processMethod, 'getMargin'],\n    [\n      processMethod,\n      'getPosition',\n      ['volume', 'cost', 'lastCumulativeFundingRate'],\n    ],\n  ]);\n};\n\nexport const perpetualPoolLiteManagerAdapter = (klass) => {\n    // klass = processMethod(klass, 'symbol', []);\n    return klass\n}\n\n","// this file is generated by script, don't modify it !!!\nexport const perpetualPoolLiteAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256[7]\",\n                \"name\": \"parameters\",\n                \"type\": \"uint256[7]\"\n            },\n            {\n                \"internalType\": \"address[5]\",\n                \"name\": \"addresses\",\n                \"type\": \"address[5]\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"lp\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"lShares\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"AddLiquidity\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"AddMargin\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"oldController\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"newController\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"ChangeController\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"migrationTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"source\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"target\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"ExecuteMigration\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"liquidator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"reward\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Liquidate\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"migrationTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"source\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"target\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"PrepareMigration\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"collector\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ProtocolFeeCollection\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"lp\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"lShares\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"RemoveLiquidity\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"RemoveMargin\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"indexPrice\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"tradeVolume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"tradeCost\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"tradeFee\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"Trade\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\n                \"name\": \"prices\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"addLiquidity\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"multiplier\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"feeRatio\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"alpha\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addSymbol\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"approveMigration\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimNewController\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"collectProtocolFee\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"controller\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"source\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"executeMigration\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"source\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"lastTimestamp\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"executeMigrationWithTimestamp\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getAddresses\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"bTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"lTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"pTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"liquidatorQualifierAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"protocolFeeCollector\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getFundingPeriod\",\n        \"outputs\": [\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getParameters\",\n        \"outputs\": [\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"poolMarginRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"initialMarginRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"maintenanceMarginRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"minLiquidationReward\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"maxLiquidationReward\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"liquidationCutRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"protocolFeeCollectRatio\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getPoolStateValues\",\n        \"outputs\": [\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"liquidity\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"lastTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"protocolFeeAccrued\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getSymbol\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"string\",\n                        \"name\": \"symbol\",\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"oracleAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"multiplier\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"feeRatio\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"alpha\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"tradersNetVolume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"tradersNetCost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\",\n                \"name\": \"\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\n                \"name\": \"prices\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"liquidate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"pTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\n                \"name\": \"prices\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"liquidate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"migrationDestination\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"migrationTimestamp\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"target\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"graceDays\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"prepareMigration\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"lShares\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\n                \"name\": \"prices\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"removeLiquidity\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\n                \"name\": \"prices\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"removeMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"removeSymbol\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"period\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setFundingPeriod\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newController\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setNewController\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"feeRatio\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"alpha\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setSymbolParameters\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"toggleCloseOnly\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"tradeVolume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\n                \"name\": \"prices\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"trade\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nexport const lTokenLiteAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"pure\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newPool\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPool\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nexport const pTokenLiteAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"ApprovalForAll\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"amount\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"UpdateMargin\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"volume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"cost\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"lastCumulativeFundingRate\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"UpdatePosition\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"delta\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"addMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addSymbolId\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"exists\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getActiveSymbolIds\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256[]\",\n                \"name\": \"\",\n                \"type\": \"uint256[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getApproved\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getMargin\",\n        \"outputs\": [\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getNumPositionHolders\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getPosition\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"volume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPTokenLite.Position\",\n                \"name\": \"\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getTokenId\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"isActiveSymbolId\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"isApprovedForAll\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ownerOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"removeSymbolId\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"safeTransferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"bytes\",\n                \"name\": \"data\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"safeTransferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"setApprovalForAll\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newPool\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPool\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes4\",\n                \"name\": \"interfaceId\",\n                \"type\": \"bytes4\"\n            }\n        ],\n        \"name\": \"supportsInterface\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"toggleCloseOnly\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalMinted\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"margin\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"updateMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"volume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPTokenLite.Position\",\n                \"name\": \"position\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"name\": \"updatePosition\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { contractFactory } from '../../shared/utils/index.js';\nimport {\n  perpetualPoolLiteAdapter,\n  lTokenLiteAdapter,\n  pTokenLiteAdapter,\n} from \"./adapter.js\";\n\nimport { PerpetualPoolLite } from './gen/PerpetualPoolLite.js';\nimport { LTokenLite } from './gen/LTokenLite.js';\nimport { PTokenLite } from './gen/PTokenLite.js';\n\n\nexport const perpetualPoolLiteDpmmFactory = contractFactory(\n  perpetualPoolLiteAdapter(PerpetualPoolLite)\n);\nexport const lTokenLiteFactory = contractFactory(lTokenLiteAdapter(LTokenLite));\nexport const pTokenLiteFactory = contractFactory(pTokenLiteAdapter(PTokenLite));\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { perpetualPoolLiteAbi } from '../abi/perpetualPoolLiteAbi.js'\n\nexport class PerpetualPoolLite extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, perpetualPoolLiteAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  //  async controller() {\n  //    const res = await this._call('controller', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getAddresses() {\n    const res = await this._call('getAddresses', [])\n    return deleteIndexedKey(res)\n  }\n  async getFundingPeriod() {\n    const res = await this._call('getFundingPeriod', [])\n    return deleteIndexedKey(res)\n  }\n  async getParameters() {\n    const res = await this._call('getParameters', [])\n    return deleteIndexedKey(res)\n  }\n  async getPoolStateValues() {\n    const res = await this._call('getPoolStateValues', [])\n    return deleteIndexedKey(res)\n  }\n  async getSymbol(symbolId) {\n    const res = await this._call('getSymbol', [symbolId])\n    return deleteIndexedKey(res)\n  }\n  //  async migrationDestination() {\n  //    const res = await this._call('migrationDestination', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async migrationTimestamp() {\n  //    const res = await this._call('migrationTimestamp', [])\n  //    return deleteIndexedKey(res)\n  //  }\n\n  // tx\n  async addLiquidity(accountAddress, bAmount, prices) {\n    return await this._transact('addLiquidity', [bAmount, prices], accountAddress)\n  }\n  async addMargin(accountAddress, bAmount) {\n    return await this._transact('addMargin', [bAmount], accountAddress)\n  }\n  //  async addSymbol(accountAddress, symbolId, symbol, oracleAddress, multiplier, feeRatio, alpha) {\n  //    return await this._transact('addSymbol', [symbolId, symbol, oracleAddress, multiplier, feeRatio, alpha], accountAddress)\n  //  }\n  //  async approveMigration(accountAddress) {\n  //    return await this._transact('approveMigration', [], accountAddress)\n  //  }\n  //  async claimNewController(accountAddress) {\n  //    return await this._transact('claimNewController', [], accountAddress)\n  //  }\n  //  async collectProtocolFee(accountAddress) {\n  //    return await this._transact('collectProtocolFee', [], accountAddress)\n  //  }\n  //  async executeMigration(accountAddress, source) {\n  //    return await this._transact('executeMigration', [source], accountAddress)\n  //  }\n  //  async executeMigrationWithTimestamp(accountAddress, source, lastTimestamp) {\n  //    return await this._transact('executeMigrationWithTimestamp', [source, lastTimestamp], accountAddress)\n  //  }\n  //  async liquidate(accountAddress, account, prices) {\n  //    return await this._transact('liquidate', [account, prices], accountAddress)\n  //  }\n  //  async liquidate(accountAddress, pTokenId, prices) {\n  //    return await this._transact('liquidate', [pTokenId, prices], accountAddress)\n  //  }\n  //  async prepareMigration(accountAddress, target, graceDays) {\n  //    return await this._transact('prepareMigration', [target, graceDays], accountAddress)\n  //  }\n  async removeLiquidity(accountAddress, lShares, prices) {\n    return await this._transact('removeLiquidity', [lShares, prices], accountAddress)\n  }\n  async removeMargin(accountAddress, bAmount, prices) {\n    return await this._transact('removeMargin', [bAmount, prices], accountAddress)\n  }\n  //  async removeSymbol(accountAddress, symbolId) {\n  //    return await this._transact('removeSymbol', [symbolId], accountAddress)\n  //  }\n  //  async setFundingPeriod(accountAddress, period) {\n  //    return await this._transact('setFundingPeriod', [period], accountAddress)\n  //  }\n  //  async setNewController(accountAddress, newController) {\n  //    return await this._transact('setNewController', [newController], accountAddress)\n  //  }\n  //  async setSymbolParameters(accountAddress, symbolId, oracleAddress, feeRatio, alpha) {\n  //    return await this._transact('setSymbolParameters', [symbolId, oracleAddress, feeRatio, alpha], accountAddress)\n  //  }\n  //  async toggleCloseOnly(accountAddress, symbolId) {\n  //    return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\n  //  }\n  async trade(accountAddress, symbolId, tradeVolume, prices) {\n    return await this._transact('trade', [symbolId, tradeVolume, prices], accountAddress)\n  }\n\n}","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { lTokenLiteAbi } from '../abi/lTokenLiteAbi.js'\n\nexport class LTokenLite extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, lTokenLiteAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  //  async allowance(owner, spender) {\n  //    const res = await this._call('allowance', [owner, spender])\n  //    return deleteIndexedKey(res)\n  //  }\n  async balanceOf(account) {\n    const res = await this._call('balanceOf', [account])\n    return deleteIndexedKey(res)\n  }\n  //  async decimals() {\n  //    const res = await this._call('decimals', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async name() {\n  //    const res = await this._call('name', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return deleteIndexedKey(res)\n  }\n  //  async symbol() {\n  //    const res = await this._call('symbol', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async approve(accountAddress, spender, amount) {\n  //    return await this._transact('approve', [spender, amount], accountAddress)\n  //  }\n  //  async burn(accountAddress, account, amount) {\n  //    return await this._transact('burn', [account, amount], accountAddress)\n  //  }\n  //  async mint(accountAddress, account, amount) {\n  //    return await this._transact('mint', [account, amount], accountAddress)\n  //  }\n  //  async setPool(accountAddress, newPool) {\n  //    return await this._transact('setPool', [newPool], accountAddress)\n  //  }\n  //  async transfer(accountAddress, to, amount) {\n  //    return await this._transact('transfer', [to, amount], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, amount) {\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { pTokenLiteAbi } from '../abi/pTokenLiteAbi.js'\n\nexport class PTokenLite extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, pTokenLiteAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async balanceOf(owner) {\n    const res = await this._call('balanceOf', [owner])\n    return deleteIndexedKey(res)\n  }\n  async exists(owner) {\n    const res = await this._call('exists', [owner])\n    return deleteIndexedKey(res)\n  }\n  async getActiveSymbolIds() {\n    const res = await this._call('getActiveSymbolIds', [])\n    return deleteIndexedKey(res)\n  }\n  //  async getApproved(tokenId) {\n  //    const res = await this._call('getApproved', [tokenId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getMargin(owner) {\n    const res = await this._call('getMargin', [owner])\n    return deleteIndexedKey(res)\n  }\n  async getNumPositionHolders(symbolId) {\n    const res = await this._call('getNumPositionHolders', [symbolId])\n    return deleteIndexedKey(res)\n  }\n  async getPosition(owner, symbolId) {\n    const res = await this._call('getPosition', [owner, symbolId])\n    return deleteIndexedKey(res)\n  }\n  //  async getTokenId(owner) {\n  //    const res = await this._call('getTokenId', [owner])\n  //    return deleteIndexedKey(res)\n  //  }\n  async isActiveSymbolId(symbolId) {\n    const res = await this._call('isActiveSymbolId', [symbolId])\n    return deleteIndexedKey(res)\n  }\n  //  async isApprovedForAll(owner, operator) {\n  //    const res = await this._call('isApprovedForAll', [owner, operator])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async name() {\n  //    const res = await this._call('name', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async ownerOf(tokenId) {\n  //    const res = await this._call('ownerOf', [tokenId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return deleteIndexedKey(res)\n  }\n  //  async supportsInterface(interfaceId) {\n  //    const res = await this._call('supportsInterface', [interfaceId])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async symbol() {\n  //    const res = await this._call('symbol', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async totalMinted() {\n  //    const res = await this._call('totalMinted', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async addMargin(accountAddress, owner, delta) {\n  //    return await this._transact('addMargin', [owner, delta], accountAddress)\n  //  }\n  //  async addSymbolId(accountAddress, symbolId) {\n  //    return await this._transact('addSymbolId', [symbolId], accountAddress)\n  //  }\n  //  async approve(accountAddress, operator, tokenId) {\n  //    return await this._transact('approve', [operator, tokenId], accountAddress)\n  //  }\n  //  async burn(accountAddress, owner) {\n  //    return await this._transact('burn', [owner], accountAddress)\n  //  }\n  //  async mint(accountAddress, owner) {\n  //    return await this._transact('mint', [owner], accountAddress)\n  //  }\n  //  async removeSymbolId(accountAddress, symbolId) {\n  //    return await this._transact('removeSymbolId', [symbolId], accountAddress)\n  //  }\n  //  async safeTransferFrom(accountAddress, from, to, tokenId) {\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\n  //  }\n  //  async safeTransferFrom(accountAddress, from, to, tokenId, data) {\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\n  //  }\n  //  async setApprovalForAll(accountAddress, operator, approved) {\n  //    return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\n  //  }\n  //  async setPool(accountAddress, newPool) {\n  //    return await this._transact('setPool', [newPool], accountAddress)\n  //  }\n  //  async toggleCloseOnly(accountAddress, symbolId) {\n  //    return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, tokenId) {\n  //    return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\n  //  }\n  //  async updateMargin(accountAddress, owner, margin) {\n  //    return await this._transact('updateMargin', [owner, margin], accountAddress)\n  //  }\n  //  async updatePosition(accountAddress, owner, symbolId, position) {\n  //    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\n  //  }\n\n}","import { bg, max, min } from '../../shared/utils';\nimport { checkSymbolId } from '../../shared/utils/derijsnext';\nimport { contractFactory } from '../../shared/utils/index.js';\nimport { getIndexInfo, SECONDS_IN_A_DAY } from '../../shared/config';\nimport { getOraclePriceFromCache2 } from '../../shared/utils/oracle';\nimport { calculateLiquidationPrice } from '../../v2/calculation';\nimport { calculateDpmmPrice } from '../calc';\nimport { perpetualPoolLiteDpmmFactory} from './factory';\nimport { liquidatePriceCache } from '../../shared/api/api_globals';\n\nexport class PoolApi{\n  constructor(chainId, poolAddress) {\n    this.chainId = chainId;\n    this.poolAddress = poolAddress;\n    this.pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n  }\n  async init(isEstimatedApi) {\n    await this.pool.init(isEstimatedApi);\n  }\n\n  // =================\n  //  api\n  // =================\n  async getLiquidityInfo(accountAddress) {\n    await this.init();\n    const pool = this.pool;\n    const lToken = pool.lToken;\n    const [liquidity, lTokenBalance, lTokenTotalSupply] = await Promise.all([\n      pool.getPoolLiquidity(),\n      lToken.balanceOf(accountAddress),\n      lToken.totalSupply(),\n    ]);\n    const { poolMarginRatio } = pool.parameters;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const poolDynamicEquity = await pool.getDynamicEquity();\n    const shareValue = bg(lTokenTotalSupply).eq(0)\n      ? '0'\n      : bg(poolDynamicEquity).div(lTokenTotalSupply).toString();\n\n    const value = pool.symbols.reduce((acc, s) => {\n      return acc.plus(\n        bg(s.tradersNetVolume).times(s.multiplier).times(s.dpmmPrice)\n      );\n    }, bg(0));\n    const removable = bg(poolDynamicEquity).minus(\n      bg(value).times(poolMarginRatio)\n    );\n    return {\n      totalSupply: lTokenTotalSupply,\n      poolLiquidity: liquidity,\n      shares: lTokenBalance,\n      shareValue,\n      maxRemovableShares: max(\n        min(\n          bg(lTokenBalance),\n          bg(shareValue).eq(0) ? '0' : removable.div(shareValue)\n        ),\n        bg(0)\n      ),\n    };\n  }\n\n  async getSpecification(symbolId) {\n    await this.init();\n    const pool = this.pool;\n\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbolInfo = pool.symbols[symbolIndex];\n\n    const { symbol, multiplier, feeRatio } = symbolInfo;\n    const parameterInfo = pool.parameters;\n    return {\n      symbol,\n      bTokenSymbol: pool.bTokenSymbol,\n      multiplier,\n      feeRatio,\n      fundingRateCoefficient: bg(1).div(pool.fundingPeriod).toString(),\n      minPoolMarginRatio: parameterInfo.poolMarginRatio,\n      minInitialMarginRatio: parameterInfo.initialMarginRatio,\n      minMaintenanceMarginRatio: parameterInfo.maintenanceMarginRatio,\n      minLiquidationReward: parameterInfo.minLiquidationReward,\n      maxLiquidationReward: parameterInfo.maxLiquidationReward,\n      liquidationCutRatio: parameterInfo.liquidationCutRatio,\n      protocolFeeCollectRatio: parameterInfo.protocolFeeCollectRatio,\n      indexConstituents: getIndexInfo(symbol),\n    };\n  }\n\n  async getPositionInfo(accountAddress, symbolId) {\n    await this.init();\n    const pool = this.pool;\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\n    const symbolIndex = pool.activeSymbolIds.indexOf(symbolId);\n    if (symbolIndex > -1) {\n      const oracleAddress =\n        pool.offChainOracleSymbolIds.indexOf(symbolId) > -1\n          ? ''\n          : pool.symbols[symbolIndex].oracleAddress;\n      const [\n        symbols,\n        lastTimestamp,\n        margin,\n        fundingPeriod,\n        price,\n      ] = await Promise.all([\n        pool.getSymbols(),\n        pool.getLastTimestamp(),\n        pool.pToken.getMargin(accountAddress),\n        pool.getFundingPeriod(),\n        getOraclePriceFromCache2.get(\n          this.chainId,\n          pool.symbols[symbolIndex].symbol,\n          oracleAddress\n        ),\n      ]);\n\n      const positions = await pool.getPositions(accountAddress)\n\n      const symbol = symbols[symbolIndex];\n      const position = positions[symbolIndex];\n      // const { volume } = position\n      // const { multiplier, indexPrice } = symbol\n      const marginHeld = symbols.reduce((acc, s, index) => {\n        return acc.plus(\n          bg(s.indexPrice)\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .times(initialMarginRatio)\n            .abs()\n        );\n      }, bg(0));\n      const marginHeldBySymbol = bg(position.volume)\n        .times(symbol.multiplier)\n        .times(symbol.indexPrice)\n        .times(initialMarginRatio)\n        .abs();\n\n      const unrealizedPnl = positions.reduce((acc, p) => {\n        return acc.plus(\n          bg(p.traderPnl)\n        );\n      }, bg(0));\n      const unrealizedPnlList = symbols.map((s, index) => {\n        return [s.symbol, positions[index].traderPnl];\n      });\n      const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\n      const dynamicCost = symbols.reduce((acc, s, index) => {\n        if (index !== parseInt(symbolId)) {\n          return acc.plus(\n            bg(positions[index].volume).times(s.dpmmPrice).times(s.multiplier)\n          );\n        } else {\n          return acc;\n        }\n      }, bg(0));\n      const fundingFee = bg(symbol.cumulativeFundingRate)\n        .minus(position.lastCumulativeFundingRate)\n        .plus(\n          bg(symbol.dpmmPrice)\n            .minus(symbol.indexPrice)\n            .times(symbol.multiplier)\n            .div(fundingPeriod)\n            .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\n        )\n        .times(position.volume)\n        .toString();\n\n      //console.log(position.volume, margin, totalCost.toString(), dynamicCost.toString(), symbol.multiplier, maintenanceMarginRatio)\n\n      // set liquidatePrice cache\n      liquidatePriceCache.set(this.poolAddress, {\n        volume: position.volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        price,\n        multiplier: symbol.multiplier,\n        minMaintenanceMarginRatio: maintenanceMarginRatio,\n      });\n\n      return {\n        symbol: symbol.symbol,\n        price: price,\n        markPrice: symbol.dpmmPrice.toString(),\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\n        averageEntryPrice: bg(position.volume).eq(0)\n          ? '0'\n          : bg(position.cost)\n              .div(position.volume)\n              .div(symbol.multiplier)\n              .toString(),\n        margin: margin,\n        marginHeld: marginHeld.toString(),\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\n        unrealizedPnl: unrealizedPnl.toString(),\n        unrealizedPnlList,\n        fundingFee,\n        liquidationPrice: calculateLiquidationPrice(\n          position.volume,\n          margin,\n          totalCost,\n          dynamicCost,\n          symbol.multiplier,\n          maintenanceMarginRatio\n        ).toString(),\n      };\n    }\n  }\n\n  async getPositionInfos(accountAddress) {\n    await this.init();\n    const pool = this.pool;\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\n    const [\n      symbols,\n      lastTimestamp,\n      margin,\n      fundingPeriod,\n    ] = await Promise.all([\n      pool.getSymbols(),\n      //pool.getPositions(accountAddress),\n      pool.getLastTimestamp(),\n      pool.pToken.getMargin(accountAddress),\n      pool.getFundingPeriod(),\n    ]);\n    const positions = await pool.getPositions(accountAddress)\n\n    const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\n\n    return positions.map((p, index) => {\n      const symbolIndex = index;\n      const symbol = symbols[symbolIndex];\n      const position = positions[symbolIndex];\n      // const { volume } = position\n      // const { multiplier, indexPrice } = symbol\n      const marginHeld = symbols.reduce((acc, s, index) => {\n        return acc.plus(\n          bg(s.indexPrice)\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .times(initialMarginRatio)\n            .abs()\n        );\n      }, bg(0));\n      const marginHeldBySymbol = bg(position.volume)\n        .times(symbol.multiplier)\n        .times(symbol.indexPrice)\n        .times(initialMarginRatio)\n        .abs();\n      const unrealizedPnl = p.traderPnl\n      const dynamicCost = symbols.reduce((acc, s, idx) => {\n        if (idx !== index) {\n          return acc.plus(\n            bg(positions[idx].volume).times(s.dpmmPrice).times(s.multiplier)\n          );\n        } else {\n          return acc;\n        }\n      }, bg(0));\n      const fundingFee = bg(symbol.cumulativeFundingRate)\n        .minus(position.lastCumulativeFundingRate)\n        .plus(\n          bg(symbol.dpmmPrice)\n            .minus(symbol.indexPrice)\n            .times(symbol.multiplier)\n            .div(fundingPeriod)\n            .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\n        )\n        .times(position.volume)\n        .toString();\n      return {\n        symbol: symbol.symbol,\n        symbolId: symbol.symbolId,\n        price: symbol.indexPrice,\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\n        averageEntryPrice: bg(position.volume).eq(0)\n          ? '0'\n          : bg(position.cost)\n              .div(position.volume)\n              .div(symbol.multiplier)\n              .toString(),\n        margin: margin,\n        marginHeld: marginHeld.toString(),\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\n        unrealizedPnl: unrealizedPnl.toString(),\n        fundingFee,\n        liquidationPrice: calculateLiquidationPrice(\n          position.volume,\n          margin,\n          totalCost,\n          dynamicCost,\n          symbol.multiplier,\n          maintenanceMarginRatio\n        ).toString(),\n      };\n    }).filter((p) => p.volume !== '0');\n  }\n\n  async getEstimatedMargin(accountAddress, volume, leverage, symbolId) {\n    await this.init(true);\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbol = pool.symbols[symbolIndex];\n    return bg(volume)\n      .abs()\n      .times(symbol.indexPrice)\n      .times(symbol.multiplier)\n      .div(leverage)\n      .toString();\n  }\n\n  async getEstimatedFee(volume, symbolId) {\n    await this.init(true);\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbol = pool.symbols[symbolIndex];\n    return bg(volume)\n      .abs()\n      .times(symbol.indexPrice)\n      .times(symbol.multiplier)\n      .times(symbol.feeRatio)\n      .toString();\n  }\n\n  async getFundingRate(symbolId) {\n    await this.init();\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbol = pool.symbols[symbolIndex];\n\n    const liquidity = pool.state.liquidity;\n    return {\n      funding0: bg(symbol.funding).div(symbol.multiplier).toString(),\n      fundingPerSecond: bg(symbol.fundingPerSecond)\n        .div(symbol.multiplier)\n        .toString(),\n      liquidity: liquidity,\n      volume: '-',\n      tradersNetVolume: bg(symbol.tradersNetVolume)\n        .times(symbol.multiplier)\n        .toString(),\n    };\n  }\n\n  async getEstimatedFundingRate(newVolume, symbolId) {\n    await this.init(true);\n    const pool = this.pool;\n\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbol = { ...pool.symbols[symbolIndex] };\n    symbol.dpmmPrice = calculateDpmmPrice(\n      symbol.indexPrice,\n      symbol.K,\n      bg(symbol.tradersNetVolume).plus(newVolume).toString(),\n      symbol.multiplier\n    ).toString();\n    symbol.fundingPerSecond = bg(symbol.dpmmPrice)\n      .minus(symbol.indexPrice)\n      //.times(symbol.multiplier)\n      .div(pool.fundingPeriod)\n      .toString();\n    return {\n      funding1: bg(symbol.fundingPerSecond).times(SECONDS_IN_A_DAY).toString(),\n    };\n  }\n\n  async getLiquidityUsed() {\n    await this.init();\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const { poolMarginRatio } = pool.parameters;\n    return pool.symbols\n      .reduce(\n        (acc, s) =>\n          acc.plus(\n            bg(s.tradersNetVolume)\n              .abs()\n              .times(s.indexPrice)\n              .times(s.multiplier)\n              .times(poolMarginRatio)\n          ),\n        bg(0)\n      )\n      .div(pool.state.liquidity)\n      .toString();\n  }\n\n  async getEstimatedLiquidityUsed(newVolume, symbolId) {\n    await this.init(true);\n    const pool = this.pool;\n\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n\n    const { poolMarginRatio } = pool.parameters;\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    //console.log(pool.symbols, poolMarginRatio, pool.state)\n    return pool.symbols\n      .reduce(\n        (acc, s, index) =>\n          index === symbolIndex\n            ? acc.plus(\n                bg(s.tradersNetVolume)\n                  .plus(newVolume)\n                  .abs()\n                  .times(s.indexPrice)\n                  .times(s.multiplier)\n                  .times(poolMarginRatio)\n              )\n            : acc.plus(\n                bg(s.tradersNetVolume)\n                  .abs()\n                  .times(s.indexPrice)\n                  .times(s.multiplier)\n                  .times(poolMarginRatio)\n              ),\n        bg(0)\n      )\n      .div(pool.state.liquidity)\n      .toString();\n  }\n\n  // =================\n  // static method\n  // =================\n}\n\nexport const poolApiFactory = contractFactory(PoolApi);\n","import {\n  deriToNatural,\n  getBlockInfo,\n  getPastEvents,\n  getHttpBase,\n  fetchJson,\n  bg,\n} from '../../shared/utils';\nimport {\n  getPoolConfig,\n} from '../../shared/config';\nimport { perpetualPoolLiteDpmmFactory } from '../contract/factory';\n\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  //console.log('bTokenSymbol', bTokenSymbol)\n  const perpetualPool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n  await perpetualPool.init()\n  const toBlock = await getBlockInfo(chainId, 'latest');\n  fromBlock = parseInt(fromBlock);\n\n  const filters = { account: accountAddress };\n  let events = await getPastEvents(\n    chainId,\n    perpetualPool.contract,\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  //events = events.filter((i) => i.returnValues.symbolId === symbolId);\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await perpetualPool.formatTradeEvent(item);\n    if (res) {\n      const symbolIndex = perpetualPool.activeSymbolIds.indexOf(res.symbolId);\n      result.unshift({\n        baseToken: perpetualPool.bTokenSymbol,\n        direction: res.direction,\n        volume: bg(res.volume)\n          .times(perpetualPool.symbols[symbolIndex].multiplier)\n          .toString(),\n        price: res.price,\n        indexPrice: res.indexPrice,\n        notional: res.notional,\n        symbol: res.symbol,\n        symbolId: res.symbolId,\n        time: res.time,\n        transactionFee: res.transactionFee,\n        transactionHash: res.transactionHash,\n      });\n    }\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock,\n      tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    const perpetualPool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n    await perpetualPool.init()\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .map((i) => {\n          const symbolIndex = perpetualPool.activeSymbolIds.indexOf(i.symbolId)\n          if (symbolIndex > -1) {\n            return {\n              direction: i.direction.trim(),\n              baseToken: i.baseToken.trim(),\n              symbolId: i.symbolId,\n              symbol: i.symbol,\n              price: deriToNatural(i.price).toString(),\n              notional: deriToNatural(i.notional).toString(),\n              volume: deriToNatural(i.volume).times(perpetualPool.symbols[symbolIndex].multiplier).toString(),\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else {\n            return null\n          }\n        }).filter((i) => i != null)\n    }\n    //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n      const { initialBlock } = getPoolConfig(poolAddress);\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch (err) {\n    console.log(\n      `getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`\n    );\n  }\n  return [];\n};\n","import {\n  getPoolInfoApy,\n  getPoolLiquidity,\n} from '../../shared/api/database_api';\nimport {\n  getEstimatedFee,\n  getEstimatedFundingRate,\n  getEstimatedLiquidityUsed,\n  getEstimatedMargin,\n  getFundingRate,\n  getLiquidityInfo,\n  getLiquidityUsed,\n  getPositionInfo,\n  getPositionInfos,\n  getSpecification,\n  getWalletBalance,\n  isUnlocked,\n  getEstimatedTimePrice,\n} from './query_api';\nimport { getTradeHistory } from './trade_history_api';\nimport {\n  addLiquidity,\n  closePosition,\n  depositMargin,\n  removeLiquidity,\n  tradeWithMargin,\n  unlock,\n  withdrawMargin,\n} from './transaction_api';\n\nexport const api = {\n  // mining\n  getLiquidityInfo,\n  getPoolLiquidity,\n  getPoolInfoApy,\n  addLiquidity,\n  removeLiquidity,\n  // trading\n  getSpecification,\n  getPositionInfo,\n  getPositionInfos,\n  getWalletBalance,\n  isUnlocked,\n  getEstimatedFee,\n  getEstimatedMargin,\n  getFundingRate,\n  getEstimatedFundingRate,\n  getLiquidityUsed,\n  getEstimatedLiquidityUsed,\n  getEstimatedTimePrice,\n  getFundingRateCache: () => {},\n  unlock,\n  depositMargin,\n  withdrawMargin,\n  tradeWithMargin,\n  closePosition,\n  // tradeHistory\n  getTradeHistory,\n};\n","import { checkApiInput, checkApiInputWithoutAccount, checkSymbolId, checkTokenId } from '../../shared/utils/derijsnext';\nimport { catchApiError } from '../../shared/utils/api';\nimport { bg } from '../../shared/utils';\nimport { perpetualPoolLiteDpmmFactory } from '../contract/factory';\nimport { poolApiFactory } from '../contract/PoolApi';\nimport { calculateDpmmCost } from '../calc';\n\nexport const getLiquidityInfo = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getLiquidityInfo(accountAddress);\n    },\n    args,\n    'getLiquidityInfo',\n    {\n      totalSupply: '',\n      poolLiquidity: '',\n      shares: '',\n      shareValue: '',\n      maxRemovableShares: '',\n    }\n  );\n};\n\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(chainId, poolAddress);\n      symbolId = checkTokenId(symbolId)\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getSpecification(symbolId);\n    },\n    args,\n    'getSpecification',\n    {\n      symbol: '',\n      bTokenSymbol: '',\n      multiplier: '',\n      feeRatio: '',\n      fundingRateCoefficient: '',\n      minPoolMarginRatio: '',\n      minInitialMarginRatio: '',\n      minMaintenanceMarginRatio: '',\n      minLiquidationReward: '',\n      maxLiquidationReward: '',\n      liquidationCutRatio: '',\n      protocolFeeCollectRatio: '',\n      indexConstituents: { tokens: [], url: '' },\n    }\n  );\n};\n\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId]\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      symbolId = checkTokenId(symbolId)\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getPositionInfo(accountAddress, symbolId);\n    },\n    args,\n    'getPositionInfo',\n    {\n      price: '',\n      volume: '',\n      averageEntryPrice: '',\n      margin: '',\n      marginHeld: '',\n      marginHeldBySymbol: '',\n      unrealizedPnl: '',\n      unrealizedPnlList: [],\n      fundingFee: '',\n      liquidationPrice: '',\n    }\n  );\n}\n\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getPositionInfos(accountAddress);\n    },\n    args,\n    'getPositionInfos',\n    []\n  );\n}\n\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\n  const args =  [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress)\n      await pool.init()\n      return await pool.bToken.balanceOf(accountAddress)\n  }, args, 'getWalletBalance', '')\n}\n\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      return await pool.bToken.isUnlocked(accountAddress, poolAddress);\n    },\n    args,\n    'isUnlocked',\n    false,\n  );\n}\n\nexport const getEstimatedMargin = async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\n  const args = [chainId, poolAddress,accountAddress, volume, leverage, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress,\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getEstimatedMargin(accountAddress, volume, leverage, symbolId);\n  }, args, 'getEstimatedMargin', '')\n}\n\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\n  const args = [chainId, poolAddress, volume, symbolId]\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getEstimatedFee(volume, symbolId);\n  }, args, 'getEstimatedFee', '')\n}\n\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getFundingRate(symbolId);\n    },\n    args,\n    'getFundingRate',\n    ''\n  );\n}\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newVolume, symbolId) => {\n  const args = [chainId, poolAddress, newVolume, symbolId]\n  return catchApiError(\n    async (chainId, poolAddress, newVolume, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getEstimatedFundingRate(newVolume, symbolId);\n    },\n    args,\n    'getEstimatedFundingRate',\n    ''\n  );\n}\n\nexport const getLiquidityUsed = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getLiquidityUsed(symbolId);\n    },\n    args,\n    'getLiquidityUsed',\n    ''\n  );\n}\n\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newVolume, symbolId) => {\n  const args = [chainId, poolAddress, newVolume, symbolId]\n  return catchApiError(\n    async (chainId, poolAddress, newVolume, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getEstimatedLiquidityUsed(newVolume, symbolId);\n    },\n    args,\n    'getEstimatedLiquidityUsed',\n    ''\n  );\n}\n\nexport const getEstimatedTimePrice = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress,\n      );\n      symbolId = checkTokenId(symbolId);\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      const pool = api.pool;\n      const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n      if (!pool.isSymbolsUpdated()) {\n        await pool.getSymbols();\n      }\n      const symbol = pool.symbols[symbolIndex];\n      //console.log('dpmmPrice', symbol.dpmmPrice.toString(), symbol.indexPrice)\n      const cost = calculateDpmmCost(\n        symbol.indexPrice,\n        symbol.K,\n        symbol.tradersNetVolume,\n        symbol.multiplier,\n        newNetVolume\n      );\n      return bg(cost).div(symbol.multiplier).div(newNetVolume).toString();\n    },\n    [],\n    'getEstimatedTimePrice',\n    ''\n  );\n};\n","import { bg, catchTxApiError, checkAddress, checkApiInput, checkChainId } from \"../../shared\"\nimport { checkAmount } from \"../../shared/utils/derijsnext\";\nimport { perpetualPoolLiteDpmmFactory } from '../contract/factory.js'\n\n// mining\nexport const addLiquidity = async(...args) => {\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, amount) => {\n      chainId = checkChainId(chainId);\n      poolAddress = checkAddress(poolAddress);\n      accountAddress = checkAddress(accountAddress);\n      amount = checkAmount(amount)\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      return await pool.addLiquidity(accountAddress, amount)\n  }, args )\n}\n\nexport const removeLiquidity = async (...args) => {\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      amount = checkAmount(amount)\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      return await pool.removeLiquidity(accountAddress, amount);\n    },\n    args\n  );\n};\n\n//trading\nexport const unlock = async (...args) => {\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    return await pool.bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const depositMargin = async (...args) => {\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    amount = checkAmount(amount)\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    return await pool.addMargin(accountAddress, amount);\n  }, args);\n};\n\nexport const withdrawMargin = async (...args) => {\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    amount = checkAmount(amount)\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    return await pool.removeMargin(accountAddress, amount);\n  }, args);\n};\n\nexport const tradeWithMargin = async(...args) => {\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    newVolume = checkAmount(newVolume)\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    return await pool.trade(accountAddress, symbolId, newVolume);\n  }, args)\n}\n\nexport const closePosition = async(...args) => {\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    const {volume} = await pool.pToken.getPosition(accountAddress, symbolId)\n    if (!bg(volume).eq(0)) {\n      const newVolume = bg(volume).negated().toString()\n      return await pool.trade(accountAddress, symbolId, newVolume);\n    } else {\n      throw new Error('no position to close')\n    }\n  }, args)\n}","// this file is generated by script, don't modify it !!!\n// import { processMethod } from \"../../shared/utils/index.js\";\n\nimport { bg, toWei, fromWei, deriToNatural, processResult, getBlockInfo } from \"../../shared/utils/index.js\";\nimport { normalizeSymbolUnit, SECONDS_IN_A_DAY } from \"../../shared/config\";\n// import {\n//   processResult,\n// } from \"../../shared/utils/contract.js\";\n//import { range } from '../../shared/utils/lang.js'\nimport { bTokenOracle1Factory, ERC20Factory, offChainOracleFactory } from \"../../shared/contract/factory.js\";\nimport { lTokenFactory, perpetualPoolRouterDpmmFactory, pTokenFactory } from \"./factory.js\";\n\n\nimport { getOraclePriceFromCache2 } from '../../shared/utils/oracle';\nimport { calculateDpmmCost, calculateDpmmPrice, calculateK } from \"../../v2_lite_dpmm/calc.js\";\n\nconst range = (n) => {\n  if (typeof n === 'string' && /^\\d+$/.test(n) ) {\n    n = parseInt(n)\n  }\n  return [...Array(n).keys()]\n}\n\nconst addMethods = (klass, fns = []) => {\n  if (fns.length > 0) {\n    for (let i = 0; i < fns.length; i++) {\n      klass = fns[i](klass);\n    }\n    return klass;\n  } else {\n    return klass;\n  }\n};\nconst overrideMethods = (klass, fns = []) => {\n  if (fns.length > 0) {\n    for (let i = 0; i < fns.length; i++) {\n      const fn = fns[i][0]\n      const args = fns[i].slice(1)\n      // console.log(fn, args)\n      klass = fn(klass)(...args);\n    }\n    return klass;\n  } else {\n    return klass;\n  }\n};\nconst processMethod = (klass) => (methodName, propList = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const res = await originMethod.apply(this, args);\n    return processResult(res, propList);\n  };\n  return klass;\n};\n\nconst processTxMethod = (klass) => (methodName, toWeiArgPositions = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    //const prices = await this._getSymbolPrices()\n    let newArgs = args.map((arg, index) =>\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\n    );\n    //newArgs.push(prices)\n    return await originMethod.apply(this, newArgs);\n  };\n  return klass;\n};\n\n\nconst init = (klass) => {\n  klass.prototype.init = async function (isEstimatedApi = false) {\n    await this._init();\n    if (!this.addresses || !this.parameters) {\n      [this.addresses, this.parameters, this.state, this.lengths] =\n        await Promise.all([\n          this.getAddresses(),\n          this.getParameters(),\n          this.getPoolStateValues(),\n          this.getLengths(),\n        ]);\n      this.fundingPeriod = (3 * 24 * 3600).toString();\n      const { pTokenAddress, lTokenAddress, routerAddress } = this.addresses;\n      this.lToken = lTokenFactory(this.chainId, lTokenAddress);\n      this.pToken = pTokenFactory(this.chainId, pTokenAddress);\n      this.router = perpetualPoolRouterDpmmFactory(this.chainId, routerAddress)\n    }\n    if (!isEstimatedApi) {\n      const lengths = await this.getLengths();\n      if (\n        !this.symbols ||\n        !this.bTokens ||\n        this.lengths.toString() !== lengths.toString()\n      ) {\n        this.bTokenIds = range(lengths[0]).map((i) => i.toString());\n        this.activeSymbolIds = range(lengths[1]).map((i) => i.toString());\n        this.bTokens = await Promise.all(\n          this.bTokenIds.reduce(\n            (acc, bTokenId) => [...acc, this.getBToken(bTokenId)],\n            []\n          )\n        );\n        // update bToken price\n        for (let i = 0; i < this.bTokenIds.length; i++) {\n          if (i === 0) {\n            this.bTokens[i].price = \"1\";\n          } else {\n            // this.bTokens[i].price = await offChainOracleFactory(\n            //   this.chainId,\n            //   this.bTokens[i].oracleAddress\n            // ).getPrice();\n            this.bTokens[i].price = await bTokenOracle1Factory(\n              this.chainId,\n              this.bTokens[i].oracleAddress\n            ).getPrice();\n          }\n          this.bTokens[i].equity = bg(this.bTokens[i].liquidity)\n            .times(this.bTokens[i].price)\n            .times(this.bTokens[i].discount)\n            .plus(this.bTokens[i].pnl)\n            .toString();\n        }\n        this.bTokenSymbols = await Promise.all(\n          this.bTokens.reduce(\n            (acc, bToken) => [\n              ...acc,\n              ERC20Factory(this.chainId, bToken.bTokenAddress).symbol(),\n            ],\n            []\n          )\n        );\n        this.symbols = await Promise.all(\n          this.activeSymbolIds.reduce(\n            (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n            []\n          )\n        );\n        this.activeSymbolNames = this.symbols.map((s) => s.symbol);\n\n        // init\n        this.positions = [];\n        this.userState = {};\n        this.offChainOracleSymbolIds = [];\n        this.offChainOracleSymbolNames = [];\n\n        await this.getLiquidity()\n      }\n    }\n  };\n  return klass;\n};\nconst getConfig = (klass) => {\n  klass.prototype.getConfig = async function () {\n    return {\n      pool: this.contractAddress,\n      pToken: this.addresses.pTokenAddress,\n      lToken: this.addresses.lTokenAddress,\n      router: this.addresses.routerAddress,\n      bTokenSymbols: this.bTokenSymbols,\n      bTokens: this.bTokens.map((b, index) => ({\n        bTokenId: index.toString(),\n        bTokenSymbol: this.bTokenSymbols[index].toUpperCase(),\n        bToken: b.bTokenAddress,\n      })),\n      symbols: this.symbols.map((s, index) => ({\n        symbolId: index.toString(),\n        symbol: s.symbol,\n        unit: normalizeSymbolUnit(s.symbol),\n      })),\n      initialBlock: this.initialBlock,\n      type: \"perpetual\",\n      version: 'v2',\n      versionId: \"v2_dpmm\",\n      chainId: this.chainId,\n    };\n  };\n  return klass;\n};\n\nconst getLiquidity = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype.getLiquidity = async function () {\n    await this._init()\n    const res = this.bTokens.reduce((acc, b) => acc.plus(b.equity), bg(0)).toString()\n    this.state = this.state || {}\n    this.state.liquidity = res\n    return res\n  }\n  return klass\n}\n\nexport const getLastTimestamp = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype.getLastTimestamp = async function () {\n    const res = await this._call('getPoolStateValues', []);\n      return res[0]\n    }\n  return klass\n}\nexport const getProtocolFeeAccrued = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype.getProtocolFeeAccrued = async function () {\n    const res = await this._call('getPoolStateValues', []);\n      return fromWei(res[1])\n    }\n  return klass\n}\n\n// getStateValues\nconst getStateValues = (klass) => {\n  klass.prototype.getStateValues = async function () {\n    const res = await this.getPoolStateValues()\n    // update\n    this.state= { ...this.state, ...res}\n    return this.state\n  }\n  return klass\n}\n\nconst getBTokens = (klass) => {\n  klass.prototype.getBTokens = async function (bTokenId) {\n    const bTokenIds = bTokenId ? [bTokenId] : this.bTokenIds\n    const bTokens = await Promise.all(\n      bTokenIds.reduce(\n        (acc, bTokenId) => [...acc, this.getBToken(bTokenId)],\n        []\n      )\n    );\n    // update bToken price\n    for (let i = 0; i < this.bTokenIds.length; i++) {\n      if (i === 0) {\n        bTokens[i].price = \"1\";\n      } else {\n        bTokens[i].price = await offChainOracleFactory(\n          this.chainId,\n          this.bTokens[i].oracleAddress\n        ).getPrice();\n      }\n      bTokens[i].equity = bg(this.bTokens[i].liquidity)\n        .times(this.bTokens[i].price)\n        .times(this.bTokens[i].discount)\n        .plus(this.bTokens[i].pnl)\n        .toString();\n    }\n\n    // update\n    if (bTokenId) {\n      const bTokenIndex = this.bTokenIds.indexOf(bTokenId)\n      if (bTokenIndex > -1) {\n        this.bTokens[bTokenIndex] = bTokens[0]\n      }\n    } else {\n      this.bTokens = bTokens\n    }\n    return bTokens\n  };\n  return klass\n};\n\n// getSymbols()\nconst getSymbols = (klass) => {\n  klass.prototype.getSymbols = async function (symbolId) {\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\n    const symbols = await Promise.all(\n      symbolIds.reduce(\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n        []\n      )\n    );\n\n    const indexPrices = await Promise.all(\n      symbols.map((s) => {\n        const oracleAddress = this.offChainOracleSymbolIds.includes(s.symbolId)\n          ? ''\n          : s.oracleAddress;\n        return getOraclePriceFromCache2.get(\n          this.chainId,\n          s.symbol,\n          oracleAddress\n        );\n      })\n    );\n    symbols.forEach((s, index) => {\n      s.indexPrice = indexPrices[index];\n      s.tradersNetPosition = bg(s.tradersNetVolume).times(s.multiplier).toString();\n      s.notional = bg(s.tradersNetPosition).abs().times(s.indexPrice).toString(),\n      s.K = calculateK(s.indexPrice, this.state.liquidity, s.alpha).toString();\n      s.dpmmPrice = calculateDpmmPrice(\n        s.indexPrice,\n        s.K,\n        s.tradersNetVolume,\n        s.multiplier\n      );\n\n      const pnl = calculateDpmmCost(\n        s.indexPrice,\n        s.K,\n        s.tradersNetVolume,\n        s.multiplier,\n        bg(s.tradersNetVolume).negated().toString()\n      )\n        .negated()\n        .minus(s.tradersNetCost);\n      const ratePerSecond = bg(s.dpmmPrice)\n        .minus(s.indexPrice)\n        .times(s.multiplier)\n        .div(this.fundingPeriod)\n        .toString();\n      const diff = bg(Math.floor(Date.now() / 1000)).minus(\n        this.state.lastTimestamp\n      );\n      s.fundingPerSecond = ratePerSecond\n      s.funding = bg(ratePerSecond).times(SECONDS_IN_A_DAY).toString()\n      s.pnl = pnl.toString()\n      s.undistributedPnl = bg(s.distributedUnrealizedPnl)\n        .minus(pnl)\n        .plus(bg(ratePerSecond).times(diff).times(s.tradersNetVolume))\n        .toString();\n    });\n\n    // update\n    if (symbolId) {\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\n      this.symbols[symbolIndex] = symbols[0]\n    } else {\n      this.symbols = symbols\n    }\n    \n    return symbols\n  };\n  return klass\n};\n\n// get traders positions\nconst getPositions = (klass) => {\n  klass.prototype.getPositions = async function (account, symbolId) {\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\n    const positions = await Promise.all(\n      symbolIds.reduce(\n        (acc, symbolId) => [...acc, this.pToken.getPosition(account, symbolId)],\n        []\n      )\n    );\n    const timeDiff = bg(Math.floor(Date.now() / 1000)).minus(\n      this.state.lastTimestamp\n    );\n    positions.forEach((p, index) => {\n      const symbol = this.symbols[index];\n      p.fundingAccrued = bg(p.volume)\n        .times(\n          bg(symbol.cumulativeFundingRate)\n            .plus(bg(timeDiff).times(this.symbols[index].fundingPerSecond))\n            .minus(p.lastCumulativeFundingRate)\n        )\n        .toString();\n      p.traderPnl = calculateDpmmCost(\n        symbol.indexPrice,\n        symbol.K,\n        symbol.tradersNetVolume,\n        symbol.multiplier,\n        bg(p.volume).negated().toString()\n      )\n        .negated()\n        .minus(p.cost).toString();\n\n      p.notional = bg(p.volume).abs().times(symbol.indexPrice).times(symbol.multiplier).toString()\n    });\n\n    // update\n    if (symbolId) {\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\n      if (symbolIndex > -1) {\n        this.positions[symbolIndex] = positions[0]\n      }\n    } else {\n      this.positions = positions\n    }\n\n    return positions\n  };\n  return klass\n};\n\nconst isBTokensUpdated = (klass) => {\n  klass.prototype.isBTokensUpdated = function() {\n    return Array.isArray(this.bTokens) && this.bTokens.length > 0 && this.bTokens[0].price != null\n  }\n  return klass\n}\nconst isSymbolsUpdated = (klass) => {\n  klass.prototype.isSymbolsUpdated = function() {\n    return Array.isArray(this.symbols) && this.symbols.length > 0 && this.symbols[0].indexPrice != null\n  }\n  return klass\n}\nconst isPositionsUpdated = (klass) => {\n  klass.prototype.isPositionsUpdated = function() {\n    return Array.isArray(this.positions) && this.positions.length > 0 && this.positions[0].fundingAccrued != null\n  }\n  return klass\n}\n\nconst getDynamicEquity = (klass) => {\n  klass.prototype['getDynamicEquity'] = async function() {\n    if (!this.isSymbolsUpdated()) {\n      await this.getSymbols();\n    }\n    //console.log(this.symbols)\n    const res = bg(this.state.liquidity)\n      .plus(\n        this.symbols.reduce((acc, s) => acc.plus(s.undistributedPnl), bg(0))\n      )\n      .toString();\n    this.state.dynamicEquity = res;\n    return res;\n  }\n  return klass\n}\n\nconst getTraderLiquidity = (klass) => {\n  klass.prototype[\"getTraderLiquidity\"] = async function(account) {\n    return await this.lToken.balanceOf(account)\n  }\n  return klass\n}\n\nconst getPoolRequiredMargin = (klass) => {\n  klass.prototype['getPoolRequiredMargin'] = async function () {\n    if (!this.isSymbolsUpdated()) {\n      await this.getSymbols()\n    }\n    const { minPoolMarginRatio } = this.parameters;\n    return this.symbols\n      .reduce(\n        (acc, s) =>\n          acc.plus(\n            bg(s.notional)\n          ),\n        bg(0)\n      )\n      .times(minPoolMarginRatio).toString()\n  };\n  return klass\n}\n\nconst getTraderMarginStatus = (klass) => {\n  klass.prototype['getTraderMarginStatus'] = async function (account) {\n    if (!this.isBTokensUpdated()) {\n      await this.getSymbols()\n    }\n    if (!this.isSymbolsUpdated()) {\n      await this.getSymbols()\n    }\n    if (!this.isPositionsUpdated()) {\n      await this.getPositions(account)\n    }\n    if (!this.userState.margins) {\n      this.userState.margins = await this.pToken.getMargins(account);\n    }\n\n    this.userState.totapPnl = this.positions.reduce((acc, p) => acc.plus(p.traderPnl), bg(0)).toString()\n    //this.userState.totalEquity = bg(this.userState.totalPnl).plus(this.userState.margins[0])\n    this.userState.totalEquity = this.userState.margins.reduce(\n      (acc, m, i) =>\n        acc.plus(\n          bg(m).times(this.bTokens[i].price).times(this.bTokens[i].discount)\n        ),\n      bg(this.userState.totalPnl)\n    );\n\n    this.userState.totalNotional = this.positions.reduce(\n      (acc, p) => acc.plus(p.notional),\n      bg(0)\n    );\n\n    return [this.userState.totalEquity, this.userState.totalNotional];\n  };\n  return klass\n}\n\nconst formatTradeEvent = (klass) => {\n  klass.prototype['formatTradeEvent'] = async function (event) {\n    const info = event.returnValues;\n    const tradeVolume = deriToNatural(info.tradeVolume);\n    const block = await getBlockInfo(this.chainId, event.blockNumber);\n    const symbolId = info.symbolId;\n    const index = this.activeSymbolIds.indexOf(symbolId);\n    const symbol = this.symbols[index];\n    const tradeFee = info.tradeFee;\n\n    const direction =\n      tradeFee !== '-1'\n        ? bg(tradeVolume).gt(0)\n          ? 'LONG'\n          : 'SHORT'\n        : 'LIQUIDATION';\n    const price = bg(info.tradeCost)\n      .div(info.tradeVolume)\n      .div(symbol.multiplier)\n      .toString();\n    const notional = bg(tradeVolume)\n      .abs()\n      .times(price)\n      .times(symbol.multiplier)\n      .toString();\n\n    const res = {\n      symbolId: info.symbolId,\n      symbol: symbol.symbol,\n      trader: info.trader,\n      direction,\n      volume: bg(tradeVolume).abs().toString(),\n      price: price,\n      indexPrice: deriToNatural(info.indexPrice).toString(),\n      notional: notional,\n      transactionFee:\n        tradeFee === '-1' ? '0' : deriToNatural(tradeFee).toString(),\n      transactionHash: event.transactionHash,\n      time: block.timestamp * 1000,\n      extra: {},\n    };\n    return res;\n  };\n  return klass;\n};\n\n\nexport const perpetualPoolDpmmAdapter = (klass) => {\n    // klass = processMethod(klass, 'symbol', []);\n    klass = addMethods(klass, [\n        init,\n        getConfig,\n        getLiquidity,\n        getLastTimestamp,\n        getProtocolFeeAccrued,\n        getStateValues,\n        getBTokens,\n        getSymbols,\n        getPositions,\n        isBTokensUpdated,\n        isSymbolsUpdated,\n        isPositionsUpdated,\n        getDynamicEquity,\n        getTraderLiquidity,\n        getTraderMarginStatus,\n        getPoolRequiredMargin,\n        formatTradeEvent,\n    ])\n    klass = overrideMethods(klass, [\n      [\n        processMethod,\n        \"getParameters\",\n        [\n          \"initialMarginRatio\",\n          \"liquidationCutRatio\",\n          \"maintenanceMarginRatio\",\n          \"maxLiquidationReward\",\n          \"minBToken0Ratio\",\n          \"minPoolMarginRatio\",\n          \"protocolFeeCollectRatio\",\n        ],\n      ],\n      [\n        processMethod,\n        \"getBToken\",\n        [\"discount\", \"price\", \"liquidity\", \"pnl\", \"cumulativePnl\"],\n      ],\n      [\n        processMethod,\n        \"getSymbol\",\n        [\n          \"multiplier\",\n          \"feeRatio\",\n          //\"fundingRateCoefficient\",\n          \"alpha\",\n          \"distributedUnrealizedPnl\",\n          //\"price\",\n          \"cumulativeFundingRate\",\n          \"tradersNetVolume\",\n          \"tradersNetCost\",\n        ],\n      ],\n      [processMethod, \"getPoolStateValues\", [\"protocolFeeAccrued\"]],\n    ]);\n    return klass\n}\nexport const perpetualPoolRouterDpmmAdapter = (klass) => {\n  // klass = processMethod(klass, 'symbol', []);\n  klass = overrideMethods(klass, [\n    [processTxMethod, 'addLiquidity', ['2']],\n    //[processTxMethod, 'addLiquidityWithPrices', ['2']],\n    [processTxMethod, 'removeLiquidity', ['2']],\n    //[processTxMethod, 'removeLiquidityWithPrices', ['2']],\n    [processTxMethod, 'addMargin', ['2']],\n    //[processTxMethod, 'addMarginWithPrices', ['2']],\n    [processTxMethod, 'removeMargin', ['2']],\n    //[processTxMethod, 'removeMarginWithPrices', ['2']],\n    [processTxMethod, 'trade', ['2']],\n    //[processTxMethod, 'tradeWithPrices', ['2']],\n  ]);\n  return klass;\n};\n\nexport const lTokenAdapter = (klass) => {\n  // klass = processMethod(klass, 'symbol', []);\n  klass = overrideMethods(klass, [\n    [processMethod, 'getAsset', ['liquidity', 'pnl', 'lastCumulativePnl']],\n    [processMethod, 'getAssets', ['liquidity', 'pnl', 'lastCumulativePnl']],\n  ]);\n  return klass;\n};\n\nexport const pTokenAdapter = (klass) => {\n  klass = overrideMethods(klass, [\n    [processMethod, 'getMargins'],\n    [\n      processMethod,\n      'getPosition',\n      ['cost', 'volume', 'lastCumulativeFundingRate'],\n    ],\n    [\n      processMethod,\n      'getPositions',\n      ['cost', 'volume', 'lastCumulativeFundingRate'],\n    ],\n  ]);\n  return klass;\n};","// this file is generated by script, don't modify it !!!\nexport const lTokenAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"numBTokens_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"ApprovalForAll\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"liquidity\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"pnl\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"lastCumulativePnl\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"UpdateAsset\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"exists\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getApproved\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getAsset\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"liquidity\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"pnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativePnl\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct ILToken.Asset\",\n                \"name\": \"\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getAssets\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"liquidity\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"pnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativePnl\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct ILToken.Asset[]\",\n                \"name\": \"\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getTokenId\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"isApprovedForAll\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"numBTokens\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ownerOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"safeTransferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"bytes\",\n                \"name\": \"data\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"safeTransferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"setApprovalForAll\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"num\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setNumBTokens\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newPool\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPool\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes4\",\n                \"name\": \"interfaceId\",\n                \"type\": \"bytes4\"\n            }\n        ],\n        \"name\": \"supportsInterface\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalMinted\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"liquidity\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"pnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativePnl\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct ILToken.Asset\",\n                \"name\": \"asset\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"name\": \"updateAsset\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nexport const pTokenAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"numSymbols_\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"numBTokens_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"ApprovalForAll\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"amount\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"UpdateMargin\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"volume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"cost\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"lastCumulativeFundingRate\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"UpdatePosition\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"exists\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getApproved\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getMargin\",\n        \"outputs\": [\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getMargins\",\n        \"outputs\": [\n            {\n                \"internalType\": \"int256[]\",\n                \"name\": \"\",\n                \"type\": \"int256[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getPosition\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"volume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPToken.Position\",\n                \"name\": \"\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getPositions\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"volume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPToken.Position[]\",\n                \"name\": \"\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getTokenId\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"isApprovedForAll\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"numBTokens\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"numSymbols\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ownerOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"safeTransferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"bytes\",\n                \"name\": \"data\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"safeTransferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"setApprovalForAll\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"num\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setNumBTokens\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"num\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setNumSymbols\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newPool\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPool\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes4\",\n                \"name\": \"interfaceId\",\n                \"type\": \"bytes4\"\n            }\n        ],\n        \"name\": \"supportsInterface\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalMinted\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"amount\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"updateMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"int256[]\",\n                \"name\": \"margins\",\n                \"type\": \"int256[]\"\n            }\n        ],\n        \"name\": \"updateMargins\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"volume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPToken.Position\",\n                \"name\": \"position\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"name\": \"updatePosition\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nexport const perpetualPoolAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256[9]\",\n                \"name\": \"parameters\",\n                \"type\": \"uint256[9]\"\n            },\n            {\n                \"internalType\": \"address[4]\",\n                \"name\": \"addresses\",\n                \"type\": \"address[4]\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"lp\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"AddLiquidity\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"AddMargin\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"liquidator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"reward\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Liquidate\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"collector\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ProtocolFeeCollection\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"lp\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"RemoveLiquidity\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"RemoveMargin\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"indexPrice\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"tradeVolume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"tradeCost\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"tradeFee\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"Trade\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"bTokenAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"swapperAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"oracleAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"decimals\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"discount\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"liquidity\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"pnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cumulativePnl\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPool.BTokenInfo\",\n                \"name\": \"info\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"name\": \"addBToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"lp\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addLiquidity\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"string\",\n                        \"name\": \"symbol\",\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"oracleAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"multiplier\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"feeRatio\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"alpha\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"distributedUnrealizedPnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"tradersNetVolume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"tradersNetCost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPool.SymbolInfo\",\n                \"name\": \"info\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"name\": \"addSymbol\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"targetPool\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"approveBTokenForTargetPool\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"collectProtocolFee\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getAddresses\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"lTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"pTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"routerAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"protocolFeeCollector\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getBToken\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"bTokenAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"swapperAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"oracleAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"decimals\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"discount\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"liquidity\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"pnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cumulativePnl\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPool.BTokenInfo\",\n                \"name\": \"\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getLengths\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getParameters\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"decimals0\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"minBToken0Ratio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"minPoolMarginRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"initialMarginRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"maintenanceMarginRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"minLiquidationReward\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"maxLiquidationReward\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"liquidationCutRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"protocolFeeCollectRatio\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getPoolStateValues\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"lastTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"protocolFeeAccrued\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getSymbol\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"string\",\n                        \"name\": \"symbol\",\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"oracleAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"multiplier\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"feeRatio\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"alpha\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"distributedUnrealizedPnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"tradersNetVolume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"tradersNetCost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPool.SymbolInfo\",\n                \"name\": \"\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getSymbolOracle\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"liquidator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"liquidate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sourcePool\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"balance\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"bTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"swapperAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"decimals\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"discount\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"liquidity\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"pnl\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"cumulativePnl\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"migrateBToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"lastTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"protocolFeeAccrued\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"migratePoolStateValues\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"multiplier\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"feeRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"alpha\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"distributedUnrealizedPnl\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"tradersNetVolume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"tradersNetCost\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"cumulativeFundingRate\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"migrateSymbol\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"lp\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"removeLiquidity\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"removeMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"swapperAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"discount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setBTokenParameters\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"targetPool\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPoolForLTokenAndPToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"feeRatio\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"alpha\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setSymbolParameters\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"tradeVolume\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"trade\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nexport const perpetualPoolRouterAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"lTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"pTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"liquidatorQualifierAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"oldController\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"newController\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"ChangeController\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"migrationTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"source\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"target\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"ExecuteMigration\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"migrationTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"source\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"target\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"PrepareMigration\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"bTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"swapperAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"discount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addBToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addLiquidity\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"addLiquidityWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"addMarginWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"multiplier\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"feeRatio\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"alpha\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addSymbol\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"approveMigration\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimNewController\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"controller\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sourceRouter\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"executeMigration\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sourceRouter\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"lastTimestamp\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"executeMigrationWithTimestamp\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"liquidate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"pTokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"liquidate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"pTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"liquidateWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"liquidateWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"liquidatorQualifier\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"migrationDestination\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"migrationTimestamp\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"target\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"graceDays\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"prepareMigration\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"removeLiquidity\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"removeLiquidityWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"removeMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"removeMarginWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"swapperAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"discount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setBTokenParameters\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"qualifierAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setLiquidatorQualifier\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newController\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setNewController\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"poolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPool\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"feeRatio\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"alpha\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setSymbolParameters\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"tradeVolume\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"trade\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"tradeVolume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"tradeWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { contractFactory } from '../../shared/utils/index.js';\nimport { perpetualPoolDpmmAdapter, perpetualPoolRouterDpmmAdapter, lTokenAdapter, pTokenAdapter } from './adapter.js';\n\nimport { LToken } from './gen/LToken.js';\nimport { PToken } from './gen/PToken.js';\nimport { PerpetualPool} from './gen/PerpetualPool';\nimport { PerpetualPoolRouter} from './gen/PerpetualPoolRouter';\n\nexport const lTokenFactory = contractFactory(lTokenAdapter(LToken));\nexport const pTokenFactory = contractFactory(pTokenAdapter(PToken));\n\n// dpmm\nexport const perpetualPoolDpmmFactory = contractFactory(perpetualPoolDpmmAdapter(PerpetualPool));\nexport const perpetualPoolRouterDpmmFactory = contractFactory(perpetualPoolRouterDpmmAdapter(PerpetualPoolRouter));\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { lTokenAbi } from '../abi/lTokenAbi.js'\n\nexport class LToken extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, lTokenAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async balanceOf(owner) {\n    const res = await this._call('balanceOf', [owner])\n    return deleteIndexedKey(res)\n  }\n  //  async exists(owner) {\n  //    const res = await this._call('exists', [owner])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async getApproved(tokenId) {\n  //    const res = await this._call('getApproved', [tokenId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getAsset(owner, bTokenId) {\n    const res = await this._call('getAsset', [owner, bTokenId])\n    return deleteIndexedKey(res)\n  }\n  async getAssets(owner) {\n    const res = await this._call('getAssets', [owner])\n    return deleteIndexedKey(res)\n  }\n  //  async getTokenId(owner) {\n  //    const res = await this._call('getTokenId', [owner])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async isApprovedForAll(owner, operator) {\n  //    const res = await this._call('isApprovedForAll', [owner, operator])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async name() {\n  //    const res = await this._call('name', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async numBTokens() {\n  //    const res = await this._call('numBTokens', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async ownerOf(tokenId) {\n  //    const res = await this._call('ownerOf', [tokenId])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async pool() {\n  //    const res = await this._call('pool', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async supportsInterface(interfaceId) {\n  //    const res = await this._call('supportsInterface', [interfaceId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  //  async totalMinted() {\n  //    const res = await this._call('totalMinted', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async approve(accountAddress, operator, tokenId) {\n  //    return await this._transact('approve', [operator, tokenId], accountAddress)\n  //  }\n  //  async burn(accountAddress, owner) {\n  //    return await this._transact('burn', [owner], accountAddress)\n  //  }\n  //  async mint(accountAddress, owner) {\n  //    return await this._transact('mint', [owner], accountAddress)\n  //  }\n  //  async safeTransferFrom(accountAddress, from, to, tokenId) {\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\n  //  }\n  //  async safeTransferFrom(accountAddress, from, to, tokenId, data) {\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\n  //  }\n  //  async setApprovalForAll(accountAddress, operator, approved) {\n  //    return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\n  //  }\n  //  async setNumBTokens(accountAddress, num) {\n  //    return await this._transact('setNumBTokens', [num], accountAddress)\n  //  }\n  //  async setPool(accountAddress, newPool) {\n  //    return await this._transact('setPool', [newPool], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, tokenId) {\n  //    return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\n  //  }\n  //  async updateAsset(accountAddress, owner, bTokenId, asset) {\n  //    return await this._transact('updateAsset', [owner, bTokenId, asset], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { pTokenAbi } from '../abi/pTokenAbi.js'\n\nexport class PToken extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, pTokenAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async balanceOf(owner) {\n    const res = await this._call('balanceOf', [owner])\n    return deleteIndexedKey(res)\n  }\n  async exists(owner) {\n    const res = await this._call('exists', [owner])\n    return deleteIndexedKey(res)\n  }\n  //  async getApproved(tokenId) {\n  //    const res = await this._call('getApproved', [tokenId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getMargin(owner, bTokenId) {\n    const res = await this._call('getMargin', [owner, bTokenId])\n    return deleteIndexedKey(res)\n  }\n  async getMargins(owner) {\n    const res = await this._call('getMargins', [owner])\n    return deleteIndexedKey(res)\n  }\n  async getPosition(owner, symbolId) {\n    const res = await this._call('getPosition', [owner, symbolId])\n    return deleteIndexedKey(res)\n  }\n  async getPositions(owner) {\n    const res = await this._call('getPositions', [owner])\n    return deleteIndexedKey(res)\n  }\n  //  async getTokenId(owner) {\n  //    const res = await this._call('getTokenId', [owner])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async isApprovedForAll(owner, operator) {\n  //    const res = await this._call('isApprovedForAll', [owner, operator])\n  //    return deleteIndexedKey(res)\n  //  }\n  async name() {\n    const res = await this._call('name', [])\n    return deleteIndexedKey(res)\n  }\n  async numBTokens() {\n    const res = await this._call('numBTokens', [])\n    return deleteIndexedKey(res)\n  }\n  async numSymbols() {\n    const res = await this._call('numSymbols', [])\n    return deleteIndexedKey(res)\n  }\n  //  async ownerOf(tokenId) {\n  //    const res = await this._call('ownerOf', [tokenId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return deleteIndexedKey(res)\n  }\n  //  async supportsInterface(interfaceId) {\n  //    const res = await this._call('supportsInterface', [interfaceId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  async totalMinted() {\n    const res = await this._call('totalMinted', [])\n    return deleteIndexedKey(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async approve(accountAddress, operator, tokenId) {\n  //    return await this._transact('approve', [operator, tokenId], accountAddress)\n  //  }\n  //  async burn(accountAddress, owner) {\n  //    return await this._transact('burn', [owner], accountAddress)\n  //  }\n  //  async mint(accountAddress, owner) {\n  //    return await this._transact('mint', [owner], accountAddress)\n  //  }\n  //  async safeTransferFrom(accountAddress, from, to, tokenId) {\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\n  //  }\n  //  async safeTransferFrom(accountAddress, from, to, tokenId, data) {\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\n  //  }\n  //  async setApprovalForAll(accountAddress, operator, approved) {\n  //    return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\n  //  }\n  //  async setNumBTokens(accountAddress, num) {\n  //    return await this._transact('setNumBTokens', [num], accountAddress)\n  //  }\n  //  async setNumSymbols(accountAddress, num) {\n  //    return await this._transact('setNumSymbols', [num], accountAddress)\n  //  }\n  //  async setPool(accountAddress, newPool) {\n  //    return await this._transact('setPool', [newPool], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, tokenId) {\n  //    return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\n  //  }\n  //  async updateMargin(accountAddress, owner, bTokenId, amount) {\n  //    return await this._transact('updateMargin', [owner, bTokenId, amount], accountAddress)\n  //  }\n  //  async updateMargins(accountAddress, owner, margins) {\n  //    return await this._transact('updateMargins', [owner, margins], accountAddress)\n  //  }\n  //  async updatePosition(accountAddress, owner, symbolId, position) {\n  //    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { perpetualPoolAbi } from '../abi/perpetualPoolAbi.js'\n\nexport class PerpetualPool extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, perpetualPoolAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async getAddresses() {\n    const res = await this._call('getAddresses', [])\n    return deleteIndexedKey(res)\n  }\n  async getBToken(bTokenId) {\n    const res = await this._call('getBToken', [bTokenId])\n    return deleteIndexedKey(res)\n  }\n  async getLengths() {\n    const res = await this._call('getLengths', [])\n    return deleteIndexedKey(res)\n  }\n  async getParameters() {\n    const res = await this._call('getParameters', [])\n    return deleteIndexedKey(res)\n  }\n  async getPoolStateValues() {\n    const res = await this._call('getPoolStateValues', [])\n    return deleteIndexedKey(res)\n  }\n  async getSymbol(symbolId) {\n    const res = await this._call('getSymbol', [symbolId])\n    return deleteIndexedKey(res)\n  }\n  //  async getSymbolOracle(symbolId) {\n  //    const res = await this._call('getSymbolOracle', [symbolId])\n  //    return deleteIndexedKey(res)\n  //  }\n\n  // tx\n  //  async addBToken(accountAddress, info) {\n  //    return await this._transact('addBToken', [info], accountAddress)\n  //  }\n  //  async addLiquidity(accountAddress, lp, bTokenId, bAmount) {\n  //    return await this._transact('addLiquidity', [lp, bTokenId, bAmount], accountAddress)\n  //  }\n  //  async addMargin(accountAddress, trader, bTokenId, bAmount) {\n  //    return await this._transact('addMargin', [trader, bTokenId, bAmount], accountAddress)\n  //  }\n  //  async addSymbol(accountAddress, info) {\n  //    return await this._transact('addSymbol', [info], accountAddress)\n  //  }\n  //  async approveBTokenForTargetPool(accountAddress, bTokenId, targetPool) {\n  //    return await this._transact('approveBTokenForTargetPool', [bTokenId, targetPool], accountAddress)\n  //  }\n  //  async collectProtocolFee(accountAddress) {\n  //    return await this._transact('collectProtocolFee', [], accountAddress)\n  //  }\n  //  async liquidate(accountAddress, liquidator, trader) {\n  //    return await this._transact('liquidate', [liquidator, trader], accountAddress)\n  //  }\n  //  async migrateBToken(accountAddress, sourcePool, balance, bTokenAddress, swapperAddress, oracleAddress, decimals, discount, liquidity, pnl, cumulativePnl) {\n  //    return await this._transact('migrateBToken', [sourcePool, balance, bTokenAddress, swapperAddress, oracleAddress, decimals, discount, liquidity, pnl, cumulativePnl], accountAddress)\n  //  }\n  //  async migratePoolStateValues(accountAddress, lastTimestamp, protocolFeeAccrued) {\n  //    return await this._transact('migratePoolStateValues', [lastTimestamp, protocolFeeAccrued], accountAddress)\n  //  }\n  //  async migrateSymbol(accountAddress, symbol, oracleAddress, multiplier, feeRatio, alpha, distributedUnrealizedPnl, tradersNetVolume, tradersNetCost, cumulativeFundingRate) {\n  //    return await this._transact('migrateSymbol', [symbol, oracleAddress, multiplier, feeRatio, alpha, distributedUnrealizedPnl, tradersNetVolume, tradersNetCost, cumulativeFundingRate], accountAddress)\n  //  }\n  //  async removeLiquidity(accountAddress, lp, bTokenId, bAmount) {\n  //    return await this._transact('removeLiquidity', [lp, bTokenId, bAmount], accountAddress)\n  //  }\n  //  async removeMargin(accountAddress, trader, bTokenId, bAmount) {\n  //    return await this._transact('removeMargin', [trader, bTokenId, bAmount], accountAddress)\n  //  }\n  //  async setBTokenParameters(accountAddress, bTokenId, swapperAddress, oracleAddress, discount) {\n  //    return await this._transact('setBTokenParameters', [bTokenId, swapperAddress, oracleAddress, discount], accountAddress)\n  //  }\n  //  async setPoolForLTokenAndPToken(accountAddress, targetPool) {\n  //    return await this._transact('setPoolForLTokenAndPToken', [targetPool], accountAddress)\n  //  }\n  //  async setSymbolParameters(accountAddress, symbolId, oracleAddress, feeRatio, alpha) {\n  //    return await this._transact('setSymbolParameters', [symbolId, oracleAddress, feeRatio, alpha], accountAddress)\n  //  }\n  //  async trade(accountAddress, trader, symbolId, tradeVolume) {\n  //    return await this._transact('trade', [trader, symbolId, tradeVolume], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { perpetualPoolRouterAbi } from '../abi/perpetualPoolRouterAbi.js'\n\nexport class PerpetualPoolRouter extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async controller() {\n    const res = await this._call('controller', [])\n    return deleteIndexedKey(res)\n  }\n  //  async liquidatorQualifier() {\n  //    const res = await this._call('liquidatorQualifier', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async migrationDestination() {\n  //    const res = await this._call('migrationDestination', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async migrationTimestamp() {\n  //    const res = await this._call('migrationTimestamp', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async addBToken(accountAddress, bTokenAddress, swapperAddress, oracleAddress, discount) {\n  //    return await this._transact('addBToken', [bTokenAddress, swapperAddress, oracleAddress, discount], accountAddress)\n  //  }\n  async addLiquidity(accountAddress, bTokenId, bAmount) {\n    return await this._transact('addLiquidity', [bTokenId, bAmount], accountAddress)\n  }\n  async addLiquidityWithPrices(accountAddress, bTokenId, bAmount, infos) {\n    return await this._transact('addLiquidityWithPrices', [bTokenId, bAmount, infos], accountAddress)\n  }\n  async addMargin(accountAddress, bTokenId, bAmount) {\n    return await this._transact('addMargin', [bTokenId, bAmount], accountAddress)\n  }\n  async addMarginWithPrices(accountAddress, bTokenId, bAmount, infos) {\n    return await this._transact('addMarginWithPrices', [bTokenId, bAmount, infos], accountAddress)\n  }\n  //  async addSymbol(accountAddress, symbol, oracleAddress, multiplier, feeRatio, alpha) {\n  //    return await this._transact('addSymbol', [symbol, oracleAddress, multiplier, feeRatio, alpha], accountAddress)\n  //  }\n  //  async approveMigration(accountAddress) {\n  //    return await this._transact('approveMigration', [], accountAddress)\n  //  }\n  //  async claimNewController(accountAddress) {\n  //    return await this._transact('claimNewController', [], accountAddress)\n  //  }\n  //  async executeMigration(accountAddress, sourceRouter) {\n  //    return await this._transact('executeMigration', [sourceRouter], accountAddress)\n  //  }\n  //  async executeMigrationWithTimestamp(accountAddress, sourceRouter, lastTimestamp) {\n  //    return await this._transact('executeMigrationWithTimestamp', [sourceRouter, lastTimestamp], accountAddress)\n  //  }\n  async liquidate(accountAddress, trader) {\n    return await this._transact('liquidate', [trader], accountAddress)\n  }\n  async liquidateWithPrices(accountAddress, trader, infos) {\n    return await this._transact('liquidateWithPrices', [trader, infos], accountAddress)\n  }\n  //  async prepareMigration(accountAddress, target, graceDays) {\n  //    return await this._transact('prepareMigration', [target, graceDays], accountAddress)\n  //  }\n  async removeLiquidity(accountAddress, bTokenId, bAmount) {\n    return await this._transact('removeLiquidity', [bTokenId, bAmount], accountAddress)\n  }\n  async removeLiquidityWithPrices(accountAddress, bTokenId, bAmount, infos) {\n    return await this._transact('removeLiquidityWithPrices', [bTokenId, bAmount, infos], accountAddress)\n  }\n  async removeMargin(accountAddress, bTokenId, bAmount) {\n    return await this._transact('removeMargin', [bTokenId, bAmount], accountAddress)\n  }\n  async removeMarginWithPrices(accountAddress, bTokenId, bAmount, infos) {\n    return await this._transact('removeMarginWithPrices', [bTokenId, bAmount, infos], accountAddress)\n  }\n  //  async setBTokenParameters(accountAddress, bTokenId, swapperAddress, oracleAddress, discount) {\n  //    return await this._transact('setBTokenParameters', [bTokenId, swapperAddress, oracleAddress, discount], accountAddress)\n  //  }\n  //  async setLiquidatorQualifier(accountAddress, qualifierAddress) {\n  //    return await this._transact('setLiquidatorQualifier', [qualifierAddress], accountAddress)\n  //  }\n  //  async setNewController(accountAddress, newController) {\n  //    return await this._transact('setNewController', [newController], accountAddress)\n  //  }\n  //  async setPool(accountAddress, poolAddress) {\n  //    return await this._transact('setPool', [poolAddress], accountAddress)\n  //  }\n  //  async setSymbolParameters(accountAddress, symbolId, oracleAddress, feeRatio, alpha) {\n  //    return await this._transact('setSymbolParameters', [symbolId, oracleAddress, feeRatio, alpha], accountAddress)\n  //  }\n  async trade(accountAddress, symbolId, tradeVolume) {\n    return await this._transact('trade', [symbolId, tradeVolume], accountAddress)\n  }\n  async tradeWithPrices(accountAddress, symbolId, tradeVolume, infos) {\n    return await this._transact('tradeWithPrices', [symbolId, tradeVolume, infos], accountAddress)\n  }\n\n}","import { contractFactory } from \"../../activity/utils\"\nimport { bg, max, min } from \"../../shared\"\nimport { SECONDS_IN_A_DAY } from \"../../shared/config\";\nimport { getIndexInfo } from \"../../shared/config/token\"\nimport { checkSymbolId, getLiquidity } from \"../../shared/utils/derijsnext\"\nimport {\n  calculateLiquidationPrice,\n  calculateMaxRemovableLiquidity,\n} from '../../v2/calculation';\nimport { perpetualPoolDpmmFactory } from './factory';\nimport { getOraclePriceFromCache2 } from '../../shared/utils/oracle';\nimport { calculateDpmmPrice } from \"../../v2_lite_dpmm/calc\";\nimport { ERC20Factory } from \"../../shared/contract/factory\";\nimport { liquidatePriceCache } from \"../../shared/api/api_globals\";\n\n// PoolApi \nexport class PoolApi {\n  constructor(chainId, poolAddress) {\n    this.chainId = chainId;\n    this.poolAddress = poolAddress;\n    this.pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n  }\n\n  async init(usedByEstimatedApi) {\n    await this.pool.init(usedByEstimatedApi);\n  }\n\n  // API\n  async getLiquidityInfo(accountAddress, bTokenId) {\n    //if (!this.pool.isSymbolsUpdated()) {\n      await this.pool.getSymbols();\n    //}\n    const pool = this.pool;\n    const [lTokenAsset, bTokens] = await Promise.all([\n      pool.lToken.getAsset(accountAddress, bTokenId),\n      pool.getBTokens(),\n    ]);\n    const { minPoolMarginRatio } = pool.parameters;\n    const bTokenIndex = pool.bTokenIds.indexOf(bTokenId.toString());\n    const { liquidity: poolLiquidity } = bTokens[bTokenIndex];\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset;\n    const cost = pool.symbols.reduce((acc, s) => acc.plus(s.notional), bg(0));\n    const totalPnl = pool.symbols.reduce((acc, s) => acc.plus(s.pnl), bg(0));\n\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\n      if (index === parseInt(bTokenId)) {\n        return accum.plus(b.pnl);\n      } else {\n        return accum.plus(\n          bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\n        );\n      }\n    }, bg(0));\n    const maxRemovableShares = calculateMaxRemovableLiquidity(\n      bTokens[bTokenIndex],\n      liquidity,\n      cost,\n      totalPnl,\n      restLiquidity,\n      minPoolMarginRatio\n    ).toString();\n    const approximatePnl = bg(pnl)\n      .plus(\n        bg(bTokens[bTokenIndex].cumulativePnl)\n          .minus(lastCumulativePnl)\n          .times(liquidity)\n      )\n      .toString();\n\n    return {\n      poolLiquidity,\n      shares: liquidity,\n      maxRemovableShares,\n      pnl: approximatePnl,\n    };\n  }\n\n  async getSpecification(symbolId) {\n    await this.init();\n    const pool = this.pool\n    const {\n      minPoolMarginRatio,\n      initialMarginRatio,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      maintenanceMarginRatio,\n      minBToken0Ratio,\n    } = pool.parameters;\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbolInfo = pool.symbols[symbolIndex];\n\n    const { symbol, multiplier, feeRatio } = symbolInfo;\n\n    return {\n      symbol,\n      bTokenSymbol: pool.bTokenSymbols,\n      bTokenMultiplier: pool.bTokens.map((b) => b.discount),\n      multiplier,\n      feeRatio,\n      fundingRateCoefficient: bg(1).div(pool.fundingPeriod).toString(),\n      minPoolMarginRatio,\n      minInitialMarginRatio: initialMarginRatio,\n      minMaintenanceMarginRatio: maintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n      indexConstituents: getIndexInfo(symbol),\n    };\n  }\n\n  async getPositionInfo(accountAddress, symbolId) {\n    const pool = this.pool;\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const oracleAddress =\n      pool.offChainOracleSymbolIds.indexOf(symbolId) > -1\n        ? ''\n        : pool.symbols[symbolIndex].oracleAddress;\n    const [\n      bTokens,\n      symbols,\n      lastTimestamp,\n      margins,\n      price,\n    ] = await Promise.all([\n      pool.getBTokens(),\n      pool.getSymbols(),\n      pool.getLastTimestamp(),\n      pool.pToken.getMargins(accountAddress),\n      getOraclePriceFromCache2.get(\n        this.chainId,\n        pool.symbols[symbolIndex].symbol,\n        oracleAddress\n      ),\n    ]);\n    const positions = await pool.getPositions(accountAddress)\n\n    const symbol = symbols[symbolIndex];\n    const position = positions[symbolIndex];\n    // const { volume } = position\n    // const { multiplier, indexPrice } = symbol\n    const margin = bTokens\n      .reduce(\n        (acc, b, index) =>\n          acc.plus(bg(b.price).times(b.discount).times(margins[index])),\n        bg(0)\n      )\n      .toString();\n    const marginHeld = symbols.reduce((acc, s, index) => {\n      return acc.plus(\n        bg(s.indexPrice)\n          .times(s.multiplier)\n          .times(positions[index].volume)\n          .times(initialMarginRatio)\n          .abs()\n      );\n    }, bg(0));\n    const marginHeldBySymbol = bg(position.volume)\n      .times(symbol.multiplier)\n      .times(symbol.indexPrice)\n      .times(initialMarginRatio)\n      .abs();\n\n    const unrealizedPnl = positions.reduce(\n      (acc, p) => acc.plus(p.traderPnl),\n      bg(0)\n    );\n    const unrealizedPnlList = symbols.map((s, index) => {\n      return [s.symbol, positions[index].traderPnl];\n    });\n    const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\n    const dynamicCost = symbols.reduce((acc, s, index) => {\n      if (index !== parseInt(symbolId)) {\n        return acc.plus(\n          bg(positions[index].volume).times(s.dpmmPrice).times(s.multiplier)\n        );\n      } else {\n        return acc;\n      }\n    }, bg(0));\n    const fundingFee = bg(symbol.cumulativeFundingRate)\n      .minus(position.lastCumulativeFundingRate)\n      .plus(\n        bg(symbol.dpmmPrice)\n          .minus(symbol.indexPrice)\n          .times(symbol.multiplier)\n          .div(pool.fundingPeriod)\n          .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\n      )\n      .times(position.volume)\n      .toString();\n\n    // set liquidatePrice cache\n    liquidatePriceCache.set(this.poolAddress, {\n      volume: position.volume,\n      margin,\n      totalCost,\n      dynamicCost,\n      price,\n      multiplier: symbol.multiplier,\n      minMaintenanceMarginRatio: maintenanceMarginRatio,\n    });\n\n    return {\n      symbol: symbol.symbol,\n      price: price,\n      markPrice: symbol.dpmmPrice.toString(),\n      volume: bg(position.volume).times(symbol.multiplier).toString(),\n      averageEntryPrice: bg(position.volume).eq(0)\n        ? '0'\n        : bg(position.cost)\n            .div(position.volume)\n            .div(symbol.multiplier)\n            .toString(),\n      margin: margin,\n      marginHeld: marginHeld.toString(),\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\n      unrealizedPnl: unrealizedPnl.toString(),\n      unrealizedPnlList,\n      fundingFee,\n      liquidationPrice: calculateLiquidationPrice(\n        position.volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        symbol.multiplier,\n        maintenanceMarginRatio\n      ).toString(),\n    };\n  }\n\n  async getPositionInfos(accountAddress) {\n    const pool = this.pool;\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\n    const [\n      bTokens,\n      symbols,\n      lastTimestamp,\n      margins,\n    ] = await Promise.all([\n      pool.getBTokens(),\n      pool.getSymbols(),\n      //pool.getPositions(accountAddress),\n      pool.getLastTimestamp(),\n      pool.pToken.getMargins(accountAddress),\n    ]);\n    const positions = await pool.getPositions(accountAddress)\n\n    const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\n\n    return positions\n      .map((p, index) => {\n        const symbolIndex = index;\n        const symbol = symbols[symbolIndex];\n        const position = positions[symbolIndex];\n        const margin = bTokens\n          .reduce(\n            (acc, b, index) =>\n              acc.plus(bg(b.price).times(b.discount).times(margins[index])),\n            bg(0)\n          )\n          .toString();\n        const marginHeld = symbols.reduce((acc, s, index) => {\n          return acc.plus(\n            bg(s.indexPrice)\n              .times(s.multiplier)\n              .times(positions[index].volume)\n              .times(initialMarginRatio)\n              .abs()\n          );\n        }, bg(0));\n        const marginHeldBySymbol = bg(position.volume)\n          .times(symbol.multiplier)\n          .times(symbol.indexPrice)\n          .times(initialMarginRatio)\n          .abs();\n        const unrealizedPnl = p.traderPnl\n        const dynamicCost = symbols.reduce((acc, s, idx) => {\n          if (idx !== index) {\n            return acc.plus(\n              bg(positions[idx].volume).times(s.dpmmPrice).times(s.multiplier)\n            );\n          } else {\n            return acc;\n          }\n        }, bg(0));\n        const fundingFee = bg(symbol.cumulativeFundingRate)\n          .minus(position.lastCumulativeFundingRate)\n          .plus(\n            bg(symbol.dpmmPrice)\n              .minus(symbol.indexPrice)\n              .times(symbol.multiplier)\n              .div(pool.fundingPeriod)\n              .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\n          )\n          .times(position.volume)\n          .toString();\n        return {\n          symbolId: symbolIndex.toString(),\n          symbol: symbol.symbol,\n          price: symbol.indexPrice,\n          volume: bg(position.volume).times(symbol.multiplier).toString(),\n          averageEntryPrice: bg(position.volume).eq(0)\n            ? '0'\n            : bg(position.cost)\n                .div(position.volume)\n                .div(symbol.multiplier)\n                .toString(),\n          margin: margin,\n          marginHeld: marginHeld.toString(),\n          marginHeldBySymbol: marginHeldBySymbol.toString(),\n          unrealizedPnl: unrealizedPnl.toString(),\n          fundingFee,\n          liquidationPrice: calculateLiquidationPrice(\n            position.volume,\n            margin,\n            totalCost,\n            dynamicCost,\n            symbol.multiplier,\n            maintenanceMarginRatio\n          ).toString(),\n        };\n      })\n      .filter((p) => p.volume !== '0');\n  }\n\n  async getEstimatedMargin(accountAddress, volume, leverage, symbolId) {\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const { multiplier, indexPrice } = pool.symbols[symbolIndex];\n    return bg(volume)\n      .abs()\n      .times(multiplier)\n      .times(indexPrice)\n      .div(leverage)\n      .toString();\n  }\n\n  async getEstimatedFee(volume, symbolId) {\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const { multiplier, indexPrice, feeRatio } = pool.symbols[symbolIndex];\n    return bg(volume)\n      .abs()\n      .times(multiplier)\n      .times(indexPrice)\n      .times(feeRatio)\n      .toString();\n  }\n\n  async getFundingRate(symbolId) {\n    await this.init()\n    const pool = this.pool\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const {funding, fundingPerSecond, tradersNetVolume, multiplier } = pool.symbols[symbolIndex]\n    const liquidity = pool.state.liquidity\n    return {\n      funding0: bg(funding).div(multiplier).toString(),\n      fundingPerSecond: bg(fundingPerSecond).div(multiplier).toString(),\n      liquidity: liquidity,\n      volume: '-',\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString(),\n    };\n  }\n\n\n  async getEstimatedFundingRate(newVolume, symbolId) {\n    const pool = this.pool\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbol = { ...pool.symbols[symbolIndex] };\n    symbol.dpmmPrice = calculateDpmmPrice(\n      symbol.indexPrice,\n      symbol.K,\n      bg(symbol.tradersNetVolume).plus(newVolume).toString(),\n      symbol.multiplier\n    ).toString();\n    symbol.fundingPerSecond = bg(symbol.dpmmPrice)\n      .minus(symbol.indexPrice)\n      //.times(symbol.multiplier)\n      .div(pool.fundingPeriod)\n      .toString();\n    return {\n      funding1: bg(symbol.fundingPerSecond).times(SECONDS_IN_A_DAY).toString(),\n    };\n  }\n\n  async getLiquidityUsed() {\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const { minPoolMarginRatio } = pool.parameters;\n    return pool.symbols\n      .reduce(\n        (acc, s) =>\n          acc.plus(\n            bg(s.tradersNetVolume)\n              .abs()\n              .times(s.indexPrice)\n              .times(s.multiplier)\n              .times(minPoolMarginRatio)\n          ),\n        bg(0)\n      )\n      .div(pool.state.liquidity)\n      .toString();\n  }\n\n  async getEstimatedLiquidityUsed(newVolume, symbolId) {\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n\n    const { minPoolMarginRatio } = pool.parameters;\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    //console.log(pool.symbols, poolMarginRatio, pool.stateValues)\n    return pool.symbols\n      .reduce(\n        (acc, s, index) =>\n          index === symbolIndex\n            ? acc.plus(\n                bg(s.tradersNetVolume)\n                  .plus(newVolume)\n                  .abs()\n                  .times(s.indexPrice)\n                  .times(s.multiplier)\n                  .times(minPoolMarginRatio)\n              )\n            : acc.plus(\n                bg(s.tradersNetVolume)\n                  .abs()\n                  .times(s.indexPrice)\n                  .times(s.multiplier)\n                  .times(minPoolMarginRatio)\n              ),\n        bg(0)\n      )\n      .div(pool.state.liquidity)\n      .toString();\n  }\n\n  async getPoolBTokensBySymbolId(accountAddress, symbolId) {\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    if (!pool.isPositionsUpdated()) {\n      await pool.getPositions(accountAddress);\n    }\n    const { initialMarginRatio } = pool.parameters\n    const margins = await pool.pToken.getMargins(accountAddress);\n    const balances = await Promise.all(\n      pool.bTokens.reduce(\n        (acc, i) => [\n          ...acc,\n          ERC20Factory(this.chainId, i.bTokenAddress).balanceOf(accountAddress),\n        ],\n        []\n      )\n    );\n\n    const margin = pool.bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0)).toString()\n    const marginHeld = pool.symbols.reduce((acc, s, index) => {\n      return acc.plus(\n        bg(s.indexPrice)\n          .times(s.multiplier)\n          .times(pool.positions[index].volume)\n          .times(initialMarginRatio)\n          .abs()\n      );\n    }, bg(0)).toString();\n    const pnl = pool.positions.reduce((acc, p) => acc.plus(p.traderPnl), bg(0)).toString();\n\n    for (let i = 0; i < pool.bTokenIds.length; i++) {\n      const bToken = pool.bTokens[i]\n      bToken.walletBalance = balances[i]\n      bToken.availableBalance = max(\n        min(\n          bg(margin)\n            .minus(marginHeld)\n            .plus(pnl)\n            .div(pool.bTokens[i].price)\n            .div(pool.bTokens[i].discount),\n          bg(margins[i])\n        ),\n        bg(0)\n      ).toString();\n    }\n    return pool.bTokens.map((b, index) => {\n      return {\n        bTokenId: index.toString(),\n        bTokenAddress: b.bTokenAddress,\n        bTokenSymbol: pool.bTokenSymbols[index],\n        availableBalance: b.availableBalance,\n        walletBalance: b.walletBalance,\n      }\n    })\n  }\n\n  async getFundingFee(accountAddress, symbolId) {\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    if (!pool.isPositionsUpdated()) {\n      await pool.getPositions(accountAddress);\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    return pool.positions[symbolIndex].fundingAccrued;\n  }\n}\n\n\n\n\nexport const poolApiFactory = contractFactory(PoolApi);","import { catchApiError } from '../../shared/utils/api';\n\nimport {\n  deriToNatural,\n  getBlockInfo,\n  getPastEvents,\n  getHttpBase,\n  fetchJson,\n  bg,\n} from '../../shared/utils';\nimport {\n  getPoolConfig,\n} from '../../shared/config';\nimport { perpetualPoolDpmmFactory, } from '../contract/factory';\n\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  const perpetualPool = perpetualPoolDpmmFactory(chainId, poolAddress);\n  await perpetualPool.init()\n  const toBlock = await getBlockInfo(chainId, 'latest');\n  fromBlock = parseInt(fromBlock);\n\n  const filters = { account: accountAddress };\n  let events = await getPastEvents(\n    chainId,\n    perpetualPool.contract,\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  //events = events.filter((i) => i.returnValues.symbolId === symbolId);\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await perpetualPool.formatTradeEvent(item);\n    if (res) {\n      const symbolIndex = perpetualPool.activeSymbolIds.indexOf(res.symbolId);\n      result.unshift({\n        baseToken: '',\n        direction: res.direction,\n        volume: bg(res.volume)\n          .times(perpetualPool.symbols[symbolIndex].multiplier)\n          .toString(),\n        price: res.price,\n        indexPrice: res.indexPrice,\n        notional: res.notional,\n        symbol: res.symbol,\n        symbolId: res.symbolId,\n        time: res.time,\n        transactionFee: res.transactionFee,\n        transactionHash: res.transactionHash,\n      });\n    }\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock,\n      tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    const perpetualPool = perpetualPoolDpmmFactory(chainId, poolAddress);\n    await perpetualPool.init()\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .map((i) => {\n          const symbolIndex = perpetualPool.activeSymbolIds.indexOf(i.symbolId)\n          if (symbolIndex > -1) {\n            return {\n              direction: i.direction.trim(),\n              baseToken: '',\n              symbolId: i.symbolId,\n              symbol: i.symbol,\n              price: deriToNatural(i.price).toString(),\n              notional: deriToNatural(i.notional).toString(),\n              volume: deriToNatural(i.volume).times(perpetualPool.symbols[symbolIndex].multiplier).toString(),\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else {\n            return null\n          }\n        }).filter((i) => i != null)\n    }\n    //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n      const { initialBlock } = getPoolConfig(poolAddress);\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch (err) {\n    console.log(\n      `getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`\n    );\n  }\n  return [];\n};\n","import {\n  getPoolInfoApy,\n  getPoolLiquidity,\n} from '../../v2/api/mining_query_api';\nimport {\n  getEstimatedFee,\n  getEstimatedFundingRate,\n  getEstimatedLiquidityUsed,\n  getEstimatedMargin,\n  getFundingRate,\n  getLiquidityInfo,\n  getLiquidityUsed,\n  getPositionInfo,\n  getPositionInfos,\n  getSpecification,\n  getWalletBalance,\n  isUnlocked,\n  getPoolBTokensBySymbolId,\n  getFundingFee,\n  getEstimatedTimePrice,\n} from './query_api';\nimport { getTradeHistory } from './trade_history_api';\nimport {\n  addLiquidity,\n  closePosition,\n  depositMargin,\n  removeLiquidity,\n  tradeWithMargin,\n  unlock,\n  withdrawMargin,\n} from './transaction_api';\n\nexport const api = {\n  // mining\n  getLiquidityInfo,\n  getPoolLiquidity,\n  getPoolInfoApy,\n  addLiquidity,\n  removeLiquidity,\n  // trading\n  getSpecification,\n  getPositionInfo,\n  getPositionInfos,\n  getWalletBalance,\n  isUnlocked,\n  getEstimatedFee,\n  getEstimatedMargin,\n  getFundingRate,\n  getEstimatedFundingRate,\n  getLiquidityUsed,\n  getEstimatedLiquidityUsed,\n  getEstimatedTimePrice,\n  getFundingRateCache: () => {},\n  unlock,\n  depositMargin,\n  withdrawMargin,\n  tradeWithMargin,\n  closePosition,\n  // tradeHistory\n  getTradeHistory,\n  // extra for v2\n  getPoolBTokensBySymbolId,\n  getFundingFee,\n};\n","import { checkApiInput, checkApiInputWithoutAccount, checkSymbolId, checkTokenId } from '../../shared/utils/derijsnext';\nimport { catchApiError } from '../../shared/utils/api';\nimport { poolApiFactory } from '../contract/PoolApi';\nimport { ERC20Factory } from '../../shared/contract/factory';\nimport { calculateDpmmCost } from '../../v2_lite_dpmm/calc';\nimport { bg } from '../../shared';\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      bTokenId = checkTokenId(bTokenId)\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getLiquidityInfo(accountAddress, bTokenId);\n    },\n    [],\n    'getLiquidityInfo',\n    {\n      maxRemovableShares: '',\n      pnl: '',\n      poolLiquidity: '',\n      shares: '',\n    }\n  );\n};\n\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId)\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getSpecification(symbolId);\n    },\n    [],\n    'getSpecification',\n    {\n      symbol: '',\n      bTokenSymbol: [],\n      bTokenMultiplier: [],\n      multiplier: '',\n      feeRatio: '',\n      fundingRateCoefficient: '',\n      minPoolMarginRatio: '',\n      minInitialMarginRatio: '',\n      minMaintenanceMarginRatio: '',\n      liquidationCutRatio: '',\n      protocolFeeCollectRatio: '',\n      indexConstituents: { tokens: [], url: '' },\n    }\n  );\n};\n\nexport const getPositionInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      symbolId = checkTokenId(symbolId)\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getPositionInfo(accountAddress, symbolId);\n    },\n    [],\n    'getPositionInfo',\n    {}\n  );\n};\n\nexport const getPositionInfos = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getPositionInfos(accountAddress);\n    },\n    [],\n    'getPositionInfos',\n    []\n  );\n};\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      bTokenId = checkTokenId(bTokenId)\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      const bTokenIndex = checkSymbolId(bTokenId, api.pool.bTokenIds);\n      const bTokenAddress = api.pool.bTokens[bTokenIndex].bTokenAddress;\n      const bToken = ERC20Factory(chainId, bTokenAddress);\n      return await bToken.balanceOf(accountAddress);\n    },\n    [],\n    'getWalletBalance',\n    ''\n  );\n};\n\nexport const isUnlocked = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      bTokenId = checkTokenId(bTokenId);\n      const bTokenAddress = api.pool.bTokens[parseInt(bTokenId)].bTokenAddress;\n      const bToken = ERC20Factory(chainId, bTokenAddress);\n      return await bToken.isUnlocked(accountAddress, poolAddress);\n    },\n    [],\n    'isUnlocked',\n    ''\n  );\n};\n\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      symbolId = checkTokenId(symbolId)\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init(true);\n      return await api.getEstimatedMargin(accountAddress, volume, leverage, symbolId);\n    },\n    [],\n    'getEstimatedMargin',\n    ''\n  );\n};\n\nexport const getEstimatedFee = async (\n  chainId,\n  poolAddress,\n  volume,\n  symbolId,\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress,\n      );\n      symbolId = checkTokenId(symbolId)\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init(true);\n      return await api.getEstimatedFee(volume, symbolId);\n    },\n    [],\n    'getEstimatedFee',\n    ''\n  );\n};\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId)\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getFundingRate(symbolId);\n    },\n    [],\n    'getFundingRate',\n    ''\n  );\n};\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newVolume,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId)\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init(true);\n      return await api.getEstimatedFundingRate(newVolume, symbolId);\n    },\n    [],\n    'getFundingRate',\n    ''\n  );\n};\n\nexport const getLiquidityUsed = async (\n  chainId,\n  poolAddress,\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getLiquidityUsed();\n    },\n    [],\n    'getLiquidityUsed',\n    ''\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newVolume,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId)\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init(true);\n      return await api.getEstimatedLiquidityUsed(newVolume, symbolId);\n    },\n    [],\n    'getEstimatedLiquidityUsed',\n    ''\n  );\n};\n\nexport const getPoolBTokensBySymbolId = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      //symbolId = checkTokenId(symbolId)\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getPoolBTokensBySymbolId(accountAddress, symbolId);\n    },\n    [],\n    'getPoolBTokensBySymbolId',\n    []\n  );\n};\n\n\nexport const getFundingFee = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      symbolId = checkTokenId(symbolId)\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getFundingFee(accountAddress, symbolId);\n    },\n    [],\n    'getFundingFee',\n    []\n  );\n};\n\nexport const getEstimatedTimePrice = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress,\n      );\n      symbolId = checkTokenId(symbolId);\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      const pool = api.pool;\n      const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n      if (!pool.isSymbolsUpdated()) {\n        await pool.getSymbols();\n      }\n      const symbol = pool.symbols[symbolIndex];\n      const cost = calculateDpmmCost(\n        symbol.indexPrice,\n        symbol.K,\n        symbol.tradersNetVolume,\n        symbol.multiplier,\n        newNetVolume\n      );\n      return bg(cost).div(symbol.multiplier).div(newNetVolume).toString();\n    },\n    [],\n    'getEstimatedTimePrice',\n    ''\n  );\n};\n","import {\n  bg,\n  checkApiInput,\n} from '../../shared';\nimport { ERC20Factory } from '../../shared/contract/factory';\nimport { catchTxApiError } from '../../shared/utils/api';\nimport { checkAmount, checkSymbolId, checkTokenId } from '../../shared/utils/derijsnext';\nimport { perpetualPoolDpmmFactory } from '../contract/factory.js';\n\n// mining\nexport const addLiquidity = async (chainId, poolAddress, accountAddress, amount, bTokenId) => {\n  return catchTxApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      amount = checkAmount(amount)\n      bTokenId = checkTokenId(bTokenId)\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      return await pool.router.addLiquidity(accountAddress, bTokenId, amount);\n    },\n    []\n  );\n};\n\nexport const removeLiquidity = async (chainId, poolAddress, accountAddress, amount, bTokenId) => {\n  return catchTxApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      amount = checkAmount(amount)\n      bTokenId = checkTokenId(bTokenId)\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      return await pool.router.removeLiquidity(accountAddress, bTokenId, amount);\n    },\n    []\n  );\n};\n\n//trading\nexport const unlock = async (chainId, poolAddress, accountAddress, bTokenId) => {\n  return catchTxApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    bTokenId = checkTokenId(bTokenId)\n    const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    const bTokenIndex = checkSymbolId(bTokenId, pool.bTokenIds)\n    const bTokenAddress = pool.bTokens[bTokenIndex].bTokenAddress;\n    const bToken = ERC20Factory(chainId, bTokenAddress);\n    return await bToken.unlock(accountAddress, poolAddress);\n  }, []);\n};\n\nexport const depositMargin = async (chainId, poolAddress, accountAddress, amount, bTokenId) => {\n  return catchTxApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      amount = checkAmount(amount)\n      bTokenId = checkTokenId(bTokenId)\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      return await pool.router.addMargin(accountAddress, bTokenId, amount);\n    },\n    []\n  );\n};\n\nexport const withdrawMargin = async (chainId, poolAddress, accountAddress, amount, bTokenId) => {\n  return catchTxApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      amount = checkAmount(amount)\n      bTokenId = checkTokenId(bTokenId)\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      return await pool.router.removeMargin(accountAddress, bTokenId, amount);\n    },\n    []\n  );\n};\n\nexport const tradeWithMargin = async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n  return catchTxApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      newVolume = checkAmount(newVolume)\n      symbolId = checkTokenId(symbolId)\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      return await pool.router.trade(accountAddress, symbolId, newVolume);\n    },\n    []\n  );\n};\n\nexport const closePosition = async (chainId, poolAddress, accountAddress, symbolId) => {\n  return catchTxApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      symbolId = checkTokenId(symbolId)\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      const { volume } = await pool.pToken.getPosition(\n        accountAddress,\n        symbolId\n      );\n      if (!bg(volume).eq(0)) {\n        const newVolume = bg(volume).negated().toString();\n        return await pool.router.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error('no position to close');\n      }\n    },\n    []\n  );\n};\n","//import { getLiquidityInfo2 } from '../v1/api/rest_api';\nimport {\n  getPoolVersionId,\n  LITE_VERSIONS,\n} from '../shared/config';\nimport {\n  getPoolLiquidity as getPoolLiquidity1,\n  getPoolInfoApy as getPoolInfoApy1,\n} from '../shared/api/database_api';\nimport { getLiquidityInfo2 } from '../v1/api';\nimport {\n  getLiquidityInfoV2,\n  getPoolInfoApyV2,\n  getPoolLiquidityV2,\n} from '../v2/api';\nimport {\n  getLiquidityInfoV2l,\n} from '../v2_lite/api';\nimport {\n  getLiquidityInfoOption,\n} from '../option/api';\n\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  const versionId = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(versionId)) {\n    return getLiquidityInfoV2l(chainId, poolAddress, accountAddress)\n  } else if (versionId === 'option') {\n    return getLiquidityInfoOption(chainId, poolAddress, accountAddress)\n  } else if (versionId === 'v2_lite_dpmm') {\n    return apiV2lDpmm.getLiquidityInfo(chainId, poolAddress, accountAddress)\n  } else if (versionId === 'v2_dpmm') {\n    return apiV2Dpmm.getLiquidityInfo(chainId, poolAddress, accountAddress, bTokenId)\n  }\n  if (bTokenId === undefined) {\n    return getLiquidityInfo2(chainId, poolAddress, accountAddress)\n  } else {\n    return getLiquidityInfoV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n};\n\nexport const getPoolLiquidity = async (\n  chainId,\n  poolAddress,\n  bTokenId,\n) => {\n  if (bTokenId != null) {\n    return getPoolLiquidityV2(chainId, poolAddress, bTokenId)\n  } else {\n    return getPoolLiquidity1(chainId, poolAddress)\n  }\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\n  if (bTokenId != null) {\n    return getPoolInfoApyV2(chainId, poolAddress, bTokenId)\n  } else {\n    return getPoolInfoApy1(chainId, poolAddress)\n  }\n};\n","//import {addLiquidity2, removeLiquidity2 } from '../v1/api/contract_transaction_api_v2';\nimport { getPoolVersionId, LITE_VERSIONS } from '../shared'\nimport { addLiquidity2, removeLiquidity2 } from '../v1/api';\nimport { addLiquidityV2, removeLiquidityV2 } from '../v2/api';\nimport { addLiquidityV2l, removeLiquidityV2l } from '../v2_lite/api';\nimport { addLiquidityOption, removeLiquidityOption } from '../option/api';\n\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n  const versionId = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(versionId)) {\n    return addLiquidityV2l(chainId, poolAddress, accountAddress, amount)\n  } else if (versionId === 'option') {\n    return addLiquidityOption(chainId, poolAddress, accountAddress, amount);\n  } else if (versionId === 'v2_lite_dpmm') {\n    return apiV2lDpmm.addLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (versionId === 'v2_dpmm') {\n    return apiV2Dpmm.addLiquidity(chainId, poolAddress, accountAddress, amount, bTokenId);\n  }\n  if (bTokenId === undefined) {\n    return addLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return addLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n}\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum,\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return removeLiquidityV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\n  } else if (version === 'option') {\n    return removeLiquidityOption(chainId, poolAddress, accountAddress, amount, isMaximum)\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.removeLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.removeLiquidity(chainId, poolAddress, accountAddress, amount, bTokenId);\n  }\n  if (bTokenId === undefined) {\n    return removeLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return removeLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n      isMaximum,\n    );\n  }\n}\n","import { catchTxApiError } from '../../shared/utils';\nimport { everlastingOptionFactory } from '../factory/pool.js';\n\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\n  const args = [chainId, poolAddress, accountAddress, amount]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\n    return await optionPool.addLiquidity(accountAddress, amount)\n  }, args)\n}\n\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\n    return await optionPool.removeLiquidity(accountAddress, amount, isMaximum)\n  }, args)\n}\n","import { getPriceInfo } from '../../shared/utils/oracle';\nimport {\n  getPoolBTokenIdList,\n  getPoolConfig2,\n  getPoolSymbolIdList,\n} from '../../shared/config';\nimport {\n  perpetualPoolRouterFactory,\n  perpetualPoolFactory,\n  lTokenFactory,\n} from '../factory';\nimport { isBToken0RatioValid, isPoolMarginRatioValid } from '../calculation';\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\n  const validation = isBToken0RatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    minBToken0Ratio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      const tx = await perpetualPoolRouter.addLiquidity(\n        accountAddress,\n        bTokenId,\n        amount\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress);\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\n  const { liquidity: userLiquidity } = lTokenAsset;\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  promises = [];\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\n  const validation = isPoolMarginRatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    userLiquidity,\n    symbols,\n    minPoolMarginRatio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      const tx = await perpetualPoolRouter.removeLiquidity(\n        accountAddress,\n        bTokenId,\n        amount,\n        isMaximum\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n\nexport const addLiquidityWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\n  const validation = isBToken0RatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    minBToken0Ratio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      const promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.addLiquidityWithPrices(\n        accountAddress,\n        bTokenId,\n        amount,\n        priceInfos\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n\nexport const removeLiquidityWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n\n  const lToken = lTokenFactory(chainId, lTokenAddress);\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\n  const { liquidity: userLiquidity } = lTokenAsset;\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  promises = [];\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\n\n  const validation = isPoolMarginRatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    userLiquidity,\n    symbols,\n    minPoolMarginRatio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.removeLiquidityWithPrices(\n        accountAddress,\n        bTokenId,\n        amount,\n        priceInfos,\n        isMaximum\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n","import {\n  getEstimatedFundingRateOption,\n  getFundingRateCacheOption,\n  getFundingRateOption,\n  getLiquidityUsedOption,\n  getPositionInfoOption,\n  getPositionInfosOption,\n  getSpecificationOption,\n  getWalletBalanceOption,\n  getEstimatedFeeOption,\n  getEstimatedMarginOption,\n  getEstimatedLiquidityUsedOption,\n  getEstimatedTimePriceOption,\n  isUnlockedOption,\n} from '../option/api';\nimport { getPoolVersionId, isDeriUnlocked, LITE_VERSIONS } from '../shared';\nimport {\n  getPositionInfo2,\n  isUnlocked2,\n  getEstimatedMargin2,\n  getEstimatedFee2,\n  getEstimatedFundingRate2,\n  getEstimatedLiquidityUsed2,\n  getWalletBalance2,\n  getSpecification2,\n  getFundingRate2,\n  getLiquidityUsed2,\n  getFundingRateCache2,\n} from '../v1/api';\n\nimport {\n  getPositionInfoV2,\n  getPositionInfosV2,\n  isUnlockedV2,\n  getEstimatedMarginV2,\n  getEstimatedFeeV2,\n  getEstimatedFundingRateV2,\n  getEstimatedLiquidityUsedV2,\n  getSpecificationV2,\n  getWalletBalanceV2,\n  getFundingRateV2,\n  getLiquidityUsedV2,\n  getFundingRateCacheV2,\n  getEstimatedLiquidatePriceV2,\n  getPoolBTokensBySymbolId as getPoolBTokensBySymbolIdV2\n} from '../v2/api';\n\nimport {\n  getPositionInfoV2l,\n  getPositionInfosV2l,\n  isUnlockedV2l,\n  getEstimatedMarginV2l,\n  getEstimatedFeeV2l,\n  getEstimatedFundingRateV2l,\n  getEstimatedLiquidityUsedV2l,\n  getSpecificationV2l,\n  getWalletBalanceV2l,\n  getFundingRateV2l,\n  getLiquidityUsedV2l,\n  getFundingRateCacheV2l,\n} from '../v2_lite/api';\n\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\n\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getSpecificationV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getSpecificationOption(chainId, poolAddress, symbolId);\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.getSpecification(chainId, poolAddress, symbolId);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.getSpecification(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getSpecification2(chainId, poolAddress);\n  } else {\n    return getSpecificationV2(chainId, poolAddress, symbolId);\n  }\n};\n\nexport const getPositionInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getPositionInfoV2l(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'option') {\n    return getPositionInfoOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      symbolId\n    );\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.getPositionInfo(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.getPositionInfo(chainId, poolAddress, accountAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getPositionInfo2(chainId, poolAddress, accountAddress);\n  } else {\n    return getPositionInfoV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\n\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\n  const version = getPoolVersionId(poolAddress);\n  if (LITE_VERSIONS.includes(version)) {\n    return getPositionInfosV2l(chainId, poolAddress, accountAddress)\n  } else if (version === 'option') {\n    return getPositionInfosOption(chainId, poolAddress, accountAddress)\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.getPositionInfos(chainId, poolAddress, accountAddress);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.getPositionInfos(chainId, poolAddress, accountAddress);\n  } else if (version === 'v1') {\n    return [\n      await getPositionInfo2(chainId, poolAddress, accountAddress),\n    ].filter((p) => p.volume !== '0');\n  } else if (version === 'v2') {\n    return getPositionInfosV2(chainId, poolAddress, accountAddress)\n  } else {\n    // return empty array for v1, v2, v2_lite\n    return []\n  }\n}\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getWalletBalanceV2l(chainId, poolAddress, accountAddress);\n  } else if (version === 'option') {\n    return getWalletBalanceOption(chainId, poolAddress, accountAddress);\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.getWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.getWalletBalance(chainId, poolAddress, accountAddress, bTokenId);\n  }\n  if (bTokenId === undefined) {\n    return getWalletBalance2(chainId, poolAddress, accountAddress);\n  } else {\n    return getWalletBalanceV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const isUnlocked = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return isUnlockedV2l(chainId, poolAddress, accountAddress);\n  } else if (version === 'option') {\n    return isUnlockedOption(chainId, poolAddress, accountAddress);\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.isUnlocked(chainId, poolAddress, accountAddress);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.isUnlocked(chainId, poolAddress, accountAddress, bTokenId);\n  }\n  if (accountAddress === undefined) {\n    return isDeriUnlocked(chainId, poolAddress);\n  } else if (bTokenId === undefined) {\n    return isUnlocked2(chainId, poolAddress, accountAddress);\n  } else {\n    return isUnlockedV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const getEstimatedLiquidatePrice = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedLiquidatePriceV2(chainId, poolAddress, accountAddress, newVolume, symbolId);\n  } else if (version === 'option') {\n    // place holder\n    return ''\n  }\n  if (symbolId === undefined) {\n    // place holder\n    return ''\n  } else {\n    return getEstimatedLiquidatePriceV2(chainId, poolAddress, accountAddress, newVolume, symbolId);\n  }\n};\n\nexport const getEstimatedFee = async (\n  chainId,\n  poolAddress,\n  volume,\n  symbolId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedFeeV2l(chainId, poolAddress, volume, symbolId);\n  } else if (version === 'option') {\n    return getEstimatedFeeOption(chainId, poolAddress, volume, symbolId);\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.getEstimatedFee(chainId, poolAddress, volume, symbolId);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.getEstimatedFee(chainId, poolAddress, volume, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getEstimatedFee2(chainId, poolAddress, volume);\n  } else {\n    return getEstimatedFeeV2(chainId, poolAddress, volume, symbolId);\n  }\n};\n\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedMarginV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return getEstimatedMarginOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    );\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.getEstimatedMargin(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    );\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.getEstimatedMargin(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getEstimatedMargin2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage\n    );\n  } else {\n    return getEstimatedMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    );\n  }\n};\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getFundingRateV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getFundingRateOption(chainId, poolAddress, symbolId);\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.getFundingRate(chainId, poolAddress, symbolId);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.getFundingRate(\n      chainId,\n      poolAddress,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getFundingRate2(chainId, poolAddress);\n  } else {\n    return getFundingRateV2(chainId, poolAddress, symbolId);\n  }\n};\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedFundingRateV2l(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return getEstimatedFundingRateOption(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.getEstimatedFundingRate(chainId, poolAddress, newNetVolume, symbolId);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.getEstimatedFundingRate(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getEstimatedFundingRate2(chainId, poolAddress, newNetVolume);\n  } else {\n    return getEstimatedFundingRateV2(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n};\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getLiquidityUsedV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getLiquidityUsedOption(chainId, poolAddress, symbolId);\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.getLiquidityUsed(chainId, poolAddress, symbolId);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.getLiquidityUsed(\n      chainId,\n      poolAddress,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getLiquidityUsed2(chainId, poolAddress);\n  } else {\n    return getLiquidityUsedV2(chainId, poolAddress, symbolId);\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedLiquidityUsedV2l(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return getEstimatedLiquidityUsedOption(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.getEstimatedLiquidityUsed(chainId, poolAddress, newNetVolume, symbolId);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.getEstimatedLiquidityUsed(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getEstimatedLiquidityUsed2(chainId, poolAddress, newNetVolume);\n  } else {\n    return getEstimatedLiquidityUsedV2(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n};\n\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getFundingRateCacheV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getFundingRateCacheOption(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getFundingRateCache2(chainId, poolAddress);\n  } else {\n    return getFundingRateCacheV2(chainId, poolAddress, symbolId);\n  }\n};\n\nexport const getPoolBTokensBySymbolId = async (chainId, poolAddress, accountAddress) => {\n  const versionId = getPoolVersionId(poolAddress)\n  if (['v2', 'v2_dpmm'].includes(versionId)) {\n    if (versionId === 'v2') {\n      return await getPoolBTokensBySymbolIdV2(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n    } else {\n      return await apiV2Dpmm.getPoolBTokensBySymbolId(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n    }\n  } else {\n    return []\n  }\n}\n\nexport const getEstimatedTimePrice = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n  ) => {\n  const version = getPoolVersionId(poolAddress)\n  if (version === 'option') {\n    return getEstimatedTimePriceOption(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.getEstimatedTimePrice(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.getEstimatedTimePrice(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  } else {\n    return '';\n  }\n};","import { closePositionOption, depositMarginOption, tradeWithMarginOption, unlockOption, withdrawMarginOption } from '../option/api';\nimport { getPoolVersionId, LITE_VERSIONS, unlockDeri } from '../shared';\nimport {\n  unlock2,\n  tradeWithMargin2,\n  closePosition2,\n  depositMargin2,\n  withdrawMargin2,\n} from '../v1/api';\nimport {\n  unlockV2,\n  tradeWithMarginV2,\n  closePositionV2,\n  depositMarginV2,\n  withdrawMarginV2,\n} from '../v2/api';\nimport {\n  unlockV2l,\n  tradeWithMarginV2l,\n  closePositionV2l,\n  depositMarginV2l,\n  withdrawMarginV2l,\n} from '../v2_lite/api';\n\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\n\nexport const unlock = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return unlockV2l(chainId, poolAddress, accountAddress);\n  } else if (version === 'option') {\n    return unlockOption(chainId, poolAddress, accountAddress);\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.unlock(chainId, poolAddress, accountAddress);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.unlock(chainId, poolAddress, accountAddress, bTokenId);\n  }\n  if (accountAddress === undefined) {\n    return unlockDeri(chainId, poolAddress);\n  } else if (bTokenId === undefined) {\n    return unlock2(chainId, poolAddress, accountAddress);\n  } else {\n    return unlockV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return depositMarginV2l(chainId, poolAddress, accountAddress, amount);\n  } else if (version === 'option') {\n    return depositMarginOption(chainId, poolAddress, accountAddress, amount);\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.depositMargin(chainId, poolAddress, accountAddress, amount);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.depositMargin(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n  if (bTokenId === undefined) {\n    return depositMargin2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return depositMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return withdrawMarginV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      isMaximum\n    );\n  } else if (version === 'option') {\n    return withdrawMarginOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      isMaximum\n    );\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.withdrawMargin(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.withdrawMargin(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n    );\n  }\n  if (bTokenId === undefined) {\n    return withdrawMargin2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return withdrawMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n      isMaximum\n    );\n  }\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return tradeWithMarginV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return tradeWithMarginOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.tradeWithMargin(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    )\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.tradeWithMargin(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return tradeWithMargin2(chainId, poolAddress, accountAddress, newVolume);\n  } else {\n    return tradeWithMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  }\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return closePositionV2l(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'option') {\n    return closePositionOption(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.closePosition(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.closePosition(\n      chainId,\n      poolAddress,\n      accountAddress,\n      symbolId,\n    );\n  }\n  if (symbolId === undefined) {\n    return closePosition2(chainId, poolAddress, accountAddress);\n  } else {\n    return closePositionV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\n","import { getPoolVersionId, LITE_VERSIONS } from '../shared';\nimport { getTradeHistoryOption } from '../option/api';\nimport { getTradeHistory2 } from '../v1/api';\nimport { getTradeHistoryV2 } from '../v2/api';\nimport { getTradeHistoryV2l } from '../v2_lite/api';\n\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getTradeHistoryV2l(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'option') {\n    return getTradeHistoryOption(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.getTradeHistory(chainId, poolAddress, accountAddress, symbolId)\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.getTradeHistory(chainId, poolAddress, accountAddress, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getTradeHistory2(chainId, poolAddress, accountAddress);\n  } else {\n    return getTradeHistoryV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\n","import { io } from \"socket.io-client\";\nimport {equalIgnoreCase } from \"../utils/utils\";\n\nclass WebSocket {\n  constructor(){\n    this.socket = io(process.env.REACT_APP_WSS_URL, {\n      transports: ['websocket'],\n      withCredentials: true\n    })\n    this.events = [];\n    this.socket.on('connect', () => {\n      console.log('connect')\n      this.events.forEach(event => {\n        this.socket.emit(event[0],event[1]);\n      })\n    })\n    this.socket.on('disconnect',event => {\n      console.log('web socket disconnect,will reconnect auto')\n    })\n  }\n\n  subscribe(event = 'get_kline_update',params = {},onMessage,listener = 'kline_update'){\n    this.socket.on(listener,data => {\n      if (data.time_type === params.time_type && equalIgnoreCase(data.symbol,params.symbol) && onMessage) {\n        onMessage(data)\n      }\n    })\n    this.socket.emit(event, params)\n    if(this.findEvent(event,params) === -1){\n      this.events.push([event,params])\n    }\n  }\n\n  findEvent(event,params){\n    return this.events.findIndex(item => item[0] === event && item[1].symbol === params.symbol && item[1].time_type === params.time_type);\n  }\n\n  unsubscribe(event,params = {}){\n    this.socket.emit(event,params)\n    const pos = this.findEvent(event,params)\n    this.events.splice(pos,1)\n  }\n}\nexport default new WebSocket()","import React from 'react'\nimport Modal from 'react-modal/lib/components/Modal';\nimport { inject, observer } from 'mobx-react';\n\nconst withModal = Component => {\n  const appElement = document.getElementById('root')\n  const customizeStyle =  {\n    overlay: {\n      position: 'fixed',\n      zIndex : 2,\n      background : 'rgb(0 0 0 / 0.5)'\n    },\n    content: {\n      position: 'absolute',\n      border : 0,\n      background : 'none',\n      inset : 0,\n      overflow : 'initial'\n    }\n  };\n\n  class WithModal extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        modalIsOpen : false\n      }\n    }\n\n    render(){\n      const {modalIsOpen,className,overlay = {}} = this.props\n      const overlayMerged = Object.assign(customizeStyle.overlay,{...overlay})\n      const mergedStyle = Object.assign(customizeStyle,{overlay :overlayMerged})\n      return (\n        <Modal isOpen={modalIsOpen} style={mergedStyle} appElement={appElement} portalClassName={this.props.intl.locale}>\n          <div className={className}>\n            <Component {...this.props} className={className} onClose={this.props.onClose}/>\n          </div>\n        </Modal>\n      )\n    }\n  }\n\n  return inject('intl')(observer(WithModal)) ;\n}\nexport default withModal;","import { makeAutoObservable, observable, action, computed } from \"mobx\";\n\n\nclass Type {\n  current = null;\n  \n  constructor(){\n    makeAutoObservable(this,{\n      current:observable,\n      setCurrent : action,\n      isOption : computed,\n      isFuture : computed\n    })\n  }\n\n  setCurrent(type){\n    this.current = type;\n  }\n\n  get isOption() {\n    return this.current === 'option'\n  }\n\n  get isFuture() {\n    return this.current === 'future'\n  }\n}\nexport default new Type()","import { makeAutoObservable, observable, action, computed } from \"mobx\";\nimport { storeVersion, restoreVersion } from \"../utils/utils\";\n\nclass Version {\n  current = 'v2';\n\n  constructor(){\n    makeAutoObservable(this,{\n      current : observable,\n      setCurrent : action,\n      isV1 : computed,\n      isV2 : computed,\n      isV2Lite : computed,\n      zone : computed\n    })\n  }\n\n\n  setCurrent(version){\n    this.current = version;\n  }\n\n  switch(){\n    if(this.current === 'v1'){\n      this.setCurrent('v2')\n    } else {\n      this.setCurrent('v1')\n    }\n  }\n\n  get isV1() {\n    return this.current === 'v1'\n  }\n\n  get isV2(){\n    return this.current === 'v2'\n  }\n\n  get isV2Lite (){\n    return this.current === 'v2_lite'\n  }\n\n  get isOpen(){\n    return this.current === 'v2_lite_open'\n  }\n\n  get zone(){\n    if(this.isV2){\n      return 'MAIN'\n    } else if(this.isV2Lite) {\n      return 'INNO'\n    } else {\n      return 'OPEN'\n    }\n  }\n}\nexport default new Version()","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\n\n// lang\nexport const isObject = (value) => typeof value === 'object' && value !== null\nexport const isArray = (value) => typeof value === 'object' && Array.isArray(value)\nexport const isFunction = (value) => typeof value === 'function'\n\n// == bg\nBigNumber.config({\n  DECIMAL_PLACES: 18,\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n  EXPONENTIAL_AT: 256,\n});\n\nexport const bg = (value, base = 0) => {\n  if (base === 0) {\n    return BigNumber(value);\n  }\n  if (base > 0) {\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\n  }\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\n};\n\nexport const max = (value1, value2) => {\n  if (value1.gte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const min = (value1, value2) => {\n  if (value1.lte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const fromWei = (value) => bg(value, -18).toString()\n\nexport const toWei = (value) => bg(value, 18).toFixed(0).toString()\n\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\n\nexport const toHex = (value) => Web3.utils.toHex(value);\n\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\n\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\n\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\n\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\n\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\n\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\n\n\nexport const deriToNatural = (value) => bg(value, -18);\n\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\n\nexport const deriToString = (value) => bg(value).toString();\n\nexport const deriToBool = (value) => {\n  if (bg(value).toNumber() === 1) {\n    return true;\n  }\n  return false;\n};\n\nexport const naturalWithPercentage = (value) =>\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\n\nexport const formatBN = (bigNumber) =>\n  bigNumber.toFormat().replaceAll(',', '').toString();\n\n// == convert\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);\n\n\n// == utils\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined'\nexport const isNodejs = () => typeof process !== 'undefined' && process.versions != null && process.versions.node != null\nexport const isJsDom = () => typeof window !== 'undefined' && navigator.userAgent.includes('jsdom')\n\n// == array set\nexport const isEqualSet = (set1, set2) => {\n  if (set1.size !== set2.size) return false;\n  for (let item of set1) {\n    if (!set2.has(item)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n\n// == contract gen\n// export const deleteIndexedKey = (obj) => {\n//   if (isObject(obj) && Object.keys(obj).length > 0) {\n//     const keys = Object.keys(obj);\n//     const intKeyCount = keys.reduce(\n//       (acc, k) => (intRegex.test(k) ? acc + 1 : acc),\n//       0\n//     );\n//     if (intKeyCount * 2 === keys.length) {\n//       let newObj = {};\n//       Object.keys(obj).forEach((k) => {\n//         if (!intRegex.test(k)) {\n//           newObj[k] = obj[k];\n//         }\n//       });\n//       return newObj;\n//     }\n//     return obj;\n//   } else {\n//     return obj;\n//   }\n// };\n\nexport const fromWeiForObject = (obj, keyList = []) => {\n  return Object.keys(obj).reduce((acc, i) => {\n    if (keyList.includes(i)) {\n      acc[i] = fromWei(obj[i]);\n    } else {\n      acc[i] = obj[i];\n    }\n    return acc;\n  }, {});\n};\n\nexport const toNumberForObject = (obj, keyList = []) => {\n  return Object.keys(obj).reduce((acc, i) => {\n    if (keyList.includes(i)) {\n      acc[i] = bg(obj[i]).toNumber();\n    } else {\n      acc[i] = obj[i];\n    }\n    return acc;\n  }, {});\n};\n\n\n// for frontend to display symbols\nexport const sortOptionSymbols = (symbolList) => {\n  const symbolArr = symbolList\n    .map((s) => s.symbol)\n    .map((s) => {\n      return s.split('-');\n    });\n  const unique = (value, index, self) => self.indexOf(value) === index\n  const to2 = (i) => i < 10 ? `0${i}` : i\n  const symbol = symbolArr.map((s) => s[0]).filter(unique)\n  const direction = symbolArr.map((s) => s[2]).filter(unique)\n  const price = symbolArr\n    .map((s) => s[1])\n    .filter(unique)\n    .sort((a, b) => parseInt(b) - parseInt(a));\n  return symbolList.map((i, index) => {\n    const index1 =  symbol.indexOf(symbolArr[index][0]) + 1\n    const index2 =  to2(direction.indexOf(symbolArr[index][2]) + 1)\n    const index3 =  to2(price.indexOf(symbolArr[index][1]) + 1)\n    i.index = parseInt(`${index1}${index2}${index3}`)\n    return i\n  }).sort((a, b) => a.index - b.index).map((i) => {\n    delete i.index\n    return i\n  })\n}\n\n","import { makeObservable, observable, action } from \"mobx\";\nimport { getContractAddressConfig, DeriEnv,sortOptionSymbols,openConfigListCache } from \"../lib/web3js/indexV2\";\n\nexport default class Config {\n  all = []\n\n  constructor(){\n    makeObservable(this,{\n      all : observable,\n      setAll : action\n    })\n  }\n\n  async load(version,isOptions){\n    let current = version && version.current;\n    if(isOptions){\n      current = 'option'\n    }\n    if(current === 'v2_lite_open'){\n       await openConfigListCache.update()\n    }\n    let configs = getContractAddressConfig(DeriEnv.get(),current)\n    if(isOptions){\n      configs = sortOptionSymbols(configs)\n    }\n    if(!isOptions && version){\n      configs = configs.filter(c => c.version === version.current && c.symbol !== '--')\n      //v2 不需要展示base token,需要合并相同的base token\n      if(version.isV2){\n        configs = configs.reduce((total,cur) => {\n          const pos = total.findIndex(c => c.symbol === cur.symbol && c.pool === cur.pool);\n          if(pos === -1 ){\n            total.push(cur)\n          }\n          return total;\n        },[])\n      }\n    }\n    this.setAll(configs)\n    return this.all;\n  }\n\n  setAll(all){\n    this.all = all;\n  }\n  \n}","\n\nimport BigNumber from 'bignumber.js'\nimport version from '../model/Version';\nimport type from '../model/Type';\nimport config from '../config.json'\n\nimport {\n  DeriEnv,\n  getPoolLiquidity,\n  getPoolInfoApy,\n  getUserInfoAll,\n  getLiquidityInfo\n} from '../lib/web3js/indexV2'\nimport Type from '../model/Type';\nconst versionKey = 'deri-current-version'\n\n\nconst env = DeriEnv.get();\nconst { chainInfo } = config[env]\n\nexport function bg(value, base = 0) {\n  if (base === 0) {\n    return BigNumber(value);\n  } else if (base > 0) {\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\n  } else {\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\n  }\n}\n\nexport function deriNatural(value) {\n  return bg(value, -18);\n}\n\nexport function formatAddress(address){\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\n}\n\nexport function formatBalance(balance){\n  return balance && (+balance).toFixed(4)\n}\n\nexport function eqInNumber(str1,str2){\n  return (+str1) === (+str2)\n}\n\nexport function isLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\nexport function isSushiLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\n}\nexport function isCakeLP(address){\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\n\nexport function sessionStorageKey(version){\n  return `${version}-current-trading-pool`\n}\n\nexport function convertToInternationalCurrencySystem (labelValue) {\n  \n  // Nine Zeroes for Billions\n  return Number.isNaN(labelValue) ? ''\n  : Math.abs(Number(labelValue)) >= 1.0e+9\n\n  ? (Math.abs(Number(labelValue)) / 1.0e+9).toFixed(2) + \"B\"\n  // Six Zeroes for Millions \n  : Math.abs(Number(labelValue)) >= 1.0e+6\n\n  ? (Math.abs(Number(labelValue)) / 1.0e+6).toFixed(2) + \"M\"\n  // Three Zeroes for Thousands\n  : Math.abs(Number(labelValue)) >= 1.0e+3\n\n  ? (Math.abs(Number(labelValue)) / 1.0e+3).toFixed(2) + \"K\"\n\n  : Math.abs(Number(labelValue).toFixed(2));\n\n}\n\n\n// export function storeVersion(version){\n//   sessionStorage.setItem(versionKey,version)\n// }\n\n// export function restoreVersion(){\n//   return sessionStorage.getItem(versionKey)\n// }\n\nexport function storeConfig(version,config){\n  if(config){\n    const key = sessionStorageKey(version);\n    sessionStorage.setItem(key,JSON.stringify(config))\n  }\n}\n\nexport function getConfigFromStore(version){\n  return JSON.parse(sessionStorage.getItem(sessionStorageKey(version)))\n}\n\nexport function storeChain(chainInfo){\n  sessionStorage.setItem('current-chain',JSON.stringify(chainInfo))\n}\nexport function restoreChain(){\n  return JSON.parse(sessionStorage.getItem('current-chain')) || {code : ''};\n}\n\nexport function storeLocale(locale){\n  sessionStorage.setItem('current-locale',locale)\n}\n\nexport function restoreLocale(){\n  return sessionStorage.getItem('current-locale')\n}\n\nexport function addParam(param,value,urlString = window.location.href){\n  const url = new URL(urlString);\n  if(url.searchParams.has(param)){\n    url.searchParams.set(param,value);\n  } else {\n    url.searchParams.append(param,value);\n  }\n  return  url.toString();\n}\n\nexport function hasParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.has(param);\n}\n\nexport function getParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.get(param);\n}\n\nexport function getFormatSymbol(symbol){\n  const curChain = restoreChain();\n  const chain = curChain ? curChain.code.toUpperCase() : 'BSC'\n  if(type.isOption){\n    if(symbol.indexOf('-MARKPRICE') !== -1) {\n      symbol = symbol.substr(0,symbol.indexOf('-MARKPRICE'))\n    } else {\n      symbol = symbol.split('-')[0]\n    }\n    return  `${symbol}_V2_${chain}`\n  } else {\n    if(version.isV1){\n      return symbol\n    } else {\n      if(symbol.indexOf('MARKPRICE') !== -1) {\n        return symbol;\n      } else {\n        return `${symbol}_V2_${chain}`\n      }\n    }\n  }\n}\n\n\n//\n// export function formatSymbolInputParam(symbol,spec){\n//   const curChain = restoreChain();\n//   const chain = curChain ? curChain.code.toUpperCase() : 'BSC'\n//   const baseToken = Array.isArray(spec.bTokenSymbol) ? spec.bTokenSymbol[0] : spec.bTokenSymbol\n//   if(type.isFuture){\n//     return {\n//       indexPrice : version.isV1 ? symbol : `${symbol}_V2_${chain}`,\n//       markPrice : `MARKPRICE_${symbol}_${chain}_FUTURE_${version.zone}_${baseToken}`\n//     }\n//   } else {\n//     return {\n//       indexPrice : `${symbol}_V2_${chain}`,\n//       markPrice : `MARKPRICE_${symbol}_V2_${chain}`\n//     }\n//   }\n// }\n\nexport function getMarkpriceSymbol(config){\n  const curChain = restoreChain();\n  const chain = curChain ? curChain.code.toUpperCase() : 'BSC'\n  const baseToken = Array.isArray(config.bTokenSymbol) ? config.bTokenSymbol[0] : config.bTokenSymbol\n  return `MARKPRICE_${config.symbol}_${chain}_${Type.current.toUpperCase()}_${version.zone}_${baseToken}`\n}\n\n\n\nexport function equalIgnoreCase(str1,str2){\n  return str1 && str1.toUpperCase() === str2 && str2.toUpperCase()\n}\n\nexport function stripSymbol(symbol){\n  if(!symbol){\n    return symbol;\n  }\n  if(/-/.test(symbol)){\n    symbol = symbol.split('-')[0]\n  }\n  return symbol\n}\n\n\nexport const  secondsInRange = {\n  '1' : 60,\n  '5' : 300,\n  '15' : 900,\n  '30' : 1800,\n  '60' : 3600,\n  '1D' : 3600 * 24,\n  '1W' : 3600 * 24 * 7\n}\nexport const intervalRange = {\n  '1' : 'min',\n  '5' : '5min',\n  '15' : '15min',\n  '30' : '30min',\n  '60' : 'hour',\n  '1D' : 'day',\n  '1W' : 'week'\n}\n\n \nexport function calcRange(interval){\n  const timestamp = new Date().getTime() /1000 ;\n  let from,to;\n  if(interval !== '1W') {\n    to = Math.floor(timestamp / secondsInRange[interval] ) * secondsInRange[interval]\n    from  = to - secondsInRange[interval] * 200\n  } else {\n    to = Math.floor((timestamp - 345600) /secondsInRange[interval]) * secondsInRange[interval] + 345600\n    from = to - secondsInRange[interval] * 200\n  }\n  return [from,to]\n \n}\n\nexport function groupByNetwork(pools){\n  const all = []\n  pools.reduce((total, pool) => {\n    const find = total.find(item => eqInNumber(item['pool']['address'], pool['address']))\n    if (find && find.list.length < 5) {\n      find['list'].push(pool)\n    } else {\n      const poolInfo = {\n        pool: {\n          network: pool.network,\n          symbol: pool.symbol,\n          address: pool.address,\n          formatAdd: pool.formatAdd,\n          version: pool.version,\n          // innoDisplay : pool.version=== 'v2_lite' ? Intl.get('mining','v2_lite') : pool.version,\n          chainId: pool.chainId,\n          airdrop: pool.airdrop,\n          type: pool.type,\n          bTokenSymbol: pool.bTokenSymbol,\n          bTokenId: pool.bTokenId,\n          symbolId: pool.symbolId\n        },\n        list: [pool]\n      }\n      total.push(poolInfo)\n    }\n    return total;\n  }, all)\n  return all;\n}\n\nexport function combineSymbolfromPoolConfig(configs){\n  return configs.reduce((total,config) => {\n    const pos = total.findIndex(item => item.chainId === config.chainId && (item.pool === config.pool) && config.version === item.version)\n    if((config.version === 'v2' || config.version === 'v2_lite' || config.version === 'option' || config.version === 'v2_lite_open' || config.version === 'v2_lite_dpmm')  \n        && pos > -1) {\n      if(total[pos].symbol.indexOf(config.symbol) === -1){\n        total[pos].symbol += `,${config.symbol}` \n      } else if(total.findIndex(item => item.bTokenSymbol === config.bTokenSymbol) === -1) {\n        total.push(config)\n      }\n    } else{\n      total.push(config)\n    }\n    return total;\n  },[]);\n}\n\nexport async function mapPoolInfo(config,wallet,chainInfo){\n  // const liqPool = await getPoolLiquidity(config.chainId,config.pool,config.bTokenId) || {}\n  // const apyPool = await getPoolInfoApy(config.chainId,config.pool,config.bTokenId) || {}\n  const pool = config.pool || ''\n  const item = { \n    network : chainInfo[config.chainId] && chainInfo[config.chainId].name,\n    // liquidity : liqPool.liquidity,\n    // apy :  ((+apyPool.apy) * 100).toFixed(2),\n    formatAdd : formatAddress(pool),\n    address : pool,\n    type : 'perpetual',\n    buttonText : 'STAKING',\n    multiplier : 1\n  }\n  // if(wallet && wallet.isConnected()){\n  //   const info = await getLiquidityInfo(config.chainId,config.pool,wallet.detail.account,config.bTokenId).catch(e => console.log(e));\n  //   const claimInfo = await getUserInfoAll(wallet.detail.account);\n  //   if(info){\n  //     item['pnl'] = info.pnl\n  //   }\n  //   if(claimInfo){\n  //     item['claimed'] = claimInfo.total;\n  //     item['unclaimed'] = claimInfo.amount\n  //   }\n  // }\n\n  return Object.assign(config,item)\n}\n\n\n\n","var map = {\n\t\"./de/Signin.json\": 572,\n\t\"./de/bridge.json\": 573,\n\t\"./de/broker.json\": 574,\n\t\"./de/dip-history-two.json\": 575,\n\t\"./de/dip-history.json\": 576,\n\t\"./de/dip-two.json\": 577,\n\t\"./de/faucet.json\": 578,\n\t\"./de/footer.json\": 579,\n\t\"./de/governance.json\": 580,\n\t\"./de/header.json\": 581,\n\t\"./de/home.json\": 582,\n\t\"./de/lite.json\": 583,\n\t\"./de/mining.json\": 584,\n\t\"./de/mobile-lite.json\": 585,\n\t\"./de/nuls.json\": 586,\n\t\"./de/permission.json\": 587,\n\t\"./de/pro.json\": 588,\n\t\"./de/team.json\": 589,\n\t\"./de/trading-mining.json\": 590,\n\t\"./en/Signin.json\": 591,\n\t\"./en/bridge.json\": 592,\n\t\"./en/broker.json\": 593,\n\t\"./en/dip-history-two.json\": 594,\n\t\"./en/dip-history.json\": 595,\n\t\"./en/dip-two.json\": 596,\n\t\"./en/faucet.json\": 597,\n\t\"./en/footer.json\": 598,\n\t\"./en/governance.json\": 599,\n\t\"./en/header.json\": 600,\n\t\"./en/home.json\": 601,\n\t\"./en/lite.json\": 602,\n\t\"./en/mining.json\": 603,\n\t\"./en/mobile-lite.json\": 604,\n\t\"./en/nuls.json\": 605,\n\t\"./en/permission.json\": 606,\n\t\"./en/pro.json\": 607,\n\t\"./en/team.json\": 608,\n\t\"./en/trading-mining.json\": 609,\n\t\"./fr/Signin.json\": 610,\n\t\"./fr/bridge.json\": 611,\n\t\"./fr/broker.json\": 612,\n\t\"./fr/dip-history-two.json\": 613,\n\t\"./fr/dip-history.json\": 614,\n\t\"./fr/dip-two.json\": 615,\n\t\"./fr/faucet.json\": 616,\n\t\"./fr/footer.json\": 617,\n\t\"./fr/governance.json\": 618,\n\t\"./fr/header.json\": 619,\n\t\"./fr/home.json\": 620,\n\t\"./fr/lite.json\": 621,\n\t\"./fr/mining.json\": 622,\n\t\"./fr/mobile-lite.json\": 623,\n\t\"./fr/nuls.json\": 624,\n\t\"./fr/permission.json\": 625,\n\t\"./fr/pro.json\": 626,\n\t\"./fr/team.json\": 627,\n\t\"./fr/trading-mining.json\": 628,\n\t\"./zh/Signin.json\": 629,\n\t\"./zh/bridge.json\": 630,\n\t\"./zh/broker.json\": 631,\n\t\"./zh/dip-history-two.json\": 632,\n\t\"./zh/dip-history.json\": 633,\n\t\"./zh/dip-two.json\": 634,\n\t\"./zh/faucet.json\": 635,\n\t\"./zh/footer.json\": 636,\n\t\"./zh/governance.json\": 637,\n\t\"./zh/header.json\": 638,\n\t\"./zh/home.json\": 639,\n\t\"./zh/lite.json\": 640,\n\t\"./zh/mining.json\": 641,\n\t\"./zh/mobile-lite.json\": 642,\n\t\"./zh/nuls.json\": 643,\n\t\"./zh/permission.json\": 644,\n\t\"./zh/pro.json\": 645,\n\t\"./zh/team.json\": 646,\n\t\"./zh/trading-mining.json\": 647\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 571;","import withModal from \"../hoc/withModal\"\nimport './loading.less'\n\nexport default withModal(() => (<div className='loading-mask'>\n  <div className=\"snippet\" data-title=\".dot-pulse\">\n      <div className=\"stage\">\n        <div className=\"dot-pulse\"></div>\n      </div>\n    </div>\n</div>))\n","import React, { useState, useEffect } from 'react'\nimport {isBrowser,isMobile,deviceDetect} from 'react-device-detect'\nimport LoadableComponent from './utils/LoadableComponent';\nimport { inject, observer } from 'mobx-react';\nimport LoadingMask from './components/Loading/LoadingMask';\nimport { useRouteMatch } from 'react-router-dom';\nimport type from './model/Type'\nconst DesktopApp = LoadableComponent(() => import('./desktop/index'))\nconst MobileApp = LoadableComponent(() => import('./mobile/index'))\nconst getIsDesktop = () => window.screen.width > 1024;\nfunction Mask({loading}){\n  const [isOpen, setIsOpen] = useState(false)\n  useEffect(() => {\n    setIsOpen(loading.isShowMask)\n    return () => {\n    }\n  }, [loading.isShowMask])\n  return <LoadingMask modalIsOpen={isOpen} overlay={{background : 'none',top : '80px'}}/>\n}\n\nconst MaskWrapper = inject('loading')(observer(Mask))\n\nfunction App({intl,loading}) {\n  const [isDesktop, setIsDesktop] = useState(getIsDesktop())\n  const isOptionsLite = useRouteMatch('/options/lite') ? true : false\n  const isOptionsPro = useRouteMatch('/options/pro') ? true : false\n  const isOption = isOptionsLite || isOptionsPro\n  const catagory = isOption ? 'option' : 'future'\n  type.setCurrent(catagory)\n\n  // useEffect(() => {\n  //   const onResize = () => {\n  //     if(getIsDesktop() !== isDesktop){\n  //       window.location.reload()\n  //     }\n  //   }\n  //   window.addEventListener(\"resize\", onResize);\n  //   return () => window.removeEventListener(\"resize\", onResize)\n  // },[]);\n  if(isBrowser){\n    return <><MaskWrapper/><DesktopApp locale={intl.locale}></DesktopApp></>\n  } else {\n    return <><MaskWrapper/><MobileApp locale={intl.locale}><Mask loading={loading}/></MobileApp></>\n  }\n}\n\nexport default inject('intl','loading')(observer(App)) ;\n","\nimport {getUserWalletBalance ,DeriEnv,connectWallet, isUnlocked,openConfigListCache, unlock } from \"../lib/web3js/indexV2\";\nimport config from '../config.json'\nimport { formatBalance, eqInNumber, storeChain } from \"../utils/utils\";\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\nimport version from './Version'\n\nclass Wallet {\n  \n  detail = {}\n  \n  constructor(){\n    makeAutoObservable(this,{\n      detail : observable,\n      setDetail : action,\n      supportV2 : computed,\n      supportV1 : computed,\n      supportAllVersion : computed,\n      supportChain : computed,\n      supportInnocation : computed,\n      supportOpen : computed\n    })\n  }\n\n  supportWeb3 = () => !!window.ethereum\n\n  isConnected = () => !!this.detail.account;\n\n\n  async isApproved(pool,bTokenId){\n    if(this.detail.chainId && this.supportChain){\n      if(version.isOpen){\n        await openConfigListCache.update()\n      }\n      const isApproved = await isUnlocked(this.detail.chainId,pool,this.detail.account,bTokenId).catch(e => console.error('load approve error'))\n      this.detail.isApproved = isApproved;\n      this.setDetail(this.detail)\n      return isApproved;\n    }\n  }\n\n  approve = async (pool,bTokenId) => {\n    if(this.detail.chainId){\n      const approved = await unlock(this.detail.chainId,pool,this.detail.account,bTokenId);\n      return approved\n    }\n  }\n\n  connect =  async () => {\n    const res = await connectWallet();\n    return new Promise(async (resolve,reject) => {\n      if(res.success){\n        const {chainId,account} = res\n        const wallet = await this.loadWalletBalance(chainId,account);      \n        resolve(wallet)\n      } else {\n        reject(null)\n      }\n    })\n  }\n\n  switchNetwork = async (network) => {\n    if(!this.isConnected()){\n      this.connect();\n    }\n    const chainInfo = config[DeriEnv.get()]['chainInfo']\n    const chainId =`0x${(parseInt(network.id)).toString(16)}`\n    network = chainInfo[parseInt(network.id)]\n    try {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId}],\n      });\n    } catch (error) {\n      // alert('err' + JSON.stringify(error))\n      if (error.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [{chainId,...network.metamask}],\n          });\n        } catch (addError) {\n          console.error('err' ,addError)\n        }\n      }\n    }\n  }\n\n  loadWalletBalance = async (chainId,account) => {\n    if(version.isOpen){\n      await openConfigListCache.update()\n    }\n    const balance = await getUserWalletBalance(chainId,account).catch(e => console.log('wallet account is not exist'))\n    const detail = {chainId,account,balance,formatBalance : formatBalance(balance)}\n    const env = DeriEnv.get();\n    const {chainInfo} = config[env]\n    \n    if(chainInfo[chainId]){\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\n      storeChain(chainInfo[chainId])\n    }\n    this.setDetail(detail)\n    return detail;\n  }\n\n  get = () => {\n    return this.detail;\n  }\n\n  setDetail(detail){\n    this.detail = detail;\n  }\n\n  refresh(){\n    this.loadWalletBalance(this.detail.chainId,this.detail.account);\n  }\n\n  isSupportChain(isOptions){\n    const chainId = this.detail.chainId\n    const env = DeriEnv.get();\n    const {chainInfo} = config[env]\n    if(isOptions){\n      return chainInfo[chainId] && chainInfo[chainId]['supportOptions']\n    } else {\n      return this.supportChain\n    }\n  }\n\n  get supportV2() {\n    return this.detail.supportV2\n  }\n\n  get supportV1(){\n    return this.detail.supportV1;\n  }\n\n  get supportAllVersion(){\n    return this.detail.supportV1 && this.detail.supportV2\n  }\n\n  get supportChain(){\n    return this.detail.supported\n  }\n\n  get supportInnovation(){\n    return this.detail.supportInnovation\n  }\n\n  get supportOpen(){\n    return this.detail.supportOpen\n  }\n\n\n}\n\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\nimport { equalIgnoreCase } from \"../utils/utils\";\nimport webSocket from \"./WebSocket\";\n\nclass Oracle {\n  symbol = 'BTCUSD'\n  timeType = 'min'\n  index = 0.00\n  kData = []\n  ws = null\n  paused = false;\n  listeners = {}\n  already = false\n\n  constructor(){\n    makeAutoObservable(this,{\n      index : observable,\n      kData : observable,\n      setIndex : action,\n    })\n  }\n\n  load(symbol,timeType = 'min'){\n    webSocket.subscribe('get_kline_update',{symbol,time_type : 'min'},data => {\n      if(!this.paused && equalIgnoreCase(symbol,data.symbol)) {\n        this.setIndex(data.close)\n        for(const key of Object.keys(this.listeners)){\n          if(typeof this.listeners[key] === 'function'){\n            this.listeners[key](data)\n          }\n        }\n      }\n    })\n    if(symbol !== this.symbol){\n      this.unsubscribeBars(this.symbol)\n    }\n    this.setSymbol(symbol)\n    this.setTimeType(timeType);\n    this.already = true\n  }\n\n  addListener(id,listener){\n    if(!this.listeners[id]) {\n      this.listeners[id] = listener\n    }    \n  }\n\n  unsubscribeBars(symbol){\n    webSocket.unsubscribe('un_get_kline',{symbol : symbol,time_type : 'min'});\n  }\n\n\n  resume(){\n    this.setPause(false)\n  }\n\n  pause(){\n    this.setPause(true)\n  }\n\n  clean(){\n    this.unsubscribeBars(this.symbol);\n  }\n\n  setIndex(index){\n    if(!this.paused) {\n      this.index = index;\n    }\n  }\n\n  setSymbol(symbol){\n    this.symbol = symbol\n  }\n\n  setTimeType(timeType){\n    this.timeType = timeType;\n  }\n  setPause(paused){\n    this.paused = paused\n  }\n}\n\nexport default Oracle","import { getPositionInfo ,bg,getPositionInfos} from \"../lib/web3js/indexV2\"\nimport { eqInNumber } from '../utils/utils';\nimport type from \"./Type\";\n\nexport default class Position {\n\n   callback = () => {}\n   callbackALL = ()=>{}\n   wallet = null;\n   spec = null\n   counter = 0\n \n   mockPositionInfo = {\n    averageEntryPrice: \"\",\n    liquidationPrice: \"\",\n    margin: \"20000\",\n    marginHeld: \"10068.26538\",\n    marginHeldBySymbol : \"293.16152\",\n    unrealizedPnl: \"3.1311\",\n    volume: \"800\",\n    premiumFundingAccrued:'',\n    deltaFundingAccrued:'',\n    strikePrice:0,\n    timePrice:0,\n    volatility:0,\n    isCall:false,\n   }\n\n   async load(wallet,spec,callback){\n     this.wallet= wallet; \n     this.spec = spec\n     if(callback){\n      this.callback = callback\n     }\n     if(wallet && wallet.isConnected() && wallet.isSupportChain(type.isOption) && spec && spec.pool){\n      const position = await getPositionInfo(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\n      if(position){\n        if(this.callback){\n          this.callback(position)\n        }\n      }\n      return position;\n     }\n   }\n\n   async loadAll(wallet,spec,callback){\n    this.wallet= wallet; \n    this.spec = spec\n    if(callback){\n     this.callbackALL = callback\n    }\n    if(wallet && wallet.isConnected() && wallet.isSupportChain(type.isOption) && spec && spec.pool){\n      let res  = await getPositionInfos(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\n      let positions = [] \n      if(res.length) {\n        positions = res.map(item => {\n          item.balanceContract = bg(item.margin).plus(item.unrealizedPnl).toString()\n          item.direction = (+item.volume) > 0 ? 'LONG' : (!item.volume || eqInNumber(item.volume, 0) || !item.volume ? '--' : 'SHORT')\n          return item\n        })\n      }\n      if(positions){\n        if(this.callbackALL){\n          this.callbackALL(positions)\n        }\n      }\n      return positions;\n    }\n   } \n\n   startAll(){\n    this.paused = false;\n    if(!this.started){\n      this.runInAction(async () => await this.loadAll(this.wallet,this.spec))\n    }\n    this.started = true\n  }\n\n   start(){   \n    this.paused = false;\n    if(!this.startedAll){\n      this.runInAction(async () => await this.load(this.wallet,this.spec))\n    }\n    this.startedAll = true\n   }\n\n   runInAction(action){\n    this.timer = window.setTimeout(async () => {\n      if(!this.paused){\n        const position = await action();\n        if(position) {\n          this.runInAction(action);\n        }\n      }\n    },3000)\n   }\n\n   pause(){\n    this.paused = true\n   }\n\n   resume(){\n    this.clean();\n    this.start(this.callback)\n   }\n\n   clean(){\n     this.started = false;\n     this.startedAll = false;\n     this.paused = false;\n     this.timer = null;\n   }\n \n}","import { getSpecification } from \"../lib/web3js/indexV2\";\nimport { makeObservable, observable, action, computed } from \"mobx\";\nimport Intl from \"./Intl\";\nimport version from \"./Version\";\nimport type from \"./Type\";\n\nexport default class Contract {\n  info = {\n    bTokenSymbol:[\"BUSD\"],\n    symbol:'BTCUSD',\n    multiplier:'0.0001',\n    fundingRateCoefficient:'0.0000025',\n    deltaFundingCoefficient:'0.2',\n    minInitialMarginRatio:0.1,\n    initialMarginRatio:0.1,\n    minMaintenanceMarginRatio:0.05,\n    maintenanceMarginRatio:0.05,\n    feeRatio:0.0005,\n    underlier :'',\n    strike:0,\n    optionType:'C',\n    bTokenSymbolDisplay : ['BUSD']\n  }\n  // constructor(){\n  //   makeObservable(this,{\n  //     info : observable,\n  //     setInfo : action,\n  //     bTokenSymbolDisplay : computed\n  //   })\n  // }\n\n  async load(wallet,config){\n    if(wallet && wallet.supportChain && config && config.pool !== this.info.pool){\n      const spec = await getSpecification(wallet.detail.chainId,config.pool,config.symbolId);\n      spec.bTokenSymbol = this.bTokenSymbolDisplay(spec)\n      if(type.isOption){\n        spec.underlier = this.getUnderlierStrike(spec).underlier\n        spec.strike = this.getUnderlierStrike(spec).strike\n        spec.optionType = this.getUnderlierStrike(spec).optionType\n      }\n      this.setInfo(spec)\n    }\n    return this.info\n  }\n\n  setInfo(info){\n    this.info = info\n  }\n\n  getUnderlierStrike(spec){\n    let underlier = spec.symbol.split('-')[0]\n    let strike = spec.symbol.split('-')[1]\n    let optionType = spec.symbol.split('-')[2]\n    return {\n      underlier:underlier,\n      strike:strike,\n      optionType:optionType\n    }\n  }\n\n  bTokenSymbolDisplay(spec){\n    if(version.isV1 || version.isV2Lite || type.isOption || version.isOpen){\n      return [spec.bTokenSymbol];\n    }\n    return spec.bTokenSymbol;\n  }\n}","import { getTradeHistory } from \"../lib/web3js/indexV2\";\n\n\nexport default class History {\n\n   async load(wallet,config,isOptions){\n      if(wallet && wallet.isSupportChain(isOptions) && wallet.detail.chainId && config && config.pool){\n         const all = await getTradeHistory(wallet.detail.chainId,config.pool,wallet.detail.account,config.symbolId); \n         return all;\n      } else {\n         return []\n      }\n   }\n}","import { makeObservable, observable, action, computed } from \"mobx\";\n\nclass Loading {\n  isLoading = false\n  constructor(){\n    makeObservable(this,{\n      isLoading : observable,\n      setIsLoading : action,\n      loading : action,\n      isShowMask : computed\n    })\n  }\n\n  setIsLoading(isLoading){\n    this.isLoading = isLoading\n  }\n\n  loading(){\n    this.setIsLoading(true)\n  }\n\n  loaded(){\n    this.setIsLoading(false)\n  }\n\n  get isShowMask(){\n    return this.isLoading === true;\n  }\n\n  \n}\n\nexport default new Loading();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom'\nimport App from './App';\nimport './assets/deri.less';\nimport { Provider } from 'mobx-react';\nimport Wallet from './model/Wallet';\nimport Trading from './model/Trading';\nimport { DeriEnv } from './lib/web3js/indexV2';\nimport version from './model/Version';\nimport intl from './model/Intl';\nimport loading from './model/Loading';\nimport   type from './model/Type';\n\nconst wallet = new Wallet();\nconst trading = new Trading()\n\nif(process.env.NODE_ENV === 'production') {\n  DeriEnv.set('prod')\n}\nDeriEnv.set('testnet')\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider wallet={wallet} type={type}  trading={trading} version={version} intl={intl} loading={loading}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","import { observable, action, computed, makeObservable } from \"mobx\";\nimport Oracle from \"./Oracle\";\nimport Position from \"./Position\";\nimport Contract from \"./Contract\";\nimport History from './History'\nimport Config from \"./Config\";\nimport { eqInNumber, storeConfig, getConfigFromStore, restoreChain, getFormatSymbol, getMarkpriceSymbol } from \"../utils/utils\";\nimport { getFundingRate, priceCache } from \"../lib/web3js/indexV2\";\nimport { bg } from \"../lib/web3js/indexV2\";\nimport Intl from \"./Intl\";\nimport version from './Version'\nimport type from './Type'\nimport Type from \"./Type\";\n\n/**\n * 交易模型\n * 关联对象\n * 1. chain\n * 2. Oracle\n * 3. position\n * 4. contract\n * 5. history\n * 计算\n * 1. dynamic balance\n * 2. available blance\n * 响应事件\n * 1. chain change\n * 2. chain’s symbol changed\n * 3. index update\n * 4. volum change\n * 5. margin change\n * 输出\n * 1. dynamic balance\n * 2. margin\n * 3. available balance\n * 4. volume\n * 5. specs\n * 6. spec\n * 7. position\n * 8. contract\n * 9. fundingRate\n */\n\nexport default class Trading {\n  version = null;\n  wallet = null;\n  type = null;\n  configs = [] \n  config = null;\n  index = ''\n  volume = ''\n  paused = false\n  slideIncrementMargin = 0\n  position = {}\n  positions = []\n  contract = {}\n  fundingRate = {}\n  history = []\n  userSelectedDirection = 'long'\n  supportChain = true\n  optionsConfigs = {}\n\n  constructor(){\n    makeObservable(this,{\n      index : observable,\n      volume : observable,\n      slideIncrementMargin : observable,\n      fundingRate : observable,\n      position : observable,\n      positions : observable,\n      history : observable,\n      contract : observable,\n      userSelectedDirection : observable,\n      supportChain : observable,\n      setWallet :action,\n      setConfigs : action,\n      setOptionConfigs : action,\n      setConfig : action,\n      setIndex : action,\n      setContract : action,\n      setPosition : action,\n      setPositions : action,\n      setVolume : action,\n      setUserSelectedDirection : action,\n      // setSupportChain : action,\n      setFundingRate : action,\n      setHistory : action,\n      setSlideMargin : action,\n      amount : computed,\n      fundingRateTip : computed,\n      optionFundingRateTip : computed,\n      initialMarginRatioTip : computed,\n      maintenanceMarginRatioTip : computed,\n      TransactionFeeTip : computed,\n      dpmmFundingRateTip :computed,\n      fundingCoefficientTip :computed,\n      rateTip:computed,\n      multiplierTip : computed,\n      TotalNetPositionTip:computed,\n      direction : computed,\n      volumeDisplay : computed,\n      isNegative : computed,\n      isPositive : computed\n    })\n    this.configInfo = new Config();\n    this.oracle = new Oracle();\n    this.positionInfo = new Position()\n    this.contractInfo = new Contract();\n    this.historyInfo = new History()\n  }\n\n  /**\n   * 初始化\n   * wallet and version changed will init\n   */\n  async init(wallet,finishedCallback){  \n    const isOption = Type.isOption\n    const all = await this.configInfo.load(version,isOption);\n    //如果连上钱包，有可能当前链不支持\n    if(wallet.isConnected()){\n      this.setWallet(wallet);\n      this.setConfigs(all.filter(c => eqInNumber(wallet.detail.chainId,c.chainId)))\n      let defaultConfig = this.getDefaultConfig(this.configs,wallet);\n      //如果还是为空，则默认用所有config的第一条\n      if(!defaultConfig){\n        defaultConfig = all.length > 0 ? all[0] : {}\n      }\n      this.setConfig(defaultConfig);\n      //如果没有钱包或者链接的链不一致，设置默认config，BTCUSD\n    } else if(!wallet.isConnected() || !wallet.supportWeb3()){\n      //没有钱包插件\n      version.setCurrent('v2')\n      const all = await this.configInfo.load(version,isOption);\n      const defaultConfig = all.find(c => c.symbol === 'BTCUSD')\n      this.setConfig(defaultConfig)\n    }\n    this.loadByConfig(this.wallet,this.config,true,finishedCallback,isOption)\n    this.setVolume('')\n  }\n\n  async onSymbolChange(spec,finishedCallback,isOption){\n    const config = this.configs.find(config => config.pool === spec.pool && config.symbolId === spec.symbolId)\n    //v1 只需要比较池子地址，v2 需要比较symbolId\n    const changed = version.isV1 ? spec.pool !== this.config.pool : spec.symbolId !== this.config.symbolId\n    this.onChange(config,changed,finishedCallback,isOption)\n  }\n\n  async onChange(config,changed,finishedCallback,isOption){\n    if(config){\n      this.pause();\n      this.setConfig(config)\n      this.loadByConfig(this.wallet,config,changed,finishedCallback,isOption);  \n      if(changed){\n        this.store(config)\n      }    \n      this.resume()\n      this.setVolume('')\n    } else{\n      finishedCallback && finishedCallback()\n    }\n  }\n\n  async loadByConfig(wallet,config,symbolChanged,finishedCallback,isOption){\n     //切换指数\n    if(symbolChanged && config){\n      this.oracle.addListener('trading',data => {\n        this.setIndex(data.close)\n      })\n    }\n    if(wallet && wallet.isConnected && config){\n      Promise.all([\n        this.positionInfo.load(wallet,config,(position) => {\n          this.setPosition(position)\n          this.syncFundingRate(wallet,config,isOption)\n        }),\n        this.contractInfo.load(wallet,config,isOption),\n        this.loadFundingRate(wallet,config,isOption),\n        this.historyInfo.load(wallet,config,isOption),\n        this.positionInfo.loadAll(wallet,config,positions => this.setPositions(positions)),\n      ]).then(results => {\n        if(results.length === 5){\n          results[0] && this.setIndex(results[0].price) && this.setPosition(results[0]);\n          results[1] && this.setContract(results[1]);\n          results[2] && this.setFundingRate(results[2]);\n          results[3] && this.setHistory(results[3]);\n          results[4] && this.setPositions(results[4]);\n          // this.refreshCache();\n        } \n      }).finally(e => {\n        finishedCallback && finishedCallback()\n        this.oracle.load(getFormatSymbol(config.symbol,config,true))\n        this.positionInfo.start()\n        this.positionInfo.startAll();\n      })\n    } else {\n      finishedCallback && finishedCallback()\n    }\n  }\n\n  refreshCache(){\n    const {pool} = this.config;\n    const symbol = type.isOption ? this.config.symbol.split('-')[0] : this.config.symbol\n    priceCache.clear();\n    priceCache.update(pool,symbol)\n  }\n\n\n  //优先使用session storage 的，如果缓存跟用户当前链一直，则命中缓存，否则取当前配置第一条\n  getDefaultConfig(configs = [],wallet){\n    let defaultConfig = null;\n    if(configs.length > 0){    \n      const fromStore = this.getFromStore();\n      if(fromStore && eqInNumber(wallet.detail.chainId,fromStore.chainId)){\n        defaultConfig = fromStore;\n      }\n      if(defaultConfig){\n        //虽然从缓存获得config ，需要判断池子地址是否一致，否则用可用config的第一条\n        const pos = configs.findIndex(c => c.pool === defaultConfig.pool);\n        if(pos === -1){\n          defaultConfig = configs[0];\n        }\n      } else {\n        defaultConfig = configs[0]\n      }   \n    }\n    return defaultConfig;    \n  }\n \n  //存起来\n  store(config){\n    storeConfig(version.current,config)\n  }\n\n  getFromStore(){\n    return getConfigFromStore(version.current)\n  }\n\n  async syncFundingRate(){\n    //资金费率和仓位同步\n    const fundingRate = await this.loadFundingRate(this.wallet,this.config)   \n    if(fundingRate){\n      this.setFundingRate(fundingRate)      \n    }\n  }\n\n  async refresh(){\n    this.pause()\n    this.positionInfo.load(this.wallet,this.config, position  => {       \n      this.setPosition(position);\n      this.syncFundingRate();\n    });\n    this.positionInfo.loadAll(this.wallet,this.config,positions => this.setPositions(positions))\n    this.syncFundingRate();\n    this.wallet.loadWalletBalance(this.wallet.detail.chainId,this.wallet.detail.account)\n    const history = await this.historyInfo.load(this.wallet,this.config)\n    if(history){\n      this.setHistory(history)\n    }\n    this.positionInfo.start();\n    this.positionInfo.startAll();\n    this.setVolume('')\n    this.resume();\n  }\n\n  /**\n   * 暂停实时读取index和定时读取position\n   */\n  pause(){\n    this.setPaused(true)\n    this.oracle.pause();\n    this.positionInfo.pause();\n  }\n\n  /**\n   * 恢复读取\n   */\n  resume(){\n    this.setPaused(false)\n    this.oracle.resume();\n    this.positionInfo.resume();\n  }\n\n  setWallet(wallet){\n    this.wallet = wallet;\n  }\n\n  setConfigs(configs){\n    if(type.isOption){\n      this.setOptionConfigs(configs)\n    } \n    this.configs = configs\n  }\n\n  setOptionConfigs(configs){\n    this.optionsConfigs = this.groupConfigBySymbol(configs)\n  }\n\n  groupConfigBySymbol(configs = []){\n    return configs.reduce((total,config) => {\n      const symbol = config.symbol.split('-')[0]\n      if(!total[symbol]){\n        total[symbol] = []\n      }\n      total[symbol].push(config)\n      return total;\n    },[])\n  }\n\n  setConfig(config){\n    //just for v2 and lite version in futrue\n    if(type.isFuture && (version.isV2 || version.isV2Lite)){\n      // config.markpriceSymbol = `${config.symbol}-MARKPRICE`\n      config.markpriceSymbolFormat = getMarkpriceSymbol(config)\n    }\n    this.config = config\n  }\n\n  setIndex(index){\n    this.index = index;\n  }\n\n  setPosition(position){\n    if(position){\n      this.position = position\n    }\n  }\n\n  setPositions(positions){\n    if(positions){\n      this.positions = positions\n    }\n  }\n\n  setContract(contract){\n    this.contract = contract\n  }\n\n  setHistory(history){\n    this.history = history\n  }\n\n  setFundingRate(fundingRate){\n    this.fundingRate = fundingRate;\n  }\n\n  setVolume(volume){\n    this.volume = volume;\n  }\n\n  setPaused(paused){\n    this.paused = paused\n  }\n\n  setUserSelectedDirection(direction){\n    this.userSelectedDirection = direction\n  }\n\n  setSlideMargin(slideIncrementMargin){\n    if(slideIncrementMargin !== ''){\n      this.slideIncrementMargin =  slideIncrementMargin\n      const position = this.position;\n      const price = position.price || this.index\n      const increment = slideIncrementMargin - position.marginHeld\n      let MarginRatio = type.isOption ? this.contract.initialMarginRatio : this.contract.minInitialMarginRatio;\n      // let volume =  increment / (price * this.contract.multiplier * MarginRatio);\n      let volume = bg(increment).div(bg(bg(price).times(bg(this.contract.multiplier).times(bg(MarginRatio))))).toString()\n      // if(type.isOption){\n        volume = +volume * +this.contract.multiplier\n        let index = this.contract.multiplier.indexOf('.')\n        let num = this.contract.multiplier.slice(index);\n        let length = num.length \n        let value = volume.toString()\n        if(value.indexOf(\".\") !== -1){\n          value = value.substring(0,value.indexOf(\".\") + length)\n        }\n        this.setVolume(value)\n      // }else{\n      //   this.setVolume(volume.toFixed(0))\n      // }\n    }\n  }\n\n  clean(){\n    this.oracle.clean();\n    this.positionInfo.clean();\n    this.version = null;\n    this.configs = [] \n    this.config = null;\n    this.index = ''\n    this.volume = ''\n    this.fundingRate = {}\n    this.position = {}\n    this.positions = []\n    this.contract = {}\n    this.history = []\n    this.userSelectedDirection = 'long'\n    this.optionsConfigs = {}\n  }\n\n  get volumeDisplay(){\n    if((type.isFuture && Math.abs(this.volume) === 0 && isNaN(this.volume) )|| this.volume === '' || this.volume === '-' || this.volume === 'e') {\n      return '';\n    } else {\n      return Math.abs(this.volume)\n    }\n  }\n  \n  get amount(){\n    const position = this.position\n    const contract = this.contract;\n    let initVolume = this.volume === '' || isNaN(this.volume) ? 0 : Math.abs(this.volume)\n    // let optionVolume = type.isOption ? (+initVolume / +this.contract.multiplier):initVolume;\n    let optionVolume = (+initVolume / +this.contract.multiplier);\n    const volume = optionVolume\n    let {margin, marginHeldBySymbol:currentSymbolMarginHeld ,marginHeld,unrealizedPnl} = position\n    const price = position.price || this.index\n    //v2\n    let otherMarginHeld = bg(marginHeld).minus(currentSymbolMarginHeld)\n    otherMarginHeld = otherMarginHeld.isNaN() ? bg(0) : otherMarginHeld;\n    const contractValue = volume * price * contract.multiplier;\n    const incrementMarginHeld =  type.isOption ? contractValue * contract.initialMarginRatio : contractValue * contract.minInitialMarginRatio\n    let totalMarginHeld = bg(marginHeld) ;\n\n    //如果当前仓位为正仓用户做空或者当前仓位为负仓用户做多，总仓位相减,取绝对值\n    if((this.isPositive && this.userSelectedDirection === 'short') || (this.isNegative && this.userSelectedDirection === 'long')){\n      totalMarginHeld = totalMarginHeld.minus(incrementMarginHeld);\n      if(totalMarginHeld.lt(otherMarginHeld)){\n        totalMarginHeld =  otherMarginHeld.plus(otherMarginHeld.minus(totalMarginHeld).abs())        \n      } \n      currentSymbolMarginHeld = bg(currentSymbolMarginHeld).minus(incrementMarginHeld).abs().toFixed(2)\n    } else {\n      totalMarginHeld = bg(marginHeld).plus(incrementMarginHeld)\n      if(currentSymbolMarginHeld){\n        currentSymbolMarginHeld = bg(currentSymbolMarginHeld).plus(incrementMarginHeld).toFixed(2);\n      }\n    }\n\n    const dynBalance = margin && bg(margin).plus(unrealizedPnl).toFixed(2);    \n    //总保证金和当前symbol保证金不能超过余额\n    totalMarginHeld = totalMarginHeld.gt(dynBalance) ? dynBalance : totalMarginHeld.toFixed(2)\n    if(currentSymbolMarginHeld){\n      currentSymbolMarginHeld = (+currentSymbolMarginHeld) > (+dynBalance) ? dynBalance : (+currentSymbolMarginHeld).toFixed(2);\n    }\n    let available = bg(dynBalance).minus(totalMarginHeld).toFixed(2)\n    const exchanged = bg(volume).multipliedBy(contract.multiplier).toFixed(4)\n    const totalVolume = this.userSelectedDirection === 'short' ? (-this.volumeDisplay + (+position.volume)) : ((+this.volumeDisplay) +  (+position.volume))    \n    const totalContractValue = (+totalVolume) * price \n    const curContractValue = (+this.volumeDisplay) * price\n    const leverage = Math.abs(curContractValue / (+dynBalance)).toFixed(1);\n    const afterLeverage = Math.abs((+totalContractValue) / (+dynBalance)).toFixed(1); \n    available = (+available) < 0 ? 0 : available\n    return {\n      volume : this.volume,\n      dynBalance : dynBalance,\n      margin : totalMarginHeld,\n      available : available,\n      exchanged : exchanged,\n      currentSymbolMarginHeld : currentSymbolMarginHeld,\n      leverage : leverage,\n      afterLeverage : afterLeverage\n    }\n  }\n\n  get direction(){    \n    // 正仓\n    if(this.margin !== ''){\n      if((+this.position.volume) > 0) {\n        if(Math.abs(this.volume) > Math.abs(this.position.volume)) {\n          return 'long'\n        } else {\n          return 'short'\n        }\n      } else if((+this.position.volume) < 0){\n        //负仓\n        if((+this.volume) > Math.abs(+this.position.volume)){\n          return 'short'\n        } else {\n          return 'long'\n        }\n      }\n    }\n    return 0\n  }\n\n  //正仓\n  get isPositive(){\n    return bg(this.position.volume).gt(0);\n  }\n\n  //负仓\n  get isNegative(){\n    return bg(this.position.volume).isNegative();\n  }\n\n  //资金费率\n  async loadFundingRate(wallet,config,isOption){\n    if(config){\n      const chainId = wallet && wallet.isConnected() && wallet.isSupportChain(isOption) ? wallet.detail.chainId : config.chainId\n      if(config){    \n        const res = await getFundingRate(chainId,config.pool,config.symbolId).catch(e => console.error('getFundingRate was error,maybe network is wrong'))\n        return res;\n      }\n    }\n  }\n\n  get fundingRateTip(){    \n    if(version && version.isV2){\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\n        if(Intl.locale === 'zh'){\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n ${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol}`        \n        } else {\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')}`        \n        }\n        \n      }\n    } else {\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\n        if(Intl.locale === 'zh'){\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} `        \n        } else {\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')})`        \n        }        \n      }\n    }\n    return ''\n  }\n\n  get optionFundingRateTip(){\n    if(this.fundingRate && this.fundingRate.premiumFundingPerSecond && this.config){\n      if(Intl.locale === 'zh'){\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\n      `\\n ${Intl.get('lite','per-second')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.config.bTokenSymbol} `        \n      } else {\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\n      `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.config.bTokenSymbol} ${Intl.get('lite','per-second')}`        \n      }\n    }\n    return ''\n  }\n  get dpmmFundingRateTip(){\n    if(this.fundingRate && this.fundingRate.fundingPerSecond && this.config){\n      if(Intl.locale === 'zh'){\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.fundingPerSecond}` +\n      `\\n ${Intl.get('lite','per-second')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingPerSecond} ${this.config.bTokenSymbol} `        \n      } else {\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.fundingPerSecond}` +\n      `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingPerSecond} ${this.config.bTokenSymbol} ${Intl.get('lite','per-second')}`        \n      }\n    }\n    return ''\n  }\n\n  get rateTip(){\n    if(this.fundingRate && this.fundingRate.funding0 && this.position.markPrice){\n      return `${Intl.get('lite','rate-hover-one')} ${bg(this.fundingRate.funding0).div(bg(this.position.markPrice) ).times(bg(100)).toString()}% ${Intl.get('lite','rate-hover-two')}`\n    }\n    return ''\n  }\n\n  get fundingCoefficientTip(){\n    if(this.contract && this.contract.fundingRateCoefficient && this.config.unit){\n     if(Intl.locale === 'zh'){\n      return `1${this.config.unit} ${Intl.get('lite','funding-coefficient-hove-one')} ${Intl.get('lite','funding-coefficient-hove-two')}${this.contract.fundingRateCoefficient} ${Intl.get('lite','funding-coefficient-hove-three')} ${bg(this.contract.fundingRateCoefficient).times(bg(86400)).toString()} ${Intl.get('lite','per-day')}\n      `\n     }else{\n      return `${Intl.get('lite','funding-coefficient-hove-one')} ${this.config.unit} ${Intl.get('lite','funding-coefficient-hove-two')} ${this.contract.fundingRateCoefficient} ${Intl.get('lite','funding-coefficient-hove-three')} ${bg(this.contract.fundingRateCoefficient).times(bg(86400)).toString()} ${Intl.get('lite','per-day')}\n      `\n     }\n      \n    }\n    return ''\n  }\n\n  get initialMarginRatioTip(){\n    if(this.contract && this.contract.initialMarginRatioOrigin){\n      return `${Intl.get('lite','in-the-money-initial')} = ${this.contract.initialMarginRatioOrigin}` +\n      `\\n${Intl.get('lite','out-of-money-initial')} = ${Intl.get('lite','in-max')}(${this.contract.initialMarginRatioOrigin}${Intl.get('lite','otm-ratio-initial')} ${this.contract.initialMarginRatioOrigin / 10})` +\n      `\\n\\n${Intl.get('lite','otm-ratio-max')}`\n    }\n    return ''\n  }\n  get maintenanceMarginRatioTip(){\n    if(this.contract && this.contract.maintenanceMarginRatioOrigin){\n      return `${Intl.get('lite','in-the-money-maintenance')} = ${this.contract.maintenanceMarginRatioOrigin}` +\n      `\\n${Intl.get('lite','out-of-money-maintenance')} = ${Intl.get('lite','in-max')}(${this.contract.maintenanceMarginRatioOrigin}${Intl.get('lite','otm-ratio-maintenance')} ${this.contract.maintenanceMarginRatioOrigin / 10})` +\n      `\\n\\n${Intl.get('lite','otm-ratio-max')}`\n    }\n    return ''\n  }\n\n  get multiplierTip(){\n    if(this.contract && this.config){\n      return `${Intl.get('lite','the-notional-value-of')} ${this.contract.multiplier}${this.config.unit}`\n    }\n    return ''\n  }\n\n  get TransactionFeeTip(){\n    if(this.contract && (this.contract.feeRatioITM && this.contract.feeRatioOTM)){\n        return `${Intl.get('lite','transaction-fee-tip-in-the-money')} ${this.contract.underlier} ${Intl.get('lite','price')}  * ${bg(this.contract.feeRatioITM).times(bg(100)).toString()} %` +\n        `\\n ${Intl.get('lite','transaction-fee-tip-out-of-money')} * ${bg(this.contract.feeRatioOTM).times(bg(100)).toString()} %`\n    }\n    return ''\n  }\n  get TotalNetPositionTip(){\n    if(this.contract && this.fundingRate.tradersNetVolume && this.config){\n        return `${Intl.get('lite','notional-of-total-net-position')} ${this.fundingRate.tradersNetVolume} ${this.config.unit}`\n    }\n    return ''\n  }\n\n}"],"sourceRoot":""}