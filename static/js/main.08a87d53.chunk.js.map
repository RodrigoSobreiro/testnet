{"version":3,"sources":["lib/web3js/shared/utils/time.js","lib/web3js/shared/index.js","lib/web3js/shared/config/constant.js","lib/web3js/shared/config/database.js","lib/web3js/shared/config/pool.js","lib/web3js/shared/config/broker.js","lib/web3js/shared/utils/derijsnext.js","lib/web3js/shared/contract/contract_base.js","lib/web3js/shared/utils/web3.js","model/Intl.js","lib/web3js/v1/api/api_v1_globals.js","lib/web3js/v1/api/contract_transaction_api.js","lib/web3js/v1/api/trade_history_api.js","lib/web3js/v1/api/rest_api.js","lib/web3js/v1/api/contract_query_api.js","lib/web3js/v2_lite/contract/perpetual_pool_old.js","lib/web3js/v2_lite/factory.js","lib/web3js/v2_lite/api/mining_query_api.js","lib/web3js/v2_lite/api/mining_transaction_api.js","lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/calculation/liquidity.js","lib/web3js/shared/api/api_globals.js","lib/web3js/v2_lite/utils.js","lib/web3js/v2_lite/api/trade_query_api.js","lib/web3js/v2_lite/api/trade_transaction_api.js","lib/web3js/v2_lite/api/trade_history_api.js","lib/web3js/option/calculation/findLiquidationPrice2.js","lib/web3js/option/calculation/trade.js","lib/web3js/option/contract/abis.js","lib/web3js/option/contract/everlasting_option_viewer.js","lib/web3js/option/contract/l_token_option.js","lib/web3js/option/contract/p_token_option.js","lib/web3js/option/factory/tokens.js","lib/web3js/option/utils.js","lib/web3js/option/contract/everlasting_option.js","lib/web3js/option/contract/option_pricer.js","lib/web3js/option/factory/pool.js","lib/web3js/option/api/mining_query_api.js","lib/web3js/option/api/mining_transaction_api.js","lib/web3js/option/calculation/PMM2.js","lib/web3js/option/api/trade_query_api.js","lib/web3js/option/api/trade_transaction_api.js","lib/web3js/option/api/trade_history_api.js","lib/web3js/v2_lite_open/api/transaction_api.js","lib/web3js/activity/config.js","lib/web3js/activity/utils.js","lib/web3js/activity/contract/abi/pTokenAirdropNULSAbi.js","lib/web3js/activity/contract/gen/PTokenAirdropNULS.js","lib/web3js/activity/contract/abi/deriVoteAbi.js","lib/web3js/activity/contract/gen/DeriVote.js","lib/web3js/activity/contract/factory.js","lib/web3js/activity/api/ptoken_airdrop.js","lib/web3js/activity/api/deri_staking.js","lib/web3js/activity/api/deri_vote.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/v2/api/mining_query_api.js","lib/web3js/v2/api/mining_transaction_api.js","lib/web3js/v2/api/trade_query_api.js","lib/web3js/v2/api/trade_transaction_api.js","lib/web3js/v2/api/trade_history_api.js","lib/web3js/v2_lite_dpmm/utils.js","lib/web3js/v2_lite_dpmm/calc.js","lib/web3js/v2_lite_dpmm/contract/adapter.js","lib/web3js/v2_lite_dpmm/contract/abi/perpetualPoolLiteAbi.js","lib/web3js/v2_lite_dpmm/contract/gen/PerpetualPoolLite.js","lib/web3js/v2_lite_dpmm/contract/abi/lTokenLiteAbi.js","lib/web3js/v2_lite_dpmm/contract/gen/LTokenLite.js","lib/web3js/v2_lite_dpmm/contract/abi/pTokenLiteAbi.js","lib/web3js/v2_lite_dpmm/contract/gen/PTokenLite.js","lib/web3js/v2_lite_dpmm/contract/factory.js","lib/web3js/v2_lite_dpmm/contract/PoolApi.js","lib/web3js/v2_lite_dpmm/api/trade_history_api.js","lib/web3js/v2_lite_dpmm/api/transaction_api.js","lib/web3js/v2_lite_dpmm/api/index.js","lib/web3js/v2_lite_dpmm/api/query_api.js","lib/web3js/v2_dpmm/contract/adapter.js","lib/web3js/v2_dpmm/contract/abi/lTokenAbi.js","lib/web3js/v2_dpmm/contract/gen/LToken.js","lib/web3js/v2_dpmm/contract/abi/pTokenAbi.js","lib/web3js/v2_dpmm/contract/gen/PToken.js","lib/web3js/v2_dpmm/contract/abi/perpetualPoolAbi.js","lib/web3js/v2_dpmm/contract/gen/PerpetualPool.js","lib/web3js/v2_dpmm/contract/abi/perpetualPoolRouterAbi.js","lib/web3js/v2_dpmm/contract/gen/PerpetualPoolRouter.js","lib/web3js/v2_dpmm/contract/factory.js","lib/web3js/v2_dpmm/contract/PoolApi.js","lib/web3js/v2_dpmm/api/query_api.js","lib/web3js/v2_dpmm/api/trade_history_api.js","lib/web3js/v2_dpmm/api/transaction_api.js","lib/web3js/v2_dpmm/api/index.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js","lib/web3js/shared/factory/index.js","lib/web3js/shared/utils/oracle.js","lib/web3js/shared/utils/api.js","lib/web3js/v2/contract/abis.js","lib/web3js/v2/contract/perpetual_pool.js","lib/web3js/v2/contract/perpetual_pool_router.js","lib/web3js/v2/contract/l_token.js","lib/web3js/v2/contract/p_token.js","lib/web3js/v2/factory.js","lib/web3js/shared/config/token.js","lib/web3js/v1/contract/perpetual_pool.js","lib/web3js/v1/contract/p_token.js","lib/web3js/v1/contract/l_token.js","lib/web3js/v1/factory.js","lib/web3js/shared/contract/TERC20.js","lib/web3js/shared/factory/contract/b_token.js","lib/web3js/shared/contract/deri/deri.js","lib/web3js/shared/contract/deri/mining_vault_pool.js","lib/web3js/shared/contract/deri/mining_vault_router.js","lib/web3js/shared/contract/deri/wormhole.js","lib/web3js/shared/factory/contract/deri.js","lib/web3js/shared/contract/lp_pool/slp_pool.js","lib/web3js/shared/contract/lp_pool/clp_pool.js","lib/web3js/shared/contract/lp_pool/clp2_pool.js","lib/web3js/shared/factory/contract/lp_pool.js","lib/web3js/shared/factory/contract/activity.js","lib/web3js/v1/calculation/fundingRate.js","lib/web3js/v1/calculation/index.js","lib/web3js/shared/config/env.js","model/Type.js","model/Version.js","lib/web3js/shared/utils/validate.js","lib/web3js/shared/utils/convert.js","lib/web3js/shared/config/pool_v1.js","utils/utils.js","lib/web3js/shared/utils/factory.js","lib/web3js/shared/api/database_api.js","lib/web3js/shared/contract/abi/pancakePairAbi.js","lib/web3js/shared/contract/gen/PancakePair.js","lib/web3js/shared/contract/adapter.js","lib/web3js/shared/contract/abi/TERC20Abi.js","lib/web3js/shared/contract/gen/TERC20.js","lib/web3js/shared/contract/abi/ERC20Abi.js","lib/web3js/shared/contract/gen/ERC20.js","lib/web3js/shared/contract/abi/chainlinkOracleAbi.js","lib/web3js/shared/contract/gen/ChainlinkOracle.js","lib/web3js/shared/contract/abi/offChainOracleAbi.js","lib/web3js/shared/contract/gen/OffChainOracle.js","lib/web3js/shared/contract/abi/offChainVolatilityOracleAbi.js","lib/web3js/shared/contract/gen/OffChainVolatilityOracle.js","lib/web3js/shared/contract/abi/TERC20MintLimitAbi.js","lib/web3js/shared/contract/gen/TERC20MintLimit.js","lib/web3js/shared/contract/abi/bTokenOracle1Abi.js","lib/web3js/shared/contract/gen/BTokenOracle1.js","lib/web3js/shared/contract/factory.js","lib/web3js/shared/config/version.js","lib/web3js/shared/contract/abis.js","lib/web3js/shared/config/chain.js","lib/web3js/v2_lite_open/contract/abis.js","lib/web3js/v2_lite_open/contract/chainlink_feed.js","lib/web3js/v2_lite_open/contract/abi/oracleFactoryChainlinkAbi.js","lib/web3js/v2_lite_open/contract/gen/OracleFactoryChainlink.js","lib/web3js/v2_lite_open/contract/abi/oracleFactoryOffChainAbi.js","lib/web3js/v2_lite_open/contract/gen/OracleFactoryOffChain.js","lib/web3js/v2_lite_open/contract/p_token.js","lib/web3js/v2_lite_open/contract/perpetual_pool.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_manager.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_viewer.js","lib/web3js/v2_lite_open/factory.js","lib/web3js/shared/contract/database/database.js","lib/web3js/shared/contract/database/database_wormhole.js","lib/web3js/shared/contract/database/database_airdrop.js","lib/web3js/shared/config/config.js","lib/web3js/shared/contract/oracle/symbol_oracle_off_chain.js","lib/web3js/shared/contract/oracle/woo_oracle.js","lib/web3js/shared/factory/oracle.js","lib/web3js/v2_lite_open/api/query_api.js","lib/web3js/shared/factory/database.js","lib/web3js/shared/factory/web3.js","lib/web3js/v2_lite/contract/abis.js","lib/web3js/v2_lite_open/config.js","lib/web3js/shared/config/config_processor.js","lib/web3js/shared/config/oracle.js","lib/web3js/shared/utils/chain.js","lib/web3js/shared/api/wallet_api.js","lib/web3js/shared/api/deri_query_api.js","lib/web3js/shared/api/deri_transaction_api.js","lib/web3js/shared/api/activity_api.js","lib/web3js/shared/api/slp_pool_api.js","lib/web3js/shared/api/clp2_pool_api.js","lib/web3js/shared/api/clp_pool_api.js","lib/web3js/shared/api/lp_pool_query_api.js","lib/web3js/shared/api/lp_pool_transaction_api.js","lib/web3js/shared/api/ERC20_api.js","lib/web3js/shared/utils/network.js","lib/web3js/shared/contract/b_token.js","lib/web3js/shared/contract/oracle/wrapped_oracle.js","lib/web3js/shared/contract/activity/broker_manager.js","lib/web3js/shared/contract/activity/ptoken_airdrop.js","lib/web3js/v2_lite/contract/index.js","utils/LoadableComponent.js","lib/web3js/shared/config/rest_server.js","model/WebSocket.js","components/hoc/withModal.js","lib/web3js/v2_lite/contract/l_token.js","lib/web3js/v2_lite/contract/p_token.js","lib/web3js/v2_lite/contract/perpetual_pool_lite_viewer.js","model/Config.js","../lang).)*/.json$","components/Loading/LoadingMask.js","App.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Loading.js","index.js","model/Trading.js"],"names":["SECONDS_IN_A_DAY","getDBAddress","env","useProductionDB","getDBWormholeAddress","getDBAirdropAddress","getConfig","version","config","getJsonConfig","pools","openConfigListCache","get","Array","isArray","i","length","poolProcessor","poolValidator","getPoolConfigList","map","pool","result","bTokens","bToken","symbols","symbol","push","pToken","lToken","router","initialBlock","chainId","bTokenId","bTokenSymbol","symbolId","unit","type","versionId","isOption","flat","expandPoolConfigV2","offchainSymbolIds","offchainSymbols","expandPoolConfigV2Lite","isOpen","expandPoolConfigV2LiteOpen","pricer","volatilitySymbols","expandPoolConfigOption","getPoolConfig","poolAddress","getPoolVersion","LITE_AND_OPTION_VERSIONS","includes","undefined","res","toString","poolConfigList","DeriEnv","check","filter","Error","getFilteredPoolConfigList","VERSIONS","reduce","acc","concat","getPoolV1ConfigList","index","findIndex","v","getPoolVersionId","_getPoolConfig","find","p","getPoolConfig2","defaultSymbol","b","bTokenCount","symbolCount","getPoolBTokenList","bTokenAddress","getPoolBTokenIdList","getPoolSymbolList","s","getPoolSymbolIdList","getPoolViewerConfig","viewers","poolViewer","address","getBrokerConfigList","brokerManager","getBrokerConfig","filteredByChainId","c","checkChainId","getChainIds","checkAddress","toChecksumAddress","err","checkApiInput","accountAddress","checkApiInputWithoutAccount","checkTokenId","tokenId","test","checkAmount","amount","checkSymbolId","symbolIds","indexOf","join","contractFactory","klass","instances","key","Object","keys","processResult","val","propList","prop","fromWei","processObjectResult","processMethod","methodName","originMethod","prototype","async","args","apply","this","getLiquidity","_call","stateValues","liquidity","getLastTimestamp","lastTimestamp","getProtocolFeeAccrued","protocolFeeAccrued","MAX_GAS_AMOUNT","ContractBase","contractAddress","contractAbi","a","web3","web3Factory","contract","eth","Contract","method","retry","_init","methods","call","console","log","gas","estimateGas","from","parseInt","tx","self","_transactionReceipt","resolve","reject","getTransactionReceipt","error","receipt","setTimeout","status","_estimatedGas","txRaw","to","numberToHex","value","data","encodeABI","window","ethereum","request","params","Promise","_getTransactionReceipt","intRe","deleteIndexedKey","obj","intKeyCount","k","newObj","forEach","getLatestBlockNumber","getBlockNumber","getBlockInfo","blockNumber","getBlock","getPastEvents","eventName","fromBlock","events","es","toBlock","e","getPastEventsUseAbi","r","cache","require","path","split","lang","page","toLowerCase","pageName","Intl","locale","makeObservable","observable","setLocale","action","dict","computed","localeLabel","language","navigator","prefix","restoreLocale","supportedCatalog","storeLocale","label","substr","toUpperCase","fundingRateCache","resourceMap","set","resource","priceCache","_accountAddress","_price","_interval","_update","getPriceFromRest","update","setInterval","clear","clearInterval","PerpetualPoolParametersCache","_parameters","multiplier","perpetualPool","perpetualPoolFactory","getParameters","_ws","unlock","getPoolV1Config","bTokenFactory","success","transaction","depositMargin","pPool","naturalToDeri","withdrawMargin","pTokenAddress","pTokenFactory","deriToNatural","getPriceInfoForV1","price","getPositionInfo","volume","margin","cost","minInitialMarginRatio","maxWithdrawMargin","calculateMaxWithdrawMargin","bg","lte","_transact","addLiquidity","removeLiquidity","shares","lTokenAddress","lTokenFactory","all","balance","totalSupply","lTokenBalance","lTokenTotalSupply","minPoolMarginRatio","getStateValues","tradersNetVolume","tradersNetCost","maxRemovableShares","calculateMaxRemovableShares","tradeWithMargin","newVolume","orderValidation","isOrderValid","message","closePosition","negated","eq","processTradeEvent","info","txHash","feeRatio","tradeVolume","_getTimeStamp","timeStamp","direction","gt","time","timestamp","transactionFee","_calculateFee","notional","abs","times","baseToken","transactionHash","getTradeHistoryOnline","_getBlockInfo","filters","owner","_getPastEvents","number","item","returnValues","unshift","getTradeHistory2","fetchJson","getHttpBase","tradeFromBlock","tradeHistoryBlock","liquidateFromBlock","liquidateHistoryBlock","tradeHistory","trim","tradeHistoryOnline","sort","getSpecification","minMaintenanceMarginRatio","minAddLiquidity","redemptionFeeRatio","fundingRateCoefficient","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","priceDelayAllowance","addresses","averageEntryPrice","calculateEntryPrice","marginHeld","unrealizedPnl","liquidationPrice","calculateLiquidationPrice","calculateMarginHeld","calculatePnl","getLiquidityInfo","balanceOf","poolDynamicEquity","plus","minus","poolLiquidity","shareValue","calculateShareValue","getWalletBalance","isUnlocked","getEstimatedFee","parameters","getFundingRate","catch","getPoolInfoApy","poolInfo","fundingRate","fundingRatePerBlock","volume24h","fundingRate0","naturalWithPercentage","toExponential","getEstimatedFundingRate","newNetVolume","validateArgs","fundingRate1","calculateFundingRate","processFundingRate","getLiquidityUsed","liquidityUsed","liquidityUsed0","getEstimatedLiquidityUsed","poolMarginRatio","liquidityUsed1","calculateLiquidityUsed","PerpetualPoolLiteOld","perpetualPoolLiteOldAbi","getAddresses","pTokenLiteFactory","lTokenLiteFactory","getActiveSymbolIds","activeSymbolIds","offChainOracleSymbolIds","getSymbol","activeSymbolNames","oracleAddress","o","checkOffChainOracleSymbol","offChainOracleSymbols","init","getPosition","positions","protocolFeeCollectRatio","cumulativeFundingRate","prices","getPriceInfos","priceInfos","values","_getSymbolPrices","factory","perpetualPoolLiteFactory","LTokenLite","PTokenLite","_getLiquidityInfo","PerpetualPoolLiteViewer","parameterInfo","promises","totalPnl","catchApiError","catchTxApiError","isMaximum","div","dynamicCost","tmp","max","minMargin","gte","annualBlockCount","getDailyBlockNumber","calculateFundingFee","dynamicEquity","lastCumulativeFundingRate","lastUpdatedBlockNumber","latestBlockNumber","calculateBTokenDynamicEquities","accum","discount","pnl","isBToken0RatioValid","bToken0Ratio","totalDynamicEquity","lt","isPoolMarginRatioValid","userLiquidity","totalCost","calculateMaxRemovableLiquidity","restLiquidity","min","_prices","isNaN","parseFloat","Date","now","liquidatePriceCache","_cache","getSymbolPrices","offChainSymbolIds","offChainSymbolNames","onChainOracleAddressWithPlaceHolder","_symbol","getOraclePriceFromCache2","f","onChainSymbolPrices","oraclePricesCache","offChainSymbolPrices","symbolPrices","shift","_getFundingRate","symbolIndex","symbolInfo","liquidityUsedInAmount","addMargin","removeMargin","getMargin","trade","calculateTxFee","symbolIdList","account","invalidValues","NaN","getEverlastingTimePriceAndDelta","S","K","V","T","timeValue","delta","u","Math","sqrt","pow","getDynamicInitialMarginRatio","spot","strike","isCall","initialMarginRatio","otmRatio","canLiquidateWithPrice","trader","newUnderlierPrice","newDynamicMargin","dynamicMargin","newInitialMargin","initialMargin","position","newIntrinsicValue","strikePrice","volatility","fundingPeriod","newTimeValue","newPnl","newDynamicMarginRatio","spotPrice","dynamicMarginRatio","newMaintenanceMargin","maintenanceMarginRatio","findLiquidationPrice","numPositions","price1","price2","final1","final2","l1","l2","head","slice","startsWith","maintenanceMargin","dynamicInitialMarginRatio","dynamicInitialPoolMarginRatio","initialPoolMarginRatio","getMarginHeldBySymbol","getAverageEntryPrice","getLiquidationPrice","state","poolState","symbolState","traderState","positionState","normalizedSymbol","normalizeOptionSymbol","toNumberForObject","underlier","getLiquidationPrices","oracleSymbols","liquidationPrices","oSymbol","everlastingOptionAbi","everlastingOptionViewerAbi","lTokenOptionAbi","pTokenOptionAbi","everlastingOptionOldAbi","EverlastingOptionViewer","oraclePrices","oracleVolatilities","fromWeiForObject","LTokenOption","PTokenOption","lastCumulativePremiumFundingRate","operator","everlastingOptionViewerFactory","lTokenOptionFactory","pTokenOptionFactory","delay","ms","volatilitiesCache","pending","floor","getOracleVolatilitiesForOption","EverlastingOption","viewerAddress","viewer","isEqualSet","Set","activeSymbols","symbolVolatilities","getPoolStates","getVolatilitySymbols","_updateConfig","volatilities","volatilityInfos","bAmount","_getVolSymbolPrices","lShares","MAX_INT256","event","block","indexPrice","tradeFee","tradeCost","contractValue","extra","optionPricerAbi","OptionPricer","everlastingOptionFactory","optionPricerFactory","optionPool","queryTradePMM","theoreticalPrice","symbolInfo2","poolInfo2","feeRatioOTM","feeRatioITM","initialMarginRatioOrigin","maintenanceMarginRatioOrigin","indexConstituents","getIndexInfo","url","tokens","symbolName","getTraderStates","volPrice","wrappedOracleFactory","getPrice","timePrice","markPrice","dpmmPrice","marginHeldBySymbol","unrealizedPnlList","oS","premiumFundingAccrued","fundingAccrued","getPositionInfos","volPrices","vIndex","curSymbolIndex","premiumFunding","fundingPerSecond","premiumFundingPerSecond","intrinsicValue","fee","premiumFunding0","getEverlastingTimeValueAndDelta","pricerAddress","formatTradeEvent","tr","createPool","pairedTokenAddress","normalizeChainId","getPoolV2LiteManagerConfig","poolManagerAddress","poolManager","perpetualPoolLiteManagerFactory","newParameters","addSymbol","perpetualPoolLite","createOracle","feedAddress","feedContract","chainlinkFeedFactory","oracleFactoryConfig","getOracleFactoryChainlinkConfig","oracleFactory","oracleFactoryChainlinkFactory","getPTokenAirdropConfig","prod","dev","getDeriVoteConfig","pTokenAirdropNULSAbi","PTokenAirdropNULS","deriVoteAbi","DeriVote","votingId","voter","votingOption","PTokenAirdropNULSFactory","deriVoteFactory","isPTokenAirdropped","isAirdropPToken","totalAirdropCount","isUserPTokenExist","isBTokenUnlocked","hasRequiredBalance","unlockBToken","airdropPToken","keyPrefix","getStakingTop10Users","db","databaseActivityFactory","n","fill","getValues","no","userAddr","feePaid","score","evgCoeff","rewardBNB","getUserStakingInfo","scoreQ1","scoreQ2","scoreQ3","scoreQ4","coef","getUserStakingReward","rewardDERI","topUsers","getUserStakingContribution","totalContrib","userContrib","Q1Contrib","Q2Contrib","Q3Contrib","Q4Contrib","userQ1Contrib","userQ2Contrib","userQ3Contrib","userQ4Contrib","userQ1Point","userQ2Point","userQ3Point","userQ4Point","getVotingResult","databaseDeriVoteFactory","hexToNumberString","getUserVotingPower","getUserVotingResult","votingPower","option","vote","deriVote","voteId","getContractAddressConfig","getPoolV2ConfigList","ALL_EXCEPT_OPEN_VERSIONS","bTokenIdList","getBToken","getAsset","bTokenInfo","lTokenAsset","lastCumulativePnl","approximatePnl","cumulativePnl","getPoolLiquidity","databaseFactory","poolNetwork","getNetworkName","apy","volume1h","routerAddress","perpetualPoolRouter","perpetualPoolRouterFactory","minBToken0Ratio","validation","bTokenDiscounts","bTokenMultiplier","symbolConfigList","symbolList","getLastUpdatedBlockNumber","getMargins","getPositions","getOraclePrice","positionInfo","margins","latestPrice","fundingFee","idx","getEstimatedLiquidatePrice","promiseList","bTokenInfoList","getPoolBTokensBySymbolId","bTokenList","resultList","walletBalance","availableBalance","PRESERVED_SYMBOLS","priceInfo","baseUrl","isProdChain","addSymbolParam","getOracleServerUrl","fetch","mode","headers","Accept","body","JSON","stringify","ok","json","calculateK","alpha","calculateDpmmPrice","calculateDpmmCost","overrideMethods","fns","fn","offChainOracleFactory","signer","signatory","processTxMethod","toWeiArgPositions","newArgs","arg","toWei","isEstimatedApi","getPoolStateValues","getFundingPeriod","ERC20Factory","offChainOracleSymbolNames","normalizeSymbolUnit","getSymbols","indexPrices","funding","timeDiff","traderPnl","isSymbolsUpdated","isPositionsUpdated","getTraderLiquidity","getDynamicEquity","getPoolRequiredMargin","getTraderMarginStatus","requiredInitialMargin","perpetualPoolLiteAbi","PerpetualPoolLite","constructor","super","lTokenLiteAbi","pTokenLiteAbi","perpetualPoolLiteDpmmFactory","addMethods","lTokenLiteAdapter","pTokenLiteAdapter","poolApiFactory","removable","leverage","funding0","funding1","api","getEstimatedMargin","getEstimatedTimePrice","getFundingRateCache","getTradeHistory","range","lengths","getLengths","perpetualPoolRouterDpmmFactory","bTokenIds","bTokenOracle1Factory","equity","bTokenSymbols","userState","getBTokens","bTokenIndex","tradersNetPosition","ratePerSecond","diff","undistributedPnl","distributedUnrealizedPnl","isBTokensUpdated","totapPnl","totalEquity","m","totalNotional","lTokenAbi","LToken","pTokenAbi","PToken","perpetualPoolAbi","PerpetualPool","perpetualPoolRouterAbi","PerpetualPoolRouter","infos","lTokenAdapter","pTokenAdapter","perpetualPoolDpmmFactory","perpetualPoolDpmmAdapter","perpetualPoolRouterDpmmAdapter","PoolApi","usedByEstimatedApi","bToken0Symbol","balances","getFundingFee","LITE_VERSIONS","getLiquidityInfoV2l","getLiquidityInfoOption","apiV2lDpmm","apiV2Dpmm","getLiquidityInfo2","getLiquidityInfoV2","getPoolLiquidityV2","getPoolLiquidity1","getPoolInfoApyV2","getPoolInfoApy1","addLiquidityV2l","addLiquidityOption","addLiquidity2","addLiquidityV2","removeLiquidityV2l","removeLiquidityOption","removeLiquidity2","removeLiquidityV2","getSpecificationV2l","getSpecificationOption","getSpecification2","getSpecificationV2","getLastUpdateBlock","getPositionInfoV2l","getPositionInfoOption","getPositionInfo2","getPositionInfoV2","getPositionInfosV2l","getPositionInfosOption","getPositionInfosV2","getWalletBalanceV2l","getWalletBalanceOption","getWalletBalance2","getWalletBalanceV2","isUnlockedV2l","isUnlockedOption","isDeriUnlocked","isUnlocked2","isUnlockedV2","getEstimatedLiquidatePriceV2","getEstimatedFeeV2l","getEstimatedFeeOption","getEstimatedFee2","getEstimatedFeeV2","getFundingRateV2l","getFundingRateOption","getFundingRate2","getFundingRateV2","getEstimatedFundingRateV2l","getEstimatedFundingRateOption","getEstimatedFundingRate2","getEstimatedFundingRateV2","getLiquidityUsedV2l","getLiquidityUsedOption","getLiquidityUsed2","getLiquidityUsedV2","getEstimatedLiquidityUsedV2l","getEstimatedLiquidityUsedOption","getEstimatedLiquidityUsed2","getEstimatedLiquidityUsedV2","getPoolBTokensBySymbolIdV2","toNumber","getEstimatedTimePriceOption","unlockV2l","unlockOption","unlockDeri","unlock2","unlockV2","depositMarginV2l","depositMarginOption","depositMargin2","depositMarginV2","withdrawMarginV2l","withdrawMarginOption","withdrawMargin2","withdrawMarginV2","tradeWithMarginV2l","tradeWithMarginOption","tradeWithMargin2","tradeWithMarginV2","closePositionV2l","closePositionOption","closePosition2","closePositionV2","ids","volumes","id","getTradeHistoryV2l","getTradeHistoryOption","getTradeHistoryV2","getOracleUrl","getPriceInfo","mapToBTokenInternal","RestOracle","mapToSymbolInternal","getOracleConfig","oracle","decimal","getOraclePrice2","getOracleInfosFromRest","os","getRestServerConfig","resp","fetchRestApi","opts","func","defaultValue","errorMessage","protocolFeeCollector","decimals0","swapperAddress","decimals","getStorageAt","hexToNumber","processAsset","processPosition","bTokenPairs","AMUSDC","offchainSymbolPairs","AXSUSDT","MANAUSDT","MBOXUSDT","IBSCDEFI","IGAME","ALICEUSDT","SANDUSDT","QUICKUSDT","GHSTUSDT","AGLDUSDT","optionSymbol","volSymbol","getNormalizedOptionSymbols","isUsedRestOracle","mapToSymbol","mapToBToken","re","RegExp","replace","internalSymbol","customIndexs","IMEME","POOL_ABI","isProvider","cumuFundingRate","cumuFundingRateBlock","signed","args1","args2","CONTRACT_ABI","PTokenContract","lastCumuFundingRate","lastUpdateTimestamp","LTokenContract","perpetualPoolInstanceMap","pTokenInstanceMap","lTokenInstanceMap","TERC20","TERC20Abi","spender","BToken","TERC20Factory","DeriContract","allowance","MAX_UINT256","_balanceOf","MiningVaultPool","MiningVaultRouter","WormholeContract","toChainId","getDeriConfig","toWormholeAddress","wormholeAddress","fromChainId","fromWormhole","fromNonce","deriFactory","wormholeFactory","miningVaultRouterFactory","miningVaultPoolFactory","SlpPool","ClpPool","Clp2Pool","slpPoolFactory","slpPoolInstanceMap","slpPool","clpPoolFactory","clpPoolInstanceMap","clpPool","clp2PoolFactory","clp2PoolInstanceMap","clp2Pool","brokerManagerFactory","BrokerManager","pTokenAirdropFactory","PTokenAirdrop","held","poolMaxVolume","_deriEnv","Type","current","makeAutoObservable","setCurrent","isFuture","isV1","isV2","isV2Lite","zone","switch","chainIds","normalizeAddress","Web3","utils","every","validateObjectKeyExist","keyList","valName","validateIsArray","BigNumber","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","base","repeat","value1","value2","toFixed","hexToString","hexToUtf8","deriToString","deriToBool","sd","formatBN","bigNumber","toFormat","replaceAll","isBrowser","document","isJsDom","userAgent","set1","set2","size","has","sortOptionSymbols","symbolArr","unique","to2","index1","index2","index3","dToken","MiningVault","retired","getLpConfigList","isLp","getMiningVaultRouterConfig","filteredConfig","getPreminingConfigList","staking","isInTvlRace","premining","getLpConfig","Deri","Wormhole","getDeriConfigList","deriAddress","getMiningVaultConfig","dTokenAdress","MinningVaultAddress","chainInfo","formatAddress","formatBalance","eqInNumber","str1","str2","isLP","isSushiLP","isCakeLP","sessionStorageKey","convertToInternationalCurrencySystem","labelValue","Number","storeConfig","sessionStorage","setItem","getConfigFromStore","parse","getItem","storeChain","restoreChain","code","hasParam","param","urlString","location","href","URL","searchParams","getParam","getFormatSymbol","curChain","chain","getMarkpriceSymbol","equalIgnoreCase","stripSymbol","secondsInRange","intervalRange","calcRange","interval","getTime","groupByNetwork","total","list","network","formatAdd","airdrop","combineSymbolfromPoolConfig","configs","pos","mapPoolInfo","wallet","name","buttonText","assign","getUserInfo","userAddress","deadline","nonce","valid","getUserInfoHarvest","harvestLp","harvestTrade","lp","getUserInfoTotal","getUserInfoAll","userInfo","userInfoHarvest","userInfoTotal","getLpPoolInfoApy","apy2","getUserInfoInPool","getUserInfoAllForAirDrop","databaseAirdropFactory","v1","r1","s1","v2","r2","s2","pancakePairAbi","PancakePair","ERC20Adapter","ERC20Abi","ERC20","chainlinkOracleAbi","ChainlinkOracle","offChainOracleAbi","inputs","internalType","stateMutability","outputs","OffChainOracle","offChainVolatilityOracleAbi","OffChainVolatilityOracle","TERC20MintLimitAbi","TERC20MintLimit","bTokenOracle1Abi","BTokenOracle1","offChainOracleAdapter","offChainVolatilityOracleAdapter","isQuoteToken0","qDecimals","bDecimals","pair","priceCumulativeLast1","priceCumulativeLast2","timestampLast1","timestampLast2","pancakePair","getReserves","reserveQ","_reserve0","reserveB","_reserve1","_blockTimestampLast","price0CumulativeLast","price1CumulativeLast","tmpPairState","bTokenOracle1Adapter","bTokenAbi","symbolOracleOffChainAbi","wrappedOracleAbi","wooOracleAbi","brokerManagerAbi","pTokenAirdropAbi","getChainProviderUrls","provider_urls","getDailyBlockNumberConfig","chainBlockNumberList","perpetualPoolLiteManagerAbi","perpetualPoolLiteViewerAbi","chainlinkFeedAbi","ChainlinkFeed","oracleFactoryChainlinkAbi","OracleFactoryChainlink","oracleFactoryOffChainAbi","OracleFactoryOffChain","delayAllowance","updateAddresses","block_number","extraInfo","getBTokenSymbol","getPoolExtraInfo","PerpetualPoolLiteManager","poolId","perpetualPoolLiteViewerFactory","DatabaseContract","keyArray","DatabaseWormholeContract","DatabaseAirdropContract","jsonConfig","SymbolOracleOffChain","WooOracle","wooOracleAddresses","instanceMap","wooOracleFactory","WrappedOracle","getPoolOpenConfigList","openPoolChainIds","getNumPools","poolNums","numsArray","getPoolOpenOracleList","oracles","eventBlock","isPoolController","controller","poolController","getPoolAcitveSymbolIds","oldData","updatedAt","databaseInstanceMap","database","databaseWormholeFactory","web3InstanceMap","walletChainId","getChainProviderUrl","providerUrl","providers","HttpProvider","testnet","v2_lite","v2_lite_open","getOracleConfigList","urls","getLatestRPCServer","blockNumbers","connectWallet","handleChainChanged","handleAccountChanged","accounts","on","reload","getUserWalletBalance","walletAddress","getBalance","getUserWormholeSignature","databaseWormhole","signature","deri","getDeriBalance","mintDToken","miningVaultAddress","miningVault","freeze","wormhole","mintDeri","mintAirdrop","miningVaultRouter","mint","setBroker","brokerAddress","brokerManagerAddress","getAirdropPTokenAddress","getAirdropPTokenWhitelistCount","totalWhitelistCount","getSlpLiquidityInfo","bTokenBalance","addSlpLiquidity","removeSlpLiquidity","isSlpUnlocked","unlockSlp","getSlpWalletBalance","getClp2LiquidityInfo","addClp2Liquidity","removeClp2Liquidity","isClp2Unlocked","unlockClp2","getClp2WalletBalance","getClpLiquidityInfo","addClpLiquidity","removeClpLiquidity","isClpUnlocked","unlockClp","getClpWalletBalance","getLpLiquidityInfo","isLpUnlocked","getLpWalletBalance","unlockLp","addLpLiquidity","removeLpLiquidity","mintTERC20","testERC20","deepClone","clone","shuffleArray","newUrls","random","splice","duration","MAX_SAFE_INTEGER","startTime","LoadingPage","NProgress","start","done","React","Component","LoadableComponent","component","Loadable","loader","loading","process","WebSocket","socket","io","transports","withCredentials","emit","onMessage","listener","time_type","findEvent","withModal","appElement","getElementById","customizeStyle","overlay","zIndex","background","content","border","inset","overflow","WithModal","props","modalIsOpen","className","overlayMerged","mergedStyle","style","portalClassName","intl","onClose","inject","observer","Config","setAll","isOptions","cur","webpackContext","req","webpackContextResolve","__webpack_require__","module","exports","DesktopApp","MobileApp","Mask","useState","setIsOpen","useEffect","isShowMask","LoadingMask","top","MaskWrapper","screen","width","isOptionsLite","useRouteMatch","isOptionsPro","catagory","Wallet","detail","supportWeb3","isConnected","approve","approved","connect","loadWalletBalance","switchNetwork","metamask","supported","setDetail","supportV2","supportV1","supportAllVersion","supportChain","supportInnocation","supportOpen","isApproved","supportInnovation","Oracle","timeType","kData","ws","paused","listeners","already","setIndex","webSocket","subscribe","close","unsubscribeBars","setSymbol","setTimeType","unsubscribe","setPause","Position","callback","callbackALL","spec","counter","mockPositionInfo","deltaFundingAccrued","isSupportChain","balanceContract","startAll","started","runInAction","loadAll","startedAll","load","timer","pause","resume","clean","deltaFundingCoefficient","optionType","bTokenSymbolDisplay","getUnderlierStrike","setInfo","History","isLoading","setIsLoading","trading","slideIncrementMargin","history","userSelectedDirection","optionsConfigs","setWallet","setConfigs","setOptionConfigs","setConfig","setContract","setPosition","setPositions","setVolume","setUserSelectedDirection","setFundingRate","setHistory","setSlideMargin","fundingRateTip","optionFundingRateTip","initialMarginRatioTip","maintenanceMarginRatioTip","TransactionFeeTip","dpmmFundingRateTip","fundingCoefficientTip","rateTip","multiplierTip","TotalNetPositionTip","volumeDisplay","isNegative","isPositive","configInfo","contractInfo","historyInfo","finishedCallback","defaultConfig","getDefaultConfig","loadByConfig","changed","onChange","store","symbolChanged","addListener","syncFundingRate","loadFundingRate","then","results","finally","refreshCache","fromStore","getFromStore","setPaused","groupConfigBySymbol","markpriceSymbolFormat","increment","MarginRatio","substring","currentSymbolMarginHeld","otherMarginHeld","incrementMarginHeld","totalMarginHeld","dynBalance","available","exchanged","multipliedBy","totalContractValue","curContractValue","afterLeverage","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.08a87d53.chunk.js","sourcesContent":["\r\nconst paddingDate = (date) => {\r\n  date = date.toString()\r\n  if (date.length === 1) {\r\n    return '0' + date\r\n  } else {\r\n    return date\r\n  }\r\n}\r\nexport const getEpochTimeRange = (time) => {\r\n  //console.log('1', time.getTime()/1000)\r\n  const year = time.getUTCFullYear()\r\n  const month = time.getUTCMonth()\r\n  const day = time.getUTCDate()\r\n  let epochs = []\r\n  for (let i = 0; i< 3; i++) {\r\n    const newDate = new Date(`${year}-${paddingDate(month + 1)}-${paddingDate(day)}T${paddingDate(8*i)}:00:00Z`)\r\n    //console.log(newDate.getTime()/1000)\r\n    epochs.push(newDate)\r\n  }\r\n  epochs.push(new Date(`${year}-${paddingDate(month + 1)}-${paddingDate(day+1)}T00:00:00Z`))\r\n  let index = -1\r\n  for (let i = 0; i< epochs.length; i++) {\r\n    //console.log(i, epochs[i].getTime()/1000)\r\n    if (time.getTime() < epochs[i].getTime()) {\r\n      index = i\r\n      break\r\n    }\r\n  }\r\n  if (index !== -1) {\r\n    return [epochs[index - 1].getTime()/1000, epochs[index].getTime()/1000]\r\n  }\r\n  throw new Error(`getEpochTimeRange(): cannot get epoch range for time ${time}`)\r\n}","export * from './config'\r\nexport * from './utils'\r\nexport { ContractBase } from './contract';\r\nexport * from './factory'\r\nexport * from './api'","export const SECONDS_IN_A_DAY = 86400;  // 60 * 60 * 24","export const getDBProviderUrls = () => [\r\n  'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n];\r\n\r\nexport const getDBAddress = (env = 'dev', useProductionDB) => {\r\n  if (env === 'prod' && useProductionDB) {\r\n    // for production\r\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\r\n  }\r\n  // for test\r\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n};\r\n\r\nexport const getDBWormholeAddress = (env = 'dev', useProductionDB) => {\r\n  if (env === 'prod' && useProductionDB) {\r\n    // for production\r\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\r\n  }\r\n  // for test\r\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\r\n};\r\n\r\nexport const getDBAirdropAddress = (env = 'dev', useProductionDB) => {\r\n  if (env === 'prod' && useProductionDB) {\r\n    // for production\r\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\r\n  }\r\n  // for test\r\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n};\r\n","import { getJsonConfig } from './config';\r\nimport { DeriEnv } from './env';\r\nimport { getPoolV1ConfigList } from './pool_v1';\r\nimport { LITE_AND_OPTION_VERSIONS, VERSIONS } from './version';\r\n// import { validateObjectKeyExist } from '../utils';\r\nimport { poolProcessor, poolValidator } from './config_processor';\r\nimport { openConfigListCache } from '../../v2_lite_open/api/query_api';\r\n\r\nconst expandPoolConfigV2 = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.bTokens.length; i++) {\r\n        const bToken = pool.bTokens[i];\r\n        for (let i = 0; i < pool.symbols.length; i++) {\r\n          const symbol = pool.symbols[i];\r\n          result.push({\r\n            pool: pool.pool,\r\n            pToken: pool.pToken,\r\n            lToken: pool.lToken,\r\n            router: pool.router,\r\n            initialBlock: pool.initialBlock,\r\n            chainId: pool.chainId,\r\n            bToken: bToken.bToken,\r\n            bTokenId: bToken.bTokenId,\r\n            bTokenSymbol: bToken.bTokenSymbol,\r\n            symbol: symbol.symbol,\r\n            symbolId: symbol.symbolId,\r\n            unit: symbol.unit,\r\n            type: 'perpetual',\r\n            version: 'v2',\r\n            versionId: pool.versionId,\r\n            isOption: false,\r\n          });\r\n        }\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nconst expandPoolConfigV2Lite = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.symbols.length; i++) {\r\n        const symbol = pool.symbols[i];\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: symbol.symbol,\r\n          symbolId: symbol.symbolId,\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          offchainSymbols: pool.offchainSymbols,\r\n          unit: symbol.unit,\r\n          type: 'perpetual',\r\n          version: 'v2_lite',\r\n          versionId: pool.versionId,\r\n          isOption: false,\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nconst expandPoolConfigOption = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.symbols.length; i++) {\r\n        const symbol = pool.symbols[i];\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          pricer: pool.pricer,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: symbol.symbol,\r\n          symbolId: symbol.symbolId,\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          offchainSymbols: pool.offchainSymbols,\r\n          volatilitySymbols: pool.volatilitySymbols,\r\n          unit: symbol.unit,\r\n          type: 'option',\r\n          version: 'option',\r\n          versionId: pool.versionId,\r\n          isOption: true,\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nconst expandPoolConfigV2LiteOpen = (config) => {\r\n  const pools = config.pools;\r\n  //console.log(pools)\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      if (pool.symbols.length > 0) {\r\n        for (let i = 0; i < pool.symbols.length; i++) {\r\n          const symbol = pool.symbols[i];\r\n          result.push({\r\n            pool: pool.pool,\r\n            pToken: pool.pToken,\r\n            lToken: pool.lToken,\r\n            initialBlock: pool.initialBlock,\r\n            chainId: pool.chainId,\r\n            bToken: pool.bToken,\r\n            bTokenSymbol: pool.bTokenSymbol,\r\n            symbol: symbol.symbol,\r\n            symbolId: symbol.symbolId,\r\n            offchainSymbolIds: pool.offchainSymbolIds,\r\n            offchainSymbols: pool.offchainSymbols,\r\n            unit: symbol.unit,\r\n            type: 'perpetual',\r\n            version: 'v2_lite_open',\r\n            versionId: pool.versionId,\r\n            isOpen: true,\r\n          });\r\n        }\r\n      } else {\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: '--',\r\n          symbolId: '',\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          offchainSymbols: pool.offchainSymbols,\r\n          unit: '',\r\n          type: 'perpetual',\r\n          version: 'v2_lite_open',\r\n          versionId: pool.versionId,\r\n          isOpen: true,\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};\r\n\r\nexport const getConfig = (version='v2', env='dev') => {\r\n  let config = getJsonConfig(version, env);\r\n  if (version === 'v2_lite_open') {\r\n    //if (Date.now()/1000 - openConfigListCache.updatedAt() < 15) {\r\n      //console.log('hit openConfigListCache')\r\n    config.pools = openConfigListCache.get()\r\n    //}\r\n  }\r\n\r\n  const pools = config.pools;\r\n  if (pools && Array.isArray(pools)) {\r\n    for (let i = 0; i < pools.length; i++) {\r\n      poolProcessor[version](pools[i])\r\n      poolValidator[version](pools[i])\r\n    }\r\n  }\r\n\r\n  //validateObjectKeyExist(['oracle'], config, 'oracle');\r\n  //validateObjectKeyExist(['brokerManager'], configs[env], 'brokerManager')\r\n  return config;\r\n};\r\n\r\nexport const getPoolConfigList = (version = 'v2', env = 'dev') => {\r\n  let config;\r\n  config = getConfig(version, env);\r\n  if (version === 'v2') {\r\n    return expandPoolConfigV2(config);\r\n  } else if (version === 'v2_lite') {\r\n    return expandPoolConfigV2Lite(config, version);\r\n  } else if (version === 'v2_lite_open') {\r\n    return expandPoolConfigV2LiteOpen(config);\r\n  } else if (version === 'option') {\r\n    return expandPoolConfigOption(config);\r\n  }\r\n};\r\n\r\nexport const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId, version='v2') => {\r\n  bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\r\n  symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\r\n  const poolConfigList = getPoolConfigList(version, DeriEnv.get())\r\n  const check = bTokenId != null\r\n    ? symbolId != null\r\n      ? (i) =>\r\n          i.pool === poolAddress &&\r\n          i.bTokenId === bTokenId &&\r\n          i.symbolId === symbolId\r\n      : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\r\n    : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\r\n  if (poolConfigList.length > 0) {\r\n    const res = poolConfigList.filter(check)\r\n    if (res && res.length > 0) {\r\n      return res\r\n    }\r\n  }\r\n  throw new Error(`getFilteredPoolConfigList(): cannot find the pool config by ${poolAddress} bTokenId(${bTokenId}) and symbolId(${symbolId})`)\r\n}\r\n\r\nexport const getPoolConfig = (poolAddress, bTokenId, symbolId) => {\r\n  const version = getPoolVersion(poolAddress)\r\n  //console.log('version', version, poolAddress)\r\n  // check the bToken in v2_lite\r\n  if (LITE_AND_OPTION_VERSIONS.includes(version)) {\r\n    bTokenId = undefined\r\n  }\r\n  const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId, version)\r\n  return res[0]\r\n}\r\nexport const getFilteredPoolConfig  = getPoolConfig\r\n\r\n\r\nexport const getPoolVersion = (poolAddress) => {\r\n  let pools = VERSIONS.reduce((acc, version) => {\r\n    return acc.concat(getConfig(version, DeriEnv.get())['pools'])\r\n  }, [])\r\n  //console.log(pools)\r\n  // add v1 config\r\n  pools = pools.concat(getPoolV1ConfigList(DeriEnv.get()))\r\n  const index = pools.findIndex((v) => v.pool === poolAddress)\r\n  //console.log('pools index', index)\r\n  if (index >= 0) {\r\n    return pools[index].version\r\n  }\r\n}\r\n\r\nexport const getPoolVersionId = (poolAddress) => {\r\n  let pools = VERSIONS.reduce((acc, version) => {\r\n    return acc.concat(getConfig(version, DeriEnv.get())['pools'])\r\n  }, [])\r\n  // add v1 config\r\n  pools = pools.concat(getPoolV1ConfigList(DeriEnv.get()))\r\n  const index = pools.findIndex((v) => v.pool === poolAddress)\r\n  if (index >= 0) {\r\n    return pools[index].versionId\r\n  }\r\n}\r\n\r\nexport const _getPoolConfig = (poolAddress) => {\r\n  const version = getPoolVersion(poolAddress);\r\n  // console.log('version', version)\r\n  const config = getConfig(version, DeriEnv.get());\r\n  const pools = config.pools;\r\n  let pool = pools.find((p) => p.pool === poolAddress);\r\n  //console.log(pool)\r\n  if (pool) {\r\n    return pool;\r\n  } else {\r\n    throw new Error(`getPoolConfig, cannot find pool config by pool address ${poolAddress}`)\r\n  }\r\n};\r\n\r\nexport const getPoolConfig2 = (poolAddress, bTokenId, symbolId) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  const defaultBToken = {\r\n    bTokenId: '',\r\n    bTokenSymbol: '',\r\n    bToken: '',\r\n  };\r\n  const defaultSymbol = {\r\n    symbolId: '',\r\n    symbol: '',\r\n    unit: '',\r\n  };\r\n  let bToken, symbol;\r\n  if (pool.bTokens && (bTokenId !== undefined || bTokenId !== null)) {\r\n    bToken = pool.bTokens.find((b) => b.bTokenId === bTokenId)\r\n  }\r\n  if (pool.symbols && (symbolId !== undefined || symbolId !== null)) {\r\n    symbol = pool.symbols.find((b) => b.symbolId === symbolId) || defaultSymbol;\r\n  }\r\n  bToken = bToken || defaultBToken;\r\n  symbol = symbol || defaultSymbol\r\n  return {\r\n    pool: pool.pool,\r\n    pToken: pool.pToken,\r\n    lToken: pool.lToken,\r\n    router: pool.router,\r\n    bTokenCount: pool.bTokenCount,\r\n    symbolCount: pool.symbolCount,\r\n    initialBlock: pool.initialBlock,\r\n    chainId: pool.chainId,\r\n    bToken: bToken.bToken,\r\n    bTokenId: bToken.bTokenId,\r\n    bTokenSymbol: bToken.bTokenSymbol,\r\n    symbol: symbol.symbol,\r\n    symbolId: symbol.symbolId,\r\n    unit: symbol.unit,\r\n    version: 'v2',\r\n  };\r\n};\r\n\r\nexport const getPoolBTokenList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.bTokens.map((b) => {\r\n    return {\r\n      bTokenId: b.bTokenId,\r\n      bTokenSymbol: b.bTokenSymbol,\r\n      bTokenAddress: b.bToken,\r\n    };\r\n  });\r\n};\r\n\r\nexport const getPoolBTokenIdList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.bTokens.map((b) => b.bTokenId);\r\n};\r\n\r\nexport const getPoolSymbolList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.symbols.map((s) => {\r\n    return {\r\n      symbol: s.symbol,\r\n      symbolId: s.symbolId,\r\n      unit: s.unit,\r\n    };\r\n  });\r\n};\r\n\r\nexport const getPoolSymbolIdList = (poolAddress) => {\r\n  const pool = _getPoolConfig(poolAddress);\r\n  return pool.symbols.map((b) => b.symbolId);\r\n};\r\n\r\nexport const getPoolViewerConfig = (chainId, version=\"v2_lite\") => {\r\n  const env = DeriEnv.get()\r\n  const config = getJsonConfig(version, env)\r\n  const viewers = config.poolViewer.filter((v) => v.chainId === chainId.toString())\r\n  if (viewers.length > 0) {\r\n    return viewers[0].address\r\n  } else {\r\n    throw new Error(`getPoolViewerConfig(): invalid chainId(${chainId}) or version(${version}).`);\r\n  }\r\n};","import { getJsonConfig } from './config';\r\nimport { DeriEnv } from './env';\r\n\r\nexport const getBrokerConfigList = (version) => {\r\n  const config = getJsonConfig(version, DeriEnv.get())\r\n  if (config.brokerManager) {\r\n    return config.brokerManager\r\n  } else {\r\n    // default value\r\n    return []\r\n  }\r\n};\r\n\r\nexport const getBrokerConfig = (version='v2', chainId) => {\r\n  const filteredByChainId = getBrokerConfigList(version).filter((c) =>c.chainId === chainId);\r\n  if (filteredByChainId.length > 0) {\r\n    return filteredByChainId[0];\r\n  }\r\n  throw new Error(`getBrokerConfig(): invalid chainId(${chainId}).`);\r\n};\r\n","// utils for derijsnext, combine in one file\r\nimport { getChainIds } from '../config/chain';\r\nimport { fromWei, toWei, toChecksumAddress } from './convert';\r\n\r\nexport const checkChainId = (chainId) => {\r\n  chainId = chainId != null ? chainId.toString() : chainId \r\n  if (getChainIds().includes(chainId)) {\r\n    return chainId;\r\n  }\r\n  throw new Error(`invalid chainId '${chainId}'`);\r\n};\r\n\r\nexport const checkAddress = (address) => {\r\n  address = address != null ? address.toString() : address\r\n  try {\r\n    return toChecksumAddress(address)\r\n  } catch(err) {\r\n    // console.log('-- checkAddress(): ', err)\r\n    throw new Error(`invalid eth address '${address}'`)\r\n  }\r\n}\r\n\r\nexport const checkApiInput = (chainId, poolAddress, accountAddress) => {\r\n  return [\r\n    checkChainId(chainId),\r\n    checkAddress(poolAddress),\r\n    checkAddress(accountAddress),\r\n  ];\r\n};\r\n\r\nexport const checkApiInputWithoutAccount = (chainId, poolAddress) => {\r\n  return [checkChainId(chainId), checkAddress(poolAddress)];\r\n};\r\n\r\nexport const checkTokenId = (tokenId) => {\r\n  tokenId = tokenId != null ? tokenId.toString() : tokenId\r\n  if (/^\\d+$/.test(tokenId)) {\r\n    return tokenId\r\n  }\r\n  throw new Error(`invalid tokenId '${tokenId}'`)\r\n}\r\n\r\nexport const checkAmount = (amount) => {\r\n  amount = amount != null ? amount.toString() : amount\r\n  if (/^-?[\\d\\.]+$/.test(amount)) {\r\n    return amount\r\n  }\r\n  throw new Error(`invalid amount '${amount}'`)\r\n}\r\n\r\nexport const checkSymbolId = (symbolId, symbolIds) => {\r\n  if (symbolId != null) {\r\n    const index = symbolIds.indexOf(symbolId.toString())\r\n    if (index > -1) {\r\n      return index\r\n    }\r\n  }\r\n  throw new Error(`invalid symbolId '${symbolId}' for symbolIds(${symbolIds.join(',')}) `);\r\n};\r\n\r\n// factory\r\nexport const contractFactory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address, initialBlock='') => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address, initialBlock);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\n// contract\r\nconst processObjectResult = (val, propList = []) => {\r\n  return Object.keys(val).reduce((acc, prop) => {\r\n    if (typeof val[prop] === \"string\" && propList.includes(prop)) {\r\n      acc[prop] = fromWei(val[prop]);\r\n    } else {\r\n      acc[prop] = val[prop];\r\n    }\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\nexport const processResult = (val, propList = []) => {\r\n  if (Array.isArray(val)) {\r\n    return val.map((v) => processResult(v, propList));\r\n  } else if (typeof val === 'object' && val !== null) {\r\n    return processObjectResult(val, propList);\r\n  } else if (typeof val === \"string\") {\r\n    return fromWei(val);\r\n  } else {\r\n    return val;\r\n  }\r\n};\r\n\r\nexport const processMethod = (klass, methodName, propList = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const res = await originMethod.apply(this, args);\r\n    return processResult(res, propList);\r\n  };\r\n  return klass;\r\n};\r\n\r\nexport const processTxMethod = (klass, methodName, toWeiArgPositions = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const newArgs = args.map((arg, index) =>\r\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\r\n    );\r\n    return await originMethod.apply(this, newArgs);\r\n  };\r\n  return klass;\r\n};\r\n\r\n// api for v2_lite and option\r\nexport const getLiquidity = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype['getPoolLiquidity'] = async function () {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    this.stateValues = this.stateValues || {}\r\n    this.stateValues.liquidity = fromWei(res[0]);\r\n    return this.stateValues.liquidity\r\n  };\r\n  return klass\r\n}\r\n\r\nexport const getLastTimestamp = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype['getLastTimestamp'] = async function () {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    this.stateValues = this.stateValues || {}\r\n    this.stateValues.lastTimestamp = res[1];\r\n    return this.stateValues.lastTimestamp\r\n  };\r\n  return klass\r\n}\r\nexport const getProtocolFeeAccrued = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype['getProtocolFeeAccrued'] = async function () {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    this.stateValues = this.stateValues || {}\r\n    this.stateValues.protocolFeeAccrued = fromWei(res[2]);\r\n    return this.stateValues.protocolFeeAccrued;\r\n  };\r\n  return klass;\r\n}","import { web3Factory } from '../factory/web3';\r\nimport { numberToHex } from '../utils/convert';\r\n\r\nconst MAX_GAS_AMOUNT = 832731;\r\n//const RE_ERROR_MSG = /\\\"message\\\":\\s\\\"execution\\sreverted:([\\w\\s]+)\\\"/\r\nconst RE_ERROR_MSG = /\"message\":\\s\"execution\\sreverted:([\\w\\s]+)\"/\r\n\r\nexport class ContractBase {\r\n  constructor(chainId, contractAddress, contractAbi) {\r\n    this.chainId = chainId;\r\n    this.contractAddress = contractAddress;\r\n    this.contractAbi = contractAbi;\r\n  }\r\n\r\n  async _init() {\r\n    // re-init web3 and contract when web3 instance is null\r\n    if (!this.web3) {\r\n      this.web3 = await web3Factory.get(this.chainId);\r\n      this.contract = new this.web3.eth.Contract(\r\n        this.contractAbi,\r\n        this.contractAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async _call(method, args = []) {\r\n    let res\r\n    let retry = 2\r\n    while (retry > 0) {\r\n      try {\r\n        await this._init()\r\n        res = await this.contract.methods[method](...args).call();\r\n        break\r\n      } catch(err) {\r\n        retry -= 1\r\n        // remove web3 instance to re-init\r\n        this.web3 = null\r\n        if (err.toString().includes('Invalid JSON RPC response')) {\r\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\r\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\r\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\r\n        } else {\r\n          console.log('error:', err)\r\n        }\r\n      }\r\n    }\r\n    if (retry === 0 && !res) {\r\n      throw new Error(`The contract(${this.contractAddress}) '${method}([${args}])' failed with max retry 2.`)\r\n    }\r\n    return res\r\n  }\r\n\r\n  async _estimatedGas(method, args = [], accountAddress) {\r\n    await this._init()\r\n    let gas = 0;\r\n    for (let i = 0; i < 2; i++) {\r\n      try {\r\n        gas = await this.contract.methods[method](...args).estimateGas({\r\n          from: accountAddress,\r\n        });\r\n        gas = parseInt(gas * 1.25);\r\n        break;\r\n      } catch (error) {\r\n        console.log(`-- estimatedGas: ${error}`)\r\n        // const res = error.toString().split('\\n').join('').match(RE_ERROR_MSG)\r\n        // if (Array.isArray(res) && res.length >= 2) {\r\n        //   throw new Error(res[1].trim())\r\n        // }\r\n      }\r\n    }\r\n    if (gas === 0) gas = MAX_GAS_AMOUNT;\r\n    return gas;\r\n  }\r\n\r\n  _getTransactionReceipt(tx) {\r\n    const self = this;\r\n    return function _transactionReceipt(resolve, reject) {\r\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\r\n        if (error) {\r\n          reject(error);\r\n        } else if (receipt === null) {\r\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\r\n        } else if (receipt.status === false) {\r\n          //receipt.errorMessage = 'Transaction failed';\r\n          reject(receipt);\r\n        } else {\r\n          resolve(receipt);\r\n        }\r\n      });\r\n    };\r\n  }\r\n  async _transact(method, args=[], accountAddress) {\r\n    await this._init()\r\n    const gas = await this._estimatedGas(method, args, accountAddress)\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods[method](...args).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\r\n  }\r\n\r\n}\r\n","import { hexToNumber } from './convert';\r\nimport { web3Factory } from '../factory/web3'\r\n\r\nconst intRe = /^\\d+$/\r\n// adopt from derijs next\r\nexport const deleteIndexedKey = (obj) => {\r\n  if (typeof obj === 'object' && obj !== null &&  Object.keys(obj).length > 0) {\r\n    const keys = Object.keys(obj);\r\n    const intKeyCount = keys.reduce(\r\n      (acc, k) => (intRe.test(k) ? acc + 1 : acc),\r\n      0\r\n    );\r\n    //console.log(keys);\r\n    // is leaf array\r\n    if (intKeyCount * 2 === keys.length) {\r\n      let newObj = {};\r\n      Object.keys(obj).forEach((k) => {\r\n        if (!intRe.test(k)) {\r\n          newObj[k] = obj[k];\r\n        }\r\n      });\r\n      return newObj;\r\n    } else if (intKeyCount === keys.length) {\r\n      // is array container\r\n      let res = [];\r\n      for (let i = 0; i < keys.length; i++) {\r\n        if (Array.isArray(obj[i])) {\r\n          res.push(deleteIndexedKey(obj[i]));\r\n        } else {\r\n          res.push(obj[i]);\r\n        }\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  return obj;\r\n};\r\n\r\n  // get block number when last updated\r\n  export const getLastUpdatedBlockNumber = async(chainId, contractAddress, position = 0) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    const res = await web3.eth.getStorageAt(contractAddress, position)\r\n    //console.log('res', hexToNumber(res))\r\n    return hexToNumber(res)\r\n  }\r\n\r\n  // get block number when last updated\r\n  export const getLatestBlockNumber = async(chainId) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    const res = await web3.eth.getBlockNumber()\r\n    //console.log('res', res)\r\n    return res\r\n  }\r\n\r\n  export const getBlockInfo = async(chainId, blockNumber) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    return await web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  export const getPastEvents = async(chainId, contract, eventName, filter = {}, fromBlock = 0, to = 0) => {\r\n    let events = [];\r\n    let amount\r\n    if (['56', '97', '127', '80001'].includes(chainId)) {\r\n      amount = 999\r\n    } else {\r\n      amount = 4999\r\n    }\r\n    if ((fromBlock + amount) > to) {\r\n      amount = to - fromBlock\r\n    }\r\n    while (fromBlock <= to) {\r\n      let es = await contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock: fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if ((fromBlock + amount) > to) {\r\n        amount = to - fromBlock\r\n      }\r\n    }\r\n    return events;\r\n  }\r\n\r\n  export const getPastEventsUseAbi = async(chainId, contractAddress, contractAbi, eventName, filter = {}, fromBlock = 0, to = 0) => {\r\n    const web3 = await web3Factory.get(chainId)\r\n    const contract = new web3.eth.Contract(contractAbi, contractAddress);\r\n    let events = [];\r\n    let amount\r\n    if (['56', '97', '127', '80001'].includes(chainId)) {\r\n      amount = 999\r\n    } else {\r\n      amount = 4999\r\n    }\r\n    if ((fromBlock + amount) > to) {\r\n      amount = to - fromBlock\r\n    }\r\n    while (fromBlock <= to) {\r\n      let es = await contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock: fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if ((fromBlock + amount) > to) {\r\n        amount = to - fromBlock\r\n      }\r\n    }\r\n    return events;\r\n  }","import { makeObservable, observable, action, computed } from \"mobx\";\r\nimport { restoreLocale, storeLocale } from \"../utils/utils\";\r\nimport supportedCatalog from '../locales/lang.json'\r\n\r\n\r\nconst cache = {}\r\n\r\nfunction importAll(r){\r\n  return r.keys().forEach(key => {\r\n    const path = key.split('/')\r\n    const lang = path[1]\r\n    const page = path[2].split('.')[0].toLowerCase()\r\n    if(!cache[lang]) {\r\n      cache[lang] = {}\r\n    }\r\n    \r\n    if(/mobile-/.test(page)){\r\n      const pageName= page.split('-')[1]\r\n      if(!cache[lang][pageName]){ \r\n        cache[lang][pageName] = {}\r\n      }\r\n      cache[lang][pageName]['mobile'] = r(key)\r\n    } else {\r\n      cache[lang][page] = r(key)\r\n    }\r\n  });\r\n}\r\n//lang.json 是语言包目录，需要排除在外\r\nimportAll(require.context(`../locales/`,true,/^((?!lang).)*\\.json$/))\r\n\r\nclass Intl {\r\n  locale = 'en'\r\n  constructor(){\r\n    makeObservable(this,{\r\n      locale : observable,\r\n      setLocale : action,\r\n      dict : computed,\r\n      localeLabel: computed\r\n    })\r\n    const language = navigator.language\r\n    const prefix = language && language.split('-')[0]\r\n    const locale = restoreLocale()\r\n    if(locale && Object.keys(supportedCatalog).includes(locale) ){\r\n      this.locale = locale\r\n    } else if(prefix && Object.keys(supportedCatalog).includes(prefix)){\r\n      this.locale = prefix\r\n    }\r\n  }\r\n\r\n  setLocale(locale){\r\n    if(locale && supportedCatalog[locale]){\r\n      this.locale = locale;\r\n      storeLocale(locale)\r\n    }\r\n  }\r\n\r\n  get(page,key){\r\n    return cache[this.locale][page][key]\r\n  }\r\n\r\n  get dict(){         \r\n    return cache[this.locale]\r\n  }\r\n\r\n  get localeLabel(){\r\n    const label = supportedCatalog[this.locale];\r\n    return label ? label.substr(0,2).toUpperCase() : \"EN\" \r\n  }\r\n}\r\n\r\nexport default new Intl();","import { perpetualPoolFactory } from '../factory';\r\nimport { getPriceFromRest } from '../../shared/utils/oracle';\r\nimport { io } from 'socket.io-client';\r\n\r\n/** @module apiCache */\r\n/**\r\n * fundingRateCache Object\r\n * @name fundingRateCache\r\n * @property {function} get - Get the funding rate from cache\r\n * @property {function} set - set the funding rate cache\r\n */\r\nexport const fundingRateCache = (function () {\r\n  let resourceMap = {};\r\n  return {\r\n    get(chainId, contractAddress) {\r\n      const key = `${chainId}.${contractAddress}`;\r\n      if (Object.keys(resourceMap).includes(key)) {\r\n        return resourceMap[key];\r\n      }\r\n      console.log(`Cache key is not in resourceMap: ${key}`);\r\n      return undefined;\r\n    },\r\n    set(chainId, contractAddress, resource) {\r\n      const key = `${chainId}.${contractAddress}`;\r\n      resourceMap[key] = resource;\r\n    },\r\n  };\r\n})();\r\n\r\nexport const accountAddressCache = (function () {\r\n  let _accountAddress = '';\r\n  return {\r\n    get() {\r\n      if (_accountAddress === '') {\r\n        console.log(\"please init 'accountAddress' first\");\r\n      }\r\n      return _accountAddress;\r\n    },\r\n    set(value) {\r\n      if (typeof value === 'string' && value !== '') {\r\n        _accountAddress = value;\r\n      }\r\n    },\r\n  };\r\n})();\r\n\r\n/**\r\n * priceCache Object\r\n * @name priceCache\r\n * @property {function} get - Get the price from cache\r\n * @property {function} update - Set the price to automatic update during a time interval\r\n * @property {function} clear - Clear the the automatic update of the price\r\n */\r\nexport const priceCache = (function () {\r\n  let _price = '';\r\n  let _interval = null;\r\n  return {\r\n    get() {\r\n      if (_price === '') {\r\n        console.log(\"please init 'price' first\");\r\n      }\r\n      return _price;\r\n    },\r\n    async _update(poolAddress, symbol) {\r\n      try {\r\n        const res = await getPriceFromRest(symbol);\r\n        if (res !== '') {\r\n          _price = res;\r\n        }\r\n      } catch (err) {\r\n        console.log(`priceCache.update: ${err}`)\r\n      }\r\n    },\r\n    update(poolAddress, symbol) {\r\n      const self = this;\r\n      _interval = setInterval(() => {\r\n        // console.log('tick')\r\n        self._update(poolAddress, symbol);\r\n      }, 3000);\r\n    },\r\n    clear() {\r\n      if (_interval) {\r\n        clearInterval(_interval);\r\n      }\r\n      _price = '';\r\n    },\r\n  };\r\n})();\r\n\r\n/**\r\n * PerpetualPoolParametersCache Object\r\n * @name PerpetualPoolParametersCache\r\n * @property {function} get - Get the perpetualPoolParameters from cache\r\n * @property {function} update - Set the perpetualPoolParameters\r\n */\r\n\r\nexport const PerpetualPoolParametersCache = (function () {\r\n  let _parameters = {};\r\n  return {\r\n    get() {\r\n      if (!_parameters.multiplier) {\r\n        console.log(\"please init 'perpetual pool parameters' first\");\r\n      }\r\n      return _parameters;\r\n    },\r\n    async update(chainId, poolAddress) {\r\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n      const res = await perpetualPool.getParameters();\r\n      if (res.multiplier) {\r\n        _parameters = res;\r\n      }\r\n      return res;\r\n    },\r\n  };\r\n})();\r\n\r\n// websocket instance\r\nexport const wsInstance = (function(){\r\n  let _ws = null;\r\n  return {\r\n    get() {\r\n      if (_ws) {\r\n        return _ws\r\n      } else {\r\n        console.log('wsInstance.get() error: ws instance is not init')\r\n      }\r\n    },\r\n    set(url) {\r\n      try {\r\n        const ws = io(url, {\r\n          transports: ['websocket'],\r\n          path: '/ws',\r\n        });\r\n        ws.on('connect', () => {\r\n          console.log('hello from ws:', ws.id);\r\n        })\r\n        if (ws) {\r\n          _ws = ws\r\n        } else {\r\n          console.log('wsInstance.get() error: ws instance is not init')\r\n        }\r\n      } catch (err) {\r\n        console.log('wsInstance.set():', err)\r\n      }\r\n    },\r\n    getOrSet(url) {\r\n      if (!_ws) {\r\n        this.set(url)\r\n      }\r\n      return _ws\r\n    }\r\n  }\r\n})();\r\n","import {\r\n  bTokenFactory,\r\n  bg,\r\n  formatBN,\r\n  naturalToDeri,\r\n  getPoolV1Config,\r\n  deriToNatural,\r\n} from '../../shared';\r\nimport {\r\n  lTokenFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n} from '../factory';\r\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle'\r\nimport {\r\n  calculateMaxRemovableShares,\r\n  calculateMaxWithdrawMargin,\r\n  isOrderValid,\r\n} from '../calculation';\r\n\r\n/**\r\n * Unlock the account in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Deposit margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string|number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\r\n};\r\n\r\n/**\r\n * Withdraw margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n\r\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\r\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\r\n  const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\r\n\r\n  const maxWithdrawMargin = calculateMaxWithdrawMargin(\r\n    price,\r\n    volume,\r\n    margin,\r\n    cost,\r\n    multiplier,\r\n    minInitialMarginRatio\r\n  );\r\n  if (bg(amount).lte(maxWithdrawMargin)) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'amount exceeds allowed' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  //const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const decimals = await bToken.decimals();\r\n  const BONE = 10 ** decimals;\r\n  amount = formatBN(bg(amount).multipliedBy(BONE));\r\n  let res;\r\n  try {\r\n    const tx = await bToken._transact('mint', [amount], accountAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Add liquidity in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  let res;\r\n  try {\r\n    const tx = await pPool._transact(\r\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n      [naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} shares\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  shares\r\n) => {\r\n  const { lTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\r\n  //lToken.setAccount(accountAddress);\r\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\r\n\r\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n    lToken.balance(accountAddress),\r\n    lToken.totalSupply(),\r\n  ]);\r\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\r\n  const {\r\n    liquidity,\r\n    tradersNetVolume,\r\n    tradersNetCost,\r\n  } = await pPool.getStateValues();\r\n\r\n  const maxRemovableShares = calculateMaxRemovableShares(\r\n    lTokenBalance,\r\n    lTokenTotalSupply,\r\n    liquidity,\r\n    tradersNetVolume,\r\n    tradersNetCost,\r\n    multiplier,\r\n    minPoolMarginRatio,\r\n    price\r\n  );\r\n  let res;\r\n  if (bg(shares).lte(maxRemovableShares)) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(shares)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'shares exceeds allowed' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Trade with margin in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} newVolume\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  amount = '0'\r\n) => {\r\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\r\n  const {\r\n    multiplier,\r\n    minInitialMarginRatio,\r\n    minPoolMarginRatio,\r\n  } = await pPool.getParameters();\r\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\r\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\r\n  let res;\r\n  const orderValidation = isOrderValid(\r\n    price,\r\n    margin,\r\n    volume,\r\n    liquidity,\r\n    tradersNetVolume,\r\n    multiplier,\r\n    minPoolMarginRatio,\r\n    minInitialMarginRatio,\r\n    bg(newVolume),\r\n    bg(amount)\r\n  );\r\n  if (orderValidation.success) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: orderValidation.message };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Close position in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\r\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n  let { volume } = await pToken.getPositionInfo(accountAddress);\r\n  volume = volume.negated();\r\n  let res;\r\n  if (!volume.eq(0)) {\r\n    try {\r\n      const tx = await pPool._transact(\r\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [naturalToDeri(volume), '0'],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res;\r\n};\r\n","import {\r\n  //naturalToDeri,\r\n  deriToNatural,\r\n  hexToString,\r\n  toChecksumAddress,\r\n  hexToNumber,\r\n  hexToNumberString,\r\n  bg,\r\n} from '../../shared/utils';\r\nimport { getPoolV1Config } from '../../shared/config';\r\n\r\nimport { databaseFactory } from '../../shared/factory';\r\nimport { perpetualPoolFactory } from '../factory';\r\n\r\nconst processTradeEvent = async (\r\n  perpetualPool,\r\n  bTokenSymbol,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const transactionFee = perpetualPool._calculateFee(\r\n    tradeVolume,\r\n    price,\r\n    multiplier,\r\n    feeRatio\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(multiplier);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    baseToken: bTokenSymbol,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: bg(volume).times(multiplier).toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  // console.log(JSON.stringify(res))\r\n  return res;\r\n};\r\n\r\nconst processLiquidateEvent = async (\r\n  info,\r\n  txHash,\r\n  bTokenSymbol,\r\n  multiplier\r\n) => {\r\n  // console.log(info)\r\n  const volume = deriToNatural(info.volume).abs();\r\n  // const cost = deriToNatural(info.cost).abs()\r\n  // const margin = info.margin\r\n  const timestamp = `${info.timestamp}000`;\r\n  const price = deriToNatural(info.price);\r\n  // const liquidator = info.liquidator\r\n  // const reward = info.reward\r\n  const national = volume.times(price).times(multiplier);\r\n  // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\r\n\r\n  const res = {\r\n    direction: 'Liquidation',\r\n    baseToken: bTokenSymbol,\r\n    price: price.toString(),\r\n    notional: national.toString(),\r\n    volume: bg(volume).times(multiplier).toString(),\r\n    transactionFee: '0',\r\n    transactionHash: txHash.toString(),\r\n    time: timestamp,\r\n    // cost: naturalToDeri(cost).toString(),\r\n    // margin: margin.toString(),\r\n    // liquidator,\r\n    // reward: reward.toString(),\r\n  };\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get the user trade history\r\n * @async\r\n * @method\r\n * @param {string} chainId - Chain Id\r\n * @param {string} poolAddress - Pool Address\r\n * @param {string} accountAddress - Account Address\r\n * @returns {Object[]} response\r\n * @returns {string} response[].direction\r\n * @returns {string} response[].baseToken\r\n * @returns {string} response[].price\r\n * @returns {string} response[].notional\r\n * @returns {string} response[].volume\r\n * @returns {string} response[].transactionFee\r\n * @returns {string} response[].time - Timestamp of the trade\r\n */\r\n\r\nexport const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\r\n  const keyMeta = `${chainId}.${poolAddress}`;\r\n  const db = databaseFactory();\r\n  let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\r\n    db.getValues([`${keyMeta}.tradeHistoryBlock`]),\r\n    db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\r\n  ]);\r\n  tradeFromBlock = hexToNumber(tradeFromBlock[0]);\r\n  liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\r\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\r\n    // console.log(tradeFromBlock, liquidateFromBlock)\r\n    const [\r\n      tradeHistoryOffline,\r\n      tradeHistoryOnline,\r\n      liquidateHistoryOffline,\r\n      liquidateHistoryOnline,\r\n    ] = await Promise.all([\r\n      getTradeHistoryOffline(chainId, poolAddress, accountAddress),\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline\r\n      .concat(liquidateHistoryOnline)\r\n      .concat(tradeHistoryOffline)\r\n      .concat(liquidateHistoryOffline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  } else {\r\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\r\n    tradeFromBlock = parseInt(initialBlock);\r\n    liquidateFromBlock = parseInt(initialBlock);\r\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n      getLiquidateHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        liquidateFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  }\r\n};\r\n\r\n// get trade history combined from cache and from online pull\r\nconst getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\r\n  // console.log(chainId, poolAddress, accountAddress)\r\n  let result = [];\r\n  // use dev database\r\n  const db = databaseFactory();\r\n  const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\r\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\r\n    accountAddress\r\n  )}.trade`;\r\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const count = hexToNumber(res);\r\n\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const {\r\n    multiplier,\r\n  } = await perpetualPool.getParameters();\r\n  try {\r\n    if (count && count >= 0) {\r\n      let keyArray = [];\r\n      for (let i = count; i > 0; i--) {\r\n        const key = `${keyMeta}.${i.toString()}`;\r\n        keyArray = keyArray.concat([\r\n          `${key}.direction`,\r\n          `${key}.baseToken`,\r\n          `${key}.price`,\r\n          `${key}.notional`,\r\n          `${key}.volume`,\r\n          `${key}.transactionFee`,\r\n          `${key}.transactionHash`,\r\n          `${key}.time`,\r\n        ]);\r\n      }\r\n      // console.log(keyArray)\r\n      const tradeHistoryLength = keyArray.length / 8;\r\n      // console.log(`trade history length: ${tradeHistoryLength}`)\r\n      const resp = await db.getValues(keyArray);\r\n      for (let i = 0; i < tradeHistoryLength; i++) {\r\n        const indexBase = i * 8;\r\n        //console.log(resp[indexBase + 6].trim());\r\n        const item = {\r\n          direction: hexToString(resp[indexBase]).trim(),\r\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\r\n          price: deriToNatural(resp[indexBase + 2]).toString(),\r\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\r\n          volume: bg(deriToNatural(resp[indexBase + 4])).times(multiplier).toString(),\r\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\r\n          transactionHash: resp[indexBase + 6],\r\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\r\n        };\r\n        result.push(item);\r\n      }\r\n    } else {\r\n      result = [];\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    result = [];\r\n  }\r\n  return result;\r\n};\r\n\r\n// get trade history online from the Block number\r\nexport const getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  fromBlock\r\n) => {\r\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\r\n  // console.log(poolAddr, bTokenAddress);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //perpetualPool.setAccount(accountAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n  const filters = { owner: accountAddress };\r\n  const events = await perpetualPool._getPastEvents(\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n  const {\r\n    multiplier,\r\n    feeRatio,\r\n    minInitialMarginRatio,\r\n  } = await perpetualPool.getParameters();\r\n\r\n  const result = [];\r\n  // console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    // const info = item.returnValues;\r\n    const res = await processTradeEvent(\r\n      perpetualPool,\r\n      bTokenSymbol,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n      minInitialMarginRatio\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\n// get liquidate history online from the Block number\r\nexport const getLiquidateHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  fromBlock\r\n) => {\r\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\r\n  // console.log(poolAddr, bTokenAddress);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //perpetualPool.setAccount(accountAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n  const filters = { owner: accountAddress };\r\n  const events = await perpetualPool._getPastEvents(\r\n    'Liquidate',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n  const { multiplier } = await perpetualPool.getParameters();\r\n\r\n  const result = [];\r\n  // console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    // const info = item.returnValues;\r\n    const res = await processLiquidateEvent(\r\n      item.returnValues,\r\n      item.transactionHash,\r\n      bTokenSymbol,\r\n      multiplier\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\n// get trade history combined from cache and from online pull\r\nconst getLiquidateHistoryOffline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  let result = [];\r\n  // use dev database\r\n  const db = databaseFactory();\r\n  const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\r\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\r\n    accountAddress\r\n  )}.liquidate`;\r\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\r\n  const count = hexToNumber(res);\r\n\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const {\r\n    multiplier,\r\n  } = await perpetualPool.getParameters();\r\n  try {\r\n    if (count && count >= 0) {\r\n      let keyArray = [];\r\n      for (let i = count; i > 0; i--) {\r\n        const key = `${keyMeta}.${i.toString()}`;\r\n        keyArray = keyArray.concat([\r\n          `${key}.direction`,\r\n          `${key}.baseToken`,\r\n          `${key}.price`,\r\n          `${key}.notional`,\r\n          `${key}.volume`,\r\n          `${key}.transactionFee`,\r\n          `${key}.transactionHash`,\r\n          `${key}.time`,\r\n        ]);\r\n      }\r\n      // console.log(keyArray)\r\n      const liquidateHistoryLength = keyArray.length / 8;\r\n      const resp = await db.getValues(keyArray);\r\n      for (let i = 0; i < liquidateHistoryLength; i++) {\r\n        const indexBase = i * 8;\r\n        const item = {\r\n          direction: hexToString(resp[indexBase]).trim(),\r\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\r\n          price: deriToNatural(resp[indexBase + 2]).toString(),\r\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\r\n          volume: bg(deriToNatural(resp[indexBase + 4])).times(multiplier).toString(),\r\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\r\n          transactionHash: resp[indexBase + 6],\r\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\r\n        };\r\n        result.push(item);\r\n      }\r\n    } else {\r\n      result = [];\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    result = [];\r\n  }\r\n  return result;\r\n};\r\n","// const\r\nimport { getPoolV1Config } from '../../shared/config';\r\nimport { bg, deriToNatural, getHttpBase, fetchJson } from '../../shared/utils';\r\nimport {\r\n  getTradeHistoryOnline,\r\n} from './trade_history_api';\r\nimport { perpetualPoolFactory } from '../factory';\r\n\r\n/**\r\n * Get specification from REST API, please refer {@link getSpecification}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getSpecification2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/specification/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get funding rate from REST API, please refer {@link getFundingRate}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getFundingRate2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/funding_rate/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity used from REST API, please refer {@link getLiquidityUsed}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getLiquidityUsed2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(`${getHttpBase()}/liquidity_used/${poolAddress}`);\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get funding rate cache from REST API, it used to 'fundingRateCache.update(chainId, poolAddress, result)'\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object}\r\n */\r\nexport const getFundingRateCache2 = async (chainId, poolAddress) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/funding_rate_cache/${poolAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    let result = res.data;\r\n    result.price = bg(result.price);\r\n    result.fundingRate = bg(result.fundingRate);\r\n    result.liquidityUsed = bg(result.liquidityUsed);\r\n    return result;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get position info from REST API, please refer {@link getPositionInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getPositionInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/position_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity info from REST API, please refer {@link getLiquidityInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance from REST API, please refer {@link getWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get liquidity of the slp pool from REST API, please refer {@link getSlpLiquidityInfo}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getSlpLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/slp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the slp pool from REST API, please refer {@link getSlpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getSlpWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/slp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the clp pool from REST API, please refer {@link getClpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getClpLiquidityInfo2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/clp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the clp pool from REST API, please refer {@link getSlpWalletBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getClpWalletBalance2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/clp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get balance of the deri pool from REST API, please refer {@link getDeriBalance}\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getDeriBalance2 = async (chainId, poolAddress, accountAddress) => {\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/deri_balance/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    return res.data;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get the user trade history from REST API, please refer {@link getTradeHistory}\r\n * @async\r\n * @method\r\n * @param {string} chainId - Chain Id\r\n * @param {string} poolAddress - Pool Address\r\n * @param {string} accountAddress - Account Address\r\n * @returns {Object[]} response\r\n */\r\nexport const getTradeHistory2 = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  let tradeFromBlock, liquidateFromBlock, tradeHistory;\r\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\r\n  const res = await fetchJson(\r\n    `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\r\n  );\r\n  if (res && res.success) {\r\n    tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n    liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\r\n    tradeHistory = res.data.tradeHistory;\r\n  }\r\n\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const {\r\n    multiplier,\r\n  } = await perpetualPool.getParameters();\r\n  tradeHistory = tradeHistory.filter((i) => i).map((i) => {\r\n    return {\r\n      direction: i.direction.trim(),\r\n      baseToken: bTokenSymbol,\r\n      price: deriToNatural(i.price).toString(),\r\n      notional: deriToNatural(i.notional).toString(),\r\n      volume: deriToNatural(i.volume).times(multiplier).toString(),\r\n      transactionFee: deriToNatural(i.transactionFee).toString(),\r\n      transactionHash: i.transactionHash,\r\n      time: i.time.toString(),\r\n    };\r\n  });\r\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\r\n    // console.log(tradeFromBlock, liquidateFromBlock)\r\n    const [tradeHistoryOnline ] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      )\r\n    ]);\r\n    const result = tradeHistoryOnline.concat(tradeHistory);\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  } else {\r\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\r\n    tradeFromBlock = parseInt(initialBlock);\r\n    liquidateFromBlock = parseInt(initialBlock);\r\n    const [tradeHistoryOnline] = await Promise.all([\r\n      getTradeHistoryOnline(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n        tradeFromBlock + 1\r\n      ),\r\n    ]);\r\n    const result = tradeHistoryOnline\r\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n  }\r\n};\r\n","import {\r\n  validateArgs,\r\n  naturalWithPercentage,\r\n  deriToNatural,\r\n  bg,\r\n} from '../../shared/utils';\r\nimport {\r\n  bTokenFactory,\r\n} from '../../shared/factory';\r\nimport { getPoolV1Config } from '../../shared';\r\nimport { getPriceFromRest } from '../../shared/utils/oracle';\r\nimport { getPoolInfoApy } from '../../shared/api/database_api';\r\nimport {\r\n  lTokenFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n} from '../factory';\r\nimport {\r\n  fundingRateCache,\r\n  PerpetualPoolParametersCache,\r\n  priceCache,\r\n} from './api_v1_globals';\r\nimport {\r\n  calculateFundingRate,\r\n  calculateLiquidityUsed,\r\n  calculateShareValue,\r\n  calculateMaxRemovableShares,\r\n  calculateEntryPrice,\r\n  calculateMarginHeld,\r\n  calculatePnl,\r\n  calculateLiquidationPrice,\r\n  processFundingRate,\r\n} from '../calculation';\r\n\r\n/**\r\n * Get the contract information\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.addresses\r\n * @returns {string} response.symbol\r\n * @returns {string} response.bTokenSymbol\r\n * @returns {string} response.multiplier\r\n * @returns {string} response.feeRatio\r\n * @returns {string} response.minPoo\r\n * @returns {string} response.minPoolMarginRatio\r\n * @returns {string} response.minInitialMarginRatio\r\n * @returns {string} response.minMaintenanceMarginRatio\r\n * @returns {string} response.minAddLiquidity\r\n * @returns {string} response.redemptionFeeRatio\r\n * @returns {string} response.fundingRateCoefficient\r\n * @returns {string} response.minLiquidationReward\r\n * @returns {string} response.maxLiquidationReward\r\n * @returns {string} response.liquidationCutRatio\r\n * @returns {string} response.priceDelayAllowance\r\n */\r\nexport const getSpecification = async (\r\n  chainId,\r\n  poolAddress,\r\n  //accountAddress,\r\n) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const {\r\n    multiplier,\r\n    feeRatio,\r\n    minPoolMarginRatio,\r\n    minInitialMarginRatio,\r\n    minMaintenanceMarginRatio,\r\n    minAddLiquidity,\r\n    redemptionFeeRatio,\r\n    fundingRateCoefficient,\r\n    minLiquidationReward,\r\n    maxLiquidationReward,\r\n    liquidationCutRatio,\r\n    priceDelayAllowance,\r\n  } = await pPool.getParameters();\r\n  let symbol = await pPool.symbol();\r\n  const bTokenSymbol = await bToken.symbol();\r\n\r\n  // fix symbol BTCUSD issue, will remove later\r\n  // if (poolAddress === '0xA2D7316Bc60AA9463DfB78379d25E77371990507') {\r\n  //   symbol = 'iMEME'\r\n  // }\r\n\r\n  return {\r\n    addresses: poolAddress,\r\n    symbol,\r\n    bTokenSymbol,\r\n    multiplier: multiplier.toString(),\r\n    feeRatio: feeRatio.toString(),\r\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n    minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n    minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n    minAddLiquidity: minAddLiquidity.toString(),\r\n    redemptionFeeRatio: redemptionFeeRatio.toString(),\r\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n    minLiquidationReward: minLiquidationReward.toString(),\r\n    maxLiquidationReward: maxLiquidationReward.toString(),\r\n    liquidationCutRatio: liquidationCutRatio.toString(),\r\n    priceDelayAllowance: priceDelayAllowance.toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Get position Information of the user\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.volume\r\n * @returns {string} response.averageEntryPrice\r\n * @returns {string} response.margin\r\n * @returns {string} response.marginHeld\r\n * @returns {string} response.unrealizedPnl\r\n * @returns {string} response.liquidationPrice\r\n */\r\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\r\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\r\n  //pToken.setAccount(accountAddress);\r\n  const {\r\n    multiplier,\r\n    minInitialMarginRatio,\r\n    minMaintenanceMarginRatio,\r\n  } = await pPool.getParameters();\r\n  const symbol = await pPool.symbol()\r\n  //console.log('getPositionInfo', chainId, poolAddress, accountAddress, price);\r\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\r\n  const price = await getPriceFromRest(symbol);\r\n  if (price === '') {\r\n    return {\r\n      price,\r\n      volume: bg(volume).times(multiplier).toString(),\r\n      averageEntryPrice: calculateEntryPrice(\r\n        volume,\r\n        cost,\r\n        multiplier\r\n      ).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: '',\r\n      unrealizedPnl: '',\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        cost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n    };\r\n  } else {\r\n    return {\r\n      price,\r\n      volume: bg(volume).times(multiplier).toString(),\r\n      averageEntryPrice: calculateEntryPrice(\r\n        volume,\r\n        cost,\r\n        multiplier\r\n      ).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: calculateMarginHeld(\r\n        price,\r\n        volume,\r\n        multiplier,\r\n        minInitialMarginRatio\r\n      ).toString(),\r\n      unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        cost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get liquidity Info of the user\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.totalSupply\r\n * @returns {string} response.poolLiquidity\r\n * @returns {string} response.shares\r\n * @returns {string} response.shareValue\r\n * @returns {string} response.maxRemovableShares\r\n */\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { lTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\r\n  //lToken.setAccount(accountAddress);\r\n\r\n  const [lTokenBalance, lTokenTotalSupply, symbol] = await Promise.all([\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n    pPool.symbol(),\r\n  ]);\r\n  const price = await getPriceFromRest(symbol);\r\n  const {\r\n    liquidity,\r\n    tradersNetCost,\r\n    tradersNetVolume,\r\n  } = await pPool.getStateValues();\r\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\r\n  const poolDynamicEquity = liquidity.plus(\r\n    tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\r\n  );\r\n\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: calculateShareValue(\r\n      lTokenTotalSupply,\r\n      poolDynamicEquity\r\n    ).toString(),\r\n    maxRemovableShares: calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      tradersNetVolume,\r\n      tradersNetCost,\r\n      multiplier,\r\n      minPoolMarginRatio,\r\n      price\r\n    ).toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Get user balance in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {string} user balance\r\n */\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\n/**\r\n * Get estimate margin in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {string} volume\r\n * @param {string} leverage\r\n * @returns {string}\r\n */\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage\r\n) => {\r\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const { multiplier } = await pPool.getParameters();\r\n  const symbol = await pPool.symbol();\r\n  const price = await getPriceFromRest(symbol);\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .div(bg(leverage))\r\n    .toString();\r\n};\r\n\r\n/**\r\n * Get estimate Fee in the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} volume\r\n * @returns {string}\r\n */\r\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\r\n  // const price = await getBTCUSDPrice(chainId, poolAddress);\r\n  let price = priceCache.get();\r\n  let parameters = PerpetualPoolParametersCache.get();\r\n  if (price === '') {\r\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const symbol = await pPool.symbol();\r\n    await priceCache._update(poolAddress, symbol);\r\n    price = priceCache.get();\r\n  }\r\n  // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\r\n  // const { multiplier, feeRatio } = await pPool.getParameters();\r\n  if (!parameters.multiplier) {\r\n    parameters = await PerpetualPoolParametersCache.update(\r\n      chainId,\r\n      poolAddress\r\n    );\r\n  }\r\n  //console.log('price', price);\r\n  const { multiplier, feeRatio } = parameters;\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(feeRatio)\r\n    .toString();\r\n};\r\n\r\n/**\r\n * Get funding rate of the perpetual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate0\r\n * @returns {string} response.fundingRatePerBlock\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.volume\r\n * @returns {string} response.tradersNetVolume\r\n */\r\nexport const getFundingRate = async (chainId, poolAddress) => {\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n\r\n  const res = await perpetualPool\r\n    .getFundingRate()\r\n    .catch((err) => console.log('getFundingRate', err));\r\n  fundingRateCache.set(chainId, poolAddress, res);\r\n  const poolInfo = await getPoolInfoApy(chainId, poolAddress);\r\n\r\n  if (res) {\r\n    // console.log(hexToNatural(res[0]));\r\n    const {\r\n      fundingRate,\r\n      fundingRatePerBlock,\r\n      liquidity,\r\n      tradersNetVolume,\r\n      multiplier,\r\n    } = res;\r\n    const volume = poolInfo.volume24h;\r\n    // fundingRate = processFundingRate(chainId, fundingRate);\r\n\r\n    return {\r\n      fundingRate0: naturalWithPercentage(fundingRate),\r\n      fundingRatePerBlock: bg(fundingRatePerBlock).toExponential(10),\r\n      liquidity: liquidity.toString(),\r\n      volume: deriToNatural(volume).toString(),\r\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString(),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress) => {\r\n  return fundingRateCache.get(chainId, poolAddress)\r\n}\r\n\r\n/**\r\n * Get estimate funding rate\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} newNetVolume\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate1\r\n */\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume\r\n) => {\r\n  let fundingRate1;\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool.getFundingRate();\r\n  }\r\n  if (res) {\r\n    const parameters = [\r\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.fundingRateCoefficient,\r\n    ];\r\n    if (!validateArgs(...parameters)) {\r\n      return {\r\n        fundingRate1: '0',\r\n      };\r\n    }\r\n    // console.log(parameters)\r\n    fundingRate1 = calculateFundingRate(...parameters);\r\n    fundingRate1 = processFundingRate(chainId, fundingRate1);\r\n    return {\r\n      fundingRate1: naturalWithPercentage(fundingRate1),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get liquidity used\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidityUsed0\r\n */\r\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool.getFundingRate();\r\n  }\r\n  if (res) {\r\n    const { liquidityUsed } = res;\r\n    return {\r\n      liquidityUsed0: naturalWithPercentage(liquidityUsed),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get estimate liquidity used\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} newNetVolume\r\n * @returns {Object} response\r\n * @returns {string} response.fundingRate1\r\n */\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume\r\n) => {\r\n  let res;\r\n  res = fundingRateCache.get(chainId, poolAddress);\r\n  if (!res) {\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    res = await perpetualPool\r\n      .getFundingRate()\r\n      .catch((err) => console.log('getLiquidityUsed', err));\r\n  }\r\n  if (res) {\r\n    const parameters = [\r\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.poolMarginRatio,\r\n    ];\r\n    if (!validateArgs(...parameters)) {\r\n      return {\r\n        liquidityUsed1: '0',\r\n      };\r\n    }\r\n    const liquidityUsed1 = calculateLiquidityUsed(...parameters);\r\n    return {\r\n      liquidityUsed1: naturalWithPercentage(liquidityUsed1),\r\n    };\r\n  }\r\n};\r\n","import {\r\n  //getPoolConfig,\r\n  ContractBase,\r\n  deriToNatural,\r\n  naturalToDeri,\r\n  //isEqualSet,\r\n  bTokenFactory,\r\n} from '../../shared';\r\nimport { checkOffChainOracleSymbol, getPriceInfos } from '../../shared/utils/oracle';\r\nimport { perpetualPoolLiteOldAbi} from './abis';\r\nimport { lTokenLiteFactory, pTokenLiteFactory } from '../factory';\r\n\r\nexport class PerpetualPoolLiteOld extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolLiteOldAbi);\r\n  }\r\n\r\n  async init() {\r\n    // init web3 and contract\r\n    await this._init();\r\n    // init address and parameters\r\n    if (!this.addresses || !this.pToken) {\r\n      [this.addresses, this.parameters] = await Promise.all([\r\n        this.getAddresses(),\r\n        this.getParameters(),\r\n      ]);\r\n      const { bTokenAddress, lTokenAddress, pTokenAddress } = this.addresses;\r\n      // init bToken, pToken and lToken\r\n      this.bToken = bTokenFactory(this.chainId, bTokenAddress);\r\n      this.pToken = pTokenLiteFactory(this.chainId, pTokenAddress);\r\n      this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\r\n      this.bTokenSymbol = await this.bToken.symbol();\r\n    }\r\n    const symbolIds = await this.pToken.getActiveSymbolIds();\r\n    // update symbolIds\r\n    if (\r\n      !this.activeSymbolIds ||\r\n      this.activeSymbolIds.toString() !== symbolIds.toString() ||\r\n      this.offChainOracleSymbolIds == null\r\n    ) {\r\n      this.activeSymbolIds = symbolIds;\r\n      this.symbols = await Promise.all(\r\n        this.activeSymbolIds.reduce(\r\n          (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n          []\r\n        )\r\n      );\r\n      this.activeSymbolNames = this.symbols.map((s) => s.symbol);\r\n      this.offChainOracleSymbols = await Promise.all(\r\n        this.symbols\r\n          .map((s) => s.oracleAddress)\r\n          .reduce(\r\n            (acc, o, index) => [\r\n              ...acc,\r\n              checkOffChainOracleSymbol(\r\n                this.chainId,\r\n                o,\r\n                this.symbols[index].symbol\r\n              ),\r\n            ],\r\n            []\r\n          )\r\n      );\r\n      this.offChainOracleSymbolIds = this.activeSymbolIds.reduce(\r\n        (acc, i, index) => {\r\n          return this.offChainOracleSymbols[index] === '' ? acc : [...acc, i];\r\n        },\r\n        []\r\n      );\r\n      this.offChainOracleSymbols = this.offChainOracleSymbols.filter(\r\n        (s) => s && s !== ''\r\n      );\r\n      //console.log('offchain', this.offChainOracleSymbols);\r\n    }\r\n  }\r\n\r\n  // update symbols\r\n  async getSymbols() {\r\n    await this.init()\r\n    this.symbols = await Promise.all(\r\n      this.activeSymbolIds.reduce(\r\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n        []\r\n      )\r\n    );\r\n    return this.symbols\r\n  }\r\n\r\n  // update positions\r\n  async getPositions(accountAddress) {\r\n    await this.init()\r\n    this.positions = await Promise.all(\r\n      this.activeSymbolIds.reduce(\r\n        (acc, symbolId) => [\r\n          ...acc,\r\n          this.pToken.getPosition(accountAddress, symbolId),\r\n        ],\r\n        []\r\n      )\r\n    );\r\n    return this.positions\r\n  }\r\n\r\n  async getAddresses() {\r\n    const res = await this._call('getAddresses');\r\n    return res;\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      // decimals0: res.decimals0,\r\n      // minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n  async getLastUpdateBlock() {\r\n    const res = await this._call('getLastUpdateBlock');\r\n    return parseInt(res);\r\n  }\r\n  async getProtocolFeeAccrued() {\r\n    const res = await this._call('getProtocolFeeAccrued');\r\n    return deriToNatural(res);\r\n  }\r\n  async getLiquidity() {\r\n    const res = await this._call('getLiquidity');\r\n    return deriToNatural(res);\r\n  }\r\n  // async getBTokenOracle(bTokenId) {\r\n  //   //bTokenId = parseInt(bTokenId)\r\n  //   return await this._call('getBTokenOracle', [bTokenId])\r\n  // }\r\n  async getSymbol(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    try {\r\n      const res = await this._call('getSymbol', [symbolId]);\r\n      return {\r\n        symbol: res.symbol,\r\n        symbolId: res.symbolId,\r\n        oracleAddress: res.oracleAddress,\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        price: deriToNatural(res.price),\r\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\r\n    }\r\n  }\r\n\r\n  // async getSymbolOracle(symbolId) {\r\n  //   //symbolId = parseInt(symbolId)\r\n  //   return await this._call('getSymbolOracle', [symbolId])\r\n  // }\r\n\r\n  async _getSymbolPrices() {\r\n    let prices = [];\r\n    await this.init()\r\n    if (this.offChainOracleSymbolIds.length > 0) {\r\n      const priceInfos = await getPriceInfos(this.offChainOracleSymbols);\r\n      prices = Object.values(priceInfos).reduce((acc, p, index) => {\r\n        acc.push([\r\n          this.offChainOracleSymbolIds[\r\n            this.offChainOracleSymbols.indexOf(Object.keys(priceInfos)[index])\r\n          ],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ]);\r\n        return acc;\r\n      }, []);\r\n    }\r\n    //console.log('prices', prices);\r\n    return prices;\r\n  }\r\n\r\n  // === transaction ===\r\n  async addLiquidity(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'removeLiquidity',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async addMargin(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'addMargin',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMargin(accountAddress, amount) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'removeMargin',\r\n      [naturalToDeri(amount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async trade(accountAddress, symbolId, newVolume) {\r\n    const prices = await this._getSymbolPrices();\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(newVolume), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n}\r\n","import {\r\n  LTokenLite,\r\n  PTokenLite,\r\n  PerpetualPoolLiteViewer \r\n} from './contract';\r\nimport { PerpetualPoolLiteOld } from './contract/perpetual_pool_old';\r\n\r\nconst factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\n// const factoryWithUpgrade = (klass, klassOld, newPoolList) => {\r\n//   let instances = {}\r\n//   return (chainId, address, initialBlock='') => {\r\n//     const key = address\r\n//     if (Object.keys(instances).includes(key)) {\r\n//       return instances[key];\r\n//     } else {\r\n//       if (Array.isArray(newPoolList) && newPoolList.includes(address)) {\r\n//         instances[key] = new klass(chainId, address, initialBlock);\r\n//         return instances[key];\r\n//       } else {\r\n//         instances[key] = new klassOld(chainId, address, initialBlock);\r\n//         return instances[key];\r\n//       }\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLiteOld);\r\n\r\nexport const lTokenLiteFactory = factory(LTokenLite)\r\n\r\nexport const pTokenLiteFactory = factory(PTokenLite)\r\n\r\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)","import { catchApiError, bg, deriToNatural, getNetworkName } from '../../shared/utils';\r\nimport { databaseFactory } from '../../shared/factory';\r\nimport { calculateMaxRemovableShares, calculateShareValue } from '../../v1/calculation';\r\nimport { perpetualPoolLiteFactory } from '../factory';\r\n\r\n\r\nconst _getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\r\n  //const { lToken:lTokenAddress, pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', null, 'v2_lite')\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n  await perpetualPool.init()\r\n  // const bTokenSymbol = perpetualPool.bTokenSymbol\r\n  // const lToken = lTokenLiteFactory(chainId, lTokenAddress)\r\n  // const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n  const lToken = perpetualPool.lToken\r\n  // const pToken = perpetualPool.pToken\r\n  const parameterInfo = perpetualPool.parameters\r\n  const symbolIds = perpetualPool.activeSymbolIds\r\n  //const symbolIndex = symbolIds.indexOf(symbolId)\r\n  //const symbols = perpetualPool.symbols\r\n\r\n  const [liquidity, lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n    //perpetualPool.getParameters(),\r\n    perpetualPool.getLiquidity(),\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n    //pToken.getActiveSymbolIds(),\r\n  ])\r\n  const { minPoolMarginRatio } = parameterInfo;\r\n  let promises = []\r\n  for (let i = 0; i < symbolIds.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n  }\r\n  const symbols = await Promise.all(promises)\r\n  const totalPnl = symbols.reduce((acc, s) => {\r\n    return acc.plus(s.tradersNetVolume.times(s.price).times(s.multiplier).minus(s.tradersNetCost))\r\n  }, bg(0))\r\n  const poolDynamicEquity = liquidity.minus(totalPnl)\r\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0))\r\n  const value = symbols.reduce((acc, s) => acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier)), bg(0))\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: calculateShareValue(\r\n      lTokenTotalSupply,\r\n      poolDynamicEquity\r\n    ).toString(),\r\n    maxRemovableShares: calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      value,\r\n      cost,\r\n      minPoolMarginRatio\r\n    ).toString(),\r\n  };\r\n}\r\nexport const getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\r\n  return catchApiError(\r\n    _getLiquidityInfo,\r\n    [chainId, poolAddress, accountAddress],\r\n    'getLiquidityInfo',\r\n    {\r\n      totalSupply: '',\r\n      poolLiquidity: '',\r\n      shares: '',\r\n      shareValue: '',\r\n      maxRemovableShares: '',\r\n    }\r\n  );\r\n}\r\n\r\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        symbol:'',\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidity: '',\r\n    symbol:'',\r\n  };\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n};\r\n","import { catchTxApiError } from '../../shared/utils';\r\nimport { perpetualPoolLiteFactory } from '../factory.js';\r\n\r\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    return await perpetualPool.addLiquidity(accountAddress, amount)\r\n  }, args)\r\n}\r\n\r\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    return await perpetualPool.removeLiquidity(accountAddress, amount, isMaximum)\r\n  }, args)\r\n}\r\n","import { bg, max } from '../../shared/utils';\r\n\r\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\r\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\r\n\r\nexport const calculateMarginHeld = (\r\n  price,\r\n  volume,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\r\n};\r\n\r\nexport const calculatePnl = (price, volume, multiplier, cost) => {\r\n  return volume.times(price).times(multiplier).minus(cost);\r\n}\r\n\r\n// export const calculateMaxWithdrawMargin = (\r\n//   price,\r\n//   volume,\r\n//   margin,\r\n//   cost,\r\n//   multiplier,\r\n//   minInitialMarginRatio\r\n// ) => {\r\n//   if (volume.eq(0)) {\r\n//     return margin;\r\n//   }\r\n//   const held = calculateMarginHeld(\r\n//     price,\r\n//     volume,\r\n//     multiplier,\r\n//     minInitialMarginRatio\r\n//   );\r\n//   const pnl = calculatePnl(price, volume, multiplier, cost);\r\n//   const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\r\n//   return withdrawable;\r\n// };\r\n\r\nexport const calculateLiquidationPrice = (\r\n  volume,\r\n  margin,\r\n  cost,\r\n  dynamicCost,\r\n  multiplier,\r\n  minMaintenanceMarginRatio\r\n) => {\r\n  const tmp = bg(cost).minus(margin);\r\n  let res = bg(volume).gt(0)\r\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier)\r\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier);\r\n  res = max(res, bg(0));\r\n  return res;\r\n};\r\n\r\nexport const isOrderValid = (\r\n  //price,\r\n  margin,\r\n  marginHeld,\r\n  liquidity,\r\n  liquidityUsed,\r\n  // multiplier,\r\n  // minPoolMarginRatio,\r\n  // newVolume,\r\n) => {\r\n  const minMargin = marginHeld;\r\n  // const poolMaxVolume = liquidity.minus(liquidityUsed)\r\n  //   .div(minPoolMarginRatio)\r\n  //   .div(price)\r\n  //   .div(multiplier);\r\n  if (margin.gte(minMargin)) {\r\n    // if (\r\n    //   newVolume.lte(poolMaxVolume) &&\r\n    //   newVolume.gte(poolMaxVolume.negated())\r\n    // ) {\r\n    if (liquidity.minus(liquidityUsed).gte(0)) {\r\n      return { success: true };\r\n    }\r\n    return { success: false, error: 'Pool has insufficient liquidity' };\r\n  }\r\n  return { success: false, error: 'Trader has insufficient margin' };\r\n};\r\n\r\nexport const calculateTxFee = (volume, price, multiplier, feeRatio) => {\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(feeRatio)\r\n    .toString();\r\n};","import { bg, getDailyBlockNumber, validateArgs } from '../../shared/utils';\r\n\r\nexport const calculateLiquidityUsed = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  poolMarginRatio\r\n) => {\r\n  if (\r\n    validateArgs(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      poolMarginRatio\r\n    )\r\n  ) {\r\n    return bg(tradersNetVolume)\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(poolMarginRatio)\r\n      .div(liquidity)\r\n      .abs();\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      poolMarginRatio,\r\n    ];\r\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\r\n  }\r\n}\r\n\r\nexport const calculateFundingRate = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  fundingRateCoefficient\r\n) => {\r\n  if (\r\n    validateArgs(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      fundingRateCoefficient\r\n    )\r\n  ) {\r\n    return bg(liquidity).eq(0) ? bg(0) : bg(tradersNetVolume)\r\n      .times(price)\r\n      // .times(price)\r\n      // .times(multiplier)\r\n      .times(multiplier)\r\n      .times(fundingRateCoefficient)\r\n      .div(liquidity);\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      fundingRateCoefficient\r\n    ];\r\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\r\n  }\r\n};\r\n\r\nexport const processFundingRate = (chainId, fundingRate) => {\r\n  const annualBlockCount = getDailyBlockNumber(chainId);\r\n  //console.log(annualBlockCount);\r\n  return bg(fundingRate).times(annualBlockCount);\r\n};\r\n\r\nexport const calculateFundingFee = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  fundingRateCoefficient,\r\n  dynamicEquity,\r\n  cumulativeFundingRate,\r\n  lastCumulativeFundingRate,\r\n  lastUpdatedBlockNumber,\r\n  latestBlockNumber,\r\n  volume,\r\n) => {\r\n  if (bg(volume).eq(0)) {\r\n    return '0'\r\n  } else {\r\n    const args = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      dynamicEquity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    ];\r\n    if (\r\n      validateArgs(...args)\r\n    ) {\r\n      return bg(dynamicEquity).eq(0) ? bg(0) : bg(tradersNetVolume)\r\n        .times(price)\r\n        .times(multiplier)\r\n        .times(price)\r\n        .times(multiplier)\r\n        .times(fundingRateCoefficient)\r\n        .div(dynamicEquity)\r\n        .times(bg(latestBlockNumber).minus(lastUpdatedBlockNumber))\r\n        .plus(cumulativeFundingRate)\r\n        .minus(lastCumulativeFundingRate)\r\n        .times(volume)\r\n    } else {\r\n      console.log(`calculateFundingFee: invalid args: ${args}`);\r\n      return 'NaN'\r\n    }\r\n  }\r\n};","import { bg, max, min } from '../../shared/utils'\r\n\r\nexport const calculateBTokenDynamicEquities = (bTokens) => {\r\n  //const dynamicEquities = bTokens.map((b) => bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\r\n  //const totalDynamicEquity = dynamicEquities.reduce((accum, d) => accum.plus(d), bg(0))\r\n  const totalDynamicEquity = bTokens.reduce((accum, b) => accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)), bg(0))\r\n  return totalDynamicEquity\r\n}\r\n\r\nexport const isBToken0RatioValid = (bTokens, bTokenId, amount, bToken0Ratio) => {\r\n  bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).plus(amount)\r\n  const totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\r\n  const b = bTokens['0']\r\n  const dynamicEquity = bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\r\n  //console.log('estimatedBToken0Ratio',dynamicEquity.div(totalDynamicEquity).toString())\r\n  // use 1 as efficient\r\n  if (\r\n    !totalDynamicEquity.eq(0) &&\r\n    dynamicEquity.div(totalDynamicEquity).times('1').lt(bToken0Ratio)\r\n  ) {\r\n    return { success: false, error: 'Trader has insufficient bToken0' };\r\n  } else {\r\n    return { success: true };\r\n  }\r\n}\r\n\r\nexport const isPoolMarginRatioValid = (bTokens, bTokenId, amount, userLiquidity, symbols, poolMarginRatio) => {\r\n  if (bg(amount).gte(userLiquidity)) {\r\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(userLiquidity)\r\n  } else {\r\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(amount)\r\n  }\r\n  let totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\r\n  let totalCost = bg(0)\r\n  for (let i=0; i<symbols.length; i++) {\r\n    const s = symbols[i]\r\n    if (!bg(s.tradersNetVolume).eq(0)) {\r\n      const cost = bg(s.tradersNetVolume).times(s.price).times(s.multiplier)\r\n      totalDynamicEquity = totalDynamicEquity.plus(s.tradersNetCost).minus(cost)\r\n      totalCost = totalCost.plus(cost.abs())\r\n    }\r\n  }\r\n  //console.log(totalDynamicEquity.toString(), totalCost.toString())\r\n  if (\r\n    !totalCost.eq(0) &&\r\n    totalDynamicEquity.div(totalCost).times('1').lt(poolMarginRatio)\r\n  ) {\r\n    return { success: false, error: 'Trader has insufficient liquidity' };\r\n  } else {\r\n    return { success: true };\r\n  }\r\n}\r\n\r\n\r\nexport const calculateMaxRemovableLiquidity = (\r\n  bToken,\r\n  userLiquidity,\r\n  cost,\r\n  pnl,\r\n  restLiquidity,\r\n  minPoolMarginRatio,\r\n) => {\r\n  if (bg(cost).eq(0)) {\r\n    return userLiquidity;\r\n  } else {\r\n    return max(\r\n      min(\r\n        bg(bToken.liquidity).minus(\r\n          bg(minPoolMarginRatio)\r\n            .times(cost)\r\n            .plus(pnl)\r\n            .minus(restLiquidity)\r\n            .div(bToken.price)\r\n            .div(bToken.discount)\r\n        ).times('0.98'),\r\n        bg(userLiquidity)\r\n      ),\r\n      bg(0)\r\n    );\r\n  }\r\n};\r\n\r\n// for v1 mining\r\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\r\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\r\n\r\nexport const calculateMaxRemovableShares = (\r\n  lTokenBalance,\r\n  lTokenTotalSupply,\r\n  liquidity,\r\n  value,\r\n  cost,\r\n  minPoolMarginRatio,\r\n) => {\r\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\r\n  const removable = bg(liquidity)\r\n    .plus(cost)\r\n    .minus(value)\r\n    .minus(bg(value).abs().times(minPoolMarginRatio));\r\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\r\n  return shares;\r\n};\r\n","export const priceCache = (function(){\r\n  let _prices = {}\r\n  return {\r\n    get(poolAddress, symbolId) {\r\n      const key = `${poolAddress}.${symbolId}`\r\n      if (Object.keys(_prices).includes(key)) {\r\n        const [price, ] = _prices[key].split('|')\r\n        //if (parseInt(timestamp) - Date.now() < 10000) {\r\n          return price\r\n        //}\r\n      }\r\n      console.log('please init priceCache first')\r\n    },\r\n    // update(chainId, poolAddress, symbolId) {\r\n    //   // place holder\r\n    // },\r\n    set(poolAddress, symbolId, val) {\r\n      if (!isNaN(parseFloat(val))) {\r\n        const timestamp = Date.now().toString()\r\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\r\n      }\r\n    }\r\n  }\r\n})()\r\n\r\nexport const fundingRateCache = (function () {\r\n  let resourceMap = {};\r\n  return {\r\n    get(chainId, contractAddress, symbolId) {\r\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\r\n      if (Object.keys(resourceMap).includes(key)) {\r\n        return resourceMap[key];\r\n      }\r\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\r\n      return undefined;\r\n    },\r\n    set(chainId, contractAddress, symbolId, resource) {\r\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\r\n      resourceMap[key] = resource;\r\n    },\r\n  };\r\n})();\r\n\r\nexport const liquidatePriceCache = (function() {\r\n  let _cache = {}\r\n  return {\r\n    get(address) {\r\n      if (Object.keys(_cache).includes(address)) {\r\n        return _cache[address]\r\n      } else {\r\n        return {}\r\n      }\r\n    },\r\n    set(address, val) {\r\n      _cache[address] = val\r\n    },\r\n  }\r\n})()\r\n","import { fromWei } from \"../shared\";\r\nimport { getOraclePriceFromCache2, oraclePricesCache } from \"../shared/utils/oracle\";\r\n\r\nexport const getSymbolPrices = async (chainId, symbols, offChainSymbolIds, offChainSymbolNames) => {\r\n  const onChainOracleAddressWithPlaceHolder = symbols.map((s) =>\r\n    offChainSymbolIds.indexOf(s.symbolId) > -1\r\n      ? ''\r\n      : s.oracleAddress\r\n  );\r\n\r\n  const onChainSymbolPrices = await Promise.all(\r\n    onChainOracleAddressWithPlaceHolder\r\n      .reduce((acc, address, index) => {\r\n        const _symbol = symbols.map((s) => s.symbol)[index];\r\n        if (address !== '') {\r\n          return acc.concat(\r\n            getOraclePriceFromCache2.get(chainId, _symbol, address)\r\n          );\r\n        } else {\r\n          return acc.concat('');\r\n        }\r\n      }, [])\r\n      .filter((f) => f !== '')\r\n  );\r\n\r\n  const res =  await oraclePricesCache.get(offChainSymbolNames)\r\n  const offChainSymbolPrices = offChainSymbolNames.map((s) => fromWei(res[s].price))\r\n\r\n  // combine offChain and onChain symbol prices\r\n  const symbolPrices = onChainOracleAddressWithPlaceHolder.map((o) => {\r\n    if (o !== '') {\r\n      return onChainSymbolPrices.shift();\r\n    } else {\r\n      return offChainSymbolPrices.shift();\r\n    }\r\n  });\r\n  return symbolPrices\r\n};","import {\r\n  calculateEntryPrice,\r\n  calculateFundingRate,\r\n  calculateLiquidationPrice,\r\n  processFundingRate,\r\n  calculateFundingFee,\r\n} from '../../v2/calculation';\r\nimport { getPoolConfig } from \"../../shared/config\"\r\nimport { bTokenFactory } from \"../../shared/factory\"\r\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from \"../factory.js\"\r\nimport {\r\n  bg,\r\n  catchApiError,\r\n  getLatestBlockNumber,\r\n} from '../../shared/utils';\r\nimport { fundingRateCache, liquidatePriceCache, priceCache } from '../../shared/api/api_globals';\r\nimport { getIndexInfo } from '../../shared/config/token';\r\nimport { getSymbolPrices } from '../utils';\r\n\r\nexport const getSpecification = async(chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\r\n    //const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'v2_lite');\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n    const bTokenSymbol = perpetualPool.bTokenSymbol\r\n    const [symbolInfo, parameterInfo] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n    ])\r\n    const { symbol, multiplier, feeRatio, fundingRateCoefficient } = symbolInfo;\r\n    const {\r\n      minPoolMarginRatio,\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n    } = parameterInfo;\r\n\r\n    return {\r\n      symbol,\r\n      bTokenSymbol,\r\n      multiplier: multiplier.toString(),\r\n      feeRatio: feeRatio.toString(),\r\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n      minLiquidationReward: minLiquidationReward.toString(),\r\n      maxLiquidationReward: maxLiquidationReward.toString(),\r\n      liquidationCutRatio: liquidationCutRatio.toString(),\r\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n      indexConstituents: getIndexInfo(symbol),\r\n    }\r\n  }, args, 'getSpecification', {\r\n    symbol: '',\r\n    bTokenSymbol: '',\r\n    multiplier: '',\r\n    feeRatio: '',\r\n    fundingRateCoefficient: '',\r\n    minPoolMarginRatio: '',\r\n    minInitialMarginRatio: '',\r\n    minMaintenanceMarginRatio: '',\r\n    minLiquidationReward: '',\r\n    maxLiquidationReward: '',\r\n    liquidationCutRatio: '',\r\n    protocolFeeCollectRatio: '',\r\n    indexConstituents: { url: '', tokens: [] },\r\n  })\r\n}\r\n\r\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n    const pToken = perpetualPool.pToken\r\n    const parameterInfo = perpetualPool.parameters \r\n    const symbolIds = perpetualPool.activeSymbolIds\r\n    const symbolIndex = symbolIds.indexOf(symbolId)\r\n\r\n    if (symbolIndex > -1) {\r\n      let promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      }\r\n      const symbols = await Promise.all(promises);\r\n\r\n      //const symbol = symbols[symbolIndex].symbol\r\n      //const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\r\n      //const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\r\n      const [\r\n        symbolInfo,\r\n        liquidity,\r\n        lastUpdatedBlockNumber,\r\n        latestBlockNumber,\r\n        positionInfo,\r\n        margin,\r\n        //latestPrice,\r\n      ] = await Promise.all([\r\n        //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\r\n        perpetualPool.getSymbol(symbolId),\r\n        perpetualPool.getLiquidity(),\r\n        perpetualPool.getLastUpdateBlock(),\r\n        getLatestBlockNumber(chainId),\r\n        pToken.getPosition(accountAddress, symbolId),\r\n        pToken.getMargin(accountAddress),\r\n        //getOraclePriceFromCache2.get(chainId, symbol,oracleAddress),\r\n      ]);\r\n      //console.log(latestBlockNumber, lastUpdatedBlockNumber)\r\n      const { volume, cost, lastCumulativeFundingRate } = positionInfo;\r\n      const {\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        tradersNetVolume,\r\n        cumulativeFundingRate,\r\n      } = symbolInfo;\r\n      const {\r\n        minInitialMarginRatio,\r\n        minMaintenanceMarginRatio,\r\n      } = parameterInfo;\r\n\r\n      // promises = [];\r\n      // for (let i = 0; i < symbolIds.length; i++) {\r\n      //   promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      // }\r\n      //const symbols = await Promise.all(promises);\r\n\r\n      const symbolPrices = await getSymbolPrices(\r\n        chainId,\r\n        symbols,\r\n        perpetualPool.offChainOracleSymbolIds,\r\n        perpetualPool.offChainOracleSymbols\r\n      );\r\n      // promises = [];\r\n      // for (let i = 0; i < symbolIds.length; i++) {\r\n      //   const isOffchain = perpetualPool.offChainOracleSymbolIds.indexOf(symbolIds[i]) > -1\r\n      //   const address = isOffchain ? '' : symbols[i].oracleAddress\r\n      //   const _symbol = symbolList[i]\r\n      //   promises.push(\r\n      //     getOraclePriceFromCache2.get(chainId, _symbol, address),\r\n      //   );\r\n      // }\r\n      // const symbolPrices = await Promise.all(promises);\r\n      let price;\r\n      if (symbolIndex === '-1') {\r\n        price = '0';\r\n      } else {\r\n        price = symbolPrices[symbolIndex];\r\n        priceCache.set(poolAddress, symbolId, price);\r\n      }\r\n\r\n      promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n      }\r\n      const positions = await Promise.all(promises);\r\n\r\n      const marginHeld = symbols.reduce((acc, s, index) => {\r\n        return acc.plus(\r\n          bg(symbolPrices[index])\r\n            .times(s.multiplier)\r\n            .times(positions[index].volume)\r\n            .times(minInitialMarginRatio)\r\n            .abs()\r\n        );\r\n      }, bg(0));\r\n      const marginHeldBySymbol = bg(volume)\r\n        .abs()\r\n        .times(multiplier)\r\n        .times(price)\r\n        .times(minInitialMarginRatio);\r\n\r\n      const unrealizedPnl = symbols.reduce((acc, s, index) => {\r\n        return acc.plus(\r\n          bg(symbolPrices[index])\r\n            .times(s.multiplier)\r\n            .times(positions[index].volume)\r\n            .minus(positions[index].cost)\r\n        );\r\n      }, bg(0));\r\n      const unrealizedPnlList = symbols.map((s, index) => {\r\n        return [\r\n          s.symbol,\r\n          bg(symbolPrices[index])\r\n            .times(s.multiplier)\r\n            .times(positions[index].volume)\r\n            .minus(positions[index].cost)\r\n            .toString(),\r\n        ];\r\n      }, bg(0));\r\n\r\n      const totalCost = positions.reduce((accum, p) => {\r\n        return accum.plus(bg(p.cost));\r\n      }, bg(0));\r\n      const dynamicCost = symbols.reduce((accum, s, index) => {\r\n        if (index !== symbolIndex) {\r\n          return accum.plus(\r\n            bg(positions[index].volume)\r\n              .times(symbolPrices[index])\r\n              .times(s.multiplier)\r\n          );\r\n        } else {\r\n          return accum;\r\n        }\r\n      }, bg(0));\r\n\r\n      const fundingFee = calculateFundingFee(\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        liquidity,\r\n        cumulativeFundingRate,\r\n        lastCumulativeFundingRate,\r\n        lastUpdatedBlockNumber,\r\n        latestBlockNumber,\r\n        volume\r\n      );\r\n\r\n      liquidatePriceCache.set(poolAddress, {\r\n        volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        price,\r\n        multiplier,\r\n        minMaintenanceMarginRatio,\r\n      });\r\n\r\n      return {\r\n        symbol:symbols[symbolIndex].symbol,\r\n        price,\r\n        volume: bg(volume).times(symbols[symbolIndex].multiplier).toString(),\r\n        averageEntryPrice: calculateEntryPrice(\r\n          volume,\r\n          cost,\r\n          multiplier\r\n        ).toString(),\r\n        margin: margin.toString(),\r\n        marginHeld: marginHeld.toString(),\r\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n        unrealizedPnl: unrealizedPnl.toString(),\r\n        unrealizedPnlList,\r\n        fundingFee: fundingFee.toString(),\r\n        liquidationPrice: calculateLiquidationPrice(\r\n          volume,\r\n          margin,\r\n          totalCost,\r\n          dynamicCost,\r\n          multiplier,\r\n          minMaintenanceMarginRatio\r\n        ).toString(),\r\n      };\r\n    } else {\r\n      throw new Error(`-- getPostionInfo: invalid symbolId(${symbolId})`)\r\n    }\r\n  }, args, 'getPositionInfo', {\r\n      symbol: '',\r\n      price: '',\r\n      volume: '',\r\n      averageEntryPrice: '',\r\n      margin: '',\r\n      marginHeld: '',\r\n      marginHeldBySymbol: '',\r\n      unrealizedPnl: '',\r\n      unrealizedPnlList: [],\r\n      fundingFee: '',\r\n      liquidationPrice: '',\r\n  })\r\n}\r\n\r\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n    const pToken = perpetualPool.pToken\r\n    const parameterInfo = perpetualPool.parameters \r\n    const symbolIds = perpetualPool.activeSymbolIds\r\n    //const symbolIndex = symbolIds.indexOf(symbolId)\r\n\r\n      let promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      }\r\n      const symbols = await Promise.all(promises);\r\n\r\n      promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n      }\r\n      const positions = await Promise.all(promises);\r\n\r\n      // const symbol = symbols[symbolIndex].symbol\r\n      // const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\r\n      // const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\r\n      const [\r\n        liquidity,\r\n        lastUpdatedBlockNumber,\r\n        latestBlockNumber,\r\n        margin,\r\n      ] = await Promise.all([\r\n        //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\r\n        //perpetualPool.getSymbol(symbolId),\r\n        perpetualPool.getLiquidity(),\r\n        perpetualPool.getLastUpdateBlock(),\r\n        getLatestBlockNumber(chainId),\r\n        //pToken.getPosition(accountAddress, symbolId),\r\n        pToken.getMargin(accountAddress),\r\n        //getOraclePriceFromCache2.get(chainId, symbol,oracleAddress),\r\n      ]);\r\n      //console.log(latestBlockNumber, lastUpdatedBlockNumber)\r\n      const {\r\n        minInitialMarginRatio,\r\n        minMaintenanceMarginRatio,\r\n      } = parameterInfo;\r\n\r\n      const symbolList = symbols.map((s) => s.symbol);\r\n\r\n      const symbolPrices = await getSymbolPrices(\r\n        chainId,\r\n        symbols,\r\n        perpetualPool.offChainOracleSymbolIds,\r\n        perpetualPool.offChainOracleSymbols\r\n      );\r\n\r\n      // promises = [];\r\n      // for (let i = 0; i < symbolIds.length; i++) {\r\n      //   const isOffchain = perpetualPool.offChainOracleSymbolIds.indexOf(symbolIds[i]) > -1\r\n      //   const address = isOffchain ? '' : symbols[i].oracleAddress\r\n      //   const _symbol = symbolList[i]\r\n      //   promises.push(\r\n      //     getOraclePriceFromCache2.get(chainId, _symbol, address)\r\n      //   );\r\n      // }\r\n      // const symbolPrices = await Promise.all(promises);\r\n\r\n      const marginHeld = symbols.reduce((acc, s, index) => {\r\n        return acc.plus(\r\n          bg(symbolPrices[index])\r\n            .times(s.multiplier)\r\n            .times(positions[index].volume)\r\n            .times(minInitialMarginRatio)\r\n            .abs()\r\n        );\r\n      }, bg(0));\r\n\r\n      const totalCost = positions.reduce((accum, p) => {\r\n        return accum.plus(bg(p.cost));\r\n      }, bg(0));\r\n\r\n      return positions.map((p, index) => {\r\n      const symbolId = symbolList[index]\r\n      const symbol = symbols[index]\r\n      const price = symbolPrices[index]\r\n\r\n      const { volume, cost, lastCumulativeFundingRate } = p\r\n      const {\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        tradersNetVolume,\r\n        cumulativeFundingRate,\r\n      } = symbol;\r\n      priceCache.set(poolAddress, symbolId, price);\r\n\r\n      const unrealizedPnl = bg(symbolPrices[index]).times(symbol.multiplier).times(p.volume).minus(p.cost)\r\n\r\n      const dynamicCost = symbols.reduce((accum, s, idx) => {\r\n        if (idx !== index) {\r\n          return accum.plus(\r\n            bg(positions[idx].volume)\r\n              .times(symbolPrices[idx])\r\n              .times(s.multiplier)\r\n          );\r\n        } else {\r\n          return accum;\r\n        }\r\n      }, bg(0));\r\n      const fundingFee = calculateFundingFee(\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        liquidity,\r\n        cumulativeFundingRate,\r\n        lastCumulativeFundingRate,\r\n        lastUpdatedBlockNumber,\r\n        latestBlockNumber,\r\n        volume\r\n      );\r\n      const marginHeldBySymbol = bg(volume)\r\n        .abs()\r\n        .times(multiplier)\r\n        .times(price)\r\n        .times(minInitialMarginRatio);\r\n\r\n        return {\r\n          symbol: symbol.symbol,\r\n          symbolId: symbol.symbolId,\r\n          price,\r\n          volume: bg(volume).times(symbols[index].multiplier).toString(),\r\n          averageEntryPrice: calculateEntryPrice(\r\n            volume,\r\n            cost,\r\n            multiplier\r\n          ).toString(),\r\n          margin: margin.toString(),\r\n          marginHeld: marginHeld.toString(),\r\n          marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n          unrealizedPnl: unrealizedPnl.toString(),\r\n          //unrealizedPnlList,\r\n          fundingFee: fundingFee.toString(),\r\n          liquidationPrice: calculateLiquidationPrice(\r\n            volume,\r\n            margin,\r\n            totalCost,\r\n            dynamicCost,\r\n            multiplier,\r\n            minMaintenanceMarginRatio\r\n          ).toString(),\r\n        };\r\n      }).filter((p) => p.volume !== '0')\r\n  }, args, 'getPositionInfos', [])\r\n}\r\n\r\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', null, 'v2_lite')\r\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\r\n    return balance.toString()\r\n  }, args, 'getWalletBalance', '')\r\n}\r\n\r\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', null, 'v2_lite')\r\n    const bToken = bTokenFactory(chainId, bTokenAddress)\r\n    return await bToken.isUnlocked(accountAddress, poolAddress)\r\n  }, args, 'isUnlocked', '')\r\n}\r\n\r\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n  await perpetualPool.init()\r\n  const parameterInfo = perpetualPool.parameters\r\n  const symbolIds = perpetualPool.activeSymbolIds\r\n  const symbolIndex = symbolIds.indexOf(symbolId)\r\n\r\n  let promises = [];\r\n  for (let i = 0; i < symbolIds.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n\r\n  if (symbolIndex > -1) {\r\n    const symbolInfo = symbols[symbolIndex];\r\n    // const symbol = symbols[symbolIndex].symbol;\r\n    // const isOffchainOracleSymbol =\r\n    //   perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1;\r\n    // const oracleAddress = isOffchainOracleSymbol\r\n    //   ? ''\r\n    //   : symbols[symbolIndex].oracleAddress;\r\n    const [liquidity, prices] = await Promise.all([\r\n      perpetualPool.getLiquidity(),\r\n      getSymbolPrices(\r\n        chainId,\r\n        symbols,\r\n        perpetualPool.offChainOracleSymbolIds,\r\n        perpetualPool.offChainOracleSymbols\r\n      ),\r\n    ]);\r\n    const price = prices[symbolIndex]\r\n    priceCache.set(poolAddress, symbolId, price);\r\n    const {\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      tradersNetVolume,\r\n      feeRatio,\r\n    } = symbolInfo;\r\n    const { minPoolMarginRatio } = parameterInfo;\r\n    const fundingRateArgs = [\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      liquidity,\r\n      fundingRateCoefficient,\r\n    ];\r\n    const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs);\r\n    const fundingRate = processFundingRate(chainId, fundingRatePerBlock);\r\n\r\n    const liquidityUsedInAmount = symbols.reduce((accum, a) => {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume)\r\n          .times(a.price)\r\n          .times(a.multiplier)\r\n          .times(minPoolMarginRatio)\r\n          .abs()\r\n      );\r\n    }, bg(0));\r\n\r\n    const res = {\r\n      price,\r\n      multiplier: multiplier.toString(),\r\n      feeRatio: feeRatio.toString(),\r\n      tradersNetVolume: tradersNetVolume.toString(),\r\n      liquidity: liquidity.toString(),\r\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n      fundingRatePerBlock: fundingRatePerBlock,\r\n      fundingRate: fundingRate,\r\n      liquidityUsed: liquidityUsedInAmount.div(liquidity),\r\n    };\r\n    fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n    return res;\r\n  } else {\r\n    throw new Error(`-- getFundingRate: invalide symbolId(${symbolId})`);\r\n  }\r\n}\r\n\r\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\r\n  const args = [chainId, poolAddress, volume, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n\r\n    const symbolIds = perpetualPool.activeSymbolIds\r\n    const symbolIndex = perpetualPool.activeSymbolIds.indexOf(symbolId)\r\n\r\n    let promises = [];\r\n    for (let i = 0; i < symbolIds.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n    }\r\n    const symbols = await Promise.all(promises);\r\n    //const symbol = symbols[symbolIndex]\r\n    let price = priceCache.get(poolAddress, symbolId)\r\n    //console.log('symbol',symbol)\r\n\r\n    if (!price) {\r\n      // const symbolName = symbol.symbol;\r\n      // const isOffchainOracleSymbol =\r\n      //   perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1;\r\n      // const oracleAddress = isOffchainOracleSymbol ? '' : symbol.oracleAddress;\r\n      const prices = await getSymbolPrices(\r\n        chainId,\r\n        symbols,\r\n        perpetualPool.offChainOracleSymbolIds,\r\n        perpetualPool.offChainOracleSymbols\r\n      );\r\n      price = prices[symbolIndex]\r\n      priceCache.set(poolAddress, symbolId, price)\r\n    }\r\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!cache || !cache.multiplier) {\r\n      await _getFundingRate(chainId, poolAddress, symbolId)\r\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    }\r\n    const { multiplier, feeRatio } = cache;\r\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\r\n  }, args, 'getFundingFee', '')\r\n}\r\nexport const getEstimatedMargin = async(\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId,\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, volume, leverage, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\r\n    //const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\r\n    //console.log('symbol',symbol)\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n    const symbolIds = perpetualPool.activeSymbolIds\r\n    const symbolIndex = symbolIds.indexOf(symbolId)\r\n    let promises = [];\r\n    for (let i = 0; i < symbolIds.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n    }\r\n    const symbols = await Promise.all(promises);\r\n    if (symbolIndex > -1) {\r\n      // const symbol = symbols[symbolIndex].symbol\r\n      // const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\r\n      //const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\r\n\r\n      const prices = await getSymbolPrices(\r\n        chainId,\r\n        symbols,\r\n        perpetualPool.offChainOracleSymbolIds,\r\n        perpetualPool.offChainOracleSymbols\r\n      );\r\n      const price = prices[symbolIndex]\r\n      priceCache.set(poolAddress, symbolId, price)\r\n      const { multiplier } = symbols[symbolIndex]\r\n      return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\r\n    } else {\r\n      throw new Error(`-- getEstimatedMargin: invalid symbolId(${symbolId})`)\r\n    }\r\n\r\n  }, args, 'getEstimatedMargin', '')\r\n}\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\r\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\r\n}\r\n\r\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\r\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    const {fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume, multiplier} = res\r\n    return {\r\n      fundingRate0: fundingRate.times(100).toString(),\r\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\r\n      liquidity: liquidity.toString(),\r\n      volume: '-',\r\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString()\r\n    }\r\n  }, args, 'getFundingRate', {\r\n    fundingRate0: '',\r\n    fundingRatePerBlock: '',\r\n    liquidity: '',\r\n    volume: '',\r\n    tradersNetVolume: '',\r\n  })\r\n}\r\n\r\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newNetVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      const args = [\r\n        bg(res.tradersNetVolume).plus(newNetVolume).toString(),\r\n        res.price,\r\n        res.multiplier,\r\n        res.liquidity,\r\n        res.fundingRateCoefficient,\r\n      ];\r\n      let fundingRate1 = calculateFundingRate(...args);\r\n      fundingRate1 = processFundingRate(chainId, fundingRate1);\r\n      return {\r\n        fundingRate1: fundingRate1.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedFundingRate',\r\n    ''\r\n  );\r\n}\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      return {\r\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getLiquidityUsed',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newNetVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\r\n  return catchApiError(\r\n    async () => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      const { pToken: pTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        symbolId,\r\n        'v2_lite'\r\n      );\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\r\n      const symbolIds = await pToken.getActiveSymbolIds();\r\n      let promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      }\r\n      const symbols = await Promise.all(promises);\r\n\r\n      let liquidityUsed0 = symbols.reduce((acc, s, index) => {\r\n        if (index === parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(s.price)\r\n              .times(s.multiplier)\r\n              .times(s.tradersNetVolume.plus(newNetVolume))\r\n              .abs()\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.price).times(s.multiplier).times(s.tradersNetVolume).abs()\r\n          );\r\n        }\r\n      }, bg(0));\r\n      const liquidityUsed1 = liquidityUsed0\r\n        .times(res.minPoolMarginRatio)\r\n        .div(res.liquidity);\r\n      return {\r\n        liquidityUsed1: liquidityUsed1.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedLiquidityUsed',\r\n    ''\r\n  );\r\n}\r\n","import { catchTxApiError, bg } from '../../shared/utils';\r\nimport { isOrderValid } from '../../v2/calculation';\r\nimport { perpetualPoolLiteFactory } from '../factory.js';\r\n\r\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n    // const { bToken: bTokenAddress } = getPoolConfig(\r\n    //   poolAddress,\r\n    //   '0',\r\n    //   null,\r\n    //   'v2_lite'\r\n    // );\r\n    // const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    return await perpetualPool.bToken.unlock(accountAddress, poolAddress);\r\n  }, args);\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount) => {\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n      await perpetualPool.init()\r\n      return await perpetualPool.addMargin(accountAddress, amount);\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  isMaximum = false\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      await perpetualPool.init()\r\n      return await perpetualPool.removeMargin(\r\n        accountAddress,\r\n        amount,\r\n        isMaximum\r\n      );\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      await perpetualPool.init()\r\n      // const { pToken: pTokenAddress } = getPoolConfig(\r\n      //   poolAddress,\r\n      //   '0',\r\n      //   '0',\r\n      //   'v2_lite'\r\n      // );\r\n      // const pToken = pTokenLiteFactory(chainId, pTokenAddress);\r\n      // const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      const pToken = perpetualPool.pToken\r\n      const parameterInfo = perpetualPool.parameters\r\n      // const symbols = perpetualPool.symbols\r\n      const symbolIds = perpetualPool.activeSymbolIds\r\n      const [liquidity, margin] = await Promise.all([\r\n        //perpetualPool.getParameters(),\r\n        perpetualPool.getLiquidity(),\r\n        pToken.getMargin(accountAddress),\r\n        //pToken.getActiveSymbolIds(),\r\n      ]);\r\n      const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n      let promises = [];\r\n\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\r\n      }\r\n      const symbols = await Promise.all(promises);\r\n\r\n      promises = [];\r\n      for (let i = 0; i < symbolIds.length; i++) {\r\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n      }\r\n      const positions = await Promise.all(promises);\r\n\r\n      let marginHeld = symbols.reduce((acc, s, index) => {\r\n        if (index === parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(s.price)\r\n              .times(s.multiplier)\r\n              .times(positions[index].volume.plus(newVolume))\r\n              .abs()\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\r\n          );\r\n        }\r\n      }, bg(0));\r\n      marginHeld = marginHeld.times(minInitialMarginRatio);\r\n\r\n      let liquidityUsed = symbols.reduce((acc, s, index) => {\r\n        if (index === parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .plus(newVolume)\r\n              .times(s.price)\r\n              .times(s.multiplier)\r\n              .abs()\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\r\n          );\r\n        }\r\n      }, bg(0));\r\n      liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n\r\n      const orderValidation = isOrderValid(\r\n        margin,\r\n        marginHeld,\r\n        liquidity,\r\n        liquidityUsed\r\n      );\r\n      if (orderValidation.success) {\r\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error(orderValidation.error);\r\n      }\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, symbolId) => {\r\n      // const { pToken: pTokenAddress } = getPoolConfig(\r\n      //   poolAddress,\r\n      //   '0',\r\n      //   '0',\r\n      //   'v2_lite'\r\n      // );\r\n\r\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      await perpetualPool.init()\r\n      //const pToken = pTokenLiteFactory(chainId, pTokenAddress);\r\n      const pToken = perpetualPool.pToken\r\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n      if (!volume.eq(0)) {\r\n        const newVolume = volume.negated();\r\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error('no position to close');\r\n      }\r\n    },\r\n    args\r\n  );\r\n};\r\n","import { bg, deriToNatural, getBlockInfo, getPastEvents, getHttpBase, fetchJson } from '../../shared/utils';\r\nimport {\r\n  getPoolConfig,\r\n  getPoolConfig2,\r\n} from '../../shared/config';\r\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from '../factory';\r\nimport { calculateTxFee } from '../../v2/calculation/position';\r\n\r\nconst processTradeEvent = async (\r\n  chainId,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  bTokenSymbol,\r\n  symbols,\r\n  symbolIds,\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const symbolId = info.symbolId\r\n  const index = symbolIds.findIndex((s) => s === symbolId)\r\n  const symbol = symbols[index]\r\n  const transactionFee = calculateTxFee(\r\n    tradeVolume,\r\n    price,\r\n    symbol.multiplier,\r\n    symbol.feeRatio,\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(symbol.multiplier);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    baseToken: bTokenSymbol,\r\n    symbolId,\r\n    symbol: symbol && symbol.symbol,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    //volume: volume.toString(),\r\n    volume: bg(volume).times(symbol.multiplier).toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  return res;\r\n};\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  //console.log('symbolIdList', symbolIdList);\r\n  const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'v2_lite')\r\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n  const { pTokenAddress } = await perpetualPool.getAddresses()\r\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\r\n  //const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  const symbolIdList = await pToken.getActiveSymbolIds()\r\n  const toBlock = await getBlockInfo(chainId, 'latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  let promises= []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  let symbols = await Promise.all(promises)\r\n\r\n  const filters =  { account: accountAddress }\r\n  let events = await getPastEvents(chainId, perpetualPool.contract,\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await processTradeEvent(\r\n      chainId,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      bTokenSymbol,\r\n      symbols,\r\n      symbolIdList,\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock, tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n\r\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\r\n    await perpetualPool.init()\r\n    const symbolIds = perpetualPool.activeSymbolIds\r\n    //const symbolIndex = symbolIds.indexOf(symbolId)\r\n\r\n    let promises= []\r\n    for (let i=0; i<symbolIds.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIds[i]))\r\n    }\r\n    let symbols = await Promise.all(promises)\r\n\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .filter((i) => !(i.direction === 'LIQUIDATION' && i.symbolId === '0'))\r\n        .map((i) => {\r\n          if (i.direction !== 'LIQUIDATION') {\r\n            const index = symbolIds.indexOf(i.symbolId);\r\n            return {\r\n              direction: i.direction.trim(),\r\n              baseToken: i.baseToken.trim(),\r\n              symbolId: i.symbolId,\r\n              symbol: i.symbol,\r\n              price: deriToNatural(i.price).toString(),\r\n              notional: deriToNatural(i.notional).toString(),\r\n              //volume: deriToNatural(i.volume).toString(),\r\n              volume: deriToNatural(i.volume)\r\n                .times(symbols[index].multiplier)\r\n                .toString(),\r\n              transactionFee: deriToNatural(i.transactionFee).toString(),\r\n              transactionHash: i.transactionHash,\r\n              time: i.time.toString(),\r\n            };\r\n          } else {\r\n            if (i.volume !== '' && i.volume.indexOf(',') > -1 && !i.price.startsWith('NaN')) {\r\n              const ids = i.volume.split(',').reduce((acc, v, index) => {\r\n                if (v !== '0') {\r\n                  return acc.concat([index]);\r\n                } else {\r\n                  return acc\r\n                }\r\n              }, []);\r\n              const prices = i.price.split(',').map((s)=> deriToNatural(s))\r\n              const volumes = i.volume.split(',').map((v)=> deriToNatural(v))\r\n              return ids.map((id) => {\r\n                return {\r\n                  direction: i.direction.trim(),\r\n                  baseToken: i.baseToken.trim(),\r\n                  symbolId: id.toString(),\r\n                  symbol: symbols[id].symbol,\r\n                  volume: volumes[id].abs().times(symbols[id].multiplier).toString(),\r\n                  price: prices[id].toString(),\r\n                  notional: volumes[id].abs().times(prices[id]).times(symbols[id].multiplier).toString(),\r\n                  transactionFee: '0',\r\n                  transactionHash: i.transactionHash,\r\n                  time: i.time.toString(),\r\n                };\r\n              })\r\n            } else {\r\n              // handle missing price data\r\n              return {\r\n                direction: i.direction.trim(),\r\n                baseToken: i.baseToken.trim(),\r\n                symbolId: '',\r\n                symbol: '',\r\n                price: '',\r\n                notional: '',\r\n                //volume: deriToNatural(i.volume).toString(),\r\n                volume: '',\r\n                transactionFee: '0',\r\n                transactionHash: i.transactionHash,\r\n                time: i.time.toString(),\r\n              }\r\n            }\r\n          }\r\n        }).flat();\r\n    }\r\n      //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      // console.log(tradeFromBlock, liquidateFromBlock)\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n\r\n      const {initialBlock} = getPoolConfig2(poolAddress)\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch(err) {\r\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\r\n  }\r\n  return []\r\n};\r\n","const invalidValues = [NaN, null, undefined];\r\n\r\nfunction getEverlastingTimePriceAndDelta(S, K, V, T) {\r\n  let u = Math.sqrt(8 / V / V / T + 1);\r\n  let timeValue, delta;\r\n  if (S > K) {\r\n    timeValue = (K * Math.pow(S / K, (1 - u) / 2)) / u;\r\n    delta = ((1 - u) * timeValue) / S / 2;\r\n  } else if (S === K) {\r\n    timeValue = K / u;\r\n    delta = 0;\r\n  } else {\r\n    timeValue = (K * Math.pow(S / K, (1 + u) / 2)) / u;\r\n    delta = ((1 + u) * timeValue) / S / 2;\r\n  }\r\n  return [timeValue, delta];\r\n}\r\n\r\nfunction getDynamicInitialMarginRatio(\r\n  spot,\r\n  strike,\r\n  isCall,\r\n  initialMarginRatio,\r\n  minInitialMarginRatio\r\n) {\r\n  if ((isCall && spot >= strike) || (!isCall && strike >= spot)) {\r\n    return initialMarginRatio;\r\n  } else {\r\n    let otmRatio = (isCall ? strike - spot : spot - strike) / strike;\r\n    return Math.max(\r\n      (1 - otmRatio * 3) * initialMarginRatio,\r\n      minInitialMarginRatio\r\n    );\r\n  }\r\n}\r\n\r\n// multiple position for same underlier, e.x. BTCUSD\r\nfunction canLiquidateWithPrice(\r\n  pool,\r\n  trader,\r\n  symbols,\r\n  positions,\r\n  newUnderlierPrice\r\n) {\r\n  let newDynamicMargin = trader.dynamicMargin;\r\n  let newInitialMargin = trader.initialMargin;\r\n\r\n  for (let i = 0; i < symbols.length; i++) {\r\n    let symbol = symbols[i];\r\n    let position = positions[i];\r\n    if (position.volume === 0) {\r\n      continue;\r\n    }\r\n\r\n    let newIntrinsicValue = symbol.isCall\r\n      ? Math.max(newUnderlierPrice - symbol.strikePrice, 0)\r\n      : Math.max(symbol.strikePrice - newUnderlierPrice, 0);\r\n    let [newTimeValue, newDelta] = getEverlastingTimePriceAndDelta(\r\n      newUnderlierPrice,\r\n      symbol.strikePrice,\r\n      symbol.volatility,\r\n      pool.fundingPeriod\r\n    );\r\n    if (newIntrinsicValue > 0) {\r\n      newDelta += symbol.isCall ? 1 : -1;\r\n    }\r\n    let newPnl =\r\n      position.volume * (newIntrinsicValue + newTimeValue) * symbol.multiplier -\r\n      position.cost;\r\n    let newDynamicMarginRatio = getDynamicInitialMarginRatio(\r\n      newUnderlierPrice,\r\n      symbol.strikePrice,\r\n      symbol.isCall,\r\n      pool.initialMarginRatio,\r\n      0.01\r\n    );\r\n\r\n    newDynamicMargin = newDynamicMargin - position.pnl + newPnl;\r\n    newInitialMargin =\r\n      newInitialMargin -\r\n      Math.abs(\r\n        position.volume *\r\n          symbol.spotPrice *\r\n          symbol.multiplier *\r\n          symbol.dynamicMarginRatio\r\n      ) +\r\n      Math.abs(\r\n        position.volume *\r\n          newUnderlierPrice *\r\n          symbol.multiplier *\r\n          newDynamicMarginRatio\r\n      );\r\n  }\r\n\r\n  let newMaintenanceMargin =\r\n    (newInitialMargin * pool.maintenanceMarginRatio) / pool.initialMarginRatio;\r\n\r\n  if (\r\n    invalidValues.includes(newMaintenanceMargin) ||\r\n    invalidValues.includes(newDynamicMargin)\r\n  ) {\r\n    throw new Error(\r\n      `-- canLiquidateWithPrice: Invalid Margin value: ${newMaintenanceMargin} ${newDynamicMargin}`\r\n    );\r\n  }\r\n  return newMaintenanceMargin > newDynamicMargin;\r\n}\r\n\r\nexport function findLiquidationPrice(pool, trader, symbols, positions) {\r\n  if (symbols.length != positions.length) {\r\n    throw new Error(\r\n      'canLiquidateWithPrice: symbols and positions length not match'\r\n    );\r\n  }\r\n  if (symbols.length === 0) {\r\n    return {\r\n      numPositions: positions.length,\r\n      price1: null,\r\n      price2: null,\r\n    };\r\n  }\r\n  let head = symbols[0].symbol.slice(0, 6);\r\n  for (let i = 0; i < symbols.length; i++) {\r\n    if (!symbols[i].symbol.startsWith(head)) {\r\n      throw new Error('canLiquidateWithPrice: symbols not in same underlier');\r\n    }\r\n  }\r\n\r\n  if (trader.maintenanceMargin > trader.dynamicMargin) {\r\n    return {\r\n      numPositions: positions.length,\r\n      price1: symbols[0].spotPrice,\r\n      price2: symbols[0].spotPrice,\r\n    };\r\n  }\r\n\r\n  let final1, final2;\r\n  let price1, price2;\r\n  let l1, l2;\r\n\r\n  price1 = symbols[0].spotPrice / 10;\r\n  price2 = symbols[0].spotPrice;\r\n  l1 = canLiquidateWithPrice(pool, trader, symbols, positions, price1);\r\n  l2 = false;\r\n  while (true) {\r\n    if (l1 && l2) {\r\n      final1 = (price1 + price2) / 2;\r\n      break;\r\n    }\r\n    if (!l1 && !l2) {\r\n      final1 = null;\r\n      break;\r\n    }\r\n    if (price2 - price1 < symbols[0].spotPrice / 1000) {\r\n      final1 = (price1 + price2) / 2;\r\n      break;\r\n    }\r\n    let price = (price1 + price2) / 2;\r\n    let l = canLiquidateWithPrice(pool, trader, symbols, positions, price);\r\n    if (l === l1) price1 = price;\r\n    else price2 = price;\r\n  }\r\n\r\n  price1 = symbols[0].spotPrice;\r\n  price2 = symbols[0].spotPrice * 10;\r\n  l1 = false;\r\n  l2 = canLiquidateWithPrice(pool, trader, symbols, positions, price2);\r\n  while (true) {\r\n    if (l1 && l2) {\r\n      final2 = (price1 + price2) / 2;\r\n      break;\r\n    }\r\n    if (!l1 && !l2) {\r\n      final2 = null;\r\n      break;\r\n    }\r\n    if (price2 - price1 < symbols[0].spotPrice / 1000) {\r\n      final2 = (price1 + price2) / 2;\r\n      break;\r\n    }\r\n    let price = (price1 + price2) / 2;\r\n    let l = canLiquidateWithPrice(pool, trader, symbols, positions, price);\r\n    if (l === l1) price1 = price;\r\n    else price2 = price;\r\n  }\r\n\r\n  return {\r\n    numPositions: positions.length,\r\n    price1: final1,\r\n    price2: final2,\r\n  };\r\n}\r\n","import { bg, max, normalizeOptionSymbol, toNumberForObject } from \"../../shared\"\r\nimport { findLiquidationPrice } from './findLiquidationPrice2';\r\n\r\nexport const dynamicInitialMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\r\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\r\n    return initialMarginRatio\r\n  } else {\r\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\r\n    return max((bg(1).minus(otmRatio.times(3))).times(initialMarginRatio), bg(0.01))\r\n  }\r\n}\r\n\r\nexport const dynamicInitialPoolMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\r\n  // for pool\r\n  const initialPoolMarginRatio = bg(initialMarginRatio).times(10)\r\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\r\n    return initialMarginRatio\r\n  } else {\r\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\r\n    return max((bg(1).minus(otmRatio.times(3))).times(initialPoolMarginRatio), bg(0.01).times(10))\r\n  }\r\n}\r\n\r\nexport const getDeltaFundingPerSecond = (symbol, delta, price, totalDynamicEquity, newNetVolume)  => {\r\n  return bg(totalDynamicEquity).eq(0)\r\n    ? bg(0)\r\n    : bg(delta)\r\n        .times(bg(symbol.tradersNetVolume).plus(newNetVolume))\r\n        .times(price)\r\n        .times(price)\r\n        .times(symbol.multiplier)\r\n        .times(symbol.multiplier)\r\n        .times(symbol.deltaFundingCoefficient)\r\n        .div(totalDynamicEquity);\r\n} \r\nexport const getpremiumFunding = (symbol, premiumFundingCoefficient, totalDynamicEquity)  => {\r\n  return bg(totalDynamicEquity).eq(0)\r\n    ? bg(0)\r\n    : bg(symbol.timeValue)\r\n        .times(symbol.multiplier)\r\n        .times(premiumFundingCoefficient)\r\n        .div(totalDynamicEquity);\r\n} \r\n\r\nexport const getIntrinsicPrice = (price, strikePrice, isCall) => {\r\n  return isCall\r\n    ? max(bg(price).minus(strikePrice), bg(0))\r\n    : max(bg(strikePrice).minus(price), bg(0));\r\n};\r\n\r\n\r\nexport const getMarginHeldBySymbol = (\r\n  volume,\r\n  price,\r\n  symbol,\r\n  initialMarginRatio\r\n) => {\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(symbol.multiplier)\r\n    .times(\r\n      dynamicInitialMarginRatio(\r\n        price,\r\n        symbol.strikePrice,\r\n        symbol.isCall,\r\n        initialMarginRatio\r\n      )\r\n    );\r\n};\r\n\r\nexport const getAverageEntryPrice = (position, symbol) => {\r\n  return bg(position.volume).eq(0)\r\n    ? '0'\r\n    : bg(position.cost).div(position.volume).div(symbol.multiplier).toString();\r\n};\r\n\r\nexport const getLiquidationPrice = (state, symbolId)  => {\r\n  const { poolState, symbolState, traderState, positionState } = state;\r\n  const normalizedSymbol = normalizeOptionSymbol(symbolState[symbolId].symbol)\r\n  let res = findLiquidationPrice(\r\n    toNumberForObject(poolState, [\r\n      'initialMarginRatio',\r\n      'maintenanceMarginRatio',\r\n      'fundingPeriod',\r\n      'fundingCoefficient',\r\n      'marginMultiplier',\r\n      'liquidity',\r\n      'totalDynamicEquity',\r\n      'totalInitialMargin',\r\n    ]),\r\n    toNumberForObject(traderState, [\r\n      'margin',\r\n      'totalPnl',\r\n      'totalFundingAccrued',\r\n      'dynamicMargin',\r\n      'initialMargin',\r\n      'maintenanceMargin',\r\n    ]),\r\n    symbolState\r\n      .filter((s, index) => positionState[index].volume !== '0')\r\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\r\n      .map((s) =>\r\n        toNumberForObject(s, [\r\n          'multiplier',\r\n          'strikePrice',\r\n          'spotPrice',\r\n          'dpmmPrice',\r\n          'volatility',\r\n          'timePrice',\r\n          'dynamicMarginRatio',\r\n          'intrinsicValue',\r\n          'timeValue',\r\n          'delta',\r\n          'K',\r\n          'tradersNetVolume',\r\n          'tradersNetCost',\r\n          'cumulativeFundingRate',\r\n          'fundingPerSecond',\r\n        ])\r\n      ),\r\n    symbolState\r\n      .filter((s, index) => positionState[index].volume !== '0')\r\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\r\n      .map((s) =>\r\n        toNumberForObject(positionState[s.symbolId], [\r\n          'volume',\r\n          'cost',\r\n          'lastCumulativePremiumFundingRate',\r\n          'pnl',\r\n          'premiumFundingAccrued',\r\n        ])\r\n      )\r\n  );\r\n  res.underlier = normalizedSymbol\r\n  return res\r\n}\r\n\r\nexport const getLiquidationPrices = (state) => {\r\n  const { poolState, symbolState, traderState, positionState } = state;\r\n  const symbols = symbolState.filter((s, index) => positionState[index].volume !== '0').map((s) => s.symbol);\r\n  const oracleSymbols = symbols\r\n    .map((i) => normalizeOptionSymbol(i))\r\n    .filter((value, index, self) => self.indexOf(value) === index);\r\n\r\n  const liquidationPrices = oracleSymbols.map((oSymbol) => {\r\n    let res = findLiquidationPrice(\r\n      toNumberForObject(poolState, [\r\n        'initialMarginRatio',\r\n        'maintenanceMarginRatio',\r\n        'premiumFundingPeriod',\r\n        'premiumFundingCoefficient',\r\n        'liquidity',\r\n        'totalDynamicEquity',\r\n        'totalInitialMargin',\r\n      ]),\r\n      toNumberForObject(traderState, [\r\n        'margin',\r\n        'totalPnl',\r\n        'totalFundingAccrued',\r\n        'dynamicMargin',\r\n        'initialMargin',\r\n        'maintenanceMargin',\r\n      ]),\r\n      symbolState\r\n        .filter((s, index) => positionState[index].volume !== '0')\r\n        .filter((s) => s.symbol.startsWith(oSymbol))\r\n        .map((s) =>\r\n          toNumberForObject(s, [\r\n          'multiplier',\r\n          'strikePrice',\r\n          'spotPrice',\r\n          'dpmmPrice',\r\n          'underlierVolatility',\r\n          'timePrice',\r\n          'dynamicMarginRatio',\r\n          'intrinsicValue',\r\n          'timeValue',\r\n          'delta',\r\n          'K',\r\n          'tradersNetVolume',\r\n          'tradersNetCost',\r\n          'cumulativePremiumFundingRate',\r\n          'premiumFundingPerSecond',\r\n          ])\r\n        ),\r\n      symbolState\r\n        .filter((s, index) => positionState[index].volume !== '0')\r\n        .filter((s) => s.symbol.startsWith(oSymbol))\r\n        .map((s) =>\r\n          toNumberForObject(positionState[s.symbolId], [\r\n            'volume',\r\n            'cost',\r\n            'lastCumulativeDeltaFundingRate',\r\n            'lastCumulativePremiumFundingRate',\r\n            'pnl',\r\n            'deltaFundingAccrued',\r\n            'premiumFundingAccrued',\r\n          ])\r\n        )\r\n    );\r\n    return res;\r\n  });\r\n  return oracleSymbols.map((i, index) => { \r\n    liquidationPrices[index].underlier = i\r\n    return liquidationPrices[index]\r\n  })\r\n};","/* eslint-disable */\r\nexport const everlastingOptionAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[6]\", \"name\": \"parameters\", \"type\": \"uint256[6]\" }, { \"internalType\": \"address[6]\", \"name\": \"addresses\", \"type\": \"address[6]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"lp\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"lp\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"indexPrice\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeFee\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"uint256\", \"name\": \"strikePrice\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricerAddress\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolMarginMultiplier\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioITM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioOTM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IEverlastingOption.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"pTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" } ], \"name\": \"setPoolMarginMulitplier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\nexport const everlastingOptionViewerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"theoreticalPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetPosition\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" } ], \"name\": \"_calculateDpmmPrice\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"changePercent\", \"type\": \"int256\" } ], \"name\": \"_calculateOptionValueChange\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"change\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spot\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strike\", \"type\": \"int256\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" } ], \"name\": \"_getDynamicInitialMarginRatio\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"_getTraderPortfolio\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"_initState\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"str\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"start\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"end\", \"type\": \"uint256\" } ], \"name\": \"_slice\", \"outputs\": [ { \"internalType\": \"bytes\", \"name\": \"\", \"type\": \"bytes\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolFundingRates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolPrices\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderFunding\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderMargins\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getPoolStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getPriceOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getTraderStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getVolatilityOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\r\n\r\nexport const lTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\nexport const pTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate2\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"addSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getActiveSymbolIds\", \"outputs\": [ { \"internalType\": \"uint256[]\", \"name\": \"\", \"type\": \"uint256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getNumPositionHolders\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getTokenId\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"isActiveSymbolId\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\nexport const everlastingOptionOldAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[6]\", \"name\": \"parameters\", \"type\": \"uint256[6]\" }, { \"internalType\": \"address[6]\", \"name\": \"addresses\", \"type\": \"address[6]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"uint256\", \"name\": \"strikePrice\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricerAddress\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolMarginMultiplier\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioITM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioOTM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IEverlastingOption.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" } ], \"name\": \"setPoolMarginMulitplier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\n/* eslint-enable */","import { ContractBase, deleteIndexedKey, fromWeiForObject } from '../../shared';\r\nimport { everlastingOptionViewerAbi } from './abis';\r\n\r\nexport class EverlastingOptionViewer extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, everlastingOptionViewerAbi);\r\n  }\r\n\r\n  // query\r\n  async _getTraderPortfolio(state, account) {\r\n    const res = await this._call('_getTraderPortfolio', [state, account]);\r\n    return res;\r\n  }\r\n  async _initState(poolAddress, oraclePrices) {\r\n    const res = await this._call('_initState', [poolAddress, oraclePrices]);\r\n    return res;\r\n  }\r\n  async _updateSymbolPrices(state) {\r\n    const res = await this._call('_updateSymbolPrices', [state]);\r\n    return res;\r\n  }\r\n  async getPoolStates(poolAddress, oraclePrices, oracleVolatilities) {\r\n    const res = await this._call('getPoolStates', [poolAddress, oraclePrices, oracleVolatilities]);\r\n    const symbolState = res[2].reduce((acc, i) => {\r\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\r\n        'multiplier',\r\n        'strikePrice',\r\n        'spotPrice',\r\n        'dpmmPrice',\r\n        'dynamicMarginRatio',\r\n        'intrinsicValue',\r\n        'timeValue',\r\n        'delta',\r\n        'alpha',\r\n        'K',\r\n        'tradersNetVolume',\r\n        'tradersNetCost',\r\n        //'cumulativeDeltaFundingRate',\r\n        'cumulativeFundingRate',\r\n        //'deltaFundingPerSecond',\r\n        'fundingPerSecond',\r\n        'volatility',\r\n      ]);\r\n      return acc.concat([symbol])\r\n    }, [])\r\n    return {\r\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\r\n        'initialMarginRatio',\r\n        'maintenanceMarginRatio',\r\n        'fundingPeriod',\r\n        'fundingCoefficient',\r\n        'liquidity',\r\n        'totalDynamicEquity',\r\n        'totalInitialMargin',\r\n      ]),\r\n      symbolState,\r\n    };\r\n  }\r\n  async getTraderStates(poolAddress, account, oraclePrices, oracleVolatilities) {\r\n    const res = await this._call('getTraderStates', [\r\n      poolAddress,\r\n      account,\r\n      oraclePrices,\r\n      oracleVolatilities,\r\n    ]);\r\n    const symbolState = res[2].reduce((acc, i) => {\r\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\r\n        'multiplier',\r\n        'strikePrice',\r\n        'spotPrice',\r\n        'dpmmPrice',\r\n        'dynamicMarginRatio',\r\n        'intrinsicValue',\r\n        'timeValue',\r\n        'delta',\r\n        'alpha',\r\n        'K',\r\n        'tradersNetVolume',\r\n        'tradersNetCost',\r\n        'cumulativeFundingRate',\r\n        //'deltaFundingPerSecond',\r\n        'fundingPerSecond',\r\n        'volatility',\r\n      ]);\r\n      return acc.concat([symbol])\r\n    }, [])\r\n    const positionState = res[3].reduce((acc, i) => {\r\n      const position = fromWeiForObject(deleteIndexedKey(i), [\r\n        'volume',\r\n        'cost',\r\n        'pnl',\r\n        //'lastCumulativeDeltaFundingRate',\r\n        'lastCumulativeFundingRate',\r\n        //'deltaFundingAccrued',\r\n        'fundingAccrued',\r\n      ])\r\n      return acc.concat([position])\r\n    }, [])\r\n    return {\r\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\r\n        'initialMarginRatio',\r\n        'maintenanceMarginRatio',\r\n        'fundingPeriod',\r\n        'fundingCoefficient',\r\n        'liquidity',\r\n        'totalDynamicEquity',\r\n        'totalInitialMargin',\r\n      ]),\r\n      traderState: fromWeiForObject(deleteIndexedKey(res[1]), [\r\n        'margin',\r\n        'totalPnl',\r\n        'totalFundingAccrued',\r\n        'dynamicMargin',\r\n        'initialMargin',\r\n        'maintenanceMargin',\r\n      ]),\r\n      symbolState: symbolState,\r\n      positionState: positionState,\r\n    };\r\n  }\r\n  async getVolatilityOracles(poolAddress) {\r\n    const res = await this._call('getVolatilityOracles', [poolAddress]);\r\n    return res;\r\n  }\r\n  async getPriceOracles(poolAddress) {\r\n    const res = await this._call('getPriceOracles', [poolAddress]);\r\n    return res;\r\n  }\r\n\r\n  // tx\r\n}\r\n","import { ContractBase, fromWei } from '../../shared'\r\nimport { lTokenOptionAbi } from './abis.js'\r\n\r\nexport class LTokenOption extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, lTokenOptionAbi)\r\n  }\r\n\r\n  // query\r\n  // async allowance(owner, spender) {\r\n  //   const res = await this._call('allowance', [owner, spender])\r\n  //   return res\r\n  // }\r\n  async balanceOf(account) {\r\n    const res = await this._call('balanceOf', [account])\r\n    return fromWei(res)\r\n  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return res\r\n  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return res\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return res\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return fromWei(res)\r\n  }\r\n\r\n  // tx\r\n  // async approve(accountAddress, spender, amount) {\r\n  //   return await this._transact('approve', [spender, amount], accountAddress)\r\n  // }\r\n  // async transfer(accountAddress, to, amount) {\r\n  //   return await this._transact('transfer', [to, amount], accountAddress)\r\n  // }\r\n  // async transferFrom(accountAddress, from, to, amount) {\r\n  //   return await this._transact('transferFrom', [from, to, amount], accountAddress)\r\n  // }\r\n\r\n}","import { ContractBase, fromWei } from '../../shared'\r\nimport { pTokenOptionAbi } from './abis.js'\r\n\r\nexport class PTokenOption extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenOptionAbi)\r\n  }\r\n\r\n  // query\r\n  async balanceOf(owner) {\r\n    const res = await this._call('balanceOf', [owner])\r\n    return res\r\n  }\r\n  async exists(owner) {\r\n    const res = await this._call('exists', [owner])\r\n    return res\r\n  }\r\n  async getActiveSymbolIds() {\r\n    const res = await this._call('getActiveSymbolIds', [])\r\n    return res\r\n  }\r\n  async getApproved(tokenId) {\r\n    const res = await this._call('getApproved', [tokenId])\r\n    return res\r\n  }\r\n  async getMargin(owner) {\r\n    const res = await this._call('getMargin', [owner])\r\n    return fromWei(res)\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    const res = await this._call('getNumPositionHolders', [symbolId])\r\n    return res\r\n  }\r\n  async getPosition(owner, symbolId) {\r\n    const res = await this._call('getPosition', [owner, symbolId])\r\n    return {\r\n      volume: fromWei(res[0]),\r\n      cost: fromWei(res[1]),\r\n      lastCumulativePremiumFundingRate: fromWei(res[2]),\r\n    };\r\n }\r\n  async getTokenId(owner) {\r\n    const res = await this._call('getTokenId', [owner])\r\n    return res\r\n  }\r\n  async isActiveSymbolId(symbolId) {\r\n    const res = await this._call('isActiveSymbolId', [symbolId])\r\n    return res\r\n  }\r\n  async isApprovedForAll(owner, operator) {\r\n    const res = await this._call('isApprovedForAll', [owner, operator])\r\n    return res\r\n  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return res\r\n  }\r\n  async ownerOf(tokenId) {\r\n    const res = await this._call('ownerOf', [tokenId])\r\n    return res\r\n  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return res\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return res\r\n  }\r\n  async totalMinted() {\r\n    const res = await this._call('totalMinted', [])\r\n    return res\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return res\r\n  }\r\n\r\n  // tx\r\n  async addMargin(accountAddress, owner, delta) {\r\n    return await this._transact('addMargin', [owner, delta], accountAddress)\r\n  }\r\n  async updateMargin(accountAddress, owner, margin) {\r\n    return await this._transact('updateMargin', [owner, margin], accountAddress)\r\n  }\r\n  async updatePosition(accountAddress, owner, symbolId, position) {\r\n    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\r\n  }\r\n\r\n  // async approve(accountAddress, operator, tokenId) {\r\n  //   return await this._transact('approve', [operator, tokenId], accountAddress)\r\n  // }\r\n  // async safeTransferFrom(accountAddress, from, to, tokenId) {\r\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\r\n  // }\r\n  // async safeTransferFrom(accountAddress, from, to, tokenId, data) {\r\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\r\n  // }\r\n  // async setApprovalForAll(accountAddress, operator, approved) {\r\n  //   return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\r\n  // }\r\n  // async toggleCloseOnly(accountAddress, symbolId) {\r\n  //   return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\r\n  // }\r\n  // async transferFrom(accountAddress, from, to, tokenId) {\r\n  //   return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\r\n  // }\r\n}","import { factory } from '../../shared';\r\nimport { EverlastingOptionViewer } from '../contract/everlasting_option_viewer';\r\nimport { LTokenOption } from '../contract/l_token_option';\r\nimport { PTokenOption } from '../contract/p_token_option';\r\n\r\nexport const everlastingOptionViewerFactory = factory(EverlastingOptionViewer);\r\nexport const lTokenOptionFactory = factory(LTokenOption);\r\nexport const pTokenOptionFactory = factory(PTokenOption);","import { getOracleVolatilitiesForOption } from \"../shared/utils/oracle\"\r\n\r\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms))\r\n\r\nexport const volatilitiesCache = (function() {\r\n  const cache = {}\r\n  const pending = {}\r\n  return {\r\n    async get(symbols=['BTCUSD']){\r\n      const key = symbols.join('_')\r\n      if (\r\n        !Object.keys(cache).includes(key) ||\r\n        Math.floor(Date.now() / 1000) - cache[key].timestamp > 30\r\n      ) {\r\n        const timestamp = Math.floor(Date.now() / 1000);\r\n        // pending is exit\r\n        if (Object.keys(pending).includes(key)) {\r\n          let retry = 10;\r\n          while (retry > 0) {\r\n            await delay(390);\r\n            if (!Object.keys(pending).includes(key)) {\r\n              //console.log('hit pending with cache');\r\n              return cache[key].data;\r\n            }\r\n          }\r\n          if (retry === 0) {\r\n            //console.log('hit pending expired');\r\n            const data = await getOracleVolatilitiesForOption(symbols);\r\n            cache[key] = {\r\n              data,\r\n              timestamp,\r\n            };\r\n            return cache[key].data;\r\n          }\r\n        } else {\r\n          pending[key] = true;\r\n          try {\r\n            //console.log('hit new');\r\n            const data = await getOracleVolatilitiesForOption(symbols);\r\n            cache[key] = {\r\n              data,\r\n              timestamp,\r\n            };\r\n            return cache[key].data;\r\n          } catch (err) {\r\n          } finally {\r\n            delete pending[key];\r\n          }\r\n        }\r\n      } else {\r\n        //console.log('hit cache');\r\n        return cache[key].data;\r\n      }\r\n    }\r\n  }\r\n})()\r\n\r\n// export const volatilityCache = (function() {\r\n//   const cache = {}\r\n//   return {\r\n//     async get(symbol){\r\n//       const key = symbol\r\n//       if (!Object.keys(cache).includes(key) || (Math.floor(Date.now()/1000) - cache[key].timestamp > 30)) {\r\n//         const timestamp = Math.floor(Date.now()/1000)\r\n//         const res = await getPriceInfo(symbol, 'option')\r\n//         const data = deriToNatural(res.volatility).toString()\r\n//         cache[key] = {\r\n//           data,\r\n//           timestamp,\r\n//         }\r\n//         //console.log('new key')\r\n//         return cache[key].data\r\n//       } else {\r\n//         return cache[key].data\r\n//       }\r\n//     }\r\n//   }\r\n// })()\r\n\r\n// export const volatilitiesCache2 = async (symbols) => {\r\n//   return await Promise.all(\r\n//     symbols.reduce((acc, s) => acc.concat(volatilityCache.get(s)), [])\r\n//   )\r\n// }\r\n","import {\r\n  ContractBase,\r\n  deleteIndexedKey,\r\n  fromWeiForObject,\r\n  fromWei,\r\n  naturalToDeri,\r\n  getPoolConfig,\r\n  getPoolViewerConfig,\r\n  isEqualSet,\r\n  getBlockInfo,\r\n  deriToNatural,\r\n  bg,\r\n  MAX_INT256,\r\n} from '../../shared';\r\nimport { getVolatilitySymbols } from '../../shared/config/token';\r\nimport { getOracleVolatilitiesForOption } from '../../shared/utils/oracle';\r\nimport {\r\n  everlastingOptionViewerFactory,\r\n  pTokenOptionFactory,\r\n} from '../factory/tokens';\r\nimport { volatilitiesCache } from '../utils';\r\nimport { everlastingOptionAbi } from './abis.js';\r\n\r\nexport class EverlastingOption extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, everlastingOptionAbi);\r\n\r\n    this.config = getPoolConfig(\r\n      contractAddress,\r\n      undefined,\r\n      undefined,\r\n      'option'\r\n    );\r\n    // this.offchainSymbolIds = this.config.offchainSymbolIds;\r\n    // this.offchainSymbols = this.config.offchainSymbols;\r\n    this.volatilitySymbols = this.config.volatilitySymbols;\r\n    this.bTokenAddress = this.config.bToken;\r\n    this.lTokenAddress = this.config.lToken;\r\n    this.pTokenAddress = this.config.pToken;\r\n    this.viewerAddress = getPoolViewerConfig(this.chainId, 'option');\r\n  }\r\n  async _updateConfig() {\r\n    if (!this.pToken) {\r\n      this.pToken = pTokenOptionFactory(this.chainId, this.pTokenAddress);\r\n    }\r\n    if (!this.viewer) {\r\n      this.viewer = everlastingOptionViewerFactory(\r\n        this.chainId,\r\n        this.viewerAddress\r\n      );\r\n    }\r\n\r\n    const activeSymbolIds = await this.pToken.getActiveSymbolIds();\r\n    if (\r\n      !this.activeSymbolIds ||\r\n      !isEqualSet(new Set(this.activeSymbolIds), new Set(activeSymbolIds))\r\n    ) {\r\n      // symbol is updated\r\n      const activeSymbols = await Promise.all(\r\n        activeSymbolIds.reduce((acc, i) => acc.concat([this.getSymbol(i)]), [])\r\n      );\r\n      const symbolVolatilities = (await volatilitiesCache.get(\r\n        activeSymbols.map((s) => s.symbol)\r\n      )).map((v) => v.volatility);\r\n      //console.log(symbolVolatilities)\r\n      const state = await this.viewer.getPoolStates(\r\n        this.contractAddress,\r\n        [],\r\n        symbolVolatilities\r\n      );\r\n      const { symbolState } = state;\r\n\r\n      // update state\r\n      this.activeSymbolIds = activeSymbolIds;\r\n      this.activeSymbols = symbolState.filter((s) =>\r\n        this.activeSymbolIds.includes(s.symbolId)\r\n      );\r\n      // for tx use\r\n      this.volatilitySymbols = getVolatilitySymbols(\r\n        this.activeSymbols.map((s) => s.symbol)\r\n      );\r\n\r\n      this.symbols = await Promise.all(\r\n        this.activeSymbolIds.reduce(\r\n          (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n          []\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  // query\r\n  // async OptionPricer() {\r\n  //   const res = await this._call('OptionPricer', []);\r\n  //   return res;\r\n  // }\r\n  // async PmmPricer() {\r\n  //   const res = await this._call('PmmPricer', []);\r\n  //   return res;\r\n  // }\r\n  // async _T() {\r\n  //   const res = await this._call('_T', []);\r\n  //   return fromWei(res);\r\n  // }\r\n  async getAddresses() {\r\n    const res = await this._call('getAddresses', []);\r\n    return deleteIndexedKey(res);\r\n  }\r\n  async getLastTimestamp() {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    return res[1];\r\n  }\r\n  async getLiquidity() {\r\n    const res = await this._call('getPoolStateValues', []);\r\n    return fromWei(res[0]);\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters', []);\r\n    return fromWeiForObject(deleteIndexedKey(res), [\r\n      'initialMarginRatio',\r\n      'liquidationCutRatio',\r\n      'maintenanceMarginRatio',\r\n      'maxLiquidationReward',\r\n      'minLiquidationReward',\r\n      'minPoolMarginRatio',\r\n      'protocolFeeCollectRatio',\r\n    ]);\r\n  }\r\n  // async getProtocolFeeAccrued() {\r\n  //   const res = await this._call('getPoolStateValues', []);\r\n  //   return fromWei(res[2])\r\n  // }\r\n\r\n  async getSymbol(symbolId) {\r\n    const res = await this._call('getSymbol', [symbolId]);\r\n    return fromWeiForObject(deleteIndexedKey(res), [\r\n      'strikePrice',\r\n      'multiplier',\r\n      'feeRatioITM',\r\n      'feeRatioOTM',\r\n      'alpha',\r\n      'tradersNetVolume',\r\n      'tradersNetCost',\r\n      'cumulativeFundingRate',\r\n    ]);\r\n  }\r\n  async updateSymbols() {\r\n    if (!this.pToken) {\r\n      this.pToken = pTokenOptionFactory(this.chainId, this.pTokenAddress);\r\n    }\r\n    if (!this.activeSymbolIds) {\r\n      this.activeSymbolIds = await this.pToken.getActiveSymbolIds();\r\n    }\r\n    this.activeSymbols = await Promise.all(\r\n      this.activeSymbolIds.reduce(\r\n        (acc, i) => acc.concat([this.getSymbol(i)]),\r\n        []\r\n      )\r\n    );\r\n    return this.activeSymbols\r\n  }\r\n\r\n  // tx\r\n  async _getVolSymbolPrices() {\r\n    await this._updateConfig();\r\n    let volatilities = [];\r\n    if (this.volatilitySymbols.length > 0) {\r\n      const volatilityInfos = await getOracleVolatilitiesForOption(\r\n        this.activeSymbols.map((s) => s.symbol)\r\n      );\r\n      volatilities = Object.values(volatilityInfos).reduce((acc, p, index) => {\r\n        acc.push([\r\n          this.activeSymbolIds[index],\r\n          p.timestamp,\r\n          p.volatility,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ]);\r\n        return acc;\r\n      }, []);\r\n    }\r\n    //console.log('prices', prices);\r\n    return volatilities;\r\n  }\r\n\r\n  async addLiquidity(accountAddress, bAmount) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [naturalToDeri(bAmount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidity(accountAddress, lShares, isMaximum) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    let amount\r\n    if (isMaximum) {\r\n      amount = MAX_INT256;\r\n    } else {\r\n      amount = naturalToDeri(lShares);\r\n    }\r\n    return await this._transact(\r\n      'removeLiquidity',\r\n      [amount, prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async addMargin(accountAddress, bAmount) {\r\n    return await this._transact(\r\n      'addMargin',\r\n      [naturalToDeri(bAmount)],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeMargin(accountAddress, bAmount) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    return await this._transact(\r\n      'removeMargin',\r\n      [naturalToDeri(bAmount), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n  async trade(accountAddress, symbolId, tradeVolume) {\r\n    const prices = await this._getVolSymbolPrices();\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(tradeVolume), prices],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  // trade history\r\n  async formatTradeEvent(event) {\r\n    const info = event.returnValues;\r\n    const tradeVolume = deriToNatural(info.tradeVolume).toString();\r\n    const block = await getBlockInfo(this.chainId, event.blockNumber);\r\n    const symbolId = info.symbolId;\r\n    const indexPrice = deriToNatural(info.indexPrice).toString();\r\n    const index = this.activeSymbolIds.indexOf(symbolId);\r\n    if (index > -1) {\r\n      const symbol = this.symbols[index];\r\n      const tradeFee = info.tradeFee;\r\n\r\n      const direction =\r\n        tradeFee !== \"-1\"\r\n          ? bg(tradeVolume).gt(0)\r\n            ? \"LONG\"\r\n            : \"SHORT\"\r\n          : \"LIQUIDATION\";\r\n      const price = bg(info.tradeCost)\r\n        .div(info.tradeVolume)\r\n        .div(symbol.multiplier)\r\n        .toString();\r\n      const notional = bg(tradeVolume)\r\n        .abs()\r\n        .times(indexPrice)\r\n        .times(symbol.multiplier)\r\n        .toString();\r\n      const contractValue = bg(tradeVolume)\r\n        .abs()\r\n        .times(price)\r\n        .times(symbol.multiplier)\r\n        .toString();\r\n\r\n      const res = {\r\n        symbolId: info.symbolId,\r\n        symbol: symbol.symbol,\r\n        trader: info.trader,\r\n        direction,\r\n        volume: bg(tradeVolume).abs().toString(),\r\n        price,\r\n        indexPrice,\r\n        notional,\r\n        contractValue,\r\n        transactionFee:\r\n          tradeFee === \"-1\" ? \"0\" : deriToNatural(tradeFee).toString(),\r\n        transactionHash: event.transactionHash,\r\n        time: block.timestamp * 1000,\r\n        extra: {},\r\n      };\r\n      //console.log(JSON.stringify(res));\r\n      return res;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","import { ContractBase, fromWei } from '../../shared'\r\n\r\nexport const optionPricerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"S\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"V\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"T\", \"type\": \"int256\" } ], \"name\": \"getEverlastingTimeValue\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"S\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"V\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"T\", \"type\": \"int256\" } ], \"name\": \"getEverlastingTimeValueAndDelta\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" } ]\r\n\r\nexport class OptionPricer extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, optionPricerAbi)\r\n  }\r\n\r\n  async getEverlastingTimeValueAndDelta(S, K, V, T) {\r\n    const res = await this._call('getEverlastingTimeValueAndDelta', [S, K, V, T])\r\n    return {\r\n      timeValue: fromWei(res.timeValue),\r\n      delta: fromWei(res.delta),\r\n    };\r\n  }\r\n}","import { factory } from '../../shared';\r\nimport { EverlastingOption } from '../contract/everlasting_option';\r\nimport { OptionPricer } from '../contract/option_pricer';\r\n\r\nexport const everlastingOptionFactory = factory(EverlastingOption);\r\nexport const optionPricerFactory = factory(OptionPricer);","import { getPoolConfig } from '../../shared/config';\r\nimport { catchApiError, bg } from '../../shared/utils';\r\nimport {\r\n  calculateMaxRemovableShares,\r\n  calculateShareValue,\r\n} from '../../v1/calculation';\r\nimport { everlastingOptionFactory } from '../factory/pool';\r\nimport {\r\n  lTokenOptionFactory,\r\n} from '../factory/tokens';\r\nimport { volatilitiesCache } from '../utils';\r\n\r\nconst _getLiquidityInfo = async (chainId, poolAddress, accountAddress) => {\r\n  const { lToken: lTokenAddress } = getPoolConfig(\r\n    poolAddress,\r\n    '0',\r\n    '0',\r\n    'option'\r\n  );\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  await optionPool._updateConfig()\r\n  const lToken = lTokenOptionFactory(chainId, lTokenAddress);\r\n  const [\r\n    lTokenBalance,\r\n    lTokenTotalSupply,\r\n  ] = await Promise.all([\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n  ]);\r\n\r\n  const symbols = optionPool.activeSymbols\r\n  const symbolVolatilities = await volatilitiesCache.get(symbols.map((s) => s.symbol))\r\n  const state = await optionPool.viewer.getPoolStates(poolAddress, [], symbolVolatilities.map((v) => v.volatility))\r\n  const { poolState } = state;\r\n  const { initialMarginRatio, liquidity, totalDynamicEquity } = poolState;\r\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0));\r\n  const value = symbols.reduce(\r\n    (acc, s) =>\r\n      acc.plus(bg(s.tradersNetVolume).times(s.strikePrice).times(s.multiplier)),\r\n    bg(0)\r\n  );\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: calculateShareValue(\r\n      lTokenTotalSupply,\r\n      totalDynamicEquity\r\n    ).toString(),\r\n    maxRemovableShares: calculateMaxRemovableShares(\r\n      lTokenBalance,\r\n      lTokenTotalSupply,\r\n      liquidity,\r\n      value,\r\n      cost,\r\n      bg(initialMarginRatio).times(10)\r\n    ).toString(),\r\n  };\r\n};\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  return catchApiError(\r\n    _getLiquidityInfo,\r\n    [chainId, poolAddress, accountAddress],\r\n    'getLiquidityInfo',\r\n    {\r\n      totalSupply: '',\r\n      poolLiquidity: '',\r\n      shares: '',\r\n      shareValue: '',\r\n      maxRemovableShares: '',\r\n    }\r\n  );\r\n};\r\n","import { catchTxApiError } from '../../shared/utils';\r\nimport { everlastingOptionFactory } from '../factory/pool.js';\r\n\r\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\r\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\r\n    return await optionPool.addLiquidity(accountAddress, amount)\r\n  }, args)\r\n}\r\n\r\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\r\n    return await optionPool.removeLiquidity(accountAddress, amount, isMaximum)\r\n  }, args)\r\n}\r\n","/*\r\n    1. Calculate the cost for user input volume\r\n    2. Calculate the final price if user input volume is traded\r\n*/\r\n\r\nexport function getMidPrice(tradersNetVolume, theoreticalPrice, K) {\r\n    return theoreticalPrice * (1 + K * tradersNetVolume)\r\n}\r\n\r\nexport function queryTradePMM(tradersNetVolume, theoreticalPrice, K, volume) {\r\n    return theoreticalPrice * (volume + ((tradersNetVolume + volume) ** 2 - tradersNetVolume ** 2) * K / 2)\r\n}\r\n","import {\r\n  bg,\r\n  max,\r\n  bTokenFactory,\r\n  catchApiError,\r\n  getPoolConfig,\r\n  fromWei,\r\n} from '../../shared';\r\nimport { fundingRateCache } from '../../shared/api/api_globals';\r\nimport { wrappedOracleFactory } from '../../shared/factory/oracle';\r\nimport { queryTradePMM } from '../calculation/PMM2';\r\nimport {\r\n  dynamicInitialMarginRatio,\r\n  dynamicInitialPoolMarginRatio,\r\n  getAverageEntryPrice,\r\n  //getDeltaFundingPerSecond,\r\n  getLiquidationPrice,\r\n  getLiquidationPrices,\r\n  getMarginHeldBySymbol,\r\n} from '../calculation/trade';\r\nimport { everlastingOptionFactory } from '../factory/pool';\r\nimport { volatilitiesCache } from '../utils';\r\nimport { getIndexInfo } from '../../shared/config/token';\r\n\r\n//\r\nconst SECONDS_IN_A_DAY = 86400;\r\n\r\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'option');\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool._updateConfig();\r\n      const [symbolInfo2, poolInfo2] = await Promise.all([\r\n        optionPool.getSymbol(symbolId),\r\n        optionPool.getParameters(),\r\n      ]);\r\n\r\n      const symbols = optionPool.activeSymbols\r\n      const symbolVolatilities = await volatilitiesCache.get(\r\n        symbols.map((s) => s.symbol)\r\n      );\r\n      const state = await optionPool.viewer.getPoolStates(\r\n        poolAddress,\r\n        [],\r\n        symbolVolatilities.map((v) => v.volatility)\r\n      );\r\n      const { symbolState } = state;\r\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\r\n      const symbolInfo = symbolState[symbolIndex];\r\n      const { dynamicMarginRatio, isCall } =\r\n        symbolInfo;\r\n      const { symbol, multiplier, feeRatioOTM, feeRatioITM } = symbolInfo2;\r\n      const {\r\n        initialMarginRatio,\r\n        maintenanceMarginRatio,\r\n        minLiquidationReward,\r\n        maxLiquidationReward,\r\n        liquidationCutRatio,\r\n        protocolFeeCollectRatio,\r\n      } = poolInfo2;\r\n\r\n      return {\r\n        symbol,\r\n        bTokenSymbol,\r\n        multiplier: multiplier.toString(),\r\n        feeRatioOTM: feeRatioOTM.toString(),\r\n        feeRatioITM: feeRatioITM.toString(),\r\n        //minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n        initialMarginRatioOrigin: initialMarginRatio.toString(),\r\n        initialMarginRatio: dynamicMarginRatio.toString(),\r\n        maintenanceMarginRatioOrigin: maintenanceMarginRatio.toString(),\r\n        maintenanceMarginRatio: bg(dynamicMarginRatio)\r\n          .times(maintenanceMarginRatio)\r\n          .div(initialMarginRatio)\r\n          .toString(),\r\n        minLiquidationReward: minLiquidationReward.toString(),\r\n        maxLiquidationReward: maxLiquidationReward.toString(),\r\n        liquidationCutRatio: liquidationCutRatio.toString(),\r\n        protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n        isCall: isCall,\r\n        indexConstituents: getIndexInfo(symbol),\r\n      };\r\n    },\r\n    args,\r\n    'getSpecification',\r\n    {\r\n      symbol: '',\r\n      bTokenSymbol: '',\r\n      multiplier: '',\r\n      feeRatio: '',\r\n      //minPoolMarginRatio: '',\r\n      initialMarginRatio: '',\r\n      maintenanceMarginRatio: '',\r\n      minLiquidationReward: '',\r\n      maxLiquidationReward: '',\r\n      liquidationCutRatio: '',\r\n      protocolFeeCollectRatio: '',\r\n      indexConstituents: { url: '', tokens: [] },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getPositionInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress, symbolId) => {\r\n      const { symbol: symbolName} = getPoolConfig(\r\n        poolAddress,\r\n        undefined,\r\n        symbolId,\r\n        'option'\r\n      );\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool._updateConfig();\r\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\r\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\r\n      const symbols = optionPool.activeSymbols\r\n      let symbolVolatilities = []\r\n      if (symbols && symbols.length > 0) {\r\n        [symbolVolatilities] = await Promise.all([\r\n          volatilitiesCache.get(\r\n            symbols.map((s) => s.symbol)\r\n          ),\r\n          //volatilityCache.get(`VOL-${normalizeOptionSymbol(symbolName)}`),\r\n        ]);\r\n      }\r\n      const state = await optionPool.viewer.getTraderStates(\r\n        poolAddress,\r\n        accountAddress,\r\n        [],\r\n        symbolVolatilities.map((v) => v.volatility)\r\n      );\r\n      const { poolState, symbolState, traderState, positionState } = state;\r\n      const { initialMarginRatio } = poolState;\r\n      const { margin, totalPnl, initialMargin } = traderState;\r\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\r\n      const volPrice = fromWei(symbolVolatilities[symbolIndex].volatility)\r\n      const symbol = symbolState[symbolIndex];\r\n      const position = positionState[symbolIndex];\r\n      const price = await wrappedOracleFactory(\r\n        chainId,\r\n        symbol.oracleAddress\r\n      ).getPrice();\r\n      return {\r\n        symbolId,\r\n        symbol: symbolName,\r\n        price,\r\n        strikePrice: symbol.strikePrice.toString(),\r\n        timePrice: symbol.timeValue.toString(),\r\n        markPrice: symbol.dpmmPrice.toString(),\r\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\r\n        averageEntryPrice: getAverageEntryPrice(position, symbol),\r\n        margin: margin.toString(),\r\n        marginHeld: initialMargin.toString(),\r\n        marginHeldBySymbol: getMarginHeldBySymbol(\r\n          position.volume,\r\n          price,\r\n          symbol,\r\n          initialMarginRatio\r\n        ).toString(),\r\n        unrealizedPnl: totalPnl,\r\n        unrealizedPnlList: symbolState\r\n          .filter((s, index) => positionState[index].pnl !== '0')\r\n          .map((s) => [s.symbol, positionState[symbolState.findIndex((oS) => oS.symbolId === s.symbolId)].pnl]),\r\n        premiumFundingAccrued: positionState[symbolIndex].fundingAccrued,\r\n        isCall: symbol.isCall,\r\n        volatility: bg(volPrice).times(100).toString(),\r\n        liquidationPrice: getLiquidationPrice(state, symbolId),\r\n      };\r\n    },\r\n    args,\r\n    'getPositionInfo',\r\n    {\r\n      price: '',\r\n      strikePrice: '',\r\n      timePrice: '',\r\n      volume: '',\r\n      averageEntryPrice: '',\r\n      margin: '',\r\n      marginHeld: '',\r\n      marginHeldBySymbol: '',\r\n      unrealizedPnl: '',\r\n      unrealizedPnlList: [],\r\n      premiumFundingAccrued: '',\r\n      liquidationPrice: '',\r\n      volatility: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getPositionInfos = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool._updateConfig();\r\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\r\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\r\n      const symbols = optionPool.activeSymbols\r\n      let [symbolVolatilities] = await Promise.all([\r\n        volatilitiesCache.get(\r\n          symbols.map((s) => s.symbol)\r\n        ),\r\n        //volatilitiesCache.(symbols.map((s) => s.symbol)),\r\n      ]);\r\n      let volPrices = symbolVolatilities.map((v) => fromWei(v.volatility))\r\n      symbolVolatilities = symbolVolatilities.map((v) => v.volatility)\r\n      const state = await optionPool.viewer.getTraderStates(\r\n        poolAddress,\r\n        accountAddress,\r\n        [],\r\n        symbolVolatilities\r\n      );\r\n      const { poolState, traderState, positionState, symbolState } = state;\r\n      const { initialMarginRatio } = poolState;\r\n      const { margin, initialMargin } = traderState;\r\n      const prices = await Promise.all(\r\n        symbols.reduce(\r\n          (acc, s) =>\r\n            acc.concat([\r\n              wrappedOracleFactory(chainId, s.oracleAddress).getPrice(),\r\n            ]),\r\n          []\r\n        )\r\n      );\r\n\r\n      const liquidationPrices = getLiquidationPrices(state);\r\n      return symbols\r\n        .filter((s) => positionState[s.symbolId].volume !== '0')\r\n        .map((s) => {\r\n          const vIndex = symbolState.findIndex(\r\n            (oS) => oS.symbolId === s.symbolId\r\n          );\r\n          return {\r\n            symbolId: s.symbolId,\r\n            symbol: s.symbol,\r\n            price: prices[vIndex],\r\n            // strikePrice: s.strikePrice.toString(),\r\n            // timePrice: s.timeValue.toString(),\r\n            volume: bg(positionState[vIndex].volume)\r\n              .times(symbolState[vIndex].multiplier)\r\n              .toString(),\r\n            averageEntryPrice: getAverageEntryPrice(positionState[vIndex], s),\r\n            margin: margin.toString(),\r\n            marginHeld: initialMargin.toString(),\r\n            marginHeldBySymbol: getMarginHeldBySymbol(\r\n              positionState[vIndex].volume,\r\n              prices[vIndex],\r\n              s,\r\n              initialMarginRatio\r\n            ).toString(),\r\n            unrealizedPnl: positionState[vIndex].pnl,\r\n            premiumFundingAccrued: positionState[vIndex].fundingAccrued,\r\n            isCall: s.isCall,\r\n            volatility: bg(volPrices[vIndex]).times(100).toString(),\r\n            liquidationPrice: liquidationPrices,\r\n          };\r\n        });\r\n    },\r\n    args,\r\n    'getPositionInfos',\r\n    []\r\n  );\r\n};\r\n\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      const { bToken: bTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        '0',\r\n        'option'\r\n      );\r\n      const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(\r\n        accountAddress\r\n      );\r\n      return balance.toString();\r\n    },\r\n    args,\r\n    'getWalletBalance',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      const { bToken: bTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        '0',\r\n        'option'\r\n      );\r\n      const bToken = bTokenFactory(chainId, bTokenAddress);\r\n      return await bToken.isUnlocked(accountAddress, poolAddress);\r\n    },\r\n    args,\r\n    'isUnlocked',\r\n    ''\r\n  );\r\n};\r\n\r\nconst _getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  //const { symbol } = getPoolConfig(poolAddress, undefined, symbolId, 'option')\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  await optionPool._updateConfig();\r\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\r\n  //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\r\n  const symbols = optionPool.activeSymbols;\r\n  const symbolVolatilities = (\r\n    await volatilitiesCache.get(symbols.map((s) => s.symbol))\r\n  ).map((v) => v.volatility);\r\n  const state = await optionPool.viewer.getPoolStates(\r\n    poolAddress,\r\n    [],\r\n    symbolVolatilities\r\n  );\r\n  const { poolState, symbolState } = state;\r\n  const { initialMarginRatio, totalDynamicEquity, liquidity } = poolState;\r\n  const curSymbolIndex = optionPool.activeSymbolIds.indexOf(symbolId);\r\n  if (curSymbolIndex < 0) {\r\n    throw new Error(\r\n      `getFundingRate(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n    );\r\n  }\r\n  const symbolInfo = symbolState[curSymbolIndex];\r\n\r\n  const prices = await Promise.all(\r\n    symbolState.reduce(\r\n      (acc, s) =>\r\n        acc.concat([wrappedOracleFactory(chainId, s.oracleAddress).getPrice()]),\r\n      []\r\n    )\r\n  );\r\n\r\n  const liquidityUsedInAmount = symbolState.reduce((acc, s, index) => {\r\n    return acc.plus(\r\n      bg(s.tradersNetVolume)\r\n        .times(prices[index])\r\n        .times(s.multiplier)\r\n        .abs()\r\n        .times(\r\n          dynamicInitialPoolMarginRatio(\r\n            prices[index],\r\n            s.strikePrice,\r\n            s.isCall,\r\n            initialMarginRatio\r\n          )\r\n        )\r\n    );\r\n  }, bg(0));\r\n\r\n  const res = {\r\n    initialMarginRatio,\r\n    symbolIds: optionPool.activeSymbolIds,\r\n    symbols: symbolState,\r\n    liquidity,\r\n    totalDynamicEquity,\r\n    prices,\r\n    liquidityUsed: bg(liquidity).eq(0) ? bg(0) : liquidityUsedInAmount.div(liquidity),\r\n    premiumFunding: bg(symbolInfo.fundingPerSecond)\r\n      .div(symbolInfo.multiplier)\r\n      .times(SECONDS_IN_A_DAY)\r\n      .toString(),\r\n    premiumFundingPerSecond: bg(symbolInfo.fundingPerSecond).div(\r\n      symbolInfo.multiplier\r\n    ),\r\n  };\r\n  return res;\r\n};\r\n\r\nexport const getEstimatedFee = async (\r\n  chainId,\r\n  poolAddress,\r\n  volume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, volume, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, volume, symbolId) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      const symbolInfo = await optionPool.getSymbol(symbolId);\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      }\r\n      const { symbolIds, prices, symbols } = res;\r\n      const curSymbolIndex = symbolIds.indexOf(symbolId);\r\n      if (curSymbolIndex < 0) {\r\n        throw new Error(\r\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n        );\r\n      }\r\n      const symbol = symbols[curSymbolIndex];\r\n      //console.log(ivolume, prices[curSymbolIndex], symbol, intrinsicPrice.toString())\r\n      let fee\r\n      const intrinsicValue = symbol.isCall\r\n        ? max(bg(symbol.spotPrice).minus(symbol.strikePrice), bg(0))\r\n        : max(bg(symbol.strikePrice).minus(symbol.spotPrice), bg(0));\r\n      if (bg(intrinsicValue).gt(0)) {\r\n        fee = bg(volume)\r\n          .abs()\r\n          .times(symbol.multiplier)\r\n          .times(symbol.spotPrice)\r\n          .times(symbolInfo.feeRatioITM)\r\n          .toString();\r\n      } else {\r\n        fee = bg(volume)\r\n          .abs()\r\n          .times(symbol.multiplier)\r\n          .times(symbol.timeValue)\r\n          .times(symbolInfo.feeRatioOTM)\r\n          .toString();\r\n      }\r\n      return fee\r\n    },\r\n    args,\r\n    'getFundingFee',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId\r\n) => {\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\r\n  const [parameterInfo, symbol] = await Promise.all([\r\n    optionPool.getParameters(),\r\n    optionPool.getSymbol(symbolId),\r\n  ]);\r\n  const price = await wrappedOracleFactory(\r\n    chainId,\r\n    symbol.oracleAddress\r\n  ).getPrice();\r\n  const { initialMarginRatio } = parameterInfo;\r\n  const marginRatio = dynamicInitialMarginRatio(\r\n    price,\r\n    symbol.strikePrice,\r\n    symbol.isCall,\r\n    initialMarginRatio\r\n  );\r\n  //console.log(marginRatio, symbol.multiplier, price, volume)\r\n  return bg(volume)\r\n    .abs()\r\n    .times(price)\r\n    .times(symbol.multiplier)\r\n    .times(marginRatio);\r\n};\r\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\r\n  return fundingRateCache.get(chainId, poolAddress, symbolId);\r\n};\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      const res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      const curSymbolIndex = res.symbolIds.indexOf(symbolId);\r\n      if (curSymbolIndex < 0) {\r\n        throw new Error(\r\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n        );\r\n      }\r\n      return {\r\n        premiumFunding0: bg(res.premiumFunding).toString(),\r\n        premiumFundingPerSecond: res.premiumFundingPerSecond.toString(),\r\n        liquidity: res.liquidity.toString(),\r\n        volume: '-',\r\n        tradersNetVolume: res.symbols[curSymbolIndex].tradersNetVolume,\r\n      };\r\n    },\r\n    args,\r\n    'getFundingRate',\r\n    {\r\n      premiumFunding0: '',\r\n      premiumFundingPerSecond: '',\r\n      liquidity: '',\r\n      volume: '-',\r\n      tradersNetVolume: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\r\n  return catchApiError(\r\n    async () => {\r\n      // let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      // if (!res) {\r\n      //   res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n      //   fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      // }\r\n      // const { symbolIds, symbols, prices, totalDynamicEquity } = res;\r\n      // const curSymbolIndex = symbolIds.indexOf(symbolId);\r\n      // if (curSymbolIndex < 0) {\r\n      //   throw new Error(\r\n      //     `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\r\n      //   );\r\n      // }\r\n      // let symbol = symbols[curSymbolIndex];\r\n      // //console.log('symbol.tradersNetVolume0', symbol.tradersNetVolume)\r\n      // //symbol.tradersNetVolume = bg(symbol.tradersNetVolume).plus(newNetVolume).toString()\r\n      // //console.log('symbol.tradersNetVolume1', symbol.tradersNetVolume)\r\n      // const deltaFunding1 = getdeltaFundingPerSecond(\r\n      //   symbol,\r\n      //   symbol.delta,\r\n      //   prices[curSymbolIndex],\r\n      //   totalDynamicEquity,\r\n      //   newNetVolume\r\n      // );\r\n\r\n      return {\r\n        // deltaFunding1: bg(deltaFunding1)\r\n        //   .div(symbol.multiplier)\r\n        //   .times(SECONDS_IN_A_DAY)\r\n        //   .toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedFundingRate',\r\n    {\r\n    }\r\n  );\r\n};\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      }\r\n      return {\r\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getLiquidityUsed',\r\n    {\r\n      liquidityUsed0: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\r\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\r\n      if (!res) {\r\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\r\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\r\n      }\r\n      const { symbolIds, symbols, prices, liquidity, initialMarginRatio } = res;\r\n\r\n      const liquidityUsedInAmount = symbols.reduce((acc, s, index) => {\r\n        if (symbolIds[index] == symbolId) {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .plus(newNetVolume)\r\n              .times(prices[index])\r\n              .times(s.multiplier)\r\n              .abs()\r\n              .times(\r\n                dynamicInitialPoolMarginRatio(\r\n                  prices[index],\r\n                  s.strikePrice,\r\n                  s.isCall,\r\n                  initialMarginRatio\r\n                )\r\n              )\r\n          );\r\n        } else {\r\n          return acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .times(prices[index])\r\n              .times(s.multiplier)\r\n              .abs()\r\n              .times(\r\n                dynamicInitialPoolMarginRatio(\r\n                  prices[index],\r\n                  s.strikePrice,\r\n                  s.isCall,\r\n                  initialMarginRatio\r\n                )\r\n              )\r\n          );\r\n        }\r\n      }, bg(0));\r\n      return {\r\n        liquidityUsed1: bg(liquidity).eq(0) ? '0' : liquidityUsedInAmount\r\n          .div(liquidity)\r\n          .times(100)\r\n          .toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getEstimatedLiquidityUsed',\r\n    {\r\n      liquidityUsed1: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getEstimatedTimePrice = (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      await optionPool._updateConfig();\r\n      const symbolVolatilities = (await volatilitiesCache.get(\r\n        optionPool.activeSymbols.map((s) => s.symbol)\r\n      )).map((v) => v.volatility);\r\n      const state = await optionPool.viewer.getPoolStates(\r\n        poolAddress,\r\n        [],\r\n        symbolVolatilities\r\n      );\r\n      const { symbolState } = state;\r\n\r\n      //const { liquidity } = poolState;\r\n      const index = symbolState.findIndex((s) => s.symbolId === symbolId);\r\n      if (index > -1) {\r\n        const {\r\n          tradersNetVolume,\r\n          multiplier,\r\n          intrinsicValue,\r\n          timeValue,\r\n          K,\r\n        } = symbolState[index];\r\n        //console.log(tradersNetVolume, multiplier, liquidity, quoteBalanceOffset, timePrice, K)\r\n        const args = [\r\n          bg(tradersNetVolume).times(multiplier).toNumber(),\r\n          bg(intrinsicValue).plus(timeValue).toNumber(),\r\n          bg(K).toNumber(),\r\n          bg(newNetVolume).times(multiplier).toNumber(),\r\n        ]\r\n\r\n        const res = queryTradePMM(...args);\r\n        //console.log('res', res)\r\n        return bg(res).div(newNetVolume).div(multiplier).toString();\r\n      } else {\r\n        console.log(\r\n          `invalid symbolId(${symbolId}) for the pool(${poolAddress})`\r\n        );\r\n        return '';\r\n      }\r\n    },\r\n    args,\r\n    'getEstimatedMarkPrice',\r\n    ''\r\n  );\r\n};\r\n","import { getPoolConfig } from '../../shared/config';\r\nimport { bTokenFactory } from '../../shared/factory';\r\nimport { catchTxApiError, bg } from '../../shared/utils';\r\n//import { isOrderValid } from '../../v2/calculation';\r\nimport { everlastingOptionFactory } from '../factory/pool.js';\r\nimport { pTokenOptionFactory} from '../factory/tokens';\r\n\r\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\r\n    const { bToken: bTokenAddress } = getPoolConfig(\r\n      poolAddress,\r\n      '0',\r\n      '0',\r\n      'option'\r\n    );\r\n    const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    return await bToken.unlock(accountAddress, poolAddress);\r\n  }, args);\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      return await optionPool.addMargin(accountAddress, amount);\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  isMaximum = false\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      return await optionPool.removeMargin(\r\n        accountAddress,\r\n        amount,\r\n        isMaximum\r\n      );\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\r\n      // const { pToken: pTokenAddress } = getPoolConfig(\r\n      //   poolAddress,\r\n      //   '0',\r\n      //   '0',\r\n      //   'option'\r\n      // );\r\n      // const pToken = pTokenOptionFactory(chainId, pTokenAddress);\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      // const [parameterInfo, liquidity, margin, symbolIds] = await Promise.all([\r\n      //   optionPool.getParameters(),\r\n      //   optionPool.getLiquidity(),\r\n      //   pToken.getMargin(accountAddress),\r\n      //   pToken.getActiveSymbolIds(),\r\n      // ]);\r\n      // no minInitialMarginRatio in option\r\n      // const { initialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n      // let promises = [];\r\n\r\n      // for (let i = 0; i < symbolIds.length; i++) {\r\n      //   promises.push(optionPool.getSymbol(symbolIds[i]));\r\n      // }\r\n      // const symbols = await Promise.all(promises);\r\n\r\n      // promises = [];\r\n      // for (let i = 0; i < symbolIds.length; i++) {\r\n      //   promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\r\n      // }\r\n      // const positions = await Promise.all(promises);\r\n\r\n      // let marginHeld = symbols.reduce((acc, s, index) => {\r\n      //   if (index === parseInt(symbolId)) {\r\n      //     return acc.plus(\r\n      //       bg(s.price)\r\n      //         .times(s.multiplier)\r\n      //         .times(bg(positions[index]).volume.plus(newVolume))\r\n      //         .abs()\r\n      //     );\r\n      //   } else {\r\n      //     return acc.plus(\r\n      //       bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\r\n      //     );\r\n      //   }\r\n      // }, bg(0));\r\n      // marginHeld = marginHeld.times(initialMarginRatio);\r\n\r\n      // let liquidityUsed = symbols.reduce((acc, s, index) => {\r\n      //   if (index === parseInt(symbolId)) {\r\n      //     return acc.plus(\r\n      //       bg(s.tradersNetVolume)\r\n      //         .plus(newVolume)\r\n      //         .times(s.price)\r\n      //         .times(s.multiplier)\r\n      //         .abs()\r\n      //     );\r\n      //   } else {\r\n      //     return acc.plus(\r\n      //       bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\r\n      //     );\r\n      //   }\r\n      // }, bg(0));\r\n      // liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n\r\n      // const orderValidation = isOrderValid(\r\n      //   margin,\r\n      //   marginHeld,\r\n      //   liquidity,\r\n      //   liquidityUsed\r\n      // );\r\n      // if (orderValidation.success) {\r\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\r\n      // } else {\r\n      //   throw new Error(orderValidation.error);\r\n      // }\r\n    },\r\n    args\r\n  );\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId];\r\n  return catchTxApiError(\r\n    async (chainId, poolAddress, accountAddress, symbolId) => {\r\n      const { pToken: pTokenAddress } = getPoolConfig(\r\n        poolAddress,\r\n        '0',\r\n        '0',\r\n        'option'\r\n      );\r\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n      const pToken = pTokenOptionFactory(chainId, pTokenAddress);\r\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n      if (!bg(volume).eq(0)) {\r\n        const newVolume = bg(volume).negated().toString();\r\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error('no position to close');\r\n      }\r\n    },\r\n    args\r\n  );\r\n};\r\n","import {\r\n  deriToNatural,\r\n  naturalToDeri,\r\n  bg,\r\n  getBlockInfo,\r\n  getPastEvents,\r\n  getPastEventsUseAbi,\r\n  getHttpBase,\r\n  fetchJson,\r\n  max,\r\n} from '../../shared/utils';\r\nimport { getPoolConfig, DeriEnv } from '../../shared/config';\r\nimport { everlastingOptionFactory, optionPricerFactory } from '../factory/pool';\r\nimport { everlastingOptionOldAbi } from '../contract/abis';\r\n\r\nconst processTradeEvent = async (\r\n  chainId,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  bTokenSymbol,\r\n  symbolIdList,\r\n  symbols,\r\n  pricer\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const tradeCost = deriToNatural(info.tradeCost);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const volume = tradeVolume.abs();\r\n  const symbolId = info.symbolId;\r\n  const volatility = info.volatility;\r\n  const index = symbolIdList.indexOf(symbolId);\r\n  const price = bg(tradeCost).div(\r\n    bg(tradeVolume).times(symbols[index].multiplier)\r\n  );\r\n  const indexPrice = deriToNatural(info.spotPrice);\r\n\r\n  const intrinsicValue = symbols[index].isCall\r\n    ? max(indexPrice.minus(symbols[index].strikePrice), bg(0))\r\n    : max(bg(symbols[index].strikePrice).minus(indexPrice), bg(0));\r\n  let timeValue = '0';\r\n  if (intrinsicValue.lte(0)) {\r\n    const res = await pricer.getEverlastingTimeValueAndDelta(\r\n      naturalToDeri(indexPrice),\r\n      naturalToDeri(symbols[index].strikePrice),\r\n      volatility,\r\n      naturalToDeri(bg(1).div(365).toString())\r\n    );\r\n    timeValue = res.timeValue;\r\n  }\r\n  if (index > -1) {\r\n    return {\r\n      direction,\r\n      baseToken: bTokenSymbol,\r\n      symbolId,\r\n      symbol: symbols[index].symbol,\r\n      price: price.toString(),\r\n      indexPrice: indexPrice.toString(),\r\n      volume: volume.times(symbols[index].multiplier).toString(),\r\n      transactionHash: txHash.toString(),\r\n      notional: tradeVolume\r\n        .abs()\r\n        .times(indexPrice)\r\n        .times(multiplier[index])\r\n        .toString(),\r\n      contractValue: tradeVolume\r\n        .abs()\r\n        .times(price)\r\n        .times(multiplier[index])\r\n        .toString(),\r\n      transactionFee: intrinsicValue.gt(0)\r\n        ? volume\r\n            .times(symbols[index].multiplier)\r\n            .times(indexPrice)\r\n            .times(symbols[index].feeRatioITM)\r\n            .toString()\r\n        : volume\r\n            .times(symbols[index].multiplier)\r\n            .times(timeValue)\r\n            .times(symbols[index].feeRatioOTM)\r\n            .toString(),\r\n      time,\r\n    };\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n  // const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  //console.log('symbolIdList', symbolIdList);\r\n  const { bTokenSymbol, pricer: pricerAddress } = getPoolConfig(\r\n    poolAddress,\r\n    undefined,\r\n    undefined,\r\n    'option'\r\n  );\r\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n  const pricer = optionPricerFactory(chainId, pricerAddress);\r\n  const [toBlock] = await Promise.all([\r\n    getBlockInfo(chainId, 'latest'),\r\n    optionPool._updateConfig(),\r\n  ]);\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  let promises = [];\r\n  for (let i = 0; i < optionPool.activeSymbolIds.length; i++) {\r\n    promises.push(\r\n      optionPool.getSymbol(optionPool.activeSymbolIds[i].toString())\r\n    );\r\n  }\r\n  let symbols = await Promise.all(promises);\r\n  //let symbols = optionPool.activeSymbols\r\n  const multiplier = symbols.map((i) => i.multiplier.toString());\r\n\r\n  const filters = { account: accountAddress };\r\n  let result = [];\r\n\r\n  if (DeriEnv.get() === 'testnet') {\r\n    let events = await getPastEvents(\r\n      chainId,\r\n      optionPool.contract,\r\n      'Trade',\r\n      filters,\r\n      fromBlock,\r\n      toBlock.number\r\n    );\r\n\r\n    //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n    console.log('online events length:', events.length);\r\n    for (let i = 0; i < events.length; i++) {\r\n      const item = events[i];\r\n      let res;\r\n      res = await optionPool.formatTradeEvent(item);\r\n      if (res) {\r\n        const symbolIndex = optionPool.activeSymbolIds.indexOf(res.symbolId);\r\n        result.unshift({\r\n          baseToken: bTokenSymbol,\r\n          direction: res.direction,\r\n          volume: bg(res.volume)\r\n            .times(optionPool.symbols[symbolIndex].multiplier)\r\n            .toString(),\r\n          price: res.price,\r\n          indexPrice: res.indexPrice,\r\n          notional: res.notional,\r\n          symbol: res.symbol,\r\n          symbolId: res.symbolId,\r\n          time: res.time,\r\n          contractValue: res.contractValue,\r\n          transactionFee: res.transactionFee,\r\n          transactionHash: res.transactionHash,\r\n        });\r\n      }\r\n    }\r\n  } else {\r\n    let events = await getPastEventsUseAbi(\r\n      chainId,\r\n      poolAddress,\r\n      everlastingOptionOldAbi,\r\n      'Trade',\r\n      filters,\r\n      fromBlock,\r\n      toBlock.number\r\n    );\r\n\r\n    // console.log('old online events length:', events.length, fromBlock, toBlock.number);\r\n    //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n    for (let i = 0; i < events.length; i++) {\r\n      const item = events[i];\r\n      const res = await processTradeEvent(\r\n        chainId,\r\n        item.returnValues,\r\n        item.blockNumber,\r\n        item.transactionHash,\r\n        multiplier,\r\n        bTokenSymbol,\r\n        optionPool.activeSymbolIds,\r\n        symbols,\r\n        pricer\r\n      );\r\n      res && result.unshift(res);\r\n    }\r\n  }\r\n  result = result.filter((tr) => tr !== null);\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock,\r\n      tradeHistory = [];\r\n    const optionPool = everlastingOptionFactory(chainId, poolAddress);\r\n    const [res] = await Promise.all([\r\n      fetchJson(\r\n        `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n      ),\r\n      optionPool._updateConfig(),\r\n    ]);\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    const symbols = optionPool.activeSymbols;\r\n    //console.log('history ', tradeHistory)\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .filter((i) => !(i.direction === 'LIQUIDATION' && i.symbolId === '0'))\r\n        .map((i) => {\r\n          const index = symbols.findIndex((s) => s.symbolId === i.symbolId);\r\n          if (index > -1 && i.direction !== 'LIQUIDATION') {\r\n            return {\r\n              direction: i.direction.trim(),\r\n              baseToken: i.baseToken.trim(),\r\n              symbolId: i.symbolId,\r\n              symbol: i.symbol,\r\n              price: deriToNatural(i.price)\r\n                .div(symbols[index].multiplier)\r\n                .toString(),\r\n              indexPrice: deriToNatural(i.indexPrice).toString(),\r\n              notional: deriToNatural(i.notional).toString(),\r\n              contractValue: deriToNatural(i.contractValue).toString(),\r\n              volume: deriToNatural(i.volume)\r\n                .times(symbols[index].multiplier)\r\n                .toString(),\r\n              transactionFee: deriToNatural(i.transactionFee).toString(),\r\n              transactionHash: i.transactionHash,\r\n              time: i.time.toString(),\r\n            };\r\n          } else if (i.direction === 'LIQUIDATION') {\r\n            if (\r\n              i.volume !== '' &&\r\n              i.volume.indexOf(',') > -1 &&\r\n              !i.price.startsWith('NaN')\r\n            ) {\r\n              const ids = i.volume.split(',').reduce((acc, v, index) => {\r\n                if (v !== '0') {\r\n                  return acc.concat([index]);\r\n                } else {\r\n                  return acc;\r\n                }\r\n              }, []);\r\n              const prices = i.price.split(',').map((s) => deriToNatural(s));\r\n              const volumes = i.volume.split(',').map((v) => deriToNatural(v));\r\n              const res = ids.map((id) => {\r\n                return {\r\n                  direction: i.direction.trim(),\r\n                  baseToken: i.baseToken.trim(),\r\n                  symbolId: id.toString(),\r\n                  symbol: symbols[id].symbol,\r\n                  volume: volumes[id]\r\n                    .times(symbols[id].multiplier)\r\n                    .abs()\r\n                    .toString(),\r\n                  price: prices[id].toString(),\r\n                  indexPrice: '',\r\n                  notional: '',\r\n                  contractValue: volumes[id]\r\n                    .abs()\r\n                    .times(prices[id])\r\n                    .times(symbols[id].multiplier)\r\n                    .toString(),\r\n                  transactionFee: '0',\r\n                  transactionHash: i.transactionHash,\r\n                  time: i.time.toString(),\r\n                };\r\n              });\r\n              return res;\r\n            } else {\r\n              return {\r\n                direction: i.direction.trim(),\r\n                baseToken: i.baseToken.trim(),\r\n                symbolId: '',\r\n                symbol: '',\r\n                volume: '',\r\n                price: '',\r\n                indexPrice: '',\r\n                notional: '',\r\n                contractValue: '',\r\n                transactionFee: '0',\r\n                transactionHash: i.transactionHash,\r\n                time: i.time.toString(),\r\n              };\r\n            }\r\n          } else {\r\n            // i.symbolId is not in activeSymbols\r\n            return null;\r\n          }\r\n        })\r\n        .flat();\r\n    }\r\n    tradeHistory = tradeHistory.filter((tr) => tr !== null);\r\n    // fetch tradeHistory on the block with fromBlock from rest api\r\n    //console.log('tradeFromBlock', tradeFromBlock)\r\n    if (tradeFromBlock !== 0) {\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n      const { initialBlock } = getPoolConfig(\r\n        poolAddress,\r\n        undefined,\r\n        symbolId,\r\n        'option'\r\n      );\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch (err) {\r\n    console.log(\r\n      `getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`\r\n    );\r\n  }\r\n  return [];\r\n};\r\n","import { catchTxApiError, naturalToDeri, toChecksumAddress } from \"../../shared\"\r\nimport { normalizeChainId } from \"../../shared/utils/validate\";\r\nimport { getOracleFactoryChainlinkConfig, getPoolV2LiteManagerConfig } from \"../config\";\r\nimport { chainlinkFeedFactory, oracleFactoryChainlinkFactory, perpetualPoolLiteFactory, perpetualPoolLiteManagerFactory } from \"../factory\";\r\n\r\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\r\nexport const createPool = async(...args) => {\r\n  return catchTxApiError(async(chainId, accountAddress, parameters, bTokenAddress, pairedTokenAddress) => {\r\n      chainId = normalizeChainId(chainId)\r\n      const { address: poolManagerAddress } = getPoolV2LiteManagerConfig(chainId)\r\n      const poolManager = perpetualPoolLiteManagerFactory(\r\n        chainId,\r\n        poolManagerAddress\r\n      );\r\n      // process parameters\r\n      const newParameters = parameters.map((p) => naturalToDeri(p).toString())\r\n      // send tx\r\n     return await poolManager.createPool(accountAddress, newParameters, bTokenAddress, pairedTokenAddress)\r\n  }, args)\r\n}\r\n\r\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\r\nexport const addSymbol = async(...args) => {\r\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, parameters) => {\r\n      chainId = normalizeChainId(chainId)\r\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      // process parameters\r\n      const newParameters = parameters.map((p, index) => index > 2 ? naturalToDeri(p).toString() : p)\r\n      // send tx\r\n     return await perpetualPoolLite.addSymbol(accountAddress, newParameters)\r\n  }, args)\r\n}\r\n\r\nexport const createOracle = async(...args) => {\r\n  return catchTxApiError(async(chainId, accountAddress, feedAddress) => {\r\n      chainId = normalizeChainId(chainId)\r\n      feedAddress = toChecksumAddress(feedAddress)\r\n      const feedContract = chainlinkFeedFactory(chainId, feedAddress)\r\n      const symbol = await feedContract.symbol()\r\n      if (typeof symbol === 'string' && symbol !== '') {\r\n        const oracleFactoryConfig = getOracleFactoryChainlinkConfig(chainId);\r\n        const oracleFactory = oracleFactoryChainlinkFactory(\r\n          chainId,\r\n          oracleFactoryConfig.address\r\n        );\r\n        // process parameters\r\n        // send tx\r\n        return await oracleFactory.createOracle(\r\n          accountAddress,\r\n          symbol\r\n        );\r\n      } else {\r\n        throw new Error(\r\n          `-- createOracle: cannot get description of feedAddress(${feedAddress})`\r\n        );\r\n      }\r\n  }, args)\r\n}\r\n","import { DeriEnv } from \"../shared/config\"\r\n\r\nexport const getPTokenAirdropConfig = (chainId, env) => {\r\n  chainId = chainId.toString()\r\n  env = env || DeriEnv.get();\r\n  const config = {\r\n    prod: [\r\n      {\r\n        chainId: '56',\r\n        address: '0x055FD7f825cCD1b87092A1Ee40462c4c60dDD8ba',\r\n      },\r\n    ],\r\n    dev: [\r\n      {\r\n        chainId: '97',\r\n        address: '0x632D0f5d642B0d915cE1ad0772677FC589cc724d',\r\n      },\r\n    ],\r\n  };\r\n\r\n  if (Object.keys(config).includes(env)) {\r\n    const res = config[env].find((c) => c.chainId === chainId);\r\n    if (res) {\r\n      return res\r\n    }\r\n  } \r\n  throw new Error(`-- getPTokenAirdropConfig(), invalid env(${env}) or chainId(${chainId})`)\r\n};\r\n\r\nexport const getDeriVoteConfig = (chainId, env) => {\r\n  chainId = chainId.toString()\r\n  env = env || DeriEnv.get();\r\n  const config = {\r\n    prod: [\r\n      {\r\n        chainId: '1',\r\n        address: '0xb2b6907AdDa5a13673849CBD448f31be9C4A7424',\r\n      },\r\n      {\r\n        chainId: '56',\r\n        address: '0x27c116474D4E08df0A13935AF508E8922271F891',\r\n      },\r\n      {\r\n        chainId: '128',\r\n        address: '0x3752D67bfBe945a89787c7F6758A47C2D52988d4',\r\n      },\r\n      {\r\n        chainId: '137',\r\n        address: '0x6d05Fd927b5d184A8f848DA7D57C7228AEf80b85',\r\n      },\r\n    ],\r\n    dev: [\r\n      {\r\n        chainId: '97',\r\n        address: '0x37f3432B2166c6dB487c844C481Cba47ac98AD00',\r\n      },\r\n    ],\r\n  };\r\n\r\n  if (Object.keys(config).includes(env)) {\r\n    const res = config[env].find((c) => c.chainId === chainId);\r\n    if (res) {\r\n      return res\r\n    }\r\n  } \r\n  throw new Error(`-- getDeriVoteConfig(), invalid env(${env}) or chainId(${chainId})`)\r\n};\r\n","import Web3 from \"web3\";\r\nimport { bg } from \"../shared/utils\";\r\n\r\n// lang\r\nexport const isObject = (value) => typeof value === 'object' && value !== null\r\nexport const isArray = (value) => typeof value === 'object' && Array.isArray(value)\r\nexport const isFunction = (value) => typeof value === 'function'\r\n\r\n// convert\r\nexport const toWei = (number, unit = \"ether\") => {\r\n  return Web3.utils.toWei(number, unit);\r\n};\r\n\r\nexport const fromWei = (number, unit = \"ether\") => {\r\n  return Web3.utils.fromWei(number, unit);\r\n};\r\n\r\n// factory\r\nexport const contractFactory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\n// adapter\r\nconst processObjectResult = (val, propList = []) => {\r\n  return Object.keys(val).reduce((acc, prop) => {\r\n    if (typeof val[prop] === \"string\" && propList.includes(prop)) {\r\n      acc[prop] = bg(fromWei(val[prop])).toString();\r\n    } else {\r\n      acc[prop] = val[prop];\r\n    }\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\nconst processResult = (val, propList = []) => {\r\n  if (isArray(val)) {\r\n    return val.map((v) => processResult(v, propList));\r\n  } else if (isObject(val)) {\r\n    return processObjectResult(val, propList);\r\n  } else if (typeof val === \"string\") {\r\n    return bg(fromWei(val)).toString();\r\n  } else {\r\n    return val;\r\n  }\r\n};\r\n\r\nexport const processMethod = (klass, methodName, propList = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const res = await originMethod.apply(this, args);\r\n    return processResult(res, propList);\r\n  };\r\n  return klass;\r\n};\r\n\r\nexport const processTxMethod = (klass, methodName, toWeiArgPositions = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const newArgs = args.map((arg, index) =>\r\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\r\n    );\r\n    return await originMethod.apply(this, newArgs);\r\n  };\r\n  return klass;\r\n};","// this file is generated by script, don't modify it !!!\r\nexport const pTokenAirdropNULSAbi = [{\r\n        \"inputs\": [{\r\n                \"internalType\": \"address\",\r\n                \"name\": \"bTokenAddress\",\r\n                \"type\": \"address\"\r\n            }, {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"pTokenAddress\",\r\n                \"type\": \"address\"\r\n            }, {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"poolAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    }, {\r\n        \"anonymous\": false,\r\n        \"inputs\": [{\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            }, {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }, {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"index\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"AirdropPToken\",\r\n        \"type\": \"event\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"airdropPToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"getBTokenBalance\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [{\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"isAirdropPToken\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"isStartAirdrop\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"marginUnit\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"maxAirdropLimit\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"ownerAddress\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [{\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"marginUnit_\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setMarginUnit\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [{\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"maxAirdropLimit_\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setMaxAirdropLimit\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [{\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeUnit_\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"setTradeUnit\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"startAirdrop\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"stopAirdrop\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"totalAirdropCount\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"tradeUnit\",\r\n        \"outputs\": [{\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }, {\r\n        \"inputs\": [],\r\n        \"name\": \"withdrawBToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils'\r\nimport { pTokenAirdropNULSAbi } from '../abi/pTokenAirdropNULSAbi.js'\r\n\r\nexport class PTokenAirdropNULS extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenAirdropNULSAbi)\r\n  }\r\n\r\n  // query\r\n  //  async getBTokenBalance() {\r\n  //    const res = await this._call('getBTokenBalance', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async isAirdropPToken(account) {\r\n    const res = await this._call('isAirdropPToken', [account])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async isStartAirdrop() {\r\n  //    const res = await this._call('isStartAirdrop', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async marginUnit() {\r\n  //    const res = await this._call('marginUnit', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async maxAirdropLimit() {\r\n  //    const res = await this._call('maxAirdropLimit', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async ownerAddress() {\r\n  //    const res = await this._call('ownerAddress', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async totalAirdropCount() {\r\n    const res = await this._call('totalAirdropCount', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async tradeUnit() {\r\n  //    const res = await this._call('tradeUnit', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n\r\n  // tx\r\n  async airdropPToken(accountAddress) {\r\n    return await this._transact('airdropPToken', [], accountAddress)\r\n  }\r\n  //  async setMarginUnit(accountAddress, marginUnit_) {\r\n  //    return await this._transact('setMarginUnit', [marginUnit_], accountAddress)\r\n  //  }\r\n  //  async setMaxAirdropLimit(accountAddress, maxAirdropLimit_) {\r\n  //    return await this._transact('setMaxAirdropLimit', [maxAirdropLimit_], accountAddress)\r\n  //  }\r\n  //  async setTradeUnit(accountAddress, tradeUnit_) {\r\n  //    return await this._transact('setTradeUnit', [tradeUnit_], accountAddress)\r\n  //  }\r\n  //  async startAirdrop(accountAddress) {\r\n  //    return await this._transact('startAirdrop', [], accountAddress)\r\n  //  }\r\n  //  async stopAirdrop(accountAddress) {\r\n  //    return await this._transact('stopAirdrop', [], accountAddress)\r\n  //  }\r\n  //  async withdrawBToken(accountAddress) {\r\n  //    return await this._transact('withdrawBToken', [], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const deriVoteAbi = [\r\n  { \"inputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"voter\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"votingId\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"votingOption\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"Vote\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"controller\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"string\", \"name\": \"topic\", \"type\": \"string\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"nOptions\", \"type\": \"uint256\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"deadline\", \"type\": \"uint256\" }\r\n    ],\r\n    \"name\": \"initializeVote\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"name\",\r\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"numVotingOptions\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" }\r\n    ],\r\n    \"name\": \"setController\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"uint256\", \"name\": \"votingOption\", \"type\": \"uint256\" }\r\n    ],\r\n    \"name\": \"vote\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"votingDeadline\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"votingId\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" },\r\n      { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }\r\n    ],\r\n    \"name\": \"votingOptions\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"name\": \"votingTopics\",\r\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils'\r\nimport { deriVoteAbi } from '../abi/deriVoteAbi.js'\r\n\r\nexport class DeriVote extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, deriVoteAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async controller() {\r\n    const res = await this._call('controller', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async numVotingOptions() {\r\n    const res = await this._call('numVotingOptions', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async votingDeadline() {\r\n    const res = await this._call('votingDeadline', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async votingId() {\r\n    const res = await this._call('votingId', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async votingOptions(votingId, voter) {\r\n    const res = await this._call(\"votingOptions\", [votingId, voter]);\r\n    return deleteIndexedKey(res);\r\n  }\r\n  async votingTopics(votingId) {\r\n    const res = await this._call('votingTopics', [votingId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async initializeVote(accountAddress, topic, nOptions, deadline) {\r\n  //    return await this._transact('initializeVote', [topic, nOptions, deadline], accountAddress)\r\n  //  }\r\n  //  async setController(accountAddress, newController) {\r\n  //    return await this._transact('setController', [newController], accountAddress)\r\n  //  }\r\n  async vote(accountAddress, votingOption) {\r\n    return await this._transact('vote', [votingOption], accountAddress)\r\n  }\r\n\r\n}","import { contractFactory } from \"../utils\";\r\nimport { PTokenAirdropNULSAdapter, deriVoteAdapter } from \"./adapter\";\r\n\r\nimport { PTokenAirdropNULS } from \"./gen/PTokenAirdropNULS\";\r\nimport { DeriVote } from \"./gen/DeriVote.js\";\r\n\r\n// pToken airdrop\r\nexport const PTokenAirdropNULSFactory = contractFactory(\r\n  PTokenAirdropNULSAdapter(PTokenAirdropNULS)\r\n);\r\n\r\n// deri vote\r\nexport const deriVoteFactory = contractFactory(deriVoteAdapter(DeriVote));","import { catchApiError, catchTxApiError, bg } from \"../../shared/utils\";\r\nimport { perpetualPoolLiteFactory } from \"../../v2_lite/factory\";\r\nimport { getPTokenAirdropConfig } from \"../config\"\r\nimport { PTokenAirdropNULSFactory } from \"../contract/factory\"\r\n\r\nexport const isPTokenAirdropped = async (...args) => {\r\n  return catchApiError(async(chainId, accountAddress) => {\r\n    const config = getPTokenAirdropConfig(chainId);\r\n    return await PTokenAirdropNULSFactory(\r\n      chainId,\r\n      config.address\r\n    ).isAirdropPToken(accountAddress);\r\n  }, args, 'isPTokenAirdropped', '')\r\n};\r\n\r\nexport const totalAirdropCount = async (...args) => {\r\n  return catchApiError(async(chainId) => {\r\n    const config = getPTokenAirdropConfig(chainId);\r\n    return await PTokenAirdropNULSFactory(\r\n      chainId,\r\n      config.address\r\n    ).totalAirdropCount();\r\n  }, args, 'totalAirdropCount', '')\r\n};\r\n\r\nexport const isUserPTokenExist = async (...args) => {\r\n  return catchApiError(async (chainId, poolAddress, accountAddress) => {\r\n    let res = '';\r\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n    await pool.init()\r\n    const result = await pool.pToken.balanceOf(accountAddress);\r\n    if (result === '1') {\r\n      res = true;\r\n    } else if (result === '0') {\r\n      res = false;\r\n    }\r\n    return res;\r\n  }, args, 'isUserPTokenExist', '');\r\n};\r\n\r\nexport const isBTokenUnlocked = async(...args) => {\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n    await pool.init()\r\n    return await pool.bToken.isUnlocked(accountAddress, poolAddress)\r\n  }, args, 'isUnlocked', '')\r\n}\r\n\r\nexport const hasRequiredBalance = async(...args) => {\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n    await pool.init()\r\n    const res = await pool.bToken.balanceOf(accountAddress)\r\n    console.log('res', res)\r\n    return bg(res).gte(100)\r\n  }, args, 'hasRequiredBalance', '')\r\n}\r\n\r\n\r\n// tx\r\nexport const unlockBToken = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress];\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\r\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\r\n    await pool.init()\r\n    return await pool.bToken.unlock(accountAddress, poolAddress);\r\n  }, args);\r\n};\r\n\r\nexport const airdropPToken = async (...args) => {\r\n  return catchTxApiError(async (chainId, accountAddress) => {\r\n    const config = getPTokenAirdropConfig(chainId);\r\n    return await PTokenAirdropNULSFactory(\r\n      chainId,\r\n      config.address\r\n    ).airdropPToken(accountAddress);\r\n  }, args);\r\n};\r\n","import { catchApiError, bg, deriToNatural, databaseActivityFactory, toChecksumAddress, DeriEnv, max } from '../../shared';\r\n\r\nconst range = (n) => (new Array(n)).fill(0).map((i,index) => index)\r\n\r\nconst keyPrefix = () => (DeriEnv.get() === 'prod' ? 'TE' : 'TE2');\r\n\r\nexport const getStakingTop10Users = async () => {\r\n  return catchApiError(\r\n    async () => {\r\n      const db = databaseActivityFactory();\r\n      const key = range(10).reduce(\r\n        (acc, i) =>\r\n          acc.concat([\r\n            `${keyPrefix()}.top.${i + 1}.account`,\r\n            `${keyPrefix()}.top.${i + 1}.fee`,\r\n            `${keyPrefix()}.top.${i + 1}.score`,\r\n            `${keyPrefix()}.top.${i + 1}.cont`,\r\n          ]),\r\n        []\r\n      );\r\n      //console.log(key)\r\n      const res = await db.getValues(key)\r\n      //console.log(res)\r\n      if (Array.isArray(res) && res.length === 4 * 10) {\r\n        let result = []\r\n        for (let i = 0; i < res.length; i++) {\r\n          if ((i + 1) % 4 === 0) {\r\n            const info = res.slice(i - 3, i + 1);\r\n            const index = (i + 1) / 4\r\n            result.push({\r\n              no: index,\r\n              userAddr: info[0].slice(0, 42),\r\n              feePaid: deriToNatural(info[1]).toString(),\r\n              score: deriToNatural(info[2]).toString(),\r\n              evgCoeff: deriToNatural(info[1]).eq(0)\r\n                ? '0'\r\n                : bg(info[3]).div(info[1]).toString(),\r\n              rewardBNB:\r\n                index <= 5\r\n                  ? index <= 4\r\n                    ? index <= 3\r\n                      ? index <= 2\r\n                        ? index <= 1\r\n                          ? '200000'\r\n                          : '100000'\r\n                        : '50000'\r\n                      : '35000'\r\n                    : '25000'\r\n                  : '18000',\r\n            });\r\n          }\r\n        }\r\n        return result.filter((r) => r.userAddr !== '0x0000000000000000000000000000000000000000')\r\n      } else {\r\n        return []\r\n      }\r\n    },\r\n    [],\r\n    'getStakingTop10Users',\r\n    [],\r\n  );\r\n};\r\n\r\nexport const getUserStakingInfo = async (accountAddress) => {\r\n  const args = [accountAddress];\r\n  return catchApiError(\r\n    async (accountAddress) => {\r\n      accountAddress = toChecksumAddress(accountAddress)\r\n      const db = databaseActivityFactory();\r\n      const key = [\r\n        `${keyPrefix()}.Q1.cont`,\r\n        `${keyPrefix()}.Q2.cont`,\r\n        `${keyPrefix()}.Q3.cont`,\r\n        `${keyPrefix()}.Q4.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q1.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q2.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q3.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q4.cont`,\r\n        `${keyPrefix()}.${accountAddress}.fee`,\r\n        `${keyPrefix()}.${accountAddress}.coef`,\r\n      ];\r\n      const res = await db.getValues(key)\r\n      const scoreQ1 = bg(res[0]).eq(0) ? '0': bg(10000).times(bg(res[4]).div(res[0]))\r\n      const scoreQ2 = bg(res[1]).eq(0) ? '0': bg(20000).times(bg(res[5]).div(res[1]))\r\n      const scoreQ3 = bg(res[2]).eq(0) ? '0': bg(30000).times(bg(res[6]).div(res[2]))\r\n      const scoreQ4 = bg(res[3]).eq(0) ? '0': bg(50000).times(bg(res[7]).div(res[3]))\r\n\r\n      const coef = deriToNatural(res[9])\r\n      return {\r\n        userAddr: accountAddress,\r\n        feePaid: deriToNatural(res[8]).toString(),\r\n        coef: max(coef, bg(1)).toString(),\r\n        score: bg(scoreQ1).plus(scoreQ2).plus(scoreQ3).plus(scoreQ4).toString()\r\n      }\r\n    },\r\n    args,\r\n    'getUserStakingInfo',\r\n    {\r\n      userAddr: '',\r\n      feePaid: '',\r\n      coef: '',\r\n      score: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getUserStakingReward = async (accountAddress) => {\r\n  const args = [accountAddress];\r\n  return catchApiError(\r\n    async (accountAddress) => {\r\n      accountAddress = toChecksumAddress(accountAddress)\r\n      const db = databaseActivityFactory();\r\n      const key = [\r\n        `${keyPrefix()}.Q1.cont`,\r\n        `${keyPrefix()}.Q2.cont`,\r\n        `${keyPrefix()}.Q3.cont`,\r\n        `${keyPrefix()}.Q4.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q1.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q2.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q3.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q4.cont`,\r\n        `${keyPrefix()}.top.1.account`,\r\n        `${keyPrefix()}.top.2.account`,\r\n        `${keyPrefix()}.top.3.account`,\r\n        `${keyPrefix()}.top.4.account`,\r\n        `${keyPrefix()}.top.5.account`,\r\n        `${keyPrefix()}.top.6.account`,\r\n        `${keyPrefix()}.top.7.account`,\r\n        `${keyPrefix()}.top.8.account`,\r\n        `${keyPrefix()}.top.9.account`,\r\n        `${keyPrefix()}.top.10.account`,\r\n      ];\r\n      const res = await db.getValues(key);\r\n      const scoreQ1 = bg(res[0]).eq(0) ? '0': bg(10000).times(bg(res[4]).div(res[0]))\r\n      const scoreQ2 = bg(res[1]).eq(0) ? '0': bg(20000).times(bg(res[5]).div(res[1]))\r\n      const scoreQ3 = bg(res[2]).eq(0) ? '0': bg(30000).times(bg(res[6]).div(res[2]))\r\n      const scoreQ4 = bg(res[3]).eq(0) ? '0': bg(50000).times(bg(res[7]).div(res[3]))\r\n      const score = bg(scoreQ1).plus(scoreQ2).plus(scoreQ3).plus(scoreQ4);\r\n      const rewardDERI = bg(1000000).times(bg(score).div(110000)).toString();\r\n\r\n      const topUsers = res.slice(8).map((u) => toChecksumAddress(u.slice(0, 42)));\r\n      let rewardBNB = '0';\r\n      if (topUsers.includes(accountAddress)) {\r\n        if (accountAddress === topUsers[0]) {\r\n          rewardBNB = '200000';\r\n        } else if (accountAddress === topUsers[1]) {\r\n          rewardBNB = '100000';\r\n        } else if (accountAddress === topUsers[2]) {\r\n          rewardBNB = '50000';\r\n        } else if (accountAddress === topUsers[3]) {\r\n          rewardBNB = '35000';\r\n        } else if (accountAddress === topUsers[4]) {\r\n          rewardBNB = '25000';\r\n        } else {\r\n          rewardBNB = '18000';\r\n        }\r\n      }\r\n      return {\r\n        userAddr: accountAddress,\r\n        rewardBNB,\r\n        rewardDERI,\r\n      };\r\n    },\r\n    args,\r\n    'getUserStakingReward',\r\n    { userAddr: '', rewardBNB: '', rewardDERI: '' }\r\n  );\r\n};\r\n\r\nexport const getUserStakingContribution = async (accountAddress) => {\r\n  const args = [accountAddress];\r\n  return catchApiError(\r\n    async (accountAddress) => {\r\n      accountAddress = toChecksumAddress(accountAddress);\r\n      const db = databaseActivityFactory();\r\n      const key = [\r\n        `${keyPrefix()}.Q1.cont`,\r\n        `${keyPrefix()}.Q2.cont`,\r\n        `${keyPrefix()}.Q3.cont`,\r\n        `${keyPrefix()}.Q4.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q1.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q2.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q3.cont`,\r\n        `${keyPrefix()}.${accountAddress}.Q4.cont`,\r\n      ];\r\n      const res = await db.getValues(key);\r\n      const scoreQ1 = bg(res[0]).eq(0) ? '0': bg(10000).times(bg(res[4]).div(res[0]))\r\n      const scoreQ2 = bg(res[1]).eq(0) ? '0': bg(20000).times(bg(res[5]).div(res[1]))\r\n      const scoreQ3 = bg(res[2]).eq(0) ? '0': bg(30000).times(bg(res[6]).div(res[2]))\r\n      const scoreQ4 = bg(res[3]).eq(0) ? '0': bg(50000).times(bg(res[7]).div(res[3]))\r\n\r\n      return {\r\n        userAddr: accountAddress,\r\n        totalContrib: deriToNatural(\r\n          bg(res[0]).plus(res[1]).plus(res[2]).plus(res[3])\r\n        ).toString(),\r\n        userContrib: deriToNatural(\r\n          bg(res[4]).plus(res[5]).plus(res[6]).plus(res[7])\r\n        ).toString(),\r\n        Q1Contrib: deriToNatural(res[0]).toString(),\r\n        Q2Contrib: deriToNatural(res[1]).toString(),\r\n        Q3Contrib: deriToNatural(res[2]).toString(),\r\n        Q4Contrib: deriToNatural(res[3]).toString(),\r\n        userQ1Contrib: deriToNatural(res[4]).toString(),\r\n        userQ2Contrib: deriToNatural(res[5]).toString(),\r\n        userQ3Contrib: deriToNatural(res[6]).toString(),\r\n        userQ4Contrib: deriToNatural(res[7]).toString(),\r\n        userQ1Point: scoreQ1.toString(),\r\n        userQ2Point: scoreQ2.toString(),\r\n        userQ3Point: scoreQ3.toString(),\r\n        userQ4Point: scoreQ4.toString(),\r\n      };\r\n    },\r\n    args,\r\n    'getUserStakingContribution',\r\n    { userAddr: '', totalContrib: '', userContrib: '' }\r\n  );\r\n};","import { catchApiError, catchTxApiError, DeriEnv, fromWei, hexToNumberString, toChecksumAddress } from \"../../shared\";\r\nimport { databaseDeriVoteFactory } from \"../../shared/factory/database\";\r\nimport { getDeriVoteConfig } from \"../config\";\r\nimport { deriVoteFactory } from \"../contract/factory\";\r\n\r\nconst votingId = '2'\r\nconst keyPrefix = () => (DeriEnv.get() === 'prod' ? `VID${votingId}` : 'VID1');\r\n\r\n\r\nexport const getVotingResult = async() => {\r\n  return catchApiError(\r\n    async () => {\r\n      const db = databaseDeriVoteFactory();\r\n      const keys = [\r\n        `${keyPrefix()}.OP1.count`,\r\n        `${keyPrefix()}.OP2.count`,\r\n        `${keyPrefix()}.OP3.count`,\r\n      ];\r\n      const res = await db.getValues(keys);\r\n      return res.map((v) => fromWei(hexToNumberString(v)));\r\n    },\r\n    [],\r\n    'getOptionsVotingPowers',\r\n    ['', '', '']\r\n  );\r\n}\r\n\r\nexport const getUserVotingPower = async(accountAddress) => {\r\n  return catchApiError(async() => {\r\n    accountAddress = toChecksumAddress(accountAddress)\r\n    const db = databaseDeriVoteFactory()\r\n    const keys = [\r\n      `${keyPrefix()}.${accountAddress}.count`,\r\n    ]\r\n    const res = await db.getValues(keys)\r\n    return res.map((v) => fromWei(hexToNumberString(v)))[0]\r\n  }, [accountAddress], 'getUserVotingPowers', '')\r\n}\r\n\r\n\r\nexport const getUserVotingResult = async (accountAddress) => {\r\n  const args = [accountAddress];\r\n  return catchApiError(\r\n    async () => {\r\n      accountAddress = toChecksumAddress(accountAddress);\r\n      const db = databaseDeriVoteFactory();\r\n      const keys = [\r\n        `${keyPrefix()}.${accountAddress}.count`,\r\n        `${keyPrefix()}.${accountAddress}.option`,\r\n        `${keyPrefix()}.${accountAddress}.timestamp`,\r\n      ];\r\n      const res = await db.getValues(keys);\r\n      return {\r\n        votingPower: fromWei(hexToNumberString(res[0])),\r\n        option: hexToNumberString(res[1]),\r\n        timestamp: hexToNumberString(res[2]),\r\n      };\r\n    },\r\n    args,\r\n    'getVoteResult',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const vote = async(chainId, accountAddress, votingOption) => {\r\n  const args = [chainId, accountAddress, votingOption]\r\n  return catchTxApiError(async() => {\r\n    chainId = chainId.toString()\r\n    accountAddress = toChecksumAddress(accountAddress)\r\n    const config = getDeriVoteConfig(chainId)\r\n    const deriVote = deriVoteFactory(chainId, config.address)\r\n    const voteId = await deriVote.votingId()\r\n    if (voteId !== votingId) {\r\n      throw new Error(\r\n        `Deri Vote: votingId is not match (${votingId} !== ${voteId}) `\r\n      );\r\n    }\r\n    return await deriVote.vote(accountAddress, votingOption)\r\n  }, args)\r\n}","import {\r\n  DeriEnv,\r\n  getPoolConfigList as getPoolV2ConfigList,\r\n  getPoolV1ConfigList,\r\n  VERSIONS,\r\n} from '../shared/config';\r\nimport { getJsonConfig } from '../shared/config/config';\r\nimport { ALL_EXCEPT_OPEN_VERSIONS } from '../shared/config/version';\r\n\r\nexport const getContractAddressConfig = (env, version) => {\r\n  env = env || DeriEnv.get()\r\n  if (version === 'v1') {\r\n    return getPoolV1ConfigList(env);\r\n  } else if (VERSIONS.includes(version)) {\r\n    return getPoolV2ConfigList(version, env);\r\n  } else if (version === undefined) {\r\n    return ALL_EXCEPT_OPEN_VERSIONS.reduce((acc, v) => [...acc, ...getPoolV2ConfigList(v, env)], [])\r\n  } else {\r\n    throw new Error(`getContractAddressConfig: invalid version: ${version}`);\r\n  }\r\n};\r\n\r\nexport const getPoolConfigList = (env) => {\r\n  env = env || DeriEnv.get();\r\n  return ALL_EXCEPT_OPEN_VERSIONS.reduce((acc, v) => {\r\n    let res = []\r\n    const config = getJsonConfig(v, env);\r\n    if (config && config.pools) {\r\n      res = config.pools.map((p) => {\r\n        p.version = v\r\n        return p\r\n      })\r\n    }\r\n    return [...acc, ...res];\r\n  }, []);\r\n};\r\n","import {\r\n  getPoolConfig2,\r\n  getPoolBTokenIdList,\r\n  getPoolSymbolIdList,\r\n} from '../../shared/config';\r\nimport { databaseFactory } from '../../shared/factory';\r\nimport { bg, deriToNatural, getNetworkName } from '../../shared/utils';\r\nimport { lTokenFactory, perpetualPoolFactory } from '../factory';\r\nimport { calculateMaxRemovableLiquidity } from '../calculation';\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  try {\r\n    const { lToken: lTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const lToken = lTokenFactory(chainId, lTokenAddress);\r\n\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n    const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n\r\n    const [parameterInfo, bTokenInfo, lTokenAsset] = await Promise.all([\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getBToken(bTokenId),\r\n      lToken.getAsset(accountAddress, bTokenId),\r\n    ]);\r\n    const { minPoolMarginRatio } = parameterInfo;\r\n    let promises = [];\r\n    for (let i = 0; i < bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n    }\r\n    const bTokens = await Promise.all(promises);\r\n\r\n    promises = [];\r\n    for (let i = 0; i < symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n    }\r\n    const symbols = await Promise.all(promises);\r\n\r\n    const cost = symbols.reduce((accum, s) => {\r\n      return accum.plus(\r\n        bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\r\n      );\r\n    }, bg(0));\r\n    const totalPnl = symbols.reduce((accum, s) => {\r\n      return accum.plus(\r\n        bg(s.tradersNetVolume)\r\n          .times(s.price)\r\n          .times(s.multiplier)\r\n          .minus(s.tradersNetCost)\r\n      );\r\n    }, bg(0));\r\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\r\n      if (index === parseInt(bTokenId)) {\r\n        return accum.plus(b.pnl);\r\n      } else {\r\n        return accum.plus(\r\n          bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\r\n        );\r\n      }\r\n    }, bg(0));\r\n\r\n    const { liquidity: poolLiquidity } = bTokenInfo;\r\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset;\r\n    const maxRemovableShares = calculateMaxRemovableLiquidity(\r\n      bTokens[bTokenId],\r\n      liquidity,\r\n      cost,\r\n      totalPnl,\r\n      restLiquidity,\r\n      minPoolMarginRatio\r\n    );\r\n    const approximatePnl = pnl.plus(\r\n      bg(bTokens[bTokenId].cumulativePnl)\r\n        .minus(lastCumulativePnl)\r\n        .times(liquidity)\r\n    );\r\n    return {\r\n      //totalSupply: lTokenTotalSupply.toString(),\r\n      poolLiquidity: poolLiquidity.toString(),\r\n      // shares: liquidity.toString(),\r\n      // shareValue: '1',\r\n      // maxRemovableShares: liquidity.toString()\r\n      shares: liquidity.toString(),\r\n      pnl: approximatePnl.div(bTokens[bTokenId].price).toString(),\r\n      maxRemovableShares: maxRemovableShares.toString(),\r\n    };\r\n  } catch (err) {\r\n    console.log(`${err}`);\r\n  }\r\n  return {\r\n    poolLiquidity: '',\r\n    shares: '',\r\n    pnl: '',\r\n    maxRemovableShares: '',\r\n  };\r\n};\r\n\r\nexport const getPoolLiquidity = async (chainId, poolAddress, bTokenId) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity${bTokenId}`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        symbol: '',\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`);\r\n  }\r\n  return {\r\n    liquidity: '',\r\n    symbol: '',\r\n  };\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy${bTokenId}`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n        `${poolNetwork}.${poolAddress}.V2.multiplier${bTokenId}`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h, multiplier] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n        multiplier: deriToNatural(multiplier).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`);\r\n  }\r\n};\r\n","import { getPriceInfo } from '../../shared/utils/oracle';\r\nimport {\r\n  getPoolBTokenIdList,\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n} from '../../shared/config';\r\nimport {\r\n  perpetualPoolRouterFactory,\r\n  perpetualPoolFactory,\r\n  lTokenFactory,\r\n} from '../factory';\r\nimport { isBToken0RatioValid, isPoolMarginRatioValid } from '../calculation';\r\n\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\r\n  const validation = isBToken0RatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    minBToken0Ratio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.addLiquidity(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress);\r\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\r\n  const { liquidity: userLiquidity } = lTokenAsset;\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  promises = [];\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\r\n  const validation = isPoolMarginRatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    userLiquidity,\r\n    symbols,\r\n    minPoolMarginRatio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.removeLiquidity(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount,\r\n        isMaximum\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const addLiquidityWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\r\n  const validation = isBToken0RatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    minBToken0Ratio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      const promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.addLiquidityWithPrices(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount,\r\n        priceInfos\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const removeLiquidityWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n\r\n  const lToken = lTokenFactory(chainId, lTokenAddress);\r\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\r\n  const { liquidity: userLiquidity } = lTokenAsset;\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  promises = [];\r\n\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\r\n\r\n  const validation = isPoolMarginRatioValid(\r\n    bTokens,\r\n    bTokenId,\r\n    amount,\r\n    userLiquidity,\r\n    symbols,\r\n    minPoolMarginRatio\r\n  );\r\n  let res;\r\n  if (validation.success) {\r\n    try {\r\n      promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.removeLiquidityWithPrices(\r\n        accountAddress,\r\n        bTokenId,\r\n        amount,\r\n        priceInfos,\r\n        isMaximum\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: validation.error };\r\n  }\r\n  return res;\r\n};\r\n","import { bTokenFactory } from '../../shared/factory';\r\nimport {\r\n  getPoolBTokenIdList,\r\n  getPoolBTokenList,\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n  getPoolSymbolList,\r\n} from '../../shared/config';\r\nimport { bg, min, max } from '../../shared/utils'\r\nimport { getOraclePrice } from '../../shared/utils/oracle'\r\nimport { getIndexInfo } from '../../shared/config/token';\r\nimport { fundingRateCache, liquidatePriceCache, priceCache } from '../../shared/api/api_globals';\r\nimport {\r\n  calculateEntryPrice,\r\n  calculateLiquidationPrice,\r\n  calculateFundingRate,\r\n  calculateFundingFee,\r\n  processFundingRate,\r\n} from '../calculation';\r\nimport { perpetualPoolFactory, pTokenFactory } from '../factory';\r\n\r\nexport const getSpecification = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    const {symbol } = getPoolConfig2(poolAddress, undefined, symbolId)\r\n    const bTokens = getPoolBTokenList(poolAddress)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const [symbolInfo, parameterInfo] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n    ])\r\n    const bTokenDiscounts = (await Promise.all(\r\n      bTokens.reduce(\r\n        (acc, b, index) =>\r\n          acc.concat([perpetualPool.getBToken(index.toString())]),\r\n        []\r\n      )\r\n    )).map((b) => b.discount);\r\n    const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\r\n    const {\r\n      minPoolMarginRatio,\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n    } = parameterInfo\r\n    return {\r\n      symbol: symbol,\r\n      bTokenSymbol: bTokens.map((b) => b.bTokenSymbol),\r\n      bTokenMultiplier: bTokenDiscounts.map((b) => b.toString()),\r\n      multiplier: multiplier.toString(),\r\n      feeRatio: feeRatio.toString(),\r\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\r\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\r\n      //minAddLiquidity: minAddLiquidity.toString(),\r\n      //redemptionFeeRatio: redemptionFeeRatio.toString(),\r\n      minLiquidationReward: minLiquidationReward.toString(),\r\n      maxLiquidationReward: maxLiquidationReward.toString(),\r\n      liquidationCutRatio: liquidationCutRatio.toString(),\r\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\r\n      indexConstituents: getIndexInfo(symbol)\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    symbol: '',\r\n    bTokenSymbol: [],\r\n    bTokenMultiplier: [],\r\n    multiplier: '',\r\n    feeRatio: '',\r\n    fundingRateCoefficient: '',\r\n    minPoolMarginRatio: '',\r\n    minInitialMarginRatio: '',\r\n    minMaintenanceMarginRatio: '',\r\n    minLiquidationReward: '',\r\n    maxLiquidationReward: '',\r\n    liquidationCutRatio: '',\r\n    protocolFeeCollectRatio: '',\r\n    indexConstituents: { url: '', tokens: [] },\r\n  };\r\n};\r\n\r\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\r\n  try {\r\n    const symbolConfigList = getPoolSymbolList(poolAddress)\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\r\n    const symbolList = symbolConfigList.map((i) => i.symbol)\r\n    //console.log('bTokenList', bTokenList)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    const [symbolInfo, parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margins, positions, latestPrice] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getLastUpdatedBlockNumber(),\r\n      perpetualPool.getLatestBlockNumber(),\r\n      pToken.getPosition(accountAddress, symbolId),\r\n      pToken.getMargins(accountAddress),\r\n      pToken.getPositions(accountAddress),\r\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)])\r\n    ])\r\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\r\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\r\n    const {\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n    } = parameterInfo\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const margin = bTokens.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n    }, bg(0))\r\n\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    promises = []\r\n    for (let i=0; i<symbolList.length; i++) {\r\n      promises.push(getOraclePrice(chainId, symbolList[i]))\r\n    }\r\n    const symbolPrices = await Promise.all(promises)\r\n    const price = symbolPrices[symbolId]\r\n    priceCache.set(poolAddress, symbolId, price)\r\n    const marginHeld = symbols.reduce((accum, s, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\r\n    }, bg(0))\r\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[symbolId]).times(minInitialMarginRatio)\r\n    //console.log('margin', margin.toString(), marginHeld.toString())\r\n    //\r\n    //const unrealizedPnl = bg(positions[symbolId].volume).times(price).times(multiplier).minus(positions[symbolId].cost)\r\n    const unrealizedPnl = symbols.reduce((accum, s, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n    }, bg(0))\r\n    const unrealizedPnlList = symbols.map((s, index) => {\r\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\r\n    })\r\n\r\n    const totalCost = positions.reduce((accum, a) => {\r\n      return accum.plus(bg(a.cost))\r\n    }, bg(0))\r\n    const dynamicCost = symbols.reduce((accum, s, index) => {\r\n      if (index !== parseInt(symbolId)) {\r\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\r\n      } else {\r\n        return accum\r\n      }\r\n    }, bg(0))\r\n    //console.log('cost', costTotal.toString())\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n    const fundingFee = calculateFundingFee(\r\n      tradersNetVolume,\r\n      latestPrice,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      liquidity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    );\r\n\r\n    // set liquidatePrice cache\r\n    liquidatePriceCache.set(poolAddress, {\r\n      volume,\r\n      margin,\r\n      totalCost,\r\n      dynamicCost,\r\n      price,\r\n      multiplier,\r\n      minMaintenanceMarginRatio,\r\n    });\r\n  return {\r\n      price: price,\r\n      volume: bg(volume).times(multiplier).toString(),\r\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\r\n      margin: margin.toString(),\r\n      marginHeld: marginHeld.toString(),\r\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n      unrealizedPnl: unrealizedPnl.toString(),\r\n      unrealizedPnlList,\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        multiplier,\r\n        minMaintenanceMarginRatio\r\n      ).toString(),\r\n      fundingFee: fundingFee.toString()\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    volume: '',\r\n    averageEntryPrice: '',\r\n    margin: '',\r\n    marginHeld: '',\r\n    unrealizedPnl: '',\r\n    liquidationPrice: '',\r\n  };\r\n}\r\n\r\nexport const getPositionInfos = async (chainId, poolAddress, accountAddress) => {\r\n  try {\r\n    const symbolConfigList = getPoolSymbolList(poolAddress)\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\r\n    const symbolList = symbolConfigList.map((i) => i.symbol)\r\n    //console.log('bTokenList', bTokenList)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, '0')\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    const [parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, margins, positions] = await Promise.all([\r\n      //perpetualPool.getSymbol(symbolId),\r\n      perpetualPool.getParameters(),\r\n      perpetualPool.getLastUpdatedBlockNumber(),\r\n      perpetualPool.getLatestBlockNumber(),\r\n      //pToken.getPosition(accountAddress, symbolId),\r\n      pToken.getMargins(accountAddress),\r\n      pToken.getPositions(accountAddress),\r\n      //getOraclePrice(chainId, symbolList[parseInt(symbolId)])\r\n    ])\r\n    const {\r\n      minInitialMarginRatio,\r\n      minMaintenanceMarginRatio,\r\n    } = parameterInfo\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    promises = []\r\n    for (let i=0; i<symbolList.length; i++) {\r\n      promises.push(getOraclePrice(chainId, symbolList[i]))\r\n    }\r\n    const symbolPrices = await Promise.all(promises)\r\n\r\n    const margin = bTokens.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n    }, bg(0))\r\n\r\n    const marginHeld = symbols.reduce((accum, s, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\r\n    }, bg(0))\r\n    //\r\n    // const unrealizedPnlList = symbols.map((s, index) => {\r\n    //   return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\r\n    // })\r\n\r\n    //console.log('cost', costTotal.toString())\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n\r\n    return positions.map((p, index) => {\r\n      const symbol = symbols[index]\r\n      const symbolId = symbolIdList[index]\r\n      const price = symbolPrices[index]\r\n      priceCache.set(poolAddress, symbolId, price)\r\n      const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbol\r\n      const { volume, cost, lastCumulativeFundingRate } = p\r\n      const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[index]).times(minInitialMarginRatio)\r\n      const unrealizedPnl = bg(symbolPrices[index]).times(symbol.multiplier).times(p.volume).minus(p.cost)\r\n      const totalCost = positions.reduce((accum, a) => {\r\n        return accum.plus(bg(a.cost))\r\n      }, bg(0))\r\n      const dynamicCost = symbols.reduce((accum, s, idx) => {\r\n        if (idx !== index) {\r\n          return accum.plus(bg(positions[idx].volume).times(symbolPrices[idx]).times(s.multiplier))\r\n        } else {\r\n          return accum\r\n        }\r\n      }, bg(0))\r\n      const fundingFee = calculateFundingFee(\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        liquidity,\r\n        cumulativeFundingRate,\r\n        lastCumulativeFundingRate,\r\n        lastUpdatedBlockNumber,\r\n        latestBlockNumber,\r\n        volume,\r\n      );\r\n      return {\r\n        symbol: symbol.symbol,\r\n        symbolId: index.toString(),\r\n        price: symbolPrices[index],\r\n        volume: bg(p.volume).times(multiplier).toString(),\r\n        averageEntryPrice: calculateEntryPrice(p.volume, cost, multiplier).toString(),\r\n        margin: margin.toString(),\r\n        marginHeld: marginHeld.toString(),\r\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n        //unrealizedPnlList,\r\n        unrealizedPnl: unrealizedPnl.toString(),\r\n        liquidationPrice: calculateLiquidationPrice(\r\n          volume,\r\n          margin,\r\n          totalCost,\r\n          dynamicCost,\r\n          multiplier,\r\n          minMaintenanceMarginRatio\r\n        ).toString(),\r\n        fundingFee: fundingFee.toString()\r\n      };\r\n    }).filter((p) => p.volume !== '0')\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return []\r\n}\r\n\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  try {\r\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\r\n    return balance.toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return '';\r\n}\r\n\r\nexport const getEstimatedLiquidatePrice = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let {\r\n      volume,\r\n      margin,\r\n      totalCost,\r\n      dynamicCost,\r\n      price,\r\n      multiplier,\r\n      minMaintenanceMarginRatio,\r\n    } = liquidatePriceCache.get(poolAddress);\r\n    totalCost = bg(totalCost).plus(bg(newVolume).times(price).times(multiplier))\r\n    //console.log(totalCost.toString())\r\n    return calculateLiquidationPrice(\r\n      bg(volume).plus(newVolume),\r\n      margin,\r\n      totalCost,\r\n      dynamicCost,\r\n      multiplier,\r\n      minMaintenanceMarginRatio\r\n    ).toString();\r\n  } catch (err) {\r\n    console.log(`${err}`);\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => {\r\n  try {\r\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress)\r\n    return await bToken.isUnlocked(accountAddress, poolAddress)\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return false\r\n}\r\n\r\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\r\n  try {\r\n    let price = priceCache.get(poolAddress, symbolId)\r\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n    if (!price) {\r\n      //price = await getOraclePrice(poolAddress, symbolId)\r\n      price = await getOraclePrice(chainId, symbol)\r\n      priceCache.set(poolAddress, symbolId, price)\r\n    }\r\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!cache || !cache.multiplier) {\r\n      await _getFundingRate(chainId, poolAddress, symbolId)\r\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    }\r\n    const { multiplier, feeRatio } = cache;\r\n    //console.log(volume, price, multiplier, feeRatio)\r\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return ''\r\n}\r\n\r\nexport const getEstimatedMargin = async(\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const [price, symbolInfo ] = await Promise.all([\r\n      //getOraclePrice(poolAddress, symbolId),\r\n      getOraclePrice(chainId, symbol),\r\n      perpetualPool.getSymbol(symbolId),\r\n    ])\r\n    priceCache.set(poolAddress, symbolId, price)\r\n    const {multiplier} = symbolInfo\r\n    //console.log('m',multiplier.toString())\r\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return ''\r\n}\r\n\r\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\r\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\r\n}\r\n\r\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n  const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\r\n  let bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n  let promiseList = []\r\n  for (let i=0; i<bTokenIdList.length; i++) {\r\n    promiseList.push(perpetualPool.getBToken(i))\r\n  }\r\n  const bTokenInfoList = await Promise.all(promiseList)\r\n  const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n  //const pnl = bTokenInfoList.reduce((accum, i) => accum.plus(i.pnl), bg(0))\r\n  //console.log('pnl', pnl.toString())\r\n\r\n  const [price, symbolInfo, parameterInfo ] = await Promise.all([\r\n    //getOraclePrice(poolAddress, symbolId),\r\n    getOraclePrice(chainId, symbol),\r\n    perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n  ])\r\n  priceCache.set(poolAddress, symbolId, price)\r\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\r\n  const { minPoolMarginRatio } = parameterInfo;\r\n  const fundingRateArgs = [\r\n    tradersNetVolume,\r\n    price,\r\n    multiplier,\r\n    liquidity,\r\n    fundingRateCoefficient,\r\n  ]\r\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\r\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\r\n  // const liquidityUsedArgs = [\r\n  //   tradersNetVolume,\r\n  //   price,\r\n  //   multiplier,\r\n  //   liquidity,\r\n  //   minPoolMarginRatio,\r\n  // ]\r\n  let symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  let promises = []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  const symbols = await Promise.all(promises)\r\n  //console.log('margin', margin.toString(), marginHeld.toString())\r\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\r\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\r\n  }, bg(0))\r\n\r\n  //const liquidityUsed = liquidityUsedInAmount.div(liquidity)\r\n  const res = {\r\n    price,\r\n    multiplier: multiplier.toString(),\r\n    feeRatio: feeRatio.toString(),\r\n    tradersNetVolume: tradersNetVolume.toString(),\r\n    liquidity: liquidity.toString(),\r\n    //pnl: pnl.toString(),\r\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\r\n    fundingRatePerBlock: fundingRatePerBlock,\r\n    fundingRate: fundingRate,\r\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\r\n  }\r\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\r\n  return res\r\n}\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  try {\r\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    const { fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume, multiplier } = res\r\n    return {\r\n      fundingRate0: fundingRate.times(100).toString(),\r\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\r\n      liquidity: liquidity.toString(),\r\n      volume: '-',\r\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString()\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    fundingRate0: '',\r\n    fundingRatePerBlock: '',\r\n    liquidity: '',\r\n    volume: '',\r\n    tradersNetVolume: '',\r\n  };\r\n}\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    const args = [\r\n      bg(res.tradersNetVolume).plus(newNetVolume).toString(),\r\n      res.price,\r\n      res.multiplier,\r\n      res.liquidity,\r\n      res.fundingRateCoefficient,\r\n    ]\r\n    let fundingRate1 = calculateFundingRate(...args)\r\n    fundingRate1 = processFundingRate(chainId, fundingRate1)\r\n    return {\r\n      fundingRate1: fundingRate1.times(100).toString()\r\n    }\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    fundingRate1: '',\r\n  }\r\n}\r\n\r\nexport const getLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    return {\r\n      liquidityUsed0: res.liquidityUsed.times(100).toString(),\r\n    };\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidityUsed0: '',\r\n  }\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId,\r\n) => {\r\n  try {\r\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\r\n    if (!res) {\r\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\r\n    }\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n    // const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    // const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    // const { volume } = pToken.getPosition(accountAddress, symbolId);\r\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\r\n    let promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    let liquidityUsed0 = symbols.reduce((accum, a, index) => {\r\n      if (index === parseInt(symbolId)) {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume.plus(newNetVolume)).abs())\r\n      } else {\r\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume).abs())\r\n      }\r\n    }, bg(0))\r\n    //liquidityUsed0 = liquidityUsed0.times(res.minPoolMarginRatio)\r\n    //const liquidityUsed = bg(newNetVolume).times(res.price).times(res.multiplier).times(res.minPoolMarginRatio).div(res.liquidity)\r\n    const liquidityUsed1 = liquidityUsed0.times(res.minPoolMarginRatio).div(res.liquidity)\r\n    return {\r\n      liquidityUsed1: liquidityUsed1.times(100).toString()\r\n    }\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return {\r\n    liquidityUsed1: '',\r\n  }\r\n}\r\n\r\n\r\nexport const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n  try {\r\n    let bTokenList = getPoolBTokenList(poolAddress)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    // let bTokenList = bTokensConfigList.map((i) => {\r\n    //   return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\r\n    // })\r\n    let promiseList = []\r\n    for (let i=0; i<bTokenList.length; i++) {\r\n      promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress).balanceOf(accountAddress))\r\n    }\r\n    const resultList = await Promise.all(promiseList)\r\n    for (let i=0; i<bTokenList.length; i++) {\r\n      bTokenList[i].walletBalance = resultList[i].toString()\r\n    }\r\n\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n    const [margins, positions, parameterInfo] = await Promise.all([\r\n      pToken.getMargins(accountAddress),\r\n      pToken.getPositions(accountAddress),\r\n      perpetualPool.getParameters(),\r\n    ]);\r\n    const { minInitialMarginRatio } = parameterInfo;\r\n\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const margin = bTokens.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n    }, bg(0))\r\n    //console.log('margin', margin.toString())\r\n\r\n    promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n\r\n    promises = []\r\n    const symbolList = symbols.map((s) => s.symbol)\r\n    for (let i=0; i< symbols.length; i++) {\r\n      promises.push(getOraclePrice(chainId, symbolList[i]))\r\n    }\r\n    const symbolPrices = await Promise.all(promises)\r\n    //console.log(symbolPrices)\r\n\r\n    const marginHeld = symbols.reduce((accum, a, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(a.multiplier).times(positions[index].volume).abs().times(minInitialMarginRatio))\r\n    }, bg(0))\r\n    //console.log('marginHeld', marginHeld.toString())\r\n\r\n    const pnl = symbols.reduce((accum, a, index) => {\r\n      return accum.plus(bg(symbolPrices[index]).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\r\n    }, bg(0))\r\n    //console.log('pnl', pnl.toString())\r\n\r\n    bTokenList = bTokenList.map((i, index) => {\r\n      if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\r\n        i.availableBalance = max(min(margin.minus(marginHeld).plus(pnl).div(bTokens[index].price).div(bTokens[index].discount), margins[index]), bg(0)).toString()\r\n      } else {\r\n        i.availableBalance = '-'\r\n      }\r\n      return i\r\n    })\r\n    return bTokenList\r\n  } catch(err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return []\r\n}\r\n\r\nexport const getFundingFee = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n    const symbolConfigList = getPoolSymbolList(poolAddress)\r\n    const symbolList = symbolConfigList.map((i) => i.symbol)\r\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const pToken = pTokenFactory(chainId, pTokenAddress);\r\n    const [symbolInfo, positionInfo, price, lastUpdatedBlockNumber, latestBlockNumber] = await Promise.all([\r\n      perpetualPool.getSymbol(symbolId),\r\n      pToken.getPosition(accountAddress, symbolId),\r\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)]),\r\n      perpetualPool.getLastUpdatedBlockNumber(),\r\n      perpetualPool.getLatestBlockNumber(),\r\n    ])\r\n    const { volume, lastCumulativeFundingRate } = positionInfo\r\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate, } = symbolInfo;\r\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\r\n    let promises = []\r\n    for (let i=0; i<bTokenIdList.length; i++) {\r\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\r\n    }\r\n    const bTokens = await Promise.all(promises)\r\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\r\n    const fundingFee = calculateFundingFee(\r\n      tradersNetVolume,\r\n      price,\r\n      multiplier,\r\n      fundingRateCoefficient,\r\n      liquidity,\r\n      cumulativeFundingRate,\r\n      lastCumulativeFundingRate,\r\n      lastUpdatedBlockNumber,\r\n      latestBlockNumber,\r\n      volume,\r\n    );\r\n  return fundingFee.toString()\r\n}\r\n","import {\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n  getPoolBTokenIdList,\r\n} from '../../shared/config';\r\nimport { bg } from '../../shared/utils';\r\nimport { getPriceInfo } from '../../shared/utils/oracle';\r\nimport { bTokenFactory } from '../../shared/factory';\r\nimport { isOrderValid } from '../calculation';\r\nimport {\r\n  perpetualPoolRouterFactory,\r\n  pTokenFactory,\r\n  perpetualPoolFactory,\r\n} from '../factory';\r\n\r\nexport const unlock = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const tx = await perpetualPoolRouter.addMargin(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const tx = await perpetualPoolRouter.removeMargin(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount,\r\n      isMaximum\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  const [parameterInfo, positions] = await Promise.all([\r\n    //  getOraclePrice(poolAddress, symbolId),\r\n    //  perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n    pToken.getPositions(accountAddress),\r\n    //pToken.getMargin(accountAddress, symbolId),\r\n  ]);\r\n\r\n  //const { multiplier } = symbolInfo;\r\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  const margins = await pToken.getMargins(accountAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const margin = bTokens.reduce((accum, i, index) => {\r\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\r\n  }, bg(0));\r\n\r\n  const liquidity = bTokens.reduce(\r\n    (accum, i) =>\r\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\r\n    bg(0)\r\n  );\r\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  promises = [];\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  let marginHeld = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.price)\r\n          .times(a.multiplier)\r\n          .times(positions[index].volume.plus(newVolume))\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  marginHeld = marginHeld.times(minInitialMarginRatio);\r\n\r\n  //console.log('margin', margin.toString(), marginHeld.toString())\r\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume)\r\n          .plus(newVolume)\r\n          .times(a.price)\r\n          .times(a.multiplier)\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n  //console.log('liquidityUsed', liquidityUsed.toString())\r\n\r\n  const orderValidation = isOrderValid(\r\n    //price,\r\n    margin,\r\n    marginHeld,\r\n    liquidity,\r\n    liquidityUsed\r\n    //multiplier,\r\n    //minPoolMarginRatio,\r\n    //bg(newVolume),\r\n  );\r\n  let res;\r\n  if (orderValidation.success) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.trade(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: orderValidation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n  const newVolume = volume.negated();\r\n  let res;\r\n  if (!volume.eq(0)) {\r\n    try {\r\n      const tx = await perpetualPoolRouter.trade(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const depositMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const promises = symbolIdList.map(async (s) => {\r\n      return await getPriceInfo(s);\r\n    });\r\n    const prices = await Promise.all(promises);\r\n    const priceInfos = prices.map((p, index) => {\r\n      return [\r\n        symbolIdList[index],\r\n        p.timestamp,\r\n        p.price,\r\n        parseInt(p.v).toString(),\r\n        p.r,\r\n        p.s,\r\n      ];\r\n    });\r\n    const tx = await perpetualPoolRouter.addMarginWithPrices(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount,\r\n      priceInfos\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const withdrawMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  let res;\r\n  try {\r\n    const promises = symbolIdList.map(async (s) => {\r\n      return await getPriceInfo(s);\r\n    });\r\n    const prices = await Promise.all(promises);\r\n    const priceInfos = prices.map((p, index) => {\r\n      return [\r\n        symbolIdList[index],\r\n        p.timestamp,\r\n        p.price,\r\n        parseInt(p.v).toString(),\r\n        p.r,\r\n        p.s,\r\n      ];\r\n    });\r\n    const tx = await perpetualPoolRouter.removeMarginWithPrices(\r\n      accountAddress,\r\n      bTokenId,\r\n      amount,\r\n      priceInfos,\r\n      isMaximum\r\n    );\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const tradeWithMarginWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  //const [price, symbolInfo, parameterInfo, positions] = await Promise.all([\r\n  const [parameterInfo, positions] = await Promise.all([\r\n    //  getOraclePrice(poolAddress, symbolId),\r\n    //  perpetualPool.getSymbol(symbolId),\r\n    perpetualPool.getParameters(),\r\n    pToken.getPositions(accountAddress),\r\n    //pToken.getMargin(accountAddress, symbolId),\r\n  ]);\r\n\r\n  //const { multiplier } = symbolInfo;\r\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\r\n\r\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\r\n  const margins = await pToken.getMargins(accountAddress);\r\n  let promises = [];\r\n  for (let i = 0; i < bTokenIdList.length; i++) {\r\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\r\n  }\r\n  const bTokens = await Promise.all(promises);\r\n  const margin = bTokens.reduce((accum, i, index) => {\r\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\r\n  }, bg(0));\r\n\r\n  const liquidity = bTokens.reduce(\r\n    (accum, i) =>\r\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\r\n    bg(0)\r\n  );\r\n  //console.log('liquidity', liquidity.toString())\r\n  promises = [];\r\n  for (let i = 0; i < symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\r\n  }\r\n  const symbols = await Promise.all(promises);\r\n  let marginHeld = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.price)\r\n          .times(a.multiplier)\r\n          .times(positions[index].volume.plus(newVolume))\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  marginHeld = marginHeld.times(minInitialMarginRatio);\r\n\r\n  //console.log('margin', margin.toString(), marginHeld.toString())\r\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\r\n    if (index === parseInt(symbolId)) {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume.plus(newVolume))\r\n          .times(a.price)\r\n          .times(a.multiplier)\r\n          .abs()\r\n      );\r\n    } else {\r\n      return accum.plus(\r\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\r\n      );\r\n    }\r\n  }, bg(0));\r\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\r\n  //console.log('liquidityUsed', liquidityUsed.toString())\r\n\r\n  // const pnl = bTokens.reduce((accum, i) => accum.plus(i.pnl), bg(0))\r\n  // console.log('pnl', pnl.toString())\r\n\r\n  const orderValidation = isOrderValid(\r\n    //price,\r\n    margin,\r\n    marginHeld,\r\n    liquidity,\r\n    liquidityUsed\r\n    //multiplier,\r\n    //minPoolMarginRatio,\r\n    //bg(newVolume),\r\n  );\r\n  let res;\r\n  if (orderValidation.success) {\r\n    try {\r\n      promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.tradeWithPrices(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume,\r\n        priceInfos\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: orderValidation.error };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const closePositionWithPrices = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\r\n    poolAddress\r\n  );\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\r\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\r\n    chainId,\r\n    routerAddress\r\n  );\r\n  const pToken = pTokenFactory(chainId, pTokenAddress);\r\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\r\n  const newVolume = volume.negated();\r\n  let res;\r\n  if (!volume.eq(0)) {\r\n    try {\r\n      const promises = symbolIdList.map(async (s) => {\r\n        return await getPriceInfo(s);\r\n      });\r\n      const prices = await Promise.all(promises);\r\n      const priceInfos = prices.map((p, index) => {\r\n        return [\r\n          symbolIdList[index],\r\n          p.timestamp,\r\n          p.price,\r\n          parseInt(p.v).toString(),\r\n          p.r,\r\n          p.s,\r\n        ];\r\n      });\r\n      const tx = await perpetualPoolRouter.tradeWithPrices(\r\n        accountAddress,\r\n        symbolId,\r\n        newVolume,\r\n        priceInfos\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  } else {\r\n    res = { success: false, error: 'no position to close' };\r\n  }\r\n  return res;\r\n};\r\n","import { bg, deriToNatural, getHttpBase, fetchJson } from '../../shared/utils';\r\nimport {\r\n  getPoolConfig2,\r\n  getPoolSymbolIdList,\r\n} from '../../shared/config';\r\nimport { perpetualPoolFactory } from '../factory';\r\n\r\nconst processTradeEvent = async (\r\n  perpetualPool,\r\n  info,\r\n  blockNumber,\r\n  txHash,\r\n  multiplier,\r\n  feeRatio,\r\n  symbols,\r\n) => {\r\n  const tradeVolume = deriToNatural(info.tradeVolume);\r\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\r\n\r\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\r\n  const price = deriToNatural(info.price);\r\n  const time = `${+timeStamp.timestamp}000`;\r\n  const symbolId = info.symbolId\r\n  const symbol = symbols.find((s) => s.symbolId == info.symbolId)\r\n  const transactionFee = perpetualPool._calculateFee(\r\n    tradeVolume,\r\n    price,\r\n    multiplier[parseInt(symbolId)],\r\n    feeRatio[parseInt(symbolId)]\r\n  );\r\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\r\n  const volume = tradeVolume.abs();\r\n\r\n  const res = {\r\n    direction,\r\n    //baseToken: bTokenSymbol,\r\n    symbolId,\r\n    symbol: symbol && symbol.symbol,\r\n    price: price.toString(),\r\n    notional: notional.toString(),\r\n    volume: bg(volume).times(multiplier[parseInt(symbolId)]).toString(),\r\n    transactionFee: transactionFee.toString(),\r\n    transactionHash: txHash.toString(),\r\n    time,\r\n  };\r\n  return res;\r\n};\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n  //console.log('symbolIdList', symbolIdList);\r\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n  const toBlock = await perpetualPool._getBlockInfo('latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  let promises= []\r\n  for (let i=0; i<symbolIdList.length; i++) {\r\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n  }\r\n  let symbols = await Promise.all(promises)\r\n\r\n  const multiplier = symbols.map((i) => i.multiplier.toString());\r\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\r\n\r\n  const filters = { owner: accountAddress };\r\n  let events = await perpetualPool._getPastEvents(\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await processTradeEvent(\r\n      perpetualPool,\r\n      item.returnValues,\r\n      item.blockNumber,\r\n      item.transactionHash,\r\n      multiplier,\r\n      feeRatio,\r\n      symbols,\r\n    );\r\n    result.unshift(res);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock, tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\r\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\r\n    //console.log(symbolIdList)\r\n\r\n    let promises = []\r\n    for (let i=0; i<symbolIdList.length; i++) {\r\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\r\n    }\r\n    const symbols = await Promise.all(promises)\r\n    //console.log(symbols)\r\n\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .filter((i) => !(i.direction === 'LIQUIDATION' && i.symbolId === '0'))\r\n        .map((i) => {\r\n          const index = parseInt(i.symbolId)\r\n          if (i.direction !== 'LIQUIDATION') {\r\n            return {\r\n              direction: i.direction.trim(),\r\n              //baseToken: i.baseToken.trim(),\r\n              symbolId: i.symbolId,\r\n              symbol: i.symbol,\r\n              price: deriToNatural(i.price).toString(),\r\n              notional: deriToNatural(i.notional).toString(),\r\n              volume: deriToNatural(i.volume).times(symbols[index].multiplier).toString(),\r\n              transactionFee: deriToNatural(i.transactionFee).toString(),\r\n              transactionHash: i.transactionHash,\r\n              time: i.time.toString(),\r\n            };\r\n          } else {\r\n            if (i.volume !== '' && i.volume.indexOf(',') > -1 && !i.price.startsWith('NaN')) {\r\n              const ids = i.volume.split(',').reduce((acc, v, index) => {\r\n                if (v !== '0') {\r\n                  return acc.concat([index]);\r\n                } else {\r\n                  return acc\r\n                }\r\n              }, []);\r\n            const prices = i.price.split(',').map((s)=> deriToNatural(s))\r\n            const volumes= i.volume.split(',').map((v)=> deriToNatural(v))\r\n            const res = ids.map((id) => {\r\n              return {\r\n                direction: i.direction.trim(),\r\n                symbolId: id.toString(),\r\n                symbol: symbols[id].symbol,\r\n                volume: volumes[id].times(symbols[id].multiplier).abs().toString(),\r\n                price: prices[id].toString(),\r\n                notional: volumes[id].abs().times(prices[id]).times(symbols[id].multiplier).toString(),\r\n                transactionFee: '0',\r\n                transactionHash: i.transactionHash,\r\n                time: i.time.toString(),\r\n              };\r\n            })\r\n            return res\r\n            } else {\r\n              return {\r\n                direction: i.direction.trim(),\r\n                symbolId: '',\r\n                symbol: '',\r\n                volume: '',\r\n                price: '',\r\n                notional: '',\r\n                transactionFee: '0',\r\n                transactionHash: i.transactionHash,\r\n                time: i.time.toString(),\r\n              }\r\n            }\r\n          }\r\n        }).flat();\r\n    }\r\n      //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      // console.log(tradeFromBlock, liquidateFromBlock)\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n\r\n      const {initialBlock} = getPoolConfig2(poolAddress)\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch(err) {\r\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\r\n  }\r\n  return []\r\n};\r\n","//import { getOracleServerUrl } from \"../shared/utils/index.js\";\r\n\r\nexport const isProdChain = (chainId) => {\r\n  return [\"1\", \"56\", \"128\", \"137\"].includes(chainId.toString());\r\n};\r\n\r\nexport const PRESERVED_SYMBOLS = [\"BTCUSD\", \"ETHUSD\", \"BNBUSD\"];\r\n\r\nexport const getOracleServerUrl = (chainId, symbol, type = \"futures\") => {\r\n  //if (/^[0-9]+$/.test(symbolId.toString())) {\r\n  let method = \"get_signed_price\";\r\n  if (type === \"option\") {\r\n    method = \"get_signed_volatility\";\r\n  }\r\n  if (PRESERVED_SYMBOLS.includes(symbol)) {\r\n    method = \"get_price\";\r\n    symbol = `${symbol}_v2_bsc`;\r\n  }\r\n  let baseUrl = isProdChain(chainId)\r\n    ? `https://oracle4.deri.finance/${method}`\r\n    : `https://oracle2.deri.finance/${method}`;\r\n  const addSymbolParam = (url, symbol) => `${url}?symbol=${symbol}`;\r\n\r\n  if (symbol) {\r\n    return addSymbolParam(baseUrl, symbol);\r\n  } else {\r\n    return baseUrl;\r\n  }\r\n};\r\n\r\nexport const getPriceInfos = async (chainId, symbolList) => {\r\n  let url = getOracleServerUrl(chainId);\r\n  let retry = 3;\r\n  //console.log('url', url)\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    res = await fetch(url, {\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(symbolList),\r\n    });\r\n    if (res.ok) {\r\n      priceInfo = await res.json();\r\n      if (priceInfo.status.toString() === \"200\" && priceInfo.data) {\r\n        return priceInfo.data;\r\n      }\r\n    }\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(\r\n      `!! getPriceInfos exceed max retry(3): ${symbolList} ${JSON.stringify(\r\n        priceInfo\r\n      )}`\r\n    );\r\n  }\r\n};\r\n","import { bg } from \"../shared\";\r\n\r\nexport const calculateK = (indexPrice, liquidity, alpha) => {\r\n  return bg(indexPrice).times(alpha).div(liquidity);\r\n};\r\nexport const calculateDpmmPrice = (\r\n  indexPrice,\r\n  K,\r\n  tradersNetVolume,\r\n  multiplier\r\n) => {\r\n  return bg(indexPrice).times(\r\n    bg(1).plus(bg(K).times(tradersNetVolume).times(multiplier))\r\n  );\r\n};\r\nexport const calculateDpmmCost = (\r\n  indexPrice,\r\n  K,\r\n  tradersNetVolume,\r\n  multiplier,\r\n  tradeVolume\r\n) => {\r\n  return bg(indexPrice).times(\r\n    bg(multiplier)\r\n      .times(tradersNetVolume)\r\n      .plus(bg(multiplier).times(tradeVolume))\r\n      .pow(2)\r\n      .minus(bg(multiplier).times(tradersNetVolume).pow(2))\r\n      .times(K)\r\n      .div(2)\r\n      .plus(bg(tradeVolume).times(multiplier))\r\n  );\r\n};","// this file is generated by script, don't modify it !!!\r\nimport { ERC20Factory, offChainOracleFactory} from \"../../shared/contract/factory.js\";\r\nimport {\r\n  toWei,\r\n  getLiquidity,\r\n  getProtocolFeeAccrued,\r\n  getLastTimestamp,\r\n  bg,\r\n  processResult,\r\n  deriToNatural,\r\n  getBlockInfo,\r\n} from \"../../shared/utils/index.js\";\r\nimport { normalizeSymbolUnit, SECONDS_IN_A_DAY } from \"../../shared/config\";\r\nimport {  getOraclePriceFromCache2 } from '../../shared/utils/oracle'\r\nimport { getPriceInfos } from \"../utils.js\";\r\nimport { lTokenLiteFactory, pTokenLiteFactory } from \"./factory.js\";\r\nimport { calculateK, calculateDpmmPrice, calculateDpmmCost } from \"../calc\";\r\n\r\n\r\n// klass = addInstanceMethods(klass, [])\r\nconst addMethods = (klass, fns = []) => {\r\n  if (fns.length > 0) {\r\n    for (let i = 0; i < fns.length; i++) {\r\n      klass = fns[i](klass);\r\n    }\r\n    return klass;\r\n  } else {\r\n    return klass;\r\n  }\r\n};\r\nconst overrideMethods = (klass, fns = []) => {\r\n  if (fns.length > 0) {\r\n    for (let i = 0; i < fns.length; i++) {\r\n      const fn = fns[i][0]\r\n      const args = fns[i].slice(1)\r\n      // console.log(fn, args)\r\n      klass = fn(klass)(...args);\r\n    }\r\n    return klass;\r\n  } else {\r\n    return klass;\r\n  }\r\n};\r\n\r\nconst checkOffChainOracleSymbol = async (chainId, oracleAddress, symbol) => {\r\n  try {\r\n    await offChainOracleFactory(chainId, oracleAddress).signer()\r\n    return symbol\r\n  } catch (err) {\r\n  }\r\n  try {\r\n    await offChainOracleFactory(chainId, oracleAddress).signatory()\r\n    return symbol\r\n  } catch (err) {\r\n  }\r\n  return ''\r\n};\r\n\r\nconst processMethod = (klass) => (methodName, propList = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const res = await originMethod.apply(this, args);\r\n    return processResult(res, propList);\r\n  };\r\n  return klass;\r\n};\r\n\r\nconst processTxMethod = (klass) => (methodName, toWeiArgPositions = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const prices = await this._getSymbolPrices()\r\n    // console.log('prices', prices)\r\n    let newArgs = args.map((arg, index) =>\r\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\r\n    );\r\n    newArgs.push(prices)\r\n    return await originMethod.apply(this, newArgs);\r\n  };\r\n  return klass;\r\n};\r\n\r\nconst init = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype['init'] = async function (isEstimatedApi = false) {\r\n    await this._init();\r\n    if (!this.addresses || !this.activeSymbolIds) {\r\n      [this.addresses, this.parameters, this.state, this.fundingPeriod] = await Promise.all([\r\n        this.getAddresses(),\r\n        this.getParameters(),\r\n        this.getPoolStateValues(),\r\n        this.getFundingPeriod(),\r\n      ]);\r\n      this.fundingPeriod = parseInt(this.fundingPeriod);\r\n      // console.log(this.addresses, this.parameters)\r\n      const { bTokenAddress, lTokenAddress, pTokenAddress } = this.addresses;\r\n      this.bToken = ERC20Factory(this.chainId, bTokenAddress);\r\n      this.pToken = pTokenLiteFactory(this.chainId, pTokenAddress);\r\n      this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\r\n\r\n      // init tokens\r\n      [this.bTokenSymbol ] = await Promise.all([\r\n        this.bToken.symbol(),\r\n      ]);\r\n      this.symbols = []\r\n      this.positions = []\r\n\r\n    }\r\n    // update symbols\r\n    // estimated for estimated* api use to disable async call\r\n    if (!isEstimatedApi) {\r\n      const symbolIds = await this.pToken.getActiveSymbolIds();\r\n      if (\r\n        !this.activeSymbolIds ||\r\n        this.activeSymbolIds.toString() !== symbolIds.toString()\r\n      ) {\r\n        this.poolLiquidity = await this.getPoolLiquidity();\r\n        this.activeSymbolIds = symbolIds;\r\n        this.symbols = await Promise.all(\r\n          this.activeSymbolIds.reduce(\r\n            (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n            []\r\n          )\r\n        );\r\n        this.activeSymbolNames = this.symbols.map((s) => s.symbol);\r\n        this.offChainOracleSymbolNames = await Promise.all(\r\n          this.symbols\r\n            .map((s) => s.oracleAddress)\r\n            .reduce(\r\n              (acc, o, index) => [\r\n                ...acc,\r\n                checkOffChainOracleSymbol(\r\n                  this.chainId,\r\n                  o,\r\n                  this.symbols[index].symbol\r\n                ),\r\n              ],\r\n              []\r\n            )\r\n        );\r\n        this.offChainOracleSymbolIds = this.activeSymbolIds.reduce(\r\n          (acc, i, index) => {\r\n            return this.offChainOracleSymbolNames[index] === ''\r\n              ? acc\r\n              : [...acc, i];\r\n          },\r\n          []\r\n        );\r\n        this.offChainOracleSymbolNames = this.offChainOracleSymbolNames.filter(\r\n          (s) => s && s !== ''\r\n        );\r\n        // console.log(\r\n        //   `${this.contractAddress} offchain`,\r\n        //   this.offChainOracleSymbolNames\r\n        // );\r\n      }\r\n    }\r\n  };\r\n  return klass;\r\n};\r\n\r\n// this.addresses\r\n// this.parameters\r\n\r\nconst getConfig = (klass) => {\r\n  klass.prototype[\"getConfig\"] = async function () {\r\n    return {\r\n      pool: this.contractAddress,\r\n      pToken: this.addresses.pTokenAddress,\r\n      lToken: this.addresses.lTokenAddress,\r\n      bToken: this.addresses.bTokenAddress,\r\n      bTokenSymbol: this.bTokenSymbol,\r\n      symbols: this.symbols.map((s, index) => ({\r\n        symbolId: this.activeSymbolIds[index],\r\n        symbol: s.symbol,\r\n        unit: normalizeSymbolUnit(s.symbol),\r\n      })),\r\n      initialBlock: this.initialBlock,\r\n      type: \"perpetual\",\r\n      version: \"v2_lite\",\r\n      versionId: \"v2_lite_dpmm\",\r\n      chainId: this.chainId,\r\n    };\r\n  };\r\n  return klass;\r\n};\r\n\r\n// getStateValues\r\nconst getStateValues = (klass) => {\r\n  klass.prototype[\"getStateValues\"] = async function () {\r\n    const res = await this.getPoolStateValues()\r\n    // update\r\n    this.state = { ...this.state, ...res}\r\n    return this.state\r\n  }\r\n  return klass\r\n}\r\n\r\n// getSymbol()\r\nconst getSymbols = (klass) => {\r\n  klass.prototype[\"getSymbols\"] = async function (symbolId) {\r\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\r\n    const symbols = await Promise.all(\r\n      symbolIds.reduce(\r\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n        []\r\n      )\r\n    );\r\n\r\n    const indexPrices = await Promise.all(\r\n      symbols.map((s) => {\r\n        const oracleAddress = this.offChainOracleSymbolIds.includes(s.symbolId) ? '' : s.oracleAddress\r\n        return getOraclePriceFromCache2.get(this.chainId, s.symbol, oracleAddress)\r\n      })\r\n    )\r\n    symbols.forEach((s, index) => {\r\n      s.indexPrice = indexPrices[index]\r\n      s.K = calculateK(\r\n        s.indexPrice,\r\n        this.state.liquidity,\r\n        s.alpha\r\n      ).toString();\r\n      //console.log(s.K, s.indexPrice, s.tradersNetVolume, s.multiplier)\r\n      s.dpmmPrice = calculateDpmmPrice(\r\n        s.indexPrice,\r\n        s.K,\r\n        s.tradersNetVolume,\r\n        s.multiplier\r\n      ).toString();\r\n      s.fundingPerSecond = bg(s.dpmmPrice).minus(s.indexPrice).times(s.multiplier).div(this.fundingPeriod).toString()\r\n      //s.fundingPerSecond = bg(s.dpmmPrice).minus(s.indexPrice).div(this.fundingPeriod).toString()\r\n      s.funding = bg(s.fundingPerSecond).times(SECONDS_IN_A_DAY).toString()\r\n    });\r\n\r\n    // update\r\n    if (symbolId) {\r\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\r\n      if (symbolIndex > -1) {\r\n        this.symbols[symbolIndex] = symbols[0]\r\n      }\r\n    } else {\r\n      this.symbols = symbols\r\n    }\r\n    \r\n    return symbols\r\n  };\r\n  return klass\r\n};\r\n\r\n// get traders positions\r\nconst getPositions = (klass) => {\r\n  klass.prototype[\"getPositions\"] = async function (account, symbolId) {\r\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\r\n    const positions = await Promise.all(\r\n      symbolIds.reduce(\r\n        (acc, symbolId) => [...acc, this.pToken.getPosition(account,symbolId)],\r\n        []\r\n      )\r\n    );\r\n    await this.getLastTimestamp()\r\n\r\n    const timeDiff = bg(Math.floor(Date.now() / 1000)).minus(\r\n      this.state.lastTimestamp\r\n    );\r\n    positions.forEach((p, index) => {\r\n      const symbol = this.symbols[index];\r\n      p.fundingAccrued = bg(p.volume)\r\n        .times(\r\n          bg(symbol.cumulativeFundingRate)\r\n            .plus(bg(timeDiff).times(this.symbols[index].fundingPerSecond))\r\n            .minus(p.lastCumulativeFundingRate)\r\n        )\r\n        .toString();\r\n      p.traderPnl = calculateDpmmCost(\r\n        symbol.indexPrice,\r\n        symbol.K,\r\n        symbol.tradersNetVolume,\r\n        symbol.multiplier,\r\n        bg(p.volume).negated().toString()\r\n      )\r\n        .negated()\r\n        .minus(p.cost).toString();\r\n\r\n      p.notional = bg(p.volume).abs().times(symbol.indexPrice).times(symbol.multiplier).toString()\r\n    });\r\n\r\n    // update\r\n    if (symbolId) {\r\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\r\n      if (symbolIndex > -1) {\r\n        this.positions[symbolIndex] = positions[0]\r\n      }\r\n    } else {\r\n      this.positions = positions\r\n    }\r\n\r\n    return positions\r\n  };\r\n  return klass\r\n};\r\n\r\n// check is updated\r\nconst isSymbolsUpdated = (klass) => {\r\n  klass.prototype['isSymbolsUpdated'] = function() {\r\n    return Array.isArray(this.symbols) && this.symbols.length > 0 && this.symbols[0].K != null\r\n  }\r\n  return klass\r\n}\r\nconst isPositionsUpdated = (klass) => {\r\n  klass.prototype['isPositionsUpdated'] = function() {\r\n    return Array.isArray(this.positions) && this.positions.length > 0 && this.positions[0].volume != null\r\n  }\r\n  return klass\r\n}\r\n\r\nconst getTraderLiquidity = (klass) => {\r\n  klass.prototype[\"getTraderLiquidity\"] = async function(account) {\r\n    return await this.lToken.balanceOf(account)\r\n  }\r\n  return klass\r\n}\r\n\r\n\r\nconst getDynamicEquity = (klass) => {\r\n  klass.prototype['getDynamicEquity'] = async function() {\r\n    if (!this.isSymbolsUpdated) {\r\n      await this.getSymbols()\r\n    }\r\n    //console.log(this.symbols)\r\n    const res = bg(this.state.liquidity)\r\n      .plus(\r\n        this.symbols.reduce(\r\n          (acc, s) =>\r\n            acc\r\n              .plus(s.tradersNetCost)\r\n              .minus(\r\n                bg(s.tradersNetVolume).times(s.dpmmPrice).times(s.multiplier)\r\n              ),\r\n          bg(0)\r\n        )\r\n      )\r\n      .toString();\r\n    this.state.dynamicEquity = res\r\n    return res\r\n  }\r\n  return klass\r\n}\r\n\r\nconst getPoolRequiredMargin = (klass) => {\r\n  klass.prototype['getPoolRequiredMargin'] = async function () {\r\n    if (!this.isSymbolsUpdated) {\r\n      await this.getSymbols()\r\n    }\r\n    const { poolMarginRatio } = this.parameters;\r\n    return this.symbols\r\n      .reduce(\r\n        (acc, s) =>\r\n          acc.plus(\r\n            bg(s.tradersNetVolume).times(s.indexPrice).times(s.multiplier).abs()\r\n          ),\r\n        bg(0)\r\n      )\r\n      .times(poolMarginRatio).toString()\r\n  };\r\n  return klass\r\n}\r\n\r\nconst getTraderMarginStatus = (klass) => {\r\n  klass.prototype['getTraderMarginStatus'] = async function (account) {\r\n    if (!this.isSymbolsUpdated) {\r\n      await this.getSymbols()\r\n    }\r\n    if (!this.isPositionsUpdated) {\r\n      await this.getPositions(account)\r\n    }\r\n    if (!this.margin) {\r\n      this.margin = await this.pToken.getMargin(account)\r\n    }\r\n    // console.log(this.positions)\r\n    // console.log(this.symbols)\r\n    const { initialMarginRatio } = this.parameters;\r\n    let dynamicMargin = bg(this.margin), requiredInitialMargin = bg(0)\r\n    for (let i = 0; i < this.activeSymbolIds.length; i++) {\r\n      const s = this.symbols[i];\r\n      const p = this.positions[i];\r\n      dynamicMargin = dynamicMargin.plus(\r\n        bg(p.volume).times(s.dpmmPrice).times(s.multiplier).minus(p.cost)\r\n      );\r\n      requiredInitialMargin = requiredInitialMargin.plus(\r\n        bg(p.volume)\r\n          .times(s.indexPrice)\r\n          .times(s.multiplier)\r\n          .abs()\r\n          .times(initialMarginRatio)\r\n      );\r\n    }\r\n    return [dynamicMargin.toString(), requiredInitialMargin.toString()];\r\n  };\r\n  return klass\r\n}\r\n\r\nconst formatTradeEvent = (klass) => {\r\n  klass.prototype['formatTradeEvent'] = async function (event) {\r\n    const info = event.returnValues;\r\n    const tradeVolume = deriToNatural(info.tradeVolume);\r\n    const block = await getBlockInfo(this.chainId, event.blockNumber);\r\n    const symbolId = info.symbolId;\r\n    const index = this.activeSymbolIds.indexOf(symbolId);\r\n    if (index > -1) {\r\n      const symbol = this.symbols[index];\r\n      const tradeFee = info.tradeFee;\r\n\r\n      const direction =\r\n        tradeFee !== '-1'\r\n          ? bg(tradeVolume).gt(0)\r\n            ? 'LONG'\r\n            : 'SHORT'\r\n          : 'LIQUIDATION';\r\n      const price = bg(info.tradeCost)\r\n        .div(info.tradeVolume)\r\n        .div(symbol.multiplier)\r\n        .toString();\r\n      const notional = bg(tradeVolume)\r\n        .abs()\r\n        .times(price)\r\n        .times(symbol.multiplier)\r\n        .toString();\r\n\r\n      const res = {\r\n        symbolId: info.symbolId,\r\n        symbol: symbol.symbol,\r\n        trader: info.trader,\r\n        direction,\r\n        volume: bg(tradeVolume).abs().toString(),\r\n        price: price,\r\n        indexPrice: deriToNatural(info.indexPrice).toString(),\r\n        notional: notional,\r\n        transactionFee:\r\n          tradeFee === '-1' ? '0' : deriToNatural(tradeFee).toString(),\r\n        transactionHash: event.transactionHash,\r\n        time: block.timestamp * 1000,\r\n        extra: {},\r\n      };\r\n      return res;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  return klass\r\n};\r\n\r\nconst _getSymbolPrices = (klass) => {\r\n  klass.prototype[\"_getSymbolPrices\"] = async function () {\r\n    await this.init()\r\n    let prices = []\r\n    if (this.offChainOracleSymbolIds.length > 0) {\r\n        const priceInfos = await getPriceInfos(this.chainId, this.offChainOracleSymbolNames);\r\n        prices = Object.values(priceInfos).reduce((acc, p, index) => {\r\n        acc.push([\r\n            this.offChainOracleSymbolIds[\r\n            this.offChainOracleSymbolNames.indexOf(Object.keys(priceInfos)[index])\r\n            ],\r\n            p.timestamp,\r\n            p.price,\r\n            parseInt(p.v).toString(),\r\n            p.r,\r\n            p.s,\r\n        ]);\r\n        return acc;\r\n        }, []);\r\n    }\r\n    return prices;\r\n  };\r\n  return klass;\r\n};\r\n\r\nexport const perpetualPoolLiteAdapter = (klass) => {\r\n  //klass = processMethod(klass, \"getFundingPeriod\")\r\n\r\n  klass = addMethods(klass, [\r\n    init,\r\n\r\n    getConfig,\r\n    getLiquidity,\r\n    getLastTimestamp,\r\n    getProtocolFeeAccrued,\r\n    getStateValues,\r\n    getSymbols,\r\n    getPositions,\r\n    getDynamicEquity,\r\n    getPoolRequiredMargin,\r\n    getTraderMarginStatus,\r\n    isSymbolsUpdated,\r\n    isPositionsUpdated,\r\n    getTraderLiquidity,\r\n    formatTradeEvent,\r\n    _getSymbolPrices,\r\n  ]);\r\n\r\n  klass = overrideMethods(klass, [\r\n    [\r\n      processMethod,\r\n      'getParameters',\r\n      [\r\n        'poolMarginRatio',\r\n        'initialMarginRatio',\r\n        'maintenanceMarginRatio',\r\n        'minLiquidationReward',\r\n        'maxLiquidationReward',\r\n        'liquidationCutRatio',\r\n        'protocolFeeCollectRatio',\r\n      ],\r\n    ],\r\n    [processMethod, 'getPoolStateValues', ['liquidity', 'protocolFeeAccrued']],\r\n    [processMethod, 'getFundingPeriod'],\r\n    [\r\n      processMethod,\r\n      'getSymbol',\r\n      [\r\n        'multiplier',\r\n        'feeRatio',\r\n        'fundingRateCoefficient',\r\n        'price',\r\n        'alpha',\r\n        'cumulativeFundingRate',\r\n        'tradersNetVolume',\r\n        'tradersNetCost',\r\n      ],\r\n    ],\r\n  ]);\r\n\r\n  klass = overrideMethods(klass, [\r\n    [processTxMethod, 'addLiquidity', ['1']],\r\n    [processTxMethod, 'removeLiquidity', ['1']],\r\n    [processTxMethod, 'addMargin', ['1']],\r\n    [processTxMethod, 'removeMargin', ['1']],\r\n    [processTxMethod, 'trade', ['2']],\r\n  ]);\r\n\r\n  return klass;\r\n};\r\n\r\nexport const lTokenLiteAdapter = (klass) => {\r\n  return overrideMethods(klass, [\r\n    [processMethod, 'balanceOf'],\r\n    [processMethod, 'totalSupply'],\r\n  ]);\r\n};\r\n\r\nexport const pTokenLiteAdapter = (klass) => {\r\n  return overrideMethods(klass, [\r\n    [processMethod, 'getMargin'],\r\n    [\r\n      processMethod,\r\n      'getPosition',\r\n      ['volume', 'cost', 'lastCumulativeFundingRate'],\r\n    ],\r\n  ]);\r\n};\r\n\r\nexport const perpetualPoolLiteManagerAdapter = (klass) => {\r\n    // klass = processMethod(klass, 'symbol', []);\r\n    return klass\r\n}\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nexport const perpetualPoolLiteAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256[7]\",\r\n                \"name\": \"parameters\",\r\n                \"type\": \"uint256[7]\"\r\n            },\r\n            {\r\n                \"internalType\": \"address[5]\",\r\n                \"name\": \"addresses\",\r\n                \"type\": \"address[5]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lp\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lShares\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"AddLiquidity\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"AddMargin\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oldController\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newController\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"ChangeController\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"migrationTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"source\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"target\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"ExecuteMigration\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"liquidator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"reward\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Liquidate\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"migrationTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"source\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"target\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"PrepareMigration\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"collector\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ProtocolFeeCollection\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lp\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lShares\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"RemoveLiquidity\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"RemoveMargin\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"indexPrice\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeVolume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeCost\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeFee\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"Trade\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\r\n                \"name\": \"prices\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"addLiquidity\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"multiplier\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"feeRatio\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"alpha\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addSymbol\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"approveMigration\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"claimNewController\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"collectProtocolFee\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"controller\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"source\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"executeMigration\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"source\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lastTimestamp\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"executeMigrationWithTimestamp\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getAddresses\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"bTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"pTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"liquidatorQualifierAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"protocolFeeCollector\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getFundingPeriod\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getParameters\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"poolMarginRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"initialMarginRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"maintenanceMarginRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"minLiquidationReward\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"maxLiquidationReward\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"liquidationCutRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"protocolFeeCollectRatio\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getPoolStateValues\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"liquidity\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lastTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"protocolFeeAccrued\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getSymbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"string\",\r\n                        \"name\": \"symbol\",\r\n                        \"type\": \"string\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"oracleAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"multiplier\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"feeRatio\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"alpha\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"tradersNetVolume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"tradersNetCost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\r\n                \"name\": \"prices\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidate\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"pTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\r\n                \"name\": \"prices\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidate\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"migrationDestination\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"migrationTimestamp\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"target\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"graceDays\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"prepareMigration\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lShares\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\r\n                \"name\": \"prices\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"removeLiquidity\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\r\n                \"name\": \"prices\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"removeMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"removeSymbol\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"period\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setFundingPeriod\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newController\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setNewController\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"feeRatio\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"alpha\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setSymbolParameters\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"toggleCloseOnly\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeVolume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\r\n                \"name\": \"prices\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"trade\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { perpetualPoolLiteAbi } from '../abi/perpetualPoolLiteAbi.js'\r\n\r\nexport class PerpetualPoolLite extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, perpetualPoolLiteAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  //  async controller() {\r\n  //    const res = await this._call('controller', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getAddresses() {\r\n    const res = await this._call('getAddresses', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getFundingPeriod() {\r\n    const res = await this._call('getFundingPeriod', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getPoolStateValues() {\r\n    const res = await this._call('getPoolStateValues', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getSymbol(symbolId) {\r\n    const res = await this._call('getSymbol', [symbolId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async migrationDestination() {\r\n  //    const res = await this._call('migrationDestination', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async migrationTimestamp() {\r\n  //    const res = await this._call('migrationTimestamp', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n\r\n  // tx\r\n  async addLiquidity(accountAddress, bAmount, prices) {\r\n    return await this._transact('addLiquidity', [bAmount, prices], accountAddress)\r\n  }\r\n  async addMargin(accountAddress, bAmount) {\r\n    return await this._transact('addMargin', [bAmount], accountAddress)\r\n  }\r\n  //  async addSymbol(accountAddress, symbolId, symbol, oracleAddress, multiplier, feeRatio, alpha) {\r\n  //    return await this._transact('addSymbol', [symbolId, symbol, oracleAddress, multiplier, feeRatio, alpha], accountAddress)\r\n  //  }\r\n  //  async approveMigration(accountAddress) {\r\n  //    return await this._transact('approveMigration', [], accountAddress)\r\n  //  }\r\n  //  async claimNewController(accountAddress) {\r\n  //    return await this._transact('claimNewController', [], accountAddress)\r\n  //  }\r\n  //  async collectProtocolFee(accountAddress) {\r\n  //    return await this._transact('collectProtocolFee', [], accountAddress)\r\n  //  }\r\n  //  async executeMigration(accountAddress, source) {\r\n  //    return await this._transact('executeMigration', [source], accountAddress)\r\n  //  }\r\n  //  async executeMigrationWithTimestamp(accountAddress, source, lastTimestamp) {\r\n  //    return await this._transact('executeMigrationWithTimestamp', [source, lastTimestamp], accountAddress)\r\n  //  }\r\n  //  async liquidate(accountAddress, account, prices) {\r\n  //    return await this._transact('liquidate', [account, prices], accountAddress)\r\n  //  }\r\n  //  async liquidate(accountAddress, pTokenId, prices) {\r\n  //    return await this._transact('liquidate', [pTokenId, prices], accountAddress)\r\n  //  }\r\n  //  async prepareMigration(accountAddress, target, graceDays) {\r\n  //    return await this._transact('prepareMigration', [target, graceDays], accountAddress)\r\n  //  }\r\n  async removeLiquidity(accountAddress, lShares, prices) {\r\n    return await this._transact('removeLiquidity', [lShares, prices], accountAddress)\r\n  }\r\n  async removeMargin(accountAddress, bAmount, prices) {\r\n    return await this._transact('removeMargin', [bAmount, prices], accountAddress)\r\n  }\r\n  //  async removeSymbol(accountAddress, symbolId) {\r\n  //    return await this._transact('removeSymbol', [symbolId], accountAddress)\r\n  //  }\r\n  //  async setFundingPeriod(accountAddress, period) {\r\n  //    return await this._transact('setFundingPeriod', [period], accountAddress)\r\n  //  }\r\n  //  async setNewController(accountAddress, newController) {\r\n  //    return await this._transact('setNewController', [newController], accountAddress)\r\n  //  }\r\n  //  async setSymbolParameters(accountAddress, symbolId, oracleAddress, feeRatio, alpha) {\r\n  //    return await this._transact('setSymbolParameters', [symbolId, oracleAddress, feeRatio, alpha], accountAddress)\r\n  //  }\r\n  //  async toggleCloseOnly(accountAddress, symbolId) {\r\n  //    return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\r\n  //  }\r\n  async trade(accountAddress, symbolId, tradeVolume, prices) {\r\n    return await this._transact('trade', [symbolId, tradeVolume, prices], accountAddress)\r\n  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const lTokenLiteAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"name_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"allowance\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"decimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"pure\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"mint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"pool\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newPool\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setPool\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transfer\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { lTokenLiteAbi } from '../abi/lTokenLiteAbi.js'\r\n\r\nexport class LTokenLite extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, lTokenLiteAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  //  async allowance(owner, spender) {\r\n  //    const res = await this._call('allowance', [owner, spender])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async balanceOf(account) {\r\n    const res = await this._call('balanceOf', [account])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async decimals() {\r\n  //    const res = await this._call('decimals', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async name() {\r\n  //    const res = await this._call('name', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async symbol() {\r\n  //    const res = await this._call('symbol', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async approve(accountAddress, spender, amount) {\r\n  //    return await this._transact('approve', [spender, amount], accountAddress)\r\n  //  }\r\n  //  async burn(accountAddress, account, amount) {\r\n  //    return await this._transact('burn', [account, amount], accountAddress)\r\n  //  }\r\n  //  async mint(accountAddress, account, amount) {\r\n  //    return await this._transact('mint', [account, amount], accountAddress)\r\n  //  }\r\n  //  async setPool(accountAddress, newPool) {\r\n  //    return await this._transact('setPool', [newPool], accountAddress)\r\n  //  }\r\n  //  async transfer(accountAddress, to, amount) {\r\n  //    return await this._transact('transfer', [to, amount], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, amount) {\r\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const pTokenLiteAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"name_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"ApprovalForAll\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"UpdateMargin\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"volume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"cost\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"lastCumulativeFundingRate\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"UpdatePosition\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"delta\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"addMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addSymbolId\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"exists\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getActiveSymbolIds\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256[]\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256[]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getApproved\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getMargin\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getNumPositionHolders\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getPosition\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"volume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPTokenLite.Position\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getTokenId\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"isActiveSymbolId\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"isApprovedForAll\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"mint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ownerOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"pool\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"removeSymbolId\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes\",\r\n                \"name\": \"data\",\r\n                \"type\": \"bytes\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"setApprovalForAll\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newPool\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setPool\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"bytes4\",\r\n                \"name\": \"interfaceId\",\r\n                \"type\": \"bytes4\"\r\n            }\r\n        ],\r\n        \"name\": \"supportsInterface\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"toggleCloseOnly\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalMinted\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"margin\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"updateMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"volume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPTokenLite.Position\",\r\n                \"name\": \"position\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"name\": \"updatePosition\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { pTokenLiteAbi } from '../abi/pTokenLiteAbi.js'\r\n\r\nexport class PTokenLite extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, pTokenLiteAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async balanceOf(owner) {\r\n    const res = await this._call('balanceOf', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async exists(owner) {\r\n    const res = await this._call('exists', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getActiveSymbolIds() {\r\n    const res = await this._call('getActiveSymbolIds', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async getApproved(tokenId) {\r\n  //    const res = await this._call('getApproved', [tokenId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getMargin(owner) {\r\n    const res = await this._call('getMargin', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    const res = await this._call('getNumPositionHolders', [symbolId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getPosition(owner, symbolId) {\r\n    const res = await this._call('getPosition', [owner, symbolId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async getTokenId(owner) {\r\n  //    const res = await this._call('getTokenId', [owner])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async isActiveSymbolId(symbolId) {\r\n    const res = await this._call('isActiveSymbolId', [symbolId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async isApprovedForAll(owner, operator) {\r\n  //    const res = await this._call('isApprovedForAll', [owner, operator])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async name() {\r\n  //    const res = await this._call('name', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async ownerOf(tokenId) {\r\n  //    const res = await this._call('ownerOf', [tokenId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async supportsInterface(interfaceId) {\r\n  //    const res = await this._call('supportsInterface', [interfaceId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async symbol() {\r\n  //    const res = await this._call('symbol', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async totalMinted() {\r\n  //    const res = await this._call('totalMinted', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async addMargin(accountAddress, owner, delta) {\r\n  //    return await this._transact('addMargin', [owner, delta], accountAddress)\r\n  //  }\r\n  //  async addSymbolId(accountAddress, symbolId) {\r\n  //    return await this._transact('addSymbolId', [symbolId], accountAddress)\r\n  //  }\r\n  //  async approve(accountAddress, operator, tokenId) {\r\n  //    return await this._transact('approve', [operator, tokenId], accountAddress)\r\n  //  }\r\n  //  async burn(accountAddress, owner) {\r\n  //    return await this._transact('burn', [owner], accountAddress)\r\n  //  }\r\n  //  async mint(accountAddress, owner) {\r\n  //    return await this._transact('mint', [owner], accountAddress)\r\n  //  }\r\n  //  async removeSymbolId(accountAddress, symbolId) {\r\n  //    return await this._transact('removeSymbolId', [symbolId], accountAddress)\r\n  //  }\r\n  //  async safeTransferFrom(accountAddress, from, to, tokenId) {\r\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\r\n  //  }\r\n  //  async safeTransferFrom(accountAddress, from, to, tokenId, data) {\r\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\r\n  //  }\r\n  //  async setApprovalForAll(accountAddress, operator, approved) {\r\n  //    return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\r\n  //  }\r\n  //  async setPool(accountAddress, newPool) {\r\n  //    return await this._transact('setPool', [newPool], accountAddress)\r\n  //  }\r\n  //  async toggleCloseOnly(accountAddress, symbolId) {\r\n  //    return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, tokenId) {\r\n  //    return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\r\n  //  }\r\n  //  async updateMargin(accountAddress, owner, margin) {\r\n  //    return await this._transact('updateMargin', [owner, margin], accountAddress)\r\n  //  }\r\n  //  async updatePosition(accountAddress, owner, symbolId, position) {\r\n  //    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nimport { contractFactory } from '../../shared/utils/index.js';\r\nimport {\r\n  perpetualPoolLiteAdapter,\r\n  lTokenLiteAdapter,\r\n  pTokenLiteAdapter,\r\n} from \"./adapter.js\";\r\n\r\nimport { PerpetualPoolLite } from './gen/PerpetualPoolLite.js';\r\nimport { LTokenLite } from './gen/LTokenLite.js';\r\nimport { PTokenLite } from './gen/PTokenLite.js';\r\n\r\n\r\nexport const perpetualPoolLiteDpmmFactory = contractFactory(\r\n  perpetualPoolLiteAdapter(PerpetualPoolLite)\r\n);\r\nexport const lTokenLiteFactory = contractFactory(lTokenLiteAdapter(LTokenLite));\r\nexport const pTokenLiteFactory = contractFactory(pTokenLiteAdapter(PTokenLite));\r\n","import { bg, max, min } from '../../shared/utils';\r\nimport { checkSymbolId } from '../../shared/utils/derijsnext';\r\nimport { contractFactory } from '../../shared/utils/index.js';\r\nimport { getIndexInfo, SECONDS_IN_A_DAY } from '../../shared/config';\r\nimport { getOraclePriceFromCache2 } from '../../shared/utils/oracle';\r\nimport { calculateLiquidationPrice } from '../../v2/calculation';\r\nimport { calculateDpmmPrice } from '../calc';\r\nimport { perpetualPoolLiteDpmmFactory} from './factory';\r\nimport { liquidatePriceCache } from '../../shared/api/api_globals';\r\n\r\nexport class PoolApi{\r\n  constructor(chainId, poolAddress) {\r\n    this.chainId = chainId;\r\n    this.poolAddress = poolAddress;\r\n    this.pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n  }\r\n  async init(isEstimatedApi) {\r\n    await this.pool.init(isEstimatedApi);\r\n  }\r\n\r\n  // =================\r\n  //  api\r\n  // =================\r\n  async getLiquidityInfo(accountAddress) {\r\n    await this.init();\r\n    const pool = this.pool;\r\n    const lToken = pool.lToken;\r\n    const [liquidity, lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n      pool.getPoolLiquidity(),\r\n      lToken.balanceOf(accountAddress),\r\n      lToken.totalSupply(),\r\n    ]);\r\n    const { poolMarginRatio } = pool.parameters;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const poolDynamicEquity = await pool.getDynamicEquity();\r\n    const shareValue = bg(lTokenTotalSupply).eq(0)\r\n      ? '0'\r\n      : bg(poolDynamicEquity).div(lTokenTotalSupply).toString();\r\n\r\n    const value = pool.symbols.reduce((acc, s) => {\r\n      return acc.plus(\r\n        bg(s.tradersNetVolume).times(s.multiplier).times(s.dpmmPrice)\r\n      );\r\n    }, bg(0));\r\n    const removable = bg(poolDynamicEquity).minus(\r\n      bg(value).times(poolMarginRatio)\r\n    );\r\n    return {\r\n      totalSupply: lTokenTotalSupply,\r\n      poolLiquidity: liquidity,\r\n      shares: lTokenBalance,\r\n      shareValue,\r\n      maxRemovableShares: max(\r\n        min(\r\n          bg(lTokenBalance),\r\n          bg(shareValue).eq(0) ? '0' : removable.div(shareValue)\r\n        ),\r\n        bg(0)\r\n      ),\r\n    };\r\n  }\r\n\r\n  async getSpecification(symbolId) {\r\n    await this.init();\r\n    const pool = this.pool;\r\n\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbolInfo = pool.symbols[symbolIndex];\r\n\r\n    const { symbol, multiplier, feeRatio } = symbolInfo;\r\n    const parameterInfo = pool.parameters;\r\n    return {\r\n      symbol,\r\n      bTokenSymbol: pool.bTokenSymbol,\r\n      multiplier,\r\n      feeRatio,\r\n      fundingRateCoefficient: bg(1).div(pool.fundingPeriod).toString(),\r\n      minPoolMarginRatio: parameterInfo.poolMarginRatio,\r\n      minInitialMarginRatio: parameterInfo.initialMarginRatio,\r\n      minMaintenanceMarginRatio: parameterInfo.maintenanceMarginRatio,\r\n      minLiquidationReward: parameterInfo.minLiquidationReward,\r\n      maxLiquidationReward: parameterInfo.maxLiquidationReward,\r\n      liquidationCutRatio: parameterInfo.liquidationCutRatio,\r\n      protocolFeeCollectRatio: parameterInfo.protocolFeeCollectRatio,\r\n      indexConstituents: getIndexInfo(symbol),\r\n    };\r\n  }\r\n\r\n  async getPositionInfo(accountAddress, symbolId) {\r\n    await this.init();\r\n    const pool = this.pool;\r\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\r\n    const symbolIndex = pool.activeSymbolIds.indexOf(symbolId);\r\n    if (symbolIndex > -1) {\r\n      const oracleAddress =\r\n        pool.offChainOracleSymbolIds.indexOf(symbolId) > -1\r\n          ? ''\r\n          : pool.symbols[symbolIndex].oracleAddress;\r\n      const [\r\n        symbols,\r\n        lastTimestamp,\r\n        margin,\r\n        fundingPeriod,\r\n        price,\r\n      ] = await Promise.all([\r\n        pool.getSymbols(),\r\n        pool.getLastTimestamp(),\r\n        pool.pToken.getMargin(accountAddress),\r\n        pool.getFundingPeriod(),\r\n        getOraclePriceFromCache2.get(\r\n          this.chainId,\r\n          pool.symbols[symbolIndex].symbol,\r\n          oracleAddress\r\n        ),\r\n      ]);\r\n\r\n      const positions = await pool.getPositions(accountAddress)\r\n\r\n      const symbol = symbols[symbolIndex];\r\n      const position = positions[symbolIndex];\r\n      // const { volume } = position\r\n      // const { multiplier, indexPrice } = symbol\r\n      const marginHeld = symbols.reduce((acc, s, index) => {\r\n        return acc.plus(\r\n          bg(s.indexPrice)\r\n            .times(s.multiplier)\r\n            .times(positions[index].volume)\r\n            .times(initialMarginRatio)\r\n            .abs()\r\n        );\r\n      }, bg(0));\r\n      const marginHeldBySymbol = bg(position.volume)\r\n        .times(symbol.multiplier)\r\n        .times(symbol.indexPrice)\r\n        .times(initialMarginRatio)\r\n        .abs();\r\n\r\n      const unrealizedPnl = positions.reduce((acc, p) => {\r\n        return acc.plus(\r\n          bg(p.traderPnl)\r\n        );\r\n      }, bg(0));\r\n      const unrealizedPnlList = symbols.map((s, index) => {\r\n        return [s.symbol, positions[index].traderPnl];\r\n      });\r\n      const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\r\n      const dynamicCost = symbols.reduce((acc, s, index) => {\r\n        if (index !== parseInt(symbolId)) {\r\n          return acc.plus(\r\n            bg(positions[index].volume).times(s.dpmmPrice).times(s.multiplier)\r\n          );\r\n        } else {\r\n          return acc;\r\n        }\r\n      }, bg(0));\r\n      const fundingFee = bg(symbol.cumulativeFundingRate)\r\n        .minus(position.lastCumulativeFundingRate)\r\n        .plus(\r\n          bg(symbol.dpmmPrice)\r\n            .minus(symbol.indexPrice)\r\n            .times(symbol.multiplier)\r\n            .div(fundingPeriod)\r\n            .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\r\n        )\r\n        .times(position.volume)\r\n        .toString();\r\n\r\n      //console.log(position.volume, margin, totalCost.toString(), dynamicCost.toString(), symbol.multiplier, maintenanceMarginRatio)\r\n\r\n      // set liquidatePrice cache\r\n      liquidatePriceCache.set(this.poolAddress, {\r\n        volume: position.volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        price,\r\n        multiplier: symbol.multiplier,\r\n        minMaintenanceMarginRatio: maintenanceMarginRatio,\r\n      });\r\n\r\n      return {\r\n        symbol: symbol.symbol,\r\n        price: price,\r\n        markPrice: symbol.dpmmPrice.toString(),\r\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\r\n        averageEntryPrice: bg(position.volume).eq(0)\r\n          ? '0'\r\n          : bg(position.cost)\r\n              .div(position.volume)\r\n              .div(symbol.multiplier)\r\n              .toString(),\r\n        margin: margin,\r\n        marginHeld: marginHeld.toString(),\r\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n        unrealizedPnl: unrealizedPnl.toString(),\r\n        unrealizedPnlList,\r\n        fundingFee,\r\n        liquidationPrice: calculateLiquidationPrice(\r\n          position.volume,\r\n          margin,\r\n          totalCost,\r\n          dynamicCost,\r\n          symbol.multiplier,\r\n          maintenanceMarginRatio\r\n        ).toString(),\r\n      };\r\n    }\r\n  }\r\n\r\n  async getPositionInfos(accountAddress) {\r\n    await this.init();\r\n    const pool = this.pool;\r\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\r\n    const [\r\n      symbols,\r\n      lastTimestamp,\r\n      margin,\r\n      fundingPeriod,\r\n    ] = await Promise.all([\r\n      pool.getSymbols(),\r\n      //pool.getPositions(accountAddress),\r\n      pool.getLastTimestamp(),\r\n      pool.pToken.getMargin(accountAddress),\r\n      pool.getFundingPeriod(),\r\n    ]);\r\n    const positions = await pool.getPositions(accountAddress)\r\n\r\n    const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\r\n\r\n    return positions.map((p, index) => {\r\n      const symbolIndex = index;\r\n      const symbol = symbols[symbolIndex];\r\n      const position = positions[symbolIndex];\r\n      // const { volume } = position\r\n      // const { multiplier, indexPrice } = symbol\r\n      const marginHeld = symbols.reduce((acc, s, index) => {\r\n        return acc.plus(\r\n          bg(s.indexPrice)\r\n            .times(s.multiplier)\r\n            .times(positions[index].volume)\r\n            .times(initialMarginRatio)\r\n            .abs()\r\n        );\r\n      }, bg(0));\r\n      const marginHeldBySymbol = bg(position.volume)\r\n        .times(symbol.multiplier)\r\n        .times(symbol.indexPrice)\r\n        .times(initialMarginRatio)\r\n        .abs();\r\n      const unrealizedPnl = p.traderPnl\r\n      const dynamicCost = symbols.reduce((acc, s, idx) => {\r\n        if (idx !== index) {\r\n          return acc.plus(\r\n            bg(positions[idx].volume).times(s.dpmmPrice).times(s.multiplier)\r\n          );\r\n        } else {\r\n          return acc;\r\n        }\r\n      }, bg(0));\r\n      const fundingFee = bg(symbol.cumulativeFundingRate)\r\n        .minus(position.lastCumulativeFundingRate)\r\n        .plus(\r\n          bg(symbol.dpmmPrice)\r\n            .minus(symbol.indexPrice)\r\n            .times(symbol.multiplier)\r\n            .div(fundingPeriod)\r\n            .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\r\n        )\r\n        .times(position.volume)\r\n        .toString();\r\n      return {\r\n        symbol: symbol.symbol,\r\n        symbolId: symbol.symbolId,\r\n        price: symbol.indexPrice,\r\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\r\n        averageEntryPrice: bg(position.volume).eq(0)\r\n          ? '0'\r\n          : bg(position.cost)\r\n              .div(position.volume)\r\n              .div(symbol.multiplier)\r\n              .toString(),\r\n        margin: margin,\r\n        marginHeld: marginHeld.toString(),\r\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n        unrealizedPnl: unrealizedPnl.toString(),\r\n        fundingFee,\r\n        liquidationPrice: calculateLiquidationPrice(\r\n          position.volume,\r\n          margin,\r\n          totalCost,\r\n          dynamicCost,\r\n          symbol.multiplier,\r\n          maintenanceMarginRatio\r\n        ).toString(),\r\n      };\r\n    }).filter((p) => p.volume !== '0');\r\n  }\r\n\r\n  async getEstimatedMargin(accountAddress, volume, leverage, symbolId) {\r\n    await this.init(true);\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbol = pool.symbols[symbolIndex];\r\n    return bg(volume)\r\n      .abs()\r\n      .times(symbol.indexPrice)\r\n      .times(symbol.multiplier)\r\n      .div(leverage)\r\n      .toString();\r\n  }\r\n\r\n  async getEstimatedFee(volume, symbolId) {\r\n    await this.init(true);\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbol = pool.symbols[symbolIndex];\r\n    return bg(volume)\r\n      .abs()\r\n      .times(symbol.indexPrice)\r\n      .times(symbol.multiplier)\r\n      .times(symbol.feeRatio)\r\n      .toString();\r\n  }\r\n\r\n  async getFundingRate(symbolId) {\r\n    await this.init();\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbol = pool.symbols[symbolIndex];\r\n\r\n    const liquidity = pool.state.liquidity;\r\n    return {\r\n      funding0: bg(symbol.funding).div(symbol.multiplier).toString(),\r\n      fundingPerSecond: bg(symbol.fundingPerSecond)\r\n        .div(symbol.multiplier)\r\n        .toString(),\r\n      liquidity: liquidity,\r\n      volume: '-',\r\n      tradersNetVolume: bg(symbol.tradersNetVolume)\r\n        .times(symbol.multiplier)\r\n        .toString(),\r\n    };\r\n  }\r\n\r\n  async getEstimatedFundingRate(newVolume, symbolId) {\r\n    await this.init(true);\r\n    const pool = this.pool;\r\n\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbol = { ...pool.symbols[symbolIndex] };\r\n    symbol.dpmmPrice = calculateDpmmPrice(\r\n      symbol.indexPrice,\r\n      symbol.K,\r\n      bg(symbol.tradersNetVolume).plus(newVolume).toString(),\r\n      symbol.multiplier\r\n    ).toString();\r\n    symbol.fundingPerSecond = bg(symbol.dpmmPrice)\r\n      .minus(symbol.indexPrice)\r\n      //.times(symbol.multiplier)\r\n      .div(pool.fundingPeriod)\r\n      .toString();\r\n    return {\r\n      funding1: bg(symbol.fundingPerSecond).times(SECONDS_IN_A_DAY).toString(),\r\n    };\r\n  }\r\n\r\n  async getLiquidityUsed() {\r\n    await this.init();\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const { poolMarginRatio } = pool.parameters;\r\n    return pool.symbols\r\n      .reduce(\r\n        (acc, s) =>\r\n          acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .abs()\r\n              .times(s.indexPrice)\r\n              .times(s.multiplier)\r\n              .times(poolMarginRatio)\r\n          ),\r\n        bg(0)\r\n      )\r\n      .div(pool.state.liquidity)\r\n      .toString();\r\n  }\r\n\r\n  async getEstimatedLiquidityUsed(newVolume, symbolId) {\r\n    await this.init(true);\r\n    const pool = this.pool;\r\n\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n\r\n    const { poolMarginRatio } = pool.parameters;\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    //console.log(pool.symbols, poolMarginRatio, pool.state)\r\n    return pool.symbols\r\n      .reduce(\r\n        (acc, s, index) =>\r\n          index === symbolIndex\r\n            ? acc.plus(\r\n                bg(s.tradersNetVolume)\r\n                  .plus(newVolume)\r\n                  .abs()\r\n                  .times(s.indexPrice)\r\n                  .times(s.multiplier)\r\n                  .times(poolMarginRatio)\r\n              )\r\n            : acc.plus(\r\n                bg(s.tradersNetVolume)\r\n                  .abs()\r\n                  .times(s.indexPrice)\r\n                  .times(s.multiplier)\r\n                  .times(poolMarginRatio)\r\n              ),\r\n        bg(0)\r\n      )\r\n      .div(pool.state.liquidity)\r\n      .toString();\r\n  }\r\n\r\n  // =================\r\n  // static method\r\n  // =================\r\n}\r\n\r\nexport const poolApiFactory = contractFactory(PoolApi);\r\n","import {\r\n  deriToNatural,\r\n  getBlockInfo,\r\n  getPastEvents,\r\n  getHttpBase,\r\n  fetchJson,\r\n  bg,\r\n} from '../../shared/utils';\r\nimport {\r\n  getPoolConfig,\r\n} from '../../shared/config';\r\nimport { perpetualPoolLiteDpmmFactory } from '../contract/factory';\r\n\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  //console.log('bTokenSymbol', bTokenSymbol)\r\n  const perpetualPool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n  await perpetualPool.init()\r\n  const toBlock = await getBlockInfo(chainId, 'latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  const filters = { account: accountAddress };\r\n  let events = await getPastEvents(\r\n    chainId,\r\n    perpetualPool.contract,\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  //events = events.filter((i) => i.returnValues.symbolId === symbolId);\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await perpetualPool.formatTradeEvent(item);\r\n    if (res) {\r\n      const symbolIndex = perpetualPool.activeSymbolIds.indexOf(res.symbolId);\r\n      result.unshift({\r\n        baseToken: perpetualPool.bTokenSymbol,\r\n        direction: res.direction,\r\n        volume: bg(res.volume)\r\n          .times(perpetualPool.symbols[symbolIndex].multiplier)\r\n          .toString(),\r\n        price: res.price,\r\n        indexPrice: res.indexPrice,\r\n        notional: res.notional,\r\n        symbol: res.symbol,\r\n        symbolId: res.symbolId,\r\n        time: res.time,\r\n        transactionFee: res.transactionFee,\r\n        transactionHash: res.transactionHash,\r\n      });\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock,\r\n      tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    const perpetualPool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n    await perpetualPool.init()\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .map((i) => {\r\n          const symbolIndex = perpetualPool.activeSymbolIds.indexOf(i.symbolId)\r\n          if (symbolIndex > -1) {\r\n            return {\r\n              direction: i.direction.trim(),\r\n              baseToken: i.baseToken.trim(),\r\n              symbolId: i.symbolId,\r\n              symbol: i.symbol,\r\n              price: deriToNatural(i.price).toString(),\r\n              notional: deriToNatural(i.notional).toString(),\r\n              volume: deriToNatural(i.volume).times(perpetualPool.symbols[symbolIndex].multiplier).toString(),\r\n              transactionFee: deriToNatural(i.transactionFee).toString(),\r\n              transactionHash: i.transactionHash,\r\n              time: i.time.toString(),\r\n            };\r\n          } else {\r\n            return null\r\n          }\r\n        }).filter((i) => i != null)\r\n    }\r\n    //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n      const { initialBlock } = getPoolConfig(poolAddress);\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch (err) {\r\n    console.log(\r\n      `getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`\r\n    );\r\n  }\r\n  return [];\r\n};\r\n","import { bg, catchTxApiError, checkAddress, checkApiInput, checkChainId, deriToNatural, MAX_INT256 } from \"../../shared\"\r\nimport { checkAmount } from \"../../shared/utils/derijsnext\";\r\nimport { perpetualPoolLiteDpmmFactory } from '../contract/factory.js'\r\n\r\n// mining\r\nexport const addLiquidity = async(...args) => {\r\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, amount) => {\r\n      chainId = checkChainId(chainId);\r\n      poolAddress = checkAddress(poolAddress);\r\n      accountAddress = checkAddress(accountAddress);\r\n      amount = checkAmount(amount)\r\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.addLiquidity(accountAddress, amount)\r\n  }, args )\r\n}\r\n\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  isMaximum = false\r\n) => {\r\n  return catchTxApiError(async () => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    amount = checkAmount(amount);\r\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n    await pool.init();\r\n    if (isMaximum) {\r\n      amount = deriToNatural(MAX_INT256).toString()\r\n    }\r\n    return await pool.removeLiquidity(accountAddress, amount);\r\n  }, []);\r\n};\r\n\r\n//trading\r\nexport const unlock = async (...args) => {\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n    await pool.init();\r\n    return await pool.bToken.unlock(accountAddress, poolAddress);\r\n  }, args);\r\n};\r\n\r\nexport const depositMargin = async (...args) => {\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    amount = checkAmount(amount)\r\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n    await pool.init();\r\n    return await pool.addMargin(accountAddress, amount);\r\n  }, args);\r\n};\r\n\r\nexport const withdrawMargin = async (...args) => {\r\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    amount = checkAmount(amount)\r\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n    await pool.init();\r\n    return await pool.removeMargin(accountAddress, amount);\r\n  }, args);\r\n};\r\n\r\nexport const tradeWithMargin = async(...args) => {\r\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, newVolume, symbolId) => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    newVolume = checkAmount(newVolume)\r\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n    await pool.init();\r\n    return await pool.trade(accountAddress, symbolId, newVolume);\r\n  }, args)\r\n}\r\n\r\nexport const closePosition = async(...args) => {\r\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n    await pool.init();\r\n    const {volume} = await pool.pToken.getPosition(accountAddress, symbolId)\r\n    if (!bg(volume).eq(0)) {\r\n      const newVolume = bg(volume).negated().toString()\r\n      return await pool.trade(accountAddress, symbolId, newVolume);\r\n    } else {\r\n      throw new Error('no position to close')\r\n    }\r\n  }, args)\r\n}","import {\r\n  getPoolInfoApy,\r\n  getPoolLiquidity,\r\n} from '../../shared/api/database_api';\r\nimport {\r\n  getEstimatedFee,\r\n  getEstimatedFundingRate,\r\n  getEstimatedLiquidityUsed,\r\n  getEstimatedMargin,\r\n  getFundingRate,\r\n  getLiquidityInfo,\r\n  getLiquidityUsed,\r\n  getPositionInfo,\r\n  getPositionInfos,\r\n  getSpecification,\r\n  getWalletBalance,\r\n  isUnlocked,\r\n  getEstimatedTimePrice,\r\n} from './query_api';\r\nimport { getTradeHistory } from './trade_history_api';\r\nimport {\r\n  addLiquidity,\r\n  closePosition,\r\n  depositMargin,\r\n  removeLiquidity,\r\n  tradeWithMargin,\r\n  unlock,\r\n  withdrawMargin,\r\n} from './transaction_api';\r\n\r\nexport const api = {\r\n  // mining\r\n  getLiquidityInfo,\r\n  getPoolLiquidity,\r\n  getPoolInfoApy,\r\n  addLiquidity,\r\n  removeLiquidity,\r\n  // trading\r\n  getSpecification,\r\n  getPositionInfo,\r\n  getPositionInfos,\r\n  getWalletBalance,\r\n  isUnlocked,\r\n  getEstimatedFee,\r\n  getEstimatedMargin,\r\n  getFundingRate,\r\n  getEstimatedFundingRate,\r\n  getLiquidityUsed,\r\n  getEstimatedLiquidityUsed,\r\n  getEstimatedTimePrice,\r\n  getFundingRateCache: () => {},\r\n  unlock,\r\n  depositMargin,\r\n  withdrawMargin,\r\n  tradeWithMargin,\r\n  closePosition,\r\n  // tradeHistory\r\n  getTradeHistory,\r\n};\r\n","import { checkApiInput, checkApiInputWithoutAccount, checkSymbolId, checkTokenId } from '../../shared/utils/derijsnext';\r\nimport { catchApiError } from '../../shared/utils/api';\r\nimport { bg } from '../../shared/utils';\r\nimport { perpetualPoolLiteDpmmFactory } from '../contract/factory';\r\nimport { poolApiFactory } from '../contract/PoolApi';\r\nimport { calculateDpmmCost } from '../calc';\r\n\r\nexport const getLiquidityInfo = async (chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getLiquidityInfo(accountAddress);\r\n    },\r\n    args,\r\n    'getLiquidityInfo',\r\n    {\r\n      totalSupply: '',\r\n      poolLiquidity: '',\r\n      shares: '',\r\n      shareValue: '',\r\n      maxRemovableShares: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(chainId, poolAddress);\r\n      symbolId = checkTokenId(symbolId)\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getSpecification(symbolId);\r\n    },\r\n    args,\r\n    'getSpecification',\r\n    {\r\n      symbol: '',\r\n      bTokenSymbol: '',\r\n      multiplier: '',\r\n      feeRatio: '',\r\n      fundingRateCoefficient: '',\r\n      minPoolMarginRatio: '',\r\n      minInitialMarginRatio: '',\r\n      minMaintenanceMarginRatio: '',\r\n      minLiquidationReward: '',\r\n      maxLiquidationReward: '',\r\n      liquidationCutRatio: '',\r\n      protocolFeeCollectRatio: '',\r\n      indexConstituents: { tokens: [], url: '' },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, accountAddress, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress, symbolId) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getPositionInfo(accountAddress, symbolId);\r\n    },\r\n    args,\r\n    'getPositionInfo',\r\n    {\r\n      price: '',\r\n      volume: '',\r\n      averageEntryPrice: '',\r\n      margin: '',\r\n      marginHeld: '',\r\n      marginHeldBySymbol: '',\r\n      unrealizedPnl: '',\r\n      unrealizedPnlList: [],\r\n      fundingFee: '',\r\n      liquidationPrice: '',\r\n    }\r\n  );\r\n}\r\n\r\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getPositionInfos(accountAddress);\r\n    },\r\n    args,\r\n    'getPositionInfos',\r\n    []\r\n  );\r\n}\r\n\r\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\r\n  const args =  [chainId, poolAddress, accountAddress]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress)\r\n      await pool.init()\r\n      return await pool.bToken.balanceOf(accountAddress)\r\n  }, args, 'getWalletBalance', '')\r\n}\r\n\r\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\r\n  const args = [chainId, poolAddress, accountAddress]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, accountAddress) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.bToken.isUnlocked(accountAddress, poolAddress);\r\n    },\r\n    args,\r\n    'isUnlocked',\r\n    false,\r\n  );\r\n}\r\n\r\nexport const getEstimatedMargin = async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\r\n  const args = [chainId, poolAddress,accountAddress, volume, leverage, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress,\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getEstimatedMargin(accountAddress, volume, leverage, symbolId);\r\n  }, args, 'getEstimatedMargin', '')\r\n}\r\n\r\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\r\n  const args = [chainId, poolAddress, volume, symbolId]\r\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getEstimatedFee(volume, symbolId);\r\n  }, args, 'getEstimatedFee', '')\r\n}\r\n\r\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getFundingRate(symbolId);\r\n    },\r\n    args,\r\n    'getFundingRate',\r\n    ''\r\n  );\r\n}\r\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, newVolume, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newVolume, symbolId) => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getEstimatedFundingRate(newVolume, symbolId);\r\n    },\r\n    args,\r\n    'getEstimatedFundingRate',\r\n    ''\r\n  );\r\n}\r\n\r\nexport const getLiquidityUsed = async(chainId, poolAddress, symbolId) => {\r\n  const args = [chainId, poolAddress, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, symbolId) => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getLiquidityUsed(symbolId);\r\n    },\r\n    args,\r\n    'getLiquidityUsed',\r\n    ''\r\n  );\r\n}\r\n\r\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newVolume, symbolId) => {\r\n  const args = [chainId, poolAddress, newVolume, symbolId]\r\n  return catchApiError(\r\n    async (chainId, poolAddress, newVolume, symbolId) => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const viewer = poolApiFactory(chainId, poolAddress);\r\n      return await viewer.getEstimatedLiquidityUsed(newVolume, symbolId);\r\n    },\r\n    args,\r\n    'getEstimatedLiquidityUsed',\r\n    ''\r\n  );\r\n}\r\n\r\nexport const getEstimatedTimePrice = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress,\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      const pool = api.pool;\r\n      const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n      if (!pool.isSymbolsUpdated()) {\r\n        await pool.getSymbols();\r\n      }\r\n      const symbol = pool.symbols[symbolIndex];\r\n      //console.log('dpmmPrice', symbol.dpmmPrice.toString(), symbol.indexPrice)\r\n      const cost = calculateDpmmCost(\r\n        symbol.indexPrice,\r\n        symbol.K,\r\n        symbol.tradersNetVolume,\r\n        symbol.multiplier,\r\n        newNetVolume\r\n      );\r\n      return bg(cost).div(symbol.multiplier).div(newNetVolume).toString();\r\n    },\r\n    [],\r\n    'getEstimatedTimePrice',\r\n    ''\r\n  );\r\n};\r\n","// this file is generated by script, don't modify it !!!\r\n// import { processMethod } from \"../../shared/utils/index.js\";\r\n\r\nimport { bg, toWei, fromWei, deriToNatural, processResult, getBlockInfo } from \"../../shared/utils/index.js\";\r\nimport { normalizeSymbolUnit, SECONDS_IN_A_DAY } from \"../../shared/config\";\r\n// import {\r\n//   processResult,\r\n// } from \"../../shared/utils/contract.js\";\r\n//import { range } from '../../shared/utils/lang.js'\r\nimport { bTokenOracle1Factory, ERC20Factory, offChainOracleFactory } from \"../../shared/contract/factory.js\";\r\nimport { lTokenFactory, perpetualPoolRouterDpmmFactory, pTokenFactory } from \"./factory.js\";\r\n\r\n\r\nimport { getOraclePriceFromCache2 } from '../../shared/utils/oracle';\r\nimport { calculateDpmmCost, calculateDpmmPrice, calculateK } from \"../../v2_lite_dpmm/calc.js\";\r\n\r\nconst range = (n) => {\r\n  if (typeof n === 'string' && /^\\d+$/.test(n) ) {\r\n    n = parseInt(n)\r\n  }\r\n  return [...Array(n).keys()]\r\n}\r\n\r\nconst addMethods = (klass, fns = []) => {\r\n  if (fns.length > 0) {\r\n    for (let i = 0; i < fns.length; i++) {\r\n      klass = fns[i](klass);\r\n    }\r\n    return klass;\r\n  } else {\r\n    return klass;\r\n  }\r\n};\r\nconst overrideMethods = (klass, fns = []) => {\r\n  if (fns.length > 0) {\r\n    for (let i = 0; i < fns.length; i++) {\r\n      const fn = fns[i][0]\r\n      const args = fns[i].slice(1)\r\n      // console.log(fn, args)\r\n      klass = fn(klass)(...args);\r\n    }\r\n    return klass;\r\n  } else {\r\n    return klass;\r\n  }\r\n};\r\nconst processMethod = (klass) => (methodName, propList = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    const res = await originMethod.apply(this, args);\r\n    return processResult(res, propList);\r\n  };\r\n  return klass;\r\n};\r\n\r\nconst processTxMethod = (klass) => (methodName, toWeiArgPositions = []) => {\r\n  const originMethod = klass.prototype[methodName];\r\n  klass.prototype[methodName] = async function (...args) {\r\n    //const prices = await this._getSymbolPrices()\r\n    let newArgs = args.map((arg, index) =>\r\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\r\n    );\r\n    //newArgs.push(prices)\r\n    return await originMethod.apply(this, newArgs);\r\n  };\r\n  return klass;\r\n};\r\n\r\n\r\nconst init = (klass) => {\r\n  klass.prototype.init = async function (isEstimatedApi = false) {\r\n    await this._init();\r\n    if (!this.addresses || !this.parameters) {\r\n      [this.addresses, this.parameters, this.state, this.lengths] =\r\n        await Promise.all([\r\n          this.getAddresses(),\r\n          this.getParameters(),\r\n          this.getPoolStateValues(),\r\n          this.getLengths(),\r\n        ]);\r\n      this.fundingPeriod = (3 * 24 * 3600).toString();\r\n      const { pTokenAddress, lTokenAddress, routerAddress } = this.addresses;\r\n      this.lToken = lTokenFactory(this.chainId, lTokenAddress);\r\n      this.pToken = pTokenFactory(this.chainId, pTokenAddress);\r\n      this.router = perpetualPoolRouterDpmmFactory(this.chainId, routerAddress)\r\n    }\r\n    if (!isEstimatedApi) {\r\n      const lengths = await this.getLengths();\r\n      if (\r\n        !this.symbols ||\r\n        !this.bTokens ||\r\n        this.lengths.toString() !== lengths.toString()\r\n      ) {\r\n        this.bTokenIds = range(lengths[0]).map((i) => i.toString());\r\n        this.activeSymbolIds = range(lengths[1]).map((i) => i.toString());\r\n        this.bTokens = await Promise.all(\r\n          this.bTokenIds.reduce(\r\n            (acc, bTokenId) => [...acc, this.getBToken(bTokenId)],\r\n            []\r\n          )\r\n        );\r\n        // update bToken price\r\n        for (let i = 0; i < this.bTokenIds.length; i++) {\r\n          if (i === 0) {\r\n            this.bTokens[i].price = \"1\";\r\n          } else {\r\n            // this.bTokens[i].price = await offChainOracleFactory(\r\n            //   this.chainId,\r\n            //   this.bTokens[i].oracleAddress\r\n            // ).getPrice();\r\n            this.bTokens[i].price = await bTokenOracle1Factory(\r\n              this.chainId,\r\n              this.bTokens[i].oracleAddress\r\n            ).getPrice();\r\n          }\r\n          this.bTokens[i].equity = bg(this.bTokens[i].liquidity)\r\n            .times(this.bTokens[i].price)\r\n            .times(this.bTokens[i].discount)\r\n            .plus(this.bTokens[i].pnl)\r\n            .toString();\r\n        }\r\n        this.bTokenSymbols = await Promise.all(\r\n          this.bTokens.reduce(\r\n            (acc, bToken) => [\r\n              ...acc,\r\n              ERC20Factory(this.chainId, bToken.bTokenAddress).symbol(),\r\n            ],\r\n            []\r\n          )\r\n        );\r\n        this.symbols = await Promise.all(\r\n          this.activeSymbolIds.reduce(\r\n            (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n            []\r\n          )\r\n        );\r\n        this.activeSymbolNames = this.symbols.map((s) => s.symbol);\r\n\r\n        // init\r\n        this.positions = [];\r\n        this.userState = {};\r\n        this.offChainOracleSymbolIds = [];\r\n        this.offChainOracleSymbolNames = [];\r\n\r\n        await this.getLiquidity()\r\n      }\r\n    }\r\n  };\r\n  return klass;\r\n};\r\nconst getConfig = (klass) => {\r\n  klass.prototype.getConfig = async function () {\r\n    return {\r\n      pool: this.contractAddress,\r\n      pToken: this.addresses.pTokenAddress,\r\n      lToken: this.addresses.lTokenAddress,\r\n      router: this.addresses.routerAddress,\r\n      bTokenSymbols: this.bTokenSymbols,\r\n      bTokens: this.bTokens.map((b, index) => ({\r\n        bTokenId: index.toString(),\r\n        bTokenSymbol: this.bTokenSymbols[index].toUpperCase(),\r\n        bToken: b.bTokenAddress,\r\n      })),\r\n      symbols: this.symbols.map((s, index) => ({\r\n        symbolId: index.toString(),\r\n        symbol: s.symbol,\r\n        unit: normalizeSymbolUnit(s.symbol),\r\n      })),\r\n      initialBlock: this.initialBlock,\r\n      type: \"perpetual\",\r\n      version: 'v2',\r\n      versionId: \"v2_dpmm\",\r\n      chainId: this.chainId,\r\n    };\r\n  };\r\n  return klass;\r\n};\r\n\r\nconst getLiquidity = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype.getLiquidity = async function () {\r\n    await this._init()\r\n    const res = this.bTokens.reduce((acc, b) => acc.plus(b.equity), bg(0)).toString()\r\n    this.state = this.state || {}\r\n    this.state.liquidity = res\r\n    return res\r\n  }\r\n  return klass\r\n}\r\n\r\nexport const getLastTimestamp = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype.getLastTimestamp = async function () {\r\n    const res = await this._call('getPoolStateValues', []);\r\n      return res[0]\r\n    }\r\n  return klass\r\n}\r\nexport const getProtocolFeeAccrued = (klass) => {\r\n  // init pool addresses, parameters, tokens and viewer\r\n  klass.prototype.getProtocolFeeAccrued = async function () {\r\n    const res = await this._call('getPoolStateValues', []);\r\n      return fromWei(res[1])\r\n    }\r\n  return klass\r\n}\r\n\r\n// getStateValues\r\nconst getStateValues = (klass) => {\r\n  klass.prototype.getStateValues = async function () {\r\n    const res = await this.getPoolStateValues()\r\n    // update\r\n    this.state= { ...this.state, ...res}\r\n    return this.state\r\n  }\r\n  return klass\r\n}\r\n\r\nconst getBTokens = (klass) => {\r\n  klass.prototype.getBTokens = async function (bTokenId) {\r\n    const bTokenIds = bTokenId ? [bTokenId] : this.bTokenIds\r\n    const bTokens = await Promise.all(\r\n      bTokenIds.reduce(\r\n        (acc, bTokenId) => [...acc, this.getBToken(bTokenId)],\r\n        []\r\n      )\r\n    );\r\n    // update bToken price\r\n    for (let i = 0; i < this.bTokenIds.length; i++) {\r\n      if (i === 0) {\r\n        bTokens[i].price = \"1\";\r\n      } else {\r\n        bTokens[i].price = await offChainOracleFactory(\r\n          this.chainId,\r\n          this.bTokens[i].oracleAddress\r\n        ).getPrice();\r\n      }\r\n      bTokens[i].equity = bg(this.bTokens[i].liquidity)\r\n        .times(this.bTokens[i].price)\r\n        .times(this.bTokens[i].discount)\r\n        .plus(this.bTokens[i].pnl)\r\n        .toString();\r\n    }\r\n\r\n    // update\r\n    if (bTokenId) {\r\n      const bTokenIndex = this.bTokenIds.indexOf(bTokenId)\r\n      if (bTokenIndex > -1) {\r\n        this.bTokens[bTokenIndex] = bTokens[0]\r\n      }\r\n    } else {\r\n      this.bTokens = bTokens\r\n    }\r\n    return bTokens\r\n  };\r\n  return klass\r\n};\r\n\r\n// getSymbols()\r\nconst getSymbols = (klass) => {\r\n  klass.prototype.getSymbols = async function (symbolId) {\r\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\r\n    const symbols = await Promise.all(\r\n      symbolIds.reduce(\r\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\r\n        []\r\n      )\r\n    );\r\n\r\n    const indexPrices = await Promise.all(\r\n      symbols.map((s) => {\r\n        const oracleAddress = this.offChainOracleSymbolIds.includes(s.symbolId)\r\n          ? ''\r\n          : s.oracleAddress;\r\n        return getOraclePriceFromCache2.get(\r\n          this.chainId,\r\n          s.symbol,\r\n          oracleAddress\r\n        );\r\n      })\r\n    );\r\n    symbols.forEach((s, index) => {\r\n      s.indexPrice = indexPrices[index];\r\n      s.tradersNetPosition = bg(s.tradersNetVolume).times(s.multiplier).toString();\r\n      s.notional = bg(s.tradersNetPosition).abs().times(s.indexPrice).toString(),\r\n      s.K = calculateK(s.indexPrice, this.state.liquidity, s.alpha).toString();\r\n      s.dpmmPrice = calculateDpmmPrice(\r\n        s.indexPrice,\r\n        s.K,\r\n        s.tradersNetVolume,\r\n        s.multiplier\r\n      );\r\n\r\n      const pnl = calculateDpmmCost(\r\n        s.indexPrice,\r\n        s.K,\r\n        s.tradersNetVolume,\r\n        s.multiplier,\r\n        bg(s.tradersNetVolume).negated().toString()\r\n      )\r\n        .negated()\r\n        .minus(s.tradersNetCost);\r\n      const ratePerSecond = bg(s.dpmmPrice)\r\n        .minus(s.indexPrice)\r\n        .times(s.multiplier)\r\n        .div(this.fundingPeriod)\r\n        .toString();\r\n      const diff = bg(Math.floor(Date.now() / 1000)).minus(\r\n        this.state.lastTimestamp\r\n      );\r\n      s.fundingPerSecond = ratePerSecond\r\n      s.funding = bg(ratePerSecond).times(SECONDS_IN_A_DAY).toString()\r\n      s.pnl = pnl.toString()\r\n      s.undistributedPnl = bg(s.distributedUnrealizedPnl)\r\n        .minus(pnl)\r\n        .plus(bg(ratePerSecond).times(diff).times(s.tradersNetVolume))\r\n        .toString();\r\n    });\r\n\r\n    // update\r\n    if (symbolId) {\r\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\r\n      this.symbols[symbolIndex] = symbols[0]\r\n    } else {\r\n      this.symbols = symbols\r\n    }\r\n    \r\n    return symbols\r\n  };\r\n  return klass\r\n};\r\n\r\n// get traders positions\r\nconst getPositions = (klass) => {\r\n  klass.prototype.getPositions = async function (account, symbolId) {\r\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\r\n    const positions = await Promise.all(\r\n      symbolIds.reduce(\r\n        (acc, symbolId) => [...acc, this.pToken.getPosition(account, symbolId)],\r\n        []\r\n      )\r\n    );\r\n    const timeDiff = bg(Math.floor(Date.now() / 1000)).minus(\r\n      this.state.lastTimestamp\r\n    );\r\n    positions.forEach((p, index) => {\r\n      const symbol = this.symbols[index];\r\n      p.fundingAccrued = bg(p.volume)\r\n        .times(\r\n          bg(symbol.cumulativeFundingRate)\r\n            .plus(bg(timeDiff).times(this.symbols[index].fundingPerSecond))\r\n            .minus(p.lastCumulativeFundingRate)\r\n        )\r\n        .toString();\r\n      p.traderPnl = calculateDpmmCost(\r\n        symbol.indexPrice,\r\n        symbol.K,\r\n        symbol.tradersNetVolume,\r\n        symbol.multiplier,\r\n        bg(p.volume).negated().toString()\r\n      )\r\n        .negated()\r\n        .minus(p.cost).toString();\r\n\r\n      p.notional = bg(p.volume).abs().times(symbol.indexPrice).times(symbol.multiplier).toString()\r\n    });\r\n\r\n    // update\r\n    if (symbolId) {\r\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\r\n      if (symbolIndex > -1) {\r\n        this.positions[symbolIndex] = positions[0]\r\n      }\r\n    } else {\r\n      this.positions = positions\r\n    }\r\n\r\n    return positions\r\n  };\r\n  return klass\r\n};\r\n\r\nconst isBTokensUpdated = (klass) => {\r\n  klass.prototype.isBTokensUpdated = function() {\r\n    return Array.isArray(this.bTokens) && this.bTokens.length > 0 && this.bTokens[0].price != null\r\n  }\r\n  return klass\r\n}\r\nconst isSymbolsUpdated = (klass) => {\r\n  klass.prototype.isSymbolsUpdated = function() {\r\n    return Array.isArray(this.symbols) && this.symbols.length > 0 && this.symbols[0].indexPrice != null\r\n  }\r\n  return klass\r\n}\r\nconst isPositionsUpdated = (klass) => {\r\n  klass.prototype.isPositionsUpdated = function() {\r\n    return Array.isArray(this.positions) && this.positions.length > 0 && this.positions[0].fundingAccrued != null\r\n  }\r\n  return klass\r\n}\r\n\r\nconst getDynamicEquity = (klass) => {\r\n  klass.prototype['getDynamicEquity'] = async function() {\r\n    if (!this.isSymbolsUpdated()) {\r\n      await this.getSymbols();\r\n    }\r\n    //console.log(this.symbols)\r\n    const res = bg(this.state.liquidity)\r\n      .plus(\r\n        this.symbols.reduce((acc, s) => acc.plus(s.undistributedPnl), bg(0))\r\n      )\r\n      .toString();\r\n    this.state.dynamicEquity = res;\r\n    return res;\r\n  }\r\n  return klass\r\n}\r\n\r\nconst getTraderLiquidity = (klass) => {\r\n  klass.prototype[\"getTraderLiquidity\"] = async function(account) {\r\n    return await this.lToken.balanceOf(account)\r\n  }\r\n  return klass\r\n}\r\n\r\nconst getPoolRequiredMargin = (klass) => {\r\n  klass.prototype['getPoolRequiredMargin'] = async function () {\r\n    if (!this.isSymbolsUpdated()) {\r\n      await this.getSymbols()\r\n    }\r\n    const { minPoolMarginRatio } = this.parameters;\r\n    return this.symbols\r\n      .reduce(\r\n        (acc, s) =>\r\n          acc.plus(\r\n            bg(s.notional)\r\n          ),\r\n        bg(0)\r\n      )\r\n      .times(minPoolMarginRatio).toString()\r\n  };\r\n  return klass\r\n}\r\n\r\nconst getTraderMarginStatus = (klass) => {\r\n  klass.prototype['getTraderMarginStatus'] = async function (account) {\r\n    if (!this.isBTokensUpdated()) {\r\n      await this.getSymbols()\r\n    }\r\n    if (!this.isSymbolsUpdated()) {\r\n      await this.getSymbols()\r\n    }\r\n    if (!this.isPositionsUpdated()) {\r\n      await this.getPositions(account)\r\n    }\r\n    if (!this.userState.margins) {\r\n      this.userState.margins = await this.pToken.getMargins(account);\r\n    }\r\n\r\n    this.userState.totapPnl = this.positions.reduce((acc, p) => acc.plus(p.traderPnl), bg(0)).toString()\r\n    //this.userState.totalEquity = bg(this.userState.totalPnl).plus(this.userState.margins[0])\r\n    this.userState.totalEquity = this.userState.margins.reduce(\r\n      (acc, m, i) =>\r\n        acc.plus(\r\n          bg(m).times(this.bTokens[i].price).times(this.bTokens[i].discount)\r\n        ),\r\n      bg(this.userState.totalPnl)\r\n    );\r\n\r\n    this.userState.totalNotional = this.positions.reduce(\r\n      (acc, p) => acc.plus(p.notional),\r\n      bg(0)\r\n    );\r\n\r\n    return [this.userState.totalEquity, this.userState.totalNotional];\r\n  };\r\n  return klass\r\n}\r\n\r\nconst formatTradeEvent = (klass) => {\r\n  klass.prototype['formatTradeEvent'] = async function (event) {\r\n    const info = event.returnValues;\r\n    const tradeVolume = deriToNatural(info.tradeVolume);\r\n    const block = await getBlockInfo(this.chainId, event.blockNumber);\r\n    const symbolId = info.symbolId;\r\n    const index = this.activeSymbolIds.indexOf(symbolId);\r\n    const symbol = this.symbols[index];\r\n    const tradeFee = info.tradeFee;\r\n\r\n    const direction =\r\n      tradeFee !== '-1'\r\n        ? bg(tradeVolume).gt(0)\r\n          ? 'LONG'\r\n          : 'SHORT'\r\n        : 'LIQUIDATION';\r\n    const price = bg(info.tradeCost)\r\n      .div(info.tradeVolume)\r\n      .div(symbol.multiplier)\r\n      .toString();\r\n    const notional = bg(tradeVolume)\r\n      .abs()\r\n      .times(price)\r\n      .times(symbol.multiplier)\r\n      .toString();\r\n\r\n    const res = {\r\n      symbolId: info.symbolId,\r\n      symbol: symbol.symbol,\r\n      trader: info.trader,\r\n      direction,\r\n      volume: bg(tradeVolume).abs().toString(),\r\n      price: price,\r\n      indexPrice: deriToNatural(info.indexPrice).toString(),\r\n      notional: notional,\r\n      transactionFee:\r\n        tradeFee === '-1' ? '0' : deriToNatural(tradeFee).toString(),\r\n      transactionHash: event.transactionHash,\r\n      time: block.timestamp * 1000,\r\n      extra: {},\r\n    };\r\n    return res;\r\n  };\r\n  return klass;\r\n};\r\n\r\n\r\nexport const perpetualPoolDpmmAdapter = (klass) => {\r\n    // klass = processMethod(klass, 'symbol', []);\r\n    klass = addMethods(klass, [\r\n        init,\r\n        getConfig,\r\n        getLiquidity,\r\n        getLastTimestamp,\r\n        getProtocolFeeAccrued,\r\n        getStateValues,\r\n        getBTokens,\r\n        getSymbols,\r\n        getPositions,\r\n        isBTokensUpdated,\r\n        isSymbolsUpdated,\r\n        isPositionsUpdated,\r\n        getDynamicEquity,\r\n        getTraderLiquidity,\r\n        getTraderMarginStatus,\r\n        getPoolRequiredMargin,\r\n        formatTradeEvent,\r\n    ])\r\n    klass = overrideMethods(klass, [\r\n      [\r\n        processMethod,\r\n        \"getParameters\",\r\n        [\r\n          \"initialMarginRatio\",\r\n          \"liquidationCutRatio\",\r\n          \"maintenanceMarginRatio\",\r\n          \"maxLiquidationReward\",\r\n          \"minBToken0Ratio\",\r\n          \"minPoolMarginRatio\",\r\n          \"protocolFeeCollectRatio\",\r\n        ],\r\n      ],\r\n      [\r\n        processMethod,\r\n        \"getBToken\",\r\n        [\"discount\", \"price\", \"liquidity\", \"pnl\", \"cumulativePnl\"],\r\n      ],\r\n      [\r\n        processMethod,\r\n        \"getSymbol\",\r\n        [\r\n          \"multiplier\",\r\n          \"feeRatio\",\r\n          //\"fundingRateCoefficient\",\r\n          \"alpha\",\r\n          \"distributedUnrealizedPnl\",\r\n          //\"price\",\r\n          \"cumulativeFundingRate\",\r\n          \"tradersNetVolume\",\r\n          \"tradersNetCost\",\r\n        ],\r\n      ],\r\n      [processMethod, \"getPoolStateValues\", [\"protocolFeeAccrued\"]],\r\n    ]);\r\n    return klass\r\n}\r\nexport const perpetualPoolRouterDpmmAdapter = (klass) => {\r\n  // klass = processMethod(klass, 'symbol', []);\r\n  klass = overrideMethods(klass, [\r\n    [processTxMethod, 'addLiquidity', ['2']],\r\n    //[processTxMethod, 'addLiquidityWithPrices', ['2']],\r\n    [processTxMethod, 'removeLiquidity', ['2']],\r\n    //[processTxMethod, 'removeLiquidityWithPrices', ['2']],\r\n    [processTxMethod, 'addMargin', ['2']],\r\n    //[processTxMethod, 'addMarginWithPrices', ['2']],\r\n    [processTxMethod, 'removeMargin', ['2']],\r\n    //[processTxMethod, 'removeMarginWithPrices', ['2']],\r\n    [processTxMethod, 'trade', ['2']],\r\n    //[processTxMethod, 'tradeWithPrices', ['2']],\r\n  ]);\r\n  return klass;\r\n};\r\n\r\nexport const lTokenAdapter = (klass) => {\r\n  // klass = processMethod(klass, 'symbol', []);\r\n  klass = overrideMethods(klass, [\r\n    [processMethod, 'getAsset', ['liquidity', 'pnl', 'lastCumulativePnl']],\r\n    [processMethod, 'getAssets', ['liquidity', 'pnl', 'lastCumulativePnl']],\r\n  ]);\r\n  return klass;\r\n};\r\n\r\nexport const pTokenAdapter = (klass) => {\r\n  klass = overrideMethods(klass, [\r\n    [processMethod, 'getMargins'],\r\n    [\r\n      processMethod,\r\n      'getPosition',\r\n      ['cost', 'volume', 'lastCumulativeFundingRate'],\r\n    ],\r\n    [\r\n      processMethod,\r\n      'getPositions',\r\n      ['cost', 'volume', 'lastCumulativeFundingRate'],\r\n    ],\r\n  ]);\r\n  return klass;\r\n};","// this file is generated by script, don't modify it !!!\r\nexport const lTokenAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"name_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"numBTokens_\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"ApprovalForAll\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"liquidity\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"pnl\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"lastCumulativePnl\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"UpdateAsset\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"exists\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getApproved\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getAsset\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"liquidity\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"pnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativePnl\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct ILToken.Asset\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getAssets\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"liquidity\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"pnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativePnl\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct ILToken.Asset[]\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getTokenId\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"isApprovedForAll\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"mint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"numBTokens\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ownerOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"pool\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes\",\r\n                \"name\": \"data\",\r\n                \"type\": \"bytes\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"setApprovalForAll\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"num\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setNumBTokens\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newPool\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setPool\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"bytes4\",\r\n                \"name\": \"interfaceId\",\r\n                \"type\": \"bytes4\"\r\n            }\r\n        ],\r\n        \"name\": \"supportsInterface\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalMinted\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"liquidity\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"pnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativePnl\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct ILToken.Asset\",\r\n                \"name\": \"asset\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"name\": \"updateAsset\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { lTokenAbi } from '../abi/lTokenAbi.js'\r\n\r\nexport class LToken extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, lTokenAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async balanceOf(owner) {\r\n    const res = await this._call('balanceOf', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async exists(owner) {\r\n  //    const res = await this._call('exists', [owner])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async getApproved(tokenId) {\r\n  //    const res = await this._call('getApproved', [tokenId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getAsset(owner, bTokenId) {\r\n    const res = await this._call('getAsset', [owner, bTokenId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getAssets(owner) {\r\n    const res = await this._call('getAssets', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async getTokenId(owner) {\r\n  //    const res = await this._call('getTokenId', [owner])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async isApprovedForAll(owner, operator) {\r\n  //    const res = await this._call('isApprovedForAll', [owner, operator])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async name() {\r\n  //    const res = await this._call('name', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async numBTokens() {\r\n  //    const res = await this._call('numBTokens', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async ownerOf(tokenId) {\r\n  //    const res = await this._call('ownerOf', [tokenId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async pool() {\r\n  //    const res = await this._call('pool', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async supportsInterface(interfaceId) {\r\n  //    const res = await this._call('supportsInterface', [interfaceId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async totalMinted() {\r\n  //    const res = await this._call('totalMinted', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async approve(accountAddress, operator, tokenId) {\r\n  //    return await this._transact('approve', [operator, tokenId], accountAddress)\r\n  //  }\r\n  //  async burn(accountAddress, owner) {\r\n  //    return await this._transact('burn', [owner], accountAddress)\r\n  //  }\r\n  //  async mint(accountAddress, owner) {\r\n  //    return await this._transact('mint', [owner], accountAddress)\r\n  //  }\r\n  //  async safeTransferFrom(accountAddress, from, to, tokenId) {\r\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\r\n  //  }\r\n  //  async safeTransferFrom(accountAddress, from, to, tokenId, data) {\r\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\r\n  //  }\r\n  //  async setApprovalForAll(accountAddress, operator, approved) {\r\n  //    return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\r\n  //  }\r\n  //  async setNumBTokens(accountAddress, num) {\r\n  //    return await this._transact('setNumBTokens', [num], accountAddress)\r\n  //  }\r\n  //  async setPool(accountAddress, newPool) {\r\n  //    return await this._transact('setPool', [newPool], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, tokenId) {\r\n  //    return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\r\n  //  }\r\n  //  async updateAsset(accountAddress, owner, bTokenId, asset) {\r\n  //    return await this._transact('updateAsset', [owner, bTokenId, asset], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const pTokenAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"name_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"numSymbols_\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"numBTokens_\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"ApprovalForAll\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"UpdateMargin\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"volume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"cost\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"lastCumulativeFundingRate\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"UpdatePosition\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"exists\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getApproved\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getMargin\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getMargins\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"int256[]\",\r\n                \"name\": \"\",\r\n                \"type\": \"int256[]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getPosition\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"volume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPToken.Position\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getPositions\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"volume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPToken.Position[]\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"getTokenId\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"isApprovedForAll\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"mint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"numBTokens\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"numSymbols\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ownerOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"pool\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes\",\r\n                \"name\": \"data\",\r\n                \"type\": \"bytes\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"setApprovalForAll\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"num\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setNumBTokens\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"num\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setNumSymbols\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newPool\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setPool\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"bytes4\",\r\n                \"name\": \"interfaceId\",\r\n                \"type\": \"bytes4\"\r\n            }\r\n        ],\r\n        \"name\": \"supportsInterface\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalMinted\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"updateMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256[]\",\r\n                \"name\": \"margins\",\r\n                \"type\": \"int256[]\"\r\n            }\r\n        ],\r\n        \"name\": \"updateMargins\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"volume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"lastCumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPToken.Position\",\r\n                \"name\": \"position\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"name\": \"updatePosition\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { pTokenAbi } from '../abi/pTokenAbi.js'\r\n\r\nexport class PToken extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, pTokenAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async balanceOf(owner) {\r\n    const res = await this._call('balanceOf', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async exists(owner) {\r\n    const res = await this._call('exists', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async getApproved(tokenId) {\r\n  //    const res = await this._call('getApproved', [tokenId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getMargin(owner, bTokenId) {\r\n    const res = await this._call('getMargin', [owner, bTokenId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getMargins(owner) {\r\n    const res = await this._call('getMargins', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getPosition(owner, symbolId) {\r\n    const res = await this._call('getPosition', [owner, symbolId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getPositions(owner) {\r\n    const res = await this._call('getPositions', [owner])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async getTokenId(owner) {\r\n  //    const res = await this._call('getTokenId', [owner])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async isApprovedForAll(owner, operator) {\r\n  //    const res = await this._call('isApprovedForAll', [owner, operator])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async numBTokens() {\r\n    const res = await this._call('numBTokens', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async numSymbols() {\r\n    const res = await this._call('numSymbols', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async ownerOf(tokenId) {\r\n  //    const res = await this._call('ownerOf', [tokenId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async supportsInterface(interfaceId) {\r\n  //    const res = await this._call('supportsInterface', [interfaceId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async totalMinted() {\r\n    const res = await this._call('totalMinted', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async approve(accountAddress, operator, tokenId) {\r\n  //    return await this._transact('approve', [operator, tokenId], accountAddress)\r\n  //  }\r\n  //  async burn(accountAddress, owner) {\r\n  //    return await this._transact('burn', [owner], accountAddress)\r\n  //  }\r\n  //  async mint(accountAddress, owner) {\r\n  //    return await this._transact('mint', [owner], accountAddress)\r\n  //  }\r\n  //  async safeTransferFrom(accountAddress, from, to, tokenId) {\r\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\r\n  //  }\r\n  //  async safeTransferFrom(accountAddress, from, to, tokenId, data) {\r\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\r\n  //  }\r\n  //  async setApprovalForAll(accountAddress, operator, approved) {\r\n  //    return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\r\n  //  }\r\n  //  async setNumBTokens(accountAddress, num) {\r\n  //    return await this._transact('setNumBTokens', [num], accountAddress)\r\n  //  }\r\n  //  async setNumSymbols(accountAddress, num) {\r\n  //    return await this._transact('setNumSymbols', [num], accountAddress)\r\n  //  }\r\n  //  async setPool(accountAddress, newPool) {\r\n  //    return await this._transact('setPool', [newPool], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, tokenId) {\r\n  //    return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\r\n  //  }\r\n  //  async updateMargin(accountAddress, owner, bTokenId, amount) {\r\n  //    return await this._transact('updateMargin', [owner, bTokenId, amount], accountAddress)\r\n  //  }\r\n  //  async updateMargins(accountAddress, owner, margins) {\r\n  //    return await this._transact('updateMargins', [owner, margins], accountAddress)\r\n  //  }\r\n  //  async updatePosition(accountAddress, owner, symbolId, position) {\r\n  //    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const perpetualPoolAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256[9]\",\r\n                \"name\": \"parameters\",\r\n                \"type\": \"uint256[9]\"\r\n            },\r\n            {\r\n                \"internalType\": \"address[4]\",\r\n                \"name\": \"addresses\",\r\n                \"type\": \"address[4]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lp\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"AddLiquidity\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"AddMargin\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"liquidator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"reward\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Liquidate\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"collector\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ProtocolFeeCollection\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lp\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"RemoveLiquidity\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"RemoveMargin\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"indexPrice\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeVolume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeCost\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeFee\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"Trade\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"bTokenAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"swapperAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"oracleAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"decimals\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"discount\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"liquidity\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"pnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cumulativePnl\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPool.BTokenInfo\",\r\n                \"name\": \"info\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"name\": \"addBToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lp\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addLiquidity\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"string\",\r\n                        \"name\": \"symbol\",\r\n                        \"type\": \"string\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"oracleAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"multiplier\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"feeRatio\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"alpha\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"distributedUnrealizedPnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"tradersNetVolume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"tradersNetCost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPool.SymbolInfo\",\r\n                \"name\": \"info\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"name\": \"addSymbol\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"targetPool\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"approveBTokenForTargetPool\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"collectProtocolFee\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getAddresses\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"pTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"routerAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"protocolFeeCollector\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getBToken\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"bTokenAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"swapperAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"oracleAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"decimals\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"discount\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"liquidity\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"pnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cumulativePnl\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPool.BTokenInfo\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getLengths\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getParameters\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"decimals0\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"minBToken0Ratio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"minPoolMarginRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"initialMarginRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"maintenanceMarginRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"minLiquidationReward\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"maxLiquidationReward\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"liquidationCutRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"protocolFeeCollectRatio\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getPoolStateValues\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lastTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"protocolFeeAccrued\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getSymbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"string\",\r\n                        \"name\": \"symbol\",\r\n                        \"type\": \"string\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"oracleAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"multiplier\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"feeRatio\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"alpha\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"distributedUnrealizedPnl\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"tradersNetVolume\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"tradersNetCost\",\r\n                        \"type\": \"int256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"int256\",\r\n                        \"name\": \"cumulativeFundingRate\",\r\n                        \"type\": \"int256\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPool.SymbolInfo\",\r\n                \"name\": \"\",\r\n                \"type\": \"tuple\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getSymbolOracle\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"liquidator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidate\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"sourcePool\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"balance\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"bTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"swapperAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"decimals\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"discount\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"liquidity\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"pnl\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"cumulativePnl\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"migrateBToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lastTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"protocolFeeAccrued\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"migratePoolStateValues\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"multiplier\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"feeRatio\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"alpha\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"distributedUnrealizedPnl\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradersNetVolume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradersNetCost\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"cumulativeFundingRate\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"migrateSymbol\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lp\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"removeLiquidity\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"removeMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"swapperAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"discount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setBTokenParameters\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"targetPool\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setPoolForLTokenAndPToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"feeRatio\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"alpha\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setSymbolParameters\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeVolume\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"trade\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { perpetualPoolAbi } from '../abi/perpetualPoolAbi.js'\r\n\r\nexport class PerpetualPool extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, perpetualPoolAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async getAddresses() {\r\n    const res = await this._call('getAddresses', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getBToken(bTokenId) {\r\n    const res = await this._call('getBToken', [bTokenId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getLengths() {\r\n    const res = await this._call('getLengths', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getPoolStateValues() {\r\n    const res = await this._call('getPoolStateValues', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getSymbol(symbolId) {\r\n    const res = await this._call('getSymbol', [symbolId])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async getSymbolOracle(symbolId) {\r\n  //    const res = await this._call('getSymbolOracle', [symbolId])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n\r\n  // tx\r\n  //  async addBToken(accountAddress, info) {\r\n  //    return await this._transact('addBToken', [info], accountAddress)\r\n  //  }\r\n  //  async addLiquidity(accountAddress, lp, bTokenId, bAmount) {\r\n  //    return await this._transact('addLiquidity', [lp, bTokenId, bAmount], accountAddress)\r\n  //  }\r\n  //  async addMargin(accountAddress, trader, bTokenId, bAmount) {\r\n  //    return await this._transact('addMargin', [trader, bTokenId, bAmount], accountAddress)\r\n  //  }\r\n  //  async addSymbol(accountAddress, info) {\r\n  //    return await this._transact('addSymbol', [info], accountAddress)\r\n  //  }\r\n  //  async approveBTokenForTargetPool(accountAddress, bTokenId, targetPool) {\r\n  //    return await this._transact('approveBTokenForTargetPool', [bTokenId, targetPool], accountAddress)\r\n  //  }\r\n  //  async collectProtocolFee(accountAddress) {\r\n  //    return await this._transact('collectProtocolFee', [], accountAddress)\r\n  //  }\r\n  //  async liquidate(accountAddress, liquidator, trader) {\r\n  //    return await this._transact('liquidate', [liquidator, trader], accountAddress)\r\n  //  }\r\n  //  async migrateBToken(accountAddress, sourcePool, balance, bTokenAddress, swapperAddress, oracleAddress, decimals, discount, liquidity, pnl, cumulativePnl) {\r\n  //    return await this._transact('migrateBToken', [sourcePool, balance, bTokenAddress, swapperAddress, oracleAddress, decimals, discount, liquidity, pnl, cumulativePnl], accountAddress)\r\n  //  }\r\n  //  async migratePoolStateValues(accountAddress, lastTimestamp, protocolFeeAccrued) {\r\n  //    return await this._transact('migratePoolStateValues', [lastTimestamp, protocolFeeAccrued], accountAddress)\r\n  //  }\r\n  //  async migrateSymbol(accountAddress, symbol, oracleAddress, multiplier, feeRatio, alpha, distributedUnrealizedPnl, tradersNetVolume, tradersNetCost, cumulativeFundingRate) {\r\n  //    return await this._transact('migrateSymbol', [symbol, oracleAddress, multiplier, feeRatio, alpha, distributedUnrealizedPnl, tradersNetVolume, tradersNetCost, cumulativeFundingRate], accountAddress)\r\n  //  }\r\n  //  async removeLiquidity(accountAddress, lp, bTokenId, bAmount) {\r\n  //    return await this._transact('removeLiquidity', [lp, bTokenId, bAmount], accountAddress)\r\n  //  }\r\n  //  async removeMargin(accountAddress, trader, bTokenId, bAmount) {\r\n  //    return await this._transact('removeMargin', [trader, bTokenId, bAmount], accountAddress)\r\n  //  }\r\n  //  async setBTokenParameters(accountAddress, bTokenId, swapperAddress, oracleAddress, discount) {\r\n  //    return await this._transact('setBTokenParameters', [bTokenId, swapperAddress, oracleAddress, discount], accountAddress)\r\n  //  }\r\n  //  async setPoolForLTokenAndPToken(accountAddress, targetPool) {\r\n  //    return await this._transact('setPoolForLTokenAndPToken', [targetPool], accountAddress)\r\n  //  }\r\n  //  async setSymbolParameters(accountAddress, symbolId, oracleAddress, feeRatio, alpha) {\r\n  //    return await this._transact('setSymbolParameters', [symbolId, oracleAddress, feeRatio, alpha], accountAddress)\r\n  //  }\r\n  //  async trade(accountAddress, trader, symbolId, tradeVolume) {\r\n  //    return await this._transact('trade', [trader, symbolId, tradeVolume], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const perpetualPoolRouterAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"lTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"pTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"liquidatorQualifierAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oldController\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newController\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"ChangeController\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"migrationTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"source\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"target\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"ExecuteMigration\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"migrationTimestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"source\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"target\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"PrepareMigration\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"bTokenAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"swapperAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"discount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addBToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addLiquidity\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"addLiquidityWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"addMarginWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"multiplier\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"feeRatio\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"alpha\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addSymbol\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"approveMigration\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"claimNewController\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"controller\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"sourceRouter\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"executeMigration\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"sourceRouter\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"lastTimestamp\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"executeMigrationWithTimestamp\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidate\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"pTokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidate\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"pTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidateWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"trader\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"liquidateWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"liquidatorQualifier\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"migrationDestination\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"migrationTimestamp\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"pool\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"target\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"graceDays\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"prepareMigration\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"removeLiquidity\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"removeLiquidityWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"removeMargin\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bAmount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"removeMarginWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"bTokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"swapperAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"discount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setBTokenParameters\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"qualifierAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setLiquidatorQualifier\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newController\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setNewController\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"poolAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setPool\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oracleAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"feeRatio\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"alpha\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setSymbolParameters\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeVolume\",\r\n                \"type\": \"int256\"\r\n            }\r\n        ],\r\n        \"name\": \"trade\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"symbolId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"int256\",\r\n                \"name\": \"tradeVolume\",\r\n                \"type\": \"int256\"\r\n            },\r\n            {\r\n                \"components\": [\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"symbolId\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"timestamp\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint256\",\r\n                        \"name\": \"price\",\r\n                        \"type\": \"uint256\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint8\",\r\n                        \"name\": \"v\",\r\n                        \"type\": \"uint8\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"r\",\r\n                        \"type\": \"bytes32\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes32\",\r\n                        \"name\": \"s\",\r\n                        \"type\": \"bytes32\"\r\n                    }\r\n                ],\r\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\r\n                \"name\": \"infos\",\r\n                \"type\": \"tuple[]\"\r\n            }\r\n        ],\r\n        \"name\": \"tradeWithPrices\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { perpetualPoolRouterAbi } from '../abi/perpetualPoolRouterAbi.js'\r\n\r\nexport class PerpetualPoolRouter extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async controller() {\r\n    const res = await this._call('controller', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async liquidatorQualifier() {\r\n  //    const res = await this._call('liquidatorQualifier', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async migrationDestination() {\r\n  //    const res = await this._call('migrationDestination', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async migrationTimestamp() {\r\n  //    const res = await this._call('migrationTimestamp', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async pool() {\r\n    const res = await this._call('pool', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async addBToken(accountAddress, bTokenAddress, swapperAddress, oracleAddress, discount) {\r\n  //    return await this._transact('addBToken', [bTokenAddress, swapperAddress, oracleAddress, discount], accountAddress)\r\n  //  }\r\n  async addLiquidity(accountAddress, bTokenId, bAmount) {\r\n    return await this._transact('addLiquidity', [bTokenId, bAmount], accountAddress)\r\n  }\r\n  async addLiquidityWithPrices(accountAddress, bTokenId, bAmount, infos) {\r\n    return await this._transact('addLiquidityWithPrices', [bTokenId, bAmount, infos], accountAddress)\r\n  }\r\n  async addMargin(accountAddress, bTokenId, bAmount) {\r\n    return await this._transact('addMargin', [bTokenId, bAmount], accountAddress)\r\n  }\r\n  async addMarginWithPrices(accountAddress, bTokenId, bAmount, infos) {\r\n    return await this._transact('addMarginWithPrices', [bTokenId, bAmount, infos], accountAddress)\r\n  }\r\n  //  async addSymbol(accountAddress, symbol, oracleAddress, multiplier, feeRatio, alpha) {\r\n  //    return await this._transact('addSymbol', [symbol, oracleAddress, multiplier, feeRatio, alpha], accountAddress)\r\n  //  }\r\n  //  async approveMigration(accountAddress) {\r\n  //    return await this._transact('approveMigration', [], accountAddress)\r\n  //  }\r\n  //  async claimNewController(accountAddress) {\r\n  //    return await this._transact('claimNewController', [], accountAddress)\r\n  //  }\r\n  //  async executeMigration(accountAddress, sourceRouter) {\r\n  //    return await this._transact('executeMigration', [sourceRouter], accountAddress)\r\n  //  }\r\n  //  async executeMigrationWithTimestamp(accountAddress, sourceRouter, lastTimestamp) {\r\n  //    return await this._transact('executeMigrationWithTimestamp', [sourceRouter, lastTimestamp], accountAddress)\r\n  //  }\r\n  async liquidate(accountAddress, trader) {\r\n    return await this._transact('liquidate', [trader], accountAddress)\r\n  }\r\n  async liquidateWithPrices(accountAddress, trader, infos) {\r\n    return await this._transact('liquidateWithPrices', [trader, infos], accountAddress)\r\n  }\r\n  //  async prepareMigration(accountAddress, target, graceDays) {\r\n  //    return await this._transact('prepareMigration', [target, graceDays], accountAddress)\r\n  //  }\r\n  async removeLiquidity(accountAddress, bTokenId, bAmount) {\r\n    return await this._transact('removeLiquidity', [bTokenId, bAmount], accountAddress)\r\n  }\r\n  async removeLiquidityWithPrices(accountAddress, bTokenId, bAmount, infos) {\r\n    return await this._transact('removeLiquidityWithPrices', [bTokenId, bAmount, infos], accountAddress)\r\n  }\r\n  async removeMargin(accountAddress, bTokenId, bAmount) {\r\n    return await this._transact('removeMargin', [bTokenId, bAmount], accountAddress)\r\n  }\r\n  async removeMarginWithPrices(accountAddress, bTokenId, bAmount, infos) {\r\n    return await this._transact('removeMarginWithPrices', [bTokenId, bAmount, infos], accountAddress)\r\n  }\r\n  //  async setBTokenParameters(accountAddress, bTokenId, swapperAddress, oracleAddress, discount) {\r\n  //    return await this._transact('setBTokenParameters', [bTokenId, swapperAddress, oracleAddress, discount], accountAddress)\r\n  //  }\r\n  //  async setLiquidatorQualifier(accountAddress, qualifierAddress) {\r\n  //    return await this._transact('setLiquidatorQualifier', [qualifierAddress], accountAddress)\r\n  //  }\r\n  //  async setNewController(accountAddress, newController) {\r\n  //    return await this._transact('setNewController', [newController], accountAddress)\r\n  //  }\r\n  //  async setPool(accountAddress, poolAddress) {\r\n  //    return await this._transact('setPool', [poolAddress], accountAddress)\r\n  //  }\r\n  //  async setSymbolParameters(accountAddress, symbolId, oracleAddress, feeRatio, alpha) {\r\n  //    return await this._transact('setSymbolParameters', [symbolId, oracleAddress, feeRatio, alpha], accountAddress)\r\n  //  }\r\n  async trade(accountAddress, symbolId, tradeVolume) {\r\n    return await this._transact('trade', [symbolId, tradeVolume], accountAddress)\r\n  }\r\n  async tradeWithPrices(accountAddress, symbolId, tradeVolume, infos) {\r\n    return await this._transact('tradeWithPrices', [symbolId, tradeVolume, infos], accountAddress)\r\n  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nimport { contractFactory } from '../../shared/utils/index.js';\r\nimport { perpetualPoolDpmmAdapter, perpetualPoolRouterDpmmAdapter, lTokenAdapter, pTokenAdapter } from './adapter.js';\r\n\r\nimport { LToken } from './gen/LToken.js';\r\nimport { PToken } from './gen/PToken.js';\r\nimport { PerpetualPool} from './gen/PerpetualPool';\r\nimport { PerpetualPoolRouter} from './gen/PerpetualPoolRouter';\r\n\r\nexport const lTokenFactory = contractFactory(lTokenAdapter(LToken));\r\nexport const pTokenFactory = contractFactory(pTokenAdapter(PToken));\r\n\r\n// dpmm\r\nexport const perpetualPoolDpmmFactory = contractFactory(perpetualPoolDpmmAdapter(PerpetualPool));\r\nexport const perpetualPoolRouterDpmmFactory = contractFactory(perpetualPoolRouterDpmmAdapter(PerpetualPoolRouter));\r\n","import { contractFactory } from \"../../activity/utils\"\r\nimport { bg, max, min } from \"../../shared\"\r\nimport { SECONDS_IN_A_DAY } from \"../../shared/config\";\r\nimport { getIndexInfo } from \"../../shared/config/token\"\r\nimport { checkSymbolId, getLiquidity } from \"../../shared/utils/derijsnext\"\r\nimport {\r\n  calculateLiquidationPrice,\r\n  calculateMaxRemovableLiquidity,\r\n} from '../../v2/calculation';\r\nimport { perpetualPoolDpmmFactory } from './factory';\r\nimport { getOraclePriceFromCache2 } from '../../shared/utils/oracle';\r\nimport { calculateDpmmPrice } from \"../../v2_lite_dpmm/calc\";\r\nimport { ERC20Factory } from \"../../shared/contract/factory\";\r\nimport { liquidatePriceCache } from \"../../shared/api/api_globals\";\r\n\r\n// PoolApi \r\nexport class PoolApi {\r\n  constructor(chainId, poolAddress) {\r\n    this.chainId = chainId;\r\n    this.poolAddress = poolAddress;\r\n    this.pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n  }\r\n\r\n  async init(usedByEstimatedApi) {\r\n    await this.pool.init(usedByEstimatedApi);\r\n  }\r\n\r\n  // API\r\n  async getLiquidityInfo(accountAddress, bTokenId) {\r\n    const pool = this.pool;\r\n    const [lTokenAsset, bTokens, symbols] = await Promise.all([\r\n      pool.lToken.getAsset(accountAddress, bTokenId),\r\n      pool.getBTokens(),\r\n      pool.getSymbols(),\r\n    ]);\r\n    const { minPoolMarginRatio } = pool.parameters;\r\n    const bTokenIndex = pool.bTokenIds.indexOf(bTokenId.toString());\r\n    const { liquidity: poolLiquidity } = bTokens[bTokenIndex];\r\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset;\r\n    const cost = symbols.reduce((acc, s) => acc.plus(s.notional), bg(0));\r\n    const totalPnl = symbols.reduce((acc, s) => acc.plus(s.pnl), bg(0));\r\n\r\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\r\n      if (index === parseInt(bTokenId)) {\r\n        return accum.plus(b.pnl);\r\n      } else {\r\n        return accum.plus(\r\n          bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\r\n        );\r\n      }\r\n    }, bg(0));\r\n    const maxRemovableShares = calculateMaxRemovableLiquidity(\r\n      bTokens[bTokenIndex],\r\n      liquidity,\r\n      cost,\r\n      totalPnl,\r\n      restLiquidity,\r\n      minPoolMarginRatio\r\n    ).toString();\r\n    const approximatePnl = bg(pnl)\r\n      .plus(\r\n        bg(bTokens[bTokenIndex].cumulativePnl)\r\n          .minus(lastCumulativePnl)\r\n          .times(liquidity)\r\n      )\r\n      .toString();\r\n\r\n    return {\r\n      poolLiquidity,\r\n      shares: liquidity,\r\n      maxRemovableShares,\r\n      pnl: approximatePnl,\r\n      bToken0Symbol: pool.bTokenSymbols[0],\r\n    };\r\n  }\r\n\r\n  async getSpecification(symbolId) {\r\n    await this.init();\r\n    const pool = this.pool\r\n    const {\r\n      minPoolMarginRatio,\r\n      initialMarginRatio,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      maintenanceMarginRatio,\r\n      minBToken0Ratio,\r\n    } = pool.parameters;\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbolInfo = pool.symbols[symbolIndex];\r\n\r\n    const { symbol, multiplier, feeRatio } = symbolInfo;\r\n\r\n    return {\r\n      symbol,\r\n      bTokenSymbol: pool.bTokenSymbols,\r\n      bTokenMultiplier: pool.bTokens.map((b) => b.discount),\r\n      multiplier,\r\n      feeRatio,\r\n      fundingRateCoefficient: bg(1).div(pool.fundingPeriod).toString(),\r\n      minPoolMarginRatio,\r\n      minInitialMarginRatio: initialMarginRatio,\r\n      minMaintenanceMarginRatio: maintenanceMarginRatio,\r\n      minLiquidationReward,\r\n      maxLiquidationReward,\r\n      liquidationCutRatio,\r\n      protocolFeeCollectRatio,\r\n      indexConstituents: getIndexInfo(symbol),\r\n    };\r\n  }\r\n\r\n  async getPositionInfo(accountAddress, symbolId) {\r\n    const pool = this.pool;\r\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const oracleAddress =\r\n      pool.offChainOracleSymbolIds.indexOf(symbolId) > -1\r\n        ? ''\r\n        : pool.symbols[symbolIndex].oracleAddress;\r\n    const [\r\n      bTokens,\r\n      symbols,\r\n      lastTimestamp,\r\n      margins,\r\n      price,\r\n    ] = await Promise.all([\r\n      pool.getBTokens(),\r\n      pool.getSymbols(),\r\n      pool.getLastTimestamp(),\r\n      pool.pToken.getMargins(accountAddress),\r\n      getOraclePriceFromCache2.get(\r\n        this.chainId,\r\n        pool.symbols[symbolIndex].symbol,\r\n        oracleAddress\r\n      ),\r\n    ]);\r\n    const positions = await pool.getPositions(accountAddress)\r\n\r\n    const symbol = symbols[symbolIndex];\r\n    const position = positions[symbolIndex];\r\n    // const { volume } = position\r\n    // const { multiplier, indexPrice } = symbol\r\n    const margin = bTokens\r\n      .reduce(\r\n        (acc, b, index) =>\r\n          acc.plus(bg(b.price).times(b.discount).times(margins[index])),\r\n        bg(0)\r\n      )\r\n      .toString();\r\n    const marginHeld = symbols.reduce((acc, s, index) => {\r\n      return acc.plus(\r\n        bg(s.indexPrice)\r\n          .times(s.multiplier)\r\n          .times(positions[index].volume)\r\n          .times(initialMarginRatio)\r\n          .abs()\r\n      );\r\n    }, bg(0));\r\n    const marginHeldBySymbol = bg(position.volume)\r\n      .times(symbol.multiplier)\r\n      .times(symbol.indexPrice)\r\n      .times(initialMarginRatio)\r\n      .abs();\r\n\r\n    const unrealizedPnl = positions.reduce(\r\n      (acc, p) => acc.plus(p.traderPnl),\r\n      bg(0)\r\n    );\r\n    const unrealizedPnlList = symbols.map((s, index) => {\r\n      return [s.symbol, positions[index].traderPnl];\r\n    });\r\n    const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\r\n    const dynamicCost = symbols.reduce((acc, s, index) => {\r\n      if (index !== parseInt(symbolId)) {\r\n        return acc.plus(\r\n          bg(positions[index].volume).times(s.dpmmPrice).times(s.multiplier)\r\n        );\r\n      } else {\r\n        return acc;\r\n      }\r\n    }, bg(0));\r\n    const fundingFee = bg(symbol.cumulativeFundingRate)\r\n      .minus(position.lastCumulativeFundingRate)\r\n      .plus(\r\n        bg(symbol.dpmmPrice)\r\n          .minus(symbol.indexPrice)\r\n          .times(symbol.multiplier)\r\n          .div(pool.fundingPeriod)\r\n          .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\r\n      )\r\n      .times(position.volume)\r\n      .toString();\r\n\r\n    // set liquidatePrice cache\r\n    liquidatePriceCache.set(this.poolAddress, {\r\n      volume: position.volume,\r\n      margin,\r\n      totalCost,\r\n      dynamicCost,\r\n      price,\r\n      multiplier: symbol.multiplier,\r\n      minMaintenanceMarginRatio: maintenanceMarginRatio,\r\n    });\r\n\r\n    return {\r\n      symbol: symbol.symbol,\r\n      price: price,\r\n      markPrice: symbol.dpmmPrice.toString(),\r\n      volume: bg(position.volume).times(symbol.multiplier).toString(),\r\n      averageEntryPrice: bg(position.volume).eq(0)\r\n        ? '0'\r\n        : bg(position.cost)\r\n            .div(position.volume)\r\n            .div(symbol.multiplier)\r\n            .toString(),\r\n      margin: margin,\r\n      marginHeld: marginHeld.toString(),\r\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n      unrealizedPnl: unrealizedPnl.toString(),\r\n      unrealizedPnlList,\r\n      fundingFee,\r\n      liquidationPrice: calculateLiquidationPrice(\r\n        position.volume,\r\n        margin,\r\n        totalCost,\r\n        dynamicCost,\r\n        symbol.multiplier,\r\n        maintenanceMarginRatio\r\n      ).toString(),\r\n    };\r\n  }\r\n\r\n  async getPositionInfos(accountAddress) {\r\n    const pool = this.pool;\r\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\r\n    const [\r\n      bTokens,\r\n      symbols,\r\n      lastTimestamp,\r\n      margins,\r\n    ] = await Promise.all([\r\n      pool.getBTokens(),\r\n      pool.getSymbols(),\r\n      //pool.getPositions(accountAddress),\r\n      pool.getLastTimestamp(),\r\n      pool.pToken.getMargins(accountAddress),\r\n    ]);\r\n    const positions = await pool.getPositions(accountAddress)\r\n\r\n    const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\r\n\r\n    return positions\r\n      .map((p, index) => {\r\n        const symbolIndex = index;\r\n        const symbol = symbols[symbolIndex];\r\n        const position = positions[symbolIndex];\r\n        const margin = bTokens\r\n          .reduce(\r\n            (acc, b, index) =>\r\n              acc.plus(bg(b.price).times(b.discount).times(margins[index])),\r\n            bg(0)\r\n          )\r\n          .toString();\r\n        const marginHeld = symbols.reduce((acc, s, index) => {\r\n          return acc.plus(\r\n            bg(s.indexPrice)\r\n              .times(s.multiplier)\r\n              .times(positions[index].volume)\r\n              .times(initialMarginRatio)\r\n              .abs()\r\n          );\r\n        }, bg(0));\r\n        const marginHeldBySymbol = bg(position.volume)\r\n          .times(symbol.multiplier)\r\n          .times(symbol.indexPrice)\r\n          .times(initialMarginRatio)\r\n          .abs();\r\n        const unrealizedPnl = p.traderPnl\r\n        const dynamicCost = symbols.reduce((acc, s, idx) => {\r\n          if (idx !== index) {\r\n            return acc.plus(\r\n              bg(positions[idx].volume).times(s.dpmmPrice).times(s.multiplier)\r\n            );\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, bg(0));\r\n        const fundingFee = bg(symbol.cumulativeFundingRate)\r\n          .minus(position.lastCumulativeFundingRate)\r\n          .plus(\r\n            bg(symbol.dpmmPrice)\r\n              .minus(symbol.indexPrice)\r\n              .times(symbol.multiplier)\r\n              .div(pool.fundingPeriod)\r\n              .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\r\n          )\r\n          .times(position.volume)\r\n          .toString();\r\n        return {\r\n          symbolId: symbolIndex.toString(),\r\n          symbol: symbol.symbol,\r\n          price: symbol.indexPrice,\r\n          volume: bg(position.volume).times(symbol.multiplier).toString(),\r\n          averageEntryPrice: bg(position.volume).eq(0)\r\n            ? '0'\r\n            : bg(position.cost)\r\n                .div(position.volume)\r\n                .div(symbol.multiplier)\r\n                .toString(),\r\n          margin: margin,\r\n          marginHeld: marginHeld.toString(),\r\n          marginHeldBySymbol: marginHeldBySymbol.toString(),\r\n          unrealizedPnl: unrealizedPnl.toString(),\r\n          fundingFee,\r\n          liquidationPrice: calculateLiquidationPrice(\r\n            position.volume,\r\n            margin,\r\n            totalCost,\r\n            dynamicCost,\r\n            symbol.multiplier,\r\n            maintenanceMarginRatio\r\n          ).toString(),\r\n        };\r\n      })\r\n      .filter((p) => p.volume !== '0');\r\n  }\r\n\r\n  async getEstimatedMargin(accountAddress, volume, leverage, symbolId) {\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const { multiplier, indexPrice } = pool.symbols[symbolIndex];\r\n    return bg(volume)\r\n      .abs()\r\n      .times(multiplier)\r\n      .times(indexPrice)\r\n      .div(leverage)\r\n      .toString();\r\n  }\r\n\r\n  async getEstimatedFee(volume, symbolId) {\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const { multiplier, indexPrice, feeRatio } = pool.symbols[symbolIndex];\r\n    return bg(volume)\r\n      .abs()\r\n      .times(multiplier)\r\n      .times(indexPrice)\r\n      .times(feeRatio)\r\n      .toString();\r\n  }\r\n\r\n  async getFundingRate(symbolId) {\r\n    await this.init()\r\n    const pool = this.pool\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const {funding, fundingPerSecond, tradersNetVolume, multiplier } = pool.symbols[symbolIndex]\r\n    const liquidity = pool.state.liquidity\r\n    return {\r\n      funding0: bg(funding).div(multiplier).toString(),\r\n      fundingPerSecond: bg(fundingPerSecond).div(multiplier).toString(),\r\n      liquidity: liquidity,\r\n      volume: '-',\r\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString(),\r\n    };\r\n  }\r\n\r\n\r\n  async getEstimatedFundingRate(newVolume, symbolId) {\r\n    const pool = this.pool\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    const symbol = { ...pool.symbols[symbolIndex] };\r\n    symbol.dpmmPrice = calculateDpmmPrice(\r\n      symbol.indexPrice,\r\n      symbol.K,\r\n      bg(symbol.tradersNetVolume).plus(newVolume).toString(),\r\n      symbol.multiplier\r\n    ).toString();\r\n    symbol.fundingPerSecond = bg(symbol.dpmmPrice)\r\n      .minus(symbol.indexPrice)\r\n      //.times(symbol.multiplier)\r\n      .div(pool.fundingPeriod)\r\n      .toString();\r\n    return {\r\n      funding1: bg(symbol.fundingPerSecond).times(SECONDS_IN_A_DAY).toString(),\r\n    };\r\n  }\r\n\r\n  async getLiquidityUsed() {\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    const { minPoolMarginRatio } = pool.parameters;\r\n    return pool.symbols\r\n      .reduce(\r\n        (acc, s) =>\r\n          acc.plus(\r\n            bg(s.tradersNetVolume)\r\n              .abs()\r\n              .times(s.indexPrice)\r\n              .times(s.multiplier)\r\n              .times(minPoolMarginRatio)\r\n          ),\r\n        bg(0)\r\n      )\r\n      .div(pool.state.liquidity)\r\n      .toString();\r\n  }\r\n\r\n  async getEstimatedLiquidityUsed(newVolume, symbolId) {\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n\r\n    const { minPoolMarginRatio } = pool.parameters;\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    //console.log(pool.symbols, poolMarginRatio, pool.stateValues)\r\n    return pool.symbols\r\n      .reduce(\r\n        (acc, s, index) =>\r\n          index === symbolIndex\r\n            ? acc.plus(\r\n                bg(s.tradersNetVolume)\r\n                  .plus(newVolume)\r\n                  .abs()\r\n                  .times(s.indexPrice)\r\n                  .times(s.multiplier)\r\n                  .times(minPoolMarginRatio)\r\n              )\r\n            : acc.plus(\r\n                bg(s.tradersNetVolume)\r\n                  .abs()\r\n                  .times(s.indexPrice)\r\n                  .times(s.multiplier)\r\n                  .times(minPoolMarginRatio)\r\n              ),\r\n        bg(0)\r\n      )\r\n      .div(pool.state.liquidity)\r\n      .toString();\r\n  }\r\n\r\n  async getPoolBTokensBySymbolId(accountAddress, symbolId) {\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    if (!pool.isPositionsUpdated()) {\r\n      await pool.getPositions(accountAddress);\r\n    }\r\n    const { initialMarginRatio } = pool.parameters\r\n    const margins = await pool.pToken.getMargins(accountAddress);\r\n    const balances = await Promise.all(\r\n      pool.bTokens.reduce(\r\n        (acc, i) => [\r\n          ...acc,\r\n          ERC20Factory(this.chainId, i.bTokenAddress).balanceOf(accountAddress),\r\n        ],\r\n        []\r\n      )\r\n    );\r\n\r\n    const margin = pool.bTokens.reduce((accum, a, index) => {\r\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\r\n    }, bg(0)).toString()\r\n    const marginHeld = pool.symbols.reduce((acc, s, index) => {\r\n      return acc.plus(\r\n        bg(s.indexPrice)\r\n          .times(s.multiplier)\r\n          .times(pool.positions[index].volume)\r\n          .times(initialMarginRatio)\r\n          .abs()\r\n      );\r\n    }, bg(0)).toString();\r\n    const pnl = pool.positions.reduce((acc, p) => acc.plus(p.traderPnl), bg(0)).toString();\r\n\r\n    for (let i = 0; i < pool.bTokenIds.length; i++) {\r\n      const bToken = pool.bTokens[i]\r\n      bToken.walletBalance = balances[i]\r\n      bToken.availableBalance = max(\r\n        min(\r\n          bg(margin)\r\n            .minus(marginHeld)\r\n            .plus(pnl)\r\n            .div(pool.bTokens[i].price)\r\n            .div(pool.bTokens[i].discount),\r\n          bg(margins[i])\r\n        ),\r\n        bg(0)\r\n      ).toString();\r\n    }\r\n    return pool.bTokens.map((b, index) => {\r\n      return {\r\n        bTokenId: index.toString(),\r\n        bTokenAddress: b.bTokenAddress,\r\n        bTokenSymbol: pool.bTokenSymbols[index],\r\n        availableBalance: b.availableBalance,\r\n        walletBalance: b.walletBalance,\r\n      }\r\n    })\r\n  }\r\n\r\n  async getFundingFee(accountAddress, symbolId) {\r\n    const pool = this.pool;\r\n    if (!pool.isSymbolsUpdated()) {\r\n      await pool.getSymbols();\r\n    }\r\n    if (!pool.isPositionsUpdated()) {\r\n      await pool.getPositions(accountAddress);\r\n    }\r\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n    return pool.positions[symbolIndex].fundingAccrued;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport const poolApiFactory = contractFactory(PoolApi);","import { checkApiInput, checkApiInputWithoutAccount, checkSymbolId, checkTokenId } from '../../shared/utils/derijsnext';\r\nimport { catchApiError } from '../../shared/utils/api';\r\nimport { poolApiFactory } from '../contract/PoolApi';\r\nimport { ERC20Factory } from '../../shared/contract/factory';\r\nimport { calculateDpmmCost } from '../../v2_lite_dpmm/calc';\r\nimport { bg } from '../../shared';\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      bTokenId = checkTokenId(bTokenId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getLiquidityInfo(accountAddress, bTokenId);\r\n    },\r\n    [],\r\n    'getLiquidityInfo',\r\n    {\r\n      maxRemovableShares: '',\r\n      pnl: '',\r\n      poolLiquidity: '',\r\n      shares: '',\r\n    }\r\n  );\r\n};\r\n\r\nexport const getSpecification = async (\r\n  chainId,\r\n  poolAddress,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getSpecification(symbolId);\r\n    },\r\n    [],\r\n    'getSpecification',\r\n    {\r\n      symbol: '',\r\n      bTokenSymbol: [],\r\n      bTokenMultiplier: [],\r\n      multiplier: '',\r\n      feeRatio: '',\r\n      fundingRateCoefficient: '',\r\n      minPoolMarginRatio: '',\r\n      minInitialMarginRatio: '',\r\n      minMaintenanceMarginRatio: '',\r\n      liquidationCutRatio: '',\r\n      protocolFeeCollectRatio: '',\r\n      indexConstituents: { tokens: [], url: '' },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getPositionInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getPositionInfo(accountAddress, symbolId);\r\n    },\r\n    [],\r\n    'getPositionInfo',\r\n    {}\r\n  );\r\n};\r\n\r\nexport const getPositionInfos = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getPositionInfos(accountAddress);\r\n    },\r\n    [],\r\n    'getPositionInfos',\r\n    []\r\n  );\r\n};\r\n\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      bTokenId = checkTokenId(bTokenId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      const bTokenIndex = checkSymbolId(bTokenId, api.pool.bTokenIds);\r\n      const bTokenAddress = api.pool.bTokens[bTokenIndex].bTokenAddress;\r\n      const bToken = ERC20Factory(chainId, bTokenAddress);\r\n      return await bToken.balanceOf(accountAddress);\r\n    },\r\n    [],\r\n    'getWalletBalance',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const isUnlocked = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      bTokenId = checkTokenId(bTokenId);\r\n      const bTokenAddress = api.pool.bTokens[parseInt(bTokenId)].bTokenAddress;\r\n      const bToken = ERC20Factory(chainId, bTokenAddress);\r\n      return await bToken.isUnlocked(accountAddress, poolAddress);\r\n    },\r\n    [],\r\n    'isUnlocked',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId,\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init(true);\r\n      return await api.getEstimatedMargin(accountAddress, volume, leverage, symbolId);\r\n    },\r\n    [],\r\n    'getEstimatedMargin',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedFee = async (\r\n  chainId,\r\n  poolAddress,\r\n  volume,\r\n  symbolId,\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress,\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init(true);\r\n      return await api.getEstimatedFee(volume, symbolId);\r\n    },\r\n    [],\r\n    'getEstimatedFee',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getFundingRate(symbolId);\r\n    },\r\n    [],\r\n    'getFundingRate',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init(true);\r\n      return await api.getEstimatedFundingRate(newVolume, symbolId);\r\n    },\r\n    [],\r\n    'getFundingRate',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getLiquidityUsed();\r\n    },\r\n    [],\r\n    'getLiquidityUsed',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init(true);\r\n      return await api.getEstimatedLiquidityUsed(newVolume, symbolId);\r\n    },\r\n    [],\r\n    'getEstimatedLiquidityUsed',\r\n    ''\r\n  );\r\n};\r\n\r\nexport const getPoolBTokensBySymbolId = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      //symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getPoolBTokensBySymbolId(accountAddress, symbolId);\r\n    },\r\n    [],\r\n    'getPoolBTokensBySymbolId',\r\n    []\r\n  );\r\n};\r\n\r\n\r\nexport const getFundingFee = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      return await api.getFundingFee(accountAddress, symbolId);\r\n    },\r\n    [],\r\n    'getFundingFee',\r\n    []\r\n  );\r\n};\r\n\r\nexport const getEstimatedTimePrice = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  return catchApiError(\r\n    async () => {\r\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\r\n        chainId,\r\n        poolAddress,\r\n      );\r\n      symbolId = checkTokenId(symbolId);\r\n      const api = poolApiFactory(chainId, poolAddress);\r\n      await api.init();\r\n      const pool = api.pool;\r\n      const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\r\n      if (!pool.isSymbolsUpdated()) {\r\n        await pool.getSymbols();\r\n      }\r\n      const symbol = pool.symbols[symbolIndex];\r\n      const cost = calculateDpmmCost(\r\n        symbol.indexPrice,\r\n        symbol.K,\r\n        symbol.tradersNetVolume,\r\n        symbol.multiplier,\r\n        newNetVolume\r\n      );\r\n      return bg(cost).div(symbol.multiplier).div(newNetVolume).toString();\r\n    },\r\n    [],\r\n    'getEstimatedTimePrice',\r\n    ''\r\n  );\r\n};\r\n","import { catchApiError } from '../../shared/utils/api';\r\n\r\nimport {\r\n  deriToNatural,\r\n  getBlockInfo,\r\n  getPastEvents,\r\n  getHttpBase,\r\n  fetchJson,\r\n  bg,\r\n} from '../../shared/utils';\r\nimport {\r\n  getPoolConfig,\r\n} from '../../shared/config';\r\nimport { perpetualPoolDpmmFactory, } from '../contract/factory';\r\n\r\nconst getTradeHistoryOnline = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId,\r\n  fromBlock\r\n) => {\r\n\r\n  const perpetualPool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n  await perpetualPool.init()\r\n  const toBlock = await getBlockInfo(chainId, 'latest');\r\n  fromBlock = parseInt(fromBlock);\r\n\r\n  const filters = { account: accountAddress };\r\n  let events = await getPastEvents(\r\n    chainId,\r\n    perpetualPool.contract,\r\n    'Trade',\r\n    filters,\r\n    fromBlock,\r\n    toBlock.number\r\n  );\r\n\r\n  const result = [];\r\n  //events = events.filter((i) => i.returnValues.symbolId === symbolId);\r\n  //console.log(\"events length:\", events.length);\r\n  for (let i = 0; i < events.length; i++) {\r\n    const item = events[i];\r\n    const res = await perpetualPool.formatTradeEvent(item);\r\n    if (res) {\r\n      const symbolIndex = perpetualPool.activeSymbolIds.indexOf(res.symbolId);\r\n      result.unshift({\r\n        baseToken: '',\r\n        direction: res.direction,\r\n        volume: bg(res.volume)\r\n          .times(perpetualPool.symbols[symbolIndex].multiplier)\r\n          .toString(),\r\n        price: res.price,\r\n        indexPrice: res.indexPrice,\r\n        notional: res.notional,\r\n        symbol: res.symbol,\r\n        symbolId: res.symbolId,\r\n        time: res.time,\r\n        transactionFee: res.transactionFee,\r\n        transactionHash: res.transactionHash,\r\n      });\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  try {\r\n    let tradeFromBlock,\r\n      tradeHistory = [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\r\n    );\r\n    if (res && res.success) {\r\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\r\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\r\n        tradeHistory = res.data.tradeHistory;\r\n      }\r\n    }\r\n    const perpetualPool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n    await perpetualPool.init()\r\n    if (tradeHistory.length > 0) {\r\n      tradeHistory = tradeHistory\r\n        .map((i) => {\r\n          const symbolIndex = perpetualPool.activeSymbolIds.indexOf(i.symbolId)\r\n          if (symbolIndex > -1) {\r\n            return {\r\n              direction: i.direction.trim(),\r\n              baseToken: '',\r\n              symbolId: i.symbolId,\r\n              symbol: i.symbol,\r\n              price: deriToNatural(i.price).toString(),\r\n              notional: deriToNatural(i.notional).toString(),\r\n              volume: deriToNatural(i.volume).times(perpetualPool.symbols[symbolIndex].multiplier).toString(),\r\n              transactionFee: deriToNatural(i.transactionFee).toString(),\r\n              transactionHash: i.transactionHash,\r\n              time: i.time.toString(),\r\n            };\r\n          } else {\r\n            return null\r\n          }\r\n        }).filter((i) => i != null)\r\n    }\r\n    //console.log('tradeHistory1',tradeHistory)\r\n    if (tradeFromBlock !== 0) {\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline.concat(tradeHistory);\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    } else {\r\n      const { initialBlock } = getPoolConfig(poolAddress);\r\n      tradeFromBlock = parseInt(initialBlock);\r\n      const [tradeHistoryOnline] = await Promise.all([\r\n        getTradeHistoryOnline(\r\n          chainId,\r\n          poolAddress,\r\n          accountAddress,\r\n          symbolId,\r\n          tradeFromBlock + 1\r\n        ),\r\n      ]);\r\n      const result = tradeHistoryOnline;\r\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\r\n    }\r\n  } catch (err) {\r\n    console.log(\r\n      `getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`\r\n    );\r\n  }\r\n  return [];\r\n};\r\n","import {\r\n  bg,\r\n  checkApiInput,\r\n  deriToNatural,\r\n  MAX_INT256,\r\n} from '../../shared';\r\nimport { ERC20Factory } from '../../shared/contract/factory';\r\nimport { catchTxApiError } from '../../shared/utils/api';\r\nimport { checkAmount, checkSymbolId, checkTokenId } from '../../shared/utils/derijsnext';\r\nimport { perpetualPoolDpmmFactory } from '../contract/factory.js';\r\n\r\n// mining\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n) => {\r\n  return catchTxApiError(async () => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    amount = checkAmount(amount);\r\n    bTokenId = checkTokenId(bTokenId);\r\n    const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n    await pool.init();\r\n    return await pool.router.addLiquidity(accountAddress, bTokenId, amount);\r\n  }, []);\r\n};\r\n\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum = false\r\n) => {\r\n  return catchTxApiError(async () => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    amount = checkAmount(amount);\r\n    bTokenId = checkTokenId(bTokenId);\r\n    const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n    await pool.init();\r\n    if (isMaximum) {\r\n      amount = deriToNatural(MAX_INT256).toString()\r\n    }\r\n    return await pool.router.removeLiquidity(accountAddress, bTokenId, amount);\r\n  }, []);\r\n};\r\n\r\n//trading\r\nexport const unlock = async (chainId, poolAddress, accountAddress, bTokenId) => {\r\n  return catchTxApiError(async () => {\r\n    [chainId, poolAddress, accountAddress] = checkApiInput(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress\r\n    );\r\n    bTokenId = checkTokenId(bTokenId)\r\n    const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n    await pool.init();\r\n    const bTokenIndex = checkSymbolId(bTokenId, pool.bTokenIds)\r\n    const bTokenAddress = pool.bTokens[bTokenIndex].bTokenAddress;\r\n    const bToken = ERC20Factory(chainId, bTokenAddress);\r\n    return await bToken.unlock(accountAddress, poolAddress);\r\n  }, []);\r\n};\r\n\r\nexport const depositMargin = async (chainId, poolAddress, accountAddress, amount, bTokenId) => {\r\n  return catchTxApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      amount = checkAmount(amount)\r\n      bTokenId = checkTokenId(bTokenId)\r\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.router.addMargin(accountAddress, bTokenId, amount);\r\n    },\r\n    []\r\n  );\r\n};\r\n\r\nexport const withdrawMargin = async (chainId, poolAddress, accountAddress, amount, bTokenId) => {\r\n  return catchTxApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      amount = checkAmount(amount)\r\n      bTokenId = checkTokenId(bTokenId)\r\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.router.removeMargin(accountAddress, bTokenId, amount);\r\n    },\r\n    []\r\n  );\r\n};\r\n\r\nexport const tradeWithMargin = async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\r\n  return catchTxApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      newVolume = checkAmount(newVolume)\r\n      symbolId = checkTokenId(symbolId)\r\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      return await pool.router.trade(accountAddress, symbolId, newVolume);\r\n    },\r\n    []\r\n  );\r\n};\r\n\r\nexport const closePosition = async (chainId, poolAddress, accountAddress, symbolId) => {\r\n  return catchTxApiError(\r\n    async () => {\r\n      [chainId, poolAddress, accountAddress] = checkApiInput(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n      symbolId = checkTokenId(symbolId)\r\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\r\n      await pool.init();\r\n      const { volume } = await pool.pToken.getPosition(\r\n        accountAddress,\r\n        symbolId\r\n      );\r\n      if (!bg(volume).eq(0)) {\r\n        const newVolume = bg(volume).negated().toString();\r\n        return await pool.router.trade(accountAddress, symbolId, newVolume);\r\n      } else {\r\n        throw new Error('no position to close');\r\n      }\r\n    },\r\n    []\r\n  );\r\n};\r\n","import {\r\n  getPoolInfoApy,\r\n  getPoolLiquidity,\r\n} from '../../v2/api/mining_query_api';\r\nimport {\r\n  getEstimatedFee,\r\n  getEstimatedFundingRate,\r\n  getEstimatedLiquidityUsed,\r\n  getEstimatedMargin,\r\n  getFundingRate,\r\n  getLiquidityInfo,\r\n  getLiquidityUsed,\r\n  getPositionInfo,\r\n  getPositionInfos,\r\n  getSpecification,\r\n  getWalletBalance,\r\n  isUnlocked,\r\n  getPoolBTokensBySymbolId,\r\n  getFundingFee,\r\n  getEstimatedTimePrice,\r\n} from './query_api';\r\nimport { getTradeHistory } from './trade_history_api';\r\nimport {\r\n  addLiquidity,\r\n  closePosition,\r\n  depositMargin,\r\n  removeLiquidity,\r\n  tradeWithMargin,\r\n  unlock,\r\n  withdrawMargin,\r\n} from './transaction_api';\r\n\r\nexport const api = {\r\n  // mining\r\n  getLiquidityInfo,\r\n  getPoolLiquidity,\r\n  getPoolInfoApy,\r\n  addLiquidity,\r\n  removeLiquidity,\r\n  // trading\r\n  getSpecification,\r\n  getPositionInfo,\r\n  getPositionInfos,\r\n  getWalletBalance,\r\n  isUnlocked,\r\n  getEstimatedFee,\r\n  getEstimatedMargin,\r\n  getFundingRate,\r\n  getEstimatedFundingRate,\r\n  getLiquidityUsed,\r\n  getEstimatedLiquidityUsed,\r\n  getEstimatedTimePrice,\r\n  getFundingRateCache: () => {},\r\n  unlock,\r\n  depositMargin,\r\n  withdrawMargin,\r\n  tradeWithMargin,\r\n  closePosition,\r\n  // tradeHistory\r\n  getTradeHistory,\r\n  // extra for v2\r\n  getPoolBTokensBySymbolId,\r\n  getFundingFee,\r\n};\r\n","//import { getLiquidityInfo2 } from '../v1/api/rest_api';\r\nimport {\r\n  getPoolVersionId,\r\n  LITE_VERSIONS,\r\n} from '../shared/config';\r\nimport {\r\n  getPoolLiquidity as getPoolLiquidity1,\r\n  getPoolInfoApy as getPoolInfoApy1,\r\n} from '../shared/api/database_api';\r\nimport { getLiquidityInfo2 } from '../v1/api';\r\nimport {\r\n  getLiquidityInfoV2,\r\n  getPoolInfoApyV2,\r\n  getPoolLiquidityV2,\r\n} from '../v2/api';\r\nimport {\r\n  getLiquidityInfoV2l,\r\n} from '../v2_lite/api';\r\nimport {\r\n  getLiquidityInfoOption,\r\n} from '../option/api';\r\n\r\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\r\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\r\n\r\nexport const getLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId,\r\n) => {\r\n  const versionId = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(versionId)) {\r\n    return getLiquidityInfoV2l(chainId, poolAddress, accountAddress)\r\n  } else if (versionId === 'option') {\r\n    return getLiquidityInfoOption(chainId, poolAddress, accountAddress)\r\n  } else if (versionId === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getLiquidityInfo(chainId, poolAddress, accountAddress)\r\n  } else if (versionId === 'v2_dpmm') {\r\n    return apiV2Dpmm.getLiquidityInfo(chainId, poolAddress, accountAddress, bTokenId)\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getLiquidityInfo2(chainId, poolAddress, accountAddress)\r\n  } else {\r\n    return getLiquidityInfoV2(chainId, poolAddress, accountAddress, bTokenId)\r\n  }\r\n};\r\n\r\nexport const getPoolLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  bTokenId,\r\n) => {\r\n  if (bTokenId != null) {\r\n    return getPoolLiquidityV2(chainId, poolAddress, bTokenId)\r\n  } else {\r\n    return getPoolLiquidity1(chainId, poolAddress)\r\n  }\r\n};\r\n\r\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\r\n  if (bTokenId != null) {\r\n    return getPoolInfoApyV2(chainId, poolAddress, bTokenId)\r\n  } else {\r\n    return getPoolInfoApy1(chainId, poolAddress)\r\n  }\r\n};\r\n","//import {addLiquidity2, removeLiquidity2 } from '../v1/api/contract_transaction_api_v2';\r\nimport { getPoolVersionId, LITE_VERSIONS } from '../shared'\r\nimport { addLiquidity2, removeLiquidity2 } from '../v1/api';\r\nimport { addLiquidityV2, removeLiquidityV2 } from '../v2/api';\r\nimport { addLiquidityV2l, removeLiquidityV2l } from '../v2_lite/api';\r\nimport { addLiquidityOption, removeLiquidityOption } from '../option/api';\r\n\r\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\r\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\r\n\r\nexport const addLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n) => {\r\n  const versionId = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(versionId)) {\r\n    return addLiquidityV2l(chainId, poolAddress, accountAddress, amount)\r\n  } else if (versionId === 'option') {\r\n    return addLiquidityOption(chainId, poolAddress, accountAddress, amount);\r\n  } else if (versionId === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.addLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (versionId === 'v2_dpmm') {\r\n    return apiV2Dpmm.addLiquidity(chainId, poolAddress, accountAddress, amount, bTokenId);\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return addLiquidity2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return addLiquidityV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId\r\n    );\r\n  }\r\n}\r\n\r\nexport const removeLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum,\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return removeLiquidityV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\r\n  } else if (version === 'option') {\r\n    return removeLiquidityOption(chainId, poolAddress, accountAddress, amount, isMaximum)\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.removeLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.removeLiquidity(chainId, poolAddress, accountAddress, amount, bTokenId);\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return removeLiquidity2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return removeLiquidityV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId,\r\n      isMaximum,\r\n    );\r\n  }\r\n}\r\n","import {\r\n  getEstimatedFundingRateOption,\r\n  getFundingRateCacheOption,\r\n  getFundingRateOption,\r\n  getLiquidityUsedOption,\r\n  getPositionInfoOption,\r\n  getPositionInfosOption,\r\n  getSpecificationOption,\r\n  getWalletBalanceOption,\r\n  getEstimatedFeeOption,\r\n  getEstimatedMarginOption,\r\n  getEstimatedLiquidityUsedOption,\r\n  getEstimatedTimePriceOption,\r\n  isUnlockedOption,\r\n} from '../option/api';\r\nimport { getPoolVersionId, isDeriUnlocked, LITE_VERSIONS } from '../shared';\r\nimport {\r\n  getPositionInfo2,\r\n  isUnlocked2,\r\n  getEstimatedMargin2,\r\n  getEstimatedFee2,\r\n  getEstimatedFundingRate2,\r\n  getEstimatedLiquidityUsed2,\r\n  getWalletBalance2,\r\n  getSpecification2,\r\n  getFundingRate2,\r\n  getLiquidityUsed2,\r\n  getFundingRateCache2,\r\n} from '../v1/api';\r\n\r\nimport {\r\n  getPositionInfoV2,\r\n  getPositionInfosV2,\r\n  isUnlockedV2,\r\n  getEstimatedMarginV2,\r\n  getEstimatedFeeV2,\r\n  getEstimatedFundingRateV2,\r\n  getEstimatedLiquidityUsedV2,\r\n  getSpecificationV2,\r\n  getWalletBalanceV2,\r\n  getFundingRateV2,\r\n  getLiquidityUsedV2,\r\n  getFundingRateCacheV2,\r\n  getEstimatedLiquidatePriceV2,\r\n  getPoolBTokensBySymbolId as getPoolBTokensBySymbolIdV2\r\n} from '../v2/api';\r\n\r\nimport {\r\n  getPositionInfoV2l,\r\n  getPositionInfosV2l,\r\n  isUnlockedV2l,\r\n  getEstimatedMarginV2l,\r\n  getEstimatedFeeV2l,\r\n  getEstimatedFundingRateV2l,\r\n  getEstimatedLiquidityUsedV2l,\r\n  getSpecificationV2l,\r\n  getWalletBalanceV2l,\r\n  getFundingRateV2l,\r\n  getLiquidityUsedV2l,\r\n  getFundingRateCacheV2l,\r\n} from '../v2_lite/api';\r\n\r\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\r\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\r\n\r\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getSpecificationV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getSpecificationOption(chainId, poolAddress, symbolId);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getSpecification(chainId, poolAddress, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getSpecification(chainId, poolAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getSpecification2(chainId, poolAddress);\r\n  } else {\r\n    return getSpecificationV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getPositionInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getPositionInfoV2l(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getPositionInfoOption(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getPositionInfo(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getPositionInfo(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getPositionInfo2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return getPositionInfoV2(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\r\n  const version = getPoolVersionId(poolAddress);\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getPositionInfosV2l(chainId, poolAddress, accountAddress)\r\n  } else if (version === 'option') {\r\n    return getPositionInfosOption(chainId, poolAddress, accountAddress)\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getPositionInfos(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getPositionInfos(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v1') {\r\n    return [\r\n      await getPositionInfo2(chainId, poolAddress, accountAddress),\r\n    ].filter((p) => p.volume !== '0');\r\n  } else if (version === 'v2') {\r\n    return getPositionInfosV2(chainId, poolAddress, accountAddress)\r\n  } else {\r\n    // return empty array for v1, v2, v2_lite\r\n    return []\r\n  }\r\n}\r\nexport const getWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getWalletBalanceV2l(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'option') {\r\n    return getWalletBalanceOption(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getWalletBalance(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getWalletBalance(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return getWalletBalance2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return getWalletBalanceV2(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n};\r\n\r\nexport const isUnlocked = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return isUnlockedV2l(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'option') {\r\n    return isUnlockedOption(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.isUnlocked(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.isUnlocked(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n  if (accountAddress === undefined) {\r\n    return isDeriUnlocked(chainId, poolAddress);\r\n  } else if (bTokenId === undefined) {\r\n    return isUnlocked2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return isUnlockedV2(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedLiquidatePrice = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedLiquidatePriceV2(chainId, poolAddress, accountAddress, newVolume, symbolId);\r\n  } else if (version === 'option') {\r\n    // place holder\r\n    return ''\r\n  }\r\n  if (symbolId === undefined) {\r\n    // place holder\r\n    return ''\r\n  } else {\r\n    return getEstimatedLiquidatePriceV2(chainId, poolAddress, accountAddress, newVolume, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedFee = async (\r\n  chainId,\r\n  poolAddress,\r\n  volume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedFeeV2l(chainId, poolAddress, volume, symbolId);\r\n  } else if (version === 'option') {\r\n    return getEstimatedFeeOption(chainId, poolAddress, volume, symbolId);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getEstimatedFee(chainId, poolAddress, volume, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getEstimatedFee(chainId, poolAddress, volume, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedFee2(chainId, poolAddress, volume);\r\n  } else {\r\n    return getEstimatedFeeV2(chainId, poolAddress, volume, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  volume,\r\n  leverage,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedMarginV2l(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return getEstimatedMarginOption(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getEstimatedMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getEstimatedMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedMargin2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage\r\n    );\r\n  } else {\r\n    return getEstimatedMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      volume,\r\n      leverage,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getFundingRateV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getFundingRateOption(chainId, poolAddress, symbolId);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getFundingRate(chainId, poolAddress, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getFundingRate(\r\n      chainId,\r\n      poolAddress,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getFundingRate2(chainId, poolAddress);\r\n  } else {\r\n    return getFundingRateV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedFundingRate = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedFundingRateV2l(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return getEstimatedFundingRateOption(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getEstimatedFundingRate(chainId, poolAddress, newNetVolume, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getEstimatedFundingRate(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedFundingRate2(chainId, poolAddress, newNetVolume);\r\n  } else {\r\n    return getEstimatedFundingRateV2(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getLiquidityUsedV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getLiquidityUsedOption(chainId, poolAddress, symbolId);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getLiquidityUsed(chainId, poolAddress, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getLiquidityUsed(\r\n      chainId,\r\n      poolAddress,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getLiquidityUsed2(chainId, poolAddress);\r\n  } else {\r\n    return getLiquidityUsedV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getEstimatedLiquidityUsed = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getEstimatedLiquidityUsedV2l(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return getEstimatedLiquidityUsedOption(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getEstimatedLiquidityUsed(chainId, poolAddress, newNetVolume, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getEstimatedLiquidityUsed(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getEstimatedLiquidityUsed2(chainId, poolAddress, newNetVolume);\r\n  } else {\r\n    return getEstimatedLiquidityUsedV2(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getFundingRateCacheV2l(chainId, poolAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getFundingRateCacheOption(chainId, poolAddress, symbolId);\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getFundingRateCache2(chainId, poolAddress);\r\n  } else {\r\n    return getFundingRateCacheV2(chainId, poolAddress, symbolId);\r\n  }\r\n};\r\n\r\nexport const getPoolBTokensBySymbolId = async (chainId, poolAddress, accountAddress) => {\r\n  const versionId = getPoolVersionId(poolAddress)\r\n  if (['v2', 'v2_dpmm'].includes(versionId)) {\r\n    if (versionId === 'v2') {\r\n      return await getPoolBTokensBySymbolIdV2(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await apiV2Dpmm.getPoolBTokensBySymbolId(\r\n        chainId,\r\n        poolAddress,\r\n        accountAddress\r\n      );\r\n    }\r\n  } else {\r\n    return []\r\n  }\r\n}\r\n\r\nexport const getEstimatedTimePrice = async (\r\n  chainId,\r\n  poolAddress,\r\n  newNetVolume,\r\n  symbolId\r\n  ) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (version === 'option') {\r\n    return getEstimatedTimePriceOption(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getEstimatedTimePrice(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getEstimatedTimePrice(\r\n      chainId,\r\n      poolAddress,\r\n      newNetVolume,\r\n      symbolId\r\n    );\r\n  } else {\r\n    return '';\r\n  }\r\n};","import { closePositionOption, depositMarginOption, tradeWithMarginOption, unlockOption, withdrawMarginOption } from '../option/api';\r\nimport { getPoolVersionId, LITE_VERSIONS, unlockDeri } from '../shared';\r\nimport {\r\n  unlock2,\r\n  tradeWithMargin2,\r\n  closePosition2,\r\n  depositMargin2,\r\n  withdrawMargin2,\r\n} from '../v1/api';\r\nimport {\r\n  unlockV2,\r\n  tradeWithMarginV2,\r\n  closePositionV2,\r\n  depositMarginV2,\r\n  withdrawMarginV2,\r\n} from '../v2/api';\r\nimport {\r\n  unlockV2l,\r\n  tradeWithMarginV2l,\r\n  closePositionV2l,\r\n  depositMarginV2l,\r\n  withdrawMarginV2l,\r\n} from '../v2_lite/api';\r\n\r\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\r\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\r\n\r\nexport const unlock = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return unlockV2l(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'option') {\r\n    return unlockOption(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.unlock(chainId, poolAddress, accountAddress);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.unlock(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n  if (accountAddress === undefined) {\r\n    return unlockDeri(chainId, poolAddress);\r\n  } else if (bTokenId === undefined) {\r\n    return unlock2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return unlockV2(chainId, poolAddress, accountAddress, bTokenId);\r\n  }\r\n};\r\n\r\nexport const depositMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return depositMarginV2l(chainId, poolAddress, accountAddress, amount);\r\n  } else if (version === 'option') {\r\n    return depositMarginOption(chainId, poolAddress, accountAddress, amount);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.depositMargin(chainId, poolAddress, accountAddress, amount);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.depositMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId\r\n    );\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return depositMargin2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return depositMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId\r\n    );\r\n  }\r\n};\r\n\r\nexport const withdrawMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount,\r\n  bTokenId,\r\n  isMaximum\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return withdrawMarginV2l(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      isMaximum\r\n    );\r\n  } else if (version === 'option') {\r\n    return withdrawMarginOption(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      isMaximum\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.withdrawMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.withdrawMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId,\r\n    );\r\n  }\r\n  if (bTokenId === undefined) {\r\n    return withdrawMargin2(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    return withdrawMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount,\r\n      bTokenId,\r\n      isMaximum\r\n    );\r\n  }\r\n};\r\n\r\nexport const tradeWithMargin = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  newVolume,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return tradeWithMarginV2l(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'option') {\r\n    return tradeWithMarginOption(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.tradeWithMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    )\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.tradeWithMargin(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return tradeWithMargin2(chainId, poolAddress, accountAddress, newVolume);\r\n  } else {\r\n    return tradeWithMarginV2(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      newVolume,\r\n      symbolId\r\n    );\r\n  }\r\n};\r\n\r\nexport const closePosition = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return closePositionV2l(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return closePositionOption(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.closePosition(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.closePosition(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      symbolId,\r\n    );\r\n  }\r\n  if (symbolId === undefined) {\r\n    return closePosition2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return closePositionV2(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n};\r\n","import { getPoolVersionId, LITE_VERSIONS } from '../shared';\r\nimport { getTradeHistoryOption } from '../option/api';\r\nimport { getTradeHistory2 } from '../v1/api';\r\nimport { getTradeHistoryV2 } from '../v2/api';\r\nimport { getTradeHistoryV2l } from '../v2_lite/api';\r\n\r\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\r\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\r\n\r\nexport const getTradeHistory = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  symbolId\r\n) => {\r\n  const version = getPoolVersionId(poolAddress)\r\n  if (LITE_VERSIONS.includes(version)) {\r\n    return getTradeHistoryV2l(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'option') {\r\n    return getTradeHistoryOption(chainId, poolAddress, accountAddress, symbolId);\r\n  } else if (version === 'v2_lite_dpmm') {\r\n    return apiV2lDpmm.getTradeHistory(chainId, poolAddress, accountAddress, symbolId)\r\n  } else if (version === 'v2_dpmm') {\r\n    return apiV2Dpmm.getTradeHistory(chainId, poolAddress, accountAddress, symbolId)\r\n  }\r\n  if (symbolId === undefined) {\r\n    return getTradeHistory2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    return getTradeHistoryV2(chainId, poolAddress, accountAddress, symbolId);\r\n  }\r\n};\r\n","export { web3Factory } from './web3.js'\r\nexport { oracleFactory, wrappedOracleFactory } from './oracle.js'\r\nexport {\r\n  databaseFactory,\r\n  databaseWormholeFactory,\r\n  databaseAirdropFactory,\r\n  databaseActivityFactory,\r\n} from './database';\r\nexport {\r\n  bTokenFactory,\r\n  TERC20Factory,\r\n\r\n  brokerManagerFactory,\r\n  pTokenAirdropFactory,\r\n\r\n  deriFactory,\r\n  wormholeFactory,\r\n  miningVaultRouterFactory,\r\n  miningVaultPoolFactory,\r\n} from './contract';","import { getOracleConfig } from '../config/oracle';\r\nimport { normalizeChainId } from './validate';\r\nimport { DeriEnv } from '../config/env';\r\nimport { oracleFactory, wrappedOracleFactory } from '../factory/oracle';\r\nimport { deriToNatural } from './convert';\r\nimport {\r\n  mapToSymbolInternal,\r\n  mapToBTokenInternal,\r\n  normalizeOptionSymbol,\r\n} from '../config/token';\r\nimport { PRESERVED_SYMBOLS } from '../config/version';\r\nimport { offChainOracleFactory } from '../contract/factory';\r\n\r\n\r\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms))\r\n\r\nexport const getPriceInfoForV1 = async(symbol) => {\r\n  const env = DeriEnv.get();\r\n  let method = 'get_signed_price'\r\n  let url\r\n  let baseUrl =\r\n    env === 'prod'\r\n      ? `https://oracle4.deri.finance/${method}`\r\n      : `https://oracle2.deri.finance/${method}`;\r\n  const addSymbolParam = (url, symbol) =>\r\n    `${url}?symbol=${symbol}`;\r\n  if (symbol) {\r\n    url = addSymbolParam(baseUrl, symbol);\r\n  } else {\r\n    url = baseUrl;\r\n  }\r\n  let retry = 3;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\r\n    if (res.ok) {\r\n      priceInfo = await res.json();\r\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\r\n        return priceInfo.data\r\n        //return deriToNatural(priceInfo.data.price).toString()\r\n      }\r\n    }\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`getPriceFromV1 exceed max retry(3): ${symbol} => ${JSON.stringify(priceInfo)}`);\r\n  }\r\n}\r\n\r\n\r\nexport const getOracleUrl = (symbol, type='futures') => {\r\n  const env = DeriEnv.get();\r\n  //if (/^[0-9]+$/.test(symbolId.toString())) {\r\n  let method = 'get_signed_price'\r\n  if (type === 'option') {\r\n    method = 'get_signed_volatility'\r\n  }\r\n  if (PRESERVED_SYMBOLS.includes(symbol)) {\r\n    method = 'get_price'\r\n    symbol = `${symbol}_v2_bsc`\r\n  }\r\n  let baseUrl =\r\n    env === 'prod'\r\n      ? `https://oracle4.deri.finance/${method}`\r\n      : `https://oracle2.deri.finance/${method}`;\r\n  const addSymbolParam = (url, symbol) =>\r\n    `${url}?symbol=${symbol}`;\r\n\r\n  if (symbol) {\r\n    return addSymbolParam(baseUrl, symbol);\r\n  } else {\r\n    return baseUrl;\r\n  }\r\n};\r\n\r\nexport const getPriceFromRest = async(symbol, type='futures') => {\r\n  const res = await getPriceInfo(symbol, type)\r\n  if (type === 'futures' && res.price) {\r\n    return PRESERVED_SYMBOLS.includes(symbol) ? res.price : deriToNatural(res.price).toString()\r\n  } else if (type === 'option' && res.volatility) {\r\n    return deriToNatural(res.volatility).toString()\r\n  } else {\r\n    throw new Error(`getPrice() invalid format: ${JSON.stringify(res)}`)\r\n  }\r\n}\r\n\r\n// from oracle rest api\r\nexport const getPriceInfo = async (symbol, type='futures') => {\r\n  symbol = mapToBTokenInternal(symbol)\r\n  let url = getOracleUrl(symbol, type);\r\n  let retry = 3;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    try {\r\n      res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\r\n      if (res.ok) {\r\n        priceInfo = await res.json();\r\n        if (priceInfo.status.toString() === '200' && priceInfo.data) {\r\n          return priceInfo.data\r\n        }\r\n      }\r\n    } catch(err) {\r\n      //console.log(err.toString())\r\n      retry -= 1;\r\n    }\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`fetch oracle info exceed max retry(3): ${symbol} => ${JSON.stringify(priceInfo)}`);\r\n  }\r\n};\r\n\r\nexport const getOracleInfosFromRest = async (symbolList, type = 'future') => {\r\n  let url = getOracleUrl(null, type);\r\n  let retry = 3;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    try {\r\n      res = await fetch(url, {\r\n        mode: \"cors\",\r\n        cache: \"no-cache\",\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(symbolList),\r\n      });\r\n      if (res.ok) {\r\n        priceInfo = await res.json();\r\n        if (priceInfo.status.toString() === \"200\" && priceInfo.data) {\r\n          return priceInfo.data;\r\n        }\r\n      }\r\n    } catch (err) {}\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`getOracleInfosFromRest exceed max retry(3): ${symbolList}`);\r\n  }\r\n};\r\n\r\n// cache\r\n// export const getOraclePriceFromCache = (function () {\r\n//   console.log('-- getOraclePriceFromCache will remove in next version ' )\r\n//   let cache = {};\r\n//   return {\r\n//     async get(chainId, symbol = '_', version = 'v2') {\r\n//       const key = `${chainId}_${symbol}_${version}`\r\n//       if (\r\n//         Object.keys(cache).includes(key) &&\r\n//         Math.floor(Date.now() / 1000) - cache[key].timestamp < 5\r\n//       ) {\r\n//         return cache[key].data;\r\n//       } else {\r\n//         const data = await getOraclePrice(chainId, symbol, version);\r\n//         cache[key] = {\r\n//           data,\r\n//           timestamp: Math.floor(Date.now() / 1000),\r\n//         };\r\n//         return cache[key].data;\r\n//       }\r\n//     },\r\n//   };\r\n// })();\r\n\r\nexport const getPriceInfos = async (symbolList) => {\r\n  let url = getOracleUrl();\r\n  let retry = 3;\r\n  let res, priceInfo;\r\n  while (retry > 0) {\r\n    res = await fetch(url, {\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(symbolList),\r\n    });\r\n    if (res.ok) {\r\n      priceInfo = await res.json();\r\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\r\n        return priceInfo.data\r\n      }\r\n    }\r\n    retry -= 1;\r\n  }\r\n  if (retry === 0) {\r\n    throw new Error(`fetch oracle infos exceed max retry(3): ${symbolList} ${JSON.stringify(priceInfo)}`);\r\n  }\r\n};\r\n\r\nexport const oraclePricesCache = (function(){\r\n  const cache = {}\r\n  const pending = {}\r\n  return {\r\n    async get(symbols=[]) {\r\n      const key = symbols.join('_')\r\n      if (\r\n        !Object.keys(cache).includes(key) ||\r\n        Math.floor(Date.now() / 1000) - cache[key].timestamp > 3\r\n      ) {\r\n        const timestamp = Math.floor(Date.now() / 1000);\r\n        // pending is exit\r\n        if (Object.keys(pending).includes(key)) {\r\n          let retry = 10;\r\n          while (retry > 0) {\r\n            await delay(390);\r\n            if (!Object.keys(pending).includes(key)) {\r\n              //console.log('hit pending with cache');\r\n              return cache[key].data;\r\n            }\r\n          }\r\n          if (retry === 0) {\r\n            //console.log('hit pending expired');\r\n            const data = await getPriceInfos(symbols);\r\n            cache[key] = {\r\n              data,\r\n              timestamp,\r\n            };\r\n            return cache[key].data;\r\n          }\r\n        } else {\r\n          pending[key] = true;\r\n          try {\r\n            //console.log('hit new');\r\n            const data = await getPriceInfos(symbols);\r\n            cache[key] = {\r\n              data,\r\n              timestamp,\r\n            };\r\n            return cache[key].data;\r\n          } catch (err) {\r\n          } finally {\r\n            delete pending[key];\r\n          }\r\n        }\r\n      } else {\r\n        //console.log('hit cache');\r\n        return cache[key].data;\r\n      }\r\n    }\r\n  }\r\n})()\r\n\r\nexport const RestOracle = (symbol) => {\r\n  return {\r\n    getPrice: async function () {\r\n      return getPriceFromRest(symbol)\r\n    }\r\n  }\r\n};\r\n\r\nexport const getOraclePrice = async (chainId, symbol, version='v2') => {\r\n  chainId = normalizeChainId(chainId);\r\n  symbol = mapToSymbolInternal(symbol)\r\n  const config = getOracleConfig(version, chainId, symbol);\r\n  if (config && config.address) {\r\n    const oracle = oracleFactory(\r\n      chainId,\r\n      config.address,\r\n      symbol,\r\n      config.decimal,\r\n    );\r\n    return await oracle.getPrice();\r\n  } else {\r\n    // for new added symbol and not updated to config yet\r\n    const priceInfo = await getPriceInfo(symbol, version);\r\n    return deriToNatural(priceInfo.price).toString();\r\n  }\r\n};\r\n\r\nexport const getOraclePrice2 = async (chainId, symbol, oracleAddress, version='v2_lite') => {\r\n  chainId = normalizeChainId(chainId);\r\n  symbol = mapToSymbolInternal(symbol)\r\n  if (oracleAddress !== '') {\r\n    const oracle = wrappedOracleFactory(chainId, oracleAddress)\r\n    return await oracle.getPrice();\r\n  } else {\r\n    // for new added symbol and not updated to config yet\r\n    const priceInfo = await getPriceInfo(symbol, version);\r\n    return deriToNatural(priceInfo.price).toString();\r\n  }\r\n};\r\n\r\n// cache\r\nexport const getOraclePriceFromCache2 = (function () {\r\n  let cache = {};\r\n  return {\r\n    async get(chainId, symbol = '_', oracleAddress, version = 'v2_lite') {\r\n      const key = `${chainId}_${symbol}_${oracleAddress}`\r\n      if (\r\n        Object.keys(cache).includes(key) &&\r\n        Math.floor(Date.now() / 1000) - cache[key].timestamp < 5\r\n      ) {\r\n        return cache[key].data;\r\n      } else {\r\n        const data = await getOraclePrice2(chainId, symbol, oracleAddress, version);\r\n        cache[key] = {\r\n          data,\r\n          timestamp: Math.floor(Date.now() / 1000),\r\n        };\r\n        return cache[key].data;\r\n      }\r\n    },\r\n  };\r\n})();\r\n\r\n// export const getOraclePriceForOption = async (chainId, symbol) => {\r\n//   return await getOraclePrice(chainId, normalizeOptionSymbol(symbol), 'option');\r\n// };\r\n\r\n// for viewer use\r\n// export const getOraclePricesForOption = async (chainId, symbols) => {\r\n//   const oracleSymbols = symbols\r\n//     .map((i) => normalizeOptionSymbol(i))\r\n//     .filter((value, index, self) => self.indexOf(value) === index);\r\n//   const oracleSymbolPrices = await Promise.all(\r\n//     oracleSymbols.reduce(\r\n//       (acc, i) => acc.concat([getOraclePrice(chainId, i, 'option')]),\r\n//       []\r\n//     )\r\n//   );\r\n//   return symbols.map((s) => {\r\n//     return toWei(oracleSymbolPrices[oracleSymbols.indexOf(normalizeOptionSymbol(s))]);\r\n//   });\r\n// };\r\n\r\n// // for tx use\r\n// export const getOracleVolatilityForOption = async (symbols) => {\r\n//   const volSymbols = getVolatilitySymbols(symbols)\r\n//   //volSymbols.map((s) => `VOL-${s.toUpperCase()}`)\r\n\r\n//   const volatilities = await Promise.all(\r\n//     volSymbols.reduce((acc, i) => acc.concat([getPriceInfo(i, 'option')]), [])\r\n//   );\r\n//   //return volatilities;\r\n//   return symbols.map((s) => {\r\n//     return volatilities[volSymbols.indexOf(`VOL-${normalizeOptionSymbol(s)}`)];\r\n//   });\r\n// };\r\n\r\n// for viewer use\r\nexport const getOracleVolatilitiesForOption = async (symbols) => {\r\n  const oracleSymbols = symbols\r\n    .map((i) => normalizeOptionSymbol(i))\r\n    .filter((value, index, self) => self.indexOf(value) === index);\r\n  const res = await getOracleInfosFromRest(oracleSymbols.map((os) => `VOL-${os}`), 'option')\r\n  const volatilities = oracleSymbols.map((s) => res[`VOL-${s}`])\r\n  return symbols.map((s) => {\r\n    return volatilities[oracleSymbols.indexOf(normalizeOptionSymbol(s))];\r\n  });\r\n};\r\n\r\n// check symbol is used offchain oracle\r\nexport const checkOffChainOracleSymbol = async (chainId, oracleAddress, symbol) => {\r\n  try {\r\n    await offChainOracleFactory(chainId, oracleAddress).signer()\r\n    return symbol\r\n  } catch (err) {\r\n  }\r\n  try {\r\n    await offChainOracleFactory(chainId, oracleAddress).signatory()\r\n    return symbol\r\n  } catch (err) {\r\n  }\r\n  return \"\"\r\n};","import {\r\n  getRestServerConfig,\r\n  DeriEnv,\r\n} from '../config'\r\n//import fetch from 'node-fetch'\r\n\r\n// get REST HTTP Base url\r\nexport const getHttpBase = () => {\r\n  return getRestServerConfig(DeriEnv.get());\r\n};\r\n\r\nexport const fetchJson = async (url) => {\r\n  const resp = await fetch(url);\r\n  return await resp.json();\r\n};\r\n\r\nexport const fetchRestApi = async (path, opts = { method: 'GET' }) => {\r\n  return await fetchJson(`${getHttpBase()}${path}`, opts);\r\n};\r\n\r\n// query api wrapper\r\nexport const catchApiError = async (func, args, methodName, defaultValue) => {\r\n  try {\r\n    const res = await func(...args)\r\n    return res\r\n  } catch (err) {\r\n    //console.log(`${methodName}: `, err.toString())\r\n    console.log(`${methodName}: `, err)\r\n  }\r\n  return defaultValue\r\n}\r\n\r\n// tx api wrapper\r\nexport const catchTxApiError = async (func, args) => {\r\n  let res;\r\n  try {\r\n    const result = await func(...args);\r\n    res = { success: true, transaction: result };\r\n  } catch (err) {\r\n    const message = err.errorMessage || err.message || 'Transaction failed';\r\n    res = { success: false, error: message};\r\n  }\r\n  return res;\r\n};\r\n\r\n","\r\n/* eslint-disable */\r\nexport const perpetualPoolAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[9]\", \"name\": \"parameters\", \"type\": \"uint256[9]\" }, { \"internalType\": \"address[4]\", \"name\": \"addresses\", \"type\": \"address[4]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"targetPool\", \"type\": \"address\" } ], \"name\": \"approvePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourcePool\", \"type\": \"address\" } ], \"name\": \"executePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"routerAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBToken\", \"outputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBTokenOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLengths\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"decimals0\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"minBToken0Ratio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbolOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const perpetualPoolRouterAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourceRouter\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"liquidateWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"liquidatorQualifier\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"qualifierAddress\", \"type\": \"address\" } ], \"name\": \"setLiquidatorQualifier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"tradeWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const lTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"name\": \"UpdateAsset\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getAsset\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getAssets\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"asset\", \"type\": \"tuple\" } ], \"name\": \"updateAsset\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const pTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numSymbols_\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargins\", \"outputs\": [ { \"internalType\": \"int256[]\", \"name\": \"\", \"type\": \"int256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getPositions\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numSymbols\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumSymbols\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"margins\", \"type\": \"int256[]\" } ], \"name\": \"updateMargins\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n/* eslint-disable */","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { deriToNatural, hexToNumber, bg } from '../../shared/utils'\r\nimport { perpetualPoolAbi } from './abis';\r\n\r\nexport class PerpetualPool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolAbi)\r\n\r\n    this.bTokenCount= 0\r\n    this.symbolCount= 0\r\n\r\n    this.lTokenAddress = ''\r\n    this.pTokenAddress = ''\r\n    this.routerAddress = ''\r\n    this.protocolFeeCollector = ''\r\n\r\n    this.protocolFeeAccrued = 0\r\n  }\r\n\r\n  async _update() {\r\n    await Promise.all([\r\n      this.getLengths(),\r\n      this.getAddresses(),\r\n      this.getParameters(),\r\n    ]);\r\n  }\r\n\r\n  async getLengths() {\r\n    try {\r\n      const res = await this._call('getLengths')\r\n      //console.log(res[0])\r\n      if (res[0] && res[1]) {\r\n        this.bTokenCount= parseInt(res[0])\r\n        this.symbolCount= parseInt(res[1])\r\n      }\r\n    } catch(err) {\r\n      throw new Error(`PerpetualPool#_getLength error: ${err}`)\r\n    }\r\n  }\r\n  async getAddresses() {\r\n    try {\r\n      const res = await this._call('getAddresses')\r\n      this.lTokenAddress = res.lTokenAddress\r\n      this.pTokenAddress = res.pTokenAddress\r\n      this.routerAddress = res.routerAddress\r\n      this.protocolFeeCollector = res.protocolFeeCollector\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#_getAddress error: ${err}`)\r\n    }\r\n  }\r\n  async getParameters() {\r\n    const res = await this._call('getParameters')\r\n    return {\r\n      decimals0: res.decimals0,\r\n      minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n  async getProtocolFeeAccrued() {\r\n    const res =  await this._call('getProtocolFeeAccrued')\r\n    this.protocolFeeAccrued = deriToNatural(res)\r\n  }\r\n  async getBToken(bTokenId) {\r\n    try {\r\n      //bTokenId = parseInt(bTokenId)\r\n      const res = await this._call('getBToken', [bTokenId]);\r\n      return {\r\n        bTokenAddress: res.bTokenAddress,\r\n        swapperAddress: res.bTokenAddress,\r\n        oracleAddress: res.oracleAddress,\r\n        decimals: res.decimals,\r\n        discount: deriToNatural(res.discount),\r\n        price: deriToNatural(res.price),\r\n        liquidity: deriToNatural(res.liquidity),\r\n        pnl: deriToNatural(res.pnl),\r\n        cumulativePnl: deriToNatural(res.cumulativePnl),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getBToken error: ${err}`);\r\n    }\r\n  }\r\n  async getBTokenOracle(bTokenId) {\r\n    //bTokenId = parseInt(bTokenId)\r\n    return await this._call('getBTokenOracle', [bTokenId])\r\n  }\r\n  async getSymbol(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    try {\r\n      const res =  await this._call('getSymbol', [symbolId])\r\n      return {\r\n        symbol: res.symbol,\r\n        oracleAddress: res.oracleAddress,\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        price: deriToNatural(res.price),\r\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\r\n    }\r\n  }\r\n  async getSymbolOracle(symbolId) {\r\n    //symbolId = parseInt(symbolId)\r\n    return await this._call('getSymbolOracle', [symbolId])\r\n  }\r\n\r\n  // trade history query methods\r\n  async _getTimeStamp(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  // get block number when last updated\r\n  async getLastUpdatedBlockNumber() {\r\n    await this._init()\r\n    const res = await this.web3.eth.getStorageAt(this.contractAddress, 0)\r\n    //console.log('res', hexToNumber(res))\r\n    return hexToNumber(res)\r\n  }\r\n\r\n  // get block number when last updated\r\n  async getLatestBlockNumber() {\r\n    await this._init()\r\n    const res = await this.web3.eth.getBlockNumber()\r\n    //console.log('res', res)\r\n    return res\r\n  }\r\n\r\n  _calculateFee(volume, price, multiplier, feeRatio) {\r\n    return bg(volume)\r\n      .abs()\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(feeRatio)\r\n      .toString();\r\n  }\r\n  async _getBlockInfo(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\r\n    await this._init()\r\n    let events = [];\r\n    //let toBlock = await this._getBlockInfo(\"latest\");\r\n    let amount\r\n    if (['56', '97','127', '80001'].includes(this.chainId)) {\r\n      amount = 999\r\n    } else {\r\n      amount = 4999\r\n    }\r\n    if ((fromBlock + amount) > to) {\r\n      amount = to - fromBlock\r\n    }\r\n    while (fromBlock <= to) {\r\n      let es = await this.contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock: fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if ((fromBlock + amount) > to) {\r\n        amount = to - fromBlock\r\n      }\r\n    }\r\n    return events;\r\n  }\r\n}","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { naturalToDeri } from '../../shared/utils'\r\nimport { MAX_INT256 } from '../../shared/config';\r\nimport { perpetualPoolRouterAbi} from './abis';\r\n\r\nexport class PerpetualPoolRouter extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\r\n    this.poolAddress = ''\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    this.poolAddress = await this._call('pool');\r\n    return this.poolAddress\r\n  }\r\n\r\n  // === transaction ===\r\n  async addLiquidity(accountAddress, bTokenId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addLiquidity',\r\n      [bTokenId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeLiquidity(accountAddress, bTokenId, amount, isMaximum) {\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeLiquidity',\r\n        [bTokenId, MAX_INT256],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeLiquidity',\r\n        [bTokenId, naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async addMargin(accountAddress, bTokenId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addMargin',\r\n      [bTokenId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMargin(accountAddress, bTokenId, amount, isMaximum) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    if (isMaximum) {\r\n      //console.log('->', MAX_INT256)\r\n      return await this._transact(\r\n        'removeMargin',\r\n        [bTokenId, MAX_INT256],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeMargin',\r\n        [bTokenId, naturalToDeri(amount)],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async trade(accountAddress, symbolId, amount) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'trade',\r\n      [symbolId, naturalToDeri(amount)],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  // with prices\r\n  async addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addLiquidityWithPrices',\r\n      [bTokenId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n  async removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeLiquidityWithPrices',\r\n        [bTokenId, MAX_INT256, priceInfos],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeLiquidityWithPrices',\r\n        [bTokenId, naturalToDeri(amount), priceInfos],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'addMarginWithPrices',\r\n      [bTokenId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    if (isMaximum) {\r\n      return await this._transact(\r\n        'removeMarginWithPrices',\r\n        [bTokenId, MAX_INT256, priceInfos],\r\n        accountAddress\r\n      );\r\n    } else {\r\n      return await this._transact(\r\n        'removeMarginWithPrices',\r\n        [bTokenId, naturalToDeri(amount), priceInfos],\r\n        accountAddress\r\n      );\r\n    }\r\n  }\r\n\r\n  async tradeWithPrices(accountAddress, symbolId, amount, priceInfos) {\r\n    if (!this.poolAddress) {\r\n      await this.pool()\r\n    }\r\n    return await this._transact(\r\n      'tradeWithPrices',\r\n      [symbolId, naturalToDeri(amount), priceInfos],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  // async liquidate(acountAddress) {\r\n  //   if (!this.poolAddress) {\r\n  //     await this.pool()\r\n  //   }\r\n  //   return await this._transact(\r\n  //     'liquidate',\r\n  //     [accountAddress],\r\n  //     accountAddress\r\n  //   );\r\n  // }\r\n\r\n}","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { lTokenAbi } from './abis';\r\n\r\nconst processAsset = (res) => {\r\n  return {\r\n    liquidity: deriToNatural(res[0]),\r\n    pnl: deriToNatural(res[1]),\r\n    lastCumulativePnl: deriToNatural(res[2]),\r\n  }\r\n}\r\nexport class LToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, lTokenAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async getAsset(accountAddress, bTokenId) {\r\n    const res = await this._call('getAsset', [accountAddress, bTokenId]);\r\n    if (Array.isArray(res)) {\r\n      return processAsset(res)\r\n    } else {\r\n      console.log('address', this.contractAddress)\r\n      console.log('res', res)\r\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress} ${bTokenId})`)\r\n    }\r\n  }\r\n  async getAssets(accountAddress) {\r\n    const res = await this._call('getAssets', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map(i => processAsset(i))\r\n    } else {\r\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n\r\n  // === transaction ===\r\n}","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { pTokenAbi } from './abis';\r\n\r\nconst processPosition = (res) => {\r\n  return {\r\n    volume: deriToNatural(res.volume),\r\n    cost: deriToNatural(res.cost),\r\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\r\n  }\r\n}\r\nexport class PToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async getMargin(accountAddress, bTokenId) {\r\n    const res = await this._call('getMargin', [accountAddress, bTokenId]);\r\n    return deriToNatural(res)\r\n  }\r\n  async getMargins(accountAddress) {\r\n    const res = await this._call('getMargins', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map((i) => deriToNatural(i))\r\n    }\r\n  }\r\n  async getPosition(accountAddress, symbolId) {\r\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\r\n    if (Array.isArray(res)) {\r\n      return processPosition(res)\r\n    } else {\r\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n  async getPositions(accountAddress) {\r\n    const res = await this._call('getPositions', [accountAddress]);\r\n    if (Array.isArray(res)) {\r\n      return res.map((i) => processPosition(i))\r\n    }\r\n  }\r\n\r\n  // === transaction ===\r\n}","import {\r\n  PerpetualPool,\r\n  PerpetualPoolRouter,\r\n  LToken,\r\n  PToken,\r\n} from './contract';\r\n\r\nconst factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}\r\n\r\nexport const perpetualPoolFactory = factory(PerpetualPool)\r\n\r\nexport const perpetualPoolRouterFactory = factory(PerpetualPoolRouter)\r\n\r\nexport const lTokenFactory = factory(LToken)\r\n\r\nexport const pTokenFactory = factory(PToken)","const bTokenPairs = {\r\n  AMUSDC: 'amUSDC',\r\n};\r\n\r\nconst offchainSymbolPairs = {\r\n  AXSUSDT: 'AXSUSDT',\r\n  MANAUSDT: 'MANAUSDT',\r\n  MBOXUSDT: 'MBOXUSDT',\r\n  IBSCDEFI: 'iBSCDEFI',\r\n  IGAME: 'iGAME',\r\n  ALICEUSDT: 'ALICEUSDT',\r\n  SANDUSDT: 'SANDUSDT',\r\n  QUICKUSDT: 'QUICKUSDT',\r\n  GHSTUSDT: 'GHSTUSDT',\r\n  AGLDUSDT: 'AGLDUSDT',\r\n};\r\n\r\nexport const normalizeOptionSymbol = (optionSymbol) => {\r\n  const res = optionSymbol.split('-')\r\n  if (res.length >= 2) {\r\n    return res[0]\r\n  } else {\r\n    throw new Error(`invalid option symbol:${optionSymbol}`)\r\n  }\r\n};\r\n\r\nexport const getNormalizedOptionSymbols = (symbols) => {\r\n  let res = []\r\n  symbols.forEach((s) => {\r\n    const volSymbol = normalizeOptionSymbol(s)\r\n    if (!res.includes(volSymbol)) {\r\n      res.push(volSymbol)\r\n    }\r\n  })\r\n  return res\r\n}\r\n\r\nexport const getVolatilitySymbols = (symbols) => {\r\n  return getNormalizedOptionSymbols(symbols).map((s) => `VOL-${s}`)\r\n}\r\n\r\nexport const isUsedRestOracle = (symbol) => {\r\n  return Object.keys(offchainSymbolPairs).includes(symbol);\r\n};\r\n\r\nexport const mapToSymbol = (symbol) => {\r\n  if (Object.keys(offchainSymbolPairs).includes(symbol)) {\r\n    return offchainSymbolPairs[symbol]\r\n  } else {\r\n    return symbol\r\n  }\r\n}\r\n\r\nexport const mapToSymbolInternal = (symbol) => {\r\n  const index = Object.values(offchainSymbolPairs).indexOf(symbol)\r\n  if (index > -1) {\r\n    return Object.keys(offchainSymbolPairs)[index]\r\n  } else {\r\n    return symbol\r\n  }\r\n}\r\n\r\nexport const mapToBToken = (bToken) => {\r\n  if (Object.keys(bTokenPairs).includes(bToken)) {\r\n    return bTokenPairs[bToken]\r\n  } else {\r\n    return bToken\r\n  }\r\n}\r\n\r\nexport const mapToBTokenInternal = (bToken) => {\r\n  const index = Object.values(bTokenPairs).indexOf(bToken)\r\n  if (index !== -1) {\r\n    return Object.keys(bTokenPairs)[index]\r\n  } else {\r\n    return bToken\r\n  }\r\n}\r\n\r\nexport const normalizeSymbolUnit = (symbol) => {\r\n  const prefix = ['USD', 'USDT'];\r\n  const re = new RegExp(`(${prefix.join('|')})$`);\r\n  if (typeof symbol === 'string') {\r\n    return mapToSymbol(symbol).replace(re, '');\r\n  }\r\n  console.log(`symbol(${symbol}) is not a string type`);\r\n  return symbol;\r\n};\r\n\r\nexport const getIndexInfo = (symbol) => {\r\n  const internalSymbol = mapToSymbolInternal(symbol);\r\n  const customIndexs = {\r\n    IGAME: {\r\n      tokens: ['AXS', 'MANA', 'SAND', 'ALICE', 'TLM', 'DPET', 'SKILL'],\r\n      url: 'https://docs.deri.finance/products/index/game-index',\r\n    },\r\n    IBSCDEFI: {\r\n      tokens: ['CAKE', 'XVS', 'MDX', 'AUTO', 'BAKE', 'BUNNY'],\r\n      url: 'https://docs.deri.finance/products/index/bsc-defi-index',\r\n    },\r\n    IMEME: {\r\n      tokens: ['DOGE', 'SHIB', 'ELON', 'LOWB', 'PIG', 'SAFEMOON', 'MONA'],\r\n      url: 'https://docs.deri.finance/products/index/meme-index',\r\n    },\r\n  };\r\n  if (Object.keys(customIndexs).includes(internalSymbol)) {\r\n    return customIndexs[internalSymbol];\r\n  } else {\r\n    return { tokens: [], url: '' };\r\n  }\r\n};","import {\r\n  validateArgs,\r\n  deriToNatural,\r\n  numberToHex,\r\n  bg,\r\n} from '../../shared/utils';\r\nimport {\r\n  calculateFundingRate,\r\n  calculateLiquidityUsed,\r\n  processFundingRate,\r\n} from '../calculation';\r\nimport { ContractBase } from '../../shared/contract/contract_base';\r\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle';\r\n\r\n/* eslint-disable */\r\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class PerpetualPool extends ContractBase {\r\n  constructor(chainId, contractAddress, isProvider) {\r\n    super(chainId, contractAddress, POOL_ABI, isProvider);\r\n    // this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\r\n  }\r\n\r\n  async symbol() {\r\n    return await this._call('symbol');\r\n  }\r\n\r\n  async getStateValues() {\r\n    let result;\r\n    const defaultValue = bg(0);\r\n    try {\r\n      const res = await this._call('getStateValues');\r\n      //console.log(\"getStateValues() raw:\", res)\r\n      result = {\r\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\r\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\r\n        liquidity: deriToNatural(res.liquidity),\r\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n        tradersNetCost: deriToNatural(res.tradersNetCost),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        cumuFundingRate: defaultValue,\r\n        cumuFundingRateBlock: defaultValue,\r\n        liquidity: defaultValue,\r\n        tradersNetCost: defaultValue,\r\n        tradersNetVolume: defaultValue,\r\n      };\r\n      console.log(`getStateValues: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async getParameters() {\r\n    let result;\r\n    const defaultValue = bg(0);\r\n    try {\r\n      const res = await this._call('getParameters');\r\n      // console.log(\"getParameters() raw: \", res)\r\n      result = {\r\n        multiplier: deriToNatural(res.multiplier),\r\n        feeRatio: deriToNatural(res.feeRatio),\r\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\r\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\r\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n        priceDelayAllowance: bg(res.priceDelayAllowance),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        multiplier: defaultValue,\r\n        feeRatio: defaultValue,\r\n        minPoolMarginRatio: defaultValue,\r\n        minInitialMarginRatio: defaultValue,\r\n        minMaintenanceMarginRatio: defaultValue,\r\n        minAddLiquidity: defaultValue,\r\n        redemptionFeeRatio: defaultValue,\r\n        fundingRateCoefficient: defaultValue,\r\n        minLiquidationReward: defaultValue,\r\n        maxLiquidationReward: defaultValue,\r\n        liquidationCutRatio: defaultValue,\r\n        priceDelayAllowance: defaultValue,\r\n      };\r\n      console.log(`getParameters: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  _getTransactionReceipt(tx) {\r\n    const self = this;\r\n    return function _transactionReceipt(resolve, reject) {\r\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\r\n        if (error) {\r\n          reject(error);\r\n        } else if (receipt == null) {\r\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\r\n        } else if (receipt.status === false) {\r\n          receipt.errorMessage = 'Transaction failed';\r\n          reject(receipt);\r\n        } else {\r\n          resolve(receipt);\r\n        }\r\n      });\r\n    };\r\n  }\r\n  async _estimatedGas(method, args, accountAddress) {\r\n    // !this.accountAddress &&\r\n    //   console.log('please do setAccount(accountAddress) first');\r\n    const MAX_GAS_AMOUNT = 582731\r\n    let gas = 0;\r\n    for (let i = 0; i < 2; i++) {\r\n      try {\r\n        gas = await this.contract.methods[method](...args).estimateGas({\r\n          from: accountAddress,\r\n        });\r\n        gas = parseInt(gas * 1.25);\r\n        break;\r\n      } catch (err) {\r\n        //console.log(\"err\", err);\r\n      }\r\n    }\r\n    if (gas == 0) gas = MAX_GAS_AMOUNT;\r\n    if (gas > MAX_GAS_AMOUNT) gas = MAX_GAS_AMOUNT;\r\n    return gas;\r\n  }\r\n\r\n  // overwrite to use signed price to tx\r\n  async _transact(method, args = [], accountAddress) {\r\n    await this._init()\r\n    const symbol = await this.symbol()\r\n    const oracle = await getPriceInfoForV1(symbol);\r\n    let signed = [oracle.timestamp, oracle.price, parseInt(oracle.v).toString(), oracle.r, oracle.s];\r\n\r\n    const gas = await this._estimatedGas(method, [...args, ...signed], accountAddress)\r\n\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n\r\n  async getFundingRate() {\r\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\r\n    const symbol = await this.symbol()\r\n    price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\r\n    try {\r\n      const stateValues = await this.getStateValues();\r\n      const parameters = await this.getParameters();\r\n      const { tradersNetVolume, liquidity } = stateValues;\r\n      const {\r\n        multiplier,\r\n        fundingRateCoefficient,\r\n        minPoolMarginRatio,\r\n      } = parameters;\r\n      const args1 = [\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        liquidity,\r\n        fundingRateCoefficient,\r\n      ];\r\n      if (!validateArgs(...args1)) {\r\n        fundingRate = '0';\r\n        fundingRatePerBlock = '0';\r\n      } else {\r\n        fundingRatePerBlock = calculateFundingRate(...args1);\r\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\r\n      }\r\n      const args2 = [\r\n        tradersNetVolume,\r\n        price,\r\n        multiplier,\r\n        liquidity,\r\n        minPoolMarginRatio,\r\n      ];\r\n      if (!validateArgs(...args2)) {\r\n        liquidityUsed = '0';\r\n      } else {\r\n        liquidityUsed = calculateLiquidityUsed(...args2);\r\n      }\r\n      return {\r\n        price,\r\n        multiplier: multiplier.toString(),\r\n        fundingRate: fundingRate,\r\n        fundingRatePerBlock: fundingRatePerBlock,\r\n        tradersNetVolume: tradersNetVolume.toString(),\r\n        liquidity: liquidity.toString(),\r\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\r\n        liquidityUsed: liquidityUsed,\r\n        poolMarginRatio: minPoolMarginRatio.toString(),\r\n      };\r\n    } catch (err) {\r\n      console.log('PerpetualPool#gerFundingRate():', err);\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  async depositMargin(accountAddress, amount) {\r\n    let res;\r\n    try {\r\n      let tx = await this._transact(\r\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\r\n        [amount],\r\n        accountAddress\r\n      );\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      console.log('here');\r\n      res = { success: false, error: err };\r\n    }\r\n    return res;\r\n  }\r\n\r\n  // util methods, it's extract shared/utils now\r\n  async _getBlockInfo(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n\r\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\r\n    await this._init()\r\n    let events = [];\r\n    //let toBlock = await this._getBlockInfo(\"latest\");\r\n    //toBlock = toBlock.number;\r\n    let amount;\r\n    if (['56', '137', '97', '80001'].includes(this.chainId)) {\r\n      amount = 999;\r\n    } else {\r\n      amount = 4999;\r\n    }\r\n    if (fromBlock + amount > to) {\r\n      amount = to - fromBlock;\r\n    }\r\n    while (fromBlock <= to) {\r\n      //console.log('tick')\r\n      let es = await this.contract.getPastEvents(eventName, {\r\n        filter: filter,\r\n        fromBlock,\r\n        toBlock: fromBlock + amount,\r\n      });\r\n      for (let e of es) {\r\n        events.push(e);\r\n      }\r\n      fromBlock += amount + 1;\r\n      if (fromBlock + amount > to) {\r\n        amount = to - fromBlock;\r\n      }\r\n    }\r\n    return events;\r\n  }\r\n  async _getTimeStamp(blockNumber) {\r\n    await this._init()\r\n    return await this.web3.eth.getBlock(blockNumber);\r\n  }\r\n  _calculateFee(volume, price, multiplier, feeRatio) {\r\n    return bg(volume)\r\n      .abs()\r\n      .times(price)\r\n      .times(multiplier)\r\n      .times(feeRatio)\r\n      .toString();\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { deriToNatural, bg } from '../../shared/utils';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class PTokenContract extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n    //this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async getPositionInfo(accountAddress) {\r\n    let result = {};\r\n    try {\r\n      const res = await this._call('getPosition(address)', [accountAddress]);\r\n      //console.log(\"getPositionInfo() raw:\", res)\r\n      result = {\r\n        volume: deriToNatural(res[0]),\r\n        cost: deriToNatural(res[1]),\r\n        lastCumuFundingRate: deriToNatural(res[2]),\r\n        margin: deriToNatural(res[3]),\r\n        lastUpdateTimestamp: bg(res[4]),\r\n      };\r\n    } catch (err) {\r\n      result = {\r\n        volume: bg(0),\r\n        cost: bg(0),\r\n        lastCumuFundingRate: bg(0),\r\n        margin: bg(0),\r\n        lastUpdateTimestamp: bg(0),\r\n      };\r\n      //console.log(`getPositionInfo: ${err}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { deriToNatural } from '../../shared/utils';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class LTokenContract extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n    //this.poolAddress = poolAddress;\r\n    // this.contract = new this.web3.eth.Contract(\r\n    //   CONTRACT_ABI,\r\n    //   this.contractAddress\r\n    // );\r\n  }\r\n\r\n  async balance(accountAddress) {\r\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\r\n    //console.log(\"> lToken balance\", res.toString())\r\n    return res;\r\n  }\r\n\r\n  async balanceOf(accountAddress) {\r\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\r\n    //console.log(\"> lToken balance\", res.toString())\r\n    return res;\r\n  }\r\n\r\n  async totalSupply() {\r\n    const res = deriToNatural(await this._call('totalSupply'));\r\n    //console.log(\"> lToken totalSupply\", res.toString())\r\n    return res;\r\n  }\r\n}\r\n","import { PerpetualPool } from './contract/perpetual_pool';\r\n//import { BTokenContract } from './contract/bToken';\r\nimport { PTokenContract } from './contract/p_token';\r\nimport { LTokenContract } from './contract/l_token';\r\n\r\nexport const perpetualPoolFactory = (() => {\r\n  const perpetualPoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\r\n      return perpetualPoolInstanceMap[key];\r\n    }\r\n    const perpetualPool = new PerpetualPool(\r\n      chainId,\r\n      contractAddress,\r\n    );\r\n    // console.log(\"new PerpetualPoolContract\");\r\n    perpetualPoolInstanceMap[key] = perpetualPool;\r\n    return perpetualPool;\r\n  };\r\n})();\r\n\r\nexport const pTokenFactory = (function () {\r\n  const pTokenInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\r\n      return pTokenInstanceMap[key];\r\n    }\r\n    const pToken = new PTokenContract(\r\n      chainId,\r\n      contractAddress,\r\n    );\r\n    // console.log(\"new PTokenContract\")\r\n    pTokenInstanceMap[key] = pToken;\r\n    return pToken;\r\n  };\r\n})();\r\n\r\nexport const lTokenFactory = (function () {\r\n  const lTokenInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\r\n      return lTokenInstanceMap[key];\r\n    }\r\n    const lToken = new LTokenContract(\r\n      chainId,\r\n      contractAddress,\r\n    );\r\n    lTokenInstanceMap[key] = lToken;\r\n    return lToken;\r\n  };\r\n})();\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from './contract_base'\r\nimport { deleteIndexedKey } from '../utils'\r\nimport { TERC20Abi } from './abis'\r\n\r\nexport class TERC20 extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, TERC20Abi)\r\n  }\r\n\r\n  // query\r\n  async allowance(owner, spender) {\r\n    const res = await this._call('allowance', [owner, spender])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async balanceOf(account) {\r\n    const res = await this._call('balanceOf', [account])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async decimals() {\r\n  //    const res = await this._call('decimals', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async name() {\r\n  //    const res = await this._call('name', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  async approve(accountAddress, spender, amount) {\r\n    return await this._transact('approve', [spender, amount], accountAddress)\r\n  }\r\n  // only for testnet\r\n  async mint(accountAddress) {\r\n    return await this._transact('mint', [], accountAddress)\r\n  }\r\n  //  async transfer(accountAddress, to, amount) {\r\n  //    return await this._transact('transfer', [to, amount], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, amount) {\r\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\r\n  //  }\r\n\r\n}","import { factory } from '../../utils/factory';\r\nimport { BToken } from '../../contract/b_token';\r\nimport { TERC20 } from '../../contract/TERC20';\r\n\r\nexport const bTokenFactory = factory(BToken);\r\nexport const TERC20Factory = factory(TERC20)","import { deriToNatural, bg } from '../../utils';\r\nimport { MAX_UINT256 } from '../../config';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DeriContract extends ContractBase {\r\n  constructor(chainId, contractAddress ) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n    //this.poolAddress = poolAddress;\r\n  }\r\n\r\n  async isUnlocked(accountAddress, poolAddress) {\r\n    let allowance = await this._call('allowance', [\r\n      accountAddress,\r\n      poolAddress,\r\n    ]);\r\n    return deriToNatural(allowance).gt(0);\r\n  }\r\n  async unlock(accountAddress, poolAddress) {\r\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\r\n    return await this._transact(\r\n      'approve',\r\n      [poolAddress, MAX_UINT256],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async decimals() {\r\n    return await this._call('decimals');\r\n  }\r\n\r\n  async _balanceOf(address) {\r\n    return await this._call('balanceOf', [address]);\r\n  }\r\n\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n}\r\n","import { numberToHex } from '../../utils'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"\",\"deployedBytecode\":\"\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\r\n/* eslint-enable */\r\n\r\nexport class MiningVaultPool extends ContractBase {\r\n  constructor(chainId, contractAddress ) {\r\n    super(chainId, contractAddress, CONTRACT_ABI['abi']);\r\n  }\r\n  async mintDToken(accountAddress, ...args) {\r\n    await this._init()\r\n    const gas = await this._estimatedGas(\r\n      'claim',\r\n      [accountAddress, ...args],\r\n      accountAddress\r\n    );\r\n    //console.log(gas);\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods['claim'](\r\n          accountAddress,\r\n          ...args\r\n        ).encodeABI(),\r\n      },\r\n    ];\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n}\r\n","import { numberToHex } from '../../utils'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class MiningVaultRouter extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async mint(accountAddress, ...args) {\r\n    await this._init()\r\n    //console.log(accountAddress, args)\r\n    const gas = await this._estimatedGas(\r\n      'claim',\r\n      [accountAddress, ...args],\r\n      accountAddress\r\n    );\r\n    //console.log(gas);\r\n    let txRaw = [\r\n      {\r\n        from: accountAddress,\r\n        to: this.contractAddress,\r\n        gas: numberToHex(gas),\r\n        value: numberToHex('0'),\r\n        data: this.contract.methods['claim'](\r\n          accountAddress,\r\n          ...args\r\n        ).encodeABI(),\r\n      },\r\n    ];\r\n    //console.log('txRaw', txRaw)\r\n    let tx = await window.ethereum.request({\r\n      method: 'eth_sendTransaction',\r\n      params: txRaw,\r\n    });\r\n    return await new Promise(this._getTransactionReceipt(tx));\r\n  }\r\n}\r\n","import { getDeriConfig } from '../../config';\r\nimport { naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class WormholeContract extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI );\r\n  }\r\n  async freeze(accountAddress, amount, toChainId) {\r\n    const { wormholeAddress: toWormholeAddress } = getDeriConfig(\r\n      toChainId\r\n    );\r\n    return this._transact(\r\n      'freeze',\r\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\r\n      accountAddress\r\n    );\r\n  }\r\n\r\n  async mintDeri(\r\n    accountAddress,\r\n    amount,\r\n    fromChainId,\r\n    fromWormhole,\r\n    fromNonce,\r\n    v,\r\n    r,\r\n    s\r\n  ) {\r\n    return this._transact(\r\n      'claim',\r\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\r\n      accountAddress\r\n    );\r\n  }\r\n}\r\n","import { DeriContract } from \"../../contract/deri/deri\";\r\nimport { MiningVaultPool } from \"../../contract/deri/mining_vault_pool\";\r\nimport { MiningVaultRouter } from \"../../contract/deri/mining_vault_router\";\r\nimport { WormholeContract } from \"../../contract/deri/wormhole\";\r\nimport { factory } from \"../../utils\"\r\n\r\n\r\nexport const deriFactory = factory(DeriContract)\r\n\r\nexport const wormholeFactory = factory(WormholeContract)\r\n\r\nexport const miningVaultRouterFactory = factory(MiningVaultRouter)\r\n\r\nexport const miningVaultPoolFactory = factory(MiningVaultPool)","import { deriToNatural, naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class SlpPool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [152, naturalToDeri(amount)];\r\n    return await this._transact('deposit', args, accountAddress);\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [152, naturalToDeri(amount)];\r\n    return await this._transact('withdraw', args, accountAddress);\r\n  }\r\n  async getLiquidity(accountAddress) {\r\n    const res = await this._call('userInfo', [152, accountAddress]);\r\n    if (res && res.amount) {\r\n      return deriToNatural(res.amount);\r\n    } else {\r\n      console.log('the amount is not exist ');\r\n      return '0';\r\n    }\r\n  }\r\n}\r\n","import { deriToNatural, naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class ClpPool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [naturalToDeri(amount)];\r\n    return await this._transact('addLiquidity', args, accountAddress);\r\n  }\r\n\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [naturalToDeri(amount)];\r\n    return await this._transact('removeLiquidity', args, accountAddress);\r\n  }\r\n\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\r\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\r\n    };\r\n  }\r\n\r\n  async getStateValues() {\r\n    const res = await this._call('getStateValues');\r\n    return {\r\n      liquidity: deriToNatural(res),\r\n    };\r\n  }\r\n\r\n  async getLiquidity() {\r\n    const res = await this._call('getStateValues');\r\n    if (res && res.liquidity) {\r\n      return deriToNatural(res.liquidity);\r\n    }\r\n    throw new Error(\r\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\r\n    );\r\n  }\r\n}\r\n","import { deriToNatural, naturalToDeri } from '../../utils';\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class Clp2Pool extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, CONTRACT_ABI);\r\n  }\r\n  async addLiquidity(accountAddress, amount) {\r\n    const args = [391, naturalToDeri(amount)];\r\n    return await this._transact('deposit', args, accountAddress);\r\n  }\r\n  async removeLiquidity(accountAddress, amount) {\r\n    const args = [391, naturalToDeri(amount)];\r\n    return await this._transact('withdraw', args, accountAddress);\r\n  }\r\n  async getLiquidity(accountAddress) {\r\n    //console.log('hit clp2')\r\n    const res = await this._call('userInfo', [391, accountAddress]);\r\n    if (res && res.amount) {\r\n      return deriToNatural(res.amount);\r\n    } else {\r\n      console.log('the amount is not exist ');\r\n      return '0';\r\n    }\r\n  }\r\n}","import { SlpPool } from '../../contract/lp_pool/slp_pool'\r\nimport { ClpPool } from '../../contract/lp_pool/clp_pool'\r\nimport { Clp2Pool } from '../../contract/lp_pool/clp2_pool'\r\n\r\nexport const slpPoolFactory = (function () {\r\n  const slpPoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\r\n      return slpPoolInstanceMap[key];\r\n    }\r\n    const slpPool = new SlpPool(chainId, contractAddress);\r\n    slpPoolInstanceMap[key] = slpPool;\r\n    return slpPool;\r\n  };\r\n})();\r\n\r\nexport const clpPoolFactory = (function () {\r\n  const clpPoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\r\n      return clpPoolInstanceMap[key];\r\n    }\r\n    const clpPool = new ClpPool(chainId, contractAddress);\r\n    clpPoolInstanceMap[key] = clpPool;\r\n    return clpPool;\r\n  };\r\n})();\r\n\r\nexport const clp2PoolFactory = (function () {\r\n  const clp2PoolInstanceMap = {};\r\n  return (chainId, contractAddress) => {\r\n    let key = `${chainId}.${contractAddress}`;\r\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\r\n      return clp2PoolInstanceMap[key];\r\n    }\r\n    const clp2Pool = new Clp2Pool(chainId, contractAddress);\r\n    clp2PoolInstanceMap[key] = clp2Pool;\r\n    return clp2Pool;\r\n  };\r\n})();\r\n\r\n// export const lpPoolFactory = (function () {\r\n//   const lpPoolInstanceMap = {};\r\n//   return (chainId, contractAddress, isProvider = false) => {\r\n//     let key;\r\n//     if (isProvider) {\r\n//       key = `${chainId}.${contractAddress}.isProvider`;\r\n//     } else {\r\n//       key = `${chainId}.${contractAddress}`;\r\n//     }\r\n//     if (Object.keys(lpPoolInstanceMap).includes(key)) {\r\n//       return lpPoolInstanceMap[key];\r\n//     } else {\r\n//       let lpPool;\r\n//       const { type } = getLpContractAddress(chainId, contractAddress);\r\n//       console.log(`lp type: ${type}`);\r\n//       if (type === 'slp') {\r\n//         lpPool = new SlpPool(chainId, contractAddress, isProvider);\r\n//       } else if (type === 'clp') {\r\n//         lpPool = new ClpPool(chainId, contractAddress, isProvider);\r\n//       }\r\n//       lpPoolInstanceMap[key] = lpPool;\r\n//       return lpPool;\r\n//     }\r\n//   };\r\n// })();","import { factory } from '../../utils/factory';\r\nimport { BrokerManager } from '../../contract/activity/broker_manager';\r\nimport { PTokenAirdrop } from '../../contract/activity/ptoken_airdrop';\r\n\r\nexport const brokerManagerFactory = factory(BrokerManager);\r\nexport const pTokenAirdropFactory = factory(PTokenAirdrop);\r\n","import { bg, getDailyBlockNumber } from '../../shared/utils';\r\n\r\nexport const calculateLiquidityUsed = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  poolMarginRatio\r\n) => {\r\n  return bg(\r\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\r\n  ).abs();\r\n}\r\n\r\nexport const calculateFundingRate = (\r\n  tradersNetVolume,\r\n  price,\r\n  multiplier,\r\n  liquidity,\r\n  fundingRateCoefficient\r\n) => {\r\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\r\n  fundingRateCoefficient;\r\n}\r\n\r\nexport const processFundingRate = (chainId, fundingRate) => {\r\n  const annualBlockCount = getDailyBlockNumber(chainId);\r\n  return bg(fundingRate).times(annualBlockCount);\r\n};\r\n","import { bg, max, min } from '../../shared/utils';\r\n\r\nexport * from './fundingRate';\r\n\r\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\r\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\r\nexport const calculateMaxRemovableShares = (\r\n  lTokenBalance,\r\n  lTokenTotalSupply,\r\n  liquidity,\r\n  tradersNetVolume,\r\n  tradersNetCost,\r\n  multiplier,\r\n  minPoolMarginRatio,\r\n  price\r\n) => {\r\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\r\n  const value = bg(tradersNetVolume).times(price).times(multiplier);\r\n  const removable = bg(liquidity)\r\n    .plus(tradersNetCost)\r\n    .minus(value)\r\n    .minus(value.abs().times(minPoolMarginRatio));\r\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\r\n  return shares;\r\n};\r\n\r\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\r\n  bg(volume).eq(0) ? bg(0) : cost.div(volume).div(multiplier);\r\n\r\nexport const calculateMarginHeld = (\r\n  price,\r\n  volume,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  return bg(volume).abs().times(price).times(multiplier).times(minInitialMarginRatio)\r\n};\r\n\r\nexport const calculatePnl = (price, volume, multiplier, cost) => {\r\n  return bg(volume).times(price).times(multiplier).minus(cost);\r\n}\r\n\r\nexport const calculateMaxWithdrawMargin = (\r\n  price,\r\n  volume,\r\n  margin,\r\n  cost,\r\n  multiplier,\r\n  minInitialMarginRatio\r\n) => {\r\n  if (volume.eq(0)) {\r\n    return margin;\r\n  }\r\n  const held = calculateMarginHeld(\r\n    price,\r\n    volume,\r\n    multiplier,\r\n    minInitialMarginRatio\r\n  );\r\n  const pnl = calculatePnl(price, volume, multiplier, cost);\r\n  const withdrawable = max(bg(margin).plus(pnl).minus(held.times(1.02)), bg(0));\r\n  return withdrawable;\r\n};\r\n\r\nexport const calculateLiquidationPrice = (\r\n  volume,\r\n  margin,\r\n  cost,\r\n  multiplier,\r\n  minMaintenanceMarginRatio\r\n) => {\r\n  const tmp = bg(cost).minus(margin).div(volume).div(multiplier);\r\n  let res = bg(volume).gt(0)\r\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\r\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\r\n  res = max(res, bg(0));\r\n  return res;\r\n};\r\n\r\nexport const isOrderValid = (\r\n  price,\r\n  margin,\r\n  volume,\r\n  liquidity,\r\n  tradersNetVolume,\r\n  multiplier,\r\n  minPoolMarginRatio,\r\n  minInitialMarginRatio,\r\n  newVolume,\r\n  amount\r\n) => {\r\n  const minMargin = bg(volume)\r\n    .plus(newVolume)\r\n    .abs()\r\n    .times(price)\r\n    .times(multiplier)\r\n    .times(minInitialMarginRatio);\r\n  const poolMaxVolume = bg(liquidity)\r\n    .div(minPoolMarginRatio)\r\n    .div(price)\r\n    .div(multiplier);\r\n  if (bg(margin).plus(amount).gte(minMargin)) {\r\n    if (\r\n      bg(newVolume).lte(poolMaxVolume.minus(tradersNetVolume)) &&\r\n      bg(newVolume).gte(poolMaxVolume.negated().minus(tradersNetVolume))\r\n    ) {\r\n      return { success: true };\r\n    }\r\n    return { success: false, message: 'Pool insufficient liquidity' };\r\n  }\r\n  return { success: false, message: 'Trader insufficient margin' };\r\n};\r\n","// export const DERI_ENV=\"dev\"\r\nexport const DeriEnv = (() => {\r\n  let _deriEnv = 'dev';\r\n  return {\r\n    get: () => _deriEnv,\r\n    set: (value) => {\r\n      if (value === 'dev' || value === 'prod' || value === 'testnet') {\r\n        _deriEnv = value;\r\n      } else {\r\n        throw new Error(\"please use 'dev', 'testnet' or 'prod' for DeriEnv\");\r\n      }\r\n    },\r\n  };\r\n})();\r\n","import { makeAutoObservable, observable, action, computed } from \"mobx\";\r\n\r\n\r\nclass Type {\r\n  current = null;\r\n  \r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      current:observable,\r\n      setCurrent : action,\r\n      isOption : computed,\r\n      isFuture : computed\r\n    })\r\n  }\r\n\r\n  setCurrent(type){\r\n    this.current = type;\r\n  }\r\n\r\n  get isOption() {\r\n    return this.current === 'option'\r\n  }\r\n\r\n  get isFuture() {\r\n    return this.current === 'future'\r\n  }\r\n}\r\nexport default new Type()","import { makeAutoObservable, observable, action, computed } from \"mobx\";\r\nimport { storeVersion, restoreVersion } from \"../utils/utils\";\r\n\r\nclass Version {\r\n  current = 'v2';\r\n\r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      current : observable,\r\n      setCurrent : action,\r\n      isV1 : computed,\r\n      isV2 : computed,\r\n      isV2Lite : computed,\r\n      zone : computed\r\n    })\r\n  }\r\n\r\n\r\n  setCurrent(version){\r\n    this.current = version;\r\n  }\r\n\r\n  switch(){\r\n    if(this.current === 'v1'){\r\n      this.setCurrent('v2')\r\n    } else {\r\n      this.setCurrent('v1')\r\n    }\r\n  }\r\n\r\n  get isV1() {\r\n    return this.current === 'v1'\r\n  }\r\n\r\n  get isV2(){\r\n    return this.current === 'v2'\r\n  }\r\n\r\n  get isV2Lite (){\r\n    return this.current === 'v2_lite'\r\n  }\r\n\r\n  get isOpen(){\r\n    return this.current === 'v2_lite_open'\r\n  }\r\n\r\n  get zone(){\r\n    if(this.isV2){\r\n      return 'MAIN'\r\n    } else if(this.isV2Lite) {\r\n      return 'INNO'\r\n    } else {\r\n      return 'OPEN'\r\n    }\r\n  }\r\n}\r\nexport default new Version()","import { getChainIds } from '../config/chain';\r\nimport Web3 from 'web3';\r\n\r\n// validate\r\nexport const normalizeChainId = (chainId) => {\r\n  const chainIds = getChainIds()\r\n  let res = chainId ? chainId.toString() : chainId;\r\n  if (chainId && chainIds.includes(res)) {\r\n    return res;\r\n  } else {\r\n    throw new Error(`invalid chainId: ${chainId}`);\r\n  }\r\n};\r\n\r\nexport const normalizeAddress = (address) => {\r\n  if (typeof address === 'string' && address.startsWith('0x') && address.length == 42 ) {\r\n    return Web3.utils.toChecksumAddress(address);\r\n  } else {\r\n    throw new Error(`invalid address: ${address}`);\r\n  }\r\n};\r\n\r\nexport const validateArgs = (...args) =>\r\n  args.every((i) => !isNaN(parseFloat(i)));\r\n\r\nexport const validateObjectKeyExist = (keyList, val, valName) => {\r\n  const keys = Object.keys(val);\r\n  keyList.forEach((prop) => {\r\n    if (!keys.includes(prop)) {\r\n      throw new Error(\r\n        `validateConfig(): property ${prop} is not exist in the ${valName} config.`\r\n      );\r\n    }\r\n  });\r\n};\r\nexport const validateIsArray = (val, valName) => {\r\n  if (!Array.isArray(val)) {\r\n    throw new Error(\r\n      `validateConfig(): property ${valName} is an array in the config.`\r\n    );\r\n  }\r\n};\r\n","import Web3 from 'web3';\r\nimport BigNumber from 'bignumber.js';\r\n\r\n// lang\r\nexport const isObject = (value) => typeof value === 'object' && value !== null\r\nexport const isArray = (value) => typeof value === 'object' && Array.isArray(value)\r\nexport const isFunction = (value) => typeof value === 'function'\r\n\r\n// == bg\r\nBigNumber.config({\r\n  DECIMAL_PLACES: 18,\r\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\r\n  EXPONENTIAL_AT: 256,\r\n});\r\n\r\nexport const bg = (value, base = 0) => {\r\n  if (base === 0) {\r\n    return BigNumber(value);\r\n  }\r\n  if (base > 0) {\r\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\r\n  }\r\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\r\n};\r\n\r\nexport const max = (value1, value2) => {\r\n  if (value1.gte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\nexport const min = (value1, value2) => {\r\n  if (value1.lte(value2)) {\r\n    return value1;\r\n  }\r\n  return value2;\r\n};\r\n\r\nexport const fromWei = (value) => bg(value, -18).toString()\r\n\r\nexport const toWei = (value) => bg(value, 18).toFixed(0).toString()\r\n\r\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\r\n\r\nexport const toHex = (value) => Web3.utils.toHex(value);\r\n\r\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\r\n\r\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\r\n\r\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\r\n\r\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\r\n\r\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\r\n\r\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\r\n\r\n\r\nexport const deriToNatural = (value) => bg(value, -18);\r\n\r\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\r\n\r\nexport const deriToString = (value) => bg(value).toString();\r\n\r\nexport const deriToBool = (value) => {\r\n  if (bg(value).toNumber() === 1) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const naturalWithPercentage = (value) =>\r\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\r\n\r\nexport const formatBN = (bigNumber) =>\r\n  bigNumber.toFormat().replaceAll(',', '').toString();\r\n\r\n// == convert\r\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);\r\n\r\n\r\n// == utils\r\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined'\r\nexport const isNodejs = () => typeof process !== 'undefined' && process.versions != null && process.versions.node != null\r\nexport const isJsDom = () => typeof window !== 'undefined' && navigator.userAgent.includes('jsdom')\r\n\r\n// == array set\r\nexport const isEqualSet = (set1, set2) => {\r\n  if (set1.size !== set2.size) return false;\r\n  for (let item of set1) {\r\n    if (!set2.has(item)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n\r\n\r\n// == contract gen\r\n// export const deleteIndexedKey = (obj) => {\r\n//   if (isObject(obj) && Object.keys(obj).length > 0) {\r\n//     const keys = Object.keys(obj);\r\n//     const intKeyCount = keys.reduce(\r\n//       (acc, k) => (intRegex.test(k) ? acc + 1 : acc),\r\n//       0\r\n//     );\r\n//     if (intKeyCount * 2 === keys.length) {\r\n//       let newObj = {};\r\n//       Object.keys(obj).forEach((k) => {\r\n//         if (!intRegex.test(k)) {\r\n//           newObj[k] = obj[k];\r\n//         }\r\n//       });\r\n//       return newObj;\r\n//     }\r\n//     return obj;\r\n//   } else {\r\n//     return obj;\r\n//   }\r\n// };\r\n\r\nexport const fromWeiForObject = (obj, keyList = []) => {\r\n  return Object.keys(obj).reduce((acc, i) => {\r\n    if (keyList.includes(i)) {\r\n      acc[i] = fromWei(obj[i]);\r\n    } else {\r\n      acc[i] = obj[i];\r\n    }\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\nexport const toNumberForObject = (obj, keyList = []) => {\r\n  return Object.keys(obj).reduce((acc, i) => {\r\n    if (keyList.includes(i)) {\r\n      acc[i] = bg(obj[i]).toNumber();\r\n    } else {\r\n      acc[i] = obj[i];\r\n    }\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\n\r\n// for frontend to display symbols\r\nexport const sortOptionSymbols = (symbolList) => {\r\n  const symbolArr = symbolList\r\n    .map((s) => s.symbol)\r\n    .map((s) => {\r\n      return s.split('-');\r\n    });\r\n  const unique = (value, index, self) => self.indexOf(value) === index\r\n  const to2 = (i) => i < 10 ? `0${i}` : i\r\n  const symbol = symbolArr.map((s) => s[0]).filter(unique)\r\n  const direction = symbolArr.map((s) => s[2]).filter(unique)\r\n  const price = symbolArr\r\n    .map((s) => s[1])\r\n    .filter(unique)\r\n    .sort((a, b) => parseInt(b) - parseInt(a));\r\n  return symbolList.map((i, index) => {\r\n    const index1 =  symbol.indexOf(symbolArr[index][0]) + 1\r\n    const index2 =  to2(direction.indexOf(symbolArr[index][2]) + 1)\r\n    const index3 =  to2(price.indexOf(symbolArr[index][1]) + 1)\r\n    i.index = parseInt(`${index1}${index2}${index3}`)\r\n    return i\r\n  }).sort((a, b) => a.index - b.index).map((i) => {\r\n    delete i.index\r\n    return i\r\n  })\r\n}\r\n\r\n","import { DeriEnv } from '../config'\r\nimport { normalizeChainId } from '../utils/validate'\r\n\r\nexport const getPoolV1ConfigList = (env = 'dev') => {\r\n  // production environment\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        pool: '0xAf081e1426f64e74117aD5F695D2A80482679DE5',\r\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\r\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '7906919',\r\n        bTokenSymbol: 'BUSD',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '56',\r\n        type: 'perpetual',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool: '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\r\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\r\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '6753399',\r\n        bTokenSymbol: 'BUSD',\r\n        symbol: 'COIN',\r\n        unit: 'COIN',\r\n        chainId: '56',\r\n        type: 'perpetual',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool: '0xD3f5E6D1a25dA1E64EDf7cb571f9fAD17FEb623c',\r\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\r\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        initialBlock: '8005906',\r\n        bTokenSymbol: 'DERI',\r\n        symbol: 'iMEME',\r\n        unit: 'iMEME',\r\n        chainId: '56',\r\n        type: 'perpetual',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool: '0x23779AAc1e74a65F27B4840A8E41F767Ce993118',\r\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\r\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\r\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        initialBlock: '12548746',\r\n        bTokenSymbol: 'USDT',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '1',\r\n        type: 'perpetual',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool: '0x96a1F15676746b9339DBc185F277618359Ac6346',\r\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\r\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\r\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        initialBlock: '12548827',\r\n        bTokenSymbol: 'BAC',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '1',\r\n        type: 'perpetual',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n        retired: true,\r\n      },\r\n      {\r\n        pool: '0xBA7e183042c8796E26A5a2375927DE7B1AB99d97',\r\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\r\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\r\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        initialBlock: '5220431',\r\n        bTokenSymbol: 'HUSD',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '128',\r\n        type: 'perpetual',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n        retired: true,\r\n      },\r\n    ];\r\n  } else if (env === 'dev') {\r\n    return [\r\n      {\r\n        pool: '0x372b640A00a0A6B73381e9363A39644a712cCc37',\r\n        bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\r\n        pToken: '0xB9113758D771750e9E8ECb359A19689eC89AC1a5',\r\n        lToken: '0xC727a10Be4740441BE74960296097aF39D701980',\r\n        initialBlock: '9378545',\r\n        bTokenSymbol: 'BUSD',\r\n        symbol: 'BTCUSD',\r\n        unit: 'BTC',\r\n        chainId: '97',\r\n        type: 'perpetual',\r\n        version: 'v1',\r\n        versionId: 'v1',\r\n      },\r\n    ];\r\n  } else if (env === 'testnet') {\r\n    return [];\r\n  }\r\n};\r\n\r\n// export const getSlpContractAddressConfig = (env = 'dev') => {\r\n//   if (env === 'prod') {\r\n//     return [\r\n//       {\r\n//         pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\r\n//         bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n//         pToken: '0x0000000000000000000000000000000000000000',\r\n//         lToken: '0x0000000000000000000000000000000000000000',\r\n//         dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n//         MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n//         chainId: '1',\r\n//         bTokenSymbol: 'DERI-USDT SLP',\r\n//         symbol: '--',\r\n//       },\r\n//     ];\r\n//   }\r\n//   console.log('getSlpContractAddressConfig(): no config for dev environment');\r\n//   return [];\r\n// };\r\n\r\n// export const getClpContractAddressConfig = (env = 'dev') => {\r\n//   if (env === 'prod') {\r\n//     return [\r\n//       {\r\n//         pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\r\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n//         pToken: '0x0000000000000000000000000000000000000000',\r\n//         lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\r\n//         dToken: '0x0000000000000000000000000000000000000000',\r\n//         MiningVault: '0x0000000000000000000000000000000000000000',\r\n//         initialBlock: '6894880',\r\n//         chainId: '56',\r\n//         bTokenSymbol: 'CAKE-LP',\r\n//         symbol: '--',\r\n//         retired: true,\r\n//       },\r\n//     ];\r\n//   } else {\r\n//     return [];\r\n//   }\r\n// };\r\n// export const getClp2ContractAddressConfig = (env = 'dev') => {\r\n//   if (env === 'prod') {\r\n//     return [\r\n//       {\r\n//         pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n//         pToken: '0x0000000000000000000000000000000000000000',\r\n//         lToken: '0x0000000000000000000000000000000000000000',\r\n//         dToken: '0x0000000000000000000000000000000000000000',\r\n//         MiningVault: '0x0000000000000000000000000000000000000000',\r\n//         initialBlock: '699498',\r\n//         chainId: '56',\r\n//         bTokenSymbol: 'CAKE-LP SYRUP',\r\n//         symbol: '--',\r\n//       },\r\n//     ];\r\n//   } else {\r\n//     return [];\r\n//   }\r\n// };\r\n\r\nexport const getLpConfigList = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        pool:   '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\r\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        bTokenSymbol: 'DERI-USDT SLP',\r\n        symbol: '--',\r\n        type: 'slp',\r\n        isLp: true,\r\n      },\r\n      {\r\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\r\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\r\n        dToken: '0x0000000000000000000000000000000000000000',\r\n        MiningVault: '0x0000000000000000000000000000000000000000',\r\n        initialBlock: '6894880',\r\n        chainId: '56',\r\n        bTokenSymbol: 'CAKE-LP',\r\n        symbol: '--',\r\n        type: 'clp',\r\n        retired: true,\r\n        isLp: true,\r\n      },\r\n      {\r\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0000000000000000000000000000000000000000',\r\n        dToken: '0x0000000000000000000000000000000000000000',\r\n        MiningVault: '0x0000000000000000000000000000000000000000',\r\n        initialBlock: '699498',\r\n        chainId: '56',\r\n        bTokenSymbol: 'CAKE-LP SYRUP',\r\n        symbol: '--',\r\n        type: 'clp2',\r\n        isLp: true,\r\n      },\r\n    ];\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getMiningVaultRouterConfig = (chainId) => {\r\n  const configs = [\r\n    {\r\n      MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\r\n      chainId: '56',\r\n    },\r\n  ];\r\n  const filteredConfig = configs.filter((i) => i.chainId === chainId);\r\n  if (filteredConfig.length > 0) {\r\n    return filteredConfig[0].MiningVaultRouter;\r\n  } else {\r\n    throw new Error(\r\n      `getMiningVaultRouterAddressConfig: no address for chainId ${chainId}`\r\n    );\r\n  }\r\n};\r\n\r\nexport const getDeriConfigList= (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '1',\r\n      },\r\n      {\r\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '56',\r\n      },\r\n      {\r\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\r\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\r\n        bTokenSymbol: 'DERI',\r\n        chainId: '128',\r\n      },\r\n    ];\r\n  }\r\n  return [\r\n    {\r\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\r\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '3',\r\n    },\r\n    {\r\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\r\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '97',\r\n    },\r\n    {\r\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\r\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\r\n      bTokenSymbol: 'DERI',\r\n      chainId: '256',\r\n    },\r\n  ];\r\n};\r\n\r\nexport const getPreminingConfigList = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    return [\r\n      {\r\n        bToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xe91cb8ba06028f38e231F7099e9B97CEDd2f2736',\r\n        pool: '0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/0/0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\r\n        bTokenSymbol: 'WBNB',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x8518054fa6b7E0d4834bfD152c9BA5BDB856FD2B',\r\n        pool: '0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/1/0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\r\n        bTokenSymbol: 'CAKE',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0xa184088a740c695E156F91f5cC086a06bb78b827',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x167704539C9acAcF6f0C2D7AAeB4413339F86AaA',\r\n        pool: '0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\r\n        chainId: '56',\r\n        staking: true,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/0/2/0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\r\n        bTokenSymbol: 'AUTO',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\r\n        pool: '0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        chainId: '128',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/1/0/0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\r\n        bTokenSymbol: 'WHT',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\r\n        pool: '0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\r\n        chainId: '128',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/1/1/0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\r\n        bTokenSymbol: 'MDX',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x3B50881F5646E809ef85Bb0016af3b2Ee5313d46',\r\n        pool: '0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/0/0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\r\n        bTokenSymbol: 'SUSHI',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0x0069b4Fb48e5B8E9CB6960f4c2468b625ACfb465',\r\n        pool: '0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: false,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/1/0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\r\n        bTokenSymbol: 'AAVE',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n      {\r\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\r\n        pToken: '0x0000000000000000000000000000000000000000',\r\n        lToken: '0xFFCfB31b6500E7e420CFE5D0df710DdF928F55FD',\r\n        pool: '0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\r\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\r\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\r\n        chainId: '1',\r\n        staking: true,\r\n        url:\r\n          'https://premining.deri.finance/#/premining/2/2/0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\r\n        bTokenSymbol: 'DERI-USDT SLP',\r\n        isInTvlRace: false,\r\n        retired: true,\r\n        premining: true,\r\n      },\r\n    ];\r\n  } else {\r\n    return []\r\n  }\r\n};\r\n\r\n\r\n// export const getSlpConfig = (chainId, poolAddress) => {\r\n//   chainId = normalizeChainId(chainId);\r\n//   const pools = getLpConfigList(DeriEnv.get()).filter(\r\n//     (c) => c.chainId === chainId\r\n//   );\r\n//   const pool = pools.filter((p) => p.pool === poolAddress);\r\n//   if (pool.length > 0) {\r\n//     return {\r\n//       poolAddress: pool[0].pool,\r\n//       bTokenAddress: pool[0].bToken,\r\n//       pTokenAddress: pool[0].pToken,\r\n//       lTokenAddress: pool[0].lToken,\r\n//       dTokenAdress: pool[0].dToken,\r\n//       MinningVaultAddress: pool[0].MiningVault,\r\n//     };\r\n//   }\r\n//   console.log(\r\n//     `getSlpConfig(): contract address is not found: ${chainId} ${poolAddress}`\r\n//   );\r\n//   return {};\r\n// };\r\n\r\n// export const getClp2Config= (chainId, poolAddress) => {\r\n//   chainId = normalizeChainId(chainId);\r\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\r\n//     (c) => c.chainId === chainId\r\n//   );\r\n//   const pool = pools.filter((p) => p.pool === poolAddress);\r\n//   if (pool.length > 0) {\r\n//     return {\r\n//       poolAddress: pool[0].pool,\r\n//       bTokenAddress: pool[0].bToken,\r\n//       pTokenAddress: pool[0].pToken,\r\n//       lTokenAddress: pool[0].lToken,\r\n//       dTokenAdress: pool[0].dToken,\r\n//       MinningVaultAddress: pool[0].MiningVault,\r\n//     };\r\n//   }\r\n//   console.log(\r\n//     `getClp2Config(): contract address is not found: ${chainId} ${poolAddress}`\r\n//   );\r\n//   return {};\r\n// };\r\n\r\n// export const getClpConfig= (chainId, poolAddress) => {\r\n//   chainId = normalizeChainId(chainId);\r\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\r\n//     (c) => c.chainId === chainId\r\n//   );\r\n//   const pool = pools.filter((p) => p.pool === poolAddress);\r\n//   if (pool.length > 0) {\r\n//     return {\r\n//       poolAddress: pool[0].pool,\r\n//       bTokenAddress: pool[0].bToken,\r\n//       lTokenAddress: pool[0].lToken,\r\n//     };\r\n//   }\r\n//   console.log(\r\n//     `getClpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\r\n//   );\r\n//   return {};\r\n// };\r\n\r\nexport const getLpConfig = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getLpConfigList(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      lTokenAddress: pool[0].lToken,\r\n      type: pool[0].type,\r\n    };\r\n  }\r\n  console.log(\r\n    `getLpConfig(): contract address is not found: ${chainId} ${poolAddress}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getDeriConfig= (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pool = getDeriConfigList(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  if (pool.length > 0) {\r\n    return {\r\n      deriAddress: pool[0].Deri,\r\n      wormholeAddress: pool[0].Wormhole,\r\n      bTokenSymbol: pool[0].bTokenSymbol,\r\n    };\r\n  }\r\n  console.log(\r\n    `getDeriConfig(): contract address is not found: ${chainId}`\r\n  );\r\n  return {};\r\n};\r\n\r\nexport const getMiningVaultConfig = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const pools = getPoolV1ConfigList(DeriEnv.get()).filter(\r\n    (c) => c.chainId === chainId\r\n  );\r\n  if (pools.length > 0) {\r\n    if (pools[0].MiningVault) {\r\n      return pools[0].MiningVault;\r\n    }\r\n  }\r\n};\r\n\r\nexport const getPoolV1Config = (chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const env = DeriEnv.get()\r\n  const pools = getPoolV1ConfigList(env)\r\n    .concat(getPreminingConfigList(env))\r\n    .concat(getLpConfigList(env))\r\n    .filter((c) => c.chainId === chainId);\r\n  const pool = pools.filter((p) => p.pool === poolAddress);\r\n  if (pool.length > 0) {\r\n    return {\r\n      poolAddress: pool[0].pool,\r\n      bTokenAddress: pool[0].bToken,\r\n      pTokenAddress: pool[0].pToken,\r\n      lTokenAddress: pool[0].lToken,\r\n      dTokenAdress: pool[0].dToken,\r\n      MinningVaultAddress: pool[0].MiningVault,\r\n      bTokenSymbol: pool[0].bTokenSymbol,\r\n      symbol: pool[0].symbol,\r\n      unit: pool[0].unit,\r\n      initialBlock: pool[0].initialBlock,\r\n    };\r\n  } else {\r\n    throw new Error(\r\n      `getPoolV1Config(): contract address is not found: ${chainId} ${poolAddress}`\r\n    );\r\n  }\r\n}\r\n","\r\n\r\nimport BigNumber from 'bignumber.js'\r\nimport version from '../model/Version';\r\nimport type from '../model/Type';\r\nimport config from '../config.json'\r\n\r\nimport {\r\n  DeriEnv,\r\n  getPoolLiquidity,\r\n  getPoolInfoApy,\r\n  getUserInfoAll,\r\n  getLiquidityInfo\r\n} from '../lib/web3js/indexV2'\r\nimport Type from '../model/Type';\r\nconst versionKey = 'deri-current-version'\r\n\r\n\r\nconst env = DeriEnv.get();\r\nconst { chainInfo } = config[env]\r\n\r\nexport function bg(value, base = 0) {\r\n  if (base === 0) {\r\n    return BigNumber(value);\r\n  } else if (base > 0) {\r\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\r\n  } else {\r\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\r\n  }\r\n}\r\n\r\nexport function deriNatural(value) {\r\n  return bg(value, -18);\r\n}\r\n\r\nexport function formatAddress(address){\r\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\r\n}\r\n\r\nexport function formatBalance(balance){\r\n  return balance && (+balance).toFixed(4)\r\n}\r\n\r\nexport function eqInNumber(str1,str2){\r\n  return (+str1) === (+str2)\r\n}\r\n\r\nexport function isLP(address){\r\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\r\n}\r\nexport function isSushiLP(address){\r\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\r\n}\r\nexport function isCakeLP(address){\r\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\r\n}\r\n\r\nexport function sessionStorageKey(version){\r\n  return `${version}-current-trading-pool`\r\n}\r\n\r\nexport function convertToInternationalCurrencySystem (labelValue) {\r\n  \r\n  // Nine Zeroes for Billions\r\n  return Number.isNaN(labelValue) ? ''\r\n  : Math.abs(Number(labelValue)) >= 1.0e+9\r\n\r\n  ? (Math.abs(Number(labelValue)) / 1.0e+9).toFixed(2) + \"B\"\r\n  // Six Zeroes for Millions \r\n  : Math.abs(Number(labelValue)) >= 1.0e+6\r\n\r\n  ? (Math.abs(Number(labelValue)) / 1.0e+6).toFixed(2) + \"M\"\r\n  // Three Zeroes for Thousands\r\n  : Math.abs(Number(labelValue)) >= 1.0e+3\r\n\r\n  ? (Math.abs(Number(labelValue)) / 1.0e+3).toFixed(2) + \"K\"\r\n\r\n  : Math.abs(Number(labelValue).toFixed(2));\r\n\r\n}\r\n\r\n\r\n// export function storeVersion(version){\r\n//   sessionStorage.setItem(versionKey,version)\r\n// }\r\n\r\n// export function restoreVersion(){\r\n//   return sessionStorage.getItem(versionKey)\r\n// }\r\n\r\nexport function storeConfig(version,config){\r\n  if(config){\r\n    const key = sessionStorageKey(version);\r\n    sessionStorage.setItem(key,JSON.stringify(config))\r\n  }\r\n}\r\n\r\nexport function getConfigFromStore(version){\r\n  return JSON.parse(sessionStorage.getItem(sessionStorageKey(version)))\r\n}\r\n\r\nexport function storeChain(chainInfo){\r\n  sessionStorage.setItem('current-chain',JSON.stringify(chainInfo))\r\n}\r\nexport function restoreChain(){\r\n  return JSON.parse(sessionStorage.getItem('current-chain')) || {code : ''};\r\n}\r\n\r\nexport function storeLocale(locale){\r\n  sessionStorage.setItem('current-locale',locale)\r\n}\r\n\r\nexport function restoreLocale(){\r\n  return sessionStorage.getItem('current-locale')\r\n}\r\n\r\nexport function addParam(param,value,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  if(url.searchParams.has(param)){\r\n    url.searchParams.set(param,value);\r\n  } else {\r\n    url.searchParams.append(param,value);\r\n  }\r\n  return  url.toString();\r\n}\r\n\r\nexport function hasParam(param,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  return url.searchParams.has(param);\r\n}\r\n\r\nexport function getParam(param,urlString = window.location.href){\r\n  const url = new URL(urlString);\r\n  return url.searchParams.get(param);\r\n}\r\n\r\nexport function getFormatSymbol(symbol){\r\n  const curChain = restoreChain();\r\n  const chain = curChain ? curChain.code.toUpperCase() : 'BSC'\r\n  if(type.isOption){\r\n    if(symbol.indexOf('-MARKPRICE') !== -1) {\r\n      symbol = symbol.substr(0,symbol.indexOf('-MARKPRICE'))\r\n    } else {\r\n      symbol = symbol.split('-')[0]\r\n    }\r\n    return  `${symbol}_V2_${chain}`\r\n  } else {\r\n    if(version.isV1){\r\n      return symbol\r\n    } else {\r\n      if(symbol.indexOf('MARKPRICE') !== -1) {\r\n        return symbol;\r\n      } else {\r\n        return `${symbol}_V2_${chain}`\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n//\r\n// export function formatSymbolInputParam(symbol,spec){\r\n//   const curChain = restoreChain();\r\n//   const chain = curChain ? curChain.code.toUpperCase() : 'BSC'\r\n//   const baseToken = Array.isArray(spec.bTokenSymbol) ? spec.bTokenSymbol[0] : spec.bTokenSymbol\r\n//   if(type.isFuture){\r\n//     return {\r\n//       indexPrice : version.isV1 ? symbol : `${symbol}_V2_${chain}`,\r\n//       markPrice : `MARKPRICE_${symbol}_${chain}_FUTURE_${version.zone}_${baseToken}`\r\n//     }\r\n//   } else {\r\n//     return {\r\n//       indexPrice : `${symbol}_V2_${chain}`,\r\n//       markPrice : `MARKPRICE_${symbol}_V2_${chain}`\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport function getMarkpriceSymbol(config){\r\n  const curChain = restoreChain();\r\n  const chain = curChain ? curChain.code.toUpperCase() : 'BSC'\r\n  const baseToken = Array.isArray(config.bTokenSymbol) ? config.bTokenSymbol[0] : config.bTokenSymbol\r\n  return `MARKPRICE_${config.symbol}_${chain}_${Type.current.toUpperCase()}_${version.zone}_${baseToken}`\r\n}\r\n\r\n\r\n\r\nexport function equalIgnoreCase(str1,str2){\r\n  return str1 && str1.toUpperCase() === str2 && str2.toUpperCase()\r\n}\r\n\r\nexport function stripSymbol(symbol){\r\n  if(!symbol){\r\n    return symbol;\r\n  }\r\n  if(/-/.test(symbol)){\r\n    symbol = symbol.split('-')[0]\r\n  }\r\n  return symbol\r\n}\r\n\r\n\r\nexport const  secondsInRange = {\r\n  '1' : 60,\r\n  '5' : 300,\r\n  '15' : 900,\r\n  '30' : 1800,\r\n  '60' : 3600,\r\n  '1D' : 3600 * 24,\r\n  '1W' : 3600 * 24 * 7\r\n}\r\nexport const intervalRange = {\r\n  '1' : 'min',\r\n  '5' : '5min',\r\n  '15' : '15min',\r\n  '30' : '30min',\r\n  '60' : 'hour',\r\n  '1D' : 'day',\r\n  '1W' : 'week'\r\n}\r\n\r\n \r\nexport function calcRange(interval){\r\n  const timestamp = new Date().getTime() /1000 ;\r\n  let from,to;\r\n  if(interval !== '1W') {\r\n    to = Math.floor(timestamp / secondsInRange[interval] ) * secondsInRange[interval]\r\n    from  = to - secondsInRange[interval] * 200\r\n  } else {\r\n    to = Math.floor((timestamp - 345600) /secondsInRange[interval]) * secondsInRange[interval] + 345600\r\n    from = to - secondsInRange[interval] * 200\r\n  }\r\n  return [from,to]\r\n \r\n}\r\n\r\nexport function groupByNetwork(pools){\r\n  const all = []\r\n  pools.reduce((total, pool) => {\r\n    const find = total.find(item => eqInNumber(item['pool']['address'], pool['address']))\r\n    if (find && find.list.length < 5) {\r\n      find['list'].push(pool)\r\n    } else {\r\n      const poolInfo = {\r\n        pool: {\r\n          network: pool.network,\r\n          symbol: pool.symbol,\r\n          address: pool.address,\r\n          formatAdd: pool.formatAdd,\r\n          version: pool.version,\r\n          // innoDisplay : pool.version=== 'v2_lite' ? Intl.get('mining','v2_lite') : pool.version,\r\n          chainId: pool.chainId,\r\n          airdrop: pool.airdrop,\r\n          type: pool.type,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          bTokenId: pool.bTokenId,\r\n          symbolId: pool.symbolId\r\n        },\r\n        list: [pool]\r\n      }\r\n      total.push(poolInfo)\r\n    }\r\n    return total;\r\n  }, all)\r\n  return all;\r\n}\r\n\r\nexport function combineSymbolfromPoolConfig(configs){\r\n  return configs.reduce((total,config) => {\r\n    const pos = total.findIndex(item => item.chainId === config.chainId && (item.pool === config.pool) && config.version === item.version)\r\n    if((config.version === 'v2' || config.version === 'v2_lite' || config.version === 'option' || config.version === 'v2_lite_open' || config.version === 'v2_lite_dpmm')  \r\n        && pos > -1) {\r\n      if(total[pos].symbol.indexOf(config.symbol) === -1){\r\n        total[pos].symbol += `,${config.symbol}` \r\n      } else if(total.findIndex(item => item.bTokenSymbol === config.bTokenSymbol) === -1) {\r\n        total.push(config)\r\n      }\r\n    } else{\r\n      total.push(config)\r\n    }\r\n    return total;\r\n  },[]);\r\n}\r\n\r\nexport async function mapPoolInfo(config,wallet,chainInfo){\r\n  // const liqPool = await getPoolLiquidity(config.chainId,config.pool,config.bTokenId) || {}\r\n  // const apyPool = await getPoolInfoApy(config.chainId,config.pool,config.bTokenId) || {}\r\n  const pool = config.pool || ''\r\n  const item = { \r\n    network : chainInfo[config.chainId] && chainInfo[config.chainId].name,\r\n    // liquidity : liqPool.liquidity,\r\n    // apy :  ((+apyPool.apy) * 100).toFixed(2),\r\n    formatAdd : formatAddress(pool),\r\n    address : pool,\r\n    type : 'perpetual',\r\n    buttonText : 'STAKING',\r\n    multiplier : 1\r\n  }\r\n  // if(wallet && wallet.isConnected()){\r\n  //   const info = await getLiquidityInfo(config.chainId,config.pool,wallet.detail.account,config.bTokenId).catch(e => console.log(e));\r\n  //   const claimInfo = await getUserInfoAll(wallet.detail.account);\r\n  //   if(info){\r\n  //     item['pnl'] = info.pnl\r\n  //   }\r\n  //   if(claimInfo){\r\n  //     item['claimed'] = claimInfo.total;\r\n  //     item['unclaimed'] = claimInfo.amount\r\n  //   }\r\n  // }\r\n\r\n  return Object.assign(config,item)\r\n}\r\n\r\n\r\n\r\n","export const factory = (klass) => {\r\n  let instances = {}\r\n  return (chainId, address) => {\r\n    const key = address\r\n    if (Object.keys(instances).includes(key)) {\r\n      return instances[key];\r\n    } else {\r\n      instances[key] = new klass(chainId, address);\r\n      return instances[key];\r\n    }\r\n  }\r\n}","import { databaseFactory, databaseAirdropFactory } from '../factory';\r\nimport {\r\n  toChecksumAddress,\r\n  getNetworkName,\r\n  deriToString,\r\n  deriToBool,\r\n  deriToNatural,\r\n  //getPoolContractAddress,\r\n} from '../utils';\r\nimport { getPoolV1Config } from '../config/pool_v1'\r\n// import { getLiquidityUsed } from \"./contractApi\";\r\n\r\nexport const getUserInfo = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.chainId`,\r\n      `${userAddress}.claim.amount`,\r\n      `${userAddress}.claim.deadline`,\r\n      `${userAddress}.claim.nonce`,\r\n      `${userAddress}.claim.v`,\r\n      `${userAddress}.claim.r`,\r\n      `${userAddress}.claim.s`,\r\n      `${userAddress}.claim.valid`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfo', err));\r\n  if (res) {\r\n    const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\r\n    return {\r\n      chainId: deriToString(chainId),\r\n      amount: deriToNatural(amount).toString(),\r\n      deadline: deriToString(deadline),\r\n      nonce: deriToString(nonce),\r\n      v: deriToString(v),\r\n      r,\r\n      s,\r\n      valid: deriToBool(valid),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getUserInfoHarvest = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.harvest.lp`,\r\n      `${userAddress}.claim.harvest.trade`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfoHarvest', err));\r\n  if (res) {\r\n    const [harvestLp, harvestTrade] = res;\r\n    return {\r\n      lp: deriToNatural(harvestLp).toString(),\r\n      trade: deriToNatural(harvestTrade).toString(),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getUserInfoTotal = async (userAddress) => {\r\n  const db = databaseFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([`${userAddress}.claim.total`])\r\n    .catch((err) => console.log('getUserInfoTotal', err));\r\n  if (res) {\r\n    const [total] = res;\r\n    return {\r\n      total: deriToNatural(total).toString(),\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Get user claim info from database\r\n * @async\r\n * @method\r\n * @param {string} userAddress - account address\r\n * @returns {Object} response\r\n * @returns {string} resposne.chainId\r\n * @returns {BigNumber} response.amount\r\n * @returns {string} response.deadline\r\n * @returns {string} response.nonce\r\n * @returns {string} response.v\r\n * @returns {string} response.r\r\n * @returns {string} response.s\r\n * @returns {bool} response.valid\r\n * @returns {BigNumber} response.lp\r\n * @returns {BigNumber} response.trade\r\n * @returns {string} response.total\r\n */\r\nexport const getUserInfoAll = async (userAddress) => {\r\n  const [userInfo, userInfoHarvest, userInfoTotal] = await Promise.all([\r\n    getUserInfo(userAddress),\r\n    getUserInfoHarvest(userAddress),\r\n    getUserInfoTotal(userAddress),\r\n  ]);\r\n  return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\r\n};\r\n\r\n/**\r\n * Get pool liquidity\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {symbol} response.symbol\r\n */\r\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  try {\r\n    const res = await db\r\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\r\n      .catch((err) => console.log('getPoolLiquidity', err));\r\n    //const { symbol } = getPoolV1Config(chainId, poolAddress)\r\n    if (res) {\r\n      const [liquidity] = res;\r\n      return {\r\n        liquidity: deriToNatural(liquidity).toString(),\r\n        //symbol,\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n  return {\r\n    liquidity: ''\r\n  }\r\n};\r\n\r\nexport const getPoolLiquidityAll = async (pools) => {\r\n  // use the dev database\r\n  const db = databaseFactory();\r\n  if (Array.isArray(pools)) {\r\n    const keys = pools.reduce((acc, pool) => {\r\n      if (pool.version === 'v2' && pool.bTokenId) {\r\n        return acc.concat([\r\n          `${pool.chainId}.${pool.pool}.liquidity${pool.bTokenId}`,\r\n        ]);\r\n      } else {\r\n        return acc.concat([`${pool.chainId}.${pool.pool}.liquidity`]);\r\n      }\r\n    }, []);\r\n    try {\r\n      const res = await db.getValues(keys);\r\n      if (res) {\r\n        return res.map((i) => deriToNatural(i));\r\n      }\r\n    } catch (err) {\r\n      console.log(err.toString());\r\n    }\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getPoolInfoApyAll = async (pools) => {\r\n  // use the dev database\r\n  const db = databaseFactory(true);\r\n  if (Array.isArray(pools)) {\r\n    const keys = pools.reduce((acc, pool) => {\r\n      const poolNetwork = getNetworkName(pool.chainId.toString());\r\n      if (pool.version === 'v2' && pool.bTokenId) {\r\n        return acc.concat([`${poolNetwork}.${pool.pool}.apy${pool.bTokenId}`]);\r\n      } else {\r\n        return acc.concat([`${poolNetwork}.${pool.pool}.apy`]);\r\n      }\r\n    }, []);\r\n    try {\r\n      console.log('keys', keys)\r\n      const res = await db.getValues(keys);\r\n      if (res) {\r\n        return res.map((i) => deriToNatural(i));\r\n      }\r\n    } catch (err) {\r\n      console.log(err.toString());\r\n    }\r\n    return [];\r\n  }\r\n};\r\n\r\n/**\r\n * Get pool apy\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Get apy of the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\r\n  const db = databaseFactory(true);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.apy`,\r\n        `${poolNetwork}.${poolAddress}.apy2`,\r\n        `${poolNetwork}.${poolAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getPoolInfoApy', err));\r\n    if (res) {\r\n      const [apy, apy2, volume1h, volume24h] = res;\r\n      return {\r\n        apy: deriToNatural(apy).toString(),\r\n        apy2: deriToNatural(apy2).toString(),\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n/**\r\n * Get apy of the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {string} response.apy\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\n// export const getClpPoolInfoApy = async (chainId, poolAddress) => {\r\n//   const db = databaseFactory(true);\r\n//   try {\r\n//     const poolNetwork = getNetworkName(chainId);\r\n//     const res = await db\r\n//       .getValues([\r\n//         `${poolNetwork}.${poolAddress}.apy`,\r\n//         `${poolNetwork}.${poolAddress}.apy2`,\r\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\r\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\r\n//       ])\r\n//       .catch((err) => console.log('getPoolInfoApy', err));\r\n//     if (res) {\r\n//       const [apy, apy2, volume1h, volume24h] = res;\r\n//       return {\r\n//         apy: deriToNatural(apy).toString(),\r\n//         apy2: deriToNatural(apy2).toString(),\r\n//         volume1h: deriToNatural(volume1h).toString(),\r\n//         volume24h: deriToNatural(volume24h).toString(),\r\n//       };\r\n//     }\r\n//   } catch (err) {\r\n//     console.log(err);\r\n//   }\r\n// };\r\n\r\n/**\r\n * Get user info of the pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} userAddress\r\n * @returns {Object} response\r\n * @returns {string} response.volume1h\r\n * @returns {string} response.volume24h\r\n */\r\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\r\n  const db = databaseFactory(true);\r\n  //const {poolAddress} = getPoolContractAddress(chainId, poolAddress);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  try {\r\n    const poolNetwork = getNetworkName(chainId);\r\n    const res = await db\r\n      .getValues([\r\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\r\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\r\n      ])\r\n      .catch((err) => console.log('getUserInfoInPool', err));\r\n    if (res) {\r\n      const [volume1h, volume24h] = res;\r\n      return {\r\n        volume1h: deriToNatural(volume1h).toString(),\r\n        volume24h: deriToNatural(volume24h).toString(),\r\n      };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\r\n  const db = databaseAirdropFactory(true);\r\n  userAddress = toChecksumAddress(userAddress);\r\n  const res = await db\r\n    .getValues([\r\n      `${userAddress}.claim.chainId`,\r\n      `${userAddress}.claim.amount`,\r\n      `${userAddress}.claim.deadline`,\r\n      `${userAddress}.claim.nonce`,\r\n      `${userAddress}.claim.v1`,\r\n      `${userAddress}.claim.r1`,\r\n      `${userAddress}.claim.s1`,\r\n      `${userAddress}.claim.v2`,\r\n      `${userAddress}.claim.r2`,\r\n      `${userAddress}.claim.s2`,\r\n      `${userAddress}.claim.valid`,\r\n      // `${userAddress}.claim.harvest.lp`,\r\n      // `${userAddress}.claim.harvest.trade`,\r\n      // `${userAddress}.claim.total`,\r\n    ])\r\n    .catch((err) => console.log('getUserInfoAllForAirDrop', err));\r\n  if (res) {\r\n    const [\r\n      chainId,\r\n      amount,\r\n      deadline,\r\n      nonce,\r\n      v1,\r\n      r1,\r\n      s1,\r\n      v2,\r\n      r2,\r\n      s2,\r\n      valid,\r\n      // harvestLp,\r\n      // harvestTrade,\r\n      // total,\r\n    ] = res;\r\n    return {\r\n      chainId: deriToString(chainId),\r\n      amount: deriToNatural(amount).toString(),\r\n      deadline: deriToString(deadline),\r\n      nonce: deriToString(nonce),\r\n      v1: deriToString(v1),\r\n      r1,\r\n      s1,\r\n      v2: deriToString(v2),\r\n      r2,\r\n      s2,\r\n      valid: deriToBool(valid),\r\n      // lp: deriToNatural(harvestLp),\r\n      // trade: deriToNatural(harvestTrade),\r\n      // total: deriToString(total),\r\n    };\r\n  }\r\n};\r\n","// this file is generated by script, don't modify it !!!\r\nexport const pancakePairAbi = [\r\n  {\r\n    \"inputs\": [],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"constructor\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"owner\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"spender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"value\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"Approval\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"sender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount0\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount1\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"to\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"Burn\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"sender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount0\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount1\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"Mint\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"sender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount0In\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount1In\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount0Out\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount1Out\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"to\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"Swap\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint112\",\r\n        \"name\": \"reserve0\",\r\n        \"type\": \"uint112\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint112\",\r\n        \"name\": \"reserve1\",\r\n        \"type\": \"uint112\"\r\n      }\r\n    ],\r\n    \"name\": \"Sync\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"from\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"to\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"value\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"Transfer\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"DOMAIN_SEPARATOR\",\r\n    \"outputs\": [{ \"internalType\": \"bytes32\", \"name\": \"\", \"type\": \"bytes32\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"MINIMUM_LIQUIDITY\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"PERMIT_TYPEHASH\",\r\n    \"outputs\": [{ \"internalType\": \"bytes32\", \"name\": \"\", \"type\": \"bytes32\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [\r\n      { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" },\r\n      { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }\r\n    ],\r\n    \"name\": \"allowance\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [\r\n      { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }\r\n    ],\r\n    \"name\": \"approve\",\r\n    \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"name\": \"balanceOf\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }],\r\n    \"name\": \"burn\",\r\n    \"outputs\": [\r\n      { \"internalType\": \"uint256\", \"name\": \"amount0\", \"type\": \"uint256\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"amount1\", \"type\": \"uint256\" }\r\n    ],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"decimals\",\r\n    \"outputs\": [{ \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"factory\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"getReserves\",\r\n    \"outputs\": [\r\n      { \"internalType\": \"uint112\", \"name\": \"_reserve0\", \"type\": \"uint112\" },\r\n      { \"internalType\": \"uint112\", \"name\": \"_reserve1\", \"type\": \"uint112\" },\r\n      {\r\n        \"internalType\": \"uint32\",\r\n        \"name\": \"_blockTimestampLast\",\r\n        \"type\": \"uint32\"\r\n      }\r\n    ],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [\r\n      { \"internalType\": \"address\", \"name\": \"_token0\", \"type\": \"address\" },\r\n      { \"internalType\": \"address\", \"name\": \"_token1\", \"type\": \"address\" }\r\n    ],\r\n    \"name\": \"initialize\",\r\n    \"outputs\": [],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"kLast\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }],\r\n    \"name\": \"mint\",\r\n    \"outputs\": [\r\n      { \"internalType\": \"uint256\", \"name\": \"liquidity\", \"type\": \"uint256\" }\r\n    ],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"name\",\r\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"name\": \"nonces\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [\r\n      { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" },\r\n      { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"deadline\", \"type\": \"uint256\" },\r\n      { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" },\r\n      { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" },\r\n      { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" }\r\n    ],\r\n    \"name\": \"permit\",\r\n    \"outputs\": [],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"price0CumulativeLast\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"price1CumulativeLast\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }],\r\n    \"name\": \"skim\",\r\n    \"outputs\": [],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [\r\n      { \"internalType\": \"uint256\", \"name\": \"amount0Out\", \"type\": \"uint256\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"amount1Out\", \"type\": \"uint256\" },\r\n      { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" },\r\n      { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }\r\n    ],\r\n    \"name\": \"swap\",\r\n    \"outputs\": [],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"symbol\",\r\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [],\r\n    \"name\": \"sync\",\r\n    \"outputs\": [],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"token0\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"token1\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"totalSupply\",\r\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [\r\n      { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }\r\n    ],\r\n    \"name\": \"transfer\",\r\n    \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [\r\n      { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" },\r\n      { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }\r\n    ],\r\n    \"name\": \"transferFrom\",\r\n    \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { pancakePairAbi } from '../abi/pancakePairAbi.js'\r\n\r\nexport class PancakePair extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, pancakePairAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  //  async DOMAIN_SEPARATOR() {\r\n  //    const res = await this._call('DOMAIN_SEPARATOR', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async MINIMUM_LIQUIDITY() {\r\n  //    const res = await this._call('MINIMUM_LIQUIDITY', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async PERMIT_TYPEHASH() {\r\n  //    const res = await this._call('PERMIT_TYPEHASH', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async allowance(, ) {\r\n  //    const res = await this._call('allowance', [, ])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async balanceOf() {\r\n  //    const res = await this._call('balanceOf', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async decimals() {\r\n  //    const res = await this._call('decimals', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async factory() {\r\n  //    const res = await this._call('factory', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getReserves() {\r\n    const res = await this._call('getReserves', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async kLast() {\r\n  //    const res = await this._call('kLast', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async nonces() {\r\n  //    const res = await this._call('nonces', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async price0CumulativeLast() {\r\n    const res = await this._call('price0CumulativeLast', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async price1CumulativeLast() {\r\n    const res = await this._call('price1CumulativeLast', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async symbol() {\r\n  //    const res = await this._call('symbol', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async token0() {\r\n  //    const res = await this._call('token0', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async token1() {\r\n  //    const res = await this._call('token1', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async approve(accountAddress, spender, value) {\r\n  //    return await this._transact('approve', [spender, value], accountAddress)\r\n  //  }\r\n  //  async burn(accountAddress, to) {\r\n  //    return await this._transact('burn', [to], accountAddress)\r\n  //  }\r\n  //  async initialize(accountAddress, _token0, _token1) {\r\n  //    return await this._transact('initialize', [_token0, _token1], accountAddress)\r\n  //  }\r\n  //  async mint(accountAddress, to) {\r\n  //    return await this._transact('mint', [to], accountAddress)\r\n  //  }\r\n  //  async permit(accountAddress, owner, spender, value, deadline, v, r, s) {\r\n  //    return await this._transact('permit', [owner, spender, value, deadline, v, r, s], accountAddress)\r\n  //  }\r\n  //  async skim(accountAddress, to) {\r\n  //    return await this._transact('skim', [to], accountAddress)\r\n  //  }\r\n  //  async swap(accountAddress, amount0Out, amount1Out, to, data) {\r\n  //    return await this._transact('swap', [amount0Out, amount1Out, to, data], accountAddress)\r\n  //  }\r\n  //  async sync(accountAddress) {\r\n  //    return await this._transact('sync', [], accountAddress)\r\n  //  }\r\n  //  async transfer(accountAddress, to, value) {\r\n  //    return await this._transact('transfer', [to, value], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, value) {\r\n  //    return await this._transact('transferFrom', [from, to, value], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nimport { processMethod } from \"../../shared/utils/derijsnext.js\";\r\nimport { bg } from \"../../shared/utils/index.js\";\r\nimport { MAX_UINT256} from '../config'\r\nimport { PancakePair } from \"./gen/PancakePair.js\";\r\n\r\nconst isUnlocked = (klass) => {\r\n  klass.prototype[\"isUnlocked\"] = async function (accountAddress, poolAddress) {\r\n    const allowance = await this.allowance(accountAddress, poolAddress)\r\n    //console.log(accountAddress, poolAddress)\r\n    const res = bg(allowance).gt(0)\r\n    return res\r\n  };\r\n  return klass\r\n};\r\n\r\nconst unlock = (klass) => {\r\n  klass.prototype['unlock'] = async function (accountAddress, poolAddress) {\r\n    return await this._transact(\r\n      'approve',\r\n      [poolAddress, MAX_UINT256],\r\n      accountAddress\r\n    );\r\n  };\r\n  return klass;\r\n};\r\n\r\nconst getPrice = (klass) => {\r\n  klass.prototype['getPrice'] = async function () {\r\n    if (this.contractAddress === '0xE1cC9FCF36f60479F21ACcB3E23Cb2B608679f4d') {\r\n      return '1';\r\n    }\r\n    const [\r\n      isQuoteToken0,\r\n      qDecimals,\r\n      bDecimals,\r\n      pair,\r\n      priceCumulativeLast1,\r\n      priceCumulativeLast2,\r\n      timestampLast1,\r\n      timestampLast2,\r\n    ] = await Promise.all([\r\n      this.isQuoteToken0(),\r\n      this.qDecimals(),\r\n      this.bDecimals(),\r\n      this.pair(),\r\n      this.priceCumulativeLast1(),\r\n      this.priceCumulativeLast2(),\r\n      this.timestampLast1(),\r\n      this.timestampLast2(),\r\n    ]);\r\n\r\n    const pancakePair = new PancakePair(this.chainId, pair);\r\n    let reserveQ, reserveB, timestamp;\r\n    if (isQuoteToken0) {\r\n      const res = await pancakePair.getReserves();\r\n      reserveQ = res._reserve0;\r\n      reserveB = res._reserve1;\r\n      timestamp = res._blockTimestampLast;\r\n    } else {\r\n      const res = await pancakePair.getReserves();\r\n      reserveB = res._reserve0;\r\n      reserveQ = res._reserve1;\r\n      timestamp = res._blockTimestampLast;\r\n    }\r\n    const [price0CumulativeLast, price1CumulativeLast] = await Promise.all([\r\n      pancakePair.price0CumulativeLast(),\r\n      pancakePair.price1CumulativeLast(),\r\n    ]);\r\n    let tmpPairState = {};\r\n\r\n    if (timestamp !== timestampLast2) {\r\n      tmpPairState.priceCumulativeLast1 = priceCumulativeLast2;\r\n      tmpPairState.timestampLast1 = timestampLast2;\r\n      tmpPairState.priceCumulativeLast2 = isQuoteToken0\r\n        ? price0CumulativeLast\r\n        : price1CumulativeLast;\r\n      tmpPairState.timestampLast2 = timestamp;\r\n    } else {\r\n      tmpPairState = {\r\n        priceCumulativeLast1,\r\n        priceCumulativeLast2,\r\n        timestampLast1,\r\n        timestampLast2,\r\n      };\r\n    }\r\n\r\n    let price;\r\n    const diff = bg(qDecimals).minus(bDecimals);\r\n    if (tmpPairState.timestampLast1 !== '0') {\r\n      //console.log('not equal')\r\n      price = bg(tmpPairState.priceCumulativeLast2)\r\n        .minus(tmpPairState.priceCumulativeLast1)\r\n        .div(bg(tmpPairState.timestampLast2).minus(tmpPairState.timestampLast1))\r\n        .times(bg(10).pow(diff))\r\n        .div(bg(2).pow(112));\r\n    } else {\r\n      //console.log('equal')\r\n      price = bg(reserveB).times(bg(10).pow(diff)).div(reserveQ).toString();\r\n    }\r\n    return price;\r\n  };\r\n  return klass\r\n}\r\n\r\nexport const ERC20Adapter = (klass) => {\r\n    klass = processMethod(klass, 'totalSupply');\r\n    //klass = processMethod(klass, 'balanceOf'); // use ERC20.decimals\r\n\r\n    klass = isUnlocked(klass);\r\n    klass = unlock(klass);\r\n    return klass\r\n}\r\n\r\nexport const chainlinkOracleAdapter= (klass) => {\r\n    klass = processMethod(klass, 'getPrice');\r\n    return klass\r\n}\r\n\r\nexport const offChainOracleAdapter= (klass) => {\r\n    klass = processMethod(klass, 'getPrice');\r\n    return klass\r\n}\r\n\r\nexport const offChainVolatilityOracleAdapter= (klass) => {\r\n    klass = processMethod(klass, 'getVolatility');\r\n    return klass\r\n}\r\n\r\nexport const bTokenOracle1Adapter = (klass) => {\r\n  //klass = processMethod(klass, 'getPrice');\r\n  klass = getPrice(klass);\r\n  return klass;\r\n};\r\n\r\n// export const bTokenSwapper1Adapter = (klass) => {\r\n//   //klass = processMethod(klass, 'getPrice');\r\n//   return klass;\r\n// };\r\n\r\nexport const pancakePairAdapter = (klass) => {\r\n  //klass = processMethod(klass, 'getPrice');\r\n  return klass;\r\n};","// this file is generated by script, don't modify it !!!\r\nexport const TERC20Abi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_symbol\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"_decimals\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"allowance\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"decimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"mint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transfer\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey, bg } from '../../../shared/utils/index.js'\r\nimport { TERC20Abi } from '../abi/TERC20Abi.js'\r\n\r\nexport class TERC20 extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, TERC20Abi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async allowance(owner, spender) {\r\n    const res = await this._call('allowance', [owner, spender])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async _balanceOf(account) {\r\n    return await this._call('balanceOf', [account])\r\n  }\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n  async decimals() {\r\n    const res = await this._call('decimals', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  async approve(accountAddress, spender, amount) {\r\n    return await this._transact('approve', [spender, amount], accountAddress)\r\n  }\r\n  //  async burn(accountAddress, account, amount) {\r\n  //    return await this._transact('burn', [account, amount], accountAddress)\r\n  //  }\r\n  async mint(accountAddress, account, amount) {\r\n    return await this._transact('mint', [account, amount], accountAddress)\r\n  }\r\n  //  async transfer(accountAddress, to, amount) {\r\n  //    return await this._transact('transfer', [to, amount], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, amount) {\r\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const ERC20Abi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"name_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"allowance\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"decimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"pure\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transfer\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey, bg } from '../../../shared/utils/index.js'\r\nimport { ERC20Abi } from '../abi/ERC20Abi.js'\r\n\r\nexport class ERC20 extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, ERC20Abi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async allowance(owner, spender) {\r\n    const res = await this._call('allowance', [owner, spender])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async _balanceOf(account) {\r\n    return await this._call('balanceOf', [account])\r\n  }\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals).toString();\r\n  }\r\n\r\n   async decimals() {\r\n     const res = await this._call('decimals', [])\r\n     return deleteIndexedKey(res)\r\n   }\r\n   async name() {\r\n     const res = await this._call('name', [])\r\n     return deleteIndexedKey(res)\r\n   }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  async approve(accountAddress, spender, amount) {\r\n    return await this._transact('approve', [spender, amount], accountAddress)\r\n  }\r\n  //  async transfer(accountAddress, to, amount) {\r\n  //    return await this._transact('transfer', [to, amount], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, amount) {\r\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const chainlinkOracleAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"feed_\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"decimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"feed\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"feedDecimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getPrice\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { chainlinkOracleAbi } from '../abi/chainlinkOracleAbi.js'\r\n\r\nexport class ChainlinkOracle extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, chainlinkOracleAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  //  async decimals() {\r\n  //    const res = await this._call('decimals', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async feed() {\r\n  //    const res = await this._call('feed', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async feedDecimals() {\r\n  //    const res = await this._call('feedDecimals', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getPrice() {\r\n    const res = await this._call('getPrice', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const offChainOracleAbi = [\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'string',\r\n        name: 'symbol_',\r\n        type: 'string',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: 'signer_',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'delayAllowance_',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'constructor',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'delayAllowance',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'getPrice',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'price',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'delayAllowance_',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'setDelayAllowance',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'signer_',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'setSigner',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'signer',\r\n    outputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'symbol',\r\n    outputs: [\r\n      {\r\n        internalType: 'string',\r\n        name: '',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'timestamp',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'timestamp_',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'price_',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint8',\r\n        name: 'v_',\r\n        type: 'uint8',\r\n      },\r\n      {\r\n        internalType: 'bytes32',\r\n        name: 'r_',\r\n        type: 'bytes32',\r\n      },\r\n      {\r\n        internalType: 'bytes32',\r\n        name: 's_',\r\n        type: 'bytes32',\r\n      },\r\n    ],\r\n    name: 'updatePrice',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  // for old offchain oracle\r\n  {\r\n    inputs: [],\r\n    name: 'signatory',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n];\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { offChainOracleAbi } from '../abi/offChainOracleAbi.js'\r\n\r\nexport class OffChainOracle extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, offChainOracleAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  //  async delayAllowance() {\r\n  //    const res = await this._call('delayAllowance', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getPrice() {\r\n    const res = await this._call('getPrice', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async price() {\r\n  //    const res = await this._call('price', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async signer() {\r\n    await this._init()\r\n    //const res = await this._call('signer', [])\r\n    const res = await this.contract.methods.signer().call()\r\n    return deleteIndexedKey(res)\r\n  }\r\n  // for old offchain oracle\r\n  async signatory() {\r\n    await this._init()\r\n    //const res = await this._call('signatory',[])\r\n    const res = await this.contract.methods.signatory().call()\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  //  async timestamp() {\r\n  //    const res = await this._call('timestamp', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n\r\n  // tx\r\n  //  async setDelayAllowance(accountAddress, delayAllowance_) {\r\n  //    return await this._transact('setDelayAllowance', [delayAllowance_], accountAddress)\r\n  //  }\r\n  //  async setSigner(accountAddress, signer_) {\r\n  //    return await this._transact('setSigner', [signer_], accountAddress)\r\n  //  }\r\n  //  async updatePrice(accountAddress, timestamp_, price_, v_, r_, s_) {\r\n  //    return await this._transact('updatePrice', [timestamp_, price_, v_, r_, s_], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const offChainVolatilityOracleAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"symbol_\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"signer_\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"delayAllowance_\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"delayAllowance\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getVolatility\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"delayAllowance_\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setDelayAllowance\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"signer_\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setSigner\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"signer\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"timestamp\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"timestamp_\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"volatility_\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"v_\",\r\n                \"type\": \"uint8\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes32\",\r\n                \"name\": \"r_\",\r\n                \"type\": \"bytes32\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes32\",\r\n                \"name\": \"s_\",\r\n                \"type\": \"bytes32\"\r\n            }\r\n        ],\r\n        \"name\": \"updateVolatility\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"volatility\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { offChainVolatilityOracleAbi } from '../abi/offChainVolatilityOracleAbi.js'\r\n\r\nexport class OffChainVolatilityOracle extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, offChainVolatilityOracleAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  //  async delayAllowance() {\r\n  //    const res = await this._call('delayAllowance', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async getVolatility() {\r\n    const res = await this._call('getVolatility', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async signer() {\r\n    const res = await this._call('signer', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async timestamp() {\r\n  //    const res = await this._call('timestamp', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async volatility() {\r\n  //    const res = await this._call('volatility', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n\r\n  // tx\r\n  //  async setDelayAllowance(accountAddress, delayAllowance_) {\r\n  //    return await this._transact('setDelayAllowance', [delayAllowance_], accountAddress)\r\n  //  }\r\n  //  async setSigner(accountAddress, signer_) {\r\n  //    return await this._transact('setSigner', [signer_], accountAddress)\r\n  //  }\r\n  //  async updateVolatility(accountAddress, timestamp_, volatility_, v_, r_, s_) {\r\n  //    return await this._transact('updateVolatility', [timestamp_, volatility_, v_, r_, s_], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const TERC20MintLimitAbi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_symbol\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"_decimals\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"allowance\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"controller\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"controllerBurn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"controllerMint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"decimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"mint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"mintAmount\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"mintPeriod\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"mintTimestamp\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setMintAmount\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"period\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setMintPeriod\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transfer\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey, bg } from '../../../shared/utils/index.js'\r\nimport { TERC20MintLimitAbi } from '../abi/TERC20MintLimitAbi.js'\r\n\r\nexport class TERC20MintLimit extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, TERC20MintLimitAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async allowance(owner, spender) {\r\n    const res = await this._call('allowance', [owner, spender])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async _balanceOf() {\r\n    return await this._call('balanceOf', [])\r\n  }\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n  //  async controller() {\r\n  //    const res = await this._call('controller', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async decimals() {\r\n    const res = await this._call('decimals', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async mintAmount() {\r\n  //    const res = await this._call('mintAmount', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async mintPeriod() {\r\n  //    const res = await this._call('mintPeriod', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  //  async mintTimestamp() {\r\n  //    const res = await this._call('mintTimestamp', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async name() {\r\n    const res = await this._call('name', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('symbol', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  async approve(accountAddress, spender, amount) {\r\n    return await this._transact('approve', [spender, amount], accountAddress)\r\n  }\r\n  //  async burn(accountAddress) {\r\n  //    return await this._transact('burn', [], accountAddress)\r\n  //  }\r\n  //  async controllerBurn(accountAddress, account, amount) {\r\n  //    return await this._transact('controllerBurn', [account, amount], accountAddress)\r\n  //  }\r\n  //  async controllerMint(accountAddress, account, amount) {\r\n  //    return await this._transact('controllerMint', [account, amount], accountAddress)\r\n  //  }\r\n  async mint(accountAddress) {\r\n    return await this._transact('mint', [], accountAddress)\r\n  }\r\n  //  async setMintAmount(accountAddress, amount) {\r\n  //    return await this._transact('setMintAmount', [amount], accountAddress)\r\n  //  }\r\n  //  async setMintPeriod(accountAddress, period) {\r\n  //    return await this._transact('setMintPeriod', [period], accountAddress)\r\n  //  }\r\n  //  async transfer(accountAddress, to, amount) {\r\n  //    return await this._transact('transfer', [to, amount], accountAddress)\r\n  //  }\r\n  //  async transferFrom(accountAddress, from, to, amount) {\r\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const bTokenOracle1Abi = [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"pair_\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"quote_\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"base_\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"isQuoteToken0_\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"bDecimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"base\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getPrice\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"isQuoteToken0\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"pair\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"priceCumulativeLast1\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"priceCumulativeLast2\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"qDecimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"quote\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"timestampLast1\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"timestampLast2\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { bTokenOracle1Abi } from '../abi/bTokenOracle1Abi.js'\r\n\r\nexport class BTokenOracle1 extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, bTokenOracle1Abi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async bDecimals() {\r\n    const res = await this._call('bDecimals', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async base() {\r\n  //    const res = await this._call('base', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async isQuoteToken0() {\r\n    const res = await this._call('isQuoteToken0', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async pair() {\r\n    const res = await this._call('pair', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async priceCumulativeLast1() {\r\n    const res = await this._call('priceCumulativeLast1', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async priceCumulativeLast2() {\r\n    const res = await this._call('priceCumulativeLast2', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async qDecimals() {\r\n    const res = await this._call('qDecimals', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  //  async quote() {\r\n  //    const res = await this._call('quote', [])\r\n  //    return deleteIndexedKey(res)\r\n  //  }\r\n  async timestampLast1() {\r\n    const res = await this._call('timestampLast1', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async timestampLast2() {\r\n    const res = await this._call('timestampLast2', [])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  //  async getPrice(accountAddress) {\r\n  //    return await this._transact('getPrice', [], accountAddress)\r\n  //  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nimport { contractFactory } from '../../shared/utils/derijsnext.js';\r\nimport { ERC20Adapter, chainlinkOracleAdapter, offChainOracleAdapter, offChainVolatilityOracleAdapter, bTokenSwapper1Adapter, pancakePairAdapter, bTokenOracle1Adapter } from './adapter.js';\r\n\r\nimport { TERC20 } from './gen/TERC20.js';\r\nimport { ERC20 } from './gen/ERC20.js';\r\nimport { ChainlinkOracle} from './gen/ChainlinkOracle.js';\r\nimport { OffChainOracle} from './gen/OffChainOracle.js';\r\nimport { OffChainVolatilityOracle} from './gen/OffChainVolatilityOracle.js';\r\nimport { TERC20MintLimit } from './gen/TERC20MintLimit.js';\r\n//import { BTokenSwapper1 } from './gen/BTokenSwapper1.js';\r\nimport { PancakePair } from './gen/PancakePair.js';\r\nimport { BTokenOracle1 } from './gen/BTokenOracle1.js';\r\n\r\n// ERC20\r\nexport const ERC20Factory = contractFactory(ERC20Adapter(ERC20));\r\nexport const TERC20Factory = contractFactory(ERC20Adapter(TERC20)); // for test only\r\nexport const TERC20MintLimitFactory = contractFactory(ERC20Adapter(TERC20MintLimit)); // for test only\r\n\r\n\r\n// oracle\r\nexport const symbolOracleChainlinkFactory = contractFactory(chainlinkOracleAdapter(ChainlinkOracle));\r\nexport const offChainOracleFactory = contractFactory(offChainOracleAdapter(OffChainOracle));\r\nexport const volatilityOracleOffChainFactory = contractFactory(offChainVolatilityOracleAdapter(OffChainVolatilityOracle));\r\n\r\n// swapper\r\nexport const bTokenOracle1Factory = contractFactory(bTokenOracle1Adapter(BTokenOracle1))\r\n//export const bTokenSwapper1Factory = contractFactory(bTokenSwapper1Adapter(BTokenSwapper1))\r\nexport const pancakePairFactory = contractFactory(pancakePairAdapter(PancakePair))\r\n\r\n","// versions\r\n//export const VERSIONS = ['v2', 'v2_lite', 'v2_lite_open']\r\nexport const LITE_VERSIONS = ['v2_lite', 'v2_lite_open'];\r\nexport const LITE_AND_OPTION_VERSIONS = [...LITE_VERSIONS, 'option'];\r\nexport const VERSIONS = ['v2', ...LITE_AND_OPTION_VERSIONS];\r\nexport const ALL_EXCEPT_OPEN_VERSIONS = [\r\n  'v2',\r\n  'v2_lite',\r\n  'option',\r\n];\r\nexport const PRESERVED_SYMBOLS = ['BTCUSD', 'ETHUSD', 'BNBUSD'];\r\n","/* eslint-disable */\r\n// base token contract abi\r\nexport const bTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const TERC20Abi = [{ \"inputs\": [{ \"internalType\": \"string\", \"name\": \"_name\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"_symbol\", \"type\": \"string\" }, { \"internalType\": \"uint8\", \"name\": \"_decimals\", \"type\": \"uint8\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [{ \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n\r\n// oracle contract abis\r\nexport const symbolOracleOffChainAbi = [ {\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}, { \"inputs\": [], \"name\": \"signer\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, {\"inputs\":[],\"name\":\"signatory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"} ]\r\nexport const chainlinkOracleAbi = [{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"event\",\"name\":\"AnswerUpdated\",\"inputs\":[{\"type\":\"int256\",\"name\":\"current\",\"internalType\":\"int256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"NewRound\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"address\",\"name\":\"startedBy\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferRequested\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"acceptOwnership\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AccessControllerInterface\"}],\"name\":\"accessController\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"name\":\"aggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"confirmAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint8\",\"name\":\"\",\"internalType\":\"uint8\"}],\"name\":\"decimals\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"string\",\"name\":\"\",\"internalType\":\"string\"}],\"name\":\"description\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"getAnswer\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"getRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getTimestamp\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"latestAnswer\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestRound\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"latestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestTimestamp\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address payable\"}],\"name\":\"owner\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"phaseAggregators\",\"inputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}],\"name\":\"phaseId\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"proposeAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"proposedAggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedGetRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedLatestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setController\",\"inputs\":[{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"transferOwnership\",\"inputs\":[{\"type\":\"address\",\"name\":\"_to\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"version\",\"inputs\":[]}]\r\nexport const wrappedOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\nexport const wooOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feed_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n\r\n// activity contract abis\r\nexport const brokerManagerAbi = [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"SetBroker\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBroker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"setBroker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const pTokenAirdropAbi = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"poolRouterAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AddWhitelist\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AirdropPToken\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"userAddress\", \"type\": \"address\" } ], \"name\": \"addWhitelist\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"airdropPToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getBTokenBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isStartAirdrop\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"ownerAddress\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"startAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"stopAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalAirdropCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalWhitelistCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"withdrawBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\n/* eslint-enable */","// add a new chain: validateChainId, getChainProviderUrls, getNetworkName, getDailyBlockNumberConfig\r\nexport const getChainIds = () => {\r\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\r\n};\r\n\r\nexport const getChainProviderUrls = (chainId) => {\r\n  const chainProviderUrls = [\r\n    {\r\n      provider_urls: [\r\n        'https://mainnet.infura.io/v3/d0e6582644a845ee8d7c3c18683fec06',\r\n      ],\r\n      chainId: '1',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://bsc-dataseed.binance.org',\r\n        'https://bsc-dataseed1.defibit.io/',\r\n        'https://bsc-dataseed1.ninicoin.io/',\r\n      ],\r\n      chainId: '56',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-mainnet.hecochain.com'],\r\n      chainId: '128',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://polygon-rpc.com',\r\n        //'https://rpc-mainnet.matic.network',\r\n        'https://rpc-mainnet.maticvigil.com',\r\n        //'https://rpc-mainnet.matic.quiknode.pro',\r\n        'https://matic-mainnet.chainstacklabs.com',\r\n        // 'https://matic-mainnet-full-rpc.bwarelabs.com',\r\n        // 'https://matic-mainnet-archive-rpc.bwarelabs.com',\r\n      ],\r\n      chainId: '137',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '3',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\r\n      ],\r\n      chainId: '42',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\r\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\r\n      ],\r\n      chainId: '97',\r\n    },\r\n    {\r\n      provider_urls: ['https://http-testnet.hecochain.com'],\r\n      chainId: '256',\r\n    },\r\n    {\r\n      provider_urls: [\r\n        'https://rpc-mumbai.matic.today',\r\n        'https://rpc-mumbai.maticvigil.com',\r\n        'https://matic-mumbai.chainstacklabs.com',\r\n        'https://matic-testnet-archive-rpc.bwarelabs.com',\r\n      ],\r\n      chainId: '80001',\r\n    },\r\n  ];\r\n\r\n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\r\n  //console.log('res',res)\r\n  if (res.length > 0) {\r\n    return res[0].provider_urls\r\n  } else {\r\n    throw new Error(`getChainProviderUrls: no urls for chainId ${chainId}`)\r\n  }\r\n}\r\n\r\nexport const getDailyBlockNumberConfig = () => {\r\n  // let chainBlockNumberList = [\r\n  //   '2367422',\r\n  //   '2367422',\r\n  //   '10497304',\r\n  //   '10497304',\r\n  //   '10511369',\r\n  //   '10511369',\r\n  //   '14747860',\r\n  //   '14747860',\r\n  // ];\r\n\r\n  // compute matic aunual block number: block height(16309458, 10000000)\r\n  let chainBlockNumberList = [\r\n    '6486',\r\n    '6486',\r\n    '28759',\r\n    '28759',\r\n    '28798',\r\n    '28798',\r\n    '40405',\r\n    '40405',\r\n  ];\r\n  return getChainIds().reduce((accum, i, index) => {\r\n    accum[i] = chainBlockNumberList[index];\r\n    return accum;\r\n  }, {});\r\n};\r\n\r\n// MAX UINT/INT256\r\n// hex(2**256-1)\r\nexport const MAX_UINT256 =\r\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\r\n// hex((2**255 -1) // 10**18)\r\nexport const MAX_INT256 =\r\n  '0x9392ee8e921d5d073aff322e62439fcf32d7f344649470f90';\r\n\r\n","export const perpetualPoolLiteAbi = [{\"inputs\":[{\"internalType\":\"uint256[7]\",\"name\":\"parameters\",\"type\":\"uint256[7]\"},{\"internalType\":\"address[5]\",\"name\":\"addresses\",\"type\":\"address[5]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"addSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidatorQualifierAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolFeeCollector\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"minPoolMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minInitialMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"maxLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"liquidationCutRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"protocolFeeCollectRatio\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeAccrued\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getSymbol\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"multiplier\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"feeRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"fundingRateCoefficient\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cumulativeFundingRate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"internalType\":\"struct IPerpetualPoolLite.SymbolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"setSymbolParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n\r\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n\r\nexport const perpetualPoolLiteManagerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolTemplate_\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector_\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"protocolFeeCutRatio_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"creator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"CreatePool\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pairedTokenAddress\", \"type\": \"address\" } ], \"name\": \"createPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getNumPools\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"poolTemplate\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"name\": \"pools\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCollector\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCutRatio\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\r\n\r\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\r\n\r\nexport const chainlinkFeedAbi = [ {\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}, {\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { chainlinkFeedAbi } from './abis';\r\n\r\nexport class ChainlinkFeed extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, chainlinkFeedAbi);\r\n  }\r\n  async symbol() {\r\n    const res = await this._call('description');\r\n    return res.split('/').map((s) => s.trim()).join('')\r\n  }\r\n}\r\n","// this file is generated by script, don't modify it !!!\r\nexport const oracleFactoryChainlinkAbi = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"}],\"name\":\"AddFeed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"CreateOracle\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"symbols\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"feeds\",\"type\":\"address[]\"}],\"name\":\"addFeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { oracleFactoryChainlinkAbi } from '../abi/oracleFactoryChainlinkAbi.js'\r\n\r\nexport class OracleFactoryChainlink extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, oracleFactoryChainlinkAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async getFeed(symbol) {\r\n    const res = await this._call('getFeed', [symbol])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getOracle(symbol) {\r\n    const res = await this._call('getOracle', [symbol])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  async createOracle(accountAddress, symbol) {\r\n    return await this._transact('createOracle', [symbol], accountAddress)\r\n  }\r\n\r\n}","// this file is generated by script, don't modify it !!!\r\nexport const oracleFactoryOffChainAbi = [\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"string\",\r\n        \"name\": \"symbol\",\r\n        \"type\": \"string\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"signer\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"delayAllowance\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"oracle\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"CreateOracleOffChain\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"string\",\r\n        \"name\": \"symbol\",\r\n        \"type\": \"string\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"signer\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"delayAllowance\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"oracle\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"CreateVolatilityOracleOffChain\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" },\r\n      { \"internalType\": \"address\", \"name\": \"signer\", \"type\": \"address\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"delayAllowance\", \"type\": \"uint256\" }\r\n    ],\r\n    \"name\": \"createOracle\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" },\r\n      { \"internalType\": \"address\", \"name\": \"signer\", \"type\": \"address\" },\r\n      { \"internalType\": \"uint256\", \"name\": \"delayAllowance\", \"type\": \"uint256\" }\r\n    ],\r\n    \"name\": \"createVolatilityOracle\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }\r\n    ],\r\n    \"name\": \"getOracle\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }\r\n    ],\r\n    \"name\": \"getVolatilityOracle\",\r\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  }\r\n]\r\n\r\n","// this file is generated by script, don't modify it !!!\r\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\r\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\r\nimport { oracleFactoryOffChainAbi } from '../abi/oracleFactoryOffChainAbi.js'\r\n\r\nexport class OracleFactoryOffChain extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress, initialBlock) {\r\n    super(chainId, contractAddress, oracleFactoryOffChainAbi)\r\n    // for pool use\r\n    if (initialBlock) {\r\n      this.initialBlock = initialBlock\r\n    }\r\n  }\r\n\r\n  // query\r\n  async getOracle(symbol) {\r\n    const res = await this._call('getOracle', [symbol])\r\n    return deleteIndexedKey(res)\r\n  }\r\n  async getVolatilityOracle(symbol) {\r\n    const res = await this._call('getVolatilityOracle', [symbol])\r\n    return deleteIndexedKey(res)\r\n  }\r\n\r\n  // tx\r\n  async createOracle(accountAddress, symbol, signer, delayAllowance) {\r\n    return await this._transact('createOracle', [symbol, signer, delayAllowance], accountAddress)\r\n  }\r\n  async createVolatilityOracle(accountAddress, symbol, signer, delayAllowance) {\r\n    return await this._transact('createVolatilityOracle', [symbol, signer, delayAllowance], accountAddress)\r\n  }\r\n\r\n}","import { ContractBase } from '../../shared/contract/contract_base'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { pTokenLiteAbi } from './abis';\r\n\r\nconst processPosition = (res) => {\r\n  return {\r\n    volume: deriToNatural(res.volume),\r\n    cost: deriToNatural(res.cost),\r\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\r\n  }\r\n}\r\nexport class PTokenLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenLiteAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async ownerOf(tokenId) {\r\n    return await this._call('ownerOf', [tokenId]);\r\n  }\r\n  async getMargin(accountAddress) {\r\n    const res = await this._call('getMargin', [accountAddress]);\r\n    return deriToNatural(res)\r\n  }\r\n  async getPosition(accountAddress, symbolId) {\r\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\r\n    if (Array.isArray(res)) {\r\n      return processPosition(res)\r\n    } else {\r\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n  async getActiveSymbolIds() {\r\n    return await this._call('getActiveSymbolIds');\r\n  }\r\n  async isActiveSymbolId(symbolId) {\r\n    return await this._call('isActiveSymbolId', [symbolId]);\r\n  }\r\n  async isApprovedForAll(owner, operator) {\r\n    return await this._call('isApprovedForAll', [owner, operator]);\r\n  }\r\n  async getApproved(tokenId) {\r\n    return await this._call('getApproved', [tokenId]);\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    return await this._call('getNumPositionHolders', [symbolId]);\r\n  }\r\n\r\n  // === transaction ===\r\n}\r\n","import {\r\n  bTokenFactory,\r\n  deriToNatural,\r\n  fetchJson,\r\n  getHttpBase,\r\n} from '../../shared';\r\nimport { ContractBase } from '../../shared/contract/contract_base';\r\nimport { normalizeSymbolUnit } from '../../shared/config/token';\r\nimport { perpetualPoolLiteAbi } from './abis';\r\nimport { PTokenLite } from './p_token';\r\n\r\nexport class PerpetualPoolLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\r\n  }\r\n\r\n  async init() {\r\n    await this._init();\r\n    if (!this.pTokenAddress|| !this.pToken ) {\r\n      await  this.updateAddresses()\r\n      // console.log(this.addresses, this.parameters)\r\n      //this.bToken = bTokenFactory(this.chainId, bTokenAddress);\r\n      //this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\r\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress);\r\n\r\n    }\r\n  }\r\n\r\n\r\n  async updateAddresses() {\r\n    if (!this.bTokenAddress || !this.pTokenAddress) {\r\n     const res = await this._call('getAddresses');\r\n    // update this state\r\n     this.bTokenAddress = res.bTokenAddress;\r\n     this.lTokenAddress= res.lTokenAddress;\r\n     this.pTokenAddress= res.pTokenAddress;\r\n    }\r\n  }\r\n\r\n  async controller() {\r\n    const res = await this._call('controller');\r\n    return res\r\n  }\r\n\r\n  async getParameters() {\r\n    const res = await this._call('getParameters');\r\n    return {\r\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\r\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\r\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\r\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\r\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\r\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\r\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\r\n    };\r\n  }\r\n  async getSymbol(symbolId) {\r\n    const res = await this._call('getSymbol', [symbolId]);\r\n    return {\r\n      symbol: res.symbol,\r\n      oracleAddress: res.oracleAddress,\r\n      multiplier: deriToNatural(res.multiplier),\r\n      feeRatio: deriToNatural(res.feeRatio),\r\n      fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\r\n      price: deriToNatural(res.price),\r\n      cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\r\n      tradersNetVolume: deriToNatural(res.tradersNetVolume),\r\n      tradersNetCost: deriToNatural(res.tradersNetCost),\r\n    };\r\n  }\r\n  async getSymbols() {\r\n    await this.updateAddresses()\r\n    if (!this.pToken) {\r\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress)\r\n    }\r\n    // update this state\r\n    this.symbolIds = await this.pToken.getActiveSymbolIds()\r\n    this.symbols = await Promise.all(\r\n      this.symbolIds.reduce((acc, i) => acc.concat([this.getSymbol(i)]), [])\r\n    );\r\n    return this.symbols\r\n  }\r\n  async getBTokenSymbol() {\r\n    await this.updateAddresses()\r\n    if (!this.bToken) {\r\n      this.bToken = bTokenFactory(this.chainId, this.bTokenAddress)\r\n    }\r\n    // update this state\r\n    this.bTokenSymbol = await this.bToken.symbol()\r\n    return this.bTokenSymbol\r\n  }\r\n  async getPoolExtraInfo() {\r\n    const url = `${getHttpBase()}/pool_extra_info/${this.contractAddress}`\r\n    const res = await fetchJson(url)\r\n    //console.log(res)\r\n    if (res.success) {\r\n      return res.data\r\n    } else {\r\n\r\n      console.log(`-- getInitialBlock(): ${url} => ${res.message}`)\r\n      return  {\r\n        block_number: '1000000000',\r\n        version: '',\r\n      }\r\n    }\r\n  }\r\n  async getConfig() {\r\n    const [bToken, symbols, extraInfo] = await Promise.all([\r\n      this.getBTokenSymbol(),\r\n      this.getSymbols(),\r\n      this.getPoolExtraInfo(),\r\n    ])\r\n    return {\r\n      pool: this.contractAddress,\r\n      pToken: this.pTokenAddress,\r\n      lToken: this.lTokenAddress,\r\n      bToken: this.bTokenAddress,\r\n      bTokenSymbol: bToken,\r\n      symbols: symbols.map((s, index) => ({\r\n        symbolId: this.symbolIds[index],\r\n        symbol: s.symbol,\r\n        unit: normalizeSymbolUnit(s.symbol),\r\n      })),\r\n      initialBlock:extraInfo.block_number,\r\n      type: 'perpetual',\r\n      version:extraInfo.version,\r\n      versionId: 'v2_lite',\r\n      chainId: this.chainId,\r\n    }\r\n  }\r\n\r\n  // tx\r\n  async addSymbol(accountAddress, parameters) {\r\n    return await this._transact('addSymbol', parameters, accountAddress)\r\n  }\r\n\r\n  async removeSymbol(accountAddress, symbolId) {\r\n    return await this._transact('removeSymbol', [symbolId], accountAddress)\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { perpetualPoolLiteManagerAbi } from './abis.js'\r\n\r\nexport class PerpetualPoolLiteManager extends ContractBase {\r\n  // init\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, perpetualPoolLiteManagerAbi)\r\n  }\r\n\r\n  // query\r\n  async getNumPools() {\r\n    const res = await this._call('getNumPools', [])\r\n    return res\r\n  }\r\n  async poolTemplate() {\r\n    const res = await this._call('poolTemplate', [])\r\n    return res\r\n  }\r\n  async pools(poolId) {\r\n    const res = await this._call('pools', [poolId])\r\n    return res\r\n  }\r\n  async protocolFeeCollector() {\r\n    const res = await this._call('protocolFeeCollector', [])\r\n    return res\r\n  }\r\n  async protocolFeeCutRatio() {\r\n    const res = await this._call('protocolFeeCutRatio', [])\r\n    return res\r\n  }\r\n\r\n  // tx\r\n  async createPool(accountAddress, parameters, bTokenAddress, pairedTokenAddress) {\r\n    return await this._transact('createPool', [parameters, bTokenAddress, pairedTokenAddress], accountAddress)\r\n  }\r\n\r\n}","import { ContractBase } from '../../shared/contract/contract_base';\r\nimport { perpetualPoolLiteViewerAbi } from './abis';\r\n\r\nexport class PerpetualPoolLiteViewer extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\r\n  }\r\n  async getOffChainOracleSymbols(poolAddress) {\r\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\r\n    //return res.filter((s) => s && s !== '');\r\n    return res\r\n  }\r\n}\r\n","import { factory } from '../shared/utils/factory'\r\nimport { OracleFactoryChainlinkAdapter, OracleFactoryOffChainAdapter } from './adapter'\r\nimport { ChainlinkFeed } from './contract/chainlink_feed'\r\nimport { OracleFactoryChainlink } from './contract/gen/OracleFactoryChainlink'\r\nimport { OracleFactoryOffChain } from './contract/gen/OracleFactoryOffChain'\r\nimport { PerpetualPoolLite } from './contract/perpetual_pool'\r\nimport { PerpetualPoolLiteManager } from './contract/perpetual_pool_lite_manager'\r\nimport { PerpetualPoolLiteViewer } from './contract/perpetual_pool_lite_viewer'\r\n\r\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite)\r\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)\r\nexport const perpetualPoolLiteManagerFactory = factory(PerpetualPoolLiteManager)\r\nexport const chainlinkFeedFactory = factory(ChainlinkFeed)\r\n\r\n\r\nexport const oracleFactoryChainlinkFactory = factory(OracleFactoryChainlinkAdapter(OracleFactoryChainlink))\r\nexport const oracleFactoryOffChainFactory = factory(OracleFactoryOffChainAdapter(OracleFactoryOffChain))","import { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseContract extends ContractBase {\r\n  constructor(contractAddress) {\r\n    super('97', contractAddress, CONTRACT_ABI);\r\n  }\r\n  async getValues(keyArray) {\r\n    return await this._call('getValues', [keyArray]);\r\n  }\r\n}\r\n","//import { DatabaseBaseContract } from './database_base'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseWormholeContract extends ContractBase {\r\n  constructor(contractAddress) {\r\n    super('97', contractAddress, CONTRACT_ABI);\r\n  }\r\n\r\n  async signature(accountAddress) {\r\n    return await this._call('signature', [accountAddress])\r\n  }\r\n}\r\n","//import { DatabaseBaseContract } from './database_base'\r\nimport { ContractBase } from '../contract_base';\r\n\r\n/* eslint-disable */\r\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n/* eslint-enable */\r\n\r\nexport class DatabaseAirdropContract extends ContractBase {\r\n  constructor(contractAddress) {\r\n    super('97', contractAddress, CONTRACT_ABI)\r\n  }\r\n  async getValues(keyArray) {\r\n    return await this._call('getValues', [keyArray])\r\n  }\r\n}\r\n","import { DeriEnv } from './env';\r\nimport jsonConfig from '../resources/config.json';\r\nimport { VERSIONS } from './version';\r\n\r\nexport const getJsonConfig = (version, env) => {\r\n  env = env || DeriEnv.get();\r\n  // for browser and nodejs\r\n  let configs =\r\n    typeof jsonConfig === 'object' ? jsonConfig : JSON.parse(jsonConfig);\r\n  if (configs[version] && VERSIONS.includes(version)) {\r\n    configs = configs[version];\r\n    if (['prod', 'dev', 'testnet'].includes(env)) {\r\n      if (configs && configs[env]) {\r\n        return configs[env];\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error(\r\n      `getJsonConfig(): invalid config of version '${version}' and env '${env}'`\r\n    );\r\n  }\r\n};\r\n","import { ContractBase } from \"../contract_base\";\r\nimport { symbolOracleOffChainAbi } from '../abis';\r\nimport { deriToNatural } from '../../utils';\r\n\r\nexport class SymbolOracleOffChain extends ContractBase {\r\n  constructor(chainId, address) {\r\n    super(chainId, address, symbolOracleOffChainAbi);\r\n  }\r\n  async getPrice() {\r\n    const res = await this._call('getPrice', []);\r\n    return deriToNatural(res);\r\n  }\r\n  async signer() {\r\n    await this._init();\r\n    const res = await this.contract.methods['signer']().call();\r\n    return res;\r\n  }\r\n  async signatory() {\r\n    await this._init();\r\n    const res = await this.contract.methods['signatory']().call();\r\n    return res;\r\n  }\r\n}","import { ContractBase } from \"../contract_base\";\r\nimport { wooOracleAbi } from '../abis';\r\nimport { deriToNatural } from \"../../utils\";\r\n\r\nexport class WooOracle extends ContractBase {\r\n  constructor(chainId, address, symbol, decimal='18') {\r\n    super(chainId, address, wooOracleAbi)\r\n    this.symbol = symbol\r\n    this.decimal = decimal\r\n  }\r\n\r\n  async getPrice() {\r\n    //console.log('hit woo oracle')\r\n    const res = await this._call('getPrice');\r\n    if (res) {\r\n      return deriToNatural(res).toString()\r\n    }\r\n  }\r\n}\r\n","import { isUsedRestOracle } from '../config/token';\r\nimport { RestOracle } from '../utils/oracle';\r\nimport { WrappedOracle } from '../contract/oracle/wrapped_oracle';\r\nimport { factory } from '../utils/factory';\r\nimport { SymbolOracleOffChain } from '../contract/oracle/symbol_oracle_off_chain';\r\nimport { WooOracle } from '../contract/oracle/woo_oracle';\r\n\r\nconst wooOracleAddresses = [\r\n  '0xC686B6336c0F949EAdFa5D61C4aAaE5Fe0687302',\r\n  '0x60Dda0aD29f033d36189bCe4C818fe9Ce3a95206',\r\n  '0xa356c0559e0DdFF9281bF8f061035E7097a84Fa4',\r\n]\r\n\r\nexport const oracleFactory = (function () {\r\n  const instanceMap = {};\r\n  return (chainId, address, symbol, decimal = '18') => {\r\n    const key = address;\r\n    if (Object.keys(instanceMap).includes(key)) {\r\n      return instanceMap[key];\r\n    } else {\r\n      if (isUsedRestOracle(symbol)) {\r\n        instanceMap[key] = RestOracle(symbol);\r\n      } else if (wooOracleAddresses.includes(address)) {\r\n        instanceMap[key] = wooOracleFactory(chainId, address, symbol, decimal);\r\n      } else if (['56', '137', '97', '80001'].includes(chainId)) {\r\n        instanceMap[key] = wrappedOracleFactory(chainId, address, symbol, decimal);\r\n      } else {\r\n        throw new Error(\r\n          `please setup oracle contract for the chain(${chainId})`\r\n        );\r\n      }\r\n      return instanceMap[key];\r\n    }\r\n  };\r\n})();\r\n\r\nexport const wrappedOracleFactory = factory(WrappedOracle);\r\nexport const wooOracleFactory = factory(WooOracle);\r\nexport const symbolOracleOffChainFactory = factory(SymbolOracleOffChain);\r\n","import { catchApiError } from \"../../shared/utils/api\"\r\nimport { DeriEnv } from \"../../shared/config/env\"\r\nimport { getJsonConfig } from \"../../shared/config/config\"\r\nimport { normalizeChainId, toChecksumAddress, validateObjectKeyExist } from \"../../shared/utils\"\r\nimport { poolProcessor, poolValidator } from \"../../shared/config/config_processor\"\r\nimport { fetchJson, getBlockInfo, getHttpBase, getPastEvents, getPoolViewerConfig } from \"../../shared\"\r\nimport { expandPoolConfigV2LiteOpen, getOracleFactoryChainlinkConfig, getPoolV2LiteManagerConfig, openPoolChainIds } from \"../config\"\r\nimport { oracleFactoryChainlinkFactory, perpetualPoolLiteFactory, perpetualPoolLiteManagerFactory, perpetualPoolLiteViewerFactory } from \"../factory\"\r\n\r\nexport const getPoolOpenConfigList = async (...args) => {\r\n  return catchApiError(\r\n    async () => {\r\n      let configs = [];\r\n      const chainIds = openPoolChainIds()\r\n      configs = await chainIds.reduce(async (acc, chainId) => {\r\n        //console.log('chainId', chainId)\r\n        const { address: poolManagerAddress } = getPoolV2LiteManagerConfig(\r\n          chainId\r\n        );\r\n        const poolManager = perpetualPoolLiteManagerFactory(\r\n          chainId,\r\n          poolManagerAddress\r\n        );\r\n        // get pool numbers\r\n        const poolNums = parseInt(await poolManager.getNumPools());\r\n        const numsArray = [...Array(poolNums).keys()];\r\n        // get pool addresses\r\n        const addresses = await Promise.all(\r\n          numsArray.reduce(\r\n            (acc, id) => acc.concat([poolManager.pools(id.toString())]),\r\n            []\r\n          )\r\n        );\r\n        // get pools config\r\n        const res = await Promise.all(\r\n          addresses.reduce(\r\n            (acc, address) =>\r\n              acc.concat([\r\n                perpetualPoolLiteFactory(chainId, address).getConfig(),\r\n              ]),\r\n            []\r\n          )\r\n        );\r\n        return acc.concat(res);\r\n      }, []);\r\n      return configs.sort((a,b) => parseInt(b.initialBlock) - parseInt(a.initialBlock));\r\n    },\r\n    args,\r\n    'getPoolOpenConfigList',\r\n    []\r\n  );\r\n};\r\n\r\nexport const getPoolOpenOracleList = async(...args) => {\r\n  return catchApiError(\r\n    async (chainId, accountAddress) => {\r\n    chainId = normalizeChainId(chainId)\r\n    const oracleFactoryConfig = getOracleFactoryChainlinkConfig(chainId);\r\n    const oracleFactory = oracleFactoryChainlinkFactory(\r\n      chainId,\r\n      oracleFactoryConfig.address\r\n    );\r\n    await oracleFactory._init()\r\n    let eventBlock, oracles= [];\r\n    const res = await fetchJson(\r\n      `${getHttpBase()}/oracle/${chainId}/${accountAddress}`\r\n    );\r\n    if (res && res.success) {\r\n      eventBlock = parseInt(res.data.eventBlock);\r\n      if (res.data.oracles && Array.isArray(res.data.oracles)) {\r\n        oracles = res.data.oracles;\r\n      }\r\n      if (eventBlock === 0) {\r\n        eventBlock = parseInt(oracleFactoryConfig.initialBlock);\r\n      }\r\n      const toBlock = await getBlockInfo(chainId, 'latest');\r\n      // fetch online\r\n      let events = await getPastEvents(\r\n        chainId,\r\n        oracleFactory.contract,\r\n        'CreateOracle',\r\n        {},\r\n        eventBlock,\r\n        toBlock.number\r\n      );\r\n      if (events.length > 0) {\r\n        for (let i = 0; i < events.length; i++) {\r\n          const event = events[i];\r\n          const info = event.returnValues;\r\n          oracles.push({\r\n            chainId,\r\n            symbol: info.symbol,\r\n            address: info.oracle,\r\n            blockNumber: event.blockNumber,\r\n          });\r\n        }\r\n        return oracles\r\n          .sort((a, b) => parseInt(b.blockNumber) - parseInt(a.blockNumber))\r\n          .reduce((acc, i) => {\r\n            return acc.find((a) => a.symbol === i.symbol) ? acc : [...acc, i];\r\n          }, []);\r\n      } else {\r\n        return oracles\r\n      }\r\n    } else {\r\n      return [];\r\n    }\r\n      //return getOracleConfigList('v2_lite_open', DeriEnv.get()).filter((o) => o.chainId === chainId);\r\n    },\r\n    args,\r\n    'getPoolOpenOracleInfos',\r\n    []\r\n  );\r\n};\r\n\r\nexport const getPoolController = async(chainId, poolAddress) => {\r\n  chainId = normalizeChainId(chainId);\r\n  return catchApiError(\r\n    async (chainId, poolAddress) => {\r\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      return await perpetualPoolLite.controller();\r\n    },\r\n    [chainId, poolAddress],\r\n    'getPoolController',\r\n    ''\r\n  );\r\n}\r\nexport const isPoolController = async (chainId, poolAddress, controller) => {\r\n  chainId = normalizeChainId(chainId);\r\n  return catchApiError(\r\n    async (chainId, poolAddress, controller) => {\r\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      const poolController = await perpetualPoolLite.controller();\r\n      return (\r\n        toChecksumAddress(controller) === toChecksumAddress(poolController)\r\n      );\r\n    },\r\n    [chainId, poolAddress, controller],\r\n    'isPoolController',\r\n    false\r\n  );\r\n};\r\n\r\nexport const getExpandedPoolOpenConfigList = async () => {\r\n  const env = DeriEnv.get()\r\n  const version = 'v2_lite_open'\r\n  let config = getJsonConfig(version, env);\r\n\r\n  config.pools =  await getPoolOpenConfigList()\r\n  const pools = config.pools\r\n  if (pools && Array.isArray(pools)) {\r\n    for (let i = 0; i < pools.length; i++) {\r\n      poolProcessor[version](pools[i])\r\n      poolValidator[version](pools[i])\r\n    }\r\n  }\r\n  validateObjectKeyExist(['oracle'], config, 'oracle');\r\n  return expandPoolConfigV2LiteOpen(config);\r\n}\r\n\r\nexport const getPoolAllSymbolNames = async (chainId, poolAddress) => {\r\n  return catchApiError(\r\n    async (chainId, poolAddress) => {\r\n      const viewerAddress = getPoolViewerConfig(chainId, 'v2_lite');\r\n      const poolViewer = perpetualPoolLiteViewerFactory(chainId, viewerAddress);\r\n      return await poolViewer.getOffChainOracleSymbols(poolAddress);\r\n    },\r\n    [chainId.toString(), poolAddress],\r\n    'getPoolAllSymbolNames ',\r\n    []\r\n  );\r\n};\r\n\r\nexport const getPoolAcitveSymbolIds = async (...args) => {\r\n  return catchApiError(\r\n    async (chainId, poolAddress) => {\r\n      chainId = chainId.toString()\r\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\r\n      await perpetualPoolLite.init()\r\n      return await perpetualPoolLite.pToken.getActiveSymbolIds()\r\n    },\r\n    args,\r\n    'getPoolActiveSymbolIds',\r\n    []\r\n  );\r\n};\r\n\r\n\r\n// v2lite open config list cache\r\nexport const openConfigListCache = (() => {\r\n  let cache = {\r\n    data: [],\r\n    timestamp: 0,\r\n  };\r\n  return {\r\n    async update() {\r\n      const oldData = cache.data\r\n      try {\r\n        if (Date.now()/1000 - cache.timestamp >= 10) {\r\n        //if (Date.now()/1000 - cache.timestamp > 60) {\r\n          cache.data = await getPoolOpenConfigList()\r\n          cache.timestamp = Date.now()/1000\r\n          //res = 'v2 lite open config list is updated'\r\n        }\r\n      } catch(err) {\r\n        console.log(err)\r\n        cache.data = oldData\r\n        //res = `v2 lite open config list updating with error: ${err}`\r\n      }\r\n      // res && console.log(res)\r\n      return cache.data\r\n    },\r\n    updatedAt() {\r\n      return cache.timestamp\r\n    },\r\n    get() {\r\n      return cache.data\r\n    }\r\n  }\r\n})()\r\n","import {\r\n  getDBAddress,\r\n  getDBWormholeAddress,\r\n  getDBAirdropAddress,\r\n  DeriEnv,\r\n} from '../config';\r\nimport {\r\n  DatabaseAirdropContract,\r\n  DatabaseContract,\r\n  DatabaseWormholeContract,\r\n} from '../contract';\r\n\r\nexport const databaseFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBAddress(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseActivityFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return () => {\r\n    const address = DeriEnv.get() === 'prod' ? '0x75E04C816F206939a92AE7B23015ce3ef21aE571' : '0x7C1267188379f57d92e640E519151229E1eA5565'\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseDeriVoteFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return () => {\r\n    const address =\r\n      DeriEnv.get() === 'prod'\r\n        ? '0x9Ced1529C238bD36B3A05cECF979a30c0C40b286'\r\n        : '0x7C1267188379f57d92e640E519151229E1eA5565';\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseWormholeFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBWormholeAddress(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseWormholeContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n\r\nexport const databaseAirdropFactory = (() => {\r\n  const databaseInstanceMap = {};\r\n  return (useProductionDB = false) => {\r\n    const address = getDBAirdropAddress(DeriEnv.get(), useProductionDB);\r\n    const key = address;\r\n    //console.log('---airdrop key', key)\r\n    if (Object.keys(databaseInstanceMap).includes(key)) {\r\n      return databaseInstanceMap[key];\r\n    }\r\n    const database = new DatabaseAirdropContract(address);\r\n    databaseInstanceMap[key] = database;\r\n    return database;\r\n  };\r\n})();\r\n","import Web3 from 'web3';\r\nimport { normalizeChainId } from '../utils/validate';\r\nimport { getChainProviderUrl } from '../utils/chain';\r\nimport { isBrowser, isJsDom } from '../utils/convert';\r\n\r\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\nexport const web3Factory = (function () {\r\n  const web3InstanceMap = {};\r\n  let pending = {}\r\n  let walletChainId = null\r\n  return {\r\n    async get(chainId) {\r\n      chainId = normalizeChainId(chainId)\r\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\r\n        //console.log('hit web3 cache')\r\n        return web3InstanceMap[chainId];\r\n      }\r\n      // for mining page should not depends wallet network\r\n      if (!walletChainId && typeof window === 'object' && window.ethereum) {\r\n        walletChainId = await window.ethereum.request({ method: 'net_version' })\r\n      }\r\n      // using metaMask ethereum object\r\n      if (\r\n        isBrowser() &&\r\n        !isJsDom() &&\r\n        typeof window.ethereum === 'object' &&\r\n        walletChainId &&\r\n        chainId === walletChainId.toString()\r\n      ) {\r\n        //console.log('new ethereum web3 cache')\r\n        web3InstanceMap[chainId] = new Web3(window.ethereum);\r\n        return web3InstanceMap[chainId];\r\n      } else {\r\n        if (pending[chainId]) {\r\n          // wait for init\r\n          let retry = 8\r\n          while (retry > 0) {\r\n            await delay(500)\r\n            if (Object.keys(web3InstanceMap).includes(chainId)) {\r\n              // console.log('hit web3 cache')\r\n              return web3InstanceMap[chainId];\r\n            } else {\r\n              retry -= 1\r\n            }\r\n          }\r\n          // timeout\r\n          const providerUrl = await getChainProviderUrl(chainId);\r\n          //console.log('new web3 cache')\r\n          web3InstanceMap[chainId] = new Web3(\r\n            new Web3.providers.HttpProvider(providerUrl)\r\n          );\r\n          return web3InstanceMap[chainId];\r\n        } else {\r\n          // first init\r\n          pending[chainId] = true\r\n          try {\r\n            const providerUrl = await getChainProviderUrl(chainId);\r\n            //console.log('new web3 cache')\r\n            web3InstanceMap[chainId] = new Web3(\r\n              new Web3.providers.HttpProvider(providerUrl)\r\n            );\r\n          } catch(err) {\r\n            console.log(err.toString())\r\n          } finally {\r\n            delete pending[chainId]\r\n          }\r\n          return web3InstanceMap[chainId];\r\n        }\r\n      }\r\n    },\r\n  };\r\n})();","\r\n/* eslint-disable */\r\nexport const perpetualPoolLiteAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address[5]\", \"name\": \"addresses\", \"type\": \"address[5]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"indexPrice\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"lastBlockNumber\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"lastBlockTimestamp\", \"type\": \"uint256\" } ], \"name\": \"executeMigrationSwitchToTimestamp\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getFundingPeriod\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"poolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"period\", \"type\": \"uint256\" } ], \"name\": \"setFundingPeriod\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const perpetualPoolLiteOldAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address[5]\", \"name\": \"addresses\", \"type\": \"address[5]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLastUpdateBlock\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLiquidity\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\r\nexport const bTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const lTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\r\n/* eslint-disable */","import { DeriEnv } from \"../shared/config/env\";\r\nimport { normalizeChainId } from \"../shared/utils/validate\";\r\n\r\nexport const openPoolChainIds = () => {\r\n  const configs = {\r\n    prod: ['56'],\r\n    dev: ['97'],\r\n    testnet: ['97'],\r\n  }\r\n  const env = DeriEnv.get()\r\n  if (Array.isArray(configs[env])) {\r\n    return configs[env]\r\n  } else {\r\n    throw new Error(`-- invalid env for openPoolChainIds: ${env}`)\r\n  }\r\n};\r\n\r\nexport const getPoolV2LiteManagerConfig = (chainId) => {\r\n  chainId = normalizeChainId(chainId)\r\n  const configs = {\r\n    prod: [\r\n      {\r\n        chainId: \"56\",\r\n        address: \"0x5e3318aeaa226dc11571f19b96240d88b64702dc\",\r\n        initialBlock: \"10133599\",\r\n      },\r\n    ],\r\n    dev: [\r\n      {\r\n        chainId: \"97\",\r\n        address: \"0x7A55ed377361802fad1Ae3d944cDbAA3c7694757\",\r\n        initialBlock: \"11034400\",\r\n      },\r\n    ],\r\n    testnet: [\r\n      {\r\n        chainId: \"97\",\r\n        address: \"0x7A55ed377361802fad1Ae3d944cDbAA3c7694757\",\r\n        initialBlock: \"11034400\",\r\n      },\r\n    ],\r\n  };\r\n  const env = DeriEnv.get();\r\n  const res = configs[env].find((c) => c.chainId === chainId);\r\n  if (res && res.address) {\r\n    return res\r\n  } else {\r\n    throw new Error(`-- getPoolV2LiteManagerConfig: cannot find config with env(${env}) and chainId(${chainId})`)\r\n  }\r\n};\r\n\r\nexport const getOracleFactoryChainlinkConfig = (chainId) => {\r\n  chainId = normalizeChainId(chainId)\r\n  const configs = {\r\n    prod: [\r\n      {\r\n        chainId: '56',\r\n        address: '0x5052fa10d68F4146B66bc15fd8cCb1674B482026',\r\n        initialBlock: '11017943',\r\n      },\r\n    ],\r\n    dev: [\r\n      {\r\n        chainId: '97',\r\n        address: '0xFD1f981375f95e971E8fC0756f4daAF5784e5376',\r\n        initialBlock: '12440610',\r\n      },\r\n    ],\r\n  };\r\n  const env = DeriEnv.get();\r\n  const res = configs[env].find((c) => c.chainId === chainId);\r\n  if (res && res.address) {\r\n    return res\r\n  } else {\r\n    throw new Error(`-- getOracleFactoryChainlinkConfig: cannot find config with env(${env}) and chainId(${chainId})`)\r\n  }\r\n};\r\n\r\n\r\nexport const expandPoolConfigV2LiteOpen = (config) => {\r\n  const pools = config.pools;\r\n  return pools\r\n    .map((pool) => {\r\n      let result = [];\r\n      for (let i = 0; i < pool.symbols.length; i++) {\r\n        const symbol = pool.symbols[i];\r\n        result.push({\r\n          pool: pool.pool,\r\n          pToken: pool.pToken,\r\n          lToken: pool.lToken,\r\n          initialBlock: pool.initialBlock,\r\n          chainId: pool.chainId,\r\n          bToken: pool.bToken,\r\n          bTokenSymbol: pool.bTokenSymbol,\r\n          symbol: symbol.symbol,\r\n          symbolId: symbol.symbolId,\r\n          offchainSymbolIds: pool.offchainSymbolIds,\r\n          offchainSymbols: pool.offchainSymbols,\r\n          unit: symbol.unit,\r\n          version: 'v2_lite_open',\r\n          isOpen: true,\r\n        });\r\n      }\r\n      return result;\r\n    })\r\n    .flat();\r\n};","import { validateObjectKeyExist, validateIsArray } from '../utils';\r\nimport {\r\n  isUsedRestOracle,\r\n  mapToBToken,\r\n  mapToSymbol,\r\n  getVolatilitySymbols,\r\n} from './token';\r\n\r\nconst validatePoolV2 = (pool) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'router',\r\n      'initialBlock',\r\n      'bTokens',\r\n      'symbols',\r\n      'chainId',\r\n      'symbolCount',\r\n      'bTokenCount',\r\n    ],\r\n    pool,\r\n    ''\r\n  );\r\n  validateIsArray(pool['bTokens'], 'bTokens');\r\n  pool['bTokens'].forEach((prop) => {\r\n    validateObjectKeyExist(\r\n      ['bTokenId', 'bTokenSymbol', 'bToken'],\r\n      prop,\r\n      'bToken'\r\n    );\r\n  });\r\n  validateIsArray(pool['symbols'], 'symbols');\r\n  pool['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n};\r\n\r\nconst processPoolV2 = (pool) => {\r\n  // process pool \r\n  pool['bTokenCount'] = pool['bTokens'].length;\r\n  pool['symbolCount'] = pool['symbols'].length;\r\n  pool['bTokens'].forEach((b) => b['bTokenSymbol'] = mapToBToken(b['bTokenSymbol']))\r\n  pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\r\n};\r\n\r\nconst validatePoolV2Lite = (pool) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'initialBlock',\r\n      'bToken',\r\n      'bTokenSymbol',\r\n      'symbols',\r\n      'chainId',\r\n      'offchainSymbolIds',\r\n      'offchainSymbols',\r\n      'symbolCount',\r\n    ],\r\n    pool,\r\n    ''\r\n  );\r\n  validateIsArray(pool['symbols'], 'symbols');\r\n  pool['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n  validateIsArray(pool['offchainSymbolIds'], 'offchainSymbolIds');\r\n  validateIsArray(pool['offchainSymbols'], 'offchainSymbols');\r\n};\r\n\r\nconst processPoolV2Lite = (pool) => {\r\n  // process pool\r\n  if (!pool['symbolCount']) {\r\n    pool['symbolCount'] = pool['symbols'].length;\r\n  }\r\n  if (!pool['offchainSymbolIds'] && !pool['offchainSymbols']) {\r\n    pool['offchainSymbolIds'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\r\n    pool['offchainSymbols'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\r\n    pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\r\n  }\r\n};\r\n\r\nconst validateConfigV2LiteOpen = (config) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'initialBlock',\r\n      'bToken',\r\n      'bTokenSymbol',\r\n      'symbols',\r\n      'chainId',\r\n      'offchainSymbolIds',\r\n      'offchainSymbols',\r\n      'symbolCount',\r\n    ],\r\n    config,\r\n    ''\r\n  );\r\n  validateIsArray(config['symbols'], 'symbols');\r\n  config['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n  validateIsArray(config['offchainSymbolIds'], 'offchainSymbolIds');\r\n};\r\n\r\nconst processConfigV2LiteOpen = (config) => {\r\n  // process config\r\n  if (!config['symbolCount']) {\r\n    config['symbolCount'] = config['symbols'].length;\r\n  }\r\n  if (!config['offchainSymbolIds'] && !config['offchainSymbols']) {\r\n    config['offchainSymbolIds'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\r\n    config['offchainSymbols'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\r\n    config['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\r\n  }\r\n};\r\n\r\nconst validatePoolOption = (pool) => {\r\n  validateObjectKeyExist(\r\n    [\r\n      'pool',\r\n      'pToken',\r\n      'lToken',\r\n      'initialBlock',\r\n      'bToken',\r\n      // 'pricer',\r\n      'bTokenSymbol',\r\n      'symbols',\r\n      'chainId',\r\n      // 'offchainSymbolIds',\r\n      // 'offchainSymbols',\r\n      'symbolCount',\r\n      'volatilitySymbols',\r\n    ],\r\n    pool,\r\n    ''\r\n  );\r\n  validateIsArray(pool['symbols'], 'symbols');\r\n  pool['symbols'].forEach((prop) => {\r\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\r\n  });\r\n  // validateIsArray(pool['offchainSymbolIds'], 'offchainSymbolIds');\r\n  // validateIsArray(pool['offchainSymbols'], 'offchainSymbols');\r\n  validateIsArray(pool['volatilitySymbols'], 'volatilitySymbols');\r\n};\r\n\r\nconst processPoolOption = (pool) => {\r\n  // process pool \r\n  pool['symbolCount'] = pool['symbols'].length;\r\n  if (!pool['volatilitySymbols']) {\r\n    // pool['offchainSymbolIds'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\r\n    // pool['offchainSymbols'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\r\n    pool['volatilitySymbols'] = getVolatilitySymbols(\r\n      pool['symbols'].map((s) => s.symbol)\r\n    ); \r\n    pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\r\n  }\r\n};\r\n\r\nexport const poolProcessor = {\r\n  v2: processPoolV2,\r\n  v2_lite: processPoolV2Lite,\r\n  v2_lite_open: processConfigV2LiteOpen,\r\n  option: processPoolOption,\r\n};\r\n\r\nexport const poolValidator = {\r\n  v2: validatePoolV2,\r\n  v2_lite: validatePoolV2Lite,\r\n  v2_lite_open: validateConfigV2LiteOpen,\r\n  option: validatePoolOption,\r\n};","import { getJsonConfig } from './config';\r\nimport { DeriEnv } from './env';\r\nimport { mapToSymbolInternal } from './token';\r\n\r\nexport const getOracleConfigList = (version='v2', env) => {\r\n  const config = getJsonConfig(version, env || DeriEnv.get())\r\n  return config.oracle\r\n};\r\n\r\nexport const getOracleConfig = (version='v2', chainId, symbol) => {\r\n  symbol = mapToSymbolInternal(symbol)\r\n  const oracles = getOracleConfigList(version)\r\n  const filteredByChainId = oracles.filter((c) =>\r\n    symbol\r\n      ? c.chainId === chainId && c.symbol === symbol\r\n      : c.chainId === chainId\r\n  );\r\n  if (filteredByChainId.length > 0) {\r\n    if (symbol) {\r\n      return filteredByChainId[0];\r\n    } else {\r\n      return filteredByChainId;\r\n    }\r\n  }\r\n  //console.log(`getOracleConfig(): invalid chainId(${chainId}) or symbol(${symbol}).`);\r\n};\r\n","import {\r\n  getChainProviderUrls,\r\n  getDailyBlockNumberConfig,\r\n} from '../config/chain';\r\nimport { normalizeChainId } from './validate';\r\nimport { getLatestRPCServer } from './network';\r\n\r\nexport const getChainProviderUrl = async (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  const urls = getChainProviderUrls(chainId);\r\n  if (urls.length > 0) {\r\n   const url =  await getLatestRPCServer(urls);\r\n   // console.log('url', url)\r\n   return url\r\n  } else {\r\n    throw new Error(\r\n      `Cannot find the chain provider url with chainId: ${chainId}`\r\n    );\r\n  }\r\n};\r\n\r\nexport const getDailyBlockNumber = (chainId) => {\r\n  const blockNumbers = getDailyBlockNumberConfig();\r\n  if (blockNumbers[chainId]) {\r\n    return parseInt(blockNumbers[chainId]);\r\n  } else {\r\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\r\n  }\r\n};\r\n\r\nexport const getNetworkName = (chainId) => {\r\n  chainId = normalizeChainId(chainId);\r\n  let poolNetwork;\r\n  switch (chainId) {\r\n    case '1':\r\n      poolNetwork = 'ethereum';\r\n      break;\r\n    case '56':\r\n      poolNetwork = 'bsc';\r\n      break;\r\n    case '128':\r\n      poolNetwork = 'heco';\r\n      break;\r\n    case '3':\r\n      poolNetwork = 'ropsten';\r\n      break;\r\n    case '42':\r\n      poolNetwork = 'kovan';\r\n      break;\r\n    case '97':\r\n      poolNetwork = 'bsctestnet';\r\n      break;\r\n    case '256':\r\n      poolNetwork = 'hecotestnet';\r\n      break;\r\n    case '137':\r\n      poolNetwork = 'matic';\r\n      break;\r\n    case '80001':\r\n      poolNetwork = 'mumbai';\r\n      break;\r\n    default:\r\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\r\n  }\r\n  return poolNetwork;\r\n};","import { hexToNumber, fromWei } from '../utils';\r\nimport { web3Factory } from '../factory';\r\nimport { normalizeAddress } from '../utils';\r\n\r\n/**\r\n * check ethereum client status for web browser\r\n * @function\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.isMetaMask - check if it is MetaMask client\r\n * @returns {boolean} response.[error] - error message when request failed\r\n */\r\nexport const hasWallet = () => {\r\n  if (window.ethereum && window.ethereum.isMetaMask) {\r\n    return { success: true, isMetaMask: true };\r\n  }\r\n  return {\r\n    success: false,\r\n    error:\r\n      'The browser is not support ethereum wallet, please install MetaMask to proceed.',\r\n  };\r\n};\r\n\r\n/**\r\n *  Connect wallet using MetaMask account\r\n * @async\r\n * @function\r\n * @param {function} [handleChainChanged] - Callback when chainId changed\r\n * @param {function} [handleAccountChanged]  - callback when account changed\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.chainId - chain Id\r\n * @returns {string} response.account - account address\r\n * @returns {boolean} response.[error] - error message when request failed\r\n */\r\nexport const connectWallet = async (\r\n  handleChainChanged,\r\n  handleAccountChanged\r\n) => {\r\n  if (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {\r\n    const accounts = await window.ethereum.request({\r\n      method: 'eth_requestAccounts',\r\n    });\r\n    const chainId = parseInt(\r\n      await window.ethereum.request({ method: 'net_version' })\r\n    );\r\n    // const chainId = hexToNumber(\r\n    //   await window.ethereum.request({ method: 'eth_chainId' })\r\n    // );\r\n    const account = Array.isArray(accounts) && accounts[0];\r\n\r\n    // await web3.eth.requestAccounts().then(console.log)\r\n    window.ethereum.on('accountsChanged', (accounts) => {\r\n      let account;\r\n      if (accounts.length > 0) {\r\n        account = accounts[0];\r\n      } else {\r\n        account = '';\r\n      }\r\n      if (typeof handleAccountChanged === 'function') {\r\n        handleAccountChanged(account);\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n      //console.log('accountChanged', account);\r\n    });\r\n    window.ethereum.on('chainChanged', (chainId) => {\r\n      let res = hexToNumber(chainId);\r\n      if (typeof handleChainChanged === 'function') {\r\n        handleChainChanged(res);\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n      //console.log('chainChanged', res);\r\n    });\r\n    return { success: true, account, chainId };\r\n  }\r\n  return {\r\n    success: false,\r\n    error: 'Cannot connect wallet, please install MetaMask.',\r\n  };\r\n};\r\n\r\nexport const getUserWalletBalance = async (chainId, walletAddress) => {\r\n  //const web3 = web3Factory(chainId);\r\n  walletAddress = normalizeAddress(walletAddress)\r\n  const web3 = await web3Factory.get(chainId);\r\n  const balance = await web3.eth.getBalance(walletAddress);\r\n  return fromWei(balance);\r\n};\r\n","import { getDeriConfig } from '../config';\r\nimport {\r\n  deriFactory,\r\n  databaseWormholeFactory,\r\n} from '../factory';\r\n/**\r\n * Get user signature of the wormhole pool\r\n * @async\r\n * @method\r\n * @param {string} accountAddress\r\n * @returns {Object}\r\n */\r\nexport const getUserWormholeSignature = async (accountAddress) => {\r\n  const databaseWormhole = databaseWormholeFactory(true);\r\n  return await databaseWormhole.signature(accountAddress);\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\r\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\r\n  const deri = deriFactory(chainId, deriAddress);\r\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\r\n  return await deri.isUnlocked(accountAddress, wormholeAddress);\r\n};\r\n\r\n/**\r\n * Get deri balance in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string}\r\n */\r\nexport const getDeriBalance = async (chainId, accountAddress) => {\r\n  const { deriAddress } = getDeriConfig(chainId);\r\n  const deri = deriFactory(chainId, deriAddress);\r\n  return (await deri.balanceOf(accountAddress)).toString();\r\n};","import {\r\n  miningVaultPoolFactory,\r\n  miningVaultRouterFactory,\r\n  wormholeFactory,\r\n  deriFactory,\r\n  databaseWormholeFactory,\r\n} from '../factory';\r\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from '../api/database_api';\r\nimport {\r\n  getDeriConfig,\r\n  getMiningVaultRouterConfig,\r\n  getMiningVaultConfig,\r\n} from '../config';\r\nimport { naturalToDeri } from '../../shared/utils';\r\n\r\n/**\r\n * Mint DToken in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintDToken = async (chainId, accountAddress) => {\r\n  let res;\r\n  const userInfo = await getUserInfoAll(accountAddress);\r\n  const amount = naturalToDeri(userInfo.amount);\r\n  const { deadline } = userInfo;\r\n  const { nonce } = userInfo;\r\n  const { v } = userInfo;\r\n  const { r } = userInfo;\r\n  const { s } = userInfo;\r\n  if (userInfo.valid) {\r\n    const miningVaultAddress = getMiningVaultConfig(chainId);\r\n    if (miningVaultAddress) {\r\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\r\n      //miningVault.setAccount(accountAddress);\r\n      try {\r\n        const tx = await miningVault.mintDToken(\r\n          accountAddress,\r\n          amount,\r\n          deadline,\r\n          nonce,\r\n          v,\r\n          r,\r\n          s\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the mining vault address in chain ${chainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * freeze Deri in current wormhole pool to the specified chain\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @param {string} toChainId\r\n * @param {string} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\r\n  const { wormholeAddress } = getDeriConfig(chainId);\r\n  const wormhole = wormholeFactory(chainId, wormholeAddress);\r\n  //wormhole.setAccount(accountAddress);\r\n  let res;\r\n  try {\r\n    const tx = await wormhole.freeze(accountAddress, amount, toChainId);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint Deri in wormhole pool\r\n * @async\r\n * @method\r\n * @param {string} toChainId\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintDeri = async (toChainId, accountAddress) => {\r\n  let res;\r\n  const databaseWormhole = databaseWormholeFactory(true);\r\n  // const userInfo = await getUserInfoAll(accountAddress);\r\n  const userInfo = await databaseWormhole.signature(accountAddress);\r\n  // console.log(userInfo)\r\n  const { amount } = userInfo;\r\n  const { fromChainId } = userInfo;\r\n  const { fromWormhole } = userInfo;\r\n  const fromNonce = userInfo.nonce;\r\n  const { v } = userInfo;\r\n  const { r } = userInfo;\r\n  const { s } = userInfo;\r\n  if (userInfo.valid) {\r\n    const { wormholeAddress } = getDeriConfig(toChainId);\r\n    if (wormholeAddress) {\r\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\r\n      //wormhole.setAccount(accountAddress);\r\n      try {\r\n        const tx = await wormhole.mintDeri(\r\n          accountAddress,\r\n          amount,\r\n          fromChainId,\r\n          fromWormhole,\r\n          fromNonce,\r\n          v,\r\n          r,\r\n          s\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the wormhole address in chain ${fromChainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Unlock the account in the deri pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockDeri = async (chainId, accountAddress) => {\r\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\r\n  const deri = deriFactory(chainId, deriAddress);\r\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\r\n  let res;\r\n  try {\r\n    const tx = await deri.unlock(accountAddress, wormholeAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (error) {\r\n    res = { success: false, error };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Mint Airdrop in the perpertual pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {boolean} response.[error] - error message when request failed\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const mintAirdrop = async (chainId, accountAddress) => {\r\n  let res;\r\n  const userInfo = await getUserInfoAllForAirDrop(accountAddress);\r\n  const amount = naturalToDeri(userInfo.amount).toString();\r\n  const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\r\n  if (userInfo.valid) {\r\n    const miningVaultAddress = getMiningVaultRouterConfig(chainId);\r\n    // console.log(\"miningVaultAddress\", miningVaultAddress)\r\n    // console.log(\"userInfo\", userInfo)\r\n    if (miningVaultAddress) {\r\n      const miningVaultRouter = miningVaultRouterFactory(\r\n        chainId,\r\n        miningVaultAddress\r\n      );\r\n      try {\r\n        const tx = await miningVaultRouter.mint(\r\n          accountAddress,\r\n          amount,\r\n          deadline,\r\n          nonce,\r\n          v1,\r\n          r1,\r\n          s1,\r\n          v2,\r\n          r2,\r\n          s2\r\n        );\r\n        res = { success: true, transaction: tx };\r\n      } catch (err) {\r\n        res = { success: false, error: err };\r\n      }\r\n    } else {\r\n      res = {\r\n        success: false,\r\n        error: `cannot find the mining vault router address in chain ${chainId}`,\r\n      };\r\n    }\r\n  } else {\r\n    res = {\r\n      success: false,\r\n      error: 'userinfo is not valid',\r\n    };\r\n  }\r\n  return res;\r\n};","import { normalizeAddress, normalizeChainId } from \"../utils\"\r\nimport { DeriEnv, getBrokerConfig, getPoolConfig2 } from '../config';\r\nimport { brokerManagerFactory, pTokenAirdropFactory } from \"../factory\"\r\nimport { pTokenFactory } from \"../../v2/factory\"\r\n\r\nconst AIRDROP_PTOKEN_ADDRESS_BSC = '0x94e7f76eb542657Bc8d2a9aA321D79F66F7C8FfA'\r\nconst AIRDROP_PTOKEN_ADDRESS_BSCTESTNET = '0x3b88a9B5896a49AEb23Ca2Ee9892d28d3B8De5f6'\r\n\r\n\r\nexport const getBroker = async(chainId, accountAddress) => {\r\n  chainId = normalizeChainId(chainId)\r\n  accountAddress = normalizeAddress(accountAddress)\r\n  const {address: brokerAddress} = getBrokerConfig('v2', chainId)\r\n  let res = ''\r\n  try {\r\n    const brokerManager = brokerManagerFactory(chainId, brokerAddress)\r\n    res = await brokerManager.getBroker(accountAddress)\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n  return res\r\n}\r\n\r\nexport const setBroker = async(chainId, accountAddress, brokerAddress) => {\r\n  chainId = normalizeChainId(chainId)\r\n  accountAddress = normalizeAddress(accountAddress)\r\n  brokerAddress = normalizeAddress(brokerAddress);\r\n  const {address: brokerManagerAddress} = getBrokerConfig('v2', chainId)\r\n  let res\r\n  try {\r\n    const brokerManager = brokerManagerFactory(chainId, brokerManagerAddress)\r\n    const tx = await brokerManager.setBroker(accountAddress, brokerAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res\r\n}\r\n\r\nconst getAirdropPTokenAddress = () => {\r\n  const env = DeriEnv.get()\r\n  if (env === 'prod') {\r\n    return AIRDROP_PTOKEN_ADDRESS_BSC\r\n  } else {\r\n    return AIRDROP_PTOKEN_ADDRESS_BSCTESTNET\r\n  }\r\n}\r\n\r\nexport const airdropPToken = async (chainId, accountAddress) => {\r\n  let res\r\n  let contractAddress = getAirdropPTokenAddress()\r\n  try {\r\n    const tx = await pTokenAirdropFactory(chainId, contractAddress).airdropPToken(accountAddress)\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res\r\n}\r\n\r\nexport const getAirdropPTokenWhitelistCount = async (chainId) => {\r\n  let res\r\n  let contractAddress = getAirdropPTokenAddress()\r\n  try {\r\n    res = await pTokenAirdropFactory(chainId, contractAddress).totalWhitelistCount()\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return res\r\n}\r\n\r\nexport const isUserPTokenExist = async (chainId, poolAddress, accountAddress) => {\r\n  let res = ''\r\n  try {\r\n    const {pToken:pTokenAddress} = getPoolConfig2(poolAddress)\r\n    const pToken = pTokenFactory(chainId, pTokenAddress)\r\n    const result = await pToken.balanceOf(accountAddress)\r\n    if (result === '1') {\r\n      res = true\r\n    } else if (result === '0') {\r\n      res = false\r\n    }\r\n  } catch (err) {\r\n    console.log(`${err}`)\r\n  }\r\n  return res\r\n}","import { getLpConfig } from '../config';\r\nimport { bTokenFactory, slpPoolFactory } from '../factory/contract';\r\n\r\n/**\r\n * Get liquidity info of SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.bTokenBalance\r\n * @returns {string} response.shares\r\n */\r\nexport const getSlpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\r\n      bToken.balanceOf(poolAddress),\r\n      bToken.balanceOf(accountAddress),\r\n      slpPool.getLiquidity(accountAddress),\r\n    ]);\r\n\r\n    return {\r\n      poolLiquidity: liquidity.toString(),\r\n      bTokenBalance: bTokenBalance.toString(),\r\n      shares: shares.toString(),\r\n      shareValue: '1',\r\n    };\r\n  }\r\n  console.log('no SlpPool address, please check');\r\n  return {};\r\n};\r\n\r\n/**\r\n * Add liquidity to SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addSlpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    try {\r\n      const tx = await slpPool.addLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity to SLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeSlpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  // console.log('pool', poolAddress, bTokenAddress)\r\n  if (bTokenAddress) {\r\n    const slpPool = slpPoolFactory(chainId, poolAddress);\r\n    //slpPool.setAccount(accountAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    //bToken.setAccount(accountAddress);\r\n    try {\r\n      const tx = await slpPool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\n/**\r\n * Unlock the account in the Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get account balance in Slp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getSlpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import { bTokenFactory, clp2PoolFactory } from '../factory/contract';\r\nimport { getLpConfig } from '../config/pool_v1';\r\n\r\nexport const getClp2LiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    const bToken = bTokenFactory(chainId, bTokenAddress);\r\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\r\n      bToken.balanceOf(poolAddress),\r\n      bToken.balanceOf(accountAddress),\r\n      clp2Pool.getLiquidity(accountAddress),\r\n    ]);\r\n\r\n    return {\r\n      poolLiquidity: liquidity.toString(),\r\n      bTokenBalance: bTokenBalance.toString(),\r\n      shares: shares.toString(),\r\n      shareValue: '1',\r\n    };\r\n  }\r\n  console.log('no Clp2Pool address, please check');\r\n  return {};\r\n};\r\n\r\nexport const addClp2Liquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clp2Pool.addLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const removeClp2Liquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clp2Pool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const getClp2WalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import {\r\n  bTokenFactory,\r\n  clpPoolFactory,\r\n} from '../factory/contract';\r\nimport { lTokenFactory } from '../../v1/factory';\r\nimport { bg } from '../utils';\r\nimport { getLpConfig } from '../config';\r\n\r\n/**\r\n * Get liquidity Info of the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.totalSupply\r\n * @returns {string} response.poolLiquidity\r\n * @returns {string} response.shares\r\n * @returns {string} response.shareValue\r\n * @returns {string} response.maxRemovableShares\r\n */\r\nexport const getClpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { lTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const clpPool = clpPoolFactory(chainId, poolAddress);\r\n  //pPool.setAccount(accountAddress);\r\n  const lToken = lTokenFactory(chainId, lTokenAddress);\r\n  //lToken.setAccount(accountAddress);\r\n\r\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\r\n    lToken.balanceOf(accountAddress),\r\n    lToken.totalSupply(),\r\n  ]);\r\n  const { liquidity } = await clpPool.getStateValues();\r\n  //console.log(liquidity);\r\n\r\n  return {\r\n    totalSupply: lTokenTotalSupply.toString(),\r\n    poolLiquidity: liquidity.toString(),\r\n    shares: lTokenBalance.toString(),\r\n    shareValue: (lTokenTotalSupply.eq(0)\r\n      ? bg(0)\r\n      : liquidity.div(lTokenTotalSupply)\r\n    ).toString(),\r\n    maxRemovableShares: lTokenBalance.toString(),\r\n  };\r\n};\r\n\r\n/**\r\n * Add liquidity to the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addClpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clpPool = clpPoolFactory(chainId, poolAddress);\r\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\r\n    try {\r\n      const tx = await clpPool.addLiquidity(accountAddress, amount);\r\n      console.log(tx, typeof tx);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Remove liquidity of the CLP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeClpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  let res;\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  if (bTokenAddress) {\r\n    const clpPool = clpPoolFactory(chainId, poolAddress);\r\n    try {\r\n      const tx = await clpPool.removeLiquidity(accountAddress, amount);\r\n      res = { success: true, transaction: tx };\r\n    } catch (err) {\r\n      res = { success: false, error: err };\r\n    }\r\n  } else {\r\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Check account is unlocked in the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isClpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  return await bToken.isUnlocked(accountAddress, poolAddress);\r\n};\r\n\r\n/**\r\n * Unlock the account in the Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockClp = async (chainId, poolAddress, accountAddress) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n\r\n  let res;\r\n  try {\r\n    const tx = await bToken.unlock(accountAddress, poolAddress);\r\n    res = { success: true, transaction: tx };\r\n  } catch (err) {\r\n    res = { success: false, error: err };\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get account balance in Clp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getClpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\r\n  const bToken = bTokenFactory(chainId, bTokenAddress);\r\n  //bToken.setAccount(accountAddress);\r\n  const balance = await bToken.balanceOf(accountAddress);\r\n  return balance.toString();\r\n};\r\n","import {\r\n  getSlpLiquidityInfo,\r\n  getSlpWalletBalance,\r\n  isSlpUnlocked,\r\n} from './slp_pool_api';\r\nimport {\r\n  getClp2LiquidityInfo,\r\n  getClp2WalletBalance,\r\n  isClp2Unlocked,\r\n} from './clp2_pool_api';\r\nimport {\r\n  getClpLiquidityInfo,\r\n  getClpWalletBalance,\r\n  isClpUnlocked,\r\n} from './clp_pool_api';\r\nimport { getLpConfig } from '../config'\r\n\r\n/**\r\n * Get liquidity info of LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {string} response.liquidity\r\n * @returns {string} response.bTokenBalance\r\n * @returns {string} response.shares\r\n */\r\nexport const getLpLiquidityInfo = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`getLpLiquidityInfo(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Check account is unlocked in the lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {bool}\r\n */\r\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await isClpUnlocked(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`isLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Get account balance in lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} accountAddress\r\n * @returns {string} Account balance\r\n */\r\nexport const getLpWalletBalance = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await getClpWalletBalance(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`getLpWalletBalance(): invalid lp type ${type}`);\r\n  }\r\n};\r\n","import { getLpConfig } from '../config';\r\nimport { unlockSlp, addSlpLiquidity, removeSlpLiquidity } from './slp_pool_api';\r\nimport { unlockClp, addClpLiquidity, removeClpLiquidity } from './clp_pool_api';\r\nimport {\r\n  unlockClp2,\r\n  addClp2Liquidity,\r\n  removeClp2Liquidity,\r\n} from './clp2_pool_api';\r\n\r\n/**\r\n * Unlock the account in the lp pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await unlockSlp(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp') {\r\n    return await unlockClp(chainId, poolAddress, accountAddress);\r\n  } else if (type === 'clp2') {\r\n    return await unlockClp2(chainId, poolAddress, accountAddress);\r\n  } else {\r\n    console.log(`unlockLp(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Add liquidity to LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const addLpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (type === 'clp') {\r\n    return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else if (type === 'clp2') {\r\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\r\n  } else {\r\n    console.log(`addLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Remove liquidity to LP pool\r\n * @async\r\n * @method\r\n * @param {string} chainId\r\n * @param {string} poolAddress\r\n * @param {string} accountAddress\r\n * @param {number} amount\r\n * @returns {Object} response\r\n * @returns {boolean} response.success\r\n * @returns {string} response.[error]\r\n * @returns {Object} response.transaction - eth transaction receipt object\r\n */\r\nexport const removeLpLiquidity = async (\r\n  chainId,\r\n  poolAddress,\r\n  accountAddress,\r\n  amount\r\n) => {\r\n  const { type } = getLpConfig(chainId, poolAddress);\r\n  if (type === 'slp') {\r\n    return await removeSlpLiquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else if (type === 'clp') {\r\n    return await removeClpLiquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else if (type === 'clp2') {\r\n    return await removeClp2Liquidity(\r\n      chainId,\r\n      poolAddress,\r\n      accountAddress,\r\n      amount\r\n    );\r\n  } else {\r\n    console.log(`removeLpLiquidity(): invalid lp type ${type}`);\r\n  }\r\n};\r\n","import { TERC20Factory } from \"..\"\r\nimport { catchTxApiError, normalizeChainId } from \"../utils\"\r\n\r\nexport const mintTERC20 = async (chainId, bTokenAddress, accountAddress) => {\r\n  const args = [chainId, bTokenAddress, accountAddress];\r\n  return catchTxApiError(async (chainId, bTokenAddress, accountAddress) => {\r\n    chainId = normalizeChainId(chainId);\r\n    const testERC20 = TERC20Factory(chainId, bTokenAddress);\r\n    // send tx\r\n    return await testERC20.mint(accountAddress);\r\n  }, args);\r\n};","import Web3 from 'web3';\r\n// == func\r\n// const np = () => {}\r\n// const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\n// refer to https://www.30secondsofcode.org/js/s/deep-clone\r\n// alternative: let clone = JSON.parse(JSON.stringify(obj))\r\nexport const deepClone = obj => {\r\n  if (obj === null) return null;\r\n  let clone = Object.assign({}, obj)\r\n  Object.keys(clone).forEach((key) => {\r\n    clone[key] = typeof obj[key] === 'object' ? deepClone(obj[key]) : obj[key];\r\n  });\r\n  // need recheck\r\n  if (Array.isArray(obj)) {\r\n    clone.length = obj.length\r\n    return Array.from(clone)\r\n  }\r\n  return clone\r\n}\r\n\r\nexport const shuffleArray = (urls) => {\r\n  const newUrls = deepClone(urls)\r\n  const length = urls.length\r\n  let res = []\r\n  for (let i = 0; i < length; i++) {\r\n    const index = Math.floor(Math.random() * urls.length)\r\n    res = res.concat(newUrls.splice(index,1))\r\n  }\r\n  return res\r\n}\r\n\r\nconst getBlockNumber = async (url) => {\r\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\r\n  try {\r\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\r\n    const startTime = Date.now()\r\n    res.blockNumber = await web3.eth.getBlockNumber()\r\n    res.duration = Date.now() - startTime\r\n  } catch (err) {\r\n    //console.log(`getBlockNumber(${url}) error: ${err}`)\r\n  }\r\n  return res\r\n};\r\n\r\nexport const getLatestRPCServer = async (urls = []) => {\r\n  urls = shuffleArray(urls)\r\n  // pick 2 random urls\r\n  urls = urls.length >= 2 ? urls.slice(0,2) : urls\r\n  let promises = []\r\n  for (let i = 0; i < urls.length; i++) {\r\n    promises.push(getBlockNumber(urls[i]));\r\n  }\r\n  let blockNumbers = await Promise.all(promises)\r\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\r\n  // console.log('blockNumbers',  blockNumbers)\r\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\r\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\r\n  const res = blockNumbers[index] && blockNumbers[index].url\r\n  // console.log(res)\r\n  if (res && res.startsWith('http')) {\r\n    return res\r\n  } else {\r\n    throw new Error(`getLatestRPCServer(): no alive RPC server in ${urls}`)\r\n  }\r\n};","import { deriToNatural, bg } from '../utils'\r\nimport { MAX_UINT256} from '../config'\r\nimport { ContractBase } from './contract_base'\r\nimport { bTokenAbi } from './abis';\r\n\r\n\r\nexport class BToken extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, bTokenAbi);\r\n  }\r\n  // === query ===\r\n  async symbol() {\r\n    return await this._call('symbol');\r\n  }\r\n\r\n  async decimals() {\r\n    return await this._call('decimals');\r\n  }\r\n  async _balanceOf(address) {\r\n    return await this._call('balanceOf', [address]);\r\n  }\r\n\r\n  async balanceOf(address) {\r\n    const [res, decimals] = await Promise.all([\r\n      this._balanceOf(address),\r\n      this.decimals(),\r\n    ]);\r\n    return bg(res, -decimals);\r\n  }\r\n\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply');\r\n    return deriToNatural(res);\r\n  }\r\n\r\n  async isUnlocked(accountAddress, poolAddress) {\r\n    const allowance = await this._call('allowance', [\r\n      accountAddress,\r\n      poolAddress,\r\n    ]);\r\n    return bg(allowance).gt(0);\r\n  }\r\n\r\n  // === transaction ===\r\n  async unlock(accountAddress, poolAddress) {\r\n    return await this._transact(\r\n      'approve',\r\n      [poolAddress, MAX_UINT256],\r\n      accountAddress\r\n    );\r\n  }\r\n}","import { ContractBase } from \"../contract_base\";\r\nimport { wrappedOracleAbi } from '../abis';\r\nimport { deriToNatural } from \"../../utils\";\r\n\r\nexport class WrappedOracle extends ContractBase {\r\n  constructor(chainId, address, symbol, decimal='18') {\r\n    super(chainId, address, wrappedOracleAbi)\r\n    this.symbol = symbol\r\n    this.decimal = decimal\r\n  }\r\n\r\n  // decimals refers https://docs.chain.link/docs/matic-addresses\r\n  async getPrice() {\r\n    // console.log('hit wrapped oracle')\r\n    const res = await this._call('getPrice');\r\n    if (res) {\r\n      return deriToNatural(res).toString()\r\n    }\r\n  }\r\n}\r\n","import { ContractBase } from \"../contract_base\";\r\nimport { brokerManagerAbi } from '../abis';\r\n\r\nexport class BrokerManager extends ContractBase {\r\n  constructor(chainId, address) {\r\n    super(chainId, address, brokerManagerAbi)\r\n  }\r\n  // query\r\n  async getBroker(accountAddress) {\r\n    return await this._call('getBroker', [accountAddress])\r\n  }\r\n\r\n  // transaction\r\n  async setBroker(accountAddress, brokerAddress) {\r\n    return await this._transact(\r\n      'setBroker',\r\n      [brokerAddress],\r\n      accountAddress\r\n    );\r\n  }\r\n}","import { ContractBase } from '../contract_base'\r\nimport { pTokenAirdropAbi } from '../abis'\r\n\r\nexport class PTokenAirdrop extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, pTokenAirdropAbi)\r\n  }\r\n  async getBTokenBalance() {\r\n    return await this._call('getBTokenBalance', [])\r\n  }\r\n  async totalWhitelistCount() {\r\n    return await this._call('totalWhitelistCount', [])\r\n  }\r\n  async airdropPToken(accountAddress) {\r\n    return await this._transact('airdropPToken', [], accountAddress)\r\n  }\r\n}","// v2 lite\r\nexport * from './perpetual_pool';\r\nexport * from './l_token';\r\nexport * from './p_token';\r\nexport * from './perpetual_pool_lite_viewer';\r\n","import React from 'react'\r\nimport Loadable from 'react-loadable'\r\nimport NProgress from 'nprogress'\r\nimport 'nprogress/nprogress.css'\r\n\r\nclass LoadingPage extends React.Component {\r\n  //类似github页面加载的那个加载条\r\n  componentWillMount(){\r\n    NProgress.start()\r\n  }\r\n  componentWillUnmount(){\r\n    NProgress.done()\r\n  }\r\n  render () {\r\n    return (\r\n      <div/>\r\n    )\r\n  }\r\n}\r\n\r\nconst LoadableComponent = (component) => {\r\n  return Loadable({\r\n    loader: component,\r\n    loading: ()=><LoadingPage/>\r\n  })\r\n}\r\n\r\nexport default LoadableComponent","/**\r\n * Get REST server config\r\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\r\n * @returns {string} server url\r\n */\r\nexport const getRestServerConfig = (env = 'dev') => {\r\n  if (env === 'prod') {\r\n    // for production\r\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://api.deri.finance';\r\n    //return 'https://alphaapi.deri.finance';\r\n  } else {\r\n    // for test\r\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://testnetapi.deri.finance';\r\n  }\r\n};\r\n\r\nexport const getRedisWorkerQueneConfig = (env = \"dev\") => {\r\n  if (env === \"prod\") {\r\n    return ['trade_tx_quene', 'trade_worker_group']\r\n  } else {\r\n    return ['trade_tx_quene_dev', 'trade_worker_group_dev']\r\n  }\r\n};\r\n","import { io } from \"socket.io-client\";\r\nimport {equalIgnoreCase } from \"../utils/utils\";\r\n\r\nclass WebSocket {\r\n  constructor(){\r\n    this.socket = io(process.env.REACT_APP_WSS_URL, {\r\n      transports: ['websocket'],\r\n      withCredentials: true\r\n    })\r\n    this.events = [];\r\n    this.socket.on('connect', () => {\r\n      console.log('connect')\r\n      this.events.forEach(event => {\r\n        this.socket.emit(event[0],event[1]);\r\n      })\r\n    })\r\n    this.socket.on('disconnect',event => {\r\n      console.log('web socket disconnect,will reconnect auto')\r\n    })\r\n  }\r\n\r\n  subscribe(event = 'get_kline_update',params = {},onMessage,listener = 'kline_update'){\r\n    this.socket.on(listener,data => {\r\n      if (data.time_type === params.time_type && equalIgnoreCase(data.symbol,params.symbol) && onMessage) {\r\n        onMessage(data)\r\n      }\r\n    })\r\n    this.socket.emit(event, params)\r\n    if(this.findEvent(event,params) === -1){\r\n      this.events.push([event,params])\r\n    }\r\n  }\r\n\r\n  findEvent(event,params){\r\n    return this.events.findIndex(item => item[0] === event && item[1].symbol === params.symbol && item[1].time_type === params.time_type);\r\n  }\r\n\r\n  unsubscribe(event,params = {}){\r\n    this.socket.emit(event,params)\r\n    const pos = this.findEvent(event,params)\r\n    this.events.splice(pos,1)\r\n  }\r\n}\r\nexport default new WebSocket()","import React from 'react'\r\nimport Modal from 'react-modal/lib/components/Modal';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nconst withModal = Component => {\r\n  const appElement = document.getElementById('root')\r\n  const customizeStyle =  {\r\n    overlay: {\r\n      position: 'fixed',\r\n      zIndex : 2,\r\n      background : 'rgb(0 0 0 / 0.5)'\r\n    },\r\n    content: {\r\n      position: 'absolute',\r\n      border : 0,\r\n      background : 'none',\r\n      inset : 0,\r\n      overflow : 'initial'\r\n    }\r\n  };\r\n\r\n  class WithModal extends React.Component {\r\n    constructor(props){\r\n      super(props)\r\n      this.state = {\r\n        modalIsOpen : false\r\n      }\r\n    }\r\n\r\n    render(){\r\n      const {modalIsOpen,className,overlay = {}} = this.props\r\n      const overlayMerged = Object.assign(customizeStyle.overlay,{...overlay})\r\n      const mergedStyle = Object.assign(customizeStyle,{overlay :overlayMerged})\r\n      return (\r\n        <Modal isOpen={modalIsOpen} style={mergedStyle} appElement={appElement} portalClassName={this.props.intl.locale}>\r\n          <div className={className}>\r\n            <Component {...this.props} className={className} onClose={this.props.onClose}/>\r\n          </div>\r\n        </Modal>\r\n      )\r\n    }\r\n  }\r\n\r\n  return inject('intl')(observer(WithModal)) ;\r\n}\r\nexport default withModal;","import { ContractBase } from '../../shared/contract'\r\nimport { deriToNatural } from '../../shared/utils';\r\nimport { lTokenLiteAbi } from './abis';\r\n\r\nexport class LTokenLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, lTokenLiteAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async balanceOf(accountAddress) {\r\n    const res = await this._call('balanceOf', [accountAddress]);\r\n    return deriToNatural(res)\r\n  }\r\n  async totalSupply() {\r\n    const res = await this._call('totalSupply');\r\n    return deriToNatural(res);\r\n  }\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n}\r\n","import { ContractBase } from '../../shared/contract'\r\nimport { deriToNatural } from '../../shared/utils'\r\nimport { pTokenLiteAbi } from './abis';\r\n\r\nconst processPosition = (res) => {\r\n  return {\r\n    volume: deriToNatural(res.volume),\r\n    cost: deriToNatural(res.cost),\r\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\r\n  }\r\n}\r\nexport class PTokenLite extends ContractBase {\r\n  constructor(chainId, contractAddress) {\r\n    super(chainId, contractAddress, pTokenLiteAbi)\r\n  }\r\n\r\n  // === query ===\r\n  async pool() {\r\n    return await this._call('pool');\r\n  }\r\n  async balanceOf(accountAddress) {\r\n    return await this._call('balanceOf', [accountAddress]);\r\n  }\r\n  async exists(accountAddress) {\r\n    return await this._call('exists', [accountAddress]);\r\n  }\r\n  async ownerOf(tokenId) {\r\n    return await this._call('ownerOf', [tokenId]);\r\n  }\r\n  async getMargin(accountAddress) {\r\n    const res = await this._call('getMargin', [accountAddress]);\r\n    return deriToNatural(res)\r\n  }\r\n  async getPosition(accountAddress, symbolId) {\r\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\r\n    if (Array.isArray(res)) {\r\n      return processPosition(res)\r\n    } else {\r\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\r\n    }\r\n  }\r\n  async getActiveSymbolIds() {\r\n    return await this._call('getActiveSymbolIds');\r\n  }\r\n  async isActiveSymbolId(symbolId) {\r\n    return await this._call('isActiveSymbolId', [symbolId]);\r\n  }\r\n  async isApprovedForAll(owner, operator) {\r\n    return await this._call('isApprovedForAll', [owner, operator]);\r\n  }\r\n  async getApproved(tokenId) {\r\n    return await this._call('getApproved', [tokenId]);\r\n  }\r\n  async getNumPositionHolders(symbolId) {\r\n    return await this._call('getNumPositionHolders', [symbolId]);\r\n  }\r\n\r\n  // === transaction ===\r\n}\r\n","import { ContractBase } from '../../shared';\r\nimport { perpetualPoolLiteViewerAbi } from './abis';\r\n\r\nexport class PerpetualPoolLiteViewer extends ContractBase {\r\n  constructor(chainId, poolAddress) {\r\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\r\n  }\r\n  async getOffChainOracleSymbols(poolAddress) {\r\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\r\n    //return res.filter((s) => s && s !== '');\r\n    return res\r\n  }\r\n}\r\n","import { makeObservable, observable, action } from \"mobx\";\r\nimport { getContractAddressConfig, DeriEnv,sortOptionSymbols,openConfigListCache } from \"../lib/web3js/indexV2\";\r\n\r\nexport default class Config {\r\n  all = []\r\n\r\n  constructor(){\r\n    makeObservable(this,{\r\n      all : observable,\r\n      setAll : action\r\n    })\r\n  }\r\n\r\n  async load(version,isOptions){\r\n    let current = version && version.current;\r\n    if(isOptions){\r\n      current = 'option'\r\n    }\r\n    if(current === 'v2_lite_open'){\r\n       await openConfigListCache.update()\r\n    }\r\n    let configs = getContractAddressConfig(DeriEnv.get(),current)\r\n    if(isOptions){\r\n      configs = sortOptionSymbols(configs)\r\n    }\r\n    if(!isOptions && version){\r\n      configs = configs.filter(c => c.version === version.current && c.symbol !== '--')\r\n      //v2 不需要展示base token,需要合并相同的base token\r\n      if(version.isV2){\r\n        configs = configs.reduce((total,cur) => {\r\n          const pos = total.findIndex(c => c.symbol === cur.symbol && c.pool === cur.pool);\r\n          if(pos === -1 ){\r\n            total.push(cur)\r\n          }\r\n          return total;\r\n        },[])\r\n      }\r\n    }\r\n    this.setAll(configs)\r\n    return this.all;\r\n  }\r\n\r\n  setAll(all){\r\n    this.all = all;\r\n  }\r\n  \r\n}","var map = {\n\t\"./de/Signin.json\": 611,\n\t\"./de/bridge.json\": 612,\n\t\"./de/broker.json\": 613,\n\t\"./de/dip-history-two.json\": 614,\n\t\"./de/dip-history.json\": 615,\n\t\"./de/dip-two.json\": 616,\n\t\"./de/faucet.json\": 617,\n\t\"./de/footer.json\": 618,\n\t\"./de/governance.json\": 619,\n\t\"./de/header.json\": 620,\n\t\"./de/home.json\": 621,\n\t\"./de/lite.json\": 622,\n\t\"./de/mining.json\": 623,\n\t\"./de/mobile-lite.json\": 624,\n\t\"./de/nuls.json\": 625,\n\t\"./de/permission.json\": 626,\n\t\"./de/pro.json\": 627,\n\t\"./de/team.json\": 628,\n\t\"./de/trading-mining.json\": 629,\n\t\"./en/Signin.json\": 630,\n\t\"./en/bridge.json\": 631,\n\t\"./en/broker.json\": 632,\n\t\"./en/dip-history-two.json\": 633,\n\t\"./en/dip-history.json\": 634,\n\t\"./en/dip-two.json\": 635,\n\t\"./en/faucet.json\": 636,\n\t\"./en/footer.json\": 637,\n\t\"./en/governance.json\": 638,\n\t\"./en/header.json\": 639,\n\t\"./en/home.json\": 640,\n\t\"./en/lite.json\": 641,\n\t\"./en/mining.json\": 642,\n\t\"./en/mobile-lite.json\": 643,\n\t\"./en/nuls.json\": 644,\n\t\"./en/permission.json\": 645,\n\t\"./en/pro.json\": 646,\n\t\"./en/team.json\": 647,\n\t\"./en/trading-mining.json\": 648,\n\t\"./fr/Signin.json\": 649,\n\t\"./fr/bridge.json\": 650,\n\t\"./fr/broker.json\": 651,\n\t\"./fr/dip-history-two.json\": 652,\n\t\"./fr/dip-history.json\": 653,\n\t\"./fr/dip-two.json\": 654,\n\t\"./fr/faucet.json\": 655,\n\t\"./fr/footer.json\": 656,\n\t\"./fr/governance.json\": 657,\n\t\"./fr/header.json\": 658,\n\t\"./fr/home.json\": 659,\n\t\"./fr/lite.json\": 660,\n\t\"./fr/mining.json\": 661,\n\t\"./fr/mobile-lite.json\": 662,\n\t\"./fr/nuls.json\": 663,\n\t\"./fr/permission.json\": 664,\n\t\"./fr/pro.json\": 665,\n\t\"./fr/team.json\": 666,\n\t\"./fr/trading-mining.json\": 667,\n\t\"./zh/Signin.json\": 668,\n\t\"./zh/bridge.json\": 669,\n\t\"./zh/broker.json\": 670,\n\t\"./zh/dip-history-two.json\": 671,\n\t\"./zh/dip-history.json\": 672,\n\t\"./zh/dip-two.json\": 673,\n\t\"./zh/faucet.json\": 674,\n\t\"./zh/footer.json\": 675,\n\t\"./zh/governance.json\": 676,\n\t\"./zh/header.json\": 677,\n\t\"./zh/home.json\": 678,\n\t\"./zh/lite.json\": 679,\n\t\"./zh/mining.json\": 680,\n\t\"./zh/mobile-lite.json\": 681,\n\t\"./zh/nuls.json\": 682,\n\t\"./zh/permission.json\": 683,\n\t\"./zh/pro.json\": 684,\n\t\"./zh/team.json\": 685,\n\t\"./zh/trading-mining.json\": 686\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 610;","import withModal from \"../hoc/withModal\"\r\nimport './loading.less'\r\n\r\nexport default withModal(() => (<div className='loading-mask'>\r\n  <div className=\"snippet\" data-title=\".dot-pulse\">\r\n      <div className=\"stage\">\r\n        <div className=\"dot-pulse\"></div>\r\n      </div>\r\n    </div>\r\n</div>))\r\n","import React, { useState, useEffect } from 'react'\r\nimport {isBrowser,isMobile,deviceDetect} from 'react-device-detect'\r\nimport LoadableComponent from './utils/LoadableComponent';\r\nimport { inject, observer } from 'mobx-react';\r\nimport LoadingMask from './components/Loading/LoadingMask';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport type from './model/Type'\r\nconst DesktopApp = LoadableComponent(() => import('./desktop/index'))\r\nconst MobileApp = LoadableComponent(() => import('./mobile/index'))\r\nconst getIsDesktop = () => window.screen.width > 1024;\r\nfunction Mask({loading}){\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  useEffect(() => {\r\n    setIsOpen(loading.isShowMask)\r\n    return () => {\r\n    }\r\n  }, [loading.isShowMask])\r\n  return <LoadingMask modalIsOpen={isOpen} overlay={{background : 'none',top : '80px'}}/>\r\n}\r\n\r\nconst MaskWrapper = inject('loading')(observer(Mask))\r\n\r\nfunction App({intl,loading}) {\r\n  const [isDesktop, setIsDesktop] = useState(getIsDesktop())\r\n  const isOptionsLite = useRouteMatch('/options/lite') ? true : false\r\n  const isOptionsPro = useRouteMatch('/options/pro') ? true : false\r\n  const isOption = isOptionsLite || isOptionsPro\r\n  const catagory = isOption ? 'option' : 'future'\r\n  type.setCurrent(catagory)\r\n\r\n  // useEffect(() => {\r\n  //   const onResize = () => {\r\n  //     if(getIsDesktop() !== isDesktop){\r\n  //       window.location.reload()\r\n  //     }\r\n  //   }\r\n  //   window.addEventListener(\"resize\", onResize);\r\n  //   return () => window.removeEventListener(\"resize\", onResize)\r\n  // },[]);\r\n  if(isBrowser){\r\n    return <><MaskWrapper/><DesktopApp locale={intl.locale}></DesktopApp></>\r\n  } else {\r\n    return <><MaskWrapper/><MobileApp locale={intl.locale}><Mask loading={loading}/></MobileApp></>\r\n  }\r\n}\r\n\r\nexport default inject('intl','loading')(observer(App)) ;\r\n","\r\nimport {getUserWalletBalance ,DeriEnv,connectWallet, isUnlocked,openConfigListCache, unlock } from \"../lib/web3js/indexV2\";\r\nimport config from '../config.json'\r\nimport { formatBalance, eqInNumber, storeChain } from \"../utils/utils\";\r\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\r\nimport version from './Version'\r\n\r\nclass Wallet {\r\n  \r\n  detail = {}\r\n  \r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      detail : observable,\r\n      setDetail : action,\r\n      supportV2 : computed,\r\n      supportV1 : computed,\r\n      supportAllVersion : computed,\r\n      supportChain : computed,\r\n      supportInnocation : computed,\r\n      supportOpen : computed\r\n    })\r\n  }\r\n\r\n  supportWeb3 = () => !!window.ethereum\r\n\r\n  isConnected = () => !!this.detail.account;\r\n\r\n\r\n  async isApproved(pool,bTokenId){\r\n    if(this.detail.chainId && this.supportChain){\r\n      if(version.isOpen){\r\n        await openConfigListCache.update()\r\n      }\r\n      const isApproved = await isUnlocked(this.detail.chainId,pool,this.detail.account,bTokenId).catch(e => console.error('load approve error'))\r\n      this.detail.isApproved = isApproved;\r\n      this.setDetail(this.detail)\r\n      return isApproved;\r\n    }\r\n  }\r\n\r\n  approve = async (pool,bTokenId) => {\r\n    if(this.detail.chainId){\r\n      const approved = await unlock(this.detail.chainId,pool,this.detail.account,bTokenId);\r\n      return approved\r\n    }\r\n  }\r\n\r\n  connect =  async () => {\r\n    const res = await connectWallet();\r\n    return new Promise(async (resolve,reject) => {\r\n      if(res.success){\r\n        const {chainId,account} = res\r\n        const wallet = await this.loadWalletBalance(chainId,account);      \r\n        resolve(wallet)\r\n      } else {\r\n        reject(null)\r\n      }\r\n    })\r\n  }\r\n\r\n  switchNetwork = async (network) => {\r\n    if(!this.isConnected()){\r\n      this.connect();\r\n    }\r\n    const chainInfo = config[DeriEnv.get()]['chainInfo']\r\n    const chainId =`0x${(parseInt(network.id)).toString(16)}`\r\n    network = chainInfo[parseInt(network.id)]\r\n    try {\r\n      await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId}],\r\n      });\r\n    } catch (error) {\r\n      // alert('err' + JSON.stringify(error))\r\n      if (error.code === 4902) {\r\n        try {\r\n          await window.ethereum.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [{chainId,...network.metamask}],\r\n          });\r\n        } catch (addError) {\r\n          console.error('err' ,addError)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  loadWalletBalance = async (chainId,account) => {\r\n    if(version.isOpen){\r\n      await openConfigListCache.update()\r\n    }\r\n    const balance = await getUserWalletBalance(chainId,account).catch(e => console.log('wallet account is not exist'))\r\n    const detail = {chainId,account,balance,formatBalance : formatBalance(balance)}\r\n    const env = DeriEnv.get();\r\n    const {chainInfo} = config[env]\r\n    \r\n    if(chainInfo[chainId]){\r\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\r\n      storeChain(chainInfo[chainId])\r\n    }\r\n    this.setDetail(detail)\r\n    return detail;\r\n  }\r\n\r\n  get = () => {\r\n    return this.detail;\r\n  }\r\n\r\n  setDetail(detail){\r\n    this.detail = detail;\r\n  }\r\n\r\n  refresh(){\r\n    this.loadWalletBalance(this.detail.chainId,this.detail.account);\r\n  }\r\n\r\n  isSupportChain(isOptions){\r\n    const chainId = this.detail.chainId\r\n    const env = DeriEnv.get();\r\n    const {chainInfo} = config[env]\r\n    if(isOptions){\r\n      return chainInfo[chainId] && chainInfo[chainId]['supportOptions']\r\n    } else {\r\n      return this.supportChain\r\n    }\r\n  }\r\n\r\n  get supportV2() {\r\n    return this.detail.supportV2\r\n  }\r\n\r\n  get supportV1(){\r\n    return this.detail.supportV1;\r\n  }\r\n\r\n  get supportAllVersion(){\r\n    return this.detail.supportV1 && this.detail.supportV2\r\n  }\r\n\r\n  get supportChain(){\r\n    return this.detail.supported\r\n  }\r\n\r\n  get supportInnovation(){\r\n    return this.detail.supportInnovation\r\n  }\r\n\r\n  get supportOpen(){\r\n    return this.detail.supportOpen\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\r\nimport { equalIgnoreCase } from \"../utils/utils\";\r\nimport webSocket from \"./WebSocket\";\r\n\r\nclass Oracle {\r\n  symbol = 'BTCUSD'\r\n  timeType = 'min'\r\n  index = 0.00\r\n  kData = []\r\n  ws = null\r\n  paused = false;\r\n  listeners = {}\r\n  already = false\r\n\r\n  constructor(){\r\n    makeAutoObservable(this,{\r\n      index : observable,\r\n      kData : observable,\r\n      setIndex : action,\r\n    })\r\n  }\r\n\r\n  load(symbol,timeType = 'min'){\r\n    webSocket.subscribe('get_kline_update',{symbol,time_type : 'min'},data => {\r\n      if(!this.paused && equalIgnoreCase(symbol,data.symbol)) {\r\n        this.setIndex(data.close)\r\n        for(const key of Object.keys(this.listeners)){\r\n          if(typeof this.listeners[key] === 'function'){\r\n            this.listeners[key](data)\r\n          }\r\n        }\r\n      }\r\n    })\r\n    if(symbol !== this.symbol){\r\n      this.unsubscribeBars(this.symbol)\r\n    }\r\n    this.setSymbol(symbol)\r\n    this.setTimeType(timeType);\r\n    this.already = true\r\n  }\r\n\r\n  addListener(id,listener){\r\n    if(!this.listeners[id]) {\r\n      this.listeners[id] = listener\r\n    }    \r\n  }\r\n\r\n  unsubscribeBars(symbol){\r\n    webSocket.unsubscribe('un_get_kline',{symbol : symbol,time_type : 'min'});\r\n  }\r\n\r\n\r\n  resume(){\r\n    this.setPause(false)\r\n  }\r\n\r\n  pause(){\r\n    this.setPause(true)\r\n  }\r\n\r\n  clean(){\r\n    this.unsubscribeBars(this.symbol);\r\n  }\r\n\r\n  setIndex(index){\r\n    if(!this.paused) {\r\n      this.index = index;\r\n    }\r\n  }\r\n\r\n  setSymbol(symbol){\r\n    this.symbol = symbol\r\n  }\r\n\r\n  setTimeType(timeType){\r\n    this.timeType = timeType;\r\n  }\r\n  setPause(paused){\r\n    this.paused = paused\r\n  }\r\n}\r\n\r\nexport default Oracle","import { getPositionInfo ,bg,getPositionInfos} from \"../lib/web3js/indexV2\"\r\nimport { eqInNumber } from '../utils/utils';\r\nimport type from \"./Type\";\r\n\r\nexport default class Position {\r\n\r\n   callback = () => {}\r\n   callbackALL = ()=>{}\r\n   wallet = null;\r\n   spec = null\r\n   counter = 0\r\n \r\n   mockPositionInfo = {\r\n    averageEntryPrice: \"\",\r\n    liquidationPrice: \"\",\r\n    margin: \"20000\",\r\n    marginHeld: \"10068.26538\",\r\n    marginHeldBySymbol : \"293.16152\",\r\n    unrealizedPnl: \"3.1311\",\r\n    volume: \"800\",\r\n    premiumFundingAccrued:'',\r\n    deltaFundingAccrued:'',\r\n    strikePrice:0,\r\n    timePrice:0,\r\n    volatility:0,\r\n    isCall:false,\r\n   }\r\n\r\n   async load(wallet,spec,callback){\r\n     this.wallet= wallet; \r\n     this.spec = spec\r\n     if(callback){\r\n      this.callback = callback\r\n     }\r\n     if(wallet && wallet.isConnected() && wallet.isSupportChain(type.isOption) && spec && spec.pool){\r\n      const position = await getPositionInfo(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\r\n      if(position){\r\n        if(this.callback){\r\n          this.callback(position)\r\n        }\r\n      }\r\n      return position;\r\n     }\r\n   }\r\n\r\n   async loadAll(wallet,spec,callback){\r\n    this.wallet= wallet; \r\n    this.spec = spec\r\n    if(callback){\r\n     this.callbackALL = callback\r\n    }\r\n    if(wallet && wallet.isConnected() && wallet.isSupportChain(type.isOption) && spec && spec.pool){\r\n      let res  = await getPositionInfos(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\r\n      let positions = [] \r\n      if(res.length) {\r\n        positions = res.map(item => {\r\n          item.balanceContract = bg(item.margin).plus(item.unrealizedPnl).toString()\r\n          item.direction = (+item.volume) > 0 ? 'LONG' : (!item.volume || eqInNumber(item.volume, 0) || !item.volume ? '--' : 'SHORT')\r\n          return item\r\n        })\r\n      }\r\n      if(positions){\r\n        if(this.callbackALL){\r\n          this.callbackALL(positions)\r\n        }\r\n      }\r\n      return positions;\r\n    }\r\n   } \r\n\r\n   startAll(){\r\n    this.paused = false;\r\n    if(!this.started){\r\n      this.runInAction(async () => await this.loadAll(this.wallet,this.spec))\r\n    }\r\n    this.started = true\r\n  }\r\n\r\n   start(){   \r\n    this.paused = false;\r\n    if(!this.startedAll){\r\n      this.runInAction(async () => await this.load(this.wallet,this.spec))\r\n    }\r\n    this.startedAll = true\r\n   }\r\n\r\n   runInAction(action){\r\n    this.timer = window.setTimeout(async () => {\r\n      if(!this.paused){\r\n        const position = await action();\r\n        if(position) {\r\n          this.runInAction(action);\r\n        }\r\n      }\r\n    },3000)\r\n   }\r\n\r\n   pause(){\r\n    this.paused = true\r\n   }\r\n\r\n   resume(){\r\n    this.clean();\r\n    this.start(this.callback)\r\n   }\r\n\r\n   clean(){\r\n     this.started = false;\r\n     this.startedAll = false;\r\n     this.paused = false;\r\n     this.timer = null;\r\n   }\r\n \r\n}","import { getSpecification } from \"../lib/web3js/indexV2\";\r\nimport { makeObservable, observable, action, computed } from \"mobx\";\r\nimport Intl from \"./Intl\";\r\nimport version from \"./Version\";\r\nimport type from \"./Type\";\r\n\r\nexport default class Contract {\r\n  info = {\r\n    bTokenSymbol:[\"BUSD\"],\r\n    symbol:'BTCUSD',\r\n    multiplier:'0.0001',\r\n    fundingRateCoefficient:'0.0000025',\r\n    deltaFundingCoefficient:'0.2',\r\n    minInitialMarginRatio:0.1,\r\n    initialMarginRatio:0.1,\r\n    minMaintenanceMarginRatio:0.05,\r\n    maintenanceMarginRatio:0.05,\r\n    feeRatio:0.0005,\r\n    underlier :'',\r\n    strike:0,\r\n    optionType:'C',\r\n    bTokenSymbolDisplay : ['BUSD']\r\n  }\r\n  // constructor(){\r\n  //   makeObservable(this,{\r\n  //     info : observable,\r\n  //     setInfo : action,\r\n  //     bTokenSymbolDisplay : computed\r\n  //   })\r\n  // }\r\n\r\n  async load(wallet,config){\r\n    if(wallet && wallet.supportChain && config && config.pool !== this.info.pool){\r\n      const spec = await getSpecification(wallet.detail.chainId,config.pool,config.symbolId);\r\n      spec.bTokenSymbol = this.bTokenSymbolDisplay(spec)\r\n      if(type.isOption){\r\n        spec.underlier = this.getUnderlierStrike(spec).underlier\r\n        spec.strike = this.getUnderlierStrike(spec).strike\r\n        spec.optionType = this.getUnderlierStrike(spec).optionType\r\n      }\r\n      this.setInfo(spec)\r\n    }\r\n    return this.info\r\n  }\r\n\r\n  setInfo(info){\r\n    this.info = info\r\n  }\r\n\r\n  getUnderlierStrike(spec){\r\n    let underlier = spec.symbol.split('-')[0]\r\n    let strike = spec.symbol.split('-')[1]\r\n    let optionType = spec.symbol.split('-')[2]\r\n    return {\r\n      underlier:underlier,\r\n      strike:strike,\r\n      optionType:optionType\r\n    }\r\n  }\r\n\r\n  bTokenSymbolDisplay(spec){\r\n    if(version.isV1 || version.isV2Lite || type.isOption || version.isOpen){\r\n      return [spec.bTokenSymbol];\r\n    }\r\n    return spec.bTokenSymbol;\r\n  }\r\n}","import { getTradeHistory } from \"../lib/web3js/indexV2\";\r\n\r\n\r\nexport default class History {\r\n\r\n   async load(wallet,config,isOptions){\r\n      if(wallet && wallet.isSupportChain(isOptions) && wallet.detail.chainId && config && config.pool){\r\n         const all = await getTradeHistory(wallet.detail.chainId,config.pool,wallet.detail.account,config.symbolId); \r\n         return all;\r\n      } else {\r\n         return []\r\n      }\r\n   }\r\n}","import { makeObservable, observable, action, computed } from \"mobx\";\r\n\r\nclass Loading {\r\n  isLoading = false\r\n  constructor(){\r\n    makeObservable(this,{\r\n      isLoading : observable,\r\n      setIsLoading : action,\r\n      loading : action,\r\n      isShowMask : computed\r\n    })\r\n  }\r\n\r\n  setIsLoading(isLoading){\r\n    this.isLoading = isLoading\r\n  }\r\n\r\n  loading(){\r\n    this.setIsLoading(true)\r\n  }\r\n\r\n  loaded(){\r\n    this.setIsLoading(false)\r\n  }\r\n\r\n  get isShowMask(){\r\n    return this.isLoading === true;\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default new Loading();","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {HashRouter} from 'react-router-dom'\r\nimport App from './App';\r\nimport './assets/deri.less';\r\nimport { Provider } from 'mobx-react';\r\nimport Wallet from './model/Wallet';\r\nimport Trading from './model/Trading';\r\nimport { DeriEnv } from './lib/web3js/indexV2';\r\nimport version from './model/Version';\r\nimport intl from './model/Intl';\r\nimport loading from './model/Loading';\r\nimport   type from './model/Type';\r\n\r\nconst wallet = new Wallet();\r\nconst trading = new Trading()\r\n\r\nif(process.env.NODE_ENV === 'production') {\r\n  DeriEnv.set('prod')\r\n}\r\nDeriEnv.set('testnet')\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider wallet={wallet} type={type}  trading={trading} version={version} intl={intl} loading={loading}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","import { observable, action, computed, makeObservable } from \"mobx\";\r\nimport Oracle from \"./Oracle\";\r\nimport Position from \"./Position\";\r\nimport Contract from \"./Contract\";\r\nimport History from './History'\r\nimport Config from \"./Config\";\r\nimport { eqInNumber, storeConfig, getConfigFromStore, restoreChain, getFormatSymbol, getMarkpriceSymbol } from \"../utils/utils\";\r\nimport { getFundingRate, priceCache } from \"../lib/web3js/indexV2\";\r\nimport { bg } from \"../lib/web3js/indexV2\";\r\nimport Intl from \"./Intl\";\r\nimport version from './Version'\r\nimport type from './Type'\r\nimport Type from \"./Type\";\r\n\r\n/**\r\n * 交易模型\r\n * 关联对象\r\n * 1. chain\r\n * 2. Oracle\r\n * 3. position\r\n * 4. contract\r\n * 5. history\r\n * 计算\r\n * 1. dynamic balance\r\n * 2. available blance\r\n * 响应事件\r\n * 1. chain change\r\n * 2. chain’s symbol changed\r\n * 3. index update\r\n * 4. volum change\r\n * 5. margin change\r\n * 输出\r\n * 1. dynamic balance\r\n * 2. margin\r\n * 3. available balance\r\n * 4. volume\r\n * 5. specs\r\n * 6. spec\r\n * 7. position\r\n * 8. contract\r\n * 9. fundingRate\r\n */\r\n\r\nexport default class Trading {\r\n  version = null;\r\n  wallet = null;\r\n  type = null;\r\n  configs = [] \r\n  config = null;\r\n  index = ''\r\n  volume = ''\r\n  paused = false\r\n  slideIncrementMargin = 0\r\n  position = {}\r\n  positions = []\r\n  contract = {}\r\n  fundingRate = {}\r\n  history = []\r\n  userSelectedDirection = 'long'\r\n  supportChain = true\r\n  optionsConfigs = {}\r\n\r\n  constructor(){\r\n    makeObservable(this,{\r\n      index : observable,\r\n      volume : observable,\r\n      slideIncrementMargin : observable,\r\n      fundingRate : observable,\r\n      position : observable,\r\n      positions : observable,\r\n      history : observable,\r\n      contract : observable,\r\n      userSelectedDirection : observable,\r\n      supportChain : observable,\r\n      setWallet :action,\r\n      setConfigs : action,\r\n      setOptionConfigs : action,\r\n      setConfig : action,\r\n      setIndex : action,\r\n      setContract : action,\r\n      setPosition : action,\r\n      setPositions : action,\r\n      setVolume : action,\r\n      setUserSelectedDirection : action,\r\n      // setSupportChain : action,\r\n      setFundingRate : action,\r\n      setHistory : action,\r\n      setSlideMargin : action,\r\n      amount : computed,\r\n      fundingRateTip : computed,\r\n      optionFundingRateTip : computed,\r\n      initialMarginRatioTip : computed,\r\n      maintenanceMarginRatioTip : computed,\r\n      TransactionFeeTip : computed,\r\n      dpmmFundingRateTip :computed,\r\n      fundingCoefficientTip :computed,\r\n      rateTip:computed,\r\n      multiplierTip : computed,\r\n      TotalNetPositionTip:computed,\r\n      direction : computed,\r\n      volumeDisplay : computed,\r\n      isNegative : computed,\r\n      isPositive : computed\r\n    })\r\n    this.configInfo = new Config();\r\n    this.oracle = new Oracle();\r\n    this.positionInfo = new Position()\r\n    this.contractInfo = new Contract();\r\n    this.historyInfo = new History()\r\n  }\r\n\r\n  /**\r\n   * 初始化\r\n   * wallet and version changed will init\r\n   */\r\n  async init(wallet,finishedCallback){  \r\n    const isOption = Type.isOption\r\n    const all = await this.configInfo.load(version,isOption);\r\n    //如果连上钱包，有可能当前链不支持\r\n    if(wallet.isConnected()){\r\n      this.setWallet(wallet);\r\n      this.setConfigs(all.filter(c => eqInNumber(wallet.detail.chainId,c.chainId)))\r\n      let defaultConfig = this.getDefaultConfig(this.configs,wallet);\r\n      //如果还是为空，则默认用所有config的第一条\r\n      if(!defaultConfig){\r\n        defaultConfig = all.length > 0 ? all[0] : {}\r\n      }\r\n      this.setConfig(defaultConfig);\r\n      //如果没有钱包或者链接的链不一致，设置默认config，BTCUSD\r\n    } else if(!wallet.isConnected() || !wallet.supportWeb3()){\r\n      //没有钱包插件\r\n      version.setCurrent('v2')\r\n      const all = await this.configInfo.load(version,isOption);\r\n      const defaultConfig = all.find(c => c.symbol === 'BTCUSD')\r\n      this.setConfig(defaultConfig)\r\n    }\r\n    this.loadByConfig(this.wallet,this.config,true,finishedCallback,isOption)\r\n    this.setVolume('')\r\n  }\r\n\r\n  async onSymbolChange(spec,finishedCallback,isOption){\r\n    const config = this.configs.find(config => config.pool === spec.pool && config.symbolId === spec.symbolId)\r\n    //v1 只需要比较池子地址，v2 需要比较symbolId\r\n    const changed = version.isV1 ? spec.pool !== this.config.pool : spec.symbolId !== this.config.symbolId\r\n    this.onChange(config,changed,finishedCallback,isOption)\r\n  }\r\n\r\n  async onChange(config,changed,finishedCallback,isOption){\r\n    if(config){\r\n      this.pause();\r\n      this.setConfig(config)\r\n      this.loadByConfig(this.wallet,config,changed,finishedCallback,isOption);  \r\n      if(changed){\r\n        this.store(config)\r\n      }    \r\n      this.resume()\r\n      this.setVolume('')\r\n    } else{\r\n      finishedCallback && finishedCallback()\r\n    }\r\n  }\r\n\r\n  async loadByConfig(wallet,config,symbolChanged,finishedCallback,isOption){\r\n     //切换指数\r\n    if(symbolChanged && config){\r\n      this.oracle.addListener('trading',data => {\r\n        this.setIndex(data.close)\r\n      })\r\n    }\r\n    if(wallet && wallet.isConnected && config){\r\n      Promise.all([\r\n        this.positionInfo.load(wallet,config,(position) => {\r\n          this.setPosition(position)\r\n          this.syncFundingRate(wallet,config,isOption)\r\n        }),\r\n        this.contractInfo.load(wallet,config,isOption),\r\n        this.loadFundingRate(wallet,config,isOption),\r\n        this.historyInfo.load(wallet,config,isOption),\r\n        this.positionInfo.loadAll(wallet,config,positions => this.setPositions(positions)),\r\n      ]).then(results => {\r\n        if(results.length === 5){\r\n          results[0] && this.setIndex(results[0].price) && this.setPosition(results[0]);\r\n          results[1] && this.setContract(results[1]);\r\n          results[2] && this.setFundingRate(results[2]);\r\n          results[3] && this.setHistory(results[3]);\r\n          results[4] && this.setPositions(results[4]);\r\n          // this.refreshCache();\r\n        } \r\n      }).finally(e => {\r\n        finishedCallback && finishedCallback()\r\n        this.oracle.load(getFormatSymbol(config.symbol,config,true))\r\n        this.positionInfo.start()\r\n        this.positionInfo.startAll();\r\n      })\r\n    } else {\r\n      finishedCallback && finishedCallback()\r\n    }\r\n  }\r\n\r\n  refreshCache(){\r\n    const {pool} = this.config;\r\n    const symbol = type.isOption ? this.config.symbol.split('-')[0] : this.config.symbol\r\n    priceCache.clear();\r\n    priceCache.update(pool,symbol)\r\n  }\r\n\r\n\r\n  //优先使用session storage 的，如果缓存跟用户当前链一直，则命中缓存，否则取当前配置第一条\r\n  getDefaultConfig(configs = [],wallet){\r\n    let defaultConfig = null;\r\n    if(configs.length > 0){    \r\n      const fromStore = this.getFromStore();\r\n      if(fromStore && eqInNumber(wallet.detail.chainId,fromStore.chainId)){\r\n        defaultConfig = fromStore;\r\n      }\r\n      if(defaultConfig){\r\n        //虽然从缓存获得config ，需要判断池子地址是否一致，否则用可用config的第一条\r\n        const pos = configs.findIndex(c => c.pool === defaultConfig.pool);\r\n        if(pos === -1){\r\n          defaultConfig = configs[0];\r\n        }\r\n      } else {\r\n        defaultConfig = configs[0]\r\n      }   \r\n    }\r\n    return defaultConfig;    \r\n  }\r\n \r\n  //存起来\r\n  store(config){\r\n    storeConfig(version.current,config)\r\n  }\r\n\r\n  getFromStore(){\r\n    return getConfigFromStore(version.current)\r\n  }\r\n\r\n  async syncFundingRate(){\r\n    //资金费率和仓位同步\r\n    const fundingRate = await this.loadFundingRate(this.wallet,this.config)   \r\n    if(fundingRate){\r\n      this.setFundingRate(fundingRate)      \r\n    }\r\n  }\r\n\r\n  async refresh(){\r\n    this.pause()\r\n    this.positionInfo.load(this.wallet,this.config, position  => {       \r\n      this.setPosition(position);\r\n      this.syncFundingRate();\r\n    });\r\n    this.positionInfo.loadAll(this.wallet,this.config,positions => this.setPositions(positions))\r\n    this.syncFundingRate();\r\n    this.wallet.loadWalletBalance(this.wallet.detail.chainId,this.wallet.detail.account)\r\n    const history = await this.historyInfo.load(this.wallet,this.config)\r\n    if(history){\r\n      this.setHistory(history)\r\n    }\r\n    this.positionInfo.start();\r\n    this.positionInfo.startAll();\r\n    this.setVolume('')\r\n    this.resume();\r\n  }\r\n\r\n  /**\r\n   * 暂停实时读取index和定时读取position\r\n   */\r\n  pause(){\r\n    this.setPaused(true)\r\n    this.oracle.pause();\r\n    this.positionInfo.pause();\r\n  }\r\n\r\n  /**\r\n   * 恢复读取\r\n   */\r\n  resume(){\r\n    this.setPaused(false)\r\n    this.oracle.resume();\r\n    this.positionInfo.resume();\r\n  }\r\n\r\n  setWallet(wallet){\r\n    this.wallet = wallet;\r\n  }\r\n\r\n  setConfigs(configs){\r\n    if(type.isOption){\r\n      this.setOptionConfigs(configs)\r\n    } \r\n    this.configs = configs\r\n  }\r\n\r\n  setOptionConfigs(configs){\r\n    this.optionsConfigs = this.groupConfigBySymbol(configs)\r\n  }\r\n\r\n  groupConfigBySymbol(configs = []){\r\n    return configs.reduce((total,config) => {\r\n      const symbol = config.symbol.split('-')[0]\r\n      if(!total[symbol]){\r\n        total[symbol] = []\r\n      }\r\n      total[symbol].push(config)\r\n      return total;\r\n    },[])\r\n  }\r\n\r\n  setConfig(config){\r\n    //just for v2 and lite version in futrue\r\n    if(type.isFuture && (version.isV2 || version.isV2Lite)){\r\n      // config.markpriceSymbol = `${config.symbol}-MARKPRICE`\r\n      config.markpriceSymbolFormat = getMarkpriceSymbol(config)\r\n    }\r\n    this.config = config\r\n  }\r\n\r\n  setIndex(index){\r\n    this.index = index;\r\n  }\r\n\r\n  setPosition(position){\r\n    if(position){\r\n      this.position = position\r\n    }\r\n  }\r\n\r\n  setPositions(positions){\r\n    if(positions){\r\n      this.positions = positions\r\n    }\r\n  }\r\n\r\n  setContract(contract){\r\n    this.contract = contract\r\n  }\r\n\r\n  setHistory(history){\r\n    this.history = history\r\n  }\r\n\r\n  setFundingRate(fundingRate){\r\n    this.fundingRate = fundingRate;\r\n  }\r\n\r\n  setVolume(volume){\r\n    this.volume = volume;\r\n  }\r\n\r\n  setPaused(paused){\r\n    this.paused = paused\r\n  }\r\n\r\n  setUserSelectedDirection(direction){\r\n    this.userSelectedDirection = direction\r\n  }\r\n\r\n  setSlideMargin(slideIncrementMargin){\r\n    if(slideIncrementMargin !== ''){\r\n      this.slideIncrementMargin =  slideIncrementMargin\r\n      const position = this.position;\r\n      const price = position.price || this.index\r\n      const increment = slideIncrementMargin - position.marginHeld\r\n      let MarginRatio = type.isOption ? this.contract.initialMarginRatio : this.contract.minInitialMarginRatio;\r\n      // let volume =  increment / (price * this.contract.multiplier * MarginRatio);\r\n      let volume = bg(increment).div(bg(bg(price).times(bg(this.contract.multiplier).times(bg(MarginRatio))))).toString()\r\n      // if(type.isOption){\r\n        volume = +volume * +this.contract.multiplier\r\n        let index = this.contract.multiplier.indexOf('.')\r\n        let num = this.contract.multiplier.slice(index);\r\n        let length = num.length \r\n        let value = volume.toString()\r\n        if(value.indexOf(\".\") !== -1){\r\n          value = value.substring(0,value.indexOf(\".\") + length)\r\n        }\r\n        this.setVolume(value)\r\n      // }else{\r\n      //   this.setVolume(volume.toFixed(0))\r\n      // }\r\n    }\r\n  }\r\n\r\n  clean(){\r\n    this.oracle.clean();\r\n    this.positionInfo.clean();\r\n    this.version = null;\r\n    this.configs = [] \r\n    this.config = null;\r\n    this.index = ''\r\n    this.volume = ''\r\n    this.fundingRate = {}\r\n    this.position = {}\r\n    this.positions = []\r\n    this.contract = {}\r\n    this.history = []\r\n    this.userSelectedDirection = 'long'\r\n    this.optionsConfigs = {}\r\n  }\r\n\r\n  get volumeDisplay(){\r\n    if((type.isFuture && Math.abs(this.volume) === 0 && isNaN(this.volume) )|| this.volume === '' || this.volume === '-' || this.volume === 'e') {\r\n      return '';\r\n    } else {\r\n      return Math.abs(this.volume)\r\n    }\r\n  }\r\n  \r\n  get amount(){\r\n    const position = this.position\r\n    const contract = this.contract;\r\n    let initVolume = this.volume === '' || isNaN(this.volume) ? 0 : Math.abs(this.volume)\r\n    // let optionVolume = type.isOption ? (+initVolume / +this.contract.multiplier):initVolume;\r\n    let optionVolume = (+initVolume / +this.contract.multiplier);\r\n    const volume = optionVolume\r\n    let {margin, marginHeldBySymbol:currentSymbolMarginHeld ,marginHeld,unrealizedPnl} = position\r\n    const price = position.price || this.index\r\n    //v2\r\n    let otherMarginHeld = bg(marginHeld).minus(currentSymbolMarginHeld)\r\n    otherMarginHeld = otherMarginHeld.isNaN() ? bg(0) : otherMarginHeld;\r\n    const contractValue = volume * price * contract.multiplier;\r\n    const incrementMarginHeld =  type.isOption ? contractValue * contract.initialMarginRatio : contractValue * contract.minInitialMarginRatio\r\n    let totalMarginHeld = bg(marginHeld) ;\r\n\r\n    //如果当前仓位为正仓用户做空或者当前仓位为负仓用户做多，总仓位相减,取绝对值\r\n    if((this.isPositive && this.userSelectedDirection === 'short') || (this.isNegative && this.userSelectedDirection === 'long')){\r\n      totalMarginHeld = totalMarginHeld.minus(incrementMarginHeld);\r\n      if(totalMarginHeld.lt(otherMarginHeld)){\r\n        totalMarginHeld =  otherMarginHeld.plus(otherMarginHeld.minus(totalMarginHeld).abs())        \r\n      } \r\n      currentSymbolMarginHeld = bg(currentSymbolMarginHeld).minus(incrementMarginHeld).abs().toFixed(2)\r\n    } else {\r\n      totalMarginHeld = bg(marginHeld).plus(incrementMarginHeld)\r\n      if(currentSymbolMarginHeld){\r\n        currentSymbolMarginHeld = bg(currentSymbolMarginHeld).plus(incrementMarginHeld).toFixed(2);\r\n      }\r\n    }\r\n\r\n    const dynBalance = margin && bg(margin).plus(unrealizedPnl).toFixed(2);    \r\n    //总保证金和当前symbol保证金不能超过余额\r\n    totalMarginHeld = totalMarginHeld.gt(dynBalance) ? dynBalance : totalMarginHeld.toFixed(2)\r\n    if(currentSymbolMarginHeld){\r\n      currentSymbolMarginHeld = (+currentSymbolMarginHeld) > (+dynBalance) ? dynBalance : (+currentSymbolMarginHeld).toFixed(2);\r\n    }\r\n    let available = bg(dynBalance).minus(totalMarginHeld).toFixed(2)\r\n    const exchanged = bg(volume).multipliedBy(contract.multiplier).toFixed(4)\r\n    const totalVolume = this.userSelectedDirection === 'short' ? (-this.volumeDisplay + (+position.volume)) : ((+this.volumeDisplay) +  (+position.volume))    \r\n    const totalContractValue = (+totalVolume) * price \r\n    const curContractValue = (+this.volumeDisplay) * price\r\n    const leverage = Math.abs(curContractValue / (+dynBalance)).toFixed(1);\r\n    const afterLeverage = Math.abs((+totalContractValue) / (+dynBalance)).toFixed(1); \r\n    available = (+available) < 0 ? 0 : available\r\n    return {\r\n      volume : this.volume,\r\n      dynBalance : dynBalance,\r\n      margin : totalMarginHeld,\r\n      available : available,\r\n      exchanged : exchanged,\r\n      currentSymbolMarginHeld : currentSymbolMarginHeld,\r\n      leverage : leverage,\r\n      afterLeverage : afterLeverage\r\n    }\r\n  }\r\n\r\n  get direction(){    \r\n    // 正仓\r\n    if(this.margin !== ''){\r\n      if((+this.position.volume) > 0) {\r\n        if(Math.abs(this.volume) > Math.abs(this.position.volume)) {\r\n          return 'long'\r\n        } else {\r\n          return 'short'\r\n        }\r\n      } else if((+this.position.volume) < 0){\r\n        //负仓\r\n        if((+this.volume) > Math.abs(+this.position.volume)){\r\n          return 'short'\r\n        } else {\r\n          return 'long'\r\n        }\r\n      }\r\n    }\r\n    return 0\r\n  }\r\n\r\n  //正仓\r\n  get isPositive(){\r\n    return bg(this.position.volume).gt(0);\r\n  }\r\n\r\n  //负仓\r\n  get isNegative(){\r\n    return bg(this.position.volume).isNegative();\r\n  }\r\n\r\n  //资金费率\r\n  async loadFundingRate(wallet,config,isOption){\r\n    if(config){\r\n      const chainId = wallet && wallet.isConnected() && wallet.isSupportChain(isOption) ? wallet.detail.chainId : config.chainId\r\n      if(config){    \r\n        const res = await getFundingRate(chainId,config.pool,config.symbolId).catch(e => console.error('getFundingRate was error,maybe network is wrong'))\r\n        return res;\r\n      }\r\n    }\r\n  }\r\n\r\n  get fundingRateTip(){    \r\n    if(version && version.isV2){\r\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\r\n        if(Intl.locale === 'zh'){\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n ${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol}`        \r\n        } else {\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')}`        \r\n        }\r\n        \r\n      }\r\n    } else {\r\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\r\n        if(Intl.locale === 'zh'){\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} `        \r\n        } else {\r\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\r\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')})`        \r\n        }        \r\n      }\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get optionFundingRateTip(){\r\n    if(this.fundingRate && this.fundingRate.premiumFundingPerSecond && this.config){\r\n      if(Intl.locale === 'zh'){\r\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\r\n      `\\n ${Intl.get('lite','per-second')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.config.bTokenSymbol} `        \r\n      } else {\r\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\r\n      `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.config.bTokenSymbol} ${Intl.get('lite','per-second')}`        \r\n      }\r\n    }\r\n    return ''\r\n  }\r\n  get dpmmFundingRateTip(){\r\n    if(this.fundingRate && this.fundingRate.fundingPerSecond && this.config){\r\n      if(Intl.locale === 'zh'){\r\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.fundingPerSecond}` +\r\n      `\\n ${Intl.get('lite','per-second')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingPerSecond} ${this.config.bTokenSymbol} `        \r\n      } else {\r\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.fundingPerSecond}` +\r\n      `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingPerSecond} ${this.config.bTokenSymbol} ${Intl.get('lite','per-second')}`        \r\n      }\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get rateTip(){\r\n    if(this.fundingRate && this.fundingRate.funding0 && this.position.markPrice){\r\n      return `${Intl.get('lite','rate-hover-one')} ${bg(this.fundingRate.funding0).div(bg(this.position.markPrice) ).times(bg(100)).toString()}% ${Intl.get('lite','rate-hover-two')}`\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get fundingCoefficientTip(){\r\n    if(this.contract && this.contract.fundingRateCoefficient && this.config.unit){\r\n     if(Intl.locale === 'zh'){\r\n      return `1${this.config.unit} ${Intl.get('lite','funding-coefficient-hove-one')} ${Intl.get('lite','funding-coefficient-hove-two')}${this.contract.fundingRateCoefficient} ${Intl.get('lite','funding-coefficient-hove-three')} ${bg(this.contract.fundingRateCoefficient).times(bg(86400)).toString()} ${Intl.get('lite','per-day')}\r\n      `\r\n     }else{\r\n      return `${Intl.get('lite','funding-coefficient-hove-one')} ${this.config.unit} ${Intl.get('lite','funding-coefficient-hove-two')} ${this.contract.fundingRateCoefficient} ${Intl.get('lite','funding-coefficient-hove-three')} ${bg(this.contract.fundingRateCoefficient).times(bg(86400)).toString()} ${Intl.get('lite','per-day')}\r\n      `\r\n     }\r\n      \r\n    }\r\n    return ''\r\n  }\r\n\r\n  get initialMarginRatioTip(){\r\n    if(this.contract && this.contract.initialMarginRatioOrigin){\r\n      return `${Intl.get('lite','in-the-money-initial')} = ${this.contract.initialMarginRatioOrigin}` +\r\n      `\\n${Intl.get('lite','out-of-money-initial')} = ${Intl.get('lite','in-max')}(${this.contract.initialMarginRatioOrigin}${Intl.get('lite','otm-ratio-initial')} ${this.contract.initialMarginRatioOrigin / 10})` +\r\n      `\\n\\n${Intl.get('lite','otm-ratio-max')}`\r\n    }\r\n    return ''\r\n  }\r\n  get maintenanceMarginRatioTip(){\r\n    if(this.contract && this.contract.maintenanceMarginRatioOrigin){\r\n      return `${Intl.get('lite','in-the-money-maintenance')} = ${this.contract.maintenanceMarginRatioOrigin}` +\r\n      `\\n${Intl.get('lite','out-of-money-maintenance')} = ${Intl.get('lite','in-max')}(${this.contract.maintenanceMarginRatioOrigin}${Intl.get('lite','otm-ratio-maintenance')} ${this.contract.maintenanceMarginRatioOrigin / 10})` +\r\n      `\\n\\n${Intl.get('lite','otm-ratio-max')}`\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get multiplierTip(){\r\n    if(this.contract && this.config){\r\n      return `${Intl.get('lite','the-notional-value-of')} ${this.contract.multiplier}${this.config.unit}`\r\n    }\r\n    return ''\r\n  }\r\n\r\n  get TransactionFeeTip(){\r\n    if(this.contract && (this.contract.feeRatioITM && this.contract.feeRatioOTM)){\r\n        return `${Intl.get('lite','transaction-fee-tip-in-the-money')} ${this.contract.underlier} ${Intl.get('lite','price')}  * ${bg(this.contract.feeRatioITM).times(bg(100)).toString()} %` +\r\n        `\\n ${Intl.get('lite','transaction-fee-tip-out-of-money')} * ${bg(this.contract.feeRatioOTM).times(bg(100)).toString()} %`\r\n    }\r\n    return ''\r\n  }\r\n  get TotalNetPositionTip(){\r\n    if(this.contract && this.fundingRate.tradersNetVolume && this.config){\r\n        return `${Intl.get('lite','notional-of-total-net-position')} ${this.fundingRate.tradersNetVolume} ${this.config.unit}`\r\n    }\r\n    return ''\r\n  }\r\n\r\n}"],"sourceRoot":""}