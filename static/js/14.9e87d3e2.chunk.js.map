{"version":3,"sources":["mobile/components/Mining/Pool.js","components/Button/Button.js","utils/DeriNumberFormat.js","components/TipWrapper/TipWrapper.js","hooks/useMiningPool.js","components/Pool/PoolBox.js","components/Mining/Pool/PoolPlacehold.js"],"names":["inject","observer","lang","loading","useMiningPool","loaded","v1Pools","v2Pools","optionPools","openPools","useState","curTab","setCurTab","tabCLassName","classNames","siwtchTab","tab","useEffect","className","onClick","map","pool","index","group","concat","Button","btnText","disabled","click","afterClick","checkApprove","wallet","spec","status","setStatus","isApproved","setIsApproved","pending","setPending","buttonText","setbuttonText","loadRef","useRef","a","beforeAction","afterAction","current","style","display","loadApproveStatus","detail","account","bTokenId","res","approve","success","alert","ref","marginRight","DeriNumberFormat","props","renderablity","setRenderablity","allowZero","others","value","undefined","isNaN","Math","abs","displayType","TipWrapper","currentNode","querySelectorAll","forEach","hoverNode","id","Date","getTime","hover","document","body","querySelector","addEventListener","event","createElement","cssText","window","screen","width","appendChild","innerText","currentTarget","getAttribute","setAttribute","rect","getBoundingClientRect","top","y","height","documentElement","scrollTop","offsetWidth","pageX","left","block","children","env","DeriEnv","get","chainInfo","config","isNew","setLoaded","pools","setPools","setV1Pools","setV2Pools","setOptionPools","legacyPools","setLegacyPools","preminingPools","setPreminingPools","setOpenPools","awiteOpenPools","setAwiteOpenPools","async","groupByNetwork","all","reduce","total","find","item","eqInNumber","list","length","push","poolInfo","network","symbol","address","formatAdd","version","chainId","airdrop","type","bTokenSymbol","symbolId","v2Configs","getContractAddressConfig","v1Configs","liteConfigs","optionConfigs","getPreminingContractConfig","openConfigListCache","update","FopenPools","configs","pos","findIndex","indexOf","liqPool","getPoolLiquidity","apyPool","getPoolInfoApy","Object","assign","name","liquidity","apy","toFixed","formatAddress","multiplier","slpConfig","getLpContractAddressConfig","liqInfo","lpApy","label","isLP","lapy","getLpPoolInfoApy","apy2","isSushiLP","Intl","isCakeLP","allConfigs","Promise","then","filter","p","retired","legacy","premining","preminings","isOpen","loadConfig","chainConfig","Card","card","buttonElement","setButtonElement","connected","setConnected","history","useHistory","connectWallet","connect","claimAirdrop","info","getUserInfoAllForAirDrop","valid","mintAirdrop","isConnected","url","gotoMining","thousandSeparator","decimalScale","title","suffix","poolClass","toUpperCase","target","rel","href","PoolPlacehold","isMobile","isBrowser","to"],"mappings":"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","file":"static/js/14.9e87d3e2.chunk.js","sourcesContent":["import React, {useEffect,useState} from 'react'\r\nimport './pool.less'\r\nimport './zh-pool.less'\r\nimport classNames from 'classnames';\r\nimport PoolBox from '../../../components/Pool/PoolBox';\r\nimport useMiningPool from '../../../hooks/useMiningPool';\r\nimport { inject, observer } from 'mobx-react';\r\nimport PoolPlacehold from '../../../components/Mining/Pool/PoolPlacehold';\r\n\r\n\r\nfunction Pool({lang,loading}){\r\n  const [loaded,pools,v1Pools,v2Pools,optionPools,legacyPools,preminingPools,openPools] = useMiningPool(true);\r\n  const [curTab, setCurTab] = useState('all')\r\n  const tabCLassName = classNames('filter-area',curTab)\r\n  const siwtchTab = (tab) => {\r\n    if(tab === curTab){\r\n      setCurTab('all')\r\n    }else{\r\n      setCurTab(tab);\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    loaded ? loading.loaded() : loading.loading()\r\n    return () => {}\r\n  }, [loaded])\r\n  return (\r\n    <div className=\"mining-info\">\r\n      <div className={tabCLassName}>\r\n      <span className='future-zone' onClick={() => siwtchTab('future')}>{lang['futures']}</span>\r\n        <span className='option-zone' onClick={() => siwtchTab('option')}>{lang['options']}</span>\r\n        <span className='separator-line'></span>\r\n        <span className='open-zone' onClick={() => siwtchTab('open')}>{lang['open-zone']}</span>\r\n      </div>\r\n      {curTab === 'all' &&<div className=\"pools\">\r\n      <div className=\"pools\">\r\n          {optionPools.map((pool,index) => <PoolBox group={pool} key={index} lang={lang}/>)}\r\n        </div>\r\n        {v2Pools.concat(v1Pools).map((pool,index) => <PoolBox group={pool} key={index} lang={lang}/>)}\r\n      </div>}\r\n      {curTab === 'future' &&<div className=\"pools\">\r\n        {v2Pools.concat(v1Pools).map((pool,index) => <PoolBox group={pool} key={index} lang={lang}/>)}\r\n      </div>}\r\n      {curTab === 'option' && <div className='pools'>\r\n        <div className=\"pools\">\r\n          {optionPools.map((pool,index) => <PoolBox group={pool} key={index} lang={lang}/>)}\r\n        </div>\r\n      </div>}\r\n      {curTab === 'open' && <div className='pools open-pool'>\r\n        {openPools.map((pool,index) => <PoolBox group={pool} key={index} lang={lang}/>)}\r\n        <PoolPlacehold lang={lang}></PoolPlacehold>\r\n      </div>}\r\n    </div>\r\n  )\r\n}\r\nexport default inject('version','loading')(observer(Pool))","import {useState,useRef,useEffect} from 'react';\r\nexport default function Button({btnText,className,disabled,click,afterClick,checkApprove,wallet,spec,lang}){\r\n  const [status, setStatus] = useState(disabled ? 'disabled' : 'enabled');\r\n  const [isApproved, setIsApproved] = useState(true);\r\n  const [pending, setPending] = useState(false);\r\n  const [buttonText, setbuttonText] = useState(btnText)\r\n  const loadRef = useRef(null)\r\n\r\n  const onClick = async () => {\r\n    if(status !== 'enabled') {\r\n      return ;\r\n    }\r\n    beforeAction()\r\n    const result = await click();    \r\n    if(result){\r\n      afterClick && afterClick()\r\n    } \r\n    afterAction()\r\n  }\r\n\r\n  const beforeAction = ()  => {\r\n    setStatus('disabled')\r\n    setPending(true);\r\n    loadRef.current && (loadRef.current.style.display = 'inline-block')\r\n  }\r\n\r\n  const afterAction = () => {\r\n    loadRef.current && (loadRef.current.style.display = 'none')\r\n    setStatus('enabled')\r\n    setPending(false);\r\n  }\r\n\r\n  const loadApproveStatus = async () => {\r\n    if(checkApprove && wallet && wallet.detail.account){\r\n      const res = await wallet.isApproved(spec.pool,spec.bTokenId)\r\n      setIsApproved(res);\r\n    }\r\n  }\r\n  const approve = async () => {\r\n    beforeAction();\r\n    const res = await wallet.approve(spec.pool,spec.bTokenId);\r\n    if(res.success){\r\n      setIsApproved(true);\r\n    } else {\r\n      setIsApproved(false)\r\n      alert(lang['approve-failed'])\r\n    }\r\n    afterAction();\r\n  }\r\n\r\n  const action = () => {\r\n    if(isApproved){\r\n      onClick();\r\n    } else {\r\n      approve();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadApproveStatus();\r\n    return () => {};\r\n  }, [wallet,spec,checkApprove]);\r\n\r\n  useEffect(() => {\r\n    if(btnText){\r\n      setbuttonText(btnText)\r\n    }\r\n    return () => {\r\n    }\r\n  }, [btnText])\r\n\r\n  return(\r\n    <button className={className} onClick={action} >\r\n        <span className='btn-loading-wrap'>\r\n          <span ref={loadRef}\r\n            className='spinner spinner-border spinner-border-sm'\r\n            style={{display : 'none' ,marginRight : '2'}}>\r\n          </span>\r\n        </span>\r\n          {pending ? lang['pending'] : (isApproved ? buttonText : lang['approve'])  }\r\n        </button>\r\n  )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport NumberFormat from 'react-number-format'\r\n\r\nexport default function DeriNumberFormat(props){\r\n  const [renderablity, setRenderablity] = useState('--');\r\n\r\n  useEffect(() => {\r\n    const {allowZero,...others} = props \r\n    if(((typeof props.value !== 'object' && props.value !== undefined && props.value !== '' && props.value !== 'NaN') || ((isNaN(props.value) && Math.abs(props.value)) === 0 && allowZero === true ))) {\r\n      setRenderablity(<NumberFormat {...others} displayType = 'text' />)\r\n    } \r\n    return () => {};\r\n  }, [props.value]);\r\n\r\n  return renderablity;\r\n}","import React, { useState, useEffect,useRef } from 'react'\r\n\r\nfunction TipWrapper(props){\r\n  const ref = useRef(null)\r\n  useEffect(() => {\r\n    const currentNode = ref.current\r\n    if(currentNode){\r\n      const hoverNodes = currentNode.querySelectorAll('[title]')\r\n      hoverNodes.forEach(hoverNode => {\r\n        const id = `hover-box-${new Date().getTime()}`\r\n        let hover = document.body.querySelector(`#${id}`)\r\n        hoverNode.addEventListener('mouseover',event => {\r\n          if(!hover) {\r\n            hover = document.createElement('div')\r\n            hover.style.cssText = `z-index : 1;min-width : 100px;max-width : ${window.screen.width}px ;font-size : 12px ;position : absolute;background-color: #2c2d31;border: 1px solid #AAAAAA;color: #AAAAAA;border-radius: 10px;padding: 4px;`\r\n            document.body.appendChild(hover)\r\n            hover.innerText = event.currentTarget.getAttribute('title')\r\n            event.currentTarget.setAttribute('title','')\r\n          } \r\n          hover.id = id\r\n          hover.style.display = 'block'\r\n          const rect = event.currentTarget.getBoundingClientRect()\r\n          hover.style.top = `${rect.y + rect.height + window.document.documentElement.scrollTop}px`\r\n          // hover.style.top = `${event.pageY + event.currentTarget.offsetHeight}px`\r\n          if(hover.offsetWidth + event.pageX > window.screen.width){\r\n            if(event.pageX - hover.offsetWidth >= 0){\r\n              hover.style.left = `${event.pageX - hover.offsetWidth}px`\r\n            } else {\r\n              const left = event.pageX - (hover.offsetWidth / 2) > 0 ? (event.pageX - (hover.offsetWidth / 2)) : 0;\r\n              hover.style.left = `${left}px`\r\n            }\r\n          } else {\r\n            hover.style.left = `${event.pageX}px`\r\n          }\r\n        })\r\n        currentNode.addEventListener('mouseout',event => {\r\n          if(hover){\r\n            hover.style.display = 'none'\r\n          }\r\n        })   \r\n      });\r\n    }\r\n  return () => {ref.current = null}\r\n  }, [])\r\n  return props.block ? <div ref={ref}>{props.children}</div> : <span ref={ref}>{props.children}</span>\r\n}\r\n\r\nexport default TipWrapper","import { useState, useEffect } from 'react';\r\nimport {\r\n  DeriEnv,\r\n  getContractAddressConfig,\r\n  getPoolLiquidity,\r\n  getPoolInfoApy,\r\n  getLpContractAddressConfig,\r\n  getLpPoolInfoApy,\r\n  openConfigListCache,\r\n  getPoolOpenConfigList,\r\n  getPreminingContractConfig\r\n} from '../lib/web3js/indexV2'\r\nimport config from '../config.json'\r\nimport { formatAddress, isLP, isSushiLP, isCakeLP, eqInNumber } from '../utils/utils';\r\nimport Intl from '../model/Intl';\r\nimport { version } from '@babel/core';\r\n\r\nconst env = DeriEnv.get();\r\nconst { chainInfo } = config[env]\r\n\r\nexport default function useMiningPool(isNew) {\r\n  const [loaded, setLoaded] = useState(false)\r\n  const [pools, setPools] = useState([])\r\n  const [v1Pools, setV1Pools] = useState([])\r\n  const [v2Pools, setV2Pools] = useState([])\r\n  const [optionPools, setOptionPools] = useState([])\r\n  const [legacyPools, setLegacyPools] = useState([])\r\n  const [preminingPools, setPreminingPools] = useState([])\r\n  const [openPools, setOpenPools] = useState([])\r\n  const [awiteOpenPools, setAwiteOpenPools] = useState([])\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const loadConfig = async () => {\r\n      const mapConfig = async (config) => {\r\n        const liqPool = await getPoolLiquidity(config.chainId, config.pool, config.bTokenId) || {}\r\n        const apyPool = await getPoolInfoApy(config.chainId, config.pool, config.bTokenId) || {}\r\n        const pool = config.pool || ''\r\n        return Object.assign(config, {\r\n          network: chainInfo[config.chainId] && chainInfo[config.chainId].name,\r\n          liquidity: liqPool.liquidity,\r\n          apy: ((+apyPool.apy) * 100).toFixed(2),\r\n          formatAdd: formatAddress(pool),\r\n          address: pool,\r\n          type: 'perpetual',\r\n          buttonText: 'STAKING',\r\n          multiplier: apyPool.multiplier\r\n        })\r\n      }\r\n      const groupByNetwork = pools => {\r\n        const all = []\r\n        pools.reduce((total, pool) => {\r\n          const find = total.find(item => eqInNumber(item['pool']['address'], pool['address']))\r\n          if (find && find.list.length < 5) {\r\n            find['list'].push(pool)\r\n          } else {\r\n            const poolInfo = {\r\n              pool: {\r\n                network: pool.network,\r\n                symbol: pool.symbol,\r\n                address: pool.address,\r\n                formatAdd: pool.formatAdd,\r\n                version: pool.version,\r\n                // innoDisplay : pool.version=== 'v2_lite' ? Intl.get('mining','v2_lite') : pool.version,\r\n                chainId: pool.chainId,\r\n                airdrop: pool.airdrop,\r\n                type: pool.type,\r\n                bTokenSymbol: pool.bTokenSymbol,\r\n                bTokenId: pool.bTokenId,\r\n                symbolId: pool.symbolId\r\n              },\r\n              list: [pool]\r\n            }\r\n            total.push(poolInfo)\r\n          }\r\n          return total;\r\n        }, all)\r\n        return all;\r\n      }\r\n      let v2Configs = getContractAddressConfig(env, 'v2')\r\n      let v1Configs = getContractAddressConfig(env, 'v1')\r\n      const liteConfigs = getContractAddressConfig(env, 'v2_lite')\r\n      const optionConfigs = getContractAddressConfig(env, 'option')\r\n      const preminingPools = getPreminingContractConfig(env);\r\n      // const openPools = getContractAddressConfig(env,'v2_lite_open')\r\n      const FopenPools = async () => {\r\n        await openConfigListCache.update()\r\n        return getContractAddressConfig(env, 'v2_lite_open')\r\n      }\r\n      const openPools = await FopenPools()\r\n      const all = []\r\n      let configs = v2Configs.concat(v1Configs).concat(preminingPools).concat(liteConfigs).concat(optionConfigs).concat(openPools).reduce((total, config) => {\r\n        if (config.version === 'v2_lite_open') {\r\n          const pos = total.findIndex(item => item.chainId === config.chainId && item.pool === config.pool  && config.version === item.version)\r\n          if ((config.version === 'v2' || config.version === 'v2_lite' || config.version === 'option' || config.version === 'v2_lite_open') && pos > -1 && total[pos].symbol.indexOf(config.symbol) === -1) {\r\n            total[pos].symbol += `,${config.symbol}`\r\n          } else {\r\n            total.push(config)\r\n          }\r\n        } else {\r\n          const pos = total.findIndex(item => item.chainId === config.chainId && item.bTokenSymbol === config.bTokenSymbol && config.version === item.version)\r\n          if ((config.version === 'v2' || config.version === 'v2_lite' || config.version === 'option' || config.version === 'v2_lite_open') && pos > -1 && total[pos].symbol.indexOf(config.symbol) === -1) {\r\n            total[pos].symbol += `,${config.symbol}`\r\n          } else {\r\n            total.push(config)\r\n          }\r\n        }\r\n        return total;\r\n      }, all);\r\n\r\n      configs = configs.map(mapConfig)\r\n      const slpConfig = getLpContractAddressConfig(env).map(async config => {\r\n        const liqInfo = await getPoolLiquidity(config.chainId, config.pool) || {}\r\n        const apyPool = await getPoolInfoApy(config.chainId, config.pool) || {}\r\n        const pool = config.pool || ''\r\n        let lpApy;\r\n        let label;\r\n        if (isLP(config.pool)) {\r\n          let lapy = await getLpPoolInfoApy(config.chainId, config.pool);\r\n          lpApy = lapy && ((+lapy.apy2) * 100).toFixed(2);\r\n        }\r\n        if (isSushiLP(config.pool)) {\r\n          label = Intl.get('mining', 'sushi-apy')\r\n        }\r\n        if (isCakeLP(config.pool)) {\r\n          label = Intl.get('mining', 'cake-apy')\r\n        }\r\n        return Object.assign(config, {\r\n          network: chainInfo[config.chainId].name,\r\n          liquidity: liqInfo.liquidity,\r\n          apy: ((+apyPool.apy) * 100).toFixed(2),\r\n          formatAdd: formatAddress(pool),\r\n          lpApy: lpApy,\r\n          address: pool,\r\n          type: 'lp',\r\n          label: label,\r\n          buttonText: 'STAKING'\r\n        })\r\n      })\r\n      const allConfigs = configs.concat(slpConfig)\r\n      Promise.all(allConfigs).then(pools => {\r\n        const airDrop = {\r\n          network: 'BSC',\r\n          bTokenSymbol: 'GIVEAWAY',\r\n          liquidity: '2600',\r\n          symbol: '--',\r\n          airdrop: true,\r\n          chainId: 56,\r\n          buttonText: 'CLAIM'\r\n        }\r\n        // pools.push(airDrop)\r\n        let v1Pools = pools.filter(p => (p.version === 'v1' || !p.version) && !p.retired)\r\n        let v2Pools = pools.filter(p => (p.version === 'v2' || p.version === 'v2_lite') && !p.retired)\r\n        let optionPools = pools.filter(p => (p.version === 'option') && !p.retired)\r\n        const legacy = pools.filter(p => p.retired && !p.premining)\r\n        const preminings = pools.filter(p => p.retired && p.premining)\r\n        let openPools = pools.filter(p => p.isOpen)\r\n        //新版本按照网络来分组\r\n        if (isNew) {\r\n          v1Pools = groupByNetwork(v1Pools);\r\n          v2Pools = groupByNetwork(v2Pools);\r\n          optionPools = groupByNetwork(optionPools)\r\n          openPools = groupByNetwork(openPools)\r\n        }\r\n        setV2Pools(v2Pools);\r\n        setV1Pools(v1Pools);\r\n        setOptionPools(optionPools)\r\n        setPools(pools);\r\n        setLegacyPools(legacy);\r\n        setPreminingPools(preminings)\r\n        setOpenPools(openPools)\r\n        // if(openPools.length){\r\n        setLoaded(true)\r\n        // }\r\n      })\r\n    }\r\n    loadConfig()\r\n    return () => pools.length = 0\r\n  }, [])\r\n  return [loaded, pools, v1Pools, v2Pools, optionPools, legacyPools, preminingPools, openPools];\r\n}","import React, { useState, useEffect } from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport config from  '../../config.json'\r\nimport { DeriEnv, getUserInfoAllForAirDrop, connectWallet, mintAirdrop, isUnlocked, unlock } from '../../lib/web3js/indexV2';\r\nimport DeriNumberFormat from '../../utils/DeriNumberFormat';\r\nimport { inject, observer } from 'mobx-react';\r\nimport Button from '../Button/Button.js';\r\nimport { eqInNumber, addParam } from '../../utils/utils.js';\r\nimport classNames from 'classnames';\r\nimport TipWrapper from '../TipWrapper/TipWrapper.js';\r\nimport { version } from '@babel/core';\r\nconst chainConfig = config[DeriEnv.get()]['chainInfo'];\r\n\r\nfunction PoolBox({wallet,group = {},lang}){\r\n  const {pool,list} = group\r\n\r\n  \r\n\r\n  const poolClass = classNames('pool',{\r\n    'only-one' : list.length === 1 ,\r\n    'full' : list.length === 5\r\n  })\r\n\r\n  return(\r\n    <div className={poolClass} >\r\n      <div className='pool-header' >\r\n        <div className='left'>\r\n          <div className=\"network\">\r\n            {pool.network && pool.network.toUpperCase()}\r\n          </div>\r\n          <div className='pool-desc'>\r\n            <span className='symbol'>\r\n                <span className='symbol-label'>{lang['symbol']}:</span>\r\n                <span className='symbol-value'>{pool.symbol}</span>  \r\n            </span>\r\n            <span className='address'>\r\n              <span className='address-label'>{lang['address']}:</span>\r\n                {!pool.airdrop ? <a target='_blank' rel='noreferrer' href={`${chainConfig[pool.chainId] && chainConfig[pool.chainId]['viewUrl']}/address/${pool.address}`}> \r\n                  {pool.formatAdd}\r\n                </a> : '--'}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className='version'>{lang[pool.version]}</div>\r\n      </div>\r\n      <div className=\"pool-info\">\r\n        {list.map((card,index) => <Card card={card} key={index} index={index} pool={pool} list={list} wallet={wallet} lang={lang}/>)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Card({wallet,pool,card,index,list,lang}) {\r\n  const [buttonElement, setButtonElement] = useState('');\r\n  const [connected, setConnected] = useState(false)\r\n  const history = useHistory();\r\n  const gotoMining = url => {\r\n    history.push(url)\r\n  }\r\n  const connectWallet = () => {\r\n    wallet.connect().then(() => {\r\n      setConnected(true)\r\n    })\r\n  }\r\n  const claimAirdrop = async () =>{\r\n    let info =  await getUserInfoAllForAirDrop(wallet.detail.account)\r\n    if(!info.valid){\r\n      alert(lang['no-deri-to-claim']);\r\n      return;\r\n    }\r\n    if(!eqInNumber(wallet.detail.chainId,info.chainId)){\r\n      alert(lang['please-switch-to-BSC-to-claim-deri'])\r\n      return;\r\n    }\r\n    let res = await mintAirdrop(info.chainId,wallet.detail.account)\r\n    if(!res.success){\r\n      alert(lang['claim-failed'])\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(pool && pool.airdrop){\r\n      if(!wallet.isConnected()) {\r\n        setButtonElement(<Button btnText={lang['connect-wallet']} click={connectWallet} lang={lang}></Button>)\r\n      } else {\r\n        setButtonElement(<Button btnText={lang['claim']} click={claimAirdrop} lang={lang}></Button>)\r\n      }\r\n    } else {\r\n      let url = `/mining/${pool.version || 'v1'}/${pool.chainId}/${card.type}/${card.symbol}/${card.bTokenSymbol}/${pool.address}`\r\n      if(card.bTokenId){\r\n        url = `${url}?baseTokenId=${card.bTokenId}`\r\n      }\r\n      if(card.symbolId){\r\n        if(url.indexOf('?') > 0){\r\n          url = `${url}&symbolId=${card.symbolId}`\r\n        } else {\r\n          url = `${url}?symbolId=${card.symbolId}`\r\n        }\r\n      }\r\n      setButtonElement(        \r\n          <button onClick={() => gotoMining(url)}>\r\n            {lang['staking']}\r\n          </button>\r\n        )\r\n    }    \r\n    return () => {};\r\n  }, [wallet.detail.account,connected]);\r\n  return (\r\n    <>\r\n      <div className=\"info\">\r\n        <div className=\"top-info\">\r\n          <div className='pool-top'>\r\n            <span className={`logo ${card.bTokenSymbol}`} >\r\n              {/* {pool.version === 'v2_lite_open' &&<>\r\n                <img src = {`https://pancakeswap.finance/images/tokens/${card.bTokenSymbol}.svg`} />\r\n              </>} */}\r\n            </span>\r\n            <span className=\"base-token\">{card.bTokenSymbol}</span>\r\n          </div>\r\n          <div className=\"pool-detail\">\r\n            <div className='liq'>\r\n              <span className='title'>{card.airdrop ? lang['total'] : lang['pool-liq']}</span>\r\n              <DeriNumberFormat value={card.liquidity} displayType='text' thousandSeparator={true} decimalScale={card.lpApy ? 7 : 0}/>\r\n            </div>\r\n            <div className='multiplier'>\r\n            {card.multiplier && <>\r\n              <span>{lang['multiplier']}</span>\r\n              <TipWrapper block={false}>\r\n                <span className='multiplier-value' title={lang['multiplier-tip']}>{card.multiplier}x</span>\r\n              </TipWrapper>\r\n              </>}\r\n            </div>\r\n            <div className=\"apy\">\r\n              {!card.isOpen &&<>\r\n              <span>{lang['apy']}</span>\r\n              <TipWrapper block={false}>\r\n                <span className={card.lpApy ? 'sushi-apy-underline' : ''} title={ card.lpApy && lang['deri-apy']}>\r\n                  {card.apy ? <DeriNumberFormat value={card.apy} suffix='%' displayType='text' allowZero={true} decimalScale={2}/> : '--'}                 \r\n                </span>\r\n                {card.lpApy && card.lpApy > 0 &&<>\r\n                <span> + </span>\r\n                <span className={card.lpApy ? 'sushi-apy-underline' : '' } title={ card.lpApy && card.label}> <DeriNumberFormat value={card.lpApy} displayType='text' suffix='%' decimalScale={2}/></span>\r\n                </>}\r\n              </TipWrapper>\r\n              </>}\r\n            </div>\r\n          </div>\r\n      </div>\r\n      <div className=\"bottom-btn\">\r\n        {buttonElement}\r\n      </div>\r\n    </div>\r\n    {index !== list.length-1 && <div className='top-line'></div>}\r\n  </>)\r\n}\r\nexport default  inject('wallet','version')(observer(PoolBox))","import './poolPlacehold.less'\r\nimport { Link } from 'react-router-dom'\r\nimport {isMobile,isBrowser} from 'react-device-detect'\r\n\r\nexport default function PoolPlacehold({lang}){\r\n  return(\r\n    <div className='pool-placehold'>\r\n      <div className='header'>\r\n        <div className='title'>{lang['add-pool']}</div>\r\n      </div>\r\n      <div className='pool-body'>\r\n        <div className='info'>\r\n          {/* <div className='coming-soon'>{lang['coming-soon']}</div> */}\r\n          <div>{lang['add-pool-text']}</div>\r\n        </div>\r\n        <div className='btn-c'>\r\n        {isMobile &&<>\r\n          <button onClick={()=>{alert(lang['please-operat'])}}>{lang['add']}</button>\r\n        </>}\r\n        {isBrowser &&\r\n          <Link to='/addpool'><button>{lang['add']}</button></Link> \r\n        }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}"],"sourceRoot":""}